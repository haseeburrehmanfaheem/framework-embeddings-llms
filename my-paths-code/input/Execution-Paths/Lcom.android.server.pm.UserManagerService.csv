"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
","public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
","public UserInfo getUserInfo(int p1){
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	boolean v13 = v3.isGuest();
	String v14 = UserManagerService.getGuestName();
	UserInfo v15 = new UserInfo(v3);
	UserInfo.name = phiInstruction;
	UserInfo v12 = v15;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getString(I)Ljava/lang/String; > 2,3 @5 exception:4,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","public UserInfo getUserInfo(int p1){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	UserInfo v6 = p0.getUserInfoLU(p1);
	boolean v9 = UserManager.isUserTypeGuest(this.userType);
	boolean v8 = v9;
	String v11 = this.mContext.getString(17040437);
	String v10 = v11;
	UserInfo v12 = new UserInfo(v6);
	UserInfo.name = phiInstruction;
	UserInfo v7 = v12;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getString(I)Ljava/lang/String; > 2,3 @5 exception:4,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","public UserInfo getUserInfo(int p1){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	UserInfo v6 = p0.getUserInfoLU(p1);
	boolean v9 = UserManager.isUserTypeGuest(this.userType);
	boolean v8 = v9;
	String v11 = this.mContext.getString(17040437);
	String v10 = v11;
	UserInfo v12 = new UserInfo(v6);
	UserInfo.name = phiInstruction;
	UserInfo v7 = v12;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getString(I)Ljava/lang/String; > 2,3 @5 exception:4,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
return 2,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	return p1;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","public UserInfo getUserInfo(int p1){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	UserInfo v6 = p0.getUserInfoLU(p1);
	boolean v9 = UserManager.isUserTypeGuest(this.userType);
	boolean v8 = v9;
	String v11 = this.mContext.getString(17040437);
	String v10 = v11;
	UserInfo v7 = v6;
	return v7;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
","public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","public int getUserBadgeResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgePlain()I > 6 @18 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgePlain, <Primordial,I> > 1,
return 2,
return 11,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getBadgePlain();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgePlain(){
	return this.mBadgePlain;
}
-----
","public int getUserBadgeResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	int v11 = this.mBadgePlain;
	return v11;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserBadgeResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserBadgeResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserBadgeResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserSwitcherEnabled(I)Z","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 3 @2 exception:4,
7 = invokestatic < Application, Landroid/content/res/Resources, getSystem()Landroid/content/res/Resources; > @6 exception:6,
10 = invokevirtual < Application, Landroid/content/res/Resources, getBoolean(I)Z > 7,8 @13 exception:9,
13 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 5,11,10 @19 exception:12,
conditional branch(eq, to iindex=-1) 13,15,
goto (from iindex= 15 to iindex = 2),
16 = phi  14,15,
18 = invokestatic < Application, Landroid/os/UserManager, supportsMultipleUsers()Z > @30 exception:17,
conditional branch(eq, to iindex=-1) 18,15,
21 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,19,2 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,15,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
24 = invokestatic < Application, Landroid/os/UserManager, isDeviceInDemoMode(Landroid/content/Context;)Z > 22 @46 exception:23,
conditional branch(ne, to iindex=-1) 24,15,
conditional branch(eq, to iindex=-1) 16,15,
goto (from iindex= 29 to iindex = 2),
30 = phi  14,15,
return 30,","depth : 0
public boolean isUserSwitcherEnabled(int p1){
	boolean v7 = UserManager.isDeviceInDemoMode(this.mContext);
	return phiInstruction;
}
-----
","public boolean isUserSwitcherEnabled(int p1){
	boolean v7 = UserManager.isDeviceInDemoMode(this.mContext);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","0","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 2,5,
8 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 8 @8 exception:9,
12 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 8,10 @13 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 8,2 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 8 @19 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @32 exception:22,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
monitorexit 24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @45 exception:35,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
","public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getting profiles related to user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v6);
	long v8 = Binder.clearCallingIdentity();
	List v9 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v8);
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","1","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 2,5,
8 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 8 @8 exception:9,
12 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 8,10 @13 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 8,2 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 8 @19 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @32 exception:22,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
8 = new <Application,Ljava/util/ArrayList>@4,
10 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @6 exception:9,
invokespecial < Application, Ljava/util/ArrayList, <init>(I)V > 8,10 @10 exception:11,
34 = phi  33,12,
14 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @14 exception:13,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @45 exception:35,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
","public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getting profiles related to user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v8 = UserManagerService.hasQueryOrCreateUsersPermission();
	long v9 = Binder.clearCallingIdentity();
	IntArray v11 = UserManagerService.getProfileIdsLU(p1, 0, p2);
	ArrayList v12 = new ArrayList(v13);
	int v13 = v11.size();
	int v15 = v11.size();
	List v10 = v12;
	Binder.restoreCallingIdentity(v9);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","1","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 2,5,
7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @28 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
19 = phi  18,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @32 exception:22,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
8 = new <Application,Ljava/util/ArrayList>@4,
10 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @6 exception:9,
invokespecial < Application, Ljava/util/ArrayList, <init>(I)V > 8,10 @10 exception:11,
34 = phi  33,12,
14 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @14 exception:13,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @45 exception:35,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	long v3 = Binder.clearCallingIdentity();
	List v4 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v3);
	return v4;
}
-----
depth : 1
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
","public List getProfiles(int p1, boolean p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	long v4 = Binder.clearCallingIdentity();
	IntArray v6 = UserManagerService.getProfileIdsLU(p1, 0, p2);
	ArrayList v7 = new ArrayList(v8);
	int v8 = v6.size();
	int v10 = v6.size();
	List v5 = v7;
	Binder.restoreCallingIdentity(v4);
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","2","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 2,5,
8 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 8 @8 exception:9,
12 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 8,10 @13 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 8,2 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 8 @19 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @32 exception:22,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:5,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 8 @8 exception:9,
invokespecial < Application, Landroid/util/IntArray, <init>(I)V > 7,10 @12 exception:11,
conditional branch(ne, to iindex=-1) 6,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
15 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 13 @20 exception:14,
47 = phi  46,12,
conditional branch(ge, to iindex=-1) 47,15,
return 7,
8 = new <Application,Ljava/util/ArrayList>@4,
10 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @6 exception:9,
invokespecial < Application, Ljava/util/ArrayList, <init>(I)V > 8,10 @10 exception:11,
34 = phi  33,12,
14 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @14 exception:13,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @45 exception:35,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	int v4 = this.mUsers.size();
	return v1;
}
-----
","public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getting profiles related to user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v9 = UserManagerService.hasCreateUsersPermission();
	int v10 = Binder.getCallingUid();
	boolean v11 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v10);
	boolean v8 = phiInstruction;
	long v12 = Binder.clearCallingIdentity();
	UserInfo v15 = UserManagerService.getUserInfoLU(p1);
	IntArray v16 = new IntArray(v17);
	int v17 = this.mUsers.size();
	int v19 = this.mUsers.size();
	IntArray v14 = v16;
	ArrayList v20 = new ArrayList(v21);
	int v21 = v14.size();
	int v23 = v14.size();
	List v13 = v20;
	Binder.restoreCallingIdentity(v12);
	return v13;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","2","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 2,5,
8 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 8 @8 exception:9,
12 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 8,10 @13 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 8,2 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 8 @19 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @32 exception:22,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:5,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 8 @8 exception:9,
invokespecial < Application, Landroid/util/IntArray, <init>(I)V > 7,10 @12 exception:11,
conditional branch(ne, to iindex=-1) 6,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
15 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 13 @20 exception:14,
47 = phi  46,12,
conditional branch(ge, to iindex=-1) 47,15,
return 7,
8 = new <Application,Ljava/util/ArrayList>@4,
10 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @6 exception:9,
invokespecial < Application, Ljava/util/ArrayList, <init>(I)V > 8,10 @10 exception:11,
34 = phi  33,12,
14 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @14 exception:13,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @45 exception:35,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	int v4 = this.mUsers.size();
	return v1;
}
-----
","public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getting profiles related to user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v9 = UserManagerService.hasCreateUsersPermission();
	int v10 = Binder.getCallingUid();
	boolean v11 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v10);
	boolean v8 = phiInstruction;
	long v12 = Binder.clearCallingIdentity();
	UserInfo v15 = UserManagerService.getUserInfoLU(p1);
	IntArray v16 = new IntArray(v17);
	int v17 = this.mUsers.size();
	int v19 = this.mUsers.size();
	IntArray v14 = v16;
	ArrayList v20 = new ArrayList(v21);
	int v21 = v14.size();
	int v23 = v14.size();
	List v13 = v20;
	Binder.restoreCallingIdentity(v12);
	return v13;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","2","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 2,5,
8 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 8 @8 exception:9,
12 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 8,10 @13 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 8,2 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 8 @19 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @32 exception:22,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:5,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 8 @8 exception:9,
invokespecial < Application, Landroid/util/IntArray, <init>(I)V > 7,10 @12 exception:11,
conditional branch(ne, to iindex=-1) 6,12,
return 7,
8 = new <Application,Ljava/util/ArrayList>@4,
10 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @6 exception:9,
invokespecial < Application, Ljava/util/ArrayList, <init>(I)V > 8,10 @10 exception:11,
34 = phi  33,12,
14 = invokevirtual < Application, Landroid/util/IntArray, size()I > 7 @14 exception:13,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @45 exception:35,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	return v1;
}
-----
","public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getting profiles related to user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v9 = UserManagerService.hasCreateUsersPermission();
	int v10 = Binder.getCallingUid();
	boolean v11 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v10);
	boolean v8 = phiInstruction;
	long v12 = Binder.clearCallingIdentity();
	UserInfo v15 = UserManagerService.getUserInfoLU(p1);
	IntArray v16 = new IntArray(v17);
	int v17 = this.mUsers.size();
	IntArray v14 = v16;
	ArrayList v19 = new ArrayList(v20);
	int v20 = v14.size();
	int v22 = v14.size();
	List v13 = v19;
	Binder.restoreCallingIdentity(v12);
	return v13;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
invokespecial < Application, Landroid/os/UserManager$EnforcingUser, <init>(II)V > 13,14,15 @32 exception:16,
18 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 9,13 @35 exception:17,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
","public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v5 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v6 = new UserManager$EnforcingUser(-10000,1);
	boolean v8 = v3.add(v6);
	RestrictionsSet v9 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v10 = v9.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v3.addAll(v10);
	List v12 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v13 = v3.addAll(v12);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
invokespecial < Application, Landroid/os/UserManager$EnforcingUser, <init>(II)V > 13,14,15 @32 exception:16,
18 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 9,13 @35 exception:17,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
invokespecial < Application, Lcom/android/server/pm/RestrictionsSet, <init>()V > 8 @12 exception:9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 10,2,8 @17 exception:11,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v7 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v9 = v8.getBoolean(p1, 0);
	boolean v5 = phiInstruction;
	UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
	boolean v12 = v3.add(v10);
	Object v14 = this.mDevicePolicyLocalUserRestrictions.get(p2);
	RestrictionsSet v15 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p2, v15);
	RestrictionsSet v13 = phiInstruction;
	ArrayList v19 = new ArrayList();
	int v21 = this.mUserRestrictions.size();
	List v18 = v19;
	boolean v22 = v3.addAll(v18);
	ArrayList v24 = new ArrayList();
	int v26 = this.mUserRestrictions.size();
	List v23 = v24;
	boolean v27 = v3.addAll(v23);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
invokespecial < Application, Lcom/android/server/pm/RestrictionsSet, <init>()V > 8 @12 exception:9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 10,2,8 @17 exception:11,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	RestrictionsSet v5 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v6 = v5.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v7 = v2.addAll(v6);
	List v8 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v7 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v9 = v8.getBoolean(p1, 0);
	boolean v5 = phiInstruction;
	Object v11 = this.mDevicePolicyLocalUserRestrictions.get(p2);
	RestrictionsSet v12 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p2, v12);
	RestrictionsSet v10 = phiInstruction;
	ArrayList v16 = new ArrayList();
	int v18 = this.mUserRestrictions.size();
	List v15 = v16;
	boolean v19 = v3.addAll(v15);
	ArrayList v21 = new ArrayList();
	int v23 = this.mUserRestrictions.size();
	List v20 = v21;
	boolean v24 = v3.addAll(v20);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
invokespecial < Application, Landroid/os/UserManager$EnforcingUser, <init>(II)V > 13,14,15 @32 exception:16,
18 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 9,13 @35 exception:17,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v7 = UserManagerService.hasCreateUsersPermission();
	boolean v9 = this.USER_RESTRICTIONS.contains(p1);
	int v10 = Binder.getCallingUid();
	IPackageManager v11 = AppGlobals.getPackageManager();
	String v12 = v11.getPackagesForUid(v10);
	boolean v22 = UserRestrictionsUtils.isSystemApp(v10, phiInstruction);
	boolean v8 = 0;
	Object v26 = this.mUserRestrictions.get(p2);
	Bundle v25 = v26;
	boolean v27 = v25.getBoolean(p1, 0);
	boolean v5 = phiInstruction;
	UserManager$EnforcingUser v28 = new UserManager$EnforcingUser(-10000,1);
	boolean v30 = v3.add(v28);
	RestrictionsSet v31 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v32 = v31.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v33 = v3.addAll(v32);
	List v34 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v35 = v3.addAll(v34);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @87 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 45,52 @91 exception:53,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
invokespecial < Application, Landroid/os/UserManager$EnforcingUser, <init>(II)V > 13,14,15 @32 exception:16,
18 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 9,13 @35 exception:17,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.e(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v7 = UserManagerService.hasCreateUsersPermission();
	boolean v9 = this.USER_RESTRICTIONS.contains(p1);
	int v10 = Binder.getCallingUid();
	IPackageManager v11 = AppGlobals.getPackageManager();
	String v12 = v11.getPackagesForUid(v10);
	boolean v22 = UserRestrictionsUtils.isSystemApp(v10, phiInstruction);
	boolean v8 = 0;
	Object v26 = this.mUserRestrictions.get(p2);
	Bundle v25 = v26;
	boolean v27 = v25.getBoolean(p1, 0);
	boolean v5 = phiInstruction;
	UserManager$EnforcingUser v28 = new UserManager$EnforcingUser(-10000,1);
	boolean v30 = v3.add(v28);
	RestrictionsSet v31 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v32 = v31.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v33 = v3.addAll(v32);
	List v34 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v35 = v3.addAll(v34);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	RestrictionsSet v5 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v6 = v5.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v7 = v2.addAll(v6);
	List v8 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v7 = UserManagerService.hasCreateUsersPermission();
	boolean v9 = this.USER_RESTRICTIONS.contains(p1);
	int v10 = Binder.getCallingUid();
	IPackageManager v11 = AppGlobals.getPackageManager();
	String v12 = v11.getPackagesForUid(v10);
	boolean v22 = UserRestrictionsUtils.isSystemApp(v10, phiInstruction);
	boolean v8 = 0;
	Object v26 = this.mUserRestrictions.get(p2);
	Bundle v25 = v26;
	boolean v27 = v25.getBoolean(p1, 0);
	boolean v5 = phiInstruction;
	RestrictionsSet v28 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v29 = v28.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v30 = v3.addAll(v29);
	List v31 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v32 = v3.addAll(v31);
	return v3;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","0","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
","public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
8 = binaryop(and) 6 , 7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 7 to iindex = 3),
11 = phi  5,10,
return 11,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isDemo(){
	boolean v1 = UserManager.isUserTypeDemo(this.userType);
	return phiInstruction;
}
-----
","public boolean isDemoUser(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	boolean v15 = UserManager.isUserTypeDemo(this.userType);
	boolean v14 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
8 = binaryop(and) 6 , 7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 2),
11 = phi  5,10,
return 11,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isDemo(){
	boolean v1 = UserManager.isUserTypeDemo(this.userType);
	return phiInstruction;
}
-----
","public boolean isDemoUser(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	boolean v15 = UserManager.isUserTypeDemo(this.userType);
	boolean v14 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
","public boolean isDemoUser(int p1){
	int v3 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v3);
	boolean v4 = phiInstruction;
	boolean v2 = v4;
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isDemo();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
","public boolean isDemoUser(int p1){
	int v3 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v3);
	boolean v4 = phiInstruction;
	boolean v2 = v4;
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isDemo();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
","public boolean isDemoUser(int p1){
	int v3 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v3);
	boolean v4 = phiInstruction;
	boolean v2 = v4;
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isDemo();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","removeUserEvenWhenDisallowed(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @5 exception:5,
return 6,","depth : 0
public boolean removeUserEvenWhenDisallowed(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}
-----
","public boolean removeUserEvenWhenDisallowed(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserEvenWhenDisallowed(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @5 exception:5,
return 6,","depth : 0
public boolean removeUserEvenWhenDisallowed(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
","public boolean removeUserEvenWhenDisallowed(int p1){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v3 = p0.removeUserUnchecked(p1);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserEvenWhenDisallowed(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @5 exception:5,
return 6,","depth : 0
public boolean removeUserEvenWhenDisallowed(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean removeUserEvenWhenDisallowed(int p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v4 = p0.removeUserUnchecked(p1);
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","0","8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:7,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
32 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @60 exception:31,
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
38 = invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, getSystemUiServiceComponent()Landroid/content/ComponentName; > 36 @82 exception:37,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
42 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,40 @90 exception:41,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @105 exception:49,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @114 exception:94,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
","public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","1","8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:7,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
32 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @60 exception:31,
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
18 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @14 exception:17,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
32 = invokevirtual < Application, Landroid/content/pm/ShortcutServiceInternal, isForegroundDefaultLauncher(Ljava/lang/String;I)Z > 30,2,3 @43 exception:31,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
38 = invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, getSystemUiServiceComponent()Landroid/content/ComponentName; > 36 @82 exception:37,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
42 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,40 @90 exception:41,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @105 exception:49,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
51 = invokestatic < Application, Landroid/app/ActivityManager, getService()Landroid/app/IActivityManager; > @72 exception:50,
54 = invokeinterface < Application, Landroid/app/IActivityManager, stopUser(IZLandroid/app/IStopUserCallback;)I > 51,2,52,11 @77 exception:53,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, killForegroundAppsForUser(I)V > 66,2 @88 exception:67,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @114 exception:94,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
","public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	UserManagerService.verifyCallingPackage(p1, v2);
	boolean v5 = UserManagerService.hasManageUsersPermission();
	int v6 = UserHandle.getUserId(v2);
	boolean v7 = UserManagerService.isSameProfileGroupNoChecks(v6, p3);
	boolean v8 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", v2);
	Object v9 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v10 = v9.isForegroundDefaultLauncher(p1, v2);
	Object v12 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v12;
	PackageManagerInternal v11 = this.mPmInternal;
	ComponentName v13 = v11.getSystemUiServiceComponent();
	String v14 = v13.getPackageName();
	boolean v15 = p1.equals(v14);
	long v16 = Binder.clearCallingIdentity();
	UserInfo v18 = UserManagerService.getUserInfoLU(p3);
	UserInfo v19 = UserManagerService.getProfileParentLU(p3);
	boolean v20 = v18.isManagedProfile();
	boolean v21 = v18.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v22 = UserManagerService.getUserDataLU(UserInfo.id);
	UserManagerService.writeUserLP(v22);
	IActivityManager v24 = ActivityManager.getService();
	int v25 = v24.stopUser(p3, 1, 0);
	Object v26 = LocalServices.getService(ActivityManagerInterna.class);
	v26.killForegroundAppsForUser(p3);
	UserManagerService.logQuietModeEnabled(p3, 1, p1);
	UserHandle v29 = v18.getUserHandle();
	UserHandle v30 = v19.getUserHandle();
	UserManagerService.broadcastProfileAvailabilityChanges(v29, v30, 1);
	Binder.restoreCallingIdentity(v16);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","2","8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:7,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
32 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @60 exception:31,
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 4 @2 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @6 exception:7,
11 = invokeinterface < Application, Lcom/android/server/pm/Computer, getPackageUid(Ljava/lang/String;JI)I > 6,2,9,8 @12 exception:10,
conditional branch(ne, to iindex=-1) 11,3,
return,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
18 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @14 exception:17,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
32 = invokevirtual < Application, Landroid/content/pm/ShortcutServiceInternal, isForegroundDefaultLauncher(Ljava/lang/String;I)Z > 30,2,3 @43 exception:31,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
38 = invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, getSystemUiServiceComponent()Landroid/content/ComponentName; > 36 @82 exception:37,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
42 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,40 @90 exception:41,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @105 exception:49,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
51 = invokestatic < Application, Landroid/app/ActivityManager, getService()Landroid/app/IActivityManager; > @72 exception:50,
54 = invokeinterface < Application, Landroid/app/IActivityManager, stopUser(IZLandroid/app/IStopUserCallback;)I > 51,2,52,11 @77 exception:53,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, killForegroundAppsForUser(I)V > 66,2 @88 exception:67,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
8 = new <Application,[Ljava/lang/Object>@57 ,
arraystore 8[9] = 4,
11 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 3 @10 exception:10,
arraystore 8[12] = 11,
invokestatic < Application, Lcom/android/server/utils/Slogf, i(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V > 5,6,8 @17 exception:13,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @23 exception:15,
monitorexit 14,
conditional branch(ne, to iindex=-1) 16,9,
20 = invokestatic < Application, Ljava/lang/System, currentTimeMillis()J > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, getLastRequestQuietModeEnabledMillis()J > 16 @35 exception:21,
24 = binaryop(lt) 22 , 23,
conditional branch(eq, to iindex=-1) 24,9,
28 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, getLastRequestQuietModeEnabledMillis()J > 16 @45 exception:27,
goto (from iindex= 27 to iindex = 5),
29 = phi  28,26,
34 = binaryop(sub) 20 , 29,
37 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 35 @58 exception:36,
38 = new <Application,[Ljava/lang/String>@6212 ,
arraystore 38[9] = 4,
40 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 37,38 @66 exception:39,
42 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 40,3 @70 exception:41,
44 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setTimePeriod(J)Landroid/app/admin/DevicePolicyEventLogger; > 42,34 @74 exception:43,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 44 @78 exception:45,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, setLastRequestQuietModeEnabledMillis(J)V > 16,20 @81 exception:46,
return,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @2 exception:3,
return 4,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
5 = new <Application,Landroid/content/Intent>@0,
invokespecial < Application, Landroid/content/Intent, <init>()V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 4,7,
13 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 5,11 @9 exception:12,
goto (from iindex= 5 to iindex = 6),
19 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;Z)Landroid/content/Intent; > 5,17,4 @20 exception:18,
22 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent; > 5,20,2 @25 exception:21,
24 = invokevirtual < Application, Landroid/os/UserHandle, getIdentifier()I > 2 @28 exception:23,
27 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;I)Landroid/content/Intent; > 5,25,24 @34 exception:26,
29 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyManagerInternal()Landroid/app/admin/DevicePolicyManagerInternal; > 1 @37 exception:28,
invokevirtual < Application, Landroid/app/admin/DevicePolicyManagerInternal, broadcastIntentToManifestReceivers(Landroid/content/Intent;Landroid/os/UserHandle;Z)V > 29,5,3,30 @42 exception:31,
34 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 5,32 @47 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 35,5,3 @52 exception:36,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @114 exception:94,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 2
public void verifyCallingPackage(String p1, int p2){
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 2
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 2
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public void logQuietModeEnabled(int p1, boolean p2, String p3){
	Object v0 = new Object(2);
	Boolean v1 = Boolean.valueOf(p2);
	Slogf.i(""UserManagerService"", ""requestQuietModeEnabled called by package %s, with enableQuietMode %b."", v0);
	UserManagerService$UserData v3 = p0.getUserDataLU(p1);
	long v4 = System.currentTimeMillis();
	long v5 = v3.getLastRequestQuietModeEnabledMillis();
	long v6 = v3.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v7 = DevicePolicyEventLogger.createEvent(55);
	String v7 = new String(1);
	DevicePolicyEventLogger v8 = v7.setStrings(v7);
	DevicePolicyEventLogger v9 = v8.setBoolean(p2);
	DevicePolicyEventLogger v10 = v9.setTimePeriod((v4 - phiInstruction));
	v10.write();
	v3.setLastRequestQuietModeEnabledMillis(v4);
	return;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public void broadcastProfileAvailabilityChanges(UserHandle p1, UserHandle p2, boolean p3){
	Intent v0 = new Intent();
	Intent v2 = v0.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v3 = v0.putExtra(""android.intent.extra.QUIET_MODE"", p3);
	Intent v4 = v0.putExtra(""android.intent.extra.USER"", p1);
	int v5 = p1.getIdentifier();
	Intent v6 = v0.putExtra(""android.intent.extra.user_handle"", v5);
	DevicePolicyManagerInternal v7 = p0.getDevicePolicyManagerInternal();
	v7.broadcastIntentToManifestReceivers(v0, p2, 1);
	Intent v9 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, p2);
	return;
}
-----
","public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	int v9 = Binder.getCallingUid();
	boolean v10 = UserManagerService.hasManageUsersPermission(v9);
	boolean v8 = v10;
	int v11 = UserHandle.getUserId(v2);
	UserInfo v13 = UserManagerService.getUserInfoLU(v11);
	UserInfo v14 = UserManagerService.getUserInfoLU(p3);
	boolean v12 = phiInstruction;
	boolean v15 = phiInstruction;
	Object v18 = this.sLocalServiceObjects.get(ShortcutServiceInterna.class);
	Object v17 = v18;
	boolean v19 = v17.isForegroundDefaultLauncher(p1, v2);
	Object v22 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v21 = v22;
	this.mPmInternal = v21;
	PackageManagerInternal v20 = this.mPmInternal;
	ComponentName v23 = v20.getSystemUiServiceComponent();
	String v24 = v23.getPackageName();
	boolean v25 = p1.equals(v24);
	long v26 = Binder.clearCallingIdentity();
	Object v29 = this.mUsers.get(p1);
	boolean v30 = this.mRemovingUserIds.get(p1);
	UserInfo v28 = 0;
	UserInfo v38 = UserManagerService.getUserInfoLU(p1);
	UserInfo v39 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);
	UserInfo v37 = v39;
	boolean v41 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v40 = v41;
	boolean v42 = phiInstruction;
	UserInfo.flags = (UserInfo.flags ^ 128);
	Object v44 = this.mUsers.get(UserInfo.id);
	boolean v45 = this.mRemovingUserIds.get(UserInfo.id);
	UserManagerService$UserData v43 = 0;
	AtomicFile v47 = new AtomicFile(v48);
	File v48 = new File(this.mUsersDir,v53);
	StringBuilder v49 = new StringBuilder();
	StringBuilder v51 = v49.append(UserInfo.id);
	StringBuilder v52 = v49.append("".xml"");
	String v53 = v49.toString();
	FileOutputStream v56 = v47.startWrite();
	UserManagerService.writeUserLP(v43, v56);
	v47.finishWrite(v56);
	v47.failWrite(phiInstruction);
	IActivityManager v66 = ActivityManager.getService();
	int v67 = v66.stopUser(p3, 1, 0);
	Object v69 = this.sLocalServiceObjects.get(ActivityManagerInterna.class);
	Object v68 = v69;
	v68.killForegroundAppsForUser(p3);
	Boolean v73 = Boolean.valueOf(p2);
	UserManagerService$UserData v75 = UserManagerService.getUserDataLU(p1);
	long v76 = System.currentTimeMillis();
	long v77 = v75.getLastRequestQuietModeEnabledMillis();
	long v78 = v75.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v79 = DevicePolicyEventLogger.createEvent(55);
	String v80 = new String(1);
	DevicePolicyEventLogger v81 = v79.setStrings(v80);
	DevicePolicyEventLogger v82 = v81.setBoolean(p2);
	DevicePolicyEventLogger v83 = v82.setTimePeriod((v76 - phiInstruction));
	v83.write();
	v75.setLastRequestQuietModeEnabledMillis(v76);
	UserHandle v87 = UserHandle.of(this.id);
	UserHandle v86 = v87;
	UserHandle v89 = UserHandle.of(this.id);
	UserHandle v88 = v89;
	Intent v91 = new Intent();
	Intent v93 = v91.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v94 = v91.putExtra(""android.intent.extra.QUIET_MODE"", p2);
	Intent v95 = v91.putExtra(""android.intent.extra.USER"", v86);
	int v96 = v86.getIdentifier();
	Intent v97 = v91.putExtra(""android.intent.extra.user_handle"", v96);
	DevicePolicyManagerInternal v98 = UserManagerService.getDevicePolicyManagerInternal();
	v98.broadcastIntentToManifestReceivers(v91, v88, 1);
	Intent v100 = v91.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v91, v88);
	Binder.restoreCallingIdentity(v26);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","2","8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:7,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
32 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @60 exception:31,
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 4 @2 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @6 exception:7,
11 = invokeinterface < Application, Lcom/android/server/pm/Computer, getPackageUid(Ljava/lang/String;JI)I > 6,2,9,8 @12 exception:10,
conditional branch(ne, to iindex=-1) 11,3,
return,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
18 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @14 exception:17,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
32 = invokevirtual < Application, Landroid/content/pm/ShortcutServiceInternal, isForegroundDefaultLauncher(Ljava/lang/String;I)Z > 30,2,3 @43 exception:31,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
38 = invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, getSystemUiServiceComponent()Landroid/content/ComponentName; > 36 @82 exception:37,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
42 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,40 @90 exception:41,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @105 exception:49,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
51 = invokestatic < Application, Landroid/app/ActivityManager, getService()Landroid/app/IActivityManager; > @72 exception:50,
54 = invokeinterface < Application, Landroid/app/IActivityManager, stopUser(IZLandroid/app/IStopUserCallback;)I > 51,2,52,11 @77 exception:53,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, killForegroundAppsForUser(I)V > 66,2 @88 exception:67,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
8 = new <Application,[Ljava/lang/Object>@57 ,
arraystore 8[9] = 4,
11 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 3 @10 exception:10,
arraystore 8[12] = 11,
invokestatic < Application, Lcom/android/server/utils/Slogf, i(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V > 5,6,8 @17 exception:13,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @23 exception:15,
monitorexit 14,
conditional branch(ne, to iindex=-1) 16,9,
20 = invokestatic < Application, Ljava/lang/System, currentTimeMillis()J > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, getLastRequestQuietModeEnabledMillis()J > 16 @35 exception:21,
24 = binaryop(lt) 22 , 23,
conditional branch(eq, to iindex=-1) 24,9,
28 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, getLastRequestQuietModeEnabledMillis()J > 16 @45 exception:27,
goto (from iindex= 27 to iindex = 5),
29 = phi  28,26,
34 = binaryop(sub) 20 , 29,
37 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 35 @58 exception:36,
38 = new <Application,[Ljava/lang/String>@6212 ,
arraystore 38[9] = 4,
40 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 37,38 @66 exception:39,
42 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 40,3 @70 exception:41,
44 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setTimePeriod(J)Landroid/app/admin/DevicePolicyEventLogger; > 42,34 @74 exception:43,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 44 @78 exception:45,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, setLastRequestQuietModeEnabledMillis(J)V > 16,20 @81 exception:46,
return,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @2 exception:3,
return 4,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
5 = new <Application,Landroid/content/Intent>@0,
invokespecial < Application, Landroid/content/Intent, <init>()V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 4,7,
13 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 5,11 @9 exception:12,
goto (from iindex= 5 to iindex = 6),
19 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;Z)Landroid/content/Intent; > 5,17,4 @20 exception:18,
22 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent; > 5,20,2 @25 exception:21,
24 = invokevirtual < Application, Landroid/os/UserHandle, getIdentifier()I > 2 @28 exception:23,
27 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;I)Landroid/content/Intent; > 5,25,24 @34 exception:26,
29 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyManagerInternal()Landroid/app/admin/DevicePolicyManagerInternal; > 1 @37 exception:28,
invokevirtual < Application, Landroid/app/admin/DevicePolicyManagerInternal, broadcastIntentToManifestReceivers(Landroid/content/Intent;Landroid/os/UserHandle;Z)V > 29,5,3,30 @42 exception:31,
34 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 5,32 @47 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 35,5,3 @52 exception:36,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @114 exception:94,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 2
public void verifyCallingPackage(String p1, int p2){
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 2
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 2
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public void logQuietModeEnabled(int p1, boolean p2, String p3){
	Object v0 = new Object(2);
	Boolean v1 = Boolean.valueOf(p2);
	Slogf.i(""UserManagerService"", ""requestQuietModeEnabled called by package %s, with enableQuietMode %b."", v0);
	UserManagerService$UserData v3 = p0.getUserDataLU(p1);
	long v4 = System.currentTimeMillis();
	long v5 = v3.getLastRequestQuietModeEnabledMillis();
	long v6 = v3.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v7 = DevicePolicyEventLogger.createEvent(55);
	String v7 = new String(1);
	DevicePolicyEventLogger v8 = v7.setStrings(v7);
	DevicePolicyEventLogger v9 = v8.setBoolean(p2);
	DevicePolicyEventLogger v10 = v9.setTimePeriod((v4 - phiInstruction));
	v10.write();
	v3.setLastRequestQuietModeEnabledMillis(v4);
	return;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public void broadcastProfileAvailabilityChanges(UserHandle p1, UserHandle p2, boolean p3){
	Intent v0 = new Intent();
	Intent v2 = v0.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v3 = v0.putExtra(""android.intent.extra.QUIET_MODE"", p3);
	Intent v4 = v0.putExtra(""android.intent.extra.USER"", p1);
	int v5 = p1.getIdentifier();
	Intent v6 = v0.putExtra(""android.intent.extra.user_handle"", v5);
	DevicePolicyManagerInternal v7 = p0.getDevicePolicyManagerInternal();
	v7.broadcastIntentToManifestReceivers(v0, p2, 1);
	Intent v9 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, p2);
	return;
}
-----
","public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	int v9 = Binder.getCallingUid();
	boolean v10 = UserManagerService.hasManageUsersPermission(v9);
	boolean v8 = v10;
	int v11 = UserHandle.getUserId(v2);
	UserInfo v13 = UserManagerService.getUserInfoLU(v11);
	UserInfo v14 = UserManagerService.getUserInfoLU(p3);
	boolean v12 = phiInstruction;
	boolean v15 = phiInstruction;
	Object v18 = this.sLocalServiceObjects.get(ShortcutServiceInterna.class);
	Object v17 = v18;
	boolean v19 = v17.isForegroundDefaultLauncher(p1, v2);
	Object v22 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v21 = v22;
	this.mPmInternal = v21;
	PackageManagerInternal v20 = this.mPmInternal;
	ComponentName v23 = v20.getSystemUiServiceComponent();
	String v24 = v23.getPackageName();
	boolean v25 = p1.equals(v24);
	long v26 = Binder.clearCallingIdentity();
	Object v29 = this.mUsers.get(p1);
	boolean v30 = this.mRemovingUserIds.get(p1);
	UserInfo v28 = 0;
	UserInfo v38 = UserManagerService.getUserInfoLU(p1);
	UserInfo v39 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);
	UserInfo v37 = v39;
	boolean v41 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v40 = v41;
	boolean v42 = phiInstruction;
	UserInfo.flags = (UserInfo.flags ^ 128);
	Object v44 = this.mUsers.get(UserInfo.id);
	boolean v45 = this.mRemovingUserIds.get(UserInfo.id);
	UserManagerService$UserData v43 = v44;
	AtomicFile v47 = new AtomicFile(v48);
	File v48 = new File(this.mUsersDir,v53);
	StringBuilder v49 = new StringBuilder();
	StringBuilder v51 = v49.append(UserInfo.id);
	StringBuilder v52 = v49.append("".xml"");
	String v53 = v49.toString();
	FileOutputStream v56 = v47.startWrite();
	UserManagerService.writeUserLP(v43, v56);
	v47.finishWrite(v56);
	v47.failWrite(phiInstruction);
	IActivityManager v66 = ActivityManager.getService();
	int v67 = v66.stopUser(p3, 1, 0);
	Object v69 = this.sLocalServiceObjects.get(ActivityManagerInterna.class);
	Object v68 = v69;
	v68.killForegroundAppsForUser(p3);
	Boolean v73 = Boolean.valueOf(p2);
	UserManagerService$UserData v75 = UserManagerService.getUserDataLU(p1);
	long v76 = System.currentTimeMillis();
	long v77 = v75.getLastRequestQuietModeEnabledMillis();
	long v78 = v75.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v79 = DevicePolicyEventLogger.createEvent(55);
	String v80 = new String(1);
	DevicePolicyEventLogger v81 = v79.setStrings(v80);
	DevicePolicyEventLogger v82 = v81.setBoolean(p2);
	DevicePolicyEventLogger v83 = v82.setTimePeriod((v76 - phiInstruction));
	v83.write();
	v75.setLastRequestQuietModeEnabledMillis(v76);
	UserHandle v87 = UserHandle.of(this.id);
	UserHandle v86 = v87;
	UserHandle v89 = UserHandle.of(this.id);
	UserHandle v88 = v89;
	Intent v91 = new Intent();
	Intent v93 = v91.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v94 = v91.putExtra(""android.intent.extra.QUIET_MODE"", p2);
	Intent v95 = v91.putExtra(""android.intent.extra.USER"", v86);
	int v96 = v86.getIdentifier();
	Intent v97 = v91.putExtra(""android.intent.extra.user_handle"", v96);
	DevicePolicyManagerInternal v98 = UserManagerService.getDevicePolicyManagerInternal();
	v98.broadcastIntentToManifestReceivers(v91, v88, 1);
	Intent v100 = v91.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v91, v88);
	Binder.restoreCallingIdentity(v26);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","2","8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:7,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
32 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @60 exception:31,
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 4 @2 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @6 exception:7,
11 = invokeinterface < Application, Lcom/android/server/pm/Computer, getPackageUid(Ljava/lang/String;JI)I > 6,2,9,8 @12 exception:10,
conditional branch(ne, to iindex=-1) 11,3,
return,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
18 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @14 exception:17,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
32 = invokevirtual < Application, Landroid/content/pm/ShortcutServiceInternal, isForegroundDefaultLauncher(Ljava/lang/String;I)Z > 30,2,3 @43 exception:31,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
38 = invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, getSystemUiServiceComponent()Landroid/content/ComponentName; > 36 @82 exception:37,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
42 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,40 @90 exception:41,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @105 exception:49,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
51 = invokestatic < Application, Landroid/app/ActivityManager, getService()Landroid/app/IActivityManager; > @72 exception:50,
54 = invokeinterface < Application, Landroid/app/IActivityManager, stopUser(IZLandroid/app/IStopUserCallback;)I > 51,2,52,11 @77 exception:53,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, killForegroundAppsForUser(I)V > 66,2 @88 exception:67,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
8 = new <Application,[Ljava/lang/Object>@57 ,
arraystore 8[9] = 4,
11 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 3 @10 exception:10,
arraystore 8[12] = 11,
invokestatic < Application, Lcom/android/server/utils/Slogf, i(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V > 5,6,8 @17 exception:13,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @23 exception:15,
monitorexit 14,
conditional branch(ne, to iindex=-1) 16,9,
20 = invokestatic < Application, Ljava/lang/System, currentTimeMillis()J > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, getLastRequestQuietModeEnabledMillis()J > 16 @35 exception:21,
24 = binaryop(lt) 22 , 23,
conditional branch(eq, to iindex=-1) 24,9,
28 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, getLastRequestQuietModeEnabledMillis()J > 16 @45 exception:27,
goto (from iindex= 27 to iindex = 5),
29 = phi  28,26,
34 = binaryop(sub) 20 , 29,
37 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 35 @58 exception:36,
38 = new <Application,[Ljava/lang/String>@6212 ,
arraystore 38[9] = 4,
40 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 37,38 @66 exception:39,
42 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 40,3 @70 exception:41,
44 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setTimePeriod(J)Landroid/app/admin/DevicePolicyEventLogger; > 42,34 @74 exception:43,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 44 @78 exception:45,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, setLastRequestQuietModeEnabledMillis(J)V > 16,20 @81 exception:46,
return,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @2 exception:3,
return 4,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
5 = new <Application,Landroid/content/Intent>@0,
invokespecial < Application, Landroid/content/Intent, <init>()V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 4,7,
13 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 5,11 @9 exception:12,
goto (from iindex= 5 to iindex = 6),
19 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;Z)Landroid/content/Intent; > 5,17,4 @20 exception:18,
22 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent; > 5,20,2 @25 exception:21,
24 = invokevirtual < Application, Landroid/os/UserHandle, getIdentifier()I > 2 @28 exception:23,
27 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;I)Landroid/content/Intent; > 5,25,24 @34 exception:26,
29 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyManagerInternal()Landroid/app/admin/DevicePolicyManagerInternal; > 1 @37 exception:28,
invokevirtual < Application, Landroid/app/admin/DevicePolicyManagerInternal, broadcastIntentToManifestReceivers(Landroid/content/Intent;Landroid/os/UserHandle;Z)V > 29,5,3,30 @42 exception:31,
34 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 5,32 @47 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 35,5,3 @52 exception:36,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @114 exception:94,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 2
public void verifyCallingPackage(String p1, int p2){
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 2
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 2
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public void logQuietModeEnabled(int p1, boolean p2, String p3){
	Object v0 = new Object(2);
	Boolean v1 = Boolean.valueOf(p2);
	Slogf.i(""UserManagerService"", ""requestQuietModeEnabled called by package %s, with enableQuietMode %b."", v0);
	UserManagerService$UserData v3 = p0.getUserDataLU(p1);
	long v4 = System.currentTimeMillis();
	long v5 = v3.getLastRequestQuietModeEnabledMillis();
	long v6 = v3.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v7 = DevicePolicyEventLogger.createEvent(55);
	String v7 = new String(1);
	DevicePolicyEventLogger v8 = v7.setStrings(v7);
	DevicePolicyEventLogger v9 = v8.setBoolean(p2);
	DevicePolicyEventLogger v10 = v9.setTimePeriod((v4 - phiInstruction));
	v10.write();
	v3.setLastRequestQuietModeEnabledMillis(v4);
	return;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public void broadcastProfileAvailabilityChanges(UserHandle p1, UserHandle p2, boolean p3){
	Intent v0 = new Intent();
	Intent v2 = v0.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v3 = v0.putExtra(""android.intent.extra.QUIET_MODE"", p3);
	Intent v4 = v0.putExtra(""android.intent.extra.USER"", p1);
	int v5 = p1.getIdentifier();
	Intent v6 = v0.putExtra(""android.intent.extra.user_handle"", v5);
	DevicePolicyManagerInternal v7 = p0.getDevicePolicyManagerInternal();
	v7.broadcastIntentToManifestReceivers(v0, p2, 1);
	Intent v9 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, p2);
	return;
}
-----
","public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	int v9 = Binder.getCallingUid();
	boolean v10 = UserManagerService.hasManageUsersPermission(v9);
	boolean v8 = v10;
	int v11 = UserHandle.getUserId(v2);
	UserInfo v13 = UserManagerService.getUserInfoLU(v11);
	UserInfo v14 = UserManagerService.getUserInfoLU(p3);
	boolean v12 = phiInstruction;
	boolean v15 = phiInstruction;
	Object v18 = this.sLocalServiceObjects.get(ShortcutServiceInterna.class);
	Object v17 = v18;
	boolean v19 = v17.isForegroundDefaultLauncher(p1, v2);
	Object v22 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v21 = v22;
	this.mPmInternal = v21;
	PackageManagerInternal v20 = this.mPmInternal;
	ComponentName v23 = v20.getSystemUiServiceComponent();
	String v24 = v23.getPackageName();
	boolean v25 = p1.equals(v24);
	long v26 = Binder.clearCallingIdentity();
	Object v29 = this.mUsers.get(p1);
	boolean v30 = this.mRemovingUserIds.get(p1);
	UserInfo v28 = 0;
	UserInfo v38 = UserManagerService.getUserInfoLU(p1);
	UserInfo v39 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);
	UserInfo v37 = v39;
	boolean v41 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v40 = v41;
	boolean v42 = phiInstruction;
	UserInfo.flags = (UserInfo.flags ^ 128);
	Object v44 = this.mUsers.get(UserInfo.id);
	boolean v45 = this.mRemovingUserIds.get(UserInfo.id);
	UserManagerService$UserData v43 = 0;
	AtomicFile v47 = new AtomicFile(v48);
	File v48 = new File(this.mUsersDir,v53);
	StringBuilder v49 = new StringBuilder();
	StringBuilder v51 = v49.append(UserInfo.id);
	StringBuilder v52 = v49.append("".xml"");
	String v53 = v49.toString();
	FileOutputStream v56 = v47.startWrite();
	UserManagerService.writeUserLP(v43, v56);
	v47.finishWrite(v56);
	v47.failWrite(phiInstruction);
	IActivityManager v66 = ActivityManager.getService();
	int v67 = v66.stopUser(p3, 1, 0);
	Object v69 = this.sLocalServiceObjects.get(ActivityManagerInterna.class);
	Object v68 = v69;
	v68.killForegroundAppsForUser(p3);
	Boolean v73 = Boolean.valueOf(p2);
	UserManagerService$UserData v75 = UserManagerService.getUserDataLU(p1);
	long v76 = System.currentTimeMillis();
	long v77 = v75.getLastRequestQuietModeEnabledMillis();
	long v78 = v75.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v79 = DevicePolicyEventLogger.createEvent(55);
	String v80 = new String(1);
	DevicePolicyEventLogger v81 = v79.setStrings(v80);
	DevicePolicyEventLogger v82 = v81.setBoolean(p2);
	DevicePolicyEventLogger v83 = v82.setTimePeriod((v76 - phiInstruction));
	v83.write();
	v75.setLastRequestQuietModeEnabledMillis(v76);
	UserHandle v87 = UserHandle.of(this.id);
	UserHandle v86 = v87;
	UserHandle v89 = UserHandle.of(this.id);
	UserHandle v88 = v89;
	Intent v91 = new Intent();
	Intent v93 = v91.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v94 = v91.putExtra(""android.intent.extra.QUIET_MODE"", p2);
	Intent v95 = v91.putExtra(""android.intent.extra.USER"", v86);
	int v96 = v86.getIdentifier();
	Intent v97 = v91.putExtra(""android.intent.extra.user_handle"", v96);
	DevicePolicyManagerInternal v98 = UserManagerService.getDevicePolicyManagerInternal();
	v98.broadcastIntentToManifestReceivers(v91, v88, 1);
	Intent v100 = v91.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v91, v88);
	Binder.restoreCallingIdentity(v26);
	return 1;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
","public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
","public boolean canHaveRestrictedProfile(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	boolean v13 = UserInfo.isProfile();
	boolean v14 = UserInfo.isGuest();
	boolean v15 = UserInfo.isRestricted();
	boolean v12 = 0;
	boolean v16 = phiInstruction;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
","public boolean canHaveRestrictedProfile(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	boolean v13 = UserInfo.isProfile();
	boolean v14 = UserInfo.isGuest();
	boolean v15 = UserInfo.isRestricted();
	boolean v12 = 0;
	boolean v16 = phiInstruction;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeRestricted(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","public boolean canHaveRestrictedProfile(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserInfo v5 = p0.getUserInfoLU(p1);
	boolean v7 = phiInstruction;
	boolean v9 = UserManager.isUserTypeGuest(this.userType);
	boolean v8 = v9;
	boolean v11 = UserManager.isUserTypeRestricted(this.userType);
	boolean v10 = v11;
	boolean v6 = 0;
	boolean v12 = v5.isAdmin();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeRestricted(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 11 to iindex = 24),
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","public boolean canHaveRestrictedProfile(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserInfo v5 = p0.getUserInfoLU(p1);
	boolean v7 = phiInstruction;
	boolean v9 = UserManager.isUserTypeGuest(this.userType);
	boolean v8 = v9;
	boolean v11 = UserManager.isUserTypeRestricted(this.userType);
	boolean v10 = v11;
	boolean v6 = 0;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeRestricted(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","public boolean canHaveRestrictedProfile(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserInfo v5 = p0.getUserInfoLU(p1);
	boolean v7 = phiInstruction;
	boolean v9 = UserManager.isUserTypeGuest(this.userType);
	boolean v8 = v9;
	boolean v11 = UserManager.isUserTypeRestricted(this.userType);
	boolean v10 = v11;
	boolean v6 = 0;
	boolean v12 = v5.isAdmin();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isSettingRestrictedForUser(Ljava/lang/String;ILjava/lang/String;I)Z","0","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
14 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSettingRestrictedForUser(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;I)Z > 12,2,3,4,5 @10 exception:13,
return 14,","depth : 0
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}
-----
","public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSettingRestrictedForUser(Ljava/lang/String;ILjava/lang/String;I)Z","1","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
14 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSettingRestrictedForUser(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;I)Z > 12,2,3,4,5 @10 exception:13,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:6,
8 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
10 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 1,8 @5 exception:9,
11 = checkcast <Application,Landroid/os/UserManager>10 <Application,Landroid/os/UserManager>,
13 = invokevirtual < Application, Ljava/lang/String, hashCode()I > 2 @11 exception:12,
10: switch 13 [-2099894345->324,-1796809747->313,-1490222856->302,-1115710219->291,-970351711->280,-693072130->269,-623873498->258,-416662510->247,-101820922->233,-32505807->219,-16943007->205,58027029->191,258514750->177,683724341->163,926123534->149,1073289638->135,1223734380->121,1275530062->107,1334097968->93,1602982312->79,1646894952->65,1661297501->51,1701140351->37,1735689732->23] default: 21,
goto (from iindex= 11 to iindex = 313),
112 = phi  16,16,110,16,106,16,102,16,98,16,94,16,90,16,86,16,82,16,78,16,74,16,70,16,66,16,62,16,58,16,54,16,50,16,46,16,42,16,38,16,34,16,30,16,26,16,14,16,15,
182: switch 112 [0->486,1->457,2->447,3->437,4->486,5->431,6->418,7->415,8->447,9->447,10->431,11->405,12->399,13->392,14->381,15->447,16->392,17->374,18->418,19->447,20->418,21->374,22->363,23->431] default: 343,
156 = invokevirtual < Application, Ljava/lang/String, startsWith(Ljava/lang/String;)Z > 2,154 @345 exception:155,
conditional branch(eq, to iindex=-1) 156,15,
158 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 116,4 @351 exception:157,
conditional branch(eq, to iindex=-1) 158,15,
goto (from iindex= 192 to iindex = 135),
161 = phi  159,153,150,149,146,145,144,141,140,137,136,133,130,120,
166 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 3 @495 exception:165,
168 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;Landroid/os/UserHandle;)Z > 11,161,166 @499 exception:167,
return 168,
return 14,","depth : 0
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}
-----
depth : 1
public boolean isSettingRestrictedForUser(Context p1, String p2, int p3, String p4, int p5){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = p1.getSystemService(UserManage.class);
	int v3 = p2.hashCode();
	boolean v4 = p2.startsWith(""data_roaming"");
	boolean v5 = ""0"".equals(p4);
	UserHandle v6 = UserHandle.of(p3);
	boolean v7 = v2.hasUserRestriction(phiInstruction, v6);
	return v7;
}
-----
","public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = p1.startsWith(""data_roaming"");
	boolean v7 = ""0"".equals(p3);
	UserHandle v8 = UserHandle.of(p2);
	boolean v9 = v4.hasUserRestriction(phiInstruction, v8);
	boolean v2 = v9;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSettingRestrictedForUser(Ljava/lang/String;ILjava/lang/String;I)Z","1","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
14 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSettingRestrictedForUser(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;I)Z > 12,2,3,4,5 @10 exception:13,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:6,
8 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
10 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 1,8 @5 exception:9,
11 = checkcast <Application,Landroid/os/UserManager>10 <Application,Landroid/os/UserManager>,
13 = invokevirtual < Application, Ljava/lang/String, hashCode()I > 2 @11 exception:12,
10: switch 13 [-2099894345->324,-1796809747->313,-1490222856->302,-1115710219->291,-970351711->280,-693072130->269,-623873498->258,-416662510->247,-101820922->233,-32505807->219,-16943007->205,58027029->191,258514750->177,683724341->163,926123534->149,1073289638->135,1223734380->121,1275530062->107,1334097968->93,1602982312->79,1646894952->65,1661297501->51,1701140351->37,1735689732->23] default: 21,
goto (from iindex= 11 to iindex = 313),
112 = phi  16,16,110,16,106,16,102,16,98,16,94,16,90,16,86,16,82,16,78,16,74,16,70,16,66,16,62,16,58,16,54,16,50,16,46,16,42,16,38,16,34,16,30,16,26,16,14,16,15,
182: switch 112 [0->486,1->457,2->447,3->437,4->486,5->431,6->418,7->415,8->447,9->447,10->431,11->405,12->399,13->392,14->381,15->447,16->392,17->374,18->418,19->447,20->418,21->374,22->363,23->431] default: 343,
119 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 116,4 @486 exception:118,
conditional branch(eq, to iindex=-1) 119,15,
161 = phi  159,153,150,149,146,145,144,141,140,137,136,133,130,120,
166 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 3 @495 exception:165,
168 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;Landroid/os/UserHandle;)Z > 11,161,166 @499 exception:167,
return 168,
return 14,","depth : 0
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}
-----
depth : 1
public boolean isSettingRestrictedForUser(Context p1, String p2, int p3, String p4, int p5){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = p1.getSystemService(UserManage.class);
	int v3 = p2.hashCode();
	boolean v4 = ""0"".equals(p4);
	UserHandle v5 = UserHandle.of(p3);
	boolean v6 = v2.hasUserRestriction(phiInstruction, v5);
	return v6;
}
-----
","public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = ""0"".equals(p3);
	UserHandle v7 = UserHandle.of(p2);
	boolean v8 = v4.hasUserRestriction(phiInstruction, v7);
	boolean v2 = v8;
	return v2;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
","public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","public PersistableBundle getSeedAccountOptions(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","public PersistableBundle getSeedAccountOptions(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = v4;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public PersistableBundle getSeedAccountOptions(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountOptions, <Application,Landroid/os/PersistableBundle> > 7,
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public PersistableBundle getSeedAccountOptions(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","addUserRestrictionsListener(Landroid/os/IUserRestrictionsListener;)V","0","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
10 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1>@10,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1, <init>(Landroid/os/IUserRestrictionsListener;)V > 10,2 @12 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, addUserRestrictionsListener(Lcom/android/server/pm/UserManagerInternal$UserRestrictionsListener;)V > 9,10 @15 exception:12,
return,","depth : 0
public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v1 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	this.mLocalService.addUserRestrictionsListener(v1);
	return;
}
-----
","public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v2 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	this.mLocalService.addUserRestrictionsListener(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","addUserRestrictionsListener(Landroid/os/IUserRestrictionsListener;)V","1","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
10 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1>@10,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1, <init>(Landroid/os/IUserRestrictionsListener;)V > 10,2 @12 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, addUserRestrictionsListener(Lcom/android/server/pm/UserManagerInternal$UserRestrictionsListener;)V > 9,10 @15 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 6 @9 exception:7,
10 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 8,2 @13 exception:9,
monitorexit 5,
return,
return,","depth : 0
public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v1 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	this.mLocalService.addUserRestrictionsListener(v1);
	return;
}
-----
depth : 1
public void addUserRestrictionsListener(UserManagerInternal$UserRestrictionsListener p1){
	ArrayList v1 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	ArrayList v2 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	boolean v3 = v2.add(p1);
	return;
}
-----
","public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v2 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	ArrayList v5 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	ArrayList v6 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	boolean v7 = v6.add(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","addUserRestrictionsListener(Landroid/os/IUserRestrictionsListener;)V","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
10 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1>@10,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1, <init>(Landroid/os/IUserRestrictionsListener;)V > 10,2 @12 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, addUserRestrictionsListener(Lcom/android/server/pm/UserManagerInternal$UserRestrictionsListener;)V > 9,10 @15 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserRestrictionsListeners, <Application,Ljava/util/ArrayList> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserRestrictionsListeners, <Application,Ljava/util/ArrayList> > 1,
return 2,
10 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 8,2 @13 exception:9,
monitorexit 5,
return,
return,","depth : 0
public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v1 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	this.mLocalService.addUserRestrictionsListener(v1);
	return;
}
-----
depth : 1
public void addUserRestrictionsListener(UserManagerInternal$UserRestrictionsListener p1){
	ArrayList v1 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	ArrayList v2 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	boolean v3 = v2.add(p1);
	return;
}
-----
depth : 2
public ArrayList -$$Nest$fgetmUserRestrictionsListeners(UserManagerService p1){
	return this.mUserRestrictionsListeners;
}
-----
depth : 2
public ArrayList -$$Nest$fgetmUserRestrictionsListeners(UserManagerService p1){
	return this.mUserRestrictionsListeners;
}
-----
","public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v2 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	ArrayList v5 = this.mUserRestrictionsListeners;
	ArrayList v6 = this.mUserRestrictionsListeners;
	boolean v7 = v6.add(v2);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserUnlockRealtime()J","0","2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,6 @11 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, unlockRealtime, <Primordial,J> > 8,
monitorexit 2,
return 11,","depth : 0
public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.unlockRealtime;
}
-----
","public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.unlockRealtime;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserUnlockRealtime()J","1","2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,6 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, unlockRealtime, <Primordial,J> > 8,
monitorexit 2,
return 11,","depth : 0
public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.unlockRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v4 = this.mUsers.get(v2);
	boolean v5 = this.mRemovingUserIds.get(v2);
	UserManagerService$UserData v3 = 0;
	return UserManagerService$UserData.unlockRealtime;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserUnlockRealtime()J","1","2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,6 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, unlockRealtime, <Primordial,J> > 8,
monitorexit 2,
return 11,","depth : 0
public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.unlockRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v4 = this.mUsers.get(v2);
	boolean v5 = this.mRemovingUserIds.get(v2);
	UserManagerService$UserData v3 = v4;
	return UserManagerService$UserData.unlockRealtime;
}
","NONE"

"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
","public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
5 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 6 to iindex = 22),
return 6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasAccountNoChecks(String p1, String p2){
	boolean v1 = TextUtils.isEmpty(p1);
	boolean v2 = TextUtils.isEmpty(p2);
	return 0;
}
-----
","public boolean someUserHasAccount(String p1, String p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v4 = TextUtils.isEmpty(p1);
	boolean v5 = TextUtils.isEmpty(p2);
	boolean v3 = 0;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
5 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
9 = new <Application,Landroid/accounts/Account>@13,
invokespecial < Application, Landroid/accounts/Account, <init>(Ljava/lang/String;Ljava/lang/String;)V > 9,2,3 @15 exception:10,
11 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda2>@18,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda2, <init>(Lcom/android/server/pm/UserManagerService;Landroid/accounts/Account;Ljava/lang/String;Ljava/lang/String;)V > 11,1,9,2,3 @20 exception:12,
14 = invokestatic < Application, Landroid/os/Binder, withCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingSupplier;)Ljava/lang/Object; > 11 @23 exception:13,
15 = checkcast <Application,Ljava/lang/Boolean>14 <Application,Ljava/lang/Boolean>,
17 = invokevirtual < Application, Ljava/lang/Boolean, booleanValue()Z > 15 @29 exception:16,
return 17,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasAccountNoChecks(String p1, String p2){
	boolean v1 = TextUtils.isEmpty(p1);
	boolean v2 = TextUtils.isEmpty(p2);
	Account v2 = new Account(p1,p2);
	UserManagerService$$ExternalSyntheticLambda2 v3 = new UserManagerService$$ExternalSyntheticLambda2(p0,v2,p1,p2);
	Object v5 = Binder.withCleanCallingIdentity(v3);
	boolean v6 = v5.booleanValue();
	return v6;
}
-----
","public boolean someUserHasAccount(String p1, String p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v4 = TextUtils.isEmpty(p1);
	boolean v5 = TextUtils.isEmpty(p2);
	Account v6 = new Account(p1,p2);
	UserManagerService$$ExternalSyntheticLambda2 v8 = new UserManagerService$$ExternalSyntheticLambda2(UserManagerService,v6,p1,p2);
	Object v10 = Binder.withCleanCallingIdentity(v8);
	boolean v11 = v10.booleanValue();
	boolean v3 = v11;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
5 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return 6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasAccountNoChecks(String p1, String p2){
	boolean v1 = TextUtils.isEmpty(p1);
	return 0;
}
-----
","public boolean someUserHasAccount(String p1, String p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v4 = TextUtils.isEmpty(p1);
	boolean v3 = 0;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean someUserHasAccount(String p1, String p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v4 = p0.someUserHasAccountNoChecks(p1, p2);
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
","public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","public Bundle getUserRestrictions(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Bundle v8 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v9 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v10 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v9);
	Bundle v7 = phiInstruction;
	Bundle v12 = new Bundle(v7);
	Bundle v11 = v12;
	return v11;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 2 @8 exception:4,
return 2,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
","public Bundle getUserRestrictions(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Bundle v8 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v9 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v10 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v9);
	Bundle v7 = phiInstruction;
	Bundle v12 = new Bundle();
	Bundle v11 = v12;
	return v11;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","public Bundle getUserRestrictions(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	Object v14 = this.mUserRestrictions.get(p1);
	Bundle v13 = v14;
	Bundle v16 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v17 = UserRestrictionsUtils.nonNull(v16);
	Bundle v18 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v19 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v20 = BundleUtils.isEmpty(v18);
	boolean v21 = v19.isEmpty();
	Bundle v22 = BundleUtils.clone(v17);
	UserRestrictionsUtils.merge(v22, v18);
	Bundle v24 = v19.mergeAll();
	UserRestrictionsUtils.merge(v22, v24);
	Bundle v15 = v22;
	Object v27 = this.mUserRestrictions.get(p1);
	boolean v28 = UserRestrictionsUtils.areEqual(v27, v15);
	boolean v29 = BundleUtils.isEmpty(v15);
	this.mUserRestrictions.put(p1, v15);
	boolean v26 = 1;
	Bundle v12 = phiInstruction;
	Bundle v31 = BundleUtils.clone(v12);
	return v31;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","public Bundle getUserRestrictions(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	Object v14 = this.mUserRestrictions.get(p1);
	Bundle v13 = v14;
	Bundle v16 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v17 = UserRestrictionsUtils.nonNull(v16);
	Bundle v18 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v19 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v20 = BundleUtils.isEmpty(v18);
	boolean v21 = v19.isEmpty();
	Bundle v22 = BundleUtils.clone(v17);
	UserRestrictionsUtils.merge(v22, v18);
	Bundle v24 = v19.mergeAll();
	UserRestrictionsUtils.merge(v22, v24);
	Bundle v15 = v22;
	Object v27 = this.mUserRestrictions.get(p1);
	boolean v28 = UserRestrictionsUtils.areEqual(v27, v15);
	boolean v29 = BundleUtils.isEmpty(v15);
	this.mUserRestrictions.put(p1, v15);
	boolean v26 = 1;
	Bundle v12 = phiInstruction;
	Bundle v31 = BundleUtils.clone(v12);
	return v31;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, delete(I)V > 15,2 @32 exception:16,
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.delete(p1);
	return 1;
}
-----
","public Bundle getUserRestrictions(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	Object v14 = this.mUserRestrictions.get(p1);
	Bundle v13 = v14;
	Bundle v16 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v17 = UserRestrictionsUtils.nonNull(v16);
	Bundle v18 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v19 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v20 = BundleUtils.isEmpty(v18);
	boolean v21 = v19.isEmpty();
	Bundle v22 = BundleUtils.clone(v17);
	UserRestrictionsUtils.merge(v22, v18);
	Bundle v24 = v19.mergeAll();
	UserRestrictionsUtils.merge(v22, v24);
	Bundle v15 = v22;
	Object v27 = this.mUserRestrictions.get(p1);
	boolean v28 = UserRestrictionsUtils.areEqual(v27, v15);
	boolean v29 = BundleUtils.isEmpty(v15);
	this.mUserRestrictions.delete(p1);
	boolean v26 = 1;
	Bundle v12 = phiInstruction;
	Bundle v31 = BundleUtils.clone(v12);
	return v31;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","0","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @8 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @13 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 5,2 @16 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @19 exception:12,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 17 to iindex = 5),
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isRestricted(int p1){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""query isRestricted for user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	UserManagerService.checkCreateUsersPermission(v6);
	UserInfo v8 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @8 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @13 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 5,2 @16 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @19 exception:12,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 20,21,
23 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 20 @37 exception:22,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeRestricted(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isRestricted();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","public boolean isRestricted(int p1){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""query isRestricted for user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v8 = UserManagerService.hasCreateUsersPermission();
	Object v10 = this.mUsers.get(p1);
	boolean v11 = this.mRemovingUserIds.get(p1);
	UserInfo v9 = 0;
	boolean v19 = UserManager.isUserTypeRestricted(this.userType);
	boolean v18 = v19;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @8 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @13 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 5,2 @16 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @19 exception:12,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 17 to iindex = 5),
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isRestricted(int p1){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""query isRestricted for user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v8 = UserManagerService.hasCreateUsersPermission();
	Object v10 = this.mUsers.get(p1);
	boolean v11 = this.mRemovingUserIds.get(p1);
	UserInfo v9 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @8 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @13 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 5,2 @16 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @19 exception:12,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 17 to iindex = 5),
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean isRestricted(int p1){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""query isRestricted for user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v9 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v8 = v9;
	UserInfo v10 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @8 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @13 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 5,2 @16 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @19 exception:12,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
conditional branch(ne, to iindex=-1) 20,21,
23 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 20 @37 exception:22,
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isRestricted();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean isRestricted(int p1){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""query isRestricted for user "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	boolean v9 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v8 = v9;
	UserInfo v10 = p0.getUserInfoLU(p1);
	boolean v11 = v10.isRestricted();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
","public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","public boolean hasBadge(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 9,7,
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","public boolean hasBadge(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean hasBadge(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean hasBadge(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean hasBadge(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","0","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
24 = phi  23,5,
10 = invokeinterface < Application, Ljava/util/List, size()I > 8 @14 exception:9,
conditional branch(ge, to iindex=-1) 24,10,
12 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 8,24 @20 exception:11,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
conditional branch(eq, to iindex=-1) 16,5,
18 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 16,2 @34 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
","public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","1","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
return 5,
24 = phi  23,5,
10 = invokeinterface < Application, Ljava/util/List, size()I > 8 @14 exception:9,
conditional branch(ge, to iindex=-1) 24,10,
12 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 8,24 @20 exception:11,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
18 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 16,2 @34 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
","public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v2 = this.USER_RESTRICTIONS.contains(p1);
	int v3 = Binder.getCallingUid();
	IPackageManager v4 = AppGlobals.getPackageManager();
	String v5 = v4.getPackagesForUid(v3);
	boolean v15 = UserRestrictionsUtils.isSystemApp(v3, phiInstruction);
	boolean v1 = 0;
	List v19 = UserManagerService.getUsers(1, 1, 1);
	List v18 = v19;
	int v20 = v18.size();
	Object v21 = v18.get(phiInstruction);
	Bundle v23 = this.mCachedEffectiveUserRestrictions.getRestrictions(UserInfo.id);
	Bundle v24 = UserManagerService.computeEffectiveUserRestrictionsLR(UserInfo.id);
	boolean v25 = this.mCachedEffectiveUserRestrictions.updateRestrictions(UserInfo.id, v24);
	Bundle v22 = phiInstruction;
	boolean v26 = v22.getBoolean(p1);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","1","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
return 5,
24 = phi  23,5,
10 = invokeinterface < Application, Ljava/util/List, size()I > 8 @14 exception:9,
conditional branch(ge, to iindex=-1) 24,10,
return 5,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	return 0;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
","public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v2 = this.USER_RESTRICTIONS.contains(p1);
	int v3 = Binder.getCallingUid();
	IPackageManager v4 = AppGlobals.getPackageManager();
	String v5 = v4.getPackagesForUid(v3);
	boolean v15 = UserRestrictionsUtils.isSystemApp(v3, phiInstruction);
	boolean v1 = 0;
	List v19 = UserManagerService.getUsers(1, 1, 1);
	List v18 = v19;
	int v20 = v18.size();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","2","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
return 8,
return 5,
24 = phi  23,5,
10 = invokeinterface < Application, Ljava/util/List, size()I > 8 @14 exception:9,
conditional branch(ge, to iindex=-1) 24,10,
12 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 8,24 @20 exception:11,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
18 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 16,2 @34 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 2
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v2 = this.USER_RESTRICTIONS.contains(p1);
	int v3 = Binder.getCallingUid();
	IPackageManager v5 = ActivityThread.getPackageManager();
	IPackageManager v4 = v5;
	String v6 = v4.getPackagesForUid(v3);
	IPackageManager v18 = AppGlobals.getPackageManager();
	int v19 = UserHandle.getUserId(v3);
	ApplicationInfo v20 = v18.getApplicationInfo(phiInstruction[phiInstruction], 794624, v19);
	boolean v21 = v20.isSystemApp();
	boolean v16 = 1;
	boolean v1 = 0;
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v27 = UserManagerService.getUsersInternal(1, p1, 1);
	List v25 = v27;
	List v24 = v25;
	int v28 = v24.size();
	Object v29 = v24.get(phiInstruction);
	Object v32 = this.mUserRestrictions.get(p1);
	Bundle v31 = v32;
	Bundle v34 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v35 = UserRestrictionsUtils.nonNull(v34);
	Bundle v36 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v37 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v38 = BundleUtils.isEmpty(v36);
	boolean v39 = v37.isEmpty();
	Bundle v40 = BundleUtils.clone(v35);
	UserRestrictionsUtils.merge(v40, v36);
	Bundle v42 = v37.mergeAll();
	UserRestrictionsUtils.merge(v40, v42);
	Bundle v33 = v40;
	Object v45 = this.mUserRestrictions.get(p1);
	boolean v46 = UserRestrictionsUtils.areEqual(v45, v33);
	boolean v47 = BundleUtils.isEmpty(v33);
	this.mUserRestrictions.put(p1, v33);
	boolean v44 = 1;
	Bundle v30 = phiInstruction;
	boolean v49 = v30.getBoolean(p1);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","2","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @87 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 45,52 @91 exception:53,
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
return 8,
return 5,
24 = phi  23,5,
10 = invokeinterface < Application, Ljava/util/List, size()I > 8 @14 exception:9,
conditional branch(ge, to iindex=-1) 24,10,
12 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 8,24 @20 exception:11,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
18 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 16,2 @34 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.e(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 2
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v2 = this.USER_RESTRICTIONS.contains(p1);
	int v3 = Binder.getCallingUid();
	IPackageManager v5 = ActivityThread.getPackageManager();
	IPackageManager v4 = v5;
	String v6 = v4.getPackagesForUid(v3);
	IPackageManager v18 = AppGlobals.getPackageManager();
	int v19 = UserHandle.getUserId(v3);
	ApplicationInfo v20 = v18.getApplicationInfo(phiInstruction[phiInstruction], 794624, v19);
	boolean v21 = v20.isSystemApp();
	boolean v16 = 1;
	boolean v1 = 0;
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v27 = UserManagerService.getUsersInternal(1, p1, 1);
	List v25 = v27;
	List v24 = v25;
	int v28 = v24.size();
	Object v29 = v24.get(phiInstruction);
	Object v32 = this.mUserRestrictions.get(p1);
	Bundle v31 = v32;
	Bundle v34 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v35 = UserRestrictionsUtils.nonNull(v34);
	Bundle v36 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v37 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v38 = BundleUtils.isEmpty(v36);
	boolean v39 = v37.isEmpty();
	Bundle v40 = BundleUtils.clone(v35);
	UserRestrictionsUtils.merge(v40, v36);
	Bundle v42 = v37.mergeAll();
	UserRestrictionsUtils.merge(v40, v42);
	Bundle v33 = v40;
	Object v45 = this.mUserRestrictions.get(p1);
	boolean v46 = UserRestrictionsUtils.areEqual(v45, v33);
	boolean v47 = BundleUtils.isEmpty(v33);
	this.mUserRestrictions.put(p1, v33);
	boolean v44 = 1;
	Bundle v30 = phiInstruction;
	boolean v49 = v30.getBoolean(p1);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","2","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
return 8,
return 5,
24 = phi  23,5,
10 = invokeinterface < Application, Ljava/util/List, size()I > 8 @14 exception:9,
conditional branch(ge, to iindex=-1) 24,10,
12 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 8,24 @20 exception:11,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, delete(I)V > 15,2 @32 exception:16,
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
18 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 16,2 @34 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 2
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.delete(p1);
	return 1;
}
-----
","public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v2 = this.USER_RESTRICTIONS.contains(p1);
	int v3 = Binder.getCallingUid();
	IPackageManager v5 = ActivityThread.getPackageManager();
	IPackageManager v4 = v5;
	String v6 = v4.getPackagesForUid(v3);
	IPackageManager v18 = AppGlobals.getPackageManager();
	int v19 = UserHandle.getUserId(v3);
	ApplicationInfo v20 = v18.getApplicationInfo(phiInstruction[phiInstruction], 794624, v19);
	boolean v21 = v20.isSystemApp();
	boolean v16 = 1;
	boolean v1 = 0;
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v27 = UserManagerService.getUsersInternal(1, p1, 1);
	List v25 = v27;
	List v24 = v25;
	int v28 = v24.size();
	Object v29 = v24.get(phiInstruction);
	Object v32 = this.mUserRestrictions.get(p1);
	Bundle v31 = v32;
	Bundle v34 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v35 = UserRestrictionsUtils.nonNull(v34);
	Bundle v36 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v37 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v38 = BundleUtils.isEmpty(v36);
	boolean v39 = v37.isEmpty();
	Bundle v40 = BundleUtils.clone(v35);
	UserRestrictionsUtils.merge(v40, v36);
	Bundle v42 = v37.mergeAll();
	UserRestrictionsUtils.merge(v40, v42);
	Bundle v33 = v40;
	Object v45 = this.mUserRestrictions.get(p1);
	boolean v46 = UserRestrictionsUtils.areEqual(v45, v33);
	boolean v47 = BundleUtils.isEmpty(v33);
	this.mUserRestrictions.delete(p1);
	boolean v44 = 1;
	Bundle v30 = phiInstruction;
	boolean v49 = v30.getBoolean(p1);
	return 1;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
","public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
conditional branch(lt, to iindex=-1) 11,12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
","public boolean isUserRunning(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	UserManagerService$WatchedUserStates v8 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v9 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v10 = v9.get(p1, -1);
	boolean v7 = phiInstruction;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
conditional branch(lt, to iindex=-1) 11,12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserRunning(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
conditional branch(lt, to iindex=-1) 11,12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserRunning(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
conditional branch(lt, to iindex=-1) 11,12,
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserRunning(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
","public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
","public [I getProfileIds(int p1, boolean p2){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""getting profiles related to user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v7);
	long v9 = Binder.clearCallingIdentity();
	IntArray v10 = UserManagerService.getProfileIdsLU(p1, 0, p2);
	[I v11 = v10.toArray();
	Binder.restoreCallingIdentity(v9);
	[I v1 = v11;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:5,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 8 @8 exception:9,
invokespecial < Application, Landroid/util/IntArray, <init>(I)V > 7,10 @12 exception:11,
conditional branch(ne, to iindex=-1) 6,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
15 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 13 @20 exception:14,
47 = phi  46,12,
conditional branch(ge, to iindex=-1) 47,15,
return 7,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	int v4 = this.mUsers.size();
	return v1;
}
-----
","public [I getProfileIds(int p1, boolean p2){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""getting profiles related to user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	boolean v9 = UserManagerService.hasQueryOrCreateUsersPermission();
	long v10 = Binder.clearCallingIdentity();
	UserInfo v12 = UserManagerService.getUserInfoLU(p1);
	IntArray v13 = new IntArray(v14);
	int v14 = this.mUsers.size();
	int v16 = this.mUsers.size();
	IntArray v11 = v13;
	[I v17 = v11.toArray();
	Binder.restoreCallingIdentity(v10);
	[I v1 = v17;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:5,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 8 @8 exception:9,
invokespecial < Application, Landroid/util/IntArray, <init>(I)V > 7,10 @12 exception:11,
conditional branch(ne, to iindex=-1) 6,12,
return 7,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	return v1;
}
-----
","public [I getProfileIds(int p1, boolean p2){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""getting profiles related to user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	boolean v9 = UserManagerService.hasQueryOrCreateUsersPermission();
	long v10 = Binder.clearCallingIdentity();
	UserInfo v12 = UserManagerService.getUserInfoLU(p1);
	IntArray v13 = new IntArray(v14);
	int v14 = this.mUsers.size();
	IntArray v11 = v13;
	[I v16 = v11.toArray();
	Binder.restoreCallingIdentity(v10);
	[I v1 = v16;
	return v1;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","0","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0, <init>()V > 30 @53 exception:31,
33 = invokestatic < Application, Landroid/os/Binder, withCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingSupplier;)Ljava/lang/Object; > 30 @56 exception:32,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
36 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 34 @62 exception:35,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
","public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v3 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v5 = Binder.withCleanCallingIdentity(v3);
	int v6 = v5.intValue();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0, <init>()V > 30 @53 exception:31,
33 = invokestatic < Application, Landroid/os/Binder, withCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingSupplier;)Ljava/lang/Object; > 30 @56 exception:32,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
36 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 34 @62 exception:35,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
","public boolean isUserForeground(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v3);
	boolean v2 = phiInstruction;
	UserManagerService$$ExternalSyntheticLambda0 v6 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v8 = Binder.withCleanCallingIdentity(v6);
	int v9 = v8.intValue();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0, <init>()V > 30 @53 exception:31,
33 = invokestatic < Application, Landroid/os/Binder, withCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingSupplier;)Ljava/lang/Object; > 30 @56 exception:32,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
36 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 34 @62 exception:35,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isUserForeground(int p1){
	int v3 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v3);
	boolean v4 = phiInstruction;
	boolean v7 = phiInstruction;
	boolean v2 = phiInstruction;
	UserManagerService$$ExternalSyntheticLambda0 v9 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v11 = Binder.withCleanCallingIdentity(v9);
	int v12 = v11.intValue();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,2,
7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0, <init>()V > 30 @53 exception:31,
33 = invokestatic < Application, Landroid/os/Binder, withCleanCallingIdentity(Lcom/android/internal/util/FunctionalUtils$ThrowingSupplier;)Ljava/lang/Object; > 30 @56 exception:32,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
36 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 34 @62 exception:35,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isUserForeground(int p1){
	int v3 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v3);
	boolean v4 = phiInstruction;
	boolean v7 = phiInstruction;
	boolean v2 = phiInstruction;
	UserManagerService$$ExternalSyntheticLambda0 v9 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v11 = Binder.withCleanCallingIdentity(v9);
	int v12 = v11.intValue();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
10 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,8 @11 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
","public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
10 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,8 @11 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isUserOfType(int p1, String p2){
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = UserManagerService.getUserInfoLU(p1);
	String v3 = phiInstruction;
	boolean v5 = p2.equals(v3);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
10 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,8 @11 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isUserOfType(int p1, String p2){
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = UserManagerService.getUserInfoLU(p1);
	String v3 = phiInstruction;
	boolean v5 = p2.equals(v3);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
10 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,8 @11 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isUserOfType(int p1, String p2){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	String v6 = phiInstruction;
	boolean v16 = p2.equals(v6);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
10 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,8 @11 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isUserOfType(int p1, String p2){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	String v6 = phiInstruction;
	boolean v16 = p2.equals(v6);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
10 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,8 @11 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isUserOfType(int p1, String p2){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	String v6 = phiInstruction;
	boolean v16 = p2.equals(v6);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
","public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
","public boolean isUserTypeEnabled(String p1){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	Object v3 = this.mUserTypes.get(p1);
	boolean v4 = this.mEnabled;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
","public boolean isUserTypeEnabled(String p1){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	Object v3 = this.mUserTypes.get(p1);
	boolean v4 = this.mEnabled;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean isUserTypeEnabled(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = v4.isEnabled();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean isUserTypeEnabled(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = v4.isEnabled();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean isUserTypeEnabled(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUserTypes.get(p1);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,8,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 3,7 @8 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
13 = invokevirtual < Application, Landroid/os/Bundle, isEmpty()Z > 3 @16 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
goto (from iindex= 11 to iindex = 5),
17 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, cleanAppRestrictionsForPackageLAr(Ljava/lang/String;I)Z > 2,4 @27 exception:16,
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 26,27 @39 exception:28,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
36 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 4 @52 exception:35,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 34,26,36 @56 exception:37,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	boolean v4 = UserManagerService.cleanAppRestrictionsForPackageLAr(p1, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
","public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	boolean v4 = UserManagerService.cleanAppRestrictionsForPackageLAr(p1, p3);
	Intent v5 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v7 = v5.setPackage(p1);
	Intent v8 = v5.addFlags(1073741824);
	UserHandle v9 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v5, v9);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
conditional branch(eq, to iindex=-1) 3,8,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 3,7 @8 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
13 = invokevirtual < Application, Landroid/os/Bundle, isEmpty()Z > 3 @16 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
goto (from iindex= 11 to iindex = 5),
17 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, cleanAppRestrictionsForPackageLAr(Ljava/lang/String;I)Z > 2,4 @27 exception:16,
4 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @0 exception:3,
5 = new <Application,Ljava/io/File>@4,
7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @6 exception:6,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 5,4,7 @10 exception:8,
10 = invokevirtual < Application, Ljava/io/File, exists()Z > 5 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Ljava/io/File, delete()Z > 5 @19 exception:12,
return 14,
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 26,27 @39 exception:28,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
36 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 4 @52 exception:35,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 34,26,36 @56 exception:37,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	boolean v4 = UserManagerService.cleanAppRestrictionsForPackageLAr(p1, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public boolean cleanAppRestrictionsForPackageLAr(String p1, int p2){
	File v1 = Environment.getUserSystemDirectory(p2);
	File v1 = new File(v1,v2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	boolean v4 = v1.exists();
	boolean v5 = v1.delete();
	return 1;
}
-----
","public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	p2.setDefusable(1);
	boolean v5 = p2.isEmpty();
	File v7 = Environment.getUserSystemDirectory(p3);
	File v8 = new File(v7,v9);
	String v9 = UserManagerService.packageToRestrictionsFileName(p1);
	boolean v11 = v8.exists();
	boolean v12 = v8.delete();
	boolean v6 = 1;
	Intent v13 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v15 = v13.setPackage(p1);
	Intent v16 = v13.addFlags(1073741824);
	UserHandle v17 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v13, v17);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
conditional branch(eq, to iindex=-1) 3,8,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 3,7 @8 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
13 = invokevirtual < Application, Landroid/os/Bundle, isEmpty()Z > 3 @16 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
7 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 3 @4 exception:6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 5,7,9 @12 exception:10,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 4,5 @15 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 26,27 @39 exception:28,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
36 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 4 @52 exception:35,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 34,26,36 @56 exception:37,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
","public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	p2.setDefusable(1);
	boolean v5 = p2.isEmpty();
	AtomicFile v7 = new AtomicFile(v8);
	File v8 = new File(v9,v10);
	File v9 = Environment.getUserSystemDirectory(p3);
	String v10 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v7);
	Intent v14 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v16 = v14.setPackage(p1);
	Intent v17 = v14.addFlags(1073741824);
	UserHandle v18 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v14, v18);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
conditional branch(eq, to iindex=-1) 3,8,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 3,7 @8 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
13 = invokevirtual < Application, Landroid/os/Bundle, isEmpty()Z > 3 @16 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
7 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 3 @4 exception:6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,9 @15 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @18 exception:12,
return 13,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 5,7,9 @12 exception:10,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 4,5 @15 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
6 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 2 @3 exception:5,
9 = invokestatic < Application, Landroid/util/Xml, resolveSerializer(Ljava/io/OutputStream;)Landroid/util/TypedXmlSerializer; > 6 @7 exception:8,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V > 9,4,10 @13 exception:11,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, setFeature(Ljava/lang/String;Z)V > 9,12,13 @19 exception:14,
16 = invokeinterface < Application, Landroid/util/TypedXmlSerializer, startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer; > 9,4,3 @22 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeBundle(Landroid/os/Bundle;Landroid/util/TypedXmlSerializer;)V > 1,9 @25 exception:17,
25 = getCaughtException ,
goto (from iindex= 19 to iindex = 2),
26 = phi  6,4,
27 = phi  25,7,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 2,26 @42 exception:30,
34 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 31,32,27 @49 exception:33,
return,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 26,27 @39 exception:28,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
36 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 4 @52 exception:35,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 34,26,36 @56 exception:37,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public void writeApplicationRestrictionsLAr(Bundle p1, AtomicFile p2){
	FileOutputStream v1 = p2.startWrite();
	TypedXmlSerializer v2 = Xml.resolveSerializer(v1);
	v2.startDocument(0, Boolean.TRUE);
	v2.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v5 = v2.startTag(0, ""restrictions"");
	UserManagerService.writeBundle(p1, v2);
	p2.failWrite(phiInstruction);
	int v8 = Slog.e(""UserManagerService"", ""Error writing application restrictions list"", phiInstruction);
	return;
}
-----
","public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	p2.setDefusable(1);
	boolean v5 = p2.isEmpty();
	AtomicFile v7 = new AtomicFile(v8);
	File v8 = new File(v9,v10);
	File v9 = Environment.getUserSystemDirectory(p3);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""res_"");
	StringBuilder v14 = v11.append(p1);
	StringBuilder v15 = v11.append("".xml"");
	String v16 = v11.toString();
	String v10 = v16;
	FileOutputStream v20 = v7.startWrite();
	TypedXmlSerializer v21 = Xml.resolveSerializer(v20);
	v21.startDocument(0, Boolean.TRUE);
	v21.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v24 = v21.startTag(0, ""restrictions"");
	UserManagerService.writeBundle(p2, v21);
	v7.failWrite(phiInstruction);
	Intent v28 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v30 = v28.setPackage(p1);
	Intent v31 = v28.addFlags(1073741824);
	UserHandle v32 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v28, v32);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
return,
conditional branch(eq, to iindex=-1) 3,8,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 3,7 @8 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
13 = invokevirtual < Application, Landroid/os/Bundle, isEmpty()Z > 3 @16 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
7 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 3 @4 exception:6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,9 @15 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @18 exception:12,
return 13,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 5,7,9 @12 exception:10,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 4,5 @15 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
6 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 2 @3 exception:5,
9 = invokestatic < Application, Landroid/util/Xml, resolveSerializer(Ljava/io/OutputStream;)Landroid/util/TypedXmlSerializer; > 6 @7 exception:8,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V > 9,4,10 @13 exception:11,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, setFeature(Ljava/lang/String;Z)V > 9,12,13 @19 exception:14,
16 = invokeinterface < Application, Landroid/util/TypedXmlSerializer, startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer; > 9,4,3 @22 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeBundle(Landroid/os/Bundle;Landroid/util/TypedXmlSerializer;)V > 1,9 @25 exception:17,
25 = getCaughtException ,
goto (from iindex= 19 to iindex = 2),
26 = phi  6,4,
27 = phi  25,7,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 2,26 @42 exception:30,
34 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 31,32,27 @49 exception:33,
return,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 26,27 @39 exception:28,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
36 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 4 @52 exception:35,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 34,26,36 @56 exception:37,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public void writeApplicationRestrictionsLAr(Bundle p1, AtomicFile p2){
	FileOutputStream v1 = p2.startWrite();
	TypedXmlSerializer v2 = Xml.resolveSerializer(v1);
	v2.startDocument(0, Boolean.TRUE);
	v2.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v5 = v2.startTag(0, ""restrictions"");
	UserManagerService.writeBundle(p1, v2);
	p2.failWrite(phiInstruction);
	int v8 = Slog.e(""UserManagerService"", ""Error writing application restrictions list"", phiInstruction);
	return;
}
-----
","public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	p2.setDefusable(1);
	boolean v5 = p2.isEmpty();
	AtomicFile v7 = new AtomicFile(v8);
	File v8 = new File(v9,v10);
	File v9 = Environment.getUserSystemDirectory(p3);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""res_"");
	StringBuilder v14 = v11.append(p1);
	StringBuilder v15 = v11.append("".xml"");
	String v16 = v11.toString();
	String v10 = v16;
	FileOutputStream v20 = v7.startWrite();
	TypedXmlSerializer v21 = Xml.resolveSerializer(v20);
	v21.startDocument(0, Boolean.TRUE);
	v21.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v24 = v21.startTag(0, ""restrictions"");
	UserManagerService.writeBundle(p2, v21);
	v7.failWrite(phiInstruction);
	Intent v28 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v30 = v28.setPackage(p1);
	Intent v31 = v28.addFlags(1073741824);
	UserHandle v32 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v28, v32);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
conditional branch(eq, to iindex=-1) 3,8,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 3,7 @8 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
13 = invokevirtual < Application, Landroid/os/Bundle, isEmpty()Z > 3 @16 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
7 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 3 @4 exception:6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,9 @15 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @18 exception:12,
return 13,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 5,7,9 @12 exception:10,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 4,5 @15 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
6 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 2 @3 exception:5,
9 = invokestatic < Application, Landroid/util/Xml, resolveSerializer(Ljava/io/OutputStream;)Landroid/util/TypedXmlSerializer; > 6 @7 exception:8,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V > 9,4,10 @13 exception:11,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, setFeature(Ljava/lang/String;Z)V > 9,12,13 @19 exception:14,
16 = invokeinterface < Application, Landroid/util/TypedXmlSerializer, startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer; > 9,4,3 @22 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeBundle(Landroid/os/Bundle;Landroid/util/TypedXmlSerializer;)V > 1,9 @25 exception:17,
25 = getCaughtException ,
goto (from iindex= 19 to iindex = 2),
26 = phi  6,4,
27 = phi  25,7,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 2,26 @42 exception:30,
34 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 31,32,27 @49 exception:33,
return,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public void writeApplicationRestrictionsLAr(Bundle p1, AtomicFile p2){
	FileOutputStream v1 = p2.startWrite();
	TypedXmlSerializer v2 = Xml.resolveSerializer(v1);
	v2.startDocument(0, Boolean.TRUE);
	v2.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v5 = v2.startTag(0, ""restrictions"");
	UserManagerService.writeBundle(p1, v2);
	p2.failWrite(phiInstruction);
	int v8 = Slog.e(""UserManagerService"", ""Error writing application restrictions list"", phiInstruction);
	return;
}
-----
","public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	p2.setDefusable(1);
	boolean v5 = p2.isEmpty();
	AtomicFile v7 = new AtomicFile(v8);
	File v8 = new File(v9,v10);
	File v9 = Environment.getUserSystemDirectory(p3);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""res_"");
	StringBuilder v14 = v11.append(p1);
	StringBuilder v15 = v11.append("".xml"");
	String v16 = v11.toString();
	String v10 = v16;
	FileOutputStream v20 = v7.startWrite();
	TypedXmlSerializer v21 = Xml.resolveSerializer(v20);
	v21.startDocument(0, Boolean.TRUE);
	v21.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v24 = v21.startTag(0, ""restrictions"");
	UserManagerService.writeBundle(p2, v21);
	v7.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","0","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
","public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
","public UserInfo getProfileParent(int p1){
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasManageUsersPermission(v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v2);
	boolean v1 = phiInstruction;
	UserInfo v6 = UserManagerService.getUserInfoLU(p1);
	UserInfo v7 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);
	UserInfo v5 = v7;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
","public UserInfo getProfileParent(int p1){
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasManageUsersPermission(v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v2);
	boolean v1 = phiInstruction;
	UserInfo v6 = UserManagerService.getUserInfoLU(p1);
	UserInfo v5 = 0;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
return 9,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public UserInfo getProfileParent(int p1){
	int v2 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v3 = phiInstruction;
	boolean v6 = phiInstruction;
	boolean v1 = phiInstruction;
	Object v10 = this.mUsers.get(p1);
	boolean v11 = this.mRemovingUserIds.get(p1);
	UserInfo v9 = 0;
	Object v19 = this.mUsers.get(UserInfo.profileGroupId);
	boolean v20 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
	UserInfo v18 = 0;
	UserInfo v8 = v18;
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
return 9,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public UserInfo getProfileParent(int p1){
	int v2 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v3 = phiInstruction;
	boolean v6 = phiInstruction;
	boolean v1 = phiInstruction;
	Object v10 = this.mUsers.get(p1);
	boolean v11 = this.mRemovingUserIds.get(p1);
	UserInfo v9 = 0;
	Object v19 = this.mUsers.get(UserInfo.profileGroupId);
	boolean v20 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
	UserInfo v18 = 0;
	UserInfo v8 = v18;
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public UserInfo getProfileParent(int p1){
	int v2 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v3 = phiInstruction;
	boolean v6 = phiInstruction;
	boolean v1 = phiInstruction;
	Object v10 = this.mUsers.get(p1);
	boolean v11 = this.mRemovingUserIds.get(p1);
	UserInfo v9 = 0;
	UserInfo v8 = 0;
	return v8;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @31 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @37 exception:23,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 15,24 @41 exception:25,
26 = new <Application,Ljava/lang/StringBuilder>@44,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @46 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @51 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,2 @54 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @57 exception:33,
37 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,34 @63 exception:36,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
","public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""cannot pre-create user of type "");
	StringBuilder v8 = v5.append(p1);
	String v9 = v5.toString();
	Preconditions.checkArgument(v4, v9);
	UserInfo v17 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v17;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
9 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,7 @16 exception:8,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @31 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @37 exception:23,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 15,24 @41 exception:25,
26 = new <Application,Ljava/lang/StringBuilder>@44,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @46 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @51 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,2 @54 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @57 exception:33,
37 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,34 @63 exception:36,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
	boolean v4 = UserManagerService.hasCreateUsersPermission();
	boolean v6 = v1.isProfile();
	String v7 = v1.getName();
	boolean v8 = v7.equals(""android.os.usertype.full.RESTRICTED"");
	boolean v5 = phiInstruction;
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""cannot pre-create user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	Preconditions.checkArgument(v5, v13);
	int v22 = UserManagerService.getNextAvailableId();
	long v31 = UserManagerService.logUserCreateJourneyBegin(v22, p1, phiInstruction);
	UserInfo v32 = UserManagerService.createUserInternalUncheckedNoTracing(0, p1, phiInstruction, -10000, 1, 0, v23, 0);
	UserManagerService.logUserCreateJourneyFinish(v31, v22, phiInstruction);
	v23.traceEnd();
	UserInfo v21 = v32;
	return v21;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
9 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,7 @16 exception:8,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @31 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @37 exception:23,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 15,24 @41 exception:25,
26 = new <Application,Ljava/lang/StringBuilder>@44,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @46 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @51 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,2 @54 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @57 exception:33,
37 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,34 @63 exception:36,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	boolean v6 = v1.isProfile();
	String v7 = v1.getName();
	boolean v8 = v7.equals(""android.os.usertype.full.RESTRICTED"");
	boolean v5 = phiInstruction;
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""cannot pre-create user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	Preconditions.checkArgument(v5, v13);
	int v22 = UserManagerService.getNextAvailableId();
	long v31 = UserManagerService.logUserCreateJourneyBegin(v22, p1, phiInstruction);
	UserInfo v32 = UserManagerService.createUserInternalUncheckedNoTracing(0, p1, phiInstruction, -10000, 1, 0, v23, 0);
	UserManagerService.logUserCreateJourneyFinish(v31, v22, phiInstruction);
	v23.traceEnd();
	UserInfo v21 = v32;
	return v21;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
9 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,7 @16 exception:8,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @31 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @37 exception:23,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 15,24 @41 exception:25,
26 = new <Application,Ljava/lang/StringBuilder>@44,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @46 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @51 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,2 @54 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @57 exception:33,
37 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,34 @63 exception:36,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @3 exception:3,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseBooleanArray, size()I > 6 @13 exception:7,
conditional branch(le, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @23 exception:11,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
invokevirtual < Application, Landroid/util/SparseBooleanArray, clear()V > 13 @28 exception:14,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
17 = invokevirtual < Application, Ljava/util/LinkedList, iterator()Ljava/util/Iterator; > 15 @33 exception:16,
19 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 17 @37 exception:18,
conditional branch(eq, to iindex=-1) 19,5,
32 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @60 exception:31,
33 = phi  4,32,
monitorexit 2,
invokestatic < Application, Landroid/os/UserManager, invalidateStaticUserProperties()V > @65 exception:37,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
5 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 3,2 @2 exception:4,
invokespecial < Application, Landroid/util/TimingsTraceLog, traceBegin(Ljava/lang/String;)V > 1,2 @5 exception:6,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserJourneyBegin(IILjava/lang/String;I)J > 1,5,2,3,4 @1 exception:6,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
12 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,3 @14 exception:11,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
16 = invokevirtual < Application, Ljava/lang/String, intern()Ljava/lang/String; > 3 @46 exception:15,
18 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 13 @50 exception:17,
19 = binaryop(or) 4 , 18,
21 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkUserTypeConsistency(I)Z > 19 @56 exception:20,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
25 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 13 @138 exception:24,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @147 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @152 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,16 @155 exception:32,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,34 @160 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @163 exception:37,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, throwCheckedUserOperationException(Ljava/lang/String;I)V > 1,38,26 @167 exception:39,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
52 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 13 @184 exception:51,
conditional branch(eq, to iindex=-1) 52,14,
57 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, convertPreCreatedUserIfPossible(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,16,47,2,9 @192 exception:56,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IJIII)V > 8,2,3,9,7 @11 exception:10,
return,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	p0.traceBegin(p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
	boolean v5 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v4 = v5;
	boolean v7 = phiInstruction;
	String v8 = this.mName;
	boolean v9 = v8.equals(""android.os.usertype.full.RESTRICTED"");
	boolean v6 = phiInstruction;
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""cannot pre-create user of type "");
	StringBuilder v13 = v10.append(p1);
	String v14 = v10.toString();
	Preconditions.checkArgument(v6, v14);
	int v24 = UserManagerService.scanNextAvailableIdLocked();
	int v25 = this.mRemovingUserIds.size();
	this.mRemovingUserIds.clear();
	Iterator v28 = this.mRecentlyRemovedIds.iterator();
	boolean v29 = v28.hasNext();
	int v30 = UserManagerService.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	int v23 = phiInstruction;
	StringBuilder v34 = new StringBuilder();
	StringBuilder v36 = v34.append(""createUser-"");
	StringBuilder v37 = v34.append(phiInstruction);
	String v38 = v34.toString();
	TimingsTraceAndSlog.traceBegin(v38);
	long v43 = UserManagerService.logUserJourneyBegin(4, v23, p2, p3);
	long v42 = v43;
	Object v45 = this.mUserTypes.get(p2);
	String v46 = p2.intern();
	int v47 = v45.getDefaultUserInfoFlags();
	boolean v48 = UserManagerService.checkUserTypeConsistency((p3 | v47));
	boolean v49 = v45.isEnabled();
	StringBuilder v50 = new StringBuilder();
	StringBuilder v52 = v50.append(""Cannot add a user of disabled type "");
	StringBuilder v53 = v50.append(v46);
	StringBuilder v54 = v50.append(""."");
	String v55 = v50.toString();
	UserManagerService.throwCheckedUserOperationException(v55, 6);
	boolean v57 = UserManagerService.isUserTypeEligibleForPreCreation(v45);
	UserInfo v58 = UserManagerService.convertPreCreatedUserIfPossible(v46, phiInstruction, p1, p7);
	UserInfo v44 = v58;
	FrameworkStatsLog.write(265, v42, v23, 3, phiInstruction);
	v32.traceEnd();
	UserInfo v22 = v44;
	return v22;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
9 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,7 @16 exception:8,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @31 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @37 exception:23,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 15,24 @41 exception:25,
26 = new <Application,Ljava/lang/StringBuilder>@44,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @46 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @51 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,2 @54 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @57 exception:33,
37 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,34 @63 exception:36,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @3 exception:3,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseBooleanArray, size()I > 6 @13 exception:7,
conditional branch(le, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @23 exception:11,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
invokevirtual < Application, Landroid/util/SparseBooleanArray, clear()V > 13 @28 exception:14,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
17 = invokevirtual < Application, Ljava/util/LinkedList, iterator()Ljava/util/Iterator; > 15 @33 exception:16,
19 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 17 @37 exception:18,
conditional branch(eq, to iindex=-1) 19,5,
32 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @60 exception:31,
33 = phi  4,32,
monitorexit 2,
invokestatic < Application, Landroid/os/UserManager, invalidateStaticUserProperties()V > @65 exception:37,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
5 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 3,2 @2 exception:4,
invokespecial < Application, Landroid/util/TimingsTraceLog, traceBegin(Ljava/lang/String;)V > 1,2 @5 exception:6,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserJourneyBegin(IILjava/lang/String;I)J > 1,5,2,3,4 @1 exception:6,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
12 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,3 @14 exception:11,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
16 = invokevirtual < Application, Ljava/lang/String, intern()Ljava/lang/String; > 3 @46 exception:15,
18 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 13 @50 exception:17,
19 = binaryop(or) 4 , 18,
21 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkUserTypeConsistency(I)Z > 19 @56 exception:20,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
25 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 13 @138 exception:24,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @147 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @152 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,16 @155 exception:32,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,34 @160 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @163 exception:37,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, throwCheckedUserOperationException(Ljava/lang/String;I)V > 1,38,26 @167 exception:39,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
52 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 13 @184 exception:51,
conditional branch(eq, to iindex=-1) 52,14,
57 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, convertPreCreatedUserIfPossible(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,16,47,2,9 @192 exception:56,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IJIII)V > 8,2,3,9,7 @11 exception:10,
return,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	p0.traceBegin(p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasManageUsersPermission(v5);
	boolean v4 = v6;
	boolean v8 = phiInstruction;
	String v9 = this.mName;
	boolean v10 = v9.equals(""android.os.usertype.full.RESTRICTED"");
	boolean v7 = phiInstruction;
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""cannot pre-create user of type "");
	StringBuilder v14 = v11.append(p1);
	String v15 = v11.toString();
	Preconditions.checkArgument(v7, v15);
	int v25 = UserManagerService.scanNextAvailableIdLocked();
	int v26 = this.mRemovingUserIds.size();
	this.mRemovingUserIds.clear();
	Iterator v29 = this.mRecentlyRemovedIds.iterator();
	boolean v30 = v29.hasNext();
	int v31 = UserManagerService.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	int v24 = phiInstruction;
	StringBuilder v35 = new StringBuilder();
	StringBuilder v37 = v35.append(""createUser-"");
	StringBuilder v38 = v35.append(phiInstruction);
	String v39 = v35.toString();
	TimingsTraceAndSlog.traceBegin(v39);
	long v44 = UserManagerService.logUserJourneyBegin(4, v24, p2, p3);
	long v43 = v44;
	Object v46 = this.mUserTypes.get(p2);
	String v47 = p2.intern();
	int v48 = v46.getDefaultUserInfoFlags();
	boolean v49 = UserManagerService.checkUserTypeConsistency((p3 | v48));
	boolean v50 = v46.isEnabled();
	StringBuilder v51 = new StringBuilder();
	StringBuilder v53 = v51.append(""Cannot add a user of disabled type "");
	StringBuilder v54 = v51.append(v47);
	StringBuilder v55 = v51.append(""."");
	String v56 = v51.toString();
	UserManagerService.throwCheckedUserOperationException(v56, 6);
	boolean v58 = UserManagerService.isUserTypeEligibleForPreCreation(v46);
	UserInfo v59 = UserManagerService.convertPreCreatedUserIfPossible(v47, phiInstruction, p1, p7);
	UserInfo v45 = v59;
	FrameworkStatsLog.write(265, v43, v24, 3, phiInstruction);
	v33.traceEnd();
	UserInfo v23 = v45;
	return v23;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
9 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,7 @16 exception:8,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @31 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @37 exception:23,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 15,24 @41 exception:25,
26 = new <Application,Ljava/lang/StringBuilder>@44,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @46 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @51 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,2 @54 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @57 exception:33,
37 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,34 @63 exception:36,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @3 exception:3,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseBooleanArray, size()I > 6 @13 exception:7,
conditional branch(le, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @23 exception:11,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
invokevirtual < Application, Landroid/util/SparseBooleanArray, clear()V > 13 @28 exception:14,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
17 = invokevirtual < Application, Ljava/util/LinkedList, iterator()Ljava/util/Iterator; > 15 @33 exception:16,
19 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 17 @37 exception:18,
conditional branch(eq, to iindex=-1) 19,5,
32 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @60 exception:31,
33 = phi  4,32,
monitorexit 2,
invokestatic < Application, Landroid/os/UserManager, invalidateStaticUserProperties()V > @65 exception:37,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
5 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 3,2 @2 exception:4,
invokespecial < Application, Landroid/util/TimingsTraceLog, traceBegin(Ljava/lang/String;)V > 1,2 @5 exception:6,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserJourneyBegin(IILjava/lang/String;I)J > 1,5,2,3,4 @1 exception:6,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
12 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,3 @14 exception:11,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
16 = invokevirtual < Application, Ljava/lang/String, intern()Ljava/lang/String; > 3 @46 exception:15,
18 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 13 @50 exception:17,
19 = binaryop(or) 4 , 18,
21 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkUserTypeConsistency(I)Z > 19 @56 exception:20,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
25 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 13 @138 exception:24,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @147 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @152 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,16 @155 exception:32,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,34 @160 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @163 exception:37,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, throwCheckedUserOperationException(Ljava/lang/String;I)V > 1,38,26 @167 exception:39,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
52 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 13 @184 exception:51,
conditional branch(eq, to iindex=-1) 52,14,
57 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, convertPreCreatedUserIfPossible(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,16,47,2,9 @192 exception:56,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IJIII)V > 8,2,3,9,7 @11 exception:10,
return,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	p0.traceBegin(p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
	boolean v5 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v4 = v5;
	boolean v7 = phiInstruction;
	String v8 = this.mName;
	boolean v9 = v8.equals(""android.os.usertype.full.RESTRICTED"");
	boolean v6 = phiInstruction;
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""cannot pre-create user of type "");
	StringBuilder v13 = v10.append(p1);
	String v14 = v10.toString();
	Preconditions.checkArgument(v6, v14);
	int v24 = UserManagerService.scanNextAvailableIdLocked();
	int v25 = this.mRemovingUserIds.size();
	this.mRemovingUserIds.clear();
	Iterator v28 = this.mRecentlyRemovedIds.iterator();
	boolean v29 = v28.hasNext();
	int v30 = UserManagerService.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	int v23 = phiInstruction;
	StringBuilder v34 = new StringBuilder();
	StringBuilder v36 = v34.append(""createUser-"");
	StringBuilder v37 = v34.append(phiInstruction);
	String v38 = v34.toString();
	TimingsTraceAndSlog.traceBegin(v38);
	long v43 = UserManagerService.logUserJourneyBegin(4, v23, p2, p3);
	long v42 = v43;
	Object v45 = this.mUserTypes.get(p2);
	String v46 = p2.intern();
	int v47 = v45.getDefaultUserInfoFlags();
	boolean v48 = UserManagerService.checkUserTypeConsistency((p3 | v47));
	boolean v49 = v45.isEnabled();
	StringBuilder v50 = new StringBuilder();
	StringBuilder v52 = v50.append(""Cannot add a user of disabled type "");
	StringBuilder v53 = v50.append(v46);
	StringBuilder v54 = v50.append(""."");
	String v55 = v50.toString();
	UserManagerService.throwCheckedUserOperationException(v55, 6);
	boolean v57 = UserManagerService.isUserTypeEligibleForPreCreation(v45);
	UserInfo v58 = UserManagerService.convertPreCreatedUserIfPossible(v46, phiInstruction, p1, p7);
	UserInfo v44 = v58;
	FrameworkStatsLog.write(265, v42, v23, 3, phiInstruction);
	v32.traceEnd();
	UserInfo v22 = v44;
	return v22;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","0","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
20 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
25 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 22,18,23 @40 exception:24,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 28 @48 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,30 @53 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,18 @56 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,35 @61 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 28 @64 exception:38,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 12,39 @68 exception:40,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
","public boolean removeUser(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v8 = p0.getUserRemovalRestriction(p1);
	int v9 = UserHandle.getCallingUserId();
	Bundle v10 = p0.getUserRestrictions(v9);
	boolean v11 = v10.getBoolean(v8, 0);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","1","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
20 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
25 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 22,18,23 @40 exception:24,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 28 @48 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,30 @53 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,18 @56 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,35 @61 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 28 @64 exception:38,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 12,39 @68 exception:40,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
","public boolean removeUser(int p1){
	boolean v8 = UserManagerService.hasCreateUsersPermission();
	UserInfo v10 = UserManagerService.getUserInfoLU(p1);
	boolean v11 = v10.isManagedProfile();
	String v9 = phiInstruction;
	int v12 = UserHandle.getCallingUserId();
	UserManagerService.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(v12, ""getUserRestrictions"");
	Bundle v15 = UserManagerService.getEffectiveUserRestrictions(v12);
	Bundle v16 = BundleUtils.clone(v15);
	Bundle v13 = v16;
	boolean v17 = v13.getBoolean(v9, 0);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","1","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
20 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
25 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 22,18,23 @40 exception:24,
conditional branch(eq, to iindex=-1) 25,23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @72 exception:26,
return 27,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	boolean v11 = p0.removeUserUnchecked(p1);
	return v11;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
","public boolean removeUser(int p1){
	boolean v8 = UserManagerService.hasCreateUsersPermission();
	UserInfo v10 = UserManagerService.getUserInfoLU(p1);
	boolean v11 = v10.isManagedProfile();
	String v9 = phiInstruction;
	int v12 = UserHandle.getCallingUserId();
	UserManagerService.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(v12, ""getUserRestrictions"");
	Bundle v15 = UserManagerService.getEffectiveUserRestrictions(v12);
	Bundle v16 = BundleUtils.clone(v15);
	Bundle v13 = v16;
	boolean v17 = v13.getBoolean(v9, 0);
	boolean v18 = p0.removeUserUnchecked(p1);
	return v18;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","2","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
20 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
25 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 22,18,23 @40 exception:24,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 28 @48 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,30 @53 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,18 @56 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,35 @61 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 28 @64 exception:38,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 12,39 @68 exception:40,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","public boolean removeUser(int p1){
	boolean v9 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v8 = v9;
	Object v12 = this.mUsers.get(p1);
	boolean v13 = this.mRemovingUserIds.get(p1);
	UserInfo v11 = 0;
	boolean v21 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v20 = v21;
	String v10 = phiInstruction;
	int v22 = UserHandle.getCallingUserId();
	boolean v26 = UserManagerService.isSameProfileGroupNoChecks(v25, p1);
	boolean v27 = UserManagerService.hasManageUsersPermission();
	int v28 = Binder.getCallingUid();
	boolean v29 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v28);
	Bundle v31 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v32 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v33 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v32);
	Bundle v30 = phiInstruction;
	Bundle v35 = new Bundle(v30);
	Bundle v34 = v35;
	Bundle v23 = v34;
	boolean v37 = v23.getBoolean(v10, 0);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","2","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
20 = phi  19,18,
return 20,
20 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
25 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 22,18,23 @40 exception:24,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 28 @48 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,30 @53 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,18 @56 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,35 @61 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 28 @64 exception:38,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 12,39 @68 exception:40,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","public boolean removeUser(int p1){
	boolean v9 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v8 = v9;
	Object v12 = this.mUsers.get(p1);
	boolean v13 = this.mRemovingUserIds.get(p1);
	UserInfo v11 = 0;
	boolean v21 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v20 = v21;
	String v10 = phiInstruction;
	int v22 = UserHandle.getCallingUserId();
	boolean v26 = UserManagerService.isSameProfileGroupNoChecks(v25, p1);
	boolean v27 = UserManagerService.hasManageUsersPermission();
	int v28 = Binder.getCallingUid();
	boolean v29 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v28);
	Bundle v31 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v32 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v33 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v32);
	Bundle v30 = phiInstruction;
	Bundle v35 = new Bundle(v30);
	Bundle v34 = v35;
	Bundle v23 = v34;
	boolean v37 = v23.getBoolean(v10, 0);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","2","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
20 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @31 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 2 @8 exception:4,
return 2,
return 8,
25 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 22,18,23 @40 exception:24,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 28 @48 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,30 @53 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,18 @56 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,35 @61 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 28 @64 exception:38,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 12,39 @68 exception:40,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
","public boolean removeUser(int p1){
	boolean v9 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v8 = v9;
	Object v12 = this.mUsers.get(p1);
	boolean v13 = this.mRemovingUserIds.get(p1);
	UserInfo v11 = 0;
	boolean v21 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v20 = v21;
	String v10 = phiInstruction;
	int v22 = UserHandle.getCallingUserId();
	boolean v26 = UserManagerService.isSameProfileGroupNoChecks(v25, p1);
	boolean v27 = UserManagerService.hasManageUsersPermission();
	int v28 = Binder.getCallingUid();
	boolean v29 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v28);
	Bundle v31 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v32 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v33 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v32);
	Bundle v30 = phiInstruction;
	Bundle v35 = new Bundle();
	Bundle v34 = v35;
	Bundle v23 = v34;
	boolean v37 = v23.getBoolean(v10, 0);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
24 = binaryop(or) 14 , 15,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 24,
goto (from iindex= 55 to iindex = 7),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
","public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
24 = binaryop(or) 14 , 15,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 24,
goto (from iindex= 55 to iindex = 7),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public boolean setUserEphemeral(int p1, boolean p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	Object v3 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	AtomicFile v5 = new AtomicFile(v6);
	File v6 = new File(this.mUsersDir,v11);
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(UserInfo.id);
	StringBuilder v10 = v7.append("".xml"");
	String v11 = v7.toString();
	FileOutputStream v14 = v5.startWrite();
	UserManagerService.writeUserLP(phiInstruction, v14);
	v5.finishWrite(v14);
	v5.failWrite(phiInstruction);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
23 = binaryop(and) 14 , 22,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 23,
goto (from iindex= 58 to iindex = 2),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags & -257);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public boolean setUserEphemeral(int p1, boolean p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	Object v3 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags & -257);
	AtomicFile v5 = new AtomicFile(v6);
	File v6 = new File(this.mUsersDir,v11);
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(UserInfo.id);
	StringBuilder v10 = v7.append("".xml"");
	String v11 = v7.toString();
	FileOutputStream v14 = v5.startWrite();
	UserManagerService.writeUserLP(phiInstruction, v14);
	v5.finishWrite(v14);
	v5.failWrite(phiInstruction);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
24 = binaryop(or) 14 , 15,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 24,
goto (from iindex= 55 to iindex = 7),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean setUserEphemeral(int p1, boolean p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
23 = binaryop(and) 14 , 22,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 23,
goto (from iindex= 58 to iindex = 2),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags & -257);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean setUserEphemeral(int p1, boolean p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags & -257);
	p0.writeUserLP(phiInstruction);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
41 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 41 @26 exception:42,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 41,43 @31 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 41,2 @34 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 41 @37 exception:48,
51 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 29,49 @41 exception:50,
monitorexit 7,
monitorexit 6,
return 12,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""User not found for setting ephemeral mode: u"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.e(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public boolean setUserEphemeral(int p1, boolean p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUsers.get(p1);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasRestrictedProfiles(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 6 @10 exception:7,
20 = phi  19,9,
conditional branch(ge, to iindex=-1) 20,8,
monitorexit 5,
return 9,","depth : 0
public boolean hasRestrictedProfiles(int p1){
	UserManagerService.checkManageUsersPermission(""hasRestrictedProfiles"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
","public boolean hasRestrictedProfiles(int p1){
	UserManagerService.checkManageUsersPermission(""hasRestrictedProfiles"");
	int v2 = this.mUsers.size();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasRestrictedProfiles(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 6 @10 exception:7,
20 = phi  19,9,
conditional branch(ge, to iindex=-1) 20,8,
monitorexit 5,
return 9,","depth : 0
public boolean hasRestrictedProfiles(int p1){
	UserManagerService.checkManageUsersPermission(""hasRestrictedProfiles"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
","public boolean hasRestrictedProfiles(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = this.mUsers.size();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasRestrictedProfiles(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 6 @10 exception:7,
20 = phi  19,9,
conditional branch(ge, to iindex=-1) 20,8,
monitorexit 5,
return 9,","depth : 0
public boolean hasRestrictedProfiles(int p1){
	UserManagerService.checkManageUsersPermission(""hasRestrictedProfiles"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public boolean hasRestrictedProfiles(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = this.mUsers.size();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
12 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 8,9,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,10,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @30 exception:13,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
19 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 17,2 @42 exception:18,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 21,2 @54 exception:22,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
monitorexit 15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @90 exception:33,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
","public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
12 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 8,9,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,10,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @30 exception:13,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
19 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 17,2 @42 exception:18,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 21,2 @54 exception:22,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @90 exception:33,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public boolean markGuestForDeletion(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getCallingUserId();
	UserManagerService.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(v3, ""getUserRestrictions"");
	Bundle v6 = UserManagerService.getEffectiveUserRestrictions(v3);
	Bundle v7 = BundleUtils.clone(v6);
	Bundle v4 = v7;
	boolean v8 = v4.getBoolean(""no_remove_user"", 0);
	long v9 = Binder.clearCallingIdentity();
	Object v10 = this.mUsers.get(p1);
	boolean v11 = this.mRemovingUserIds.get(p1);
	boolean v13 = UserManager.isUserTypeGuest(this.userType);
	boolean v12 = v13;
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	AtomicFile v15 = new AtomicFile(v16);
	File v16 = new File(this.mUsersDir,v21);
	StringBuilder v17 = new StringBuilder();
	StringBuilder v19 = v17.append(UserInfo.id);
	StringBuilder v20 = v17.append("".xml"");
	String v21 = v17.toString();
	FileOutputStream v24 = v15.startWrite();
	UserManagerService.writeUserLP(v10, v24);
	v15.finishWrite(v24);
	v15.failWrite(phiInstruction);
	Binder.restoreCallingIdentity(v9);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
12 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 8,9,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,10,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @30 exception:13,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
19 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 17,2 @42 exception:18,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 21,2 @54 exception:22,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @90 exception:33,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public boolean markGuestForDeletion(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getCallingUserId();
	UserManagerService.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(v3, ""getUserRestrictions"");
	Bundle v6 = UserManagerService.getEffectiveUserRestrictions(v3);
	Bundle v7 = BundleUtils.clone(v6);
	Bundle v4 = v7;
	boolean v8 = v4.getBoolean(""no_remove_user"", 0);
	long v9 = Binder.clearCallingIdentity();
	Object v10 = this.mUsers.get(p1);
	boolean v11 = this.mRemovingUserIds.get(p1);
	boolean v13 = UserManager.isUserTypeGuest(this.userType);
	boolean v12 = v13;
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	AtomicFile v15 = new AtomicFile(v16);
	File v16 = new File(this.mUsersDir,v21);
	StringBuilder v17 = new StringBuilder();
	StringBuilder v19 = v17.append(UserInfo.id);
	StringBuilder v20 = v17.append("".xml"");
	String v21 = v17.toString();
	FileOutputStream v24 = v15.startWrite();
	UserManagerService.writeUserLP(v10, v24);
	v15.failWrite(phiInstruction);
	Binder.restoreCallingIdentity(v9);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
12 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 8,9,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,10,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @30 exception:13,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
19 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 17,2 @42 exception:18,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 21,2 @54 exception:22,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
monitorexit 15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @90 exception:33,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","public boolean markGuestForDeletion(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = UserHandle.getCallingUserId();
	boolean v9 = UserManagerService.isSameProfileGroupNoChecks(v8, p1);
	boolean v10 = UserManagerService.hasManageUsersPermission();
	int v11 = Binder.getCallingUid();
	boolean v12 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v11);
	Bundle v14 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v15 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v16 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v15);
	Bundle v13 = phiInstruction;
	Bundle v18 = new Bundle(v13);
	Bundle v17 = v18;
	Bundle v6 = v17;
	boolean v20 = v6.getBoolean(""no_remove_user"", 0);
	long v21 = Binder.clearCallingIdentity();
	Object v22 = this.mUsers.get(p1);
	boolean v23 = this.mRemovingUserIds.get(p1);
	boolean v24 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v22);
	Binder.restoreCallingIdentity(v21);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 2 @8 exception:4,
return 2,
return 8,
12 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 8,9,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,10,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @30 exception:13,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
19 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 17,2 @42 exception:18,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 21,2 @54 exception:22,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
monitorexit 15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @90 exception:33,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
","public boolean markGuestForDeletion(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = UserHandle.getCallingUserId();
	boolean v9 = UserManagerService.isSameProfileGroupNoChecks(v8, p1);
	boolean v10 = UserManagerService.hasManageUsersPermission();
	int v11 = Binder.getCallingUid();
	boolean v12 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v11);
	Bundle v14 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v15 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v16 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v15);
	Bundle v13 = phiInstruction;
	Bundle v18 = new Bundle();
	Bundle v17 = v18;
	Bundle v6 = v17;
	boolean v20 = v6.getBoolean(""no_remove_user"", 0);
	long v21 = Binder.clearCallingIdentity();
	Object v22 = this.mUsers.get(p1);
	boolean v23 = this.mRemovingUserIds.get(p1);
	boolean v24 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v22);
	Binder.restoreCallingIdentity(v21);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
12 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 8,9,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,10,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @30 exception:13,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
19 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 17,2 @42 exception:18,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 21,2 @54 exception:22,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
monitorexit 15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @71 exception:34,
return 10,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	Binder.restoreCallingIdentity(v5);
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","public boolean markGuestForDeletion(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = UserHandle.getCallingUserId();
	boolean v9 = UserManagerService.isSameProfileGroupNoChecks(v8, p1);
	boolean v10 = UserManagerService.hasManageUsersPermission();
	int v11 = Binder.getCallingUid();
	boolean v12 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v11);
	Bundle v14 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v15 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v16 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v15);
	Bundle v13 = phiInstruction;
	Bundle v18 = new Bundle(v13);
	Bundle v17 = v18;
	Bundle v6 = v17;
	boolean v20 = v6.getBoolean(""no_remove_user"", 0);
	long v21 = Binder.clearCallingIdentity();
	Object v22 = this.mUsers.get(p1);
	boolean v23 = this.mRemovingUserIds.get(p1);
	boolean v24 = UserManagerService$UserData.info.isGuest();
	Binder.restoreCallingIdentity(v21);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
","public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void setUserAdmin(int p1){
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v2);
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	boolean v14 = phiInstruction;
	UserInfo.flags = (UserInfo.flags ^ 2);
	Object v16 = this.mUsers.get(UserInfo.id);
	boolean v17 = this.mRemovingUserIds.get(UserInfo.id);
	UserManagerService$UserData v15 = 0;
	AtomicFile v19 = new AtomicFile(v20);
	File v20 = new File(this.mUsersDir,v25);
	StringBuilder v21 = new StringBuilder();
	StringBuilder v23 = v21.append(UserInfo.id);
	StringBuilder v24 = v21.append("".xml"");
	String v25 = v21.toString();
	FileOutputStream v28 = v19.startWrite();
	UserManagerService.writeUserLP(v15, v28);
	v19.finishWrite(v28);
	v19.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void setUserAdmin(int p1){
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v2);
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	boolean v14 = phiInstruction;
	UserInfo.flags = (UserInfo.flags ^ 2);
	Object v16 = this.mUsers.get(UserInfo.id);
	boolean v17 = this.mRemovingUserIds.get(UserInfo.id);
	UserManagerService$UserData v15 = v16;
	AtomicFile v19 = new AtomicFile(v20);
	File v20 = new File(this.mUsersDir,v25);
	StringBuilder v21 = new StringBuilder();
	StringBuilder v23 = v21.append(UserInfo.id);
	StringBuilder v24 = v21.append("".xml"");
	String v25 = v21.toString();
	FileOutputStream v28 = v19.startWrite();
	UserManagerService.writeUserLP(v15, v28);
	v19.finishWrite(v28);
	v19.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public void setUserAdmin(int p1){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v9 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v9);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public void setUserAdmin(int p1){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v9 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v9);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
goto (from iindex= 13 to iindex = 18),
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public void setUserAdmin(int p1){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isAdmin();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","0","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(ne, to iindex=-1) 6,2,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 10,4 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 12 to iindex = 9),
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	UserInfo v5 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isUserNameSet(int p1){
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	UserInfo v5 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","1","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(ne, to iindex=-1) 6,2,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 10,4 @18 exception:11,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 12 to iindex = 9),
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	UserInfo v5 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isUserNameSet(int p1){
	boolean v4 = phiInstruction;
	Object v7 = this.mUsers.get(p1);
	boolean v8 = this.mRemovingUserIds.get(p1);
	UserInfo v6 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","1","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(ne, to iindex=-1) 6,2,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 10,4 @18 exception:11,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 12 to iindex = 9),
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	UserInfo v5 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isUserNameSet(int p1){
	boolean v4 = phiInstruction;
	Object v7 = this.mUsers.get(p1);
	boolean v8 = this.mRemovingUserIds.get(p1);
	UserInfo v6 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v5 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v4 = v5;
	int v6 = Binder.getCallingUid();
	boolean v7 = phiInstruction;
	boolean v3 = phiInstruction;
	UserInfo v9 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v5 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v4 = v5;
	int v6 = Binder.getCallingUid();
	boolean v7 = phiInstruction;
	boolean v3 = phiInstruction;
	UserInfo v9 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v5 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v4 = v5;
	int v6 = Binder.getCallingUid();
	boolean v7 = phiInstruction;
	boolean v3 = phiInstruction;
	UserInfo v9 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
","public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
11 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 9,2 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
","public boolean hasUserRestriction(String p1, int p2){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p2);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v9 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v10 = v9.getBoolean(p1);
	boolean v7 = phiInstruction;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,6,
11 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 9,2 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle -$$Nest$mgetEffectiveUserRestrictions(UserManagerService p1, int p2){
	Bundle v1 = p1.getEffectiveUserRestrictions(p2);
	return v1;
}
-----
","public boolean hasUserRestriction(String p1, int p2){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	boolean v14 = this.USER_RESTRICTIONS.contains(p1);
	int v15 = Binder.getCallingUid();
	IPackageManager v16 = AppGlobals.getPackageManager();
	String v17 = v16.getPackagesForUid(v15);
	boolean v27 = UserRestrictionsUtils.isSystemApp(v15, phiInstruction);
	boolean v13 = 0;
	Bundle v31 = this.this$0.getEffectiveUserRestrictions(p2);
	Bundle v30 = v31;
	boolean v32 = v30.getBoolean(p1);
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,6,
11 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 9,2 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle -$$Nest$mgetEffectiveUserRestrictions(UserManagerService p1, int p2){
	Bundle v1 = p1.getEffectiveUserRestrictions(p2);
	return v1;
}
-----
","public boolean hasUserRestriction(String p1, int p2){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	boolean v14 = this.USER_RESTRICTIONS.contains(p1);
	int v15 = Binder.getCallingUid();
	IPackageManager v16 = AppGlobals.getPackageManager();
	String v17 = v16.getPackagesForUid(v15);
	boolean v27 = UserRestrictionsUtils.isSystemApp(v15, phiInstruction);
	boolean v13 = 0;
	Bundle v31 = this.this$0.getEffectiveUserRestrictions(p2);
	Bundle v30 = v31;
	boolean v32 = v30.getBoolean(p1);
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @87 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 45,52 @91 exception:53,
return 6,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,6,
11 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;)Z > 9,2 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.e(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle -$$Nest$mgetEffectiveUserRestrictions(UserManagerService p1, int p2){
	Bundle v1 = p1.getEffectiveUserRestrictions(p2);
	return v1;
}
-----
","public boolean hasUserRestriction(String p1, int p2){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	boolean v14 = this.USER_RESTRICTIONS.contains(p1);
	int v15 = Binder.getCallingUid();
	IPackageManager v16 = AppGlobals.getPackageManager();
	String v17 = v16.getPackagesForUid(v15);
	boolean v27 = UserRestrictionsUtils.isSystemApp(v15, phiInstruction);
	boolean v13 = 0;
	Bundle v31 = this.this$0.getEffectiveUserRestrictions(p2);
	Bundle v30 = v31;
	boolean v32 = v30.getBoolean(p1);
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
","public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	boolean v4 = this.USER_RESTRICTIONS.contains(p1);
	int v5 = Binder.getCallingUid();
	IPackageManager v6 = AppGlobals.getPackageManager();
	String v7 = v6.getPackagesForUid(v5);
	boolean v17 = UserRestrictionsUtils.isSystemApp(v5, phiInstruction);
	boolean v3 = 0;
	Object v21 = this.mUserRestrictions.get(p3);
	Bundle v20 = v21;
	Bundle v23 = new Bundle(v20);
	Bundle v22 = v23;
	v22.putBoolean(p1, p2);
	Bundle v27 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v28 = UserRestrictionsUtils.nonNull(v27);
	Bundle v29 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v31 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v33 = this.mBaseUserRestrictions.updateRestrictions(p3, v22);
	UserManagerService$UserData v34 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v34);
	Bundle v36 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v37 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v36);
	UserManagerService$3 v38 = new UserManagerService$3(UserManagerService,v36,p3);
	boolean v40 = this.mHandler.post(v38);
	UserManagerService.propagateUserRestrictionsLR(p3, v36, v28);
	Bundle v42 = new Bundle(v36);
	boolean v44 = this.mAppliedUserRestrictions.updateRestrictions(p3, v42);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 2 @8 exception:4,
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	boolean v4 = this.USER_RESTRICTIONS.contains(p1);
	int v5 = Binder.getCallingUid();
	IPackageManager v6 = AppGlobals.getPackageManager();
	String v7 = v6.getPackagesForUid(v5);
	boolean v17 = UserRestrictionsUtils.isSystemApp(v5, phiInstruction);
	boolean v3 = 0;
	Object v21 = this.mUserRestrictions.get(p3);
	Bundle v20 = v21;
	Bundle v23 = new Bundle();
	Bundle v22 = v23;
	v22.putBoolean(p1, p2);
	Bundle v27 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v28 = UserRestrictionsUtils.nonNull(v27);
	Bundle v29 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v31 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v33 = this.mBaseUserRestrictions.updateRestrictions(p3, v22);
	UserManagerService$UserData v34 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v34);
	Bundle v36 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v37 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v36);
	UserManagerService$3 v38 = new UserManagerService$3(UserManagerService,v36,p3);
	boolean v40 = this.mHandler.post(v38);
	UserManagerService.propagateUserRestrictionsLR(p3, v36, v28);
	Bundle v42 = new Bundle(v36);
	boolean v44 = this.mAppliedUserRestrictions.updateRestrictions(p3, v42);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/os/Bundle>@3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 3 @5 exception:4,
5 = phi  1,3,
return 5,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
6 = invokevirtual < Application, Landroid/os/Handler, hasMessages(ILjava/lang/Object;)Z > 3,4,2 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
10 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(ILjava/lang/Object;)Landroid/os/Message; > 8,4,2 @11 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
14 = invokevirtual < Application, Landroid/os/Handler, sendMessageDelayed(Landroid/os/Message;J)Z > 11,10,12 @19 exception:13,
return,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
6 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 3,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = new <Application,Landroid/os/Bundle>@7,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 8,3 @9 exception:9,
10 = new <Application,Landroid/os/Bundle>@12,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 10,4 @14 exception:11,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
13 = new <Application,Lcom/android/server/pm/UserManagerService$4>@19,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$4, <init>(Lcom/android/server/pm/UserManagerService;ILandroid/os/Bundle;Landroid/os/Bundle;)V > 13,1,2,8,10 @21 exception:14,
16 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 12,13 @24 exception:15,
return,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle nonNull(Bundle p1){
	Bundle v0 = new Bundle();
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 2
public void scheduleWriteUser(UserManagerService$UserData p1){
	boolean v1 = this.mHandler.hasMessages(1, p1);
	Message v2 = this.mHandler.obtainMessage(1, p1);
	boolean v3 = this.mHandler.sendMessageDelayed(v2, 2000);
	return;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public void propagateUserRestrictionsLR(int p1, Bundle p2, Bundle p3){
	boolean v1 = UserRestrictionsUtils.areEqual(p2, p3);
	Bundle v1 = new Bundle(p2);
	Bundle v2 = new Bundle(p3);
	UserManagerService$4 v3 = new UserManagerService$4(p0,p1,v1,v2);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","public void setUserRestriction(String p1, boolean p2, int p3){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v6 = this.USER_RESTRICTIONS.contains(p1);
	int v7 = Binder.getCallingUid();
	IPackageManager v9 = ActivityThread.getPackageManager();
	IPackageManager v8 = v9;
	String v10 = v8.getPackagesForUid(v7);
	IPackageManager v22 = AppGlobals.getPackageManager();
	int v23 = UserHandle.getUserId(v7);
	ApplicationInfo v24 = v22.getApplicationInfo(phiInstruction[phiInstruction], 794624, v23);
	boolean v25 = v24.isSystemApp();
	boolean v20 = 1;
	boolean v5 = 0;
	Bundle v28 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v29 = BundleUtils.clone(v28);
	v29.putBoolean(p1, p2);
	Object v33 = this.mUserRestrictions.get(p2);
	Bundle v32 = v33;
	Bundle v35 = new Bundle();
	Bundle v34 = phiInstruction;
	Object v38 = this.mUserRestrictions.get(p2);
	Bundle v37 = v38;
	Preconditions.checkState(phiInstruction);
	Object v41 = this.mUserRestrictions.get(p2);
	Bundle v40 = v41;
	Preconditions.checkState(phiInstruction);
	Object v44 = this.mUserRestrictions.get(p2);
	boolean v45 = UserRestrictionsUtils.areEqual(v44, p1);
	boolean v46 = BundleUtils.isEmpty(p1);
	this.mUserRestrictions.put(p2, p1);
	boolean v43 = 1;
	Object v49 = this.mUsers.get(p2);
	UserManagerService$UserData v48 = v49;
	boolean v51 = this.mHandler.hasMessages(1, v48);
	Message v52 = this.mHandler.obtainMessage(1, v48);
	boolean v53 = this.mHandler.sendMessageDelayed(v52, 2000);
	Bundle v55 = this.mBaseUserRestrictions.getRestrictions(p2);
	Bundle v56 = UserRestrictionsUtils.nonNull(v55);
	Bundle v57 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v58 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	boolean v59 = BundleUtils.isEmpty(v57);
	boolean v60 = v58.isEmpty();
	Bundle v61 = BundleUtils.clone(v56);
	UserRestrictionsUtils.merge(v61, v57);
	Bundle v63 = v58.mergeAll();
	UserRestrictionsUtils.merge(v61, v63);
	Bundle v54 = v61;
	Object v66 = this.mUserRestrictions.get(p2);
	boolean v67 = UserRestrictionsUtils.areEqual(v66, v54);
	boolean v68 = BundleUtils.isEmpty(v54);
	this.mUserRestrictions.put(p2, v54);
	boolean v65 = 1;
	UserManagerService$3 v70 = new UserManagerService$3(UserManagerService,v54,p3);
	boolean v72 = this.mHandler.post(v70);
	boolean v74 = UserRestrictionsUtils.areEqual(v54, v34);
	Bundle v75 = new Bundle(v54);
	Bundle v77 = new Bundle(v34);
	UserManagerService$4 v79 = new UserManagerService$4(UserManagerService,p2,v75,v77);
	boolean v81 = this.mHandler.post(v79);
	Bundle v82 = new Bundle(v54);
	Object v85 = this.mUserRestrictions.get(p2);
	boolean v86 = UserRestrictionsUtils.areEqual(v85, v82);
	boolean v87 = BundleUtils.isEmpty(v82);
	this.mUserRestrictions.put(p2, v82);
	boolean v84 = 1;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @87 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 45,52 @91 exception:53,
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/os/Bundle>@3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 3 @5 exception:4,
5 = phi  1,3,
return 5,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
6 = invokevirtual < Application, Landroid/os/Handler, hasMessages(ILjava/lang/Object;)Z > 3,4,2 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
10 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(ILjava/lang/Object;)Landroid/os/Message; > 8,4,2 @11 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
14 = invokevirtual < Application, Landroid/os/Handler, sendMessageDelayed(Landroid/os/Message;J)Z > 11,10,12 @19 exception:13,
return,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
6 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 3,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = new <Application,Landroid/os/Bundle>@7,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 8,3 @9 exception:9,
10 = new <Application,Landroid/os/Bundle>@12,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 10,4 @14 exception:11,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
13 = new <Application,Lcom/android/server/pm/UserManagerService$4>@19,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$4, <init>(Lcom/android/server/pm/UserManagerService;ILandroid/os/Bundle;Landroid/os/Bundle;)V > 13,1,2,8,10 @21 exception:14,
16 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 12,13 @24 exception:15,
return,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.e(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle nonNull(Bundle p1){
	Bundle v0 = new Bundle();
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 2
public void scheduleWriteUser(UserManagerService$UserData p1){
	boolean v1 = this.mHandler.hasMessages(1, p1);
	Message v2 = this.mHandler.obtainMessage(1, p1);
	boolean v3 = this.mHandler.sendMessageDelayed(v2, 2000);
	return;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public void propagateUserRestrictionsLR(int p1, Bundle p2, Bundle p3){
	boolean v1 = UserRestrictionsUtils.areEqual(p2, p3);
	Bundle v1 = new Bundle(p2);
	Bundle v2 = new Bundle(p3);
	UserManagerService$4 v3 = new UserManagerService$4(p0,p1,v1,v2);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","public void setUserRestriction(String p1, boolean p2, int p3){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v6 = this.USER_RESTRICTIONS.contains(p1);
	int v7 = Binder.getCallingUid();
	IPackageManager v9 = ActivityThread.getPackageManager();
	IPackageManager v8 = v9;
	String v10 = v8.getPackagesForUid(v7);
	IPackageManager v22 = AppGlobals.getPackageManager();
	int v23 = UserHandle.getUserId(v7);
	ApplicationInfo v24 = v22.getApplicationInfo(phiInstruction[phiInstruction], 794624, v23);
	boolean v25 = v24.isSystemApp();
	boolean v20 = 1;
	boolean v5 = 0;
	Bundle v28 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v29 = BundleUtils.clone(v28);
	v29.putBoolean(p1, p2);
	Object v33 = this.mUserRestrictions.get(p2);
	Bundle v32 = v33;
	Bundle v35 = new Bundle();
	Bundle v34 = phiInstruction;
	Object v38 = this.mUserRestrictions.get(p2);
	Bundle v37 = v38;
	Preconditions.checkState(phiInstruction);
	Object v41 = this.mUserRestrictions.get(p2);
	Bundle v40 = v41;
	Preconditions.checkState(phiInstruction);
	Object v44 = this.mUserRestrictions.get(p2);
	boolean v45 = UserRestrictionsUtils.areEqual(v44, p1);
	boolean v46 = BundleUtils.isEmpty(p1);
	this.mUserRestrictions.put(p2, p1);
	boolean v43 = 1;
	Object v49 = this.mUsers.get(p2);
	UserManagerService$UserData v48 = v49;
	boolean v51 = this.mHandler.hasMessages(1, v48);
	Message v52 = this.mHandler.obtainMessage(1, v48);
	boolean v53 = this.mHandler.sendMessageDelayed(v52, 2000);
	Bundle v55 = this.mBaseUserRestrictions.getRestrictions(p2);
	Bundle v56 = UserRestrictionsUtils.nonNull(v55);
	Bundle v57 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v58 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	boolean v59 = BundleUtils.isEmpty(v57);
	boolean v60 = v58.isEmpty();
	Bundle v61 = BundleUtils.clone(v56);
	UserRestrictionsUtils.merge(v61, v57);
	Bundle v63 = v58.mergeAll();
	UserRestrictionsUtils.merge(v61, v63);
	Bundle v54 = v61;
	Object v66 = this.mUserRestrictions.get(p2);
	boolean v67 = UserRestrictionsUtils.areEqual(v66, v54);
	boolean v68 = BundleUtils.isEmpty(v54);
	this.mUserRestrictions.put(p2, v54);
	boolean v65 = 1;
	UserManagerService$3 v70 = new UserManagerService$3(UserManagerService,v54,p3);
	boolean v72 = this.mHandler.post(v70);
	boolean v74 = UserRestrictionsUtils.areEqual(v54, v34);
	Bundle v75 = new Bundle(v54);
	Bundle v77 = new Bundle(v34);
	UserManagerService$4 v79 = new UserManagerService$4(UserManagerService,p2,v75,v77);
	boolean v81 = this.mHandler.post(v79);
	Bundle v82 = new Bundle(v54);
	Object v85 = this.mUserRestrictions.get(p2);
	boolean v86 = UserRestrictionsUtils.areEqual(v85, v82);
	boolean v87 = BundleUtils.isEmpty(v82);
	this.mUserRestrictions.put(p2, v82);
	boolean v84 = 1;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 1,2,
goto (from iindex= 1 to iindex = 6),
5 = phi  1,3,
return 5,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
6 = invokevirtual < Application, Landroid/os/Handler, hasMessages(ILjava/lang/Object;)Z > 3,4,2 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
10 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(ILjava/lang/Object;)Landroid/os/Message; > 8,4,2 @11 exception:9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
14 = invokevirtual < Application, Landroid/os/Handler, sendMessageDelayed(Landroid/os/Message;J)Z > 11,10,12 @19 exception:13,
return,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 3,2 @2 exception:4,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 8 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,2 @16 exception:11,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 10 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, isEmpty()Z > 12 @26 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
22 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 7 @33 exception:21,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,10 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, mergeAll()Landroid/os/Bundle; > 12 @40 exception:24,
invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, merge(Landroid/os/Bundle;Landroid/os/Bundle;)V > 22,25 @44 exception:26,
return 22,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
6 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 3,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = new <Application,Landroid/os/Bundle>@7,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 8,3 @9 exception:9,
10 = new <Application,Landroid/os/Bundle>@12,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 10,4 @14 exception:11,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
13 = new <Application,Lcom/android/server/pm/UserManagerService$4>@19,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$4, <init>(Lcom/android/server/pm/UserManagerService;ILandroid/os/Bundle;Landroid/os/Bundle;)V > 13,1,2,8,10 @21 exception:14,
16 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 12,13 @24 exception:15,
return,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
9 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, areEqual(Landroid/os/Bundle;Landroid/os/Bundle;)Z > 7,3 @8 exception:8,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokestatic < Application, Lcom/android/server/BundleUtils, isEmpty(Landroid/os/Bundle;)Z > 3 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 17,2,3 @26 exception:18,
goto (from iindex= 16 to iindex = 6),
return 10,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle nonNull(Bundle p1){
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 2
public void scheduleWriteUser(UserManagerService$UserData p1){
	boolean v1 = this.mHandler.hasMessages(1, p1);
	Message v2 = this.mHandler.obtainMessage(1, p1);
	boolean v3 = this.mHandler.sendMessageDelayed(v2, 2000);
	return;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public void propagateUserRestrictionsLR(int p1, Bundle p2, Bundle p3){
	boolean v1 = UserRestrictionsUtils.areEqual(p2, p3);
	Bundle v1 = new Bundle(p2);
	Bundle v2 = new Bundle(p3);
	UserManagerService$4 v3 = new UserManagerService$4(p0,p1,v1,v2);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","public void setUserRestriction(String p1, boolean p2, int p3){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v6 = this.USER_RESTRICTIONS.contains(p1);
	int v7 = Binder.getCallingUid();
	IPackageManager v9 = ActivityThread.getPackageManager();
	IPackageManager v8 = v9;
	String v10 = v8.getPackagesForUid(v7);
	IPackageManager v22 = AppGlobals.getPackageManager();
	int v23 = UserHandle.getUserId(v7);
	ApplicationInfo v24 = v22.getApplicationInfo(phiInstruction[phiInstruction], 794624, v23);
	boolean v25 = v24.isSystemApp();
	boolean v20 = 1;
	boolean v5 = 0;
	Bundle v28 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v29 = BundleUtils.clone(v28);
	v29.putBoolean(p1, p2);
	Object v33 = this.mUserRestrictions.get(p2);
	Bundle v32 = v33;
	Bundle v34 = phiInstruction;
	Object v36 = this.mUserRestrictions.get(p2);
	Bundle v35 = v36;
	Preconditions.checkState(phiInstruction);
	Object v39 = this.mUserRestrictions.get(p2);
	Bundle v38 = v39;
	Preconditions.checkState(phiInstruction);
	Object v42 = this.mUserRestrictions.get(p2);
	boolean v43 = UserRestrictionsUtils.areEqual(v42, p1);
	boolean v44 = BundleUtils.isEmpty(p1);
	this.mUserRestrictions.put(p2, p1);
	boolean v41 = 1;
	Object v47 = this.mUsers.get(p2);
	UserManagerService$UserData v46 = v47;
	boolean v49 = this.mHandler.hasMessages(1, v46);
	Message v50 = this.mHandler.obtainMessage(1, v46);
	boolean v51 = this.mHandler.sendMessageDelayed(v50, 2000);
	Bundle v53 = this.mBaseUserRestrictions.getRestrictions(p2);
	Bundle v54 = UserRestrictionsUtils.nonNull(v53);
	Bundle v55 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v56 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	boolean v57 = BundleUtils.isEmpty(v55);
	boolean v58 = v56.isEmpty();
	Bundle v59 = BundleUtils.clone(v54);
	UserRestrictionsUtils.merge(v59, v55);
	Bundle v61 = v56.mergeAll();
	UserRestrictionsUtils.merge(v59, v61);
	Bundle v52 = v59;
	Object v64 = this.mUserRestrictions.get(p2);
	boolean v65 = UserRestrictionsUtils.areEqual(v64, v52);
	boolean v66 = BundleUtils.isEmpty(v52);
	this.mUserRestrictions.put(p2, v52);
	boolean v63 = 1;
	UserManagerService$3 v68 = new UserManagerService$3(UserManagerService,v52,p3);
	boolean v70 = this.mHandler.post(v68);
	boolean v72 = UserRestrictionsUtils.areEqual(v52, v34);
	Bundle v73 = new Bundle(v52);
	Bundle v75 = new Bundle(v34);
	UserManagerService$4 v77 = new UserManagerService$4(UserManagerService,p2,v73,v75);
	boolean v79 = this.mHandler.post(v77);
	Bundle v80 = new Bundle(v52);
	Object v83 = this.mUserRestrictions.get(p2);
	boolean v84 = UserRestrictionsUtils.areEqual(v83, v80);
	boolean v85 = BundleUtils.isEmpty(v80);
	this.mUserRestrictions.put(p2, v80);
	boolean v82 = 1;
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
","public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 5,
return 2,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return p1;
}
-----
","public int getProfileParentId(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v5 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	int v3 = p1;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
monitorexit 5,
return 10,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return UserInfo.id;
}
-----
","public int getProfileParentId(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v5 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	int v3 = UserInfo.id;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 5,
return 2,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return p1;
}
-----
depth : 2
public Object -$$Nest$fgetmUsersLock(UserManagerService p1){
	return this.mUsersLock;
}
-----
depth : 2
public UserInfo -$$Nest$mgetProfileParentLU(UserManagerService p1, int p2){
	UserInfo v1 = p1.getProfileParentLU(p2);
	return v1;
}
-----
","public int getProfileParentId(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	Object v6 = this.mUsersLock;
	UserInfo v8 = this.this$0.getProfileParentLU(p1);
	UserInfo v7 = v8;
	int v5 = p1;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
monitorexit 5,
return 10,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return UserInfo.id;
}
-----
depth : 2
public Object -$$Nest$fgetmUsersLock(UserManagerService p1){
	return this.mUsersLock;
}
-----
depth : 2
public UserInfo -$$Nest$mgetProfileParentLU(UserManagerService p1, int p2){
	UserInfo v1 = p1.getProfileParentLU(p2);
	return v1;
}
-----
","public int getProfileParentId(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	Object v6 = this.mUsersLock;
	UserInfo v8 = this.this$0.getProfileParentLU(p1);
	UserInfo v7 = v8;
	int v5 = UserInfo.id;
	return v5;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
","public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(ne, to iindex=-1) 11,18,
goto (from iindex= 19 to iindex = 2),
21 = phi  20,19,
return 21,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
","public boolean isUserUnlocked(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	UserManagerService$WatchedUserStates v8 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v9 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v10 = v9.get(p1, -1);
	boolean v7 = phiInstruction;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(ne, to iindex=-1) 11,18,
goto (from iindex= 19 to iindex = 2),
21 = phi  20,19,
return 21,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserUnlocked(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(ne, to iindex=-1) 11,18,
goto (from iindex= 19 to iindex = 2),
21 = phi  20,19,
return 21,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserUnlocked(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
goto (from iindex= 15 to iindex = 8),
24 = invokestatic < Application, Landroid/os/storage/StorageManager, isUserKeyUnlocked(I)Z > 2 @33 exception:23,
return 24,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	boolean v4 = StorageManager.isUserKeyUnlocked(p1);
	return v4;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserUnlocked(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v18 = StorageManager.isUserKeyUnlocked(p1);
	boolean v12 = v18;
	return v12;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @20 exception:10,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 16 @34 exception:17,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
22 = invokestatic < Application, Landroid/provider/Settings$Secure, putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z > 18,19,7,20 @43 exception:21,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @53 exception:34,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
","public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @20 exception:10,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 16 @34 exception:17,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
22 = invokestatic < Application, Landroid/provider/Settings$Secure, putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z > 18,19,7,20 @43 exception:21,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @53 exception:34,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
","public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	UserManagerService.checkCreateUsersPermission(0);
	UserInfo v5 = UserManagerService.createUserInternal(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	UserInfo v3 = v5;
	long v6 = Binder.clearCallingIdentity();
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v9 = UserRestrictionsUtils.isValidRestriction(""no_modify_accounts"");
	Bundle v10 = this.mBaseUserRestrictions.getRestrictions(UserInfo.id);
	Bundle v11 = BundleUtils.clone(v10);
	v11.putBoolean(""no_modify_accounts"", 1);
	UserManagerService.updateUserRestrictionsInternalLR(v11, UserInfo.id);
	ContentResolver v14 = this.mContext.getContentResolver();
	boolean v15 = Settings$Secure.putIntForUser(v14, ""location_mode"", 0, UserInfo.id);
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v18 = UserRestrictionsUtils.isValidRestriction(""no_share_location"");
	Bundle v19 = this.mBaseUserRestrictions.getRestrictions(UserInfo.id);
	Bundle v20 = BundleUtils.clone(v19);
	v20.putBoolean(""no_share_location"", 1);
	UserManagerService.updateUserRestrictionsInternalLR(v20, UserInfo.id);
	Binder.restoreCallingIdentity(v6);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @20 exception:10,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 16 @34 exception:17,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
22 = invokestatic < Application, Landroid/provider/Settings$Secure, putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z > 18,19,7,20 @43 exception:21,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @53 exception:34,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	return;
}
-----
","public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	UserManagerService.checkCreateUsersPermission(0);
	UserInfo v5 = UserManagerService.createUserInternal(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	UserInfo v3 = v5;
	long v6 = Binder.clearCallingIdentity();
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v9 = UserRestrictionsUtils.isValidRestriction(""no_modify_accounts"");
	Bundle v10 = this.mBaseUserRestrictions.getRestrictions(UserInfo.id);
	Bundle v11 = BundleUtils.clone(v10);
	v11.putBoolean(""no_modify_accounts"", 1);
	UserManagerService.updateUserRestrictionsInternalLR(v11, UserInfo.id);
	ContentResolver v14 = this.mContext.getContentResolver();
	boolean v15 = Settings$Secure.putIntForUser(v14, ""location_mode"", 0, UserInfo.id);
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v18 = UserRestrictionsUtils.isValidRestriction(""no_share_location"");
	Binder.restoreCallingIdentity(v6);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @20 exception:10,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 16 @34 exception:17,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
22 = invokestatic < Application, Landroid/provider/Settings$Secure, putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z > 18,19,7,20 @43 exception:21,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @53 exception:34,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 2
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v6 = UserManagerService.hasCreateUsersPermission();
	boolean v8 = UserManager.isUserTypeCloneProfile(p2);
	boolean v9 = UserManager.isUserTypeManagedProfile(p2);
	int v10 = UserHandle.getCallingUserId();
	UserManagerService.enforceUserRestriction(phiInstruction, v10, ""Cannot add user"");
	UserInfo v12 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	UserInfo v7 = v12;
	UserInfo v4 = v7;
	long v13 = Binder.clearCallingIdentity();
	boolean v16 = UserManagerService.hasManageUsersPermission();
	boolean v18 = this.USER_RESTRICTIONS.contains(p1);
	int v19 = Binder.getCallingUid();
	IPackageManager v20 = AppGlobals.getPackageManager();
	String v21 = v20.getPackagesForUid(v19);
	boolean v31 = UserRestrictionsUtils.isSystemApp(v19, phiInstruction);
	boolean v17 = 0;
	Object v35 = this.mUserRestrictions.get(p3);
	Bundle v34 = v35;
	Bundle v37 = new Bundle(v34);
	Bundle v36 = v37;
	v36.putBoolean(""no_modify_accounts"", 1);
	Bundle v41 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v42 = UserRestrictionsUtils.nonNull(v41);
	Bundle v43 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v45 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v47 = this.mBaseUserRestrictions.updateRestrictions(p3, v36);
	UserManagerService$UserData v48 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v48);
	Bundle v50 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v51 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v50);
	UserManagerService$3 v52 = new UserManagerService$3(UserManagerService,v50,p3);
	boolean v54 = this.mHandler.post(v52);
	UserManagerService.propagateUserRestrictionsLR(p3, v50, v42);
	Bundle v56 = new Bundle(v50);
	boolean v58 = this.mAppliedUserRestrictions.updateRestrictions(p3, v56);
	ContentResolver v59 = this.mContext.getContentResolver();
	boolean v60 = Settings$Secure.putIntForUser(v59, ""location_mode"", 0, UserInfo.id);
	boolean v63 = UserManagerService.hasManageUsersPermission();
	boolean v65 = this.USER_RESTRICTIONS.contains(p1);
	int v66 = Binder.getCallingUid();
	IPackageManager v67 = AppGlobals.getPackageManager();
	String v68 = v67.getPackagesForUid(v66);
	boolean v78 = UserRestrictionsUtils.isSystemApp(v66, phiInstruction);
	boolean v64 = 0;
	Object v82 = this.mUserRestrictions.get(p3);
	Bundle v81 = v82;
	Bundle v84 = new Bundle(v81);
	Bundle v83 = v84;
	v83.putBoolean(""no_share_location"", 1);
	Bundle v88 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v89 = UserRestrictionsUtils.nonNull(v88);
	Bundle v90 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v92 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v94 = this.mBaseUserRestrictions.updateRestrictions(p3, v83);
	UserManagerService$UserData v95 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v95);
	Bundle v97 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v98 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v97);
	UserManagerService$3 v99 = new UserManagerService$3(UserManagerService,v97,p3);
	boolean v101 = this.mHandler.post(v99);
	UserManagerService.propagateUserRestrictionsLR(p3, v97, v89);
	Bundle v103 = new Bundle(v97);
	boolean v105 = this.mAppliedUserRestrictions.updateRestrictions(p3, v103);
	Binder.restoreCallingIdentity(v13);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @20 exception:10,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 16 @34 exception:17,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
22 = invokestatic < Application, Landroid/provider/Settings$Secure, putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z > 18,19,7,20 @43 exception:21,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @53 exception:34,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 2
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v6 = UserManagerService.hasManageUsersPermission();
	boolean v8 = UserManager.isUserTypeCloneProfile(p2);
	boolean v9 = UserManager.isUserTypeManagedProfile(p2);
	int v10 = UserHandle.getCallingUserId();
	UserManagerService.enforceUserRestriction(phiInstruction, v10, ""Cannot add user"");
	UserInfo v12 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	UserInfo v7 = v12;
	UserInfo v4 = v7;
	long v13 = Binder.clearCallingIdentity();
	boolean v16 = UserManagerService.hasManageUsersPermission();
	boolean v18 = this.USER_RESTRICTIONS.contains(p1);
	int v19 = Binder.getCallingUid();
	IPackageManager v20 = AppGlobals.getPackageManager();
	String v21 = v20.getPackagesForUid(v19);
	boolean v31 = UserRestrictionsUtils.isSystemApp(v19, phiInstruction);
	boolean v17 = 0;
	Object v35 = this.mUserRestrictions.get(p3);
	Bundle v34 = v35;
	Bundle v37 = new Bundle(v34);
	Bundle v36 = v37;
	v36.putBoolean(""no_modify_accounts"", 1);
	Bundle v41 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v42 = UserRestrictionsUtils.nonNull(v41);
	Bundle v43 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v45 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v47 = this.mBaseUserRestrictions.updateRestrictions(p3, v36);
	UserManagerService$UserData v48 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v48);
	Bundle v50 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v51 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v50);
	UserManagerService$3 v52 = new UserManagerService$3(UserManagerService,v50,p3);
	boolean v54 = this.mHandler.post(v52);
	UserManagerService.propagateUserRestrictionsLR(p3, v50, v42);
	Bundle v56 = new Bundle(v50);
	boolean v58 = this.mAppliedUserRestrictions.updateRestrictions(p3, v56);
	ContentResolver v59 = this.mContext.getContentResolver();
	boolean v60 = Settings$Secure.putIntForUser(v59, ""location_mode"", 0, UserInfo.id);
	boolean v63 = UserManagerService.hasManageUsersPermission();
	boolean v65 = this.USER_RESTRICTIONS.contains(p1);
	int v66 = Binder.getCallingUid();
	IPackageManager v67 = AppGlobals.getPackageManager();
	String v68 = v67.getPackagesForUid(v66);
	boolean v78 = UserRestrictionsUtils.isSystemApp(v66, phiInstruction);
	boolean v64 = 0;
	Object v82 = this.mUserRestrictions.get(p3);
	Bundle v81 = v82;
	Bundle v84 = new Bundle(v81);
	Bundle v83 = v84;
	v83.putBoolean(""no_share_location"", 1);
	Bundle v88 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v89 = UserRestrictionsUtils.nonNull(v88);
	Bundle v90 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v92 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v94 = this.mBaseUserRestrictions.updateRestrictions(p3, v83);
	UserManagerService$UserData v95 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v95);
	Bundle v97 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v98 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v97);
	UserManagerService$3 v99 = new UserManagerService$3(UserManagerService,v97,p3);
	boolean v101 = this.mHandler.post(v99);
	UserManagerService.propagateUserRestrictionsLR(p3, v97, v89);
	Bundle v103 = new Bundle(v97);
	boolean v105 = this.mAppliedUserRestrictions.updateRestrictions(p3, v103);
	Binder.restoreCallingIdentity(v13);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @20 exception:10,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 2 @8 exception:4,
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 16 @34 exception:17,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
22 = invokestatic < Application, Landroid/provider/Settings$Secure, putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z > 18,19,7,20 @43 exception:21,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 15,2,3 @25 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 14 @25 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(Z)V > 19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokespecial < Application, Lcom/android/server/pm/UserManagerService$3, <init>(Lcom/android/server/pm/UserManagerService;Landroid/os/Bundle;I)V > 37,1,31,3 @73 exception:38,
40 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 36,37 @76 exception:39,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 47,31 @86 exception:48,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @53 exception:34,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 2
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v6 = UserManagerService.hasCreateUsersPermission();
	boolean v8 = UserManager.isUserTypeCloneProfile(p2);
	boolean v9 = UserManager.isUserTypeManagedProfile(p2);
	int v10 = UserHandle.getCallingUserId();
	UserManagerService.enforceUserRestriction(phiInstruction, v10, ""Cannot add user"");
	UserInfo v12 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	UserInfo v7 = v12;
	UserInfo v4 = v7;
	long v13 = Binder.clearCallingIdentity();
	boolean v16 = UserManagerService.hasManageUsersPermission();
	boolean v18 = this.USER_RESTRICTIONS.contains(p1);
	int v19 = Binder.getCallingUid();
	IPackageManager v20 = AppGlobals.getPackageManager();
	String v21 = v20.getPackagesForUid(v19);
	boolean v31 = UserRestrictionsUtils.isSystemApp(v19, phiInstruction);
	boolean v17 = 0;
	Object v35 = this.mUserRestrictions.get(p3);
	Bundle v34 = v35;
	Bundle v37 = new Bundle();
	Bundle v36 = v37;
	v36.putBoolean(""no_modify_accounts"", 1);
	Bundle v41 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v42 = UserRestrictionsUtils.nonNull(v41);
	Bundle v43 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v45 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v47 = this.mBaseUserRestrictions.updateRestrictions(p3, v36);
	UserManagerService$UserData v48 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v48);
	Bundle v50 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v51 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v50);
	UserManagerService$3 v52 = new UserManagerService$3(UserManagerService,v50,p3);
	boolean v54 = this.mHandler.post(v52);
	UserManagerService.propagateUserRestrictionsLR(p3, v50, v42);
	Bundle v56 = new Bundle(v50);
	boolean v58 = this.mAppliedUserRestrictions.updateRestrictions(p3, v56);
	ContentResolver v59 = this.mContext.getContentResolver();
	boolean v60 = Settings$Secure.putIntForUser(v59, ""location_mode"", 0, UserInfo.id);
	boolean v63 = UserManagerService.hasManageUsersPermission();
	boolean v65 = this.USER_RESTRICTIONS.contains(p1);
	int v66 = Binder.getCallingUid();
	IPackageManager v67 = AppGlobals.getPackageManager();
	String v68 = v67.getPackagesForUid(v66);
	boolean v78 = UserRestrictionsUtils.isSystemApp(v66, phiInstruction);
	boolean v64 = 0;
	Object v82 = this.mUserRestrictions.get(p3);
	Bundle v81 = v82;
	Bundle v84 = new Bundle(v81);
	Bundle v83 = v84;
	v83.putBoolean(""no_share_location"", 1);
	Bundle v88 = this.mAppliedUserRestrictions.getRestrictions(p3);
	Bundle v89 = UserRestrictionsUtils.nonNull(v88);
	Bundle v90 = this.mBaseUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	Bundle v92 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
	Preconditions.checkState(phiInstruction);
	boolean v94 = this.mBaseUserRestrictions.updateRestrictions(p3, v83);
	UserManagerService$UserData v95 = UserManagerService.getUserDataNoChecks(p3);
	UserManagerService.scheduleWriteUser(v95);
	Bundle v97 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
	boolean v98 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v97);
	UserManagerService$3 v99 = new UserManagerService$3(UserManagerService,v97,p3);
	boolean v101 = this.mHandler.post(v99);
	UserManagerService.propagateUserRestrictionsLR(p3, v97, v89);
	Bundle v103 = new Bundle(v97);
	boolean v105 = this.mAppliedUserRestrictions.updateRestrictions(p3, v103);
	Binder.restoreCallingIdentity(v13);
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","0","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
17 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @27 exception:16,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
","public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","1","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
17 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @27 exception:16,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
","public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	boolean v6 = phiInstruction;
	int v8 = UserHandle.getUserId(v1);
	Object v10 = this.mUsers.get(v8);
	boolean v11 = this.mRemovingUserIds.get(v8);
	UserInfo v9 = 0;
	boolean v19 = v9.isGuest();
	String v20 = UserManagerService.getGuestName();
	UserInfo v21 = new UserInfo(v9);
	UserInfo.name = phiInstruction;
	UserInfo v18 = v21;
	return UserInfo.name;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","1","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
17 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @27 exception:16,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 25,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return """";
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
","public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	boolean v6 = phiInstruction;
	int v8 = UserHandle.getUserId(v1);
	Object v10 = this.mUsers.get(v8);
	boolean v11 = this.mRemovingUserIds.get(v8);
	UserInfo v9 = 0;
	boolean v19 = v9.isGuest();
	String v20 = UserManagerService.getGuestName();
	UserInfo v21 = new UserInfo(v9);
	UserInfo.name = phiInstruction;
	UserInfo v18 = v21;
	return """";
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","2","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
17 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @27 exception:16,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getString(I)Ljava/lang/String; > 2,3 @5 exception:4,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v3 = v4;
	int v5 = Binder.getCallingUid();
	boolean v6 = phiInstruction;
	boolean v2 = phiInstruction;
	boolean v8 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v9 = UserHandle.getUserId(v1);
	UserInfo v10 = p0.getUserInfoLU(v9);
	boolean v13 = UserManager.isUserTypeGuest(this.userType);
	boolean v12 = v13;
	String v15 = this.mContext.getString(17040437);
	String v14 = v15;
	UserInfo v16 = new UserInfo(v10);
	UserInfo.name = phiInstruction;
	UserInfo v11 = v16;
	return UserInfo.name;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","2","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
17 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @27 exception:16,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getString(I)Ljava/lang/String; > 2,3 @5 exception:4,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v3 = v4;
	int v5 = Binder.getCallingUid();
	boolean v6 = phiInstruction;
	boolean v2 = phiInstruction;
	boolean v8 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v9 = UserHandle.getUserId(v1);
	UserInfo v10 = p0.getUserInfoLU(v9);
	boolean v13 = UserManager.isUserTypeGuest(this.userType);
	boolean v12 = v13;
	String v15 = this.mContext.getString(17040437);
	String v14 = v15;
	UserInfo v16 = new UserInfo(v10);
	UserInfo.name = phiInstruction;
	UserInfo v11 = v16;
	return UserInfo.name;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","2","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
17 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @27 exception:16,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getString(I)Ljava/lang/String; > 2,3 @5 exception:4,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
invokespecial < Application, Landroid/content/pm/UserInfo, <init>(Landroid/content/pm/UserInfo;)V > 17,2 @30 exception:18,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 25,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return """";
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v3 = v4;
	int v5 = Binder.getCallingUid();
	boolean v6 = phiInstruction;
	boolean v2 = phiInstruction;
	boolean v8 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v9 = UserHandle.getUserId(v1);
	UserInfo v10 = p0.getUserInfoLU(v9);
	boolean v13 = UserManager.isUserTypeGuest(this.userType);
	boolean v12 = v13;
	String v15 = this.mContext.getString(17040437);
	String v14 = v15;
	UserInfo v16 = new UserInfo(v10);
	UserInfo.name = phiInstruction;
	UserInfo v11 = v16;
	return """";
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","0","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
","public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","1","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
","public boolean isSameProfileGroup(int p1, int p2){
	boolean v2 = UserManagerService.hasQueryUsersPermission();
	UserInfo v4 = UserManagerService.getUserInfoLU(p1);
	UserInfo v5 = UserManagerService.getUserInfoLU(p2);
	boolean v3 = phiInstruction;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","2","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isSameProfileGroup(int p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	boolean v2 = v3;
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	Object v15 = this.mUsers.get(p2);
	boolean v16 = this.mRemovingUserIds.get(p2);
	UserInfo v14 = 0;
	boolean v4 = phiInstruction;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","2","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
goto (from iindex= 15 to iindex = 8),
monitorexit 4,
return 7,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isSameProfileGroup(int p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	boolean v2 = v3;
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	Object v15 = this.mUsers.get(p2);
	boolean v16 = this.mRemovingUserIds.get(p2);
	UserInfo v14 = 0;
	boolean v4 = 0;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","0","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
","public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""get application restrictions for other user/app "");
	StringBuilder v8 = v5.append(p1);
	String v9 = v5.toString();
	UserManagerService.checkSystemOrRoot(v9);
	Bundle v11 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v11;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","1","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
6 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,6,8 @12 exception:9,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @15 exception:10,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""get application restrictions for other user/app "");
	StringBuilder v8 = v5.append(p1);
	String v9 = v5.toString();
	AtomicFile v14 = new AtomicFile(v15);
	File v15 = new File(v16,v17);
	File v16 = Environment.getUserSystemDirectory(p2);
	String v17 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v20 = UserManagerService.readApplicationRestrictionsLAr(v14);
	Bundle v13 = v20;
	return v13;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","1","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
6 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,6,8 @12 exception:9,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @15 exception:10,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""get application restrictions for other user/app "");
	StringBuilder v8 = v5.append(p1);
	String v9 = v5.toString();
	AtomicFile v14 = new AtomicFile(v15);
	File v15 = new File(v16,v17);
	File v16 = Environment.getUserSystemDirectory(p2);
	String v17 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v20 = UserManagerService.readApplicationRestrictionsLAr(v14);
	Bundle v13 = v20;
	return v13;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","2","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
6 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,9 @15 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @18 exception:12,
return 13,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,6,8 @12 exception:9,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @15 exception:10,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
3 = new <Application,Landroid/os/Bundle>@2,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 3 @4 exception:4,
5 = new <Application,Ljava/util/ArrayList>@7,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 5 @9 exception:6,
8 = invokevirtual < Application, Landroid/util/AtomicFile, getBaseFile()Ljava/io/File; > 1 @12 exception:7,
10 = invokevirtual < Application, Ljava/io/File, exists()Z > 8 @16 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
13 = invokevirtual < Application, Landroid/util/AtomicFile, openRead()Ljava/io/FileInputStream; > 1 @24 exception:12,
15 = invokestatic < Application, Landroid/util/Xml, resolvePullParser(Ljava/io/InputStream;)Landroid/util/TypedXmlPullParser; > 13 @28 exception:14,
invokestatic < Application, Lcom/android/internal/util/XmlUtils, nextElement(Lorg/xmlpull/v1/XmlPullParser;)V > 15 @32 exception:16,
18 = invokeinterface < Application, Landroid/util/TypedXmlPullParser, getEventType()I > 15 @35 exception:17,
conditional branch(eq, to iindex=-1) 18,19,
28 = new <Application,Ljava/lang/StringBuilder>@42,
48 = getCaughtException ,
42 = phi  11,13,13,13,13,13,13,13,13,13,13,13,13,13,
49 = new <Application,Ljava/lang/StringBuilder>@88,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 49 @90 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 49,51 @95 exception:52,
55 = invokevirtual < Application, Landroid/util/AtomicFile, getBaseFile()Ljava/io/File; > 1 @98 exception:54,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 49,55 @102 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 49 @105 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 2,59,48 @109 exception:60,
goto (from iindex= 54 to iindex = -31),
63 = phi  13,42,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 63 @81 exception:70,
goto (from iindex= 40 to iindex = 29),
return 3,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(AtomicFile p1){
	Bundle v0 = new Bundle();
	ArrayList v1 = new ArrayList();
	File v3 = p1.getBaseFile();
	boolean v4 = v3.exists();
	FileInputStream v5 = p1.openRead();
	TypedXmlPullParser v6 = Xml.resolvePullParser(v5);
	XmlUtils.nextElement(v6);
	int v8 = v6.getEventType();
	StringBuilder v8 = new StringBuilder;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error parsing "");
	File v11 = p1.getBaseFile();
	StringBuilder v12 = v8.append(v11);
	String v13 = v8.toString();
	int v14 = Slog.w(""UserManagerService"", v13, caughtException);
	IoUtils.closeQuietly(phiInstruction);
	return v0;
}
-----
","public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""get application restrictions for other user/app "");
	StringBuilder v8 = v5.append(p1);
	String v9 = v5.toString();
	AtomicFile v14 = new AtomicFile(v15);
	File v15 = new File(v16,v17);
	File v16 = Environment.getUserSystemDirectory(p2);
	StringBuilder v18 = new StringBuilder();
	StringBuilder v20 = v18.append(""res_"");
	StringBuilder v21 = v18.append(p1);
	StringBuilder v22 = v18.append("".xml"");
	String v23 = v18.toString();
	String v17 = v23;
	Bundle v27 = new Bundle();
	ArrayList v29 = new ArrayList();
	File v31 = v14.getBaseFile();
	boolean v32 = v31.exists();
	FileInputStream v33 = v14.openRead();
	TypedXmlPullParser v34 = Xml.resolvePullParser(v33);
	XmlUtils.nextElement(v34);
	int v36 = v34.getEventType();
	StringBuilder v37 = new StringBuilder;
	File v41 = v14.getBaseFile();
	IoUtils.closeQuietly(phiInstruction);
	Bundle v26 = v27;
	Bundle v13 = v26;
	return v13;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","2","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
6 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,9 @15 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @18 exception:12,
return 13,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,6,8 @12 exception:9,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @15 exception:10,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
3 = new <Application,Landroid/os/Bundle>@2,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 3 @4 exception:4,
5 = new <Application,Ljava/util/ArrayList>@7,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 5 @9 exception:6,
8 = invokevirtual < Application, Landroid/util/AtomicFile, getBaseFile()Ljava/io/File; > 1 @12 exception:7,
10 = invokevirtual < Application, Ljava/io/File, exists()Z > 8 @16 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
13 = invokevirtual < Application, Landroid/util/AtomicFile, openRead()Ljava/io/FileInputStream; > 1 @24 exception:12,
15 = invokestatic < Application, Landroid/util/Xml, resolvePullParser(Ljava/io/InputStream;)Landroid/util/TypedXmlPullParser; > 13 @28 exception:14,
invokestatic < Application, Lcom/android/internal/util/XmlUtils, nextElement(Lorg/xmlpull/v1/XmlPullParser;)V > 15 @32 exception:16,
18 = invokeinterface < Application, Landroid/util/TypedXmlPullParser, getEventType()I > 15 @35 exception:17,
conditional branch(eq, to iindex=-1) 18,19,
28 = new <Application,Ljava/lang/StringBuilder>@42,
48 = getCaughtException ,
42 = phi  11,13,13,13,13,13,13,13,13,13,13,13,13,13,
49 = new <Application,Ljava/lang/StringBuilder>@88,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 49 @90 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 49,51 @95 exception:52,
55 = invokevirtual < Application, Landroid/util/AtomicFile, getBaseFile()Ljava/io/File; > 1 @98 exception:54,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 49,55 @102 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 49 @105 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 2,59,48 @109 exception:60,
goto (from iindex= 54 to iindex = -31),
63 = phi  13,42,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 63 @81 exception:70,
goto (from iindex= 40 to iindex = 29),
return 3,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(AtomicFile p1){
	Bundle v0 = new Bundle();
	ArrayList v1 = new ArrayList();
	File v3 = p1.getBaseFile();
	boolean v4 = v3.exists();
	FileInputStream v5 = p1.openRead();
	TypedXmlPullParser v6 = Xml.resolvePullParser(v5);
	XmlUtils.nextElement(v6);
	int v8 = v6.getEventType();
	StringBuilder v8 = new StringBuilder;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error parsing "");
	File v11 = p1.getBaseFile();
	StringBuilder v12 = v8.append(v11);
	String v13 = v8.toString();
	int v14 = Slog.w(""UserManagerService"", v13, caughtException);
	IoUtils.closeQuietly(phiInstruction);
	return v0;
}
-----
","public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""get application restrictions for other user/app "");
	StringBuilder v8 = v5.append(p1);
	String v9 = v5.toString();
	AtomicFile v14 = new AtomicFile(v15);
	File v15 = new File(v16,v17);
	File v16 = Environment.getUserSystemDirectory(p2);
	StringBuilder v18 = new StringBuilder();
	StringBuilder v20 = v18.append(""res_"");
	StringBuilder v21 = v18.append(p1);
	StringBuilder v22 = v18.append("".xml"");
	String v23 = v18.toString();
	String v17 = v23;
	Bundle v27 = new Bundle();
	ArrayList v29 = new ArrayList();
	File v31 = v14.getBaseFile();
	boolean v32 = v31.exists();
	FileInputStream v33 = v14.openRead();
	TypedXmlPullParser v34 = Xml.resolvePullParser(v33);
	XmlUtils.nextElement(v34);
	int v36 = v34.getEventType();
	StringBuilder v37 = new StringBuilder;
	File v41 = v14.getBaseFile();
	IoUtils.closeQuietly(phiInstruction);
	Bundle v26 = v27;
	Bundle v13 = v26;
	return v13;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","2","5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
6 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,9 @15 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @18 exception:12,
return 13,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,6,8 @12 exception:9,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @15 exception:10,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
3 = new <Application,Landroid/os/Bundle>@2,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 3 @4 exception:4,
5 = new <Application,Ljava/util/ArrayList>@7,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 5 @9 exception:6,
8 = invokevirtual < Application, Landroid/util/AtomicFile, getBaseFile()Ljava/io/File; > 1 @12 exception:7,
10 = invokevirtual < Application, Ljava/io/File, exists()Z > 8 @16 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
13 = invokevirtual < Application, Landroid/util/AtomicFile, openRead()Ljava/io/FileInputStream; > 1 @24 exception:12,
15 = invokestatic < Application, Landroid/util/Xml, resolvePullParser(Ljava/io/InputStream;)Landroid/util/TypedXmlPullParser; > 13 @28 exception:14,
invokestatic < Application, Lcom/android/internal/util/XmlUtils, nextElement(Lorg/xmlpull/v1/XmlPullParser;)V > 15 @32 exception:16,
18 = invokeinterface < Application, Landroid/util/TypedXmlPullParser, getEventType()I > 15 @35 exception:17,
conditional branch(eq, to iindex=-1) 18,19,
28 = new <Application,Ljava/lang/StringBuilder>@42,
48 = getCaughtException ,
42 = phi  11,13,13,13,13,13,13,13,13,13,13,13,13,13,
49 = new <Application,Ljava/lang/StringBuilder>@88,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 49 @90 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 49,51 @95 exception:52,
55 = invokevirtual < Application, Landroid/util/AtomicFile, getBaseFile()Ljava/io/File; > 1 @98 exception:54,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 49,55 @102 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 49 @105 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 2,59,48 @109 exception:60,
goto (from iindex= 54 to iindex = -31),
63 = phi  13,42,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 63 @81 exception:70,
goto (from iindex= 40 to iindex = 29),
return 3,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""get application restrictions for other user/app "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkSystemOrRoot(v5);
	Bundle v7 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v7;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(AtomicFile p1){
	Bundle v0 = new Bundle();
	ArrayList v1 = new ArrayList();
	File v3 = p1.getBaseFile();
	boolean v4 = v3.exists();
	FileInputStream v5 = p1.openRead();
	TypedXmlPullParser v6 = Xml.resolvePullParser(v5);
	XmlUtils.nextElement(v6);
	int v8 = v6.getEventType();
	StringBuilder v8 = new StringBuilder;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error parsing "");
	File v11 = p1.getBaseFile();
	StringBuilder v12 = v8.append(v11);
	String v13 = v8.toString();
	int v14 = Slog.w(""UserManagerService"", v13, caughtException);
	IoUtils.closeQuietly(phiInstruction);
	return v0;
}
-----
","public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""get application restrictions for other user/app "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	AtomicFile v11 = new AtomicFile(v12);
	File v12 = new File(v13,v14);
	File v13 = Environment.getUserSystemDirectory(p2);
	StringBuilder v15 = new StringBuilder();
	StringBuilder v17 = v15.append(""res_"");
	StringBuilder v18 = v15.append(p1);
	StringBuilder v19 = v15.append("".xml"");
	String v20 = v15.toString();
	String v14 = v20;
	Bundle v24 = new Bundle();
	ArrayList v26 = new ArrayList();
	File v28 = v11.getBaseFile();
	boolean v29 = v28.exists();
	FileInputStream v30 = v11.openRead();
	TypedXmlPullParser v31 = Xml.resolvePullParser(v30);
	XmlUtils.nextElement(v31);
	int v33 = v31.getEventType();
	StringBuilder v34 = new StringBuilder;
	File v38 = v11.getBaseFile();
	IoUtils.closeQuietly(phiInstruction);
	Bundle v23 = v24;
	Bundle v10 = v23;
	return v10;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
","public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","public UserInfo createUserWithThrow(String p1, String p2, int p3){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v4 = UserManager.isUserTypeCloneProfile(p2);
	boolean v5 = UserManager.isUserTypeManagedProfile(p2);
	int v6 = UserHandle.getCallingUserId();
	UserManagerService.enforceUserRestriction(phiInstruction, v6, ""Cannot add user"");
	UserInfo v8 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, -10000, 0, 0, 0);
	UserInfo v3 = v8;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","public UserInfo createUserWithThrow(String p1, String p2, int p3){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	boolean v4 = UserManager.isUserTypeCloneProfile(p2);
	boolean v5 = UserManager.isUserTypeManagedProfile(p2);
	int v6 = UserHandle.getCallingUserId();
	UserManagerService.enforceUserRestriction(phiInstruction, v6, ""Cannot add user"");
	UserInfo v8 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, -10000, 0, 0, 0);
	UserInfo v3 = v8;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createUserWithThrow(String p1, String p2, int p3){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v5 = UserManager.isUserTypeCloneProfile(p2);
	boolean v6 = UserManager.isUserTypeManagedProfile(p2);
	int v7 = UserHandle.getCallingUserId();
	int v11 = UserManagerService.getNextAvailableId();
	long v20 = UserManagerService.logUserCreateJourneyBegin(v11, p2, p3);
	UserInfo v21 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v12, 0);
	UserManagerService.logUserCreateJourneyFinish(v20, v11, phiInstruction);
	v12.traceEnd();
	UserInfo v10 = v21;
	UserInfo v4 = v10;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createUserWithThrow(String p1, String p2, int p3){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v6 = UserManager.isUserTypeCloneProfile(p2);
	boolean v7 = UserManager.isUserTypeManagedProfile(p2);
	int v8 = UserHandle.getCallingUserId();
	int v12 = UserManagerService.getNextAvailableId();
	long v21 = UserManagerService.logUserCreateJourneyBegin(v12, p2, p3);
	UserInfo v22 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v13, 0);
	UserManagerService.logUserCreateJourneyFinish(v21, v12, phiInstruction);
	v13.traceEnd();
	UserInfo v11 = v22;
	UserInfo v5 = v11;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createUserWithThrow(String p1, String p2, int p3){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v5 = UserManager.isUserTypeCloneProfile(p2);
	boolean v6 = UserManager.isUserTypeManagedProfile(p2);
	int v7 = UserHandle.getCallingUserId();
	int v11 = UserManagerService.getNextAvailableId();
	long v20 = UserManagerService.logUserCreateJourneyBegin(v11, p2, p3);
	UserInfo v21 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v12, 0);
	UserManagerService.logUserCreateJourneyFinish(v20, v11, phiInstruction);
	v12.traceEnd();
	UserInfo v10 = v21;
	UserInfo v4 = v10;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserStartRealtime()J","0","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @4 exception:4,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,5 @11 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, startRealtime, <Primordial,J> > 8,
monitorexit 6,
return 11,","depth : 0
public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.startRealtime;
}
-----
","public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.startRealtime;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserStartRealtime()J","1","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @4 exception:4,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,5 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, startRealtime, <Primordial,J> > 8,
monitorexit 6,
return 11,","depth : 0
public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.startRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v4 = this.mUsers.get(v2);
	boolean v5 = this.mRemovingUserIds.get(v2);
	UserManagerService$UserData v3 = 0;
	return UserManagerService$UserData.startRealtime;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserStartRealtime()J","1","3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @4 exception:4,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,5 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, startRealtime, <Primordial,J> > 8,
monitorexit 6,
return 11,","depth : 0
public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.startRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v4 = this.mUsers.get(v2);
	boolean v5 = this.mRemovingUserIds.get(v2);
	UserManagerService$UserData v3 = v4;
	return UserManagerService$UserData.startRealtime;
}
","NONE"

"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","0","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
7 = invokeinterface < Application, Ljava/util/List, size()I > 5 @4 exception:6,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
","public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","1","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
invokespecial < Application, Landroid/os/UserManager$EnforcingUser, <init>(II)V > 13,14,15 @32 exception:16,
18 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 9,13 @35 exception:17,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,
7 = invokeinterface < Application, Ljava/util/List, size()I > 5 @4 exception:6,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
depth : 1
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
","public int getUserRestrictionSource(String p1, int p2){
	ArrayList v4 = new ArrayList();
	boolean v6 = UserManagerService.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v7 = new UserManager$EnforcingUser(-10000,1);
	boolean v9 = v4.add(v7);
	RestrictionsSet v10 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v11 = v10.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v12 = v4.addAll(v11);
	List v13 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v14 = v4.addAll(v13);
	List v1 = v4;
	int v15 = v1.size();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","2","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
invokespecial < Application, Landroid/os/UserManager$EnforcingUser, <init>(II)V > 13,14,15 @32 exception:16,
18 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 9,13 @35 exception:17,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
invokespecial < Application, Lcom/android/server/pm/RestrictionsSet, <init>()V > 8 @12 exception:9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 10,2,8 @17 exception:11,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,
7 = invokeinterface < Application, Ljava/util/List, size()I > 5 @4 exception:6,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
depth : 1
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 2
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","public int getUserRestrictionSource(String p1, int p2){
	ArrayList v4 = new ArrayList();
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v9 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v10 = v9.getBoolean(p1, 0);
	boolean v6 = phiInstruction;
	UserManager$EnforcingUser v11 = new UserManager$EnforcingUser(-10000,1);
	boolean v13 = v4.add(v11);
	Object v15 = this.mDevicePolicyLocalUserRestrictions.get(p2);
	RestrictionsSet v16 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p2, v16);
	RestrictionsSet v14 = phiInstruction;
	ArrayList v20 = new ArrayList();
	int v22 = this.mUserRestrictions.size();
	List v19 = v20;
	boolean v23 = v4.addAll(v19);
	ArrayList v25 = new ArrayList();
	int v27 = this.mUserRestrictions.size();
	List v24 = v25;
	boolean v28 = v4.addAll(v24);
	List v1 = v4;
	int v29 = v1.size();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","2","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/ArrayList>@16,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 9 @18 exception:10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
invokespecial < Application, Landroid/os/UserManager$EnforcingUser, <init>(II)V > 13,14,15 @32 exception:16,
18 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 9,13 @35 exception:17,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
invokespecial < Application, Lcom/android/server/pm/RestrictionsSet, <init>()V > 8 @12 exception:9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 10,2,8 @17 exception:11,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
29 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,27 @51 exception:28,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @8 exception:8,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
35 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 9,33 @62 exception:34,
monitorexit 22,
return 9,
7 = invokeinterface < Application, Ljava/util/List, size()I > 5 @4 exception:6,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
depth : 1
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 2
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	return phiInstruction;
}
-----
depth : 2
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","public int getUserRestrictionSource(String p1, int p2){
	ArrayList v4 = new ArrayList();
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v9 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v6 = phiInstruction;
	UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
	boolean v12 = v4.add(v10);
	Object v14 = this.mDevicePolicyLocalUserRestrictions.get(p2);
	RestrictionsSet v15 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p2, v15);
	RestrictionsSet v13 = phiInstruction;
	ArrayList v19 = new ArrayList();
	int v21 = this.mUserRestrictions.size();
	List v18 = v19;
	boolean v22 = v4.addAll(v18);
	ArrayList v24 = new ArrayList();
	int v26 = this.mUserRestrictions.size();
	List v23 = v24;
	boolean v27 = v4.addAll(v23);
	List v1 = v4;
	int v28 = v1.size();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
","public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 20 to iindex = 3),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
","public boolean isUserUnlockingOrUnlocked(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	UserManagerService$WatchedUserStates v8 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v9 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v10 = v9.get(p1, -1);
	boolean v7 = phiInstruction;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 20 to iindex = 3),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserUnlockingOrUnlocked(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 22 to iindex = 2),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserUnlockingOrUnlocked(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, indexOfKey(I)I > 4,2 @2 exception:5,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseIntArray, get(I)I > 8,2 @10 exception:9,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 20 to iindex = 3),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","public boolean isUserUnlockingOrUnlocked(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserManagerService$WatchedUserStates v13 = this.mUserStates;
	UserManagerService$WatchedUserStates v14 = this.mUserStates;
	int v16 = this.states.indexOfKey(p1);
	int v17 = this.states.get(p1);
	int v15 = phiInstruction;
	boolean v12 = phiInstruction;
	return v12;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
14 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,12 @25 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @44 exception:25,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @51 exception:30,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
","public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
14 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,12 @25 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @44 exception:25,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
3 = new <Application,Landroid/content/Intent>@0,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 3,4 @4 exception:5,
8 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;I)Landroid/content/Intent; > 3,6,2 @9 exception:7,
11 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 3,9 @14 exception:10,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
13 = getstatic < Application, Landroid/os/UserHandle, ALL, <Application,Landroid/os/UserHandle> >,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 12,3,13 @21 exception:14,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @51 exception:30,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 1
public void sendUserInfoChangedBroadcast(int p1){
	Intent v0 = new Intent(""android.intent.action.USER_INFO_CHANGED"");
	Intent v2 = v0.putExtra(""android.intent.extra.user_handle"", p1);
	Intent v3 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, UserHandle.ALL);
	return;
}
-----
","public void setUserName(int p1, String p2){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	UserManagerService$UserData v3 = v4;
	boolean v5 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	AtomicFile v7 = new AtomicFile(v8);
	File v8 = new File(this.mUsersDir,v13);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(UserInfo.id);
	StringBuilder v12 = v9.append("".xml"");
	String v13 = v9.toString();
	FileOutputStream v16 = v7.startWrite();
	UserManagerService.writeUserLP(v3, v16);
	v7.finishWrite(v16);
	v7.failWrite(phiInstruction);
	long v26 = Binder.clearCallingIdentity();
	Intent v28 = new Intent(""android.intent.action.USER_INFO_CHANGED"");
	Intent v30 = v28.putExtra(""android.intent.extra.user_handle"", p1);
	Intent v31 = v28.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v28, UserHandle.ALL);
	Binder.restoreCallingIdentity(v26);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
14 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,12 @25 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @44 exception:25,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
3 = new <Application,Landroid/content/Intent>@0,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 3,4 @4 exception:5,
8 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;I)Landroid/content/Intent; > 3,6,2 @9 exception:7,
11 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 3,9 @14 exception:10,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
13 = getstatic < Application, Landroid/os/UserHandle, ALL, <Application,Landroid/os/UserHandle> >,
invokevirtual < Application, Landroid/content/Context, sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V > 12,3,13 @21 exception:14,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @51 exception:30,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 1
public void sendUserInfoChangedBroadcast(int p1){
	Intent v0 = new Intent(""android.intent.action.USER_INFO_CHANGED"");
	Intent v2 = v0.putExtra(""android.intent.extra.user_handle"", p1);
	Intent v3 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, UserHandle.ALL);
	return;
}
-----
","public void setUserName(int p1, String p2){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	UserManagerService$UserData v3 = v4;
	boolean v5 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	AtomicFile v7 = new AtomicFile(v8);
	File v8 = new File(this.mUsersDir,v13);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(UserInfo.id);
	StringBuilder v12 = v9.append("".xml"");
	String v13 = v9.toString();
	FileOutputStream v16 = v7.startWrite();
	UserManagerService.writeUserLP(v3, v16);
	v7.failWrite(phiInstruction);
	long v25 = Binder.clearCallingIdentity();
	Intent v27 = new Intent(""android.intent.action.USER_INFO_CHANGED"");
	Intent v29 = v27.putExtra(""android.intent.extra.user_handle"", p1);
	Intent v30 = v27.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v27, UserHandle.ALL);
	Binder.restoreCallingIdentity(v25);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
14 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,12 @25 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @44 exception:25,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @51 exception:30,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void setUserName(int p1, String p2){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataNoChecks(p1);
	boolean v6 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v5);
	long v8 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v8);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
14 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,12 @25 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void setUserName(int p1, String p2){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataNoChecks(p1);
	boolean v6 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
14 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,12 @25 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @44 exception:25,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @51 exception:30,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	long v4 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void setUserName(int p1, String p2){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataNoChecks(p1);
	boolean v6 = p2.equals(UserInfo.name);
	long v7 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v7);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
","public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsCredentialSharableWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isCredentialSharableWithParent(){
	return this.mIsCredentialSharableWithParent;
}
-----
","public boolean isCredentialSharableWithParent(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	boolean v11 = this.mIsCredentialSharableWithParent;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsCredentialSharableWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isCredentialSharableWithParent(){
	return this.mIsCredentialSharableWithParent;
}
-----
","public boolean isCredentialSharableWithParent(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	boolean v11 = this.mIsCredentialSharableWithParent;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isCredentialSharableWithParent(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.isProfile();
	boolean v17 = v12.isCredentialSharableWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isCredentialSharableWithParent(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.isProfile();
	boolean v17 = v12.isCredentialSharableWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isCredentialSharableWithParent(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.isProfile();
	boolean v17 = v12.isCredentialSharableWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge dark color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
","public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,5 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
10 = invokestatic < Application, Ljava/lang/Math, min(II)I > 2,8 @13 exception:9,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeColor(int p1){
	int v1 = Math.min(p1, (this.mBadgeColors.length + -1));
	return this.mBadgeColors[v1];
}
-----
","public int getUserBadgeColorResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	UserInfo v7 = phiInstruction;
	Object v10 = this.mUserTypes.get(phiInstruction);
	UserTypeDetails v9 = phiInstruction;
	boolean v11 = phiInstruction;
	int v13 = Math.min(UserInfo.profileBadge, (this.mBadgeColors.length + -1));
	int v12 = this.mBadgeColors[v13];
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,5 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
10 = invokestatic < Application, Ljava/lang/Math, min(II)I > 2,8 @13 exception:9,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeColor(int p1){
	int v1 = Math.min(p1, (this.mBadgeColors.length + -1));
	return this.mBadgeColors[v1];
}
-----
","public int getUserBadgeColorResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	UserInfo v7 = phiInstruction;
	Object v10 = this.mUserTypes.get(phiInstruction);
	UserTypeDetails v9 = phiInstruction;
	boolean v11 = phiInstruction;
	int v13 = Math.min(UserInfo.profileBadge, (this.mBadgeColors.length + -1));
	int v12 = this.mBadgeColors[v13];
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge dark color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeColorResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	boolean v14 = v13.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge dark color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeColorResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	boolean v14 = v13.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge dark color for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeColorResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isPreCreated(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public boolean isPreCreated(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isPreCreated(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isPreCreated(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public boolean isPreCreated(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","0","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @23 exception:14,
17 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,15 @27 exception:16,
18 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 17,
19 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 12,
conditional branch(eq, to iindex=-1) 18,20,
conditional branch(ne, to iindex=-1) 18,19,
goto (from iindex= 23 to iindex = 2),
22 = phi  21,6,
conditional branch(eq, to iindex=-1) 15,2,
conditional branch(ne, to iindex=-1) 22,6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 23 @50 exception:24,
27 = getfield < Application, Landroid/content/pm/UserInfo, iconPath, <Application,Ljava/lang/String> > 12,
conditional branch(ne, to iindex=-1) 27,6,
monitorexit 10,
28 = new <Application,Ljava/io/File>@60,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 28,27 @62 exception:29,
32 = invokestatic < Application, Landroid/os/ParcelFileDescriptor, open(Ljava/io/File;I)Landroid/os/ParcelFileDescriptor; > 28,30 @67 exception:31,
36 = getCaughtException ,
40 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 37,38,36 @77 exception:39,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	UserManagerService.checkManageUsersPermission(""get the icon of a user who is not related"");
	File v5 = new File(UserInfo.iconPath);
	ParcelFileDescriptor v7 = ParcelFileDescriptor.open(v5, 268435456);
	int v8 = Slog.e(""UserManagerService"", ""Couldn't find icon file"", caughtException);
	return 0;
}
-----
","public ParcelFileDescriptor getUserIcon(int p1){
	UserManagerService.checkManageUsersPermission(""get the icon of a user who is not related"");
	File v6 = new File(UserInfo.iconPath);
	ParcelFileDescriptor v8 = ParcelFileDescriptor.open(v6, 268435456);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 41 @85 exception:42,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 41,43 @90 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 41,2 @93 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 41 @96 exception:48,
51 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 37,49 @100 exception:50,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
","public ParcelFileDescriptor getUserIcon(int p1){
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasManageUsersPermission(v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v2);
	boolean v1 = phiInstruction;
	Object v6 = this.mUsers.get(p1);
	UserInfo v5 = phiInstruction;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 41 @85 exception:42,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 41,43 @90 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 41,2 @93 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 41 @96 exception:48,
51 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 37,49 @100 exception:50,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
","public ParcelFileDescriptor getUserIcon(int p1){
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasManageUsersPermission(v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v2);
	boolean v1 = phiInstruction;
	Object v6 = this.mUsers.get(p1);
	UserInfo v5 = phiInstruction;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 41 @85 exception:42,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 41,43 @90 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 41,2 @93 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 41 @96 exception:48,
51 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 37,49 @100 exception:50,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public ParcelFileDescriptor getUserIcon(int p1){
	int v2 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v3 = phiInstruction;
	boolean v6 = phiInstruction;
	boolean v1 = phiInstruction;
	UserInfo v8 = p0.getUserInfoNoChecks(p1);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
4 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 1,2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 41 @85 exception:42,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 41,43 @90 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 41,2 @93 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 41 @96 exception:48,
51 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 37,49 @100 exception:50,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public ParcelFileDescriptor getUserIcon(int p1){
	int v2 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v3 = phiInstruction;
	boolean v6 = phiInstruction;
	boolean v1 = phiInstruction;
	UserInfo v8 = p0.getUserInfoNoChecks(p1);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @23 exception:14,
17 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,15 @27 exception:16,
18 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 17,
19 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 12,
conditional branch(eq, to iindex=-1) 18,20,
conditional branch(ne, to iindex=-1) 18,19,
goto (from iindex= 23 to iindex = 2),
22 = phi  21,6,
conditional branch(eq, to iindex=-1) 15,2,
conditional branch(ne, to iindex=-1) 22,6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 23 @50 exception:24,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
27 = getfield < Application, Landroid/content/pm/UserInfo, iconPath, <Application,Ljava/lang/String> > 12,
conditional branch(ne, to iindex=-1) 27,6,
monitorexit 10,
28 = new <Application,Ljava/io/File>@60,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 28,27 @62 exception:29,
32 = invokestatic < Application, Landroid/os/ParcelFileDescriptor, open(Ljava/io/File;I)Landroid/os/ParcelFileDescriptor; > 28,30 @67 exception:31,
36 = getCaughtException ,
40 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 37,38,36 @77 exception:39,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	UserManagerService.checkManageUsersPermission(""get the icon of a user who is not related"");
	File v5 = new File(UserInfo.iconPath);
	ParcelFileDescriptor v7 = ParcelFileDescriptor.open(v5, 268435456);
	int v8 = Slog.e(""UserManagerService"", ""Couldn't find icon file"", caughtException);
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public ParcelFileDescriptor getUserIcon(int p1){
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	File v9 = new File(UserInfo.iconPath);
	ParcelFileDescriptor v11 = ParcelFileDescriptor.open(v9, 268435456);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","0","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
conditional branch(ne, to iindex=-1) 4,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @14 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 7,
conditional branch(ne, to iindex=-1) 9,4,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @24 exception:11,
goto (from iindex= 15 to iindex = 2),
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v3 = p0.getUserInfoLU(p1);
	return UserInfo.creationTime;
}
-----
","public long getUserCreationTime(int p1){
	UserInfo v3 = p0.getUserInfoLU(p1);
	return UserInfo.creationTime;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
conditional branch(ne, to iindex=-1) 4,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @14 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 7,
conditional branch(ne, to iindex=-1) 9,4,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @24 exception:11,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
goto (from iindex= 15 to iindex = 2),
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v3 = p0.getUserInfoLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public long getUserCreationTime(int p1){
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	return UserInfo.creationTime;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
conditional branch(ne, to iindex=-1) 4,2,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @9 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
goto (from iindex= 7 to iindex = 17),
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v2 = p0.getUserInfoLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public long getUserCreationTime(int p1){
	Object v3 = this.mUsers.get(p1);
	boolean v4 = this.mRemovingUserIds.get(p1);
	UserInfo v2 = 0;
	return UserInfo.creationTime;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
conditional branch(ne, to iindex=-1) 4,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @14 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
return 9,
conditional branch(eq, to iindex=-1) 7,8,
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v2 = p0.getProfileParentLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public long getUserCreationTime(int p1){
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	Object v13 = this.mUsers.get(UserInfo.profileGroupId);
	boolean v14 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
	UserInfo v12 = 0;
	UserInfo v2 = v12;
	return UserInfo.creationTime;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
conditional branch(ne, to iindex=-1) 4,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @14 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
conditional branch(eq, to iindex=-1) 7,8,
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v2 = p0.getProfileParentLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public long getUserCreationTime(int p1){
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	UserInfo v2 = 0;
	return UserInfo.creationTime;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,25 @19 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
19 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 16,17 @37 exception:18,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
","public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,25 @19 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 4 to iindex = 2),
6 = phi  3,5,
return 6,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
19 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 16,17 @37 exception:18,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isPrimary(){
	return phiInstruction;
}
-----
","public UserInfo getPrimaryUser(){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = this.mUsers.size();
	Object v4 = this.mUsers.valueAt(phiInstruction);
	boolean v5 = phiInstruction;
	boolean v6 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,25 @19 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
6 = phi  3,5,
return 6,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
19 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 16,17 @37 exception:18,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isPrimary(){
	return phiInstruction;
}
-----
","public UserInfo getPrimaryUser(){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = this.mUsers.size();
	Object v4 = this.mUsers.valueAt(phiInstruction);
	boolean v5 = phiInstruction;
	boolean v6 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,25 @19 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
19 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 16,17 @37 exception:18,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public UserInfo getPrimaryUser(){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = this.mUsers.size();
	Object v6 = this.mUsers.valueAt(phiInstruction);
	boolean v7 = UserManagerService$UserData.info.isPrimary();
	boolean v8 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
monitorexit 4,
return 8,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public UserInfo getPrimaryUser(){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = this.mUsers.size();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
","public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","public int getUserIconBadgeResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getIconBadge()I > 6 @18 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
return 2,
return 11,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getIconBadge();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getIconBadge(){
	return this.mIconBadge;
}
-----
","public int getUserIconBadgeResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	int v11 = this.mIconBadge;
	return v11;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserIconBadgeResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserIconBadgeResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserIconBadgeResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
","public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsMediaSharedWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isMediaSharedWithParent(){
	return this.mIsMediaSharedWithParent;
}
-----
","public boolean isMediaSharedWithParent(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	boolean v11 = this.mIsMediaSharedWithParent;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsMediaSharedWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isMediaSharedWithParent(){
	return this.mIsMediaSharedWithParent;
}
-----
","public boolean isMediaSharedWithParent(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	boolean v11 = this.mIsMediaSharedWithParent;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isMediaSharedWithParent(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.isProfile();
	boolean v17 = v12.isMediaSharedWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isMediaSharedWithParent(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.isProfile();
	boolean v17 = v12.isMediaSharedWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public boolean isMediaSharedWithParent(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.isProfile();
	boolean v17 = v12.isMediaSharedWithParent();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
","public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","public int getRemainingCreatableProfileCount(String p1, int p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v3 = this.mUserTypes.get(p1);
	boolean v4 = v3.isEnabled();
	boolean v5 = v3.isManagedProfile();
	PackageManager v6 = this.mContext.getPackageManager();
	boolean v7 = v6.hasSystemFeature(""android.software.managed_users"");
	UserInfo v8 = UserManagerService.getUserInfoLU(p2);
	boolean v9 = v8.canHaveProfile();
	[I v10 = UserManagerService.getProfileIds(p2, p1, 0);
	int v11 = UserManagerService.getAliveUsersExcludingGuestsCountLU();
	int v12 = UserManager.getMaxSupportedUsers();
	int v13 = UserManagerService.getMaxUsersOfTypePerParent(v3);
	int v14 = Math.min(phiInstruction, (v13 - (v10.length - phiInstruction)));
	int v1 = 0;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
4 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 2 @2 exception:3,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
3 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowedPerParent()I > 1 @0 exception:2,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 1 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
10 = invokestatic < Application, Landroid/os/SystemProperties, getInt(Ljava/lang/String;I)I > 8,3 @17 exception:9,
return 10,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	int v3 = SystemProperties.getInt(""persist.sys.max_profiles"", v1);
	return v3;
}
-----
","public int getRemainingCreatableProfileCount(String p1, int p2){
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = this.mEnabled;
	boolean v7 = UserManager.isUserTypeManagedProfile(this.mName);
	boolean v6 = v7;
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	Object v11 = this.mUsers.get(p2);
	boolean v12 = this.mRemovingUserIds.get(p2);
	UserInfo v10 = 0;
	boolean v20 = UserInfo.isProfile();
	boolean v21 = UserInfo.isGuest();
	boolean v22 = UserInfo.isRestricted();
	boolean v19 = 0;
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(""getting profiles related to user "");
	StringBuilder v28 = v25.append(p2);
	String v29 = v25.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v29);
	long v31 = Binder.clearCallingIdentity();
	IntArray v32 = UserManagerService.getProfileIdsLU(p2, p1, 0);
	[I v33 = v32.toArray();
	Binder.restoreCallingIdentity(v31);
	[I v23 = v33;
	int v36 = this.mUsers.size();
	int v35 = phiInstruction;
	int v37 = UserManager.getMaxSupportedUsers();
	int v39 = v4.getMaxAllowedPerParent();
	boolean v40 = v4.isManagedProfile();
	int v41 = SystemProperties.getInt(""persist.sys.max_profiles"", v39);
	int v38 = v41;
	int v42 = Math.min(phiInstruction, (v38 - (v23.length - phiInstruction)));
	int v1 = 0;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
4 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 2 @2 exception:3,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
3 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowedPerParent()I > 1 @0 exception:2,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 1 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
return 3,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	return v1;
}
-----
","public int getRemainingCreatableProfileCount(String p1, int p2){
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = this.mEnabled;
	boolean v7 = UserManager.isUserTypeManagedProfile(this.mName);
	boolean v6 = v7;
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	Object v11 = this.mUsers.get(p2);
	boolean v12 = this.mRemovingUserIds.get(p2);
	UserInfo v10 = 0;
	boolean v20 = UserInfo.isProfile();
	boolean v21 = UserInfo.isGuest();
	boolean v22 = UserInfo.isRestricted();
	boolean v19 = 0;
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(""getting profiles related to user "");
	StringBuilder v28 = v25.append(p2);
	String v29 = v25.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v29);
	long v31 = Binder.clearCallingIdentity();
	IntArray v32 = UserManagerService.getProfileIdsLU(p2, p1, 0);
	[I v33 = v32.toArray();
	Binder.restoreCallingIdentity(v31);
	[I v23 = v33;
	int v36 = this.mUsers.size();
	int v35 = phiInstruction;
	int v37 = UserManager.getMaxSupportedUsers();
	int v39 = v4.getMaxAllowedPerParent();
	boolean v40 = v4.isManagedProfile();
	int v38 = v39;
	int v41 = Math.min(phiInstruction, (v38 - (v23.length - phiInstruction)));
	int v1 = 0;
	return v1;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","evictCredentialEncryptionKey(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/app/ActivityManagerNative, getDefault()Landroid/app/IActivityManager; > @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
10 = invokeinterface < Application, Landroid/app/IActivityManager, restartUserInBackground(I)I > 6,2 @13 exception:9,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @16 exception:19,
return,","depth : 0
public void evictCredentialEncryptionKey(int p1){
	UserManagerService.checkManageUsersPermission(""evict CE key"");
	IActivityManager v2 = ActivityManagerNative.getDefault();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
","public void evictCredentialEncryptionKey(int p1){
	UserManagerService.checkManageUsersPermission(""evict CE key"");
	IActivityManager v2 = ActivityManagerNative.getDefault();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","evictCredentialEncryptionKey(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/app/ActivityManagerNative, getDefault()Landroid/app/IActivityManager; > @5 exception:5,
2 = invokestatic < Application, Landroid/app/ActivityManager, getService()Landroid/app/IActivityManager; > @0 exception:1,
return 2,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
10 = invokeinterface < Application, Landroid/app/IActivityManager, restartUserInBackground(I)I > 6,2 @13 exception:9,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @16 exception:19,
return,","depth : 0
public void evictCredentialEncryptionKey(int p1){
	UserManagerService.checkManageUsersPermission(""evict CE key"");
	IActivityManager v2 = ActivityManagerNative.getDefault();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public IActivityManager getDefault(){
	IActivityManager v1 = ActivityManager.getService();
	return v1;
}
-----
","public void evictCredentialEncryptionKey(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	IActivityManager v4 = ActivityManager.getService();
	IActivityManager v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	int v6 = v3.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","evictCredentialEncryptionKey(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/app/ActivityManagerNative, getDefault()Landroid/app/IActivityManager; > @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
10 = invokeinterface < Application, Landroid/app/IActivityManager, restartUserInBackground(I)I > 6,2 @13 exception:9,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @16 exception:19,
return,","depth : 0
public void evictCredentialEncryptionKey(int p1){
	UserManagerService.checkManageUsersPermission(""evict CE key"");
	IActivityManager v2 = ActivityManagerNative.getDefault();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void evictCredentialEncryptionKey(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	IActivityManager v5 = ActivityManagerNative.getDefault();
	long v6 = Binder.clearCallingIdentity();
	int v7 = v5.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,8,6 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
conditional branch(ne, to iindex=-1) 2,6,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @66 exception:17,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
20 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 21,2 @78 exception:22,
24 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>23 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 24,6,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
27 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 25,2 @122 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
monitorexit 20,
29 = invokestatic < Application, Landroid/app/ActivityManager, getCurrentUser()I > @163 exception:28,
conditional branch(eq, to iindex=-1) 29,2,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @169 exception:30,
conditional branch(eq, to iindex=-1) 31,6,
36 = new <Application,Ljava/lang/StringBuilder>@182,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 36 @184 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,38 @189 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 36,2 @192 exception:41,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,43 @197 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 36,29 @200 exception:46,
50 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,48 @205 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 36 @208 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,52 @212 exception:53,
55 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 24,
56 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 55,
58 = binaryop(or) 56 , 57,
putfield 55.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 58,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,24 @223 exception:59,
monitorexit 19,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @228 exception:61,
return 60,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Unable to immediately remove user "");
	StringBuilder v13 = v10.append(p1);
	StringBuilder v14 = v10.append("" (current user is "");
	StringBuilder v15 = v10.append(v9);
	StringBuilder v16 = v10.append(""). User is set as ephemeral and will be removed on user switch or reboot."");
	String v17 = v10.toString();
	int v18 = Slog.i(""UserManagerService"", v17);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(v7);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
-----
","public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(v7);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,8,6 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
conditional branch(ne, to iindex=-1) 2,6,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @66 exception:17,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
20 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 21,2 @78 exception:22,
24 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>23 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 24,6,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
27 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 25,2 @122 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
monitorexit 20,
29 = invokestatic < Application, Landroid/app/ActivityManager, getCurrentUser()I > @163 exception:28,
conditional branch(eq, to iindex=-1) 29,2,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @169 exception:30,
conditional branch(eq, to iindex=-1) 31,6,
36 = new <Application,Ljava/lang/StringBuilder>@182,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 36 @184 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,38 @189 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 36,2 @192 exception:41,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,43 @197 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 36,29 @200 exception:46,
50 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,48 @205 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 36 @208 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,52 @212 exception:53,
55 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 24,
56 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 55,
58 = binaryop(or) 56 , 57,
putfield 55.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 58,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,24 @223 exception:59,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 19,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @228 exception:61,
return 60,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Unable to immediately remove user "");
	StringBuilder v13 = v10.append(p1);
	StringBuilder v14 = v10.append("" (current user is "");
	StringBuilder v15 = v10.append(v9);
	StringBuilder v16 = v10.append(""). User is set as ephemeral and will be removed on user switch or reboot."");
	String v17 = v10.toString();
	int v18 = Slog.i(""UserManagerService"", v17);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(v7);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	AtomicFile v21 = new AtomicFile(v22);
	File v22 = new File(this.mUsersDir,v27);
	StringBuilder v23 = new StringBuilder();
	StringBuilder v25 = v23.append(UserInfo.id);
	StringBuilder v26 = v23.append("".xml"");
	String v27 = v23.toString();
	FileOutputStream v30 = v21.startWrite();
	UserManagerService.writeUserLP(v7, v30);
	v21.finishWrite(v30);
	v21.failWrite(phiInstruction);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,8,6 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
conditional branch(ne, to iindex=-1) 2,6,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @66 exception:17,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
20 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
23 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 21,2 @78 exception:22,
24 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>23 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 24,6,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
27 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 25,2 @122 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
monitorexit 20,
29 = invokestatic < Application, Landroid/app/ActivityManager, getCurrentUser()I > @163 exception:28,
conditional branch(eq, to iindex=-1) 29,2,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @169 exception:30,
conditional branch(eq, to iindex=-1) 31,6,
36 = new <Application,Ljava/lang/StringBuilder>@182,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 36 @184 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,38 @189 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 36,2 @192 exception:41,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,43 @197 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 36,29 @200 exception:46,
50 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 36,48 @205 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 36 @208 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 35,52 @212 exception:53,
55 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 24,
56 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 55,
58 = binaryop(or) 56 , 57,
putfield 55.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 58,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,24 @223 exception:59,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 19,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @228 exception:61,
return 60,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Unable to immediately remove user "");
	StringBuilder v13 = v10.append(p1);
	StringBuilder v14 = v10.append("" (current user is "");
	StringBuilder v15 = v10.append(v9);
	StringBuilder v16 = v10.append(""). User is set as ephemeral and will be removed on user switch or reboot."");
	String v17 = v10.toString();
	int v18 = Slog.i(""UserManagerService"", v17);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(v7);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	AtomicFile v21 = new AtomicFile(v22);
	File v22 = new File(this.mUsersDir,v27);
	StringBuilder v23 = new StringBuilder();
	StringBuilder v25 = v23.append(UserInfo.id);
	StringBuilder v26 = v23.append("".xml"");
	String v27 = v23.toString();
	FileOutputStream v30 = v21.startWrite();
	UserManagerService.writeUserLP(v7, v30);
	v21.failWrite(phiInstruction);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,8,6 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
123 = new <Application,Ljava/lang/StringBuilder>@28,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 123 @30 exception:124,
127 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,125 @35 exception:126,
129 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,8 @38 exception:128,
132 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,130 @43 exception:131,
134 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 123 @46 exception:133,
136 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 35,134 @50 exception:135,
return 137,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v2 = p0.getUserRemovalRestriction(p1);
	int v3 = UserHandle.getCallingUserId();
	Bundle v4 = p0.getUserRestrictions(v3);
	boolean v5 = v4.getBoolean(v2, 0);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot remove user. "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append("" is enabled."");
	String v10 = v5.toString();
	int v11 = Slog.w(""UserManagerService"", v10);
	return -2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","public int removeUserWhenPossible(int p1, boolean p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	boolean v15 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v14 = v15;
	String v4 = phiInstruction;
	int v16 = UserHandle.getCallingUserId();
	boolean v20 = UserManagerService.isSameProfileGroupNoChecks(v19, p1);
	boolean v21 = UserManagerService.hasManageUsersPermission();
	int v22 = Binder.getCallingUid();
	boolean v23 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v22);
	Bundle v25 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v26 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v27 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v26);
	Bundle v24 = phiInstruction;
	Bundle v29 = new Bundle(v24);
	Bundle v28 = v29;
	Bundle v17 = v28;
	boolean v31 = v17.getBoolean(v4, 0);
	return -2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
20 = phi  19,18,
return 20,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 2,1 @4 exception:5,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,8,6 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
123 = new <Application,Ljava/lang/StringBuilder>@28,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 123 @30 exception:124,
127 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,125 @35 exception:126,
129 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,8 @38 exception:128,
132 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,130 @43 exception:131,
134 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 123 @46 exception:133,
136 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 35,134 @50 exception:135,
return 137,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v2 = p0.getUserRemovalRestriction(p1);
	int v3 = UserHandle.getCallingUserId();
	Bundle v4 = p0.getUserRestrictions(v3);
	boolean v5 = v4.getBoolean(v2, 0);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot remove user. "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append("" is enabled."");
	String v10 = v5.toString();
	int v11 = Slog.w(""UserManagerService"", v10);
	return -2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","public int removeUserWhenPossible(int p1, boolean p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	boolean v15 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v14 = v15;
	String v4 = phiInstruction;
	int v16 = UserHandle.getCallingUserId();
	boolean v20 = UserManagerService.isSameProfileGroupNoChecks(v19, p1);
	boolean v21 = UserManagerService.hasManageUsersPermission();
	int v22 = Binder.getCallingUid();
	boolean v23 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v22);
	Bundle v25 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v26 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v27 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v26);
	Bundle v24 = phiInstruction;
	Bundle v29 = new Bundle(v24);
	Bundle v28 = v29;
	Bundle v17 = v28;
	boolean v31 = v17.getBoolean(v4, 0);
	return -2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 2 @8 exception:4,
return 2,
return 8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,8,6 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
123 = new <Application,Ljava/lang/StringBuilder>@28,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 123 @30 exception:124,
127 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,125 @35 exception:126,
129 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,8 @38 exception:128,
132 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 123,130 @43 exception:131,
134 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 123 @46 exception:133,
136 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 35,134 @50 exception:135,
return 137,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v2 = p0.getUserRemovalRestriction(p1);
	int v3 = UserHandle.getCallingUserId();
	Bundle v4 = p0.getUserRestrictions(v3);
	boolean v5 = v4.getBoolean(v2, 0);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot remove user. "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append("" is enabled."");
	String v10 = v5.toString();
	int v11 = Slog.w(""UserManagerService"", v10);
	return -2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
","public int removeUserWhenPossible(int p1, boolean p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	UserInfo v5 = 0;
	boolean v15 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v14 = v15;
	String v4 = phiInstruction;
	int v16 = UserHandle.getCallingUserId();
	boolean v20 = UserManagerService.isSameProfileGroupNoChecks(v19, p1);
	boolean v21 = UserManagerService.hasManageUsersPermission();
	int v22 = Binder.getCallingUid();
	boolean v23 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v22);
	Bundle v25 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v26 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
	boolean v27 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v26);
	Bundle v24 = phiInstruction;
	Bundle v29 = new Bundle();
	Bundle v28 = v29;
	Bundle v17 = v28;
	boolean v31 = v17.getBoolean(v4, 0);
	return -2;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
","public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","public String getSeedAccountName(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","public String getSeedAccountName(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = v4;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public String getSeedAccountName(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 7,
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public String getSeedAccountName(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
16 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @31 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
19 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @40 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
34 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 32 @63 exception:33,
37 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 34,35 @69 exception:36,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
60 = invokestatic < Application, Ljava/lang/Math, min(II)I > 42,55 @113 exception:59,
62 = invokestatic < Application, Ljava/lang/Math, max(II)I > 9,60 @117 exception:61,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
","public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
4 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 2 @2 exception:3,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
16 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @31 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
19 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @40 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
34 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 32 @63 exception:33,
37 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 34,35 @69 exception:36,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @5 exception:5,
30 = phi  29,7,
31 = phi  24,7,
conditional branch(ge, to iindex=-1) 30,6,
monitorexit 3,
return 31,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
60 = invokestatic < Application, Ljava/lang/Math, min(II)I > 42,55 @113 exception:59,
62 = invokestatic < Application, Ljava/lang/Math, max(II)I > 9,60 @117 exception:61,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 1
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 1
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 1
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 1
public int getNumberOfUsersOfType(String p1){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
","public int getRemainingCreatableUserCount(String p1){
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v3 = this.mUserTypes.get(p1);
	boolean v4 = this.mEnabled;
	int v6 = this.mUsers.size();
	int v5 = phiInstruction;
	boolean v7 = UserManager.isUserTypeGuest(p1);
	boolean v8 = UserManager.isUserTypeDemo(p1);
	boolean v10 = UserManager.isUserTypeManagedProfile(this.mName);
	boolean v9 = v10;
	PackageManager v11 = this.mContext.getPackageManager();
	boolean v12 = v11.hasSystemFeature(""android.software.managed_users"");
	int v13 = this.mMaxAllowed;
	int v14 = this.mMaxAllowed;
	int v16 = this.mUsers.size();
	int v15 = phiInstruction;
	int v17 = Math.min(phiInstruction, phiInstruction);
	int v18 = Math.max(0, v17);
	return v18;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
4 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 2 @2 exception:3,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
16 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @31 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
19 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @40 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
34 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 32 @63 exception:33,
37 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 34,35 @69 exception:36,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 47,48,
goto (from iindex= 60 to iindex = 11),
55 = phi  17,53,
60 = invokestatic < Application, Ljava/lang/Math, min(II)I > 42,55 @113 exception:59,
62 = invokestatic < Application, Ljava/lang/Math, max(II)I > 9,60 @117 exception:61,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = Math.min(phiInstruction, phiInstruction);
	int v12 = Math.max(0, v11);
	return v12;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 1
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 1
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
","public int getRemainingCreatableUserCount(String p1){
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v3 = this.mUserTypes.get(p1);
	boolean v4 = this.mEnabled;
	int v6 = this.mUsers.size();
	int v5 = phiInstruction;
	boolean v7 = UserManager.isUserTypeGuest(p1);
	boolean v8 = UserManager.isUserTypeDemo(p1);
	boolean v10 = UserManager.isUserTypeManagedProfile(this.mName);
	boolean v9 = v10;
	PackageManager v11 = this.mContext.getPackageManager();
	boolean v12 = v11.hasSystemFeature(""android.software.managed_users"");
	int v13 = this.mMaxAllowed;
	int v14 = Math.min(phiInstruction, phiInstruction);
	int v15 = Math.max(0, v14);
	return v15;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
16 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @31 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
19 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @40 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
34 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 32 @63 exception:33,
37 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 34,35 @69 exception:36,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
60 = invokestatic < Application, Ljava/lang/Math, min(II)I > 42,55 @113 exception:59,
62 = invokestatic < Application, Ljava/lang/Math, max(II)I > 9,60 @117 exception:61,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
","public int getRemainingCreatableUserCount(String p1){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	Object v6 = this.mUserTypes.get(p1);
	boolean v7 = v6.isEnabled();
	int v8 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v9 = UserManager.isUserTypeGuest(p1);
	boolean v10 = UserManager.isUserTypeDemo(p1);
	boolean v11 = v6.isManagedProfile();
	PackageManager v12 = this.mContext.getPackageManager();
	boolean v13 = v12.hasSystemFeature(""android.software.managed_users"");
	int v14 = v6.getMaxAllowed();
	int v15 = v6.getMaxAllowed();
	int v16 = p0.getNumberOfUsersOfType(p1);
	int v17 = Math.min(phiInstruction, phiInstruction);
	int v18 = Math.max(0, v17);
	return v18;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
16 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @31 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
19 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @40 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
34 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 32 @63 exception:33,
37 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 34,35 @69 exception:36,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
60 = invokestatic < Application, Ljava/lang/Math, min(II)I > 42,55 @113 exception:59,
62 = invokestatic < Application, Ljava/lang/Math, max(II)I > 9,60 @117 exception:61,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
","public int getRemainingCreatableUserCount(String p1){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	Object v6 = this.mUserTypes.get(p1);
	boolean v7 = v6.isEnabled();
	int v8 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v9 = UserManager.isUserTypeGuest(p1);
	boolean v10 = UserManager.isUserTypeDemo(p1);
	boolean v11 = v6.isManagedProfile();
	PackageManager v12 = this.mContext.getPackageManager();
	boolean v13 = v12.hasSystemFeature(""android.software.managed_users"");
	int v14 = v6.getMaxAllowed();
	int v15 = v6.getMaxAllowed();
	int v16 = p0.getNumberOfUsersOfType(p1);
	int v17 = Math.min(phiInstruction, phiInstruction);
	int v18 = Math.max(0, v17);
	return v18;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
16 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @31 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
19 = invokestatic < Application, Landroid/os/UserManager, isUserTypeDemo(Ljava/lang/String;)Z > 2 @40 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
34 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 32 @63 exception:33,
37 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 34,35 @69 exception:36,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
goto (from iindex= 60 to iindex = 11),
55 = phi  17,53,
60 = invokestatic < Application, Ljava/lang/Math, min(II)I > 42,55 @113 exception:59,
62 = invokestatic < Application, Ljava/lang/Math, max(II)I > 9,60 @117 exception:61,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = Math.min(phiInstruction, phiInstruction);
	int v12 = Math.max(0, v11);
	return v12;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
","public int getRemainingCreatableUserCount(String p1){
	boolean v3 = UserManagerService.hasCreateUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v4);
	boolean v2 = phiInstruction;
	Object v6 = this.mUserTypes.get(p1);
	boolean v7 = v6.isEnabled();
	int v8 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v9 = UserManager.isUserTypeGuest(p1);
	boolean v10 = UserManager.isUserTypeDemo(p1);
	boolean v11 = v6.isManagedProfile();
	PackageManager v12 = this.mContext.getPackageManager();
	boolean v13 = v12.hasSystemFeature(""android.software.managed_users"");
	int v14 = v6.getMaxAllowed();
	int v15 = Math.min(phiInstruction, phiInstruction);
	int v16 = Math.max(0, v15);
	return v16;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setDefaultGuestRestrictions(Landroid/os/Bundle;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokevirtual < Application, Landroid/os/Bundle, clear()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokevirtual < Application, Landroid/os/Bundle, putAll(Landroid/os/Bundle;)V > 8,2 @15 exception:9,
monitorexit 5,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserListLP()V > 1 @22 exception:15,
monitorexit 14,
return,","depth : 0
public void setDefaultGuestRestrictions(Bundle p1){
	UserManagerService.checkManageUsersPermission(""setDefaultGuestRestrictions"");
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
-----
","public void setDefaultGuestRestrictions(Bundle p1){
	UserManagerService.checkManageUsersPermission(""setDefaultGuestRestrictions"");
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setDefaultGuestRestrictions(Landroid/os/Bundle;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokevirtual < Application, Landroid/os/Bundle, clear()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokevirtual < Application, Landroid/os/Bundle, putAll(Landroid/os/Bundle;)V > 8,2 @15 exception:9,
monitorexit 5,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserListLP()V > 1 @22 exception:15,
2 = new <Application,Landroid/util/AtomicFile>@0,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserListFile, <Application,Ljava/io/File> > 1,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 2,3 @4 exception:4,
7 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 2 @8 exception:6,
9 = invokestatic < Application, Landroid/util/Xml, resolveSerializer(Ljava/io/OutputStream;)Landroid/util/TypedXmlSerializer; > 7 @12 exception:8,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V > 9,5,10 @18 exception:11,
invokeinterface < Application, Landroid/util/TypedXmlSerializer, setFeature(Ljava/lang/String;Z)V > 9,12,13 @24 exception:14,
17 = invokeinterface < Application, Landroid/util/TypedXmlSerializer, startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer; > 9,5,15 @29 exception:16,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService, mNextSerialNumber, <Primordial,I> > 1,
100 = phi  5,7,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 2,100 @165 exception:104,
108 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 105,106 @172 exception:107,
return,
monitorexit 14,
return,","depth : 0
public void setDefaultGuestRestrictions(Bundle p1){
	UserManagerService.checkManageUsersPermission(""setDefaultGuestRestrictions"");
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public void writeUserListLP(){
	AtomicFile v0 = new AtomicFile(this.mUserListFile);
	FileOutputStream v2 = v0.startWrite();
	TypedXmlSerializer v3 = Xml.resolveSerializer(v2);
	v3.startDocument(0, Boolean.TRUE);
	v3.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v6 = v3.startTag(0, ""users"");
	v0.failWrite(phiInstruction);
	int v8 = Slog.e(""UserManagerService"", ""Error writing user list"");
	return;
}
-----
","public void setDefaultGuestRestrictions(Bundle p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	AtomicFile v6 = new AtomicFile(this.mUserListFile);
	FileOutputStream v8 = v6.startWrite();
	TypedXmlSerializer v9 = Xml.resolveSerializer(v8);
	v9.startDocument(0, Boolean.TRUE);
	v9.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v12 = v9.startTag(0, ""users"");
	v6.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setDefaultGuestRestrictions(Landroid/os/Bundle;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokevirtual < Application, Landroid/os/Bundle, clear()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokevirtual < Application, Landroid/os/Bundle, putAll(Landroid/os/Bundle;)V > 8,2 @15 exception:9,
monitorexit 5,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserListLP()V > 1 @22 exception:15,
monitorexit 14,
return,","depth : 0
public void setDefaultGuestRestrictions(Bundle p1){
	UserManagerService.checkManageUsersPermission(""setDefaultGuestRestrictions"");
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void setDefaultGuestRestrictions(Bundle p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
","public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","public int getUserBadgeNoBackgroundResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeNoBackground()I > 6 @18 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeNoBackground, <Primordial,I> > 1,
return 2,
return 11,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getBadgeNoBackground();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeNoBackground(){
	return this.mBadgeNoBackground;
}
-----
","public int getUserBadgeNoBackgroundResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	String v8 = UserManagerService.getUserTypeNoChecks(p1);
	Object v9 = this.mUserTypes.get(v8);
	UserTypeDetails v7 = phiInstruction;
	boolean v10 = phiInstruction;
	int v11 = this.mBadgeNoBackground;
	return v11;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserBadgeNoBackgroundResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserBadgeNoBackgroundResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,4 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @25 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @30 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 15,2 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @36 exception:22,
26 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 24,23 @42 exception:25,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserBadgeNoBackgroundResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v14 = UserManagerService.getUserInfoLU(p1);
	String v13 = phiInstruction;
	Object v15 = this.mUserTypes.get(v13);
	UserTypeDetails v12 = phiInstruction;
	boolean v16 = v12.hasBadge();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @10 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
","public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @10 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
","public String getUserAccount(int p1){
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v2);
	Object v5 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @10 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public String getUserAccount(int p1){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	Object v7 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @10 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public String getUserAccount(int p1){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	Object v7 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
","public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v4 = this.USER_RESTRICTIONS.contains(p1);
	int v5 = Binder.getCallingUid();
	IPackageManager v6 = AppGlobals.getPackageManager();
	String v7 = v6.getPackagesForUid(v5);
	boolean v17 = UserRestrictionsUtils.isSystemApp(v5, phiInstruction);
	boolean v3 = 0;
	Object v21 = this.mUserRestrictions.get(p2);
	Bundle v20 = v21;
	boolean v22 = v20.getBoolean(p1, 0);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v4 = this.USER_RESTRICTIONS.contains(p1);
	int v5 = Binder.getCallingUid();
	IPackageManager v6 = AppGlobals.getPackageManager();
	String v7 = v6.getPackagesForUid(v5);
	boolean v17 = UserRestrictionsUtils.isSystemApp(v5, phiInstruction);
	boolean v3 = 0;
	Object v21 = this.mUserRestrictions.get(p2);
	Bundle v20 = v21;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
","public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v5 = this.USER_RESTRICTIONS.contains(p1);
	int v6 = Binder.getCallingUid();
	IPackageManager v8 = ActivityThread.getPackageManager();
	IPackageManager v7 = v8;
	String v9 = v7.getPackagesForUid(v6);
	IPackageManager v21 = AppGlobals.getPackageManager();
	int v22 = UserHandle.getUserId(v6);
	ApplicationInfo v23 = v21.getApplicationInfo(phiInstruction[phiInstruction], 794624, v22);
	boolean v24 = v23.isSystemApp();
	boolean v19 = 1;
	boolean v4 = 0;
	Bundle v27 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v28 = v27.getBoolean(p1, 0);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @87 exception:51,
54 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 45,52 @91 exception:53,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 12,2,8 @24 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.e(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
","public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v5 = this.USER_RESTRICTIONS.contains(p1);
	int v6 = Binder.getCallingUid();
	IPackageManager v8 = ActivityThread.getPackageManager();
	IPackageManager v7 = v8;
	String v9 = v7.getPackagesForUid(v6);
	IPackageManager v21 = AppGlobals.getPackageManager();
	int v22 = UserHandle.getUserId(v6);
	ApplicationInfo v23 = v21.getApplicationInfo(phiInstruction[phiInstruction], 794624, v22);
	boolean v24 = v23.isSystemApp();
	boolean v19 = 1;
	boolean v4 = 0;
	Bundle v27 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v28 = v27.getBoolean(p1, 0);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
4 = invokeinterface < Application, Ljava/util/Set, contains(Ljava/lang/Object;)Z > 2,1 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
12 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getPackagesForUid(I)[Ljava/lang/String; > 10,8 @18 exception:11,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>(Ljava/lang/String;)V > 14,15 @26 exception:16,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,8 @29 exception:17,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,20 @40 exception:21,
23 = arrayload 13[6],
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,23 @45 exception:24,
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,27 @53 exception:28,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,33 @58 exception:34,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,40 @63 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,1 @66 exception:43,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
4 = invokestatic < Application, Landroid/os/UserHandle, isCore(I)Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @12 exception:7,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 1 @25 exception:12,
15 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 8,10,11,13 @29 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
17 = invokevirtual < Application, Landroid/content/pm/ApplicationInfo, isSystemApp()Z > 15 @35 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @79 exception:55,
58 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 45,56 @83 exception:57,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
","public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v5 = this.USER_RESTRICTIONS.contains(p1);
	int v6 = Binder.getCallingUid();
	IPackageManager v8 = ActivityThread.getPackageManager();
	IPackageManager v7 = v8;
	String v9 = v7.getPackagesForUid(v6);
	IPackageManager v21 = AppGlobals.getPackageManager();
	int v22 = UserHandle.getUserId(v6);
	ApplicationInfo v23 = v21.getApplicationInfo(phiInstruction[phiInstruction], 794624, v22);
	boolean v24 = v23.isSystemApp();
	boolean v19 = 1;
	boolean v4 = 0;
	Bundle v27 = this.mBaseUserRestrictions.getRestrictions(p2);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
","public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	boolean v4 = UserManager.isUserTypeCloneProfile(p2);
	boolean v5 = UserManager.isUserTypeManagedProfile(p2);
	int v6 = UserHandle.getCallingUserId();
	UserManagerService.enforceUserRestriction(phiInstruction, v6, ""Cannot add user"");
	UserInfo v8 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	UserInfo v3 = v8;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	boolean v4 = UserManager.isUserTypeCloneProfile(p2);
	boolean v5 = UserManager.isUserTypeManagedProfile(p2);
	int v6 = UserHandle.getCallingUserId();
	UserManagerService.enforceUserRestriction(phiInstruction, v6, ""Cannot add user"");
	UserInfo v8 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	UserInfo v3 = v8;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v5 = UserManager.isUserTypeCloneProfile(p2);
	boolean v6 = UserManager.isUserTypeManagedProfile(p2);
	int v7 = UserHandle.getCallingUserId();
	int v11 = UserManagerService.getNextAvailableId();
	long v20 = UserManagerService.logUserCreateJourneyBegin(v11, p2, p3);
	UserInfo v21 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v12, 0);
	UserManagerService.logUserCreateJourneyFinish(v20, v11, phiInstruction);
	v12.traceEnd();
	UserInfo v10 = v21;
	UserInfo v4 = v10;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v6 = UserManager.isUserTypeCloneProfile(p2);
	boolean v7 = UserManager.isUserTypeManagedProfile(p2);
	int v8 = UserHandle.getCallingUserId();
	int v12 = UserManagerService.getNextAvailableId();
	long v21 = UserManagerService.logUserCreateJourneyBegin(v12, p2, p3);
	UserInfo v22 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v13, 0);
	UserManagerService.logUserCreateJourneyFinish(v21, v12, phiInstruction);
	v13.traceEnd();
	UserInfo v11 = v22;
	UserInfo v5 = v11;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
8 = invokestatic < Application, Landroid/os/UserManager, isUserTypeCloneProfile(Ljava/lang/String;)Z > 3 @0 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 3 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
15 = phi  14,13,12,
19 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @20 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	boolean v5 = UserManager.isUserTypeCloneProfile(p2);
	boolean v6 = UserManager.isUserTypeManagedProfile(p2);
	int v7 = UserHandle.getCallingUserId();
	int v11 = UserManagerService.getNextAvailableId();
	long v20 = UserManagerService.logUserCreateJourneyBegin(v11, p2, p3);
	UserInfo v21 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v12, 0);
	UserManagerService.logUserCreateJourneyFinish(v20, v11, phiInstruction);
	v12.traceEnd();
	UserInfo v10 = v21;
	UserInfo v4 = v10;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = getfield < Application, Landroid/content/pm/UserInfo, serialNumber, <Primordial,I> > 5,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 5,6,
8 = getfield < Application, Landroid/content/pm/UserInfo, serialNumber, <Primordial,I> > 5,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public int getUserSerialNumber(int p1){
	Object v2 = this.mUsers.get(p1);
	boolean v3 = this.mRemovingUserIds.get(p1);
	UserInfo v1 = 0;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 5,6,
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public int getUserSerialNumber(int p1){
	Object v2 = this.mUsers.get(p1);
	boolean v3 = this.mRemovingUserIds.get(p1);
	UserInfo v1 = 0;
	return phiInstruction;
}
","NONE"

"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
","public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
","public boolean canAddMoreUsersOfType(String p1){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	Object v3 = this.mUserTypes.get(p1);
	boolean v5 = v3.isEnabled();
	int v6 = v3.getMaxAllowed();
	String v7 = v3.getName();
	int v8 = UserManagerService.getNumberOfUsersOfType(v7);
	boolean v4 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
","public boolean canAddMoreUsersOfType(String p1){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	Object v3 = this.mUserTypes.get(p1);
	boolean v5 = v3.isEnabled();
	int v6 = v3.getMaxAllowed();
	String v7 = v3.getName();
	int v8 = UserManagerService.getNumberOfUsersOfType(v7);
	boolean v4 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @5 exception:5,
30 = phi  29,7,
31 = phi  24,7,
conditional branch(ge, to iindex=-1) 30,6,
monitorexit 3,
return 31,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 2
public int getNumberOfUsersOfType(String p1){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
","public boolean canAddMoreUsersOfType(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUserTypes.get(p1);
	boolean v6 = this.mEnabled;
	int v7 = this.mMaxAllowed;
	String v8 = this.mName;
	int v10 = this.mUsers.size();
	int v9 = phiInstruction;
	boolean v5 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @5 exception:5,
30 = phi  29,7,
31 = phi  24,7,
conditional branch(ge, to iindex=-1) 30,6,
monitorexit 3,
return 31,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 2
public int getNumberOfUsersOfType(String p1){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
","public boolean canAddMoreUsersOfType(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUserTypes.get(p1);
	boolean v6 = this.mEnabled;
	int v7 = this.mMaxAllowed;
	String v8 = this.mName;
	int v10 = this.mUsers.size();
	int v9 = phiInstruction;
	boolean v5 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
7 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 5,2 @7 exception:6,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 7,8,
return 9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	return 1;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
","public boolean canAddMoreUsersOfType(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	Object v4 = this.mUserTypes.get(p1);
	boolean v6 = this.mEnabled;
	int v7 = this.mMaxAllowed;
	boolean v5 = 1;
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
","public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,5 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDarkThemeBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDarkThemeBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
goto (from iindex= 5 to iindex = 11),
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 1,2 @20 exception:12,
return 13,
return 14,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getDarkThemeBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getDarkThemeBadgeColor(int p1){
	int v1 = p0.getBadgeColor(p1);
	return v1;
}
-----
","public int getUserBadgeDarkColorResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	UserInfo v7 = phiInstruction;
	Object v10 = this.mUserTypes.get(phiInstruction);
	UserTypeDetails v9 = phiInstruction;
	boolean v11 = phiInstruction;
	int v13 = UserTypeDetails.getBadgeColor(UserInfo.profileBadge);
	int v12 = v13;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,5 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDarkThemeBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDarkThemeBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
goto (from iindex= 5 to iindex = 11),
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 1,2 @20 exception:12,
return 13,
return 14,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getDarkThemeBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getDarkThemeBadgeColor(int p1){
	int v1 = p0.getBadgeColor(p1);
	return v1;
}
-----
","public int getUserBadgeDarkColorResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	UserInfo v7 = phiInstruction;
	Object v10 = this.mUserTypes.get(phiInstruction);
	UserTypeDetails v9 = phiInstruction;
	boolean v11 = phiInstruction;
	int v13 = UserTypeDetails.getBadgeColor(UserInfo.profileBadge);
	int v12 = v13;
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeDarkColorResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	boolean v14 = v13.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeDarkColorResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	boolean v14 = v13.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge color for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeDarkColorResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge label for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
","public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,5 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeLabel(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeLabels, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
10 = invokestatic < Application, Ljava/lang/Math, min(II)I > 2,8 @13 exception:9,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeLabel(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeLabel(int p1){
	int v1 = Math.min(p1, (this.mBadgeLabels.length + -1));
	return this.mBadgeLabels[v1];
}
-----
","public int getUserBadgeLabelResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	UserInfo v7 = phiInstruction;
	Object v10 = this.mUserTypes.get(phiInstruction);
	UserTypeDetails v9 = phiInstruction;
	boolean v11 = phiInstruction;
	int v13 = Math.min(UserInfo.profileBadge, (this.mBadgeLabels.length + -1));
	int v12 = this.mBadgeLabels[v13];
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 6,5 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeLabel(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeLabels, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
10 = invokestatic < Application, Ljava/lang/Math, min(II)I > 2,8 @13 exception:9,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeLabel(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeLabel(int p1){
	int v1 = Math.min(p1, (this.mBadgeLabels.length + -1));
	return this.mBadgeLabels[v1];
}
-----
","public int getUserBadgeLabelResId(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasManageUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	UserInfo v7 = phiInstruction;
	Object v10 = this.mUserTypes.get(phiInstruction);
	UserTypeDetails v9 = phiInstruction;
	boolean v11 = phiInstruction;
	int v13 = Math.min(UserInfo.profileBadge, (this.mBadgeLabels.length + -1));
	int v12 = this.mBadgeLabels[v13];
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge label for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeLabelResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	boolean v14 = v13.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge label for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeLabelResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	boolean v14 = v13.hasBadge();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
17 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @38 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @41 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,25 @50 exception:27,
return 9,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge label for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public int getUserBadgeLabelResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	int v7 = Binder.getCallingUid();
	boolean v8 = UserManagerService.hasManageUsersPermission(v7);
	boolean v6 = v8;
	int v9 = Binder.getCallingUid();
	boolean v10 = phiInstruction;
	UserInfo v12 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v13 = p0.getUserTypeDetails(v12);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockPatternUtils, isSeparateProfileChallengeEnabled(I)Z > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
","public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockPatternUtils, isSeparateProfileChallengeEnabled(I)Z > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
","public int getCredentialOwnerProfile(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	boolean v3 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	UserInfo v6 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);
	UserInfo v4 = v6;
	return UserInfo.id;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockPatternUtils, isSeparateProfileChallengeEnabled(I)Z > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
monitorexit 9,
goto (from iindex= 15 to iindex = 4),
return 2,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return p1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
","public int getCredentialOwnerProfile(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	boolean v3 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	UserInfo v6 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);
	UserInfo v4 = v6;
	return p1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockPatternUtils, isSeparateProfileChallengeEnabled(I)Z > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public int getCredentialOwnerProfile(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v5 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	Object v17 = this.mUsers.get(UserInfo.profileGroupId);
	boolean v18 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
	UserInfo v16 = 0;
	UserInfo v6 = v16;
	return UserInfo.id;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockPatternUtils, isSeparateProfileChallengeEnabled(I)Z > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
monitorexit 9,
goto (from iindex= 15 to iindex = 4),
return 2,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return p1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public int getCredentialOwnerProfile(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v5 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	Object v17 = this.mUsers.get(UserInfo.profileGroupId);
	boolean v18 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
	UserInfo v16 = 0;
	UserInfo v6 = v16;
	return p1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockPatternUtils, isSeparateProfileChallengeEnabled(I)Z > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","public int getCredentialOwnerProfile(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	boolean v5 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	UserInfo v6 = 0;
	return UserInfo.id;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokeinterface < Application, Ljava/util/Set, size()I > 7 @15 exception:9,
11 = new <Application,[Ljava/lang/String>@1910 ,
13 = invokeinterface < Application, Ljava/util/Set, toArray([Ljava/lang/Object;)[Ljava/lang/Object; > 7,11 @21 exception:12,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
","public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v4 = new String(v3);
	Object v5 = v2.toArray(v4);
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
27 = new <Application,Landroid/util/ArraySet>@40,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 27 @42 exception:28,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
invokespecial < Application, Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0, <init>(Lcom/android/server/pm/UserSystemPackageInstaller;Ljava/util/Set;ZLjava/util/Set;)V > 33,1,26,22,27 @55 exception:34,
invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, forEachPackage(Ljava/util/function/Consumer;)V > 32,33 @58 exception:35,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokeinterface < Application, Ljava/util/Set, size()I > 7 @15 exception:9,
11 = new <Application,[Ljava/lang/String>@1910 ,
13 = invokeinterface < Application, Ljava/util/Set, toArray([Ljava/lang/Object;)[Ljava/lang/Object; > 7,11 @21 exception:12,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
","public String getPreInstallableSystemPackages(String p1){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	int v4 = UserSystemPackageInstaller.getWhitelistMode();
	boolean v5 = UserSystemPackageInstaller.isEnforceMode(v4);
	boolean v6 = UserSystemPackageInstaller.isImplicitWhitelistMode(v4);
	boolean v7 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v4);
	boolean v8 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v9 = UserSystemPackageInstaller.getWhitelistedPackagesForUserType(p1);
	ArraySet v10 = new ArraySet();
	Object v12 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v13 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(UserSystemPackageInstaller,v9,phiInstruction,v10);
	v12.forEachPackage(v13);
	Set v3 = v10;
	int v16 = v3.size();
	String v17 = new String(v16);
	Object v18 = v3.toArray(v17);
	return v18;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
27 = new <Application,Landroid/util/ArraySet>@40,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 27 @42 exception:28,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
invokespecial < Application, Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0, <init>(Lcom/android/server/pm/UserSystemPackageInstaller;Ljava/util/Set;ZLjava/util/Set;)V > 33,1,26,22,27 @55 exception:34,
invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, forEachPackage(Ljava/util/function/Consumer;)V > 32,33 @58 exception:35,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
return 8,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
","public String getPreInstallableSystemPackages(String p1){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	int v4 = UserSystemPackageInstaller.getWhitelistMode();
	boolean v5 = UserSystemPackageInstaller.isEnforceMode(v4);
	boolean v6 = UserSystemPackageInstaller.isImplicitWhitelistMode(v4);
	boolean v7 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v4);
	boolean v8 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v9 = UserSystemPackageInstaller.getWhitelistedPackagesForUserType(p1);
	ArraySet v10 = new ArraySet();
	Object v12 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v13 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(UserSystemPackageInstaller,v9,phiInstruction,v10);
	v12.forEachPackage(v13);
	Set v3 = v10;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/SystemProperties, getInt(Ljava/lang/String;I)I > 2,3 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getDeviceDefaultWhitelistMode()I > 1 @10 exception:6,
return 7,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
5 = phi  2,4,
return 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isSystem()Z > 6 @10 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getUserTypeMask(Ljava/lang/String;)J > 1,2 @0 exception:3,
5 = new <Application,Landroid/util/ArraySet>@4,
6 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 6 @8 exception:7,
invokespecial < Application, Landroid/util/ArraySet, <init>(I)V > 5,8 @12 exception:9,
33 = phi  32,10,
11 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 11 @18 exception:12,
conditional branch(ge, to iindex=-1) 33,13,
return 5,
27 = new <Application,Landroid/util/ArraySet>@40,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 27 @42 exception:28,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
invokespecial < Application, Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0, <init>(Lcom/android/server/pm/UserSystemPackageInstaller;Ljava/util/Set;ZLjava/util/Set;)V > 33,1,26,22,27 @55 exception:34,
invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, forEachPackage(Ljava/util/function/Consumer;)V > 32,33 @58 exception:35,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokeinterface < Application, Ljava/util/Set, size()I > 7 @15 exception:9,
11 = new <Application,[Ljava/lang/String>@1910 ,
13 = invokeinterface < Application, Ljava/util/Set, toArray([Ljava/lang/Object;)[Ljava/lang/Object; > 7,11 @21 exception:12,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
depth : 2
public int getWhitelistMode(){
	int v1 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	int v2 = p0.getDeviceDefaultWhitelistMode();
	return v2;
}
-----
depth : 2
public boolean isEnforceMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistSystemMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isUserTypeSubtypeOfSystem(String p1){
	Object v1 = this.mUserTypes.get(p1);
	boolean v2 = v1.isSystem();
	return phiInstruction;
}
-----
depth : 2
public Set getWhitelistedPackagesForUserType(String p1){
	long v1 = p0.getUserTypeMask(p1);
	ArraySet v1 = new ArraySet(v2);
	int v2 = this.mWhitelistedPackagesForUserTypes.size();
	int v4 = this.mWhitelistedPackagesForUserTypes.size();
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public String getPreInstallableSystemPackages(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	int v6 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	int v7 = UserSystemPackageInstaller.getDeviceDefaultWhitelistMode();
	int v5 = v7;
	boolean v8 = phiInstruction;
	boolean v9 = phiInstruction;
	boolean v10 = phiInstruction;
	Object v12 = this.mUserTypes.get(p1);
	boolean v13 = v12.isSystem();
	boolean v11 = phiInstruction;
	long v15 = UserSystemPackageInstaller.getUserTypeMask(p1);
	ArraySet v16 = new ArraySet(v17);
	int v17 = this.mWhitelistedPackagesForUserTypes.size();
	int v19 = this.mWhitelistedPackagesForUserTypes.size();
	Set v14 = v16;
	ArraySet v20 = new ArraySet();
	Object v23 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v22 = v23;
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v24 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(UserSystemPackageInstaller,v14,phiInstruction,v20);
	v22.forEachPackage(v24);
	Set v4 = v20;
	int v27 = v4.size();
	String v28 = new String(v27);
	Object v29 = v4.toArray(v28);
	return v29;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/SystemProperties, getInt(Ljava/lang/String;I)I > 2,3 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getDeviceDefaultWhitelistMode()I > 1 @10 exception:6,
return 7,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
5 = phi  2,4,
return 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isSystem()Z > 6 @10 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 19 to iindex = 2),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getUserTypeMask(Ljava/lang/String;)J > 1,2 @0 exception:3,
5 = new <Application,Landroid/util/ArraySet>@4,
6 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 6 @8 exception:7,
invokespecial < Application, Landroid/util/ArraySet, <init>(I)V > 5,8 @12 exception:9,
33 = phi  32,10,
11 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 11 @18 exception:12,
conditional branch(ge, to iindex=-1) 33,13,
return 5,
27 = new <Application,Landroid/util/ArraySet>@40,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 27 @42 exception:28,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
invokespecial < Application, Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0, <init>(Lcom/android/server/pm/UserSystemPackageInstaller;Ljava/util/Set;ZLjava/util/Set;)V > 33,1,26,22,27 @55 exception:34,
invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, forEachPackage(Ljava/util/function/Consumer;)V > 32,33 @58 exception:35,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokeinterface < Application, Ljava/util/Set, size()I > 7 @15 exception:9,
11 = new <Application,[Ljava/lang/String>@1910 ,
13 = invokeinterface < Application, Ljava/util/Set, toArray([Ljava/lang/Object;)[Ljava/lang/Object; > 7,11 @21 exception:12,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
depth : 2
public int getWhitelistMode(){
	int v1 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	int v2 = p0.getDeviceDefaultWhitelistMode();
	return v2;
}
-----
depth : 2
public boolean isEnforceMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistSystemMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isUserTypeSubtypeOfSystem(String p1){
	Object v1 = this.mUserTypes.get(p1);
	boolean v2 = v1.isSystem();
	return phiInstruction;
}
-----
depth : 2
public Set getWhitelistedPackagesForUserType(String p1){
	long v1 = p0.getUserTypeMask(p1);
	ArraySet v1 = new ArraySet(v2);
	int v2 = this.mWhitelistedPackagesForUserTypes.size();
	int v4 = this.mWhitelistedPackagesForUserTypes.size();
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public String getPreInstallableSystemPackages(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	int v6 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	int v7 = UserSystemPackageInstaller.getDeviceDefaultWhitelistMode();
	int v5 = v7;
	boolean v8 = phiInstruction;
	boolean v9 = phiInstruction;
	boolean v10 = phiInstruction;
	Object v12 = this.mUserTypes.get(p1);
	boolean v13 = v12.isSystem();
	boolean v11 = phiInstruction;
	long v15 = UserSystemPackageInstaller.getUserTypeMask(p1);
	ArraySet v16 = new ArraySet(v17);
	int v17 = this.mWhitelistedPackagesForUserTypes.size();
	int v19 = this.mWhitelistedPackagesForUserTypes.size();
	Set v14 = v16;
	ArraySet v20 = new ArraySet();
	Object v23 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v22 = v23;
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v24 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(UserSystemPackageInstaller,v14,phiInstruction,v20);
	v22.forEachPackage(v24);
	Set v4 = v20;
	int v27 = v4.size();
	String v28 = new String(v27);
	Object v29 = v4.toArray(v28);
	return v29;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/SystemProperties, getInt(Ljava/lang/String;I)I > 2,3 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getDeviceDefaultWhitelistMode()I > 1 @10 exception:6,
return 7,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
5 = phi  2,4,
return 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isSystem()Z > 6 @10 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getUserTypeMask(Ljava/lang/String;)J > 1,2 @0 exception:3,
5 = new <Application,Landroid/util/ArraySet>@4,
6 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 6 @8 exception:7,
invokespecial < Application, Landroid/util/ArraySet, <init>(I)V > 5,8 @12 exception:9,
33 = phi  32,10,
11 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 11 @18 exception:12,
conditional branch(ge, to iindex=-1) 33,13,
return 5,
27 = new <Application,Landroid/util/ArraySet>@40,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 27 @42 exception:28,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
invokespecial < Application, Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0, <init>(Lcom/android/server/pm/UserSystemPackageInstaller;Ljava/util/Set;ZLjava/util/Set;)V > 33,1,26,22,27 @55 exception:34,
invokevirtual < Application, Landroid/content/pm/PackageManagerInternal, forEachPackage(Ljava/util/function/Consumer;)V > 32,33 @58 exception:35,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
return 8,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
depth : 2
public int getWhitelistMode(){
	int v1 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	int v2 = p0.getDeviceDefaultWhitelistMode();
	return v2;
}
-----
depth : 2
public boolean isEnforceMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistSystemMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isUserTypeSubtypeOfSystem(String p1){
	Object v1 = this.mUserTypes.get(p1);
	boolean v2 = v1.isSystem();
	return phiInstruction;
}
-----
depth : 2
public Set getWhitelistedPackagesForUserType(String p1){
	long v1 = p0.getUserTypeMask(p1);
	ArraySet v1 = new ArraySet(v2);
	int v2 = this.mWhitelistedPackagesForUserTypes.size();
	int v4 = this.mWhitelistedPackagesForUserTypes.size();
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public String getPreInstallableSystemPackages(String p1){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	int v6 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	int v7 = UserSystemPackageInstaller.getDeviceDefaultWhitelistMode();
	int v5 = v7;
	boolean v8 = phiInstruction;
	boolean v9 = phiInstruction;
	boolean v10 = phiInstruction;
	Object v12 = this.mUserTypes.get(p1);
	boolean v13 = v12.isSystem();
	boolean v11 = phiInstruction;
	long v15 = UserSystemPackageInstaller.getUserTypeMask(p1);
	ArraySet v16 = new ArraySet(v17);
	int v17 = this.mWhitelistedPackagesForUserTypes.size();
	int v19 = this.mWhitelistedPackagesForUserTypes.size();
	Set v14 = v16;
	ArraySet v20 = new ArraySet();
	Object v23 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v22 = v23;
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v24 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(UserSystemPackageInstaller,v14,phiInstruction,v20);
	v22.forEachPackage(v24);
	Set v4 = v20;
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isQuietModeEnabled(I)Z","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @6 exception:5,
monitorexit 4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 6 @13 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 7),
monitorexit 3,
return 9,","depth : 0
public boolean isQuietModeEnabled(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return 0;
}
-----
","public boolean isQuietModeEnabled(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return 0;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","isQuietModeEnabled(I)Z","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @6 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 6 @13 exception:10,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 6 @20 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
monitorexit 3,
return 13,","depth : 0
public boolean isQuietModeEnabled(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	boolean v3 = v1.isQuietModeEnabled();
	return v3;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
","public boolean isQuietModeEnabled(int p1){
	Object v2 = this.mUsers.get(p1);
	boolean v3 = this.mRemovingUserIds.get(p1);
	UserInfo v1 = 0;
	boolean v11 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v10 = v11;
	boolean v12 = phiInstruction;
	return v12;
}
","NONE"
"Lcom/android/server/pm/UserManagerService","isQuietModeEnabled(I)Z","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @6 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 6 @13 exception:10,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 6 @20 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
7 = phi  6,5,
return 7,
monitorexit 3,
return 13,","depth : 0
public boolean isQuietModeEnabled(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	boolean v3 = v1.isQuietModeEnabled();
	return v3;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
","public boolean isQuietModeEnabled(int p1){
	Object v2 = this.mUsers.get(p1);
	boolean v3 = this.mRemovingUserIds.get(p1);
	UserInfo v1 = 0;
	boolean v11 = UserManager.isUserTypeManagedProfile(this.userType);
	boolean v10 = v11;
	boolean v12 = phiInstruction;
	return v12;
}
","NONE"

"Lcom/android/server/pm/UserManagerService","getUsers(ZZZ)Ljava/util/List;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
return 8,","depth : 0
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
","public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUsers(ZZZ)Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = new <Application,Ljava/util/ArrayList>@3,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 7 @7 exception:8,
invokespecial < Application, Ljava/util/ArrayList, <init>(I)V > 6,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 11 @16 exception:12,
40 = phi  39,14,
conditional branch(ge, to iindex=-1) 40,13,
monitorexit 5,
return 6,
return 8,","depth : 0
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public List getUsersInternal(boolean p1, boolean p2, boolean p3){
	ArrayList v0 = new ArrayList(v1);
	int v1 = this.mUsers.size();
	int v3 = this.mUsers.size();
	return v0;
}
-----
","public List getUsers(boolean p1, boolean p2, boolean p3){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	ArrayList v4 = new ArrayList(v5);
	int v5 = this.mUsers.size();
	int v7 = this.mUsers.size();
	List v3 = v4;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUsers(ZZZ)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
return 8,","depth : 0
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","public List getUsers(boolean p1, boolean p2, boolean p3){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	List v4 = p0.getUsersInternal(p1, p2, p3);
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
","public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","public String getSeedAccountType(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","public String getSeedAccountType(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = v4;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public String getSeedAccountType(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 7,
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public String getSeedAccountType(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 13,3 @48 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
","public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 13,3 @48 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void setUserAccount(int p1, String p2){
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v2);
	Object v5 = this.mUsers.get(p1);
	boolean v6 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	AtomicFile v8 = new AtomicFile(v9);
	File v9 = new File(this.mUsersDir,v14);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(UserInfo.id);
	StringBuilder v13 = v10.append("".xml"");
	String v14 = v10.toString();
	FileOutputStream v17 = v8.startWrite();
	UserManagerService.writeUserLP(phiInstruction, v17);
	v8.finishWrite(v17);
	v8.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 13,3 @48 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void setUserAccount(int p1, String p2){
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v2);
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v2);
	Object v5 = this.mUsers.get(p1);
	boolean v6 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	AtomicFile v8 = new AtomicFile(v9);
	File v9 = new File(this.mUsersDir,v14);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(UserInfo.id);
	StringBuilder v13 = v10.append("".xml"");
	String v14 = v10.toString();
	FileOutputStream v17 = v8.startWrite();
	UserManagerService.writeUserLP(phiInstruction, v17);
	v8.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 13,3 @48 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public void setUserAccount(int p1, String p2){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	Object v7 = this.mUsers.get(p1);
	boolean v8 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 13,3 @48 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public void setUserAccount(int p1, String p2){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	Object v7 = this.mUsers.get(p1);
	boolean v8 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 3,5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @13 exception:9,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 13,3 @48 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public void setUserAccount(int p1, String p2){
	boolean v3 = phiInstruction;
	boolean v5 = phiInstruction;
	Object v7 = this.mUsers.get(p1);
	boolean v8 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
","public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v3 = this.mUserTypes.get(p1);
	boolean v4 = v3.isEnabled();
	boolean v5 = v3.isManagedProfile();
	PackageManager v6 = this.mContext.getPackageManager();
	boolean v7 = v6.hasSystemFeature(""android.software.managed_users"");
	UserInfo v8 = UserManagerService.getUserInfoLU(p2);
	boolean v9 = v8.canHaveProfile();
	[I v10 = UserManagerService.getProfileIds(p2, p1, 0);
	int v11 = UserManagerService.getAliveUsersExcludingGuestsCountLU();
	int v12 = UserManager.getMaxSupportedUsers();
	int v13 = UserManagerService.getMaxUsersOfTypePerParent(v3);
	int v14 = Math.min(phiInstruction, (v13 - (v10.length - phiInstruction)));
	int v1 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v3 = this.mUserTypes.get(p1);
	boolean v4 = v3.isEnabled();
	boolean v5 = v3.isManagedProfile();
	PackageManager v6 = this.mContext.getPackageManager();
	boolean v7 = v6.hasSystemFeature(""android.software.managed_users"");
	UserInfo v8 = UserManagerService.getUserInfoLU(p2);
	boolean v9 = v8.canHaveProfile();
	[I v10 = UserManagerService.getProfileIds(p2, p1, 0);
	int v11 = UserManagerService.getAliveUsersExcludingGuestsCountLU();
	int v12 = UserManager.getMaxSupportedUsers();
	int v13 = UserManagerService.getMaxUsersOfTypePerParent(v3);
	int v14 = Math.min(phiInstruction, (v13 - (v10.length - phiInstruction)));
	int v1 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
4 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 2 @2 exception:3,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
3 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowedPerParent()I > 1 @0 exception:2,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 1 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
10 = invokestatic < Application, Landroid/os/SystemProperties, getInt(Ljava/lang/String;I)I > 8,3 @17 exception:9,
return 10,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	int v3 = SystemProperties.getInt(""persist.sys.max_profiles"", v1);
	return v3;
}
-----
","public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = this.mEnabled;
	boolean v7 = UserManager.isUserTypeManagedProfile(this.mName);
	boolean v6 = v7;
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	Object v11 = this.mUsers.get(p2);
	boolean v12 = this.mRemovingUserIds.get(p2);
	UserInfo v10 = 0;
	boolean v20 = UserInfo.isProfile();
	boolean v21 = UserInfo.isGuest();
	boolean v22 = UserInfo.isRestricted();
	boolean v19 = 0;
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(""getting profiles related to user "");
	StringBuilder v28 = v25.append(p2);
	String v29 = v25.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v29);
	long v31 = Binder.clearCallingIdentity();
	IntArray v32 = UserManagerService.getProfileIdsLU(p2, p1, 0);
	[I v33 = v32.toArray();
	Binder.restoreCallingIdentity(v31);
	[I v23 = v33;
	int v36 = this.mUsers.size();
	int v35 = phiInstruction;
	int v37 = UserManager.getMaxSupportedUsers();
	int v39 = v4.getMaxAllowedPerParent();
	boolean v40 = v4.isManagedProfile();
	int v41 = SystemProperties.getInt(""persist.sys.max_profiles"", v39);
	int v38 = v41;
	int v42 = Math.min(phiInstruction, (v38 - (v23.length - phiInstruction)));
	int v1 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
4 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 2 @2 exception:3,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
3 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowedPerParent()I > 1 @0 exception:2,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 1 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
return 3,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	return v1;
}
-----
","public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = this.mEnabled;
	boolean v7 = UserManager.isUserTypeManagedProfile(this.mName);
	boolean v6 = v7;
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	Object v11 = this.mUsers.get(p2);
	boolean v12 = this.mRemovingUserIds.get(p2);
	UserInfo v10 = 0;
	boolean v20 = UserInfo.isProfile();
	boolean v21 = UserInfo.isGuest();
	boolean v22 = UserInfo.isRestricted();
	boolean v19 = 0;
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(""getting profiles related to user "");
	StringBuilder v28 = v25.append(p2);
	String v29 = v25.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v29);
	long v31 = Binder.clearCallingIdentity();
	IntArray v32 = UserManagerService.getProfileIdsLU(p2, p1, 0);
	[I v33 = v32.toArray();
	Binder.restoreCallingIdentity(v31);
	[I v23 = v33;
	int v36 = this.mUsers.size();
	int v35 = phiInstruction;
	int v37 = UserManager.getMaxSupportedUsers();
	int v39 = v4.getMaxAllowedPerParent();
	boolean v40 = v4.isManagedProfile();
	int v38 = v39;
	int v41 = Math.min(phiInstruction, (v38 - (v23.length - phiInstruction)));
	int v1 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeManagedProfile(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
4 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 2 @2 exception:3,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
3 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowedPerParent()I > 1 @0 exception:2,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 1 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
10 = invokestatic < Application, Landroid/os/SystemProperties, getInt(Ljava/lang/String;I)I > 8,3 @17 exception:9,
return 10,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	int v3 = SystemProperties.getInt(""persist.sys.max_profiles"", v1);
	return v3;
}
-----
","public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = this.mEnabled;
	boolean v7 = UserManager.isUserTypeManagedProfile(this.mName);
	boolean v6 = v7;
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	Object v11 = this.mUsers.get(p2);
	boolean v12 = this.mRemovingUserIds.get(p2);
	UserInfo v10 = 0;
	boolean v20 = UserInfo.isProfile();
	boolean v21 = UserInfo.isGuest();
	boolean v22 = UserInfo.isRestricted();
	boolean v19 = 0;
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(""getting profiles related to user "");
	StringBuilder v28 = v25.append(p2);
	String v29 = v25.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v29);
	long v31 = Binder.clearCallingIdentity();
	IntArray v32 = UserManagerService.getProfileIdsLU(p2, p1, 0);
	[I v33 = v32.toArray();
	Binder.restoreCallingIdentity(v31);
	[I v23 = v33;
	int v36 = this.mUsers.size();
	int v35 = phiInstruction;
	int v37 = UserManager.getMaxSupportedUsers();
	int v39 = v4.getMaxAllowedPerParent();
	boolean v40 = v4.isManagedProfile();
	int v41 = SystemProperties.getInt(""persist.sys.max_profiles"", v39);
	int v38 = v41;
	int v42 = Math.min(phiInstruction, (v38 - (v23.length - phiInstruction)));
	int v1 = 0;
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
","public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
depth : 1
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
","public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	int v2 = UserManagerService.getRemainingCreatableProfileCount(""android.os.usertype.profile.MANAGED"", p1, p2);
	boolean v1 = phiInstruction;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
depth : 1
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 2
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = v4.isEnabled();
	boolean v6 = v4.isManagedProfile();
	PackageManager v7 = this.mContext.getPackageManager();
	boolean v8 = v7.hasSystemFeature(""android.software.managed_users"");
	UserInfo v9 = UserManagerService.getUserInfoLU(p2);
	boolean v10 = v9.canHaveProfile();
	[I v11 = UserManagerService.getProfileIds(p2, p1, 0);
	int v12 = UserManagerService.getAliveUsersExcludingGuestsCountLU();
	int v13 = UserManager.getMaxSupportedUsers();
	int v14 = UserManagerService.getMaxUsersOfTypePerParent(v4);
	int v15 = Math.min(phiInstruction, (v14 - (v11.length - phiInstruction)));
	int v2 = 0;
	boolean v1 = phiInstruction;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 7,2 @7 exception:8,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 16 @32 exception:17,
21 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 18,19 @38 exception:20,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
38 = invokestatic < Application, Landroid/os/UserManager, getMaxSupportedUsers()I > @79 exception:37,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
47 = invokestatic < Application, Ljava/lang/Math, min(II)I > 40,45 @101 exception:46,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
9 = phi  8,7,
return 9,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
depth : 1
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 2
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v4 = this.mUserTypes.get(p1);
	boolean v5 = v4.isEnabled();
	boolean v6 = v4.isManagedProfile();
	PackageManager v7 = this.mContext.getPackageManager();
	boolean v8 = v7.hasSystemFeature(""android.software.managed_users"");
	UserInfo v9 = UserManagerService.getUserInfoLU(p2);
	boolean v10 = v9.canHaveProfile();
	[I v11 = UserManagerService.getProfileIds(p2, p1, 0);
	int v12 = UserManagerService.getAliveUsersExcludingGuestsCountLU();
	int v13 = UserManager.getMaxSupportedUsers();
	int v14 = UserManagerService.getMaxUsersOfTypePerParent(v4);
	int v15 = Math.min(phiInstruction, (v14 - (v11.length - phiInstruction)));
	int v2 = 0;
	boolean v1 = phiInstruction;
	return v1;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","0","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
","public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
monitorexit 30,
return 32,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
depth : 1
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
","public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(""get application restrictions for other user/app "");
	StringBuilder v10 = v7.append(p1);
	String v11 = v7.toString();
	UserManagerService.checkSystemOrRoot(v11);
	Bundle v13 = UserManagerService.readApplicationRestrictionsLAr(p1, v1);
	Bundle v2 = v13;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 3,7,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
6 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,6,8 @12 exception:9,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @15 exception:10,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
return 12,
monitorexit 30,
return 32,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
depth : 1
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 2
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(""get application restrictions for other user/app "");
	StringBuilder v10 = v7.append(p1);
	String v11 = v7.toString();
	AtomicFile v16 = new AtomicFile(v17);
	File v17 = new File(v18,v19);
	File v18 = Environment.getUserSystemDirectory(p2);
	String v19 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v22 = UserManagerService.readApplicationRestrictionsLAr(v16);
	Bundle v15 = v22;
	Bundle v2 = v15;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @6 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUidForPackage(Ljava/lang/String;)I > 1,2 @10 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 7,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,2 @30 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @33 exception:23,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
6 = invokestatic < Application, Landroid/os/UserHandle, isSameApp(II)Z > 3,4 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
6 = invokestatic < Application, Landroid/os/Environment, getUserSystemDirectory(I)Ljava/io/File; > 2 @4 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,6,8 @12 exception:9,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @15 exception:10,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
return 12,
monitorexit 30,
return 32,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
depth : 1
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 2
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(""get application restrictions for other user/app "");
	StringBuilder v10 = v7.append(p1);
	String v11 = v7.toString();
	AtomicFile v16 = new AtomicFile(v17);
	File v17 = new File(v18,v19);
	File v18 = Environment.getUserSystemDirectory(p2);
	String v19 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v22 = UserManagerService.readApplicationRestrictionsLAr(v16);
	Bundle v15 = v22;
	Bundle v2 = v15;
	return v2;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getDefaultGuestRestrictions()Landroid/os/Bundle;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 4,
5 = new <Application,Landroid/os/Bundle>@8,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 5,6 @12 exception:7,
monitorexit 4,
return 5,","depth : 0
public Bundle getDefaultGuestRestrictions(){
	UserManagerService.checkManageUsersPermission(""getDefaultGuestRestrictions"");
	Bundle v1 = new Bundle(this.mGuestRestrictions);
	return v1;
}
-----
","public Bundle getDefaultGuestRestrictions(){
	UserManagerService.checkManageUsersPermission(""getDefaultGuestRestrictions"");
	Bundle v2 = new Bundle(this.mGuestRestrictions);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getDefaultGuestRestrictions()Landroid/os/Bundle;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 4,
5 = new <Application,Landroid/os/Bundle>@8,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 5,6 @12 exception:7,
monitorexit 4,
return 5,","depth : 0
public Bundle getDefaultGuestRestrictions(){
	UserManagerService.checkManageUsersPermission(""getDefaultGuestRestrictions"");
	Bundle v1 = new Bundle(this.mGuestRestrictions);
	return v1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
","public Bundle getDefaultGuestRestrictions(){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Bundle v3 = new Bundle(this.mGuestRestrictions);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getDefaultGuestRestrictions()Landroid/os/Bundle;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 4,
5 = new <Application,Landroid/os/Bundle>@8,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
invokespecial < Application, Landroid/os/Bundle, <init>(Landroid/os/Bundle;)V > 5,6 @12 exception:7,
monitorexit 4,
return 5,","depth : 0
public Bundle getDefaultGuestRestrictions(){
	UserManagerService.checkManageUsersPermission(""getDefaultGuestRestrictions"");
	Bundle v1 = new Bundle(this.mGuestRestrictions);
	return v1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public Bundle getDefaultGuestRestrictions(){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	Bundle v5 = new Bundle(this.mGuestRestrictions);
	return v5;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
","public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:4,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmPackagesLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 6 @6 exception:7,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetUserDataNoChecks(Lcom/android/server/pm/UserManagerService;I)Lcom/android/server/pm/UserManagerService$UserData; > 9,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 13,
conditional branch(eq, to iindex=-1) 14,12,
goto (from iindex= 13 to iindex = 21),
23 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 23 @50 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 23,25 @55 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 23,2 @58 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 23 @61 exception:30,
33 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 22,31 @65 exception:32,
monitorexit 8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @69 exception:52,
return,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 1
public void setUserIcon(int p1, Bitmap p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = UserManagerService.-$$Nest$fgetmPackagesLock(this.this$0);
	UserManagerService$UserData v3 = UserManagerService.-$$Nest$mgetUserDataNoChecks(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""setUserIcon: unknown user #"");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""UserManagerService"", v7);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","public void setUserIcon(int p1, Bitmap p2){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	long v6 = Binder.clearCallingIdentity();
	Object v7 = UserManagerService.-$$Nest$fgetmPackagesLock(this.this$0);
	UserManagerService$UserData v8 = UserManagerService.-$$Nest$mgetUserDataNoChecks(this.this$0, p1);
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:4,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmPackagesLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 6 @6 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetUserDataNoChecks(Lcom/android/server/pm/UserManagerService;I)Lcom/android/server/pm/UserManagerService$UserData; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mwriteBitmapLP(Lcom/android/server/pm/UserManagerService;Landroid/content/pm/UserInfo;Landroid/graphics/Bitmap;)V > 15,13,3 @28 exception:16,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeBitmapLP(Landroid/content/pm/UserInfo;Landroid/graphics/Bitmap;)V > 1,2,3 @0 exception:4,
return,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mwriteUserLP(Lcom/android/server/pm/UserManagerService;Lcom/android/server/pm/UserManagerService$UserData;)V > 17,11 @33 exception:18,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,2 @0 exception:3,
return,
monitorexit 8,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$msendUserInfoChangedBroadcast(Lcom/android/server/pm/UserManagerService;I)V > 19,2 @39 exception:20,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @0 exception:3,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @42 exception:21,
return,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public void setUserIcon(int p1, Bitmap p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = UserManagerService.-$$Nest$fgetmPackagesLock(this.this$0);
	UserManagerService$UserData v3 = UserManagerService.-$$Nest$mgetUserDataNoChecks(this.this$0, p1);
	UserManagerService.-$$Nest$mwriteBitmapLP(this.this$0, UserManagerService$UserData.info, p2);
	UserManagerService.-$$Nest$mwriteUserLP(this.this$0, v3);
	UserManagerService.-$$Nest$msendUserInfoChangedBroadcast(this.this$0, p1);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public Object -$$Nest$fgetmPackagesLock(UserManagerService p1){
	return this.mPackagesLock;
}
-----
depth : 2
public UserManagerService$UserData -$$Nest$mgetUserDataNoChecks(UserManagerService p1, int p2){
	UserManagerService$UserData v1 = p1.getUserDataNoChecks(p2);
	return v1;
}
-----
depth : 2
public void -$$Nest$mwriteBitmapLP(UserManagerService p1, UserInfo p2, Bitmap p3){
	p1.writeBitmapLP(p2, p3);
	return;
}
-----
depth : 2
public void -$$Nest$mwriteUserLP(UserManagerService p1, UserManagerService$UserData p2){
	p1.writeUserLP(p2);
	return;
}
-----
depth : 2
public void -$$Nest$msendUserInfoChangedBroadcast(UserManagerService p1, int p2){
	p1.sendUserInfoChangedBroadcast(p2);
	return;
}
-----
","public void setUserIcon(int p1, Bitmap p2){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	long v7 = Binder.clearCallingIdentity();
	Object v8 = this.mPackagesLock;
	UserManagerService$UserData v10 = this.this$0.getUserDataNoChecks(p1);
	UserManagerService$UserData v9 = v10;
	this.this$0.writeBitmapLP(UserManagerService$UserData.info, p2);
	this.this$0.writeUserLP(v9);
	this.this$0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v7);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:4,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmPackagesLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 6 @6 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetUserDataNoChecks(Lcom/android/server/pm/UserManagerService;I)Lcom/android/server/pm/UserManagerService$UserData; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 13,
conditional branch(eq, to iindex=-1) 14,12,
goto (from iindex= 13 to iindex = 21),
23 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 23 @50 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 23,25 @55 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 23,2 @58 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 23 @61 exception:30,
33 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 22,31 @65 exception:32,
monitorexit 8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @69 exception:52,
return,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public void setUserIcon(int p1, Bitmap p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = UserManagerService.-$$Nest$fgetmPackagesLock(this.this$0);
	UserManagerService$UserData v3 = UserManagerService.-$$Nest$mgetUserDataNoChecks(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""setUserIcon: unknown user #"");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""UserManagerService"", v7);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public Object -$$Nest$fgetmPackagesLock(UserManagerService p1){
	return this.mPackagesLock;
}
-----
depth : 2
public UserManagerService$UserData -$$Nest$mgetUserDataNoChecks(UserManagerService p1, int p2){
	UserManagerService$UserData v1 = p1.getUserDataNoChecks(p2);
	return v1;
}
-----
","public void setUserIcon(int p1, Bitmap p2){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	long v7 = Binder.clearCallingIdentity();
	Object v8 = this.mPackagesLock;
	UserManagerService$UserData v10 = this.this$0.getUserDataNoChecks(p1);
	UserManagerService$UserData v9 = v10;
	Binder.restoreCallingIdentity(v7);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,27 @19 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 16,8,
17 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 17,8,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
21 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 18,19 @45 exception:20,
conditional branch(ne, to iindex=-1) 21,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isGuest();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
","public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isGuest();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,27 @19 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 13 @27 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/os/UserManager, isUserTypeGuest(Ljava/lang/String;)Z > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 16,8,
17 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 17,8,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
21 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 18,19 @45 exception:20,
conditional branch(ne, to iindex=-1) 21,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isGuest();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
","public UserInfo findCurrentGuestUser(){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = this.mUsers.size();
	Object v4 = this.mUsers.valueAt(phiInstruction);
	boolean v6 = UserManager.isUserTypeGuest(this.userType);
	boolean v5 = v6;
	boolean v7 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
monitorexit 4,
return 8,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
","public UserInfo findCurrentGuestUser(){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = this.mUsers.size();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,27 @19 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 16,8,
17 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 17,8,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
21 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 18,19 @45 exception:20,
conditional branch(ne, to iindex=-1) 21,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isGuest();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public UserInfo findCurrentGuestUser(){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = this.mUsers.size();
	Object v6 = this.mUsers.valueAt(phiInstruction);
	boolean v7 = UserManagerService$UserData.info.isGuest();
	boolean v8 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @10 exception:6,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
monitorexit 4,
return 8,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public UserInfo findCurrentGuestUser(){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v5 = this.mUsers.size();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
","public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @5 exception:6,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,33 @15 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isInitialized()Z > 13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 17,
20 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 16,18 @36 exception:19,
conditional branch(eq, to iindex=-1) 20,8,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 21,8,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 21,2 @47 exception:22,
conditional branch(ne, to iindex=-1) 23,8,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 24,8,
26 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 24,3 @58 exception:25,
conditional branch(ne, to iindex=-1) 26,8,
monitorexit 4,
return 44,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	Object v2 = this.mUsers.valueAt(phiInstruction);
	boolean v3 = UserManagerService$UserData.info.isInitialized();
	boolean v4 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v5 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v6 = UserManagerService$UserData.seedAccountType.equals(p2);
	return 1;
}
-----
","public boolean someUserHasSeedAccount(String p1, String p2){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v4 = this.mUsers.size();
	Object v5 = this.mUsers.valueAt(phiInstruction);
	boolean v6 = UserManagerService$UserData.info.isInitialized();
	boolean v7 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v8 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v9 = UserManagerService$UserData.seedAccountType.equals(p2);
	boolean v3 = 1;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @5 exception:6,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
monitorexit 4,
return 8,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	return 0;
}
-----
","public boolean someUserHasSeedAccount(String p1, String p2){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v4 = this.mUsers.size();
	boolean v3 = 0;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @5 exception:6,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,33 @15 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isInitialized()Z > 13 @23 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 17,
20 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 16,18 @36 exception:19,
conditional branch(eq, to iindex=-1) 20,8,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 21,8,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 21,2 @47 exception:22,
conditional branch(ne, to iindex=-1) 23,8,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 24,8,
26 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 24,3 @58 exception:25,
conditional branch(ne, to iindex=-1) 26,8,
monitorexit 4,
return 44,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	Object v2 = this.mUsers.valueAt(phiInstruction);
	boolean v3 = UserManagerService$UserData.info.isInitialized();
	boolean v4 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v5 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v6 = UserManagerService$UserData.seedAccountType.equals(p2);
	return 1;
}
-----
depth : 2
public boolean isInitialized(){
	return phiInstruction;
}
-----
","public boolean someUserHasSeedAccount(String p1, String p2){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v6 = this.mUsers.size();
	Object v7 = this.mUsers.valueAt(phiInstruction);
	boolean v8 = phiInstruction;
	boolean v9 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v10 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v11 = UserManagerService$UserData.seedAccountType.equals(p2);
	boolean v5 = 1;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @5 exception:6,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 9,33 @15 exception:10,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isInitialized()Z > 13 @23 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 17,
20 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 16,18 @36 exception:19,
conditional branch(eq, to iindex=-1) 20,8,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 21,8,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 21,2 @47 exception:22,
conditional branch(ne, to iindex=-1) 23,8,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 24,8,
26 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 24,3 @58 exception:25,
conditional branch(ne, to iindex=-1) 26,8,
monitorexit 4,
return 44,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	Object v2 = this.mUsers.valueAt(phiInstruction);
	boolean v3 = UserManagerService$UserData.info.isInitialized();
	boolean v4 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v5 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v6 = UserManagerService$UserData.seedAccountType.equals(p2);
	return 1;
}
-----
depth : 2
public boolean isInitialized(){
	return phiInstruction;
}
-----
","public boolean someUserHasSeedAccount(String p1, String p2){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v6 = this.mUsers.size();
	Object v7 = this.mUsers.valueAt(phiInstruction);
	boolean v8 = phiInstruction;
	boolean v9 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v10 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v11 = UserManagerService$UserData.seedAccountType.equals(p2);
	boolean v5 = 1;
	return v5;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
","public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountOptions, <Application,Landroid/os/PersistableBundle> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, persistSeedData, <Primordial,Z> > = 2,
return,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 1
public void clearSeedAccountData(){
	this.seedAccountName = 0;
	this.seedAccountType = 0;
	this.seedAccountOptions = 0;
	this.persistSeedData = 0;
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void clearSeedAccountData(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = 0;
	this.seedAccountName = 0;
	this.seedAccountType = 0;
	this.seedAccountOptions = 0;
	this.persistSeedData = 0;
	AtomicFile v8 = new AtomicFile(v9);
	File v9 = new File(this.mUsersDir,v14);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(UserInfo.id);
	StringBuilder v13 = v10.append("".xml"");
	String v14 = v10.toString();
	FileOutputStream v17 = v8.startWrite();
	UserManagerService.writeUserLP(v3, v17);
	v8.finishWrite(v17);
	v8.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountOptions, <Application,Landroid/os/PersistableBundle> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, persistSeedData, <Primordial,Z> > = 2,
return,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 1
public void clearSeedAccountData(){
	this.seedAccountName = 0;
	this.seedAccountType = 0;
	this.seedAccountOptions = 0;
	this.persistSeedData = 0;
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void clearSeedAccountData(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserManagerService$UserData v3 = v4;
	this.seedAccountName = 0;
	this.seedAccountType = 0;
	this.seedAccountOptions = 0;
	this.persistSeedData = 0;
	AtomicFile v8 = new AtomicFile(v9);
	File v9 = new File(this.mUsersDir,v14);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(UserInfo.id);
	StringBuilder v13 = v10.append("".xml"");
	String v14 = v10.toString();
	FileOutputStream v17 = v8.startWrite();
	UserManagerService.writeUserLP(v3, v17);
	v8.finishWrite(v17);
	v8.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void clearSeedAccountData(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	v5.clearSeedAccountData();
	p0.writeUserLP(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 6,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void clearSeedAccountData(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserManagerService$UserData v5 = p0.getUserDataLU(p1);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
","public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
","public String getProfileType(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasQueryUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	boolean v16 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
","public String getProfileType(int p1){
	boolean v3 = UserManagerService.isSameProfileGroupNoChecks(v2, p1);
	boolean v4 = UserManagerService.hasQueryUsersPermission();
	int v5 = Binder.getCallingUid();
	boolean v6 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v5);
	Object v8 = this.mUsers.get(p1);
	boolean v9 = this.mRemovingUserIds.get(p1);
	UserInfo v7 = 0;
	boolean v16 = phiInstruction;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public String getProfileType(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	boolean v7 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	boolean v6 = v7;
	int v8 = Binder.getCallingUid();
	boolean v9 = phiInstruction;
	UserInfo v11 = p0.getUserInfoLU(p1);
	boolean v12 = v11.isProfile();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public String getProfileType(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	boolean v7 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	boolean v6 = v7;
	int v8 = Binder.getCallingUid();
	boolean v9 = phiInstruction;
	UserInfo v11 = p0.getUserInfoLU(p1);
	boolean v12 = v11.isProfile();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @20 exception:11,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
6 = invokestatic < Application, Landroid/app/ActivityManager, checkComponentPermission(Ljava/lang/String;IIZ)I > 1,2,3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","public String getProfileType(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(v2);
	UserInfo v5 = UserManagerService.getUserInfoLU(p1);
	boolean v3 = phiInstruction;
	boolean v7 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	boolean v6 = v7;
	int v8 = Binder.getCallingUid();
	boolean v9 = phiInstruction;
	UserInfo v11 = p0.getUserInfoLU(p1);
	boolean v12 = v11.isProfile();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
","public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	int v4 = UserManagerService.getNextAvailableId();
	long v13 = UserManagerService.logUserCreateJourneyBegin(v4, p2, p3);
	UserInfo v14 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v5, 0);
	UserManagerService.logUserCreateJourneyFinish(v13, v4, phiInstruction);
	v5.traceEnd();
	UserInfo v3 = v14;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v4 = UserManagerService.getNextAvailableId();
	long v13 = UserManagerService.logUserCreateJourneyBegin(v4, p2, p3);
	UserInfo v14 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v5, 0);
	UserManagerService.logUserCreateJourneyFinish(v13, v4, phiInstruction);
	v5.traceEnd();
	UserInfo v3 = v14;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @3 exception:3,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseBooleanArray, size()I > 6 @13 exception:7,
conditional branch(le, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @23 exception:11,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
invokevirtual < Application, Landroid/util/SparseBooleanArray, clear()V > 13 @28 exception:14,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
17 = invokevirtual < Application, Ljava/util/LinkedList, iterator()Ljava/util/Iterator; > 15 @33 exception:16,
19 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 17 @37 exception:18,
conditional branch(eq, to iindex=-1) 19,5,
32 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @60 exception:31,
33 = phi  4,32,
monitorexit 2,
invokestatic < Application, Landroid/os/UserManager, invalidateStaticUserProperties()V > @65 exception:37,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
5 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 3,2 @2 exception:4,
invokespecial < Application, Landroid/util/TimingsTraceLog, traceBegin(Ljava/lang/String;)V > 1,2 @5 exception:6,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserJourneyBegin(IILjava/lang/String;I)J > 1,5,2,3,4 @1 exception:6,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
12 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,3 @14 exception:11,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
16 = invokevirtual < Application, Ljava/lang/String, intern()Ljava/lang/String; > 3 @46 exception:15,
18 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 13 @50 exception:17,
19 = binaryop(or) 4 , 18,
21 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkUserTypeConsistency(I)Z > 19 @56 exception:20,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
25 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 13 @138 exception:24,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @147 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @152 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,16 @155 exception:32,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,34 @160 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @163 exception:37,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, throwCheckedUserOperationException(Ljava/lang/String;I)V > 1,38,26 @167 exception:39,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
52 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 13 @184 exception:51,
conditional branch(eq, to iindex=-1) 52,14,
57 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, convertPreCreatedUserIfPossible(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,16,47,2,9 @192 exception:56,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IJIII)V > 8,2,3,9,7 @11 exception:10,
return,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	p0.traceBegin(p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	int v6 = UserManagerService.scanNextAvailableIdLocked();
	int v7 = this.mRemovingUserIds.size();
	this.mRemovingUserIds.clear();
	Iterator v10 = this.mRecentlyRemovedIds.iterator();
	boolean v11 = v10.hasNext();
	int v12 = UserManagerService.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	int v5 = phiInstruction;
	StringBuilder v16 = new StringBuilder();
	StringBuilder v18 = v16.append(""createUser-"");
	StringBuilder v19 = v16.append(p3);
	String v20 = v16.toString();
	TimingsTraceAndSlog.traceBegin(v20);
	long v25 = UserManagerService.logUserJourneyBegin(4, v5, p2, p3);
	long v24 = v25;
	Object v27 = this.mUserTypes.get(p2);
	String v28 = p2.intern();
	int v29 = v27.getDefaultUserInfoFlags();
	boolean v30 = UserManagerService.checkUserTypeConsistency((p3 | v29));
	boolean v31 = v27.isEnabled();
	StringBuilder v32 = new StringBuilder();
	StringBuilder v34 = v32.append(""Cannot add a user of disabled type "");
	StringBuilder v35 = v32.append(v28);
	StringBuilder v36 = v32.append(""."");
	String v37 = v32.toString();
	UserManagerService.throwCheckedUserOperationException(v37, 6);
	boolean v39 = UserManagerService.isUserTypeEligibleForPreCreation(v27);
	UserInfo v40 = UserManagerService.convertPreCreatedUserIfPossible(v28, phiInstruction, p1, p7);
	UserInfo v26 = v40;
	FrameworkStatsLog.write(265, v24, v5, 3, phiInstruction);
	v14.traceEnd();
	UserInfo v4 = v26;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @3 exception:3,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseBooleanArray, size()I > 6 @13 exception:7,
conditional branch(le, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @23 exception:11,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
invokevirtual < Application, Landroid/util/SparseBooleanArray, clear()V > 13 @28 exception:14,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
17 = invokevirtual < Application, Ljava/util/LinkedList, iterator()Ljava/util/Iterator; > 15 @33 exception:16,
19 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 17 @37 exception:18,
conditional branch(eq, to iindex=-1) 19,5,
32 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @60 exception:31,
33 = phi  4,32,
monitorexit 2,
invokestatic < Application, Landroid/os/UserManager, invalidateStaticUserProperties()V > @65 exception:37,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
5 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 3,2 @2 exception:4,
invokespecial < Application, Landroid/util/TimingsTraceLog, traceBegin(Ljava/lang/String;)V > 1,2 @5 exception:6,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserJourneyBegin(IILjava/lang/String;I)J > 1,5,2,3,4 @1 exception:6,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
12 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,3 @14 exception:11,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
16 = invokevirtual < Application, Ljava/lang/String, intern()Ljava/lang/String; > 3 @46 exception:15,
18 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 13 @50 exception:17,
19 = binaryop(or) 4 , 18,
21 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkUserTypeConsistency(I)Z > 19 @56 exception:20,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
25 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 13 @138 exception:24,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @147 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @152 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,16 @155 exception:32,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,34 @160 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @163 exception:37,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, throwCheckedUserOperationException(Ljava/lang/String;I)V > 1,38,26 @167 exception:39,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
52 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 13 @184 exception:51,
conditional branch(eq, to iindex=-1) 52,14,
57 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, convertPreCreatedUserIfPossible(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,16,47,2,9 @192 exception:56,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IJIII)V > 8,2,3,9,7 @11 exception:10,
return,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	p0.traceBegin(p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	int v7 = UserManagerService.scanNextAvailableIdLocked();
	int v8 = this.mRemovingUserIds.size();
	this.mRemovingUserIds.clear();
	Iterator v11 = this.mRecentlyRemovedIds.iterator();
	boolean v12 = v11.hasNext();
	int v13 = UserManagerService.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	int v6 = phiInstruction;
	StringBuilder v17 = new StringBuilder();
	StringBuilder v19 = v17.append(""createUser-"");
	StringBuilder v20 = v17.append(p3);
	String v21 = v17.toString();
	TimingsTraceAndSlog.traceBegin(v21);
	long v26 = UserManagerService.logUserJourneyBegin(4, v6, p2, p3);
	long v25 = v26;
	Object v28 = this.mUserTypes.get(p2);
	String v29 = p2.intern();
	int v30 = v28.getDefaultUserInfoFlags();
	boolean v31 = UserManagerService.checkUserTypeConsistency((p3 | v30));
	boolean v32 = v28.isEnabled();
	StringBuilder v33 = new StringBuilder();
	StringBuilder v35 = v33.append(""Cannot add a user of disabled type "");
	StringBuilder v36 = v33.append(v29);
	StringBuilder v37 = v33.append(""."");
	String v38 = v33.toString();
	UserManagerService.throwCheckedUserOperationException(v38, 6);
	boolean v40 = UserManagerService.isUserTypeEligibleForPreCreation(v28);
	UserInfo v41 = UserManagerService.convertPreCreatedUserIfPossible(v29, phiInstruction, p1, p7);
	UserInfo v27 = v41;
	FrameworkStatsLog.write(265, v25, v6, 3, phiInstruction);
	v15.traceEnd();
	UserInfo v5 = v27;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @3 exception:3,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseBooleanArray, size()I > 6 @13 exception:7,
conditional branch(le, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @23 exception:11,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
invokevirtual < Application, Landroid/util/SparseBooleanArray, clear()V > 13 @28 exception:14,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
17 = invokevirtual < Application, Ljava/util/LinkedList, iterator()Ljava/util/Iterator; > 15 @33 exception:16,
19 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 17 @37 exception:18,
conditional branch(eq, to iindex=-1) 19,5,
32 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scanNextAvailableIdLocked()I > 1 @60 exception:31,
33 = phi  4,32,
monitorexit 2,
invokestatic < Application, Landroid/os/UserManager, invalidateStaticUserProperties()V > @65 exception:37,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
invokespecial < Application, Lcom/android/server/utils/TimingsTraceAndSlog, <init>()V > 11 @10 exception:12,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @20 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,4 @23 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @26 exception:20,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
5 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 3,2 @2 exception:4,
invokespecial < Application, Landroid/util/TimingsTraceLog, traceBegin(Ljava/lang/String;)V > 1,2 @5 exception:6,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserJourneyBegin(IILjava/lang/String;I)J > 1,5,2,3,4 @1 exception:6,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
12 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,3 @14 exception:11,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
16 = invokevirtual < Application, Ljava/lang/String, intern()Ljava/lang/String; > 3 @46 exception:15,
18 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 13 @50 exception:17,
19 = binaryop(or) 4 , 18,
21 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkUserTypeConsistency(I)Z > 19 @56 exception:20,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
25 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 13 @138 exception:24,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @147 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @152 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,16 @155 exception:32,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,34 @160 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @163 exception:37,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, throwCheckedUserOperationException(Ljava/lang/String;I)V > 1,38,26 @167 exception:39,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
52 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 13 @184 exception:51,
conditional branch(eq, to iindex=-1) 52,14,
57 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, convertPreCreatedUserIfPossible(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,16,47,2,9 @192 exception:56,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IJIII)V > 8,2,3,9,7 @11 exception:10,
return,
invokevirtual < Application, Landroid/util/TimingsTraceLog, traceEnd()V > 11 @67 exception:34,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	p0.traceBegin(p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	boolean v3 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	boolean v2 = v3;
	int v6 = UserManagerService.scanNextAvailableIdLocked();
	int v7 = this.mRemovingUserIds.size();
	this.mRemovingUserIds.clear();
	Iterator v10 = this.mRecentlyRemovedIds.iterator();
	boolean v11 = v10.hasNext();
	int v12 = UserManagerService.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	int v5 = phiInstruction;
	StringBuilder v16 = new StringBuilder();
	StringBuilder v18 = v16.append(""createUser-"");
	StringBuilder v19 = v16.append(p3);
	String v20 = v16.toString();
	TimingsTraceAndSlog.traceBegin(v20);
	long v25 = UserManagerService.logUserJourneyBegin(4, v5, p2, p3);
	long v24 = v25;
	Object v27 = this.mUserTypes.get(p2);
	String v28 = p2.intern();
	int v29 = v27.getDefaultUserInfoFlags();
	boolean v30 = UserManagerService.checkUserTypeConsistency((p3 | v29));
	boolean v31 = v27.isEnabled();
	StringBuilder v32 = new StringBuilder();
	StringBuilder v34 = v32.append(""Cannot add a user of disabled type "");
	StringBuilder v35 = v32.append(v28);
	StringBuilder v36 = v32.append(""."");
	String v37 = v32.toString();
	UserManagerService.throwCheckedUserOperationException(v37, 6);
	boolean v39 = UserManagerService.isUserTypeEligibleForPreCreation(v27);
	UserInfo v40 = UserManagerService.convertPreCreatedUserIfPossible(v28, phiInstruction, p1, p7);
	UserInfo v26 = v40;
	FrameworkStatsLog.write(265, v24, v5, 3, phiInstruction);
	v14.traceEnd();
	UserInfo v4 = v26;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserHandle(I)I","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserIds, <Primordial,[I> > 1,
5 = arraylength 4,
14 = phi  13,6,
conditional branch(ge, to iindex=-1) 14,5,
monitorexit 3,
return 15,","depth : 0
public int getUserHandle(int p1){
	return -1;
}
-----
","public int getUserHandle(int p1){
	return -1;
}
","NONE"

"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
","public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isEnabled(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void setUserEnabled(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	boolean v12 = phiInstruction;
	UserInfo.flags = (UserInfo.flags ^ 64);
	Object v14 = this.mUsers.get(UserInfo.id);
	boolean v15 = this.mRemovingUserIds.get(UserInfo.id);
	UserManagerService$UserData v13 = 0;
	AtomicFile v17 = new AtomicFile(v18);
	File v18 = new File(this.mUsersDir,v23);
	StringBuilder v19 = new StringBuilder();
	StringBuilder v21 = v19.append(UserInfo.id);
	StringBuilder v22 = v19.append("".xml"");
	String v23 = v19.toString();
	FileOutputStream v26 = v17.startWrite();
	UserManagerService.writeUserLP(v13, v26);
	v17.finishWrite(v26);
	v17.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @19 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
18 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @27 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,20 @32 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 18,2 @35 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @38 exception:25,
29 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,26 @44 exception:28,
return 7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseBooleanArray, get(I)Z > 10,2 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @8 exception:7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 6,9 @15 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,12 @20 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 6 @23 exception:15,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 4,5,16 @27 exception:17,
invokespecial < Application, Landroid/util/AtomicFile, <init>(Ljava/io/File;)V > 3,4 @30 exception:18,
20 = invokevirtual < Application, Landroid/util/AtomicFile, startWrite()Ljava/io/FileOutputStream; > 3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
invokevirtual < Application, Landroid/util/AtomicFile, finishWrite(Ljava/io/FileOutputStream;)V > 3,20 @40 exception:24,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @50 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @55 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 30,36 @62 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @65 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @71 exception:42,
invokevirtual < Application, Landroid/util/AtomicFile, failWrite(Ljava/io/FileOutputStream;)V > 3,27 @74 exception:44,
return,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserInfo: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean isEnabled(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","public void setUserEnabled(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	Object v4 = this.mUsers.get(p1);
	boolean v5 = this.mRemovingUserIds.get(p1);
	UserInfo v3 = 0;
	boolean v12 = phiInstruction;
	UserInfo.flags = (UserInfo.flags ^ 64);
	Object v14 = this.mUsers.get(UserInfo.id);
	boolean v15 = this.mRemovingUserIds.get(UserInfo.id);
	UserManagerService$UserData v13 = v14;
	AtomicFile v17 = new AtomicFile(v18);
	File v18 = new File(this.mUsersDir,v23);
	StringBuilder v19 = new StringBuilder();
	StringBuilder v21 = v19.append(UserInfo.id);
	StringBuilder v22 = v19.append("".xml"");
	String v23 = v19.toString();
	FileOutputStream v26 = v17.startWrite();
	UserManagerService.writeUserLP(v13, v26);
	v17.finishWrite(v26);
	v17.failWrite(phiInstruction);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void setUserEnabled(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserInfo v5 = p0.getUserInfoLU(p1);
	boolean v6 = v5.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v7 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v7);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void setUserEnabled(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserInfo v5 = p0.getUserInfoLU(p1);
	boolean v6 = v5.isEnabled();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
2 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:1,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","public void setUserEnabled(int p1){
	int v3 = Binder.getCallingUid();
	boolean v4 = UserManagerService.hasManageUsersPermission(v3);
	boolean v2 = v4;
	UserInfo v5 = p0.getUserInfoLU(p1);
	return;
}
","SYS_OR_SIG"

