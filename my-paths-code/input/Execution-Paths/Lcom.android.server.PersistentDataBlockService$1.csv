"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/PersistentDataBlockService$1","setOemUnlockEnabled(Z)V","0","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 6 @9 exception:7,
8 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceIsAdmin(Lcom/android/server/PersistentDataBlockService;)V > 8 @14 exception:9,
conditional branch(eq, to iindex=-1) 2,5,
10 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUserRestriction(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)V > 10,11 @24 exception:12,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUserRestriction(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)V > 13,14 @32 exception:15,
18 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
20 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 18 @37 exception:19,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoSetOemUnlockEnabledLocked(Lcom/android/server/PersistentDataBlockService;Z)V > 21,2 @44 exception:22,
23 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
25 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mcomputeAndWriteDigestLocked(Lcom/android/server/PersistentDataBlockService;)Z > 23 @49 exception:24,
monitorexit 20,
return,","depth : 0
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceIsAdmin(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceUserRestriction(this.this$0, ""no_oem_unlock"");
	PersistentDataBlockService.-$$Nest$menforceUserRestriction(this.this$0, ""no_factory_reset"");
	Object v6 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	PersistentDataBlockService.-$$Nest$mdoSetOemUnlockEnabledLocked(this.this$0, p1);
	boolean v8 = PersistentDataBlockService.-$$Nest$mcomputeAndWriteDigestLocked(this.this$0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","setOemUnlockEnabled(Z)V","1","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
8 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceIsAdmin(Lcom/android/server/PersistentDataBlockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceIsAdmin()V > 1 @0 exception:2,
return,
conditional branch(eq, to iindex=-1) 2,5,
10 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUserRestriction(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)V > 10,11 @24 exception:12,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUserRestriction(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUserRestriction(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)V > 13,14 @32 exception:15,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUserRestriction(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
18 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
20 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 18 @37 exception:19,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoSetOemUnlockEnabledLocked(Lcom/android/server/PersistentDataBlockService;Z)V > 21,2 @44 exception:22,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doSetOemUnlockEnabledLocked(Z)V > 1,2 @0 exception:3,
return,
23 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
25 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mcomputeAndWriteDigestLocked(Lcom/android/server/PersistentDataBlockService;)Z > 23 @49 exception:24,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, computeAndWriteDigestLocked()Z > 1 @0 exception:2,
return 3,
monitorexit 20,
return,","depth : 0
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceIsAdmin(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceUserRestriction(this.this$0, ""no_oem_unlock"");
	PersistentDataBlockService.-$$Nest$menforceUserRestriction(this.this$0, ""no_factory_reset"");
	Object v6 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	PersistentDataBlockService.-$$Nest$mdoSetOemUnlockEnabledLocked(this.this$0, p1);
	boolean v8 = PersistentDataBlockService.-$$Nest$mcomputeAndWriteDigestLocked(this.this$0);
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 1
public void -$$Nest$menforceIsAdmin(PersistentDataBlockService p1){
	p1.enforceIsAdmin();
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserRestriction(PersistentDataBlockService p1, String p2){
	p1.enforceUserRestriction(p2);
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserRestriction(PersistentDataBlockService p1, String p2){
	p1.enforceUserRestriction(p2);
	return;
}
-----
depth : 1
public Object -$$Nest$fgetmLock(PersistentDataBlockService p1){
	return this.mLock;
}
-----
depth : 1
public void -$$Nest$mdoSetOemUnlockEnabledLocked(PersistentDataBlockService p1, boolean p2){
	p1.doSetOemUnlockEnabledLocked(p2);
	return;
}
-----
depth : 1
public boolean -$$Nest$mcomputeAndWriteDigestLocked(PersistentDataBlockService p1){
	boolean v1 = p1.computeAndWriteDigestLocked();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","setOemUnlockEnabled(Z)V","1","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
8 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceIsAdmin(Lcom/android/server/PersistentDataBlockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceIsAdmin()V > 1 @0 exception:2,
return,
conditional branch(eq, to iindex=-1) 2,5,
18 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
20 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 18 @37 exception:19,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoSetOemUnlockEnabledLocked(Lcom/android/server/PersistentDataBlockService;Z)V > 21,2 @44 exception:22,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doSetOemUnlockEnabledLocked(Z)V > 1,2 @0 exception:3,
return,
23 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
25 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mcomputeAndWriteDigestLocked(Lcom/android/server/PersistentDataBlockService;)Z > 23 @49 exception:24,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, computeAndWriteDigestLocked()Z > 1 @0 exception:2,
return 3,
monitorexit 20,
return,","depth : 0
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceIsAdmin(this.this$0);
	Object v4 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	PersistentDataBlockService.-$$Nest$mdoSetOemUnlockEnabledLocked(this.this$0, p1);
	boolean v6 = PersistentDataBlockService.-$$Nest$mcomputeAndWriteDigestLocked(this.this$0);
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 1
public void -$$Nest$menforceIsAdmin(PersistentDataBlockService p1){
	p1.enforceIsAdmin();
	return;
}
-----
depth : 1
public Object -$$Nest$fgetmLock(PersistentDataBlockService p1){
	return this.mLock;
}
-----
depth : 1
public void -$$Nest$mdoSetOemUnlockEnabledLocked(PersistentDataBlockService p1, boolean p2){
	p1.doSetOemUnlockEnabledLocked(p2);
	return;
}
-----
depth : 1
public boolean -$$Nest$mcomputeAndWriteDigestLocked(PersistentDataBlockService p1){
	boolean v1 = p1.computeAndWriteDigestLocked();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","setOemUnlockEnabled(Z)V","2","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
return,
8 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceIsAdmin(Lcom/android/server/PersistentDataBlockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceIsAdmin()V > 1 @0 exception:2,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 8,9,
return,
return,
conditional branch(eq, to iindex=-1) 2,5,
10 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUserRestriction(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)V > 10,11 @24 exception:12,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUserRestriction(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
return,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUserRestriction(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)V > 13,14 @32 exception:15,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUserRestriction(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
return,
18 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
20 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 18 @37 exception:19,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoSetOemUnlockEnabledLocked(Lcom/android/server/PersistentDataBlockService;Z)V > 21,2 @44 exception:22,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doSetOemUnlockEnabledLocked(Z)V > 1,2 @0 exception:3,
11 = binaryop(sub) 9 , 10,
31 = getCaughtException ,
32 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 2,17,
goto (from iindex= 33 to iindex = 2),
36 = phi  3,4,
return,
return,
23 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
25 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mcomputeAndWriteDigestLocked(Lcom/android/server/PersistentDataBlockService;)Z > 23 @49 exception:24,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, computeAndWriteDigestLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 4,2,
7 = getCaughtException ,
8 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 2,
return 3,
monitorexit 20,
return,","depth : 0
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceIsAdmin(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceUserRestriction(this.this$0, ""no_oem_unlock"");
	PersistentDataBlockService.-$$Nest$menforceUserRestriction(this.this$0, ""no_factory_reset"");
	Object v6 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	PersistentDataBlockService.-$$Nest$mdoSetOemUnlockEnabledLocked(this.this$0, p1);
	boolean v8 = PersistentDataBlockService.-$$Nest$mcomputeAndWriteDigestLocked(this.this$0);
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockWritePermission(){
	return;
}
-----
depth : 1
public void -$$Nest$menforceIsAdmin(PersistentDataBlockService p1){
	p1.enforceIsAdmin();
	return;
}
-----
depth : 2
public void enforceIsAdmin(){
	int v1 = UserHandle.getCallingUserId();
	UserManager v2 = UserManager.get(this.mContext);
	boolean v3 = v2.isUserAdmin(v1);
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserRestriction(PersistentDataBlockService p1, String p2){
	p1.enforceUserRestriction(p2);
	return;
}
-----
depth : 2
public void enforceUserRestriction(String p1){
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserRestriction(PersistentDataBlockService p1, String p2){
	p1.enforceUserRestriction(p2);
	return;
}
-----
depth : 2
public void enforceUserRestriction(String p1){
	return;
}
-----
depth : 1
public void -$$Nest$mdoSetOemUnlockEnabledLocked(PersistentDataBlockService p1, boolean p2){
	p1.doSetOemUnlockEnabledLocked(p2);
	return;
}
-----
depth : 2
public void doSetOemUnlockEnabledLocked(boolean p1){
	FileChannel v1 = p0.getBlockOutputChannel();
	long v2 = p0.getBlockDeviceSize();
	FileChannel v3 = v1.position((v2 - 1));
	int v4 = Slog.e(this.TAG, ""unable to access persistent partition"", caughtException);
	SystemProperties.set(""sys.oem_unlock_allowed"", phiInstruction);
	return;
}
-----
depth : 1
public boolean -$$Nest$mcomputeAndWriteDigestLocked(PersistentDataBlockService p1){
	boolean v1 = p1.computeAndWriteDigestLocked();
	return v1;
}
-----
depth : 2
public boolean computeAndWriteDigestLocked(){
	byte[] v1 = p0.computeDigestLocked(0);
	FileChannel v2 = p0.getBlockOutputChannel();
	int v3 = Slog.e(this.TAG, ""partition not available?"", caughtException);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","setOemUnlockEnabled(Z)V","2","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
return,
8 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceIsAdmin(Lcom/android/server/PersistentDataBlockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceIsAdmin()V > 1 @0 exception:2,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 8,9,
return,
return,
conditional branch(eq, to iindex=-1) 2,5,
18 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
20 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 18 @37 exception:19,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoSetOemUnlockEnabledLocked(Lcom/android/server/PersistentDataBlockService;Z)V > 21,2 @44 exception:22,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doSetOemUnlockEnabledLocked(Z)V > 1,2 @0 exception:3,
11 = binaryop(sub) 9 , 10,
31 = getCaughtException ,
32 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 2,17,
goto (from iindex= 33 to iindex = 2),
36 = phi  3,4,
return,
return,
23 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
25 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mcomputeAndWriteDigestLocked(Lcom/android/server/PersistentDataBlockService;)Z > 23 @49 exception:24,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, computeAndWriteDigestLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 4,2,
7 = getCaughtException ,
8 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 2,
return 3,
monitorexit 20,
return,","depth : 0
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	PersistentDataBlockService.-$$Nest$menforceIsAdmin(this.this$0);
	Object v4 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	PersistentDataBlockService.-$$Nest$mdoSetOemUnlockEnabledLocked(this.this$0, p1);
	boolean v6 = PersistentDataBlockService.-$$Nest$mcomputeAndWriteDigestLocked(this.this$0);
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockWritePermission(){
	return;
}
-----
depth : 1
public void -$$Nest$menforceIsAdmin(PersistentDataBlockService p1){
	p1.enforceIsAdmin();
	return;
}
-----
depth : 2
public void enforceIsAdmin(){
	int v1 = UserHandle.getCallingUserId();
	UserManager v2 = UserManager.get(this.mContext);
	boolean v3 = v2.isUserAdmin(v1);
	return;
}
-----
depth : 1
public void -$$Nest$mdoSetOemUnlockEnabledLocked(PersistentDataBlockService p1, boolean p2){
	p1.doSetOemUnlockEnabledLocked(p2);
	return;
}
-----
depth : 2
public void doSetOemUnlockEnabledLocked(boolean p1){
	FileChannel v1 = p0.getBlockOutputChannel();
	long v2 = p0.getBlockDeviceSize();
	FileChannel v3 = v1.position((v2 - 1));
	int v4 = Slog.e(this.TAG, ""unable to access persistent partition"", caughtException);
	SystemProperties.set(""sys.oem_unlock_allowed"", phiInstruction);
	return;
}
-----
depth : 1
public boolean -$$Nest$mcomputeAndWriteDigestLocked(PersistentDataBlockService p1){
	boolean v1 = p1.computeAndWriteDigestLocked();
	return v1;
}
-----
depth : 2
public boolean computeAndWriteDigestLocked(){
	byte[] v1 = p0.computeDigestLocked(0);
	FileChannel v2 = p0.getBlockOutputChannel();
	int v3 = Slog.e(this.TAG, ""partition not available?"", caughtException);
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/PersistentDataBlockService$1","getMaximumDataBlockSize()J","0","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 6 @11 exception:7,
return 8,","depth : 0
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	return v3;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","getMaximumDataBlockSize()J","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
return 3,
return 8,","depth : 0
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	return v3;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","getMaximumDataBlockSize()J","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
5 = binaryop(sub) 3 , 4,
7 = binaryop(sub) 5 , 6,
9 = binaryop(sub) 7 , 8,
11 = binaryop(sub) 9 , 10,
13 = binaryop(sub) 11 , 12,
15 = binaryop(lt) 13 , 14,
conditional branch(gt, to iindex=-1) 15,16,
goto (from iindex= 15 to iindex = 2),
17 = phi  13,14,
return 17,
return 3,
return 8,","depth : 0
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	return v3;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 2
public long doGetMaximumDataBlockSize(){
	long v1 = p0.getBlockDeviceSize();
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","getMaximumDataBlockSize()J","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
5 = binaryop(sub) 3 , 4,
7 = binaryop(sub) 5 , 6,
9 = binaryop(sub) 7 , 8,
11 = binaryop(sub) 9 , 10,
13 = binaryop(sub) 11 , 12,
15 = binaryop(lt) 13 , 14,
conditional branch(gt, to iindex=-1) 15,16,
17 = phi  13,14,
return 17,
return 3,
return 8,","depth : 0
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	return v3;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 2
public long doGetMaximumDataBlockSize(){
	long v1 = p0.getBlockDeviceSize();
	return phiInstruction;
}
-----
","NONE"

"Lcom/android/server/PersistentDataBlockService$1","write([B)I","0","3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 3,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 7 @11 exception:8,
10 = arraylength 2,
11 = conversion(J) 10,
12 = binaryop(lt) 11 , 9,
conditional branch(le, to iindex=-1) 12,13,
15 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
17 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mgetBlockOutputChannel(Lcom/android/server/PersistentDataBlockService;)Ljava/nio/channels/FileChannel; > 15 @27 exception:16,
26 = arraylength 2,
28 = binaryop(add) 26 , 27,
30 = binaryop(add) 28 , 29,
33 = new <Primordial,[B>@4129 ,
39 = arraylength 2,
46 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
48 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 46 @64 exception:47,
monitorenter 48,
49 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
51 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmIsWritable(Lcom/android/server/PersistentDataBlockService;)Z > 49 @71 exception:50,
conditional branch(ne, to iindex=-1) 51,13,
58 = getCaughtException ,
60 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @100 exception:59,
monitorexit 48,
return 14,","depth : 0
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	FileChannel v4 = PersistentDataBlockService.-$$Nest$mgetBlockOutputChannel(this.this$0);
	ByteBuffer v5 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v5 = new [B(32);
	ByteBuffer v6 = v5.put(v5);
	ByteBuffer v7 = v5.putInt(428873843);
	ByteBuffer v8 = v5.putInt(p1.length);
	ByteBuffer v9 = v5.put(p1);
	Buffer v10 = v5.flip();
	Object v11 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v12 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v13 = v4.write(v5);
	String v14 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v15 = Slog.e(v14, ""failed writing to the persistent data block"", caughtException);
	return -1;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","write([B)I","1","3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 3,5 @6 exception:6,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
return,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 7 @11 exception:8,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
return 3,
10 = arraylength 2,
11 = conversion(J) 10,
12 = binaryop(lt) 11 , 9,
conditional branch(le, to iindex=-1) 12,13,
15 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
17 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mgetBlockOutputChannel(Lcom/android/server/PersistentDataBlockService;)Ljava/nio/channels/FileChannel; > 15 @27 exception:16,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, getBlockOutputChannel()Ljava/nio/channels/FileChannel; > 1 @0 exception:2,
return 3,
26 = arraylength 2,
28 = binaryop(add) 26 , 27,
30 = binaryop(add) 28 , 29,
33 = new <Primordial,[B>@4129 ,
39 = arraylength 2,
46 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
48 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 46 @64 exception:47,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 48,
49 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
51 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmIsWritable(Lcom/android/server/PersistentDataBlockService;)Z > 49 @71 exception:50,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mIsWritable, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 51,13,
58 = getCaughtException ,
60 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @100 exception:59,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
monitorexit 48,
return 14,","depth : 0
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	FileChannel v4 = PersistentDataBlockService.-$$Nest$mgetBlockOutputChannel(this.this$0);
	ByteBuffer v5 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v5 = new [B(32);
	ByteBuffer v6 = v5.put(v5);
	ByteBuffer v7 = v5.putInt(428873843);
	ByteBuffer v8 = v5.putInt(p1.length);
	ByteBuffer v9 = v5.put(p1);
	Buffer v10 = v5.flip();
	Object v11 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v12 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v13 = v4.write(v5);
	String v14 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v15 = Slog.e(v14, ""failed writing to the persistent data block"", caughtException);
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 1
public FileChannel -$$Nest$mgetBlockOutputChannel(PersistentDataBlockService p1){
	FileChannel v1 = p1.getBlockOutputChannel();
	return v1;
}
-----
depth : 1
public Object -$$Nest$fgetmLock(PersistentDataBlockService p1){
	return this.mLock;
}
-----
depth : 1
public boolean -$$Nest$fgetmIsWritable(PersistentDataBlockService p1){
	return this.mIsWritable;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","write([B)I","1","3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 3,5 @6 exception:6,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
return,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 7 @11 exception:8,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
return 3,
10 = arraylength 2,
11 = conversion(J) 10,
12 = binaryop(lt) 11 , 9,
conditional branch(le, to iindex=-1) 12,13,
15 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
17 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mgetBlockOutputChannel(Lcom/android/server/PersistentDataBlockService;)Ljava/nio/channels/FileChannel; > 15 @27 exception:16,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, getBlockOutputChannel()Ljava/nio/channels/FileChannel; > 1 @0 exception:2,
return 3,
26 = arraylength 2,
28 = binaryop(add) 26 , 27,
30 = binaryop(add) 28 , 29,
33 = new <Primordial,[B>@4129 ,
39 = arraylength 2,
46 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
48 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 46 @64 exception:47,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 48,
49 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
51 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmIsWritable(Lcom/android/server/PersistentDataBlockService;)Z > 49 @71 exception:50,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mIsWritable, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 51,13,
58 = getCaughtException ,
60 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @100 exception:59,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
monitorexit 48,
return 14,","depth : 0
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	FileChannel v4 = PersistentDataBlockService.-$$Nest$mgetBlockOutputChannel(this.this$0);
	ByteBuffer v5 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v5 = new [B(32);
	ByteBuffer v6 = v5.put(v5);
	ByteBuffer v7 = v5.putInt(428873843);
	ByteBuffer v8 = v5.putInt(p1.length);
	ByteBuffer v9 = v5.put(p1);
	Buffer v10 = v5.flip();
	Object v11 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v12 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v13 = v4.write(v5);
	v4.force(1);
	String v15 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v16 = Slog.e(v15, ""failed writing to the persistent data block"", caughtException);
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 1
public FileChannel -$$Nest$mgetBlockOutputChannel(PersistentDataBlockService p1){
	FileChannel v1 = p1.getBlockOutputChannel();
	return v1;
}
-----
depth : 1
public Object -$$Nest$fgetmLock(PersistentDataBlockService p1){
	return this.mLock;
}
-----
depth : 1
public boolean -$$Nest$fgetmIsWritable(PersistentDataBlockService p1){
	return this.mIsWritable;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","write([B)I","2","3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 3,5 @6 exception:6,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 7 @11 exception:8,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
5 = binaryop(sub) 3 , 4,
7 = binaryop(sub) 5 , 6,
9 = binaryop(sub) 7 , 8,
11 = binaryop(sub) 9 , 10,
13 = binaryop(sub) 11 , 12,
15 = binaryop(lt) 13 , 14,
conditional branch(gt, to iindex=-1) 15,16,
goto (from iindex= 15 to iindex = 2),
17 = phi  13,14,
return 17,
return 3,
10 = arraylength 2,
11 = conversion(J) 10,
12 = binaryop(lt) 11 , 9,
conditional branch(le, to iindex=-1) 12,13,
15 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
17 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mgetBlockOutputChannel(Lcom/android/server/PersistentDataBlockService;)Ljava/nio/channels/FileChannel; > 15 @27 exception:16,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, getBlockOutputChannel()Ljava/nio/channels/FileChannel; > 1 @0 exception:2,
2 = new <Application,Ljava/io/RandomAccessFile>@0,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 7,
return 3,
26 = arraylength 2,
28 = binaryop(add) 26 , 27,
30 = binaryop(add) 28 , 29,
33 = new <Primordial,[B>@4129 ,
39 = arraylength 2,
46 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
48 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 46 @64 exception:47,
monitorenter 48,
49 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
51 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmIsWritable(Lcom/android/server/PersistentDataBlockService;)Z > 49 @71 exception:50,
conditional branch(ne, to iindex=-1) 51,13,
58 = getCaughtException ,
60 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @100 exception:59,
monitorexit 48,
return 14,","depth : 0
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	FileChannel v4 = PersistentDataBlockService.-$$Nest$mgetBlockOutputChannel(this.this$0);
	ByteBuffer v5 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v5 = new [B(32);
	ByteBuffer v6 = v5.put(v5);
	ByteBuffer v7 = v5.putInt(428873843);
	ByteBuffer v8 = v5.putInt(p1.length);
	ByteBuffer v9 = v5.put(p1);
	Buffer v10 = v5.flip();
	Object v11 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v12 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v13 = v4.write(v5);
	String v14 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v15 = Slog.e(v14, ""failed writing to the persistent data block"", caughtException);
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 2
public long doGetMaximumDataBlockSize(){
	long v1 = p0.getBlockDeviceSize();
	return phiInstruction;
}
-----
depth : 1
public FileChannel -$$Nest$mgetBlockOutputChannel(PersistentDataBlockService p1){
	FileChannel v1 = p1.getBlockOutputChannel();
	return v1;
}
-----
depth : 2
public FileChannel getBlockOutputChannel(){
	RandomAccessFile v0 = new RandomAccessFile(this.mDataBlockFile,""rw"");
	FileChannel v2 = v0.getChannel();
	return v2;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","write([B)I","2","3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 3,5 @6 exception:6,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 7 @11 exception:8,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
5 = binaryop(sub) 3 , 4,
7 = binaryop(sub) 5 , 6,
9 = binaryop(sub) 7 , 8,
11 = binaryop(sub) 9 , 10,
13 = binaryop(sub) 11 , 12,
15 = binaryop(lt) 13 , 14,
conditional branch(gt, to iindex=-1) 15,16,
goto (from iindex= 15 to iindex = 2),
17 = phi  13,14,
return 17,
return 3,
10 = arraylength 2,
11 = conversion(J) 10,
12 = binaryop(lt) 11 , 9,
conditional branch(le, to iindex=-1) 12,13,
15 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
17 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mgetBlockOutputChannel(Lcom/android/server/PersistentDataBlockService;)Ljava/nio/channels/FileChannel; > 15 @27 exception:16,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, getBlockOutputChannel()Ljava/nio/channels/FileChannel; > 1 @0 exception:2,
2 = new <Application,Ljava/io/RandomAccessFile>@0,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 7,
return 3,
26 = arraylength 2,
28 = binaryop(add) 26 , 27,
30 = binaryop(add) 28 , 29,
33 = new <Primordial,[B>@4129 ,
39 = arraylength 2,
46 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
48 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 46 @64 exception:47,
monitorenter 48,
49 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
51 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmIsWritable(Lcom/android/server/PersistentDataBlockService;)Z > 49 @71 exception:50,
conditional branch(ne, to iindex=-1) 51,13,
58 = getCaughtException ,
60 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @100 exception:59,
monitorexit 48,
return 14,","depth : 0
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	FileChannel v4 = PersistentDataBlockService.-$$Nest$mgetBlockOutputChannel(this.this$0);
	ByteBuffer v5 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v5 = new [B(32);
	ByteBuffer v6 = v5.put(v5);
	ByteBuffer v7 = v5.putInt(428873843);
	ByteBuffer v8 = v5.putInt(p1.length);
	ByteBuffer v9 = v5.put(p1);
	Buffer v10 = v5.flip();
	Object v11 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v12 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v13 = v4.write(v5);
	v4.force(1);
	String v15 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v16 = Slog.e(v15, ""failed writing to the persistent data block"", caughtException);
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 2
public long doGetMaximumDataBlockSize(){
	long v1 = p0.getBlockDeviceSize();
	return phiInstruction;
}
-----
depth : 1
public FileChannel -$$Nest$mgetBlockOutputChannel(PersistentDataBlockService p1){
	FileChannel v1 = p1.getBlockOutputChannel();
	return v1;
}
-----
depth : 2
public FileChannel getBlockOutputChannel(){
	RandomAccessFile v0 = new RandomAccessFile(this.mDataBlockFile,""rw"");
	FileChannel v2 = v0.getChannel();
	return v2;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","write([B)I","2","3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 3,5 @6 exception:6,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetMaximumDataBlockSize(Lcom/android/server/PersistentDataBlockService;)J > 7 @11 exception:8,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetMaximumDataBlockSize()J > 1 @0 exception:2,
5 = binaryop(sub) 3 , 4,
7 = binaryop(sub) 5 , 6,
9 = binaryop(sub) 7 , 8,
11 = binaryop(sub) 9 , 10,
13 = binaryop(sub) 11 , 12,
15 = binaryop(lt) 13 , 14,
conditional branch(gt, to iindex=-1) 15,16,
17 = phi  13,14,
return 17,
return 3,
10 = arraylength 2,
11 = conversion(J) 10,
12 = binaryop(lt) 11 , 9,
conditional branch(le, to iindex=-1) 12,13,
15 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
17 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mgetBlockOutputChannel(Lcom/android/server/PersistentDataBlockService;)Ljava/nio/channels/FileChannel; > 15 @27 exception:16,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, getBlockOutputChannel()Ljava/nio/channels/FileChannel; > 1 @0 exception:2,
2 = new <Application,Ljava/io/RandomAccessFile>@0,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 7,
return 3,
26 = arraylength 2,
28 = binaryop(add) 26 , 27,
30 = binaryop(add) 28 , 29,
33 = new <Primordial,[B>@4129 ,
39 = arraylength 2,
46 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
48 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 46 @64 exception:47,
monitorenter 48,
49 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
51 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmIsWritable(Lcom/android/server/PersistentDataBlockService;)Z > 49 @71 exception:50,
conditional branch(ne, to iindex=-1) 51,13,
58 = getCaughtException ,
60 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @100 exception:59,
monitorexit 48,
return 14,","depth : 0
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	FileChannel v4 = PersistentDataBlockService.-$$Nest$mgetBlockOutputChannel(this.this$0);
	ByteBuffer v5 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v5 = new [B(32);
	ByteBuffer v6 = v5.put(v5);
	ByteBuffer v7 = v5.putInt(428873843);
	ByteBuffer v8 = v5.putInt(p1.length);
	ByteBuffer v9 = v5.put(p1);
	Buffer v10 = v5.flip();
	Object v11 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v12 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v13 = v4.write(v5);
	String v14 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v15 = Slog.e(v14, ""failed writing to the persistent data block"", caughtException);
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 2
public long doGetMaximumDataBlockSize(){
	long v1 = p0.getBlockDeviceSize();
	return phiInstruction;
}
-----
depth : 1
public FileChannel -$$Nest$mgetBlockOutputChannel(PersistentDataBlockService p1){
	FileChannel v1 = p1.getBlockOutputChannel();
	return v1;
}
-----
depth : 2
public FileChannel getBlockOutputChannel(){
	RandomAccessFile v0 = new RandomAccessFile(this.mDataBlockFile,""rw"");
	FileChannel v2 = v0.getChannel();
	return v2;
}
-----
","NONE"

"Lcom/android/server/PersistentDataBlockService$1","getDataBlockSize()I","0","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
4 = new <Application,Ljava/io/DataInputStream>@4,
5 = new <Application,Ljava/io/FileInputStream>@6,
6 = new <Application,Ljava/io/File>@8,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @12 exception:8,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @65 exception:15,
return 3,","depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File;
	String v2 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v4 = Slog.e(v3, ""partition not available"");
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getDataBlockSize()I","1","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
4 = new <Application,Ljava/io/DataInputStream>@4,
5 = new <Application,Ljava/io/FileInputStream>@6,
6 = new <Application,Ljava/io/File>@8,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @12 exception:8,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 2,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @65 exception:15,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
return 3,","depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File;
	String v2 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v4 = Slog.e(v3, ""partition not available"");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 1
public String -$$Nest$fgetmDataBlockFile(PersistentDataBlockService p1){
	return this.mDataBlockFile;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getDataBlockSize()I","1","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
4 = new <Application,Ljava/io/DataInputStream>@4,
5 = new <Application,Ljava/io/FileInputStream>@6,
6 = new <Application,Ljava/io/File>@8,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @12 exception:8,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 2,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @65 exception:15,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
return 3,","depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File(v2);
	String v2 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v4 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v5 = Slog.e(v4, ""partition not available"");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 1
public String -$$Nest$fgetmDataBlockFile(PersistentDataBlockService p1){
	return this.mDataBlockFile;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getDataBlockSize()I","2","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
return,
4 = new <Application,Ljava/io/DataInputStream>@4,
5 = new <Application,Ljava/io/FileInputStream>@6,
6 = new <Application,Ljava/io/File>@8,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @12 exception:8,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @65 exception:15,
return 3,","depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File;
	String v2 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v4 = Slog.e(v3, ""partition not available"");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getDataBlockSize()I","2","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
return,
4 = new <Application,Ljava/io/DataInputStream>@4,
5 = new <Application,Ljava/io/FileInputStream>@6,
6 = new <Application,Ljava/io/File>@8,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @12 exception:8,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @65 exception:15,
return 3,","depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File(v2);
	String v2 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v4 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v5 = Slog.e(v4, ""partition not available"");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getDataBlockSize()I","2","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
return,
4 = new <Application,Ljava/io/DataInputStream>@4,
5 = new <Application,Ljava/io/FileInputStream>@6,
6 = new <Application,Ljava/io/File>@8,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @65 exception:15,
return 3,","depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File;
	String v2 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v3 = Slog.e(v2, ""partition not available"");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/PersistentDataBlockService$1","getOemUnlockEnabled()Z","0","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetOemUnlockEnabled(Lcom/android/server/PersistentDataBlockService;)Z > 4 @7 exception:5,
return 6,","depth : 0
public boolean getOemUnlockEnabled(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getOemUnlockEnabled()Z","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
return,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetOemUnlockEnabled(Lcom/android/server/PersistentDataBlockService;)Z > 4 @7 exception:5,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetOemUnlockEnabled()Z > 1 @0 exception:2,
return 3,
return 6,","depth : 0
public boolean getOemUnlockEnabled(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);
	return v2;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 1
public boolean -$$Nest$mdoGetOemUnlockEnabled(PersistentDataBlockService p1){
	boolean v1 = p1.doGetOemUnlockEnabled();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getOemUnlockEnabled()Z","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 11 to iindex = 9),
return,
return,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetOemUnlockEnabled(Lcom/android/server/PersistentDataBlockService;)Z > 4 @7 exception:5,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetOemUnlockEnabled()Z > 1 @0 exception:2,
3 = new <Application,Ljava/io/DataInputStream>@1,
4 = new <Application,Ljava/io/FileInputStream>@3,
5 = new <Application,Ljava/io/File>@5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
11 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 2,
return 3,
return 6,","depth : 0
public boolean getOemUnlockEnabled(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);
	return v2;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
depth : 1
public boolean -$$Nest$mdoGetOemUnlockEnabled(PersistentDataBlockService p1){
	boolean v1 = p1.doGetOemUnlockEnabled();
	return v1;
}
-----
depth : 2
public boolean doGetOemUnlockEnabled(){
	DataInputStream v0 = new DataInputStream;
	FileInputStream v0 = new FileInputStream;
	File v0 = new File;
	int v1 = Slog.e(this.TAG, ""partition not available"");
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getOemUnlockEnabled()Z","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 5,6,
return,
return,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mdoGetOemUnlockEnabled(Lcom/android/server/PersistentDataBlockService;)Z > 4 @7 exception:5,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, doGetOemUnlockEnabled()Z > 1 @0 exception:2,
3 = new <Application,Ljava/io/DataInputStream>@1,
4 = new <Application,Ljava/io/FileInputStream>@3,
5 = new <Application,Ljava/io/File>@5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
11 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 2,
return 3,
return 6,","depth : 0
public boolean getOemUnlockEnabled(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);
	return v2;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
depth : 1
public boolean -$$Nest$mdoGetOemUnlockEnabled(PersistentDataBlockService p1){
	boolean v1 = p1.doGetOemUnlockEnabled();
	return v1;
}
-----
depth : 2
public boolean doGetOemUnlockEnabled(){
	DataInputStream v0 = new DataInputStream;
	FileInputStream v0 = new FileInputStream;
	File v0 = new File;
	int v1 = Slog.e(this.TAG, ""partition not available"");
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/PersistentDataBlockService$1","getPersistentDataPackageName()Ljava/lang/String;","0","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmContext(Lcom/android/server/PersistentDataBlockService;)Landroid/content/Context; > 3 @5 exception:4,
return 8,","depth : 0
public String getPersistentDataPackageName(){
	p0.enforcePersistentDataBlockAccess();
	Context v2 = PersistentDataBlockService.-$$Nest$fgetmContext(this.this$0);
	String v3 = v2.getString(17040017);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getPersistentDataPackageName()Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmContext(Lcom/android/server/PersistentDataBlockService;)Landroid/content/Context; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mContext, <Application,Landroid/content/Context> > 1,
return 2,
return 8,","depth : 0
public String getPersistentDataPackageName(){
	p0.enforcePersistentDataBlockAccess();
	Context v2 = PersistentDataBlockService.-$$Nest$fgetmContext(this.this$0);
	String v3 = v2.getString(17040017);
	return v3;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 1
public Context -$$Nest$fgetmContext(PersistentDataBlockService p1){
	return this.mContext;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getPersistentDataPackageName()Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
return,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmContext(Lcom/android/server/PersistentDataBlockService;)Landroid/content/Context; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mContext, <Application,Landroid/content/Context> > 1,
return 2,
return 8,","depth : 0
public String getPersistentDataPackageName(){
	p0.enforcePersistentDataBlockAccess();
	Context v2 = PersistentDataBlockService.-$$Nest$fgetmContext(this.this$0);
	String v3 = v2.getString(17040017);
	return v3;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	return;
}
-----
depth : 1
public Context -$$Nest$fgetmContext(PersistentDataBlockService p1){
	return this.mContext;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getPersistentDataPackageName()Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
return,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmContext(Lcom/android/server/PersistentDataBlockService;)Landroid/content/Context; > 3 @5 exception:4,
return 8,","depth : 0
public String getPersistentDataPackageName(){
	p0.enforcePersistentDataBlockAccess();
	Context v2 = PersistentDataBlockService.-$$Nest$fgetmContext(this.this$0);
	String v3 = v2.getString(17040017);
	return v3;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/PersistentDataBlockService$1","wipe()V","0","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 4 @7 exception:5,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @14 exception:8,
11 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mnativeWipe(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)I > 7,9 @18 exception:10,
conditional branch(ge, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fputmIsWritable(Lcom/android/server/PersistentDataBlockService;Z)V > 13,12 @37 exception:14,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @40 exception:15,
monitorexit 6,
return,","depth : 0
public void wipe(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	Object v2 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	int v4 = PersistentDataBlockService.-$$Nest$mnativeWipe(this.this$0, v3);
	PersistentDataBlockService.-$$Nest$fputmIsWritable(this.this$0, 0);
	String v6 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v7 = Slog.i(v6, ""persistent partition now wiped and unwritable"");
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","wipe()V","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 4 @7 exception:5,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @14 exception:8,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 2,
11 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mnativeWipe(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)I > 7,9 @18 exception:10,
4 = invokespecial < Application, Lcom/android/server/PersistentDataBlockService, nativeWipe(Ljava/lang/String;)I > 1,2 @0 exception:3,
return 4,
conditional branch(ge, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fputmIsWritable(Lcom/android/server/PersistentDataBlockService;Z)V > 13,12 @37 exception:14,
putfield 1.< Application, Lcom/android/server/PersistentDataBlockService, mIsWritable, <Primordial,Z> > = 2,
return,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @40 exception:15,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
monitorexit 6,
return,","depth : 0
public void wipe(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	Object v2 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	int v4 = PersistentDataBlockService.-$$Nest$mnativeWipe(this.this$0, v3);
	PersistentDataBlockService.-$$Nest$fputmIsWritable(this.this$0, 0);
	String v6 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v7 = Slog.i(v6, ""persistent partition now wiped and unwritable"");
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 1
public Object -$$Nest$fgetmLock(PersistentDataBlockService p1){
	return this.mLock;
}
-----
depth : 1
public String -$$Nest$fgetmDataBlockFile(PersistentDataBlockService p1){
	return this.mDataBlockFile;
}
-----
depth : 1
public int -$$Nest$mnativeWipe(PersistentDataBlockService p1, String p2){
	return v1;
}
-----
depth : 1
public void -$$Nest$fputmIsWritable(PersistentDataBlockService p1, boolean p2){
	this.mIsWritable = p2;
	return;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","wipe()V","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 4 @7 exception:5,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @14 exception:8,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 2,
11 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mnativeWipe(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)I > 7,9 @18 exception:10,
4 = invokespecial < Application, Lcom/android/server/PersistentDataBlockService, nativeWipe(Ljava/lang/String;)I > 1,2 @0 exception:3,
return 4,
conditional branch(ge, to iindex=-1) 11,12,
21 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @24 exception:20,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
goto (from iindex= 16 to iindex = 17),
monitorexit 6,
return,","depth : 0
public void wipe(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	Object v2 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	int v4 = PersistentDataBlockService.-$$Nest$mnativeWipe(this.this$0, v3);
	String v5 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v6 = Slog.e(v5, ""failed to wipe persistent partition"");
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 1
public Object -$$Nest$fgetmLock(PersistentDataBlockService p1){
	return this.mLock;
}
-----
depth : 1
public String -$$Nest$fgetmDataBlockFile(PersistentDataBlockService p1){
	return this.mDataBlockFile;
}
-----
depth : 1
public int -$$Nest$mnativeWipe(PersistentDataBlockService p1, String p2){
	return v1;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","wipe()V","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
return,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 4 @7 exception:5,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @14 exception:8,
11 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mnativeWipe(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)I > 7,9 @18 exception:10,
conditional branch(ge, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fputmIsWritable(Lcom/android/server/PersistentDataBlockService;Z)V > 13,12 @37 exception:14,
16 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @40 exception:15,
monitorexit 6,
return,","depth : 0
public void wipe(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	Object v2 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	int v4 = PersistentDataBlockService.-$$Nest$mnativeWipe(this.this$0, v3);
	PersistentDataBlockService.-$$Nest$fputmIsWritable(this.this$0, 0);
	String v6 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v7 = Slog.i(v6, ""persistent partition now wiped and unwritable"");
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockWritePermission(){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","wipe()V","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockWritePermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockWritePermission()V > 1 @0 exception:2,
return,
return,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
6 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmLock(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/Object; > 4 @7 exception:5,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
9 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 7 @14 exception:8,
11 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$mnativeWipe(Lcom/android/server/PersistentDataBlockService;Ljava/lang/String;)I > 7,9 @18 exception:10,
conditional branch(ge, to iindex=-1) 11,12,
21 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @24 exception:20,
goto (from iindex= 16 to iindex = 17),
monitorexit 6,
return,","depth : 0
public void wipe(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockWritePermission(this.this$0);
	Object v2 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	int v4 = PersistentDataBlockService.-$$Nest$mnativeWipe(this.this$0, v3);
	String v5 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v6 = Slog.e(v5, ""failed to wipe persistent partition"");
	return;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockWritePermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockWritePermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockWritePermission(){
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/PersistentDataBlockService$1","hasFrpCredentialHandle()Z","0","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmInternalService(Lcom/android/server/PersistentDataBlockService;)Lcom/android/server/PersistentDataBlockManagerInternal; > 3 @5 exception:4,
conditional branch(eq, to iindex=-1) 7,20,
goto (from iindex= 8 to iindex = 2),
22 = phi  21,20,
return 22,","depth : 0
public boolean hasFrpCredentialHandle(){
	p0.enforcePersistentDataBlockAccess();
	PersistentDataBlockManagerInternal v2 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
	byte[] v3 = v2.getFrpCredentialHandle();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","hasFrpCredentialHandle()Z","1","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmInternalService(Lcom/android/server/PersistentDataBlockService;)Lcom/android/server/PersistentDataBlockManagerInternal; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mInternalService, <Application,Lcom/android/server/PersistentDataBlockManagerInternal> > 1,
return 2,
conditional branch(eq, to iindex=-1) 7,20,
goto (from iindex= 8 to iindex = 2),
22 = phi  21,20,
return 22,","depth : 0
public boolean hasFrpCredentialHandle(){
	p0.enforcePersistentDataBlockAccess();
	PersistentDataBlockManagerInternal v2 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
	byte[] v3 = v2.getFrpCredentialHandle();
	return phiInstruction;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 1
public PersistentDataBlockManagerInternal -$$Nest$fgetmInternalService(PersistentDataBlockService p1){
	return this.mInternalService;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","hasFrpCredentialHandle()Z","1","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmInternalService(Lcom/android/server/PersistentDataBlockService;)Lcom/android/server/PersistentDataBlockManagerInternal; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mInternalService, <Application,Lcom/android/server/PersistentDataBlockManagerInternal> > 1,
return 2,
conditional branch(eq, to iindex=-1) 7,20,
22 = phi  21,20,
return 22,","depth : 0
public boolean hasFrpCredentialHandle(){
	p0.enforcePersistentDataBlockAccess();
	PersistentDataBlockManagerInternal v2 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
	byte[] v3 = v2.getFrpCredentialHandle();
	return phiInstruction;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 1
public PersistentDataBlockManagerInternal -$$Nest$fgetmInternalService(PersistentDataBlockService p1){
	return this.mInternalService;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","hasFrpCredentialHandle()Z","2","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
return,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmInternalService(Lcom/android/server/PersistentDataBlockService;)Lcom/android/server/PersistentDataBlockManagerInternal; > 3 @5 exception:4,
conditional branch(eq, to iindex=-1) 7,20,
goto (from iindex= 8 to iindex = 2),
22 = phi  21,20,
return 22,","depth : 0
public boolean hasFrpCredentialHandle(){
	p0.enforcePersistentDataBlockAccess();
	PersistentDataBlockManagerInternal v2 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
	byte[] v3 = v2.getFrpCredentialHandle();
	return phiInstruction;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","hasFrpCredentialHandle()Z","2","invokevirtual < Application, Lcom/android/server/PersistentDataBlockService$1, enforcePersistentDataBlockAccess()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 9,11 @20 exception:12,
return,
return,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
5 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmInternalService(Lcom/android/server/PersistentDataBlockService;)Lcom/android/server/PersistentDataBlockManagerInternal; > 3 @5 exception:4,
conditional branch(eq, to iindex=-1) 7,20,
22 = phi  21,20,
return 22,","depth : 0
public boolean hasFrpCredentialHandle(){
	p0.enforcePersistentDataBlockAccess();
	PersistentDataBlockManagerInternal v2 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
	byte[] v3 = v2.getFrpCredentialHandle();
	return phiInstruction;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/PersistentDataBlockService$1","read()[B","0","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceChecksumValidity(Lcom/android/server/PersistentDataBlockService;)Z > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/io/DataInputStream>@22,
11 = new <Application,Ljava/io/FileInputStream>@24,
12 = new <Application,Ljava/io/File>@26,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
15 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 13 @30 exception:14,
22 = getCaughtException ,
24 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @189 exception:23,
return 9,","depth : 0
public byte[] read(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	boolean v3 = PersistentDataBlockService.-$$Nest$menforceChecksumValidity(this.this$0);
	DataInputStream v3 = new DataInputStream;
	FileInputStream v3 = new FileInputStream;
	File v3 = new File;
	String v4 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v5 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v6 = Slog.e(v5, ""partition not available?"", caughtException);
	return 0;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","read()[B","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceChecksumValidity(Lcom/android/server/PersistentDataBlockService;)Z > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceChecksumValidity()Z > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/io/DataInputStream>@22,
11 = new <Application,Ljava/io/FileInputStream>@24,
12 = new <Application,Ljava/io/File>@26,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
15 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 13 @30 exception:14,
2 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mDataBlockFile, <Application,Ljava/lang/String> > 1,
return 2,
22 = getCaughtException ,
24 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @189 exception:23,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
return 9,","depth : 0
public byte[] read(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	boolean v3 = PersistentDataBlockService.-$$Nest$menforceChecksumValidity(this.this$0);
	DataInputStream v3 = new DataInputStream;
	FileInputStream v3 = new FileInputStream;
	File v3 = new File;
	String v4 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v5 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v6 = Slog.e(v5, ""partition not available?"", caughtException);
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 1
public boolean -$$Nest$menforceChecksumValidity(PersistentDataBlockService p1){
	boolean v1 = p1.enforceChecksumValidity();
	return v1;
}
-----
depth : 1
public String -$$Nest$fgetmDataBlockFile(PersistentDataBlockService p1){
	return this.mDataBlockFile;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","read()[B","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceChecksumValidity(Lcom/android/server/PersistentDataBlockService;)Z > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceChecksumValidity()Z > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/io/DataInputStream>@22,
11 = new <Application,Ljava/io/FileInputStream>@24,
12 = new <Application,Ljava/io/File>@26,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
22 = getCaughtException ,
24 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @189 exception:23,
1 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
return 1,
return 9,","depth : 0
public byte[] read(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	boolean v3 = PersistentDataBlockService.-$$Nest$menforceChecksumValidity(this.this$0);
	DataInputStream v3 = new DataInputStream;
	FileInputStream v3 = new FileInputStream;
	File v3 = new File;
	String v4 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v5 = Slog.e(v4, ""partition not available?"", caughtException);
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 1
public boolean -$$Nest$menforceChecksumValidity(PersistentDataBlockService p1){
	boolean v1 = p1.enforceChecksumValidity();
	return v1;
}
-----
depth : 1
public String -$$Nest$sfgetTAG(){
	return this.TAG;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","read()[B","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceChecksumValidity(Lcom/android/server/PersistentDataBlockService;)Z > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceChecksumValidity()Z > 1 @0 exception:2,
3 = new <Primordial,[B>@22 ,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 10 to iindex = 4),
14 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
monitorexit 4,
return 7,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/io/DataInputStream>@22,
11 = new <Application,Ljava/io/FileInputStream>@24,
12 = new <Application,Ljava/io/File>@26,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
15 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$fgetmDataBlockFile(Lcom/android/server/PersistentDataBlockService;)Ljava/lang/String; > 13 @30 exception:14,
22 = getCaughtException ,
24 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @189 exception:23,
return 9,","depth : 0
public byte[] read(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	boolean v3 = PersistentDataBlockService.-$$Nest$menforceChecksumValidity(this.this$0);
	DataInputStream v3 = new DataInputStream;
	FileInputStream v3 = new FileInputStream;
	File v3 = new File;
	String v4 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v5 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v6 = Slog.e(v5, ""partition not available?"", caughtException);
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public boolean -$$Nest$menforceChecksumValidity(PersistentDataBlockService p1){
	boolean v1 = p1.enforceChecksumValidity();
	return v1;
}
-----
depth : 2
public boolean enforceChecksumValidity(){
	[B v0 = new [B(32);
	byte[] v1 = p0.computeDigestLocked(v0);
	boolean v2 = Arrays.equals(v0, v1);
	int v3 = Slog.i(this.TAG, ""Formatting FRP partition..."");
	p0.formatPartitionLocked(0);
	return 0;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","read()[B","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceChecksumValidity(Lcom/android/server/PersistentDataBlockService;)Z > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceChecksumValidity()Z > 1 @0 exception:2,
3 = new <Primordial,[B>@22 ,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 10 to iindex = 4),
14 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
monitorexit 4,
return 7,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/io/DataInputStream>@22,
11 = new <Application,Ljava/io/FileInputStream>@24,
12 = new <Application,Ljava/io/File>@26,
13 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
22 = getCaughtException ,
24 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @189 exception:23,
return 9,","depth : 0
public byte[] read(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	boolean v3 = PersistentDataBlockService.-$$Nest$menforceChecksumValidity(this.this$0);
	DataInputStream v3 = new DataInputStream;
	FileInputStream v3 = new FileInputStream;
	File v3 = new File;
	String v4 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v5 = Slog.e(v4, ""partition not available?"", caughtException);
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public boolean -$$Nest$menforceChecksumValidity(PersistentDataBlockService p1){
	boolean v1 = p1.enforceChecksumValidity();
	return v1;
}
-----
depth : 2
public boolean enforceChecksumValidity(){
	[B v0 = new [B(32);
	byte[] v1 = p0.computeDigestLocked(v0);
	boolean v2 = Arrays.equals(v0, v1);
	int v3 = Slog.i(this.TAG, ""Formatting FRP partition..."");
	p0.formatPartitionLocked(0);
	return 0;
}
-----
","NONE"
"Lcom/android/server/PersistentDataBlockService$1","read()[B","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceUid(Lcom/android/server/PersistentDataBlockService;I)V > 2,4 @6 exception:5,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceUid(I)V > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mAllowedUid, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 2,3,
return,
return,
6 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
8 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceChecksumValidity(Lcom/android/server/PersistentDataBlockService;)Z > 6 @11 exception:7,
3 = invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceChecksumValidity()Z > 1 @0 exception:2,
3 = new <Primordial,[B>@22 ,
4 = getfield < Application, Lcom/android/server/PersistentDataBlockService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 10 to iindex = 4),
14 = getstatic < Application, Lcom/android/server/PersistentDataBlockService, TAG, <Application,Ljava/lang/String> >,
monitorexit 4,
return 7,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/io/DataInputStream>@22,
11 = new <Application,Ljava/io/FileInputStream>@24,
12 = new <Application,Ljava/io/File>@26,
22 = getCaughtException ,
24 = invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$sfgetTAG()Ljava/lang/String; > @189 exception:23,
return 9,","depth : 0
public byte[] read(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	boolean v3 = PersistentDataBlockService.-$$Nest$menforceChecksumValidity(this.this$0);
	DataInputStream v3 = new DataInputStream;
	FileInputStream v3 = new FileInputStream;
	File v3 = new File;
	String v4 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v5 = Slog.e(v4, ""partition not available?"", caughtException);
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public boolean -$$Nest$menforceChecksumValidity(PersistentDataBlockService p1){
	boolean v1 = p1.enforceChecksumValidity();
	return v1;
}
-----
depth : 2
public boolean enforceChecksumValidity(){
	[B v0 = new [B(32);
	byte[] v1 = p0.computeDigestLocked(v0);
	boolean v2 = Arrays.equals(v0, v1);
	int v3 = Slog.i(this.TAG, ""Formatting FRP partition..."");
	p0.formatPartitionLocked(0);
	return 0;
}
-----
","NONE"

"Lcom/android/server/PersistentDataBlockService$1","getFlashLockState()I","0","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 15,12,
return 17,","depth : 0
public int getFlashLockState(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	boolean v5 = v2.equals(""1"");
	return -1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getFlashLockState()I","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
return,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 15,12,
return 17,","depth : 0
public int getFlashLockState(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	boolean v5 = v2.equals(""1"");
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getFlashLockState()I","1","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
return,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 15,12,
return 16,","depth : 0
public int getFlashLockState(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	boolean v5 = v2.equals(""1"");
	return 1;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getFlashLockState()I","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 11 to iindex = 9),
return,
return,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 15,12,
return 17,","depth : 0
public int getFlashLockState(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	boolean v5 = v2.equals(""1"");
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getFlashLockState()I","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 11 to iindex = 9),
return,
return,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 15,12,
return 16,","depth : 0
public int getFlashLockState(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	boolean v5 = v2.equals(""1"");
	return 1;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/PersistentDataBlockService$1","getFlashLockState()I","2","2 = getfield < Application, Lcom/android/server/PersistentDataBlockService$1, this$0, <Application,Lcom/android/server/PersistentDataBlockService> > 1,
invokestatic < Application, Lcom/android/server/PersistentDataBlockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/PersistentDataBlockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/PersistentDataBlockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 5,6,
return,
return,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 15,12,
return 17,","depth : 0
public int getFlashLockState(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	boolean v5 = v2.equals(""1"");
	return -1;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
","SYS_OR_SIG"

