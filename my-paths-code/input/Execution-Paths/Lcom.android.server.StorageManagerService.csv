"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/StorageManagerService","destroyUserStorage(Ljava/lang/String;II)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
10 = getCaughtException ,
return,","depth : 0
public void destroyUserStorage(String p1, int p2, int p3){
	int v2 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","destroyUserStorage(Ljava/lang/String;II)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
10 = getCaughtException ,
return,","depth : 0
public void destroyUserStorage(String p1, int p2, int p3){
	this.mVold.destroyUserStorage(p1, p2, p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","destroyUserStorage(Ljava/lang/String;II)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
goto (from iindex= 4 to iindex = 7),
return,","depth : 0
public void destroyUserStorage(String p1, int p2, int p3){
	this.mVold.destroyUserStorage(p1, p2, p3);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","setVolumeNickname(Ljava/lang/String;Ljava/lang/String;)V","0","8 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
12 = checkcast <Application,Landroid/os/storage/VolumeRecord>11 <Application,Landroid/os/storage/VolumeRecord>,
putfield 12.< Application, Landroid/os/storage/VolumeRecord, nickname, <Application,Ljava/lang/String> > = 3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeRecordChanged(Lcom/android/server/StorageManagerService$Callbacks;Landroid/os/storage/VolumeRecord;)V > 13,12 @23 exception:14,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @26 exception:15,
monitorexit 8,
return,","depth : 0
public void setVolumeNickname(String p1, String p2){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.get(p1);
	VolumeRecord.nickname = p2;
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);
	p0.writeSettingsLocked();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setVolumeNickname(Ljava/lang/String;Ljava/lang/String;)V","1","8 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
12 = checkcast <Application,Landroid/os/storage/VolumeRecord>11 <Application,Landroid/os/storage/VolumeRecord>,
putfield 12.< Application, Landroid/os/storage/VolumeRecord, nickname, <Application,Ljava/lang/String> > = 3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeRecordChanged(Lcom/android/server/StorageManagerService$Callbacks;Landroid/os/storage/VolumeRecord;)V > 13,12 @23 exception:14,
return,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @26 exception:15,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
monitorexit 8,
return,","depth : 0
public void setVolumeNickname(String p1, String p2){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.get(p1);
	VolumeRecord.nickname = p2;
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);
	p0.writeSettingsLocked();
	return;
}
-----
depth : 1
public void -$$Nest$mnotifyVolumeRecordChanged(StorageManagerService$Callbacks p1, VolumeRecord p2){
	p1.notifyVolumeRecordChanged(p2);
	return;
}
-----
depth : 1
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","abortChanges(Ljava/lang/String;Z)V","0","10 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void abortChanges(String p1, boolean p2){
	this.mVold.abortChanges(p1, p2);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getVolumeRecords(I)[Landroid/os/storage/VolumeRecord;","0","3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
7 = new <Application,[Landroid/os/storage/VolumeRecord>@96 ,
18 = phi  17,8,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 18,11,
monitorexit 3,
return 7,","depth : 0
public VolumeRecord getVolumeRecords(int p1){
	int v1 = this.mRecords.size();
	VolumeRecord v1 = new VolumeRecord(v1);
	int v2 = this.mRecords.size();
	return v1;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","mountObb(Ljava/lang/String;Ljava/lang/String;Landroid/os/storage/IObbActionListener;ILandroid/content/res/ObbInfo;)V","0","21 = new <Application,Lcom/android/server/StorageManagerService$ObbState>@27,
24 = new <Application,Lcom/android/server/StorageManagerService$MountObbAction>@40,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mObbActionHandler, <Application,Lcom/android/server/StorageManagerService$ObbActionHandler> > 1,
return,","depth : 0
public void mountObb(String p1, String p2, IObbActionListener p3, int p4, ObbInfo p5){
	Object v1 = Objects.requireNonNull(p1, ""rawPath cannot be null"");
	Object v2 = Objects.requireNonNull(p2, ""canonicalPath cannot be null"");
	Object v3 = Objects.requireNonNull(p3, ""token cannot be null"");
	Object v4 = Objects.requireNonNull(p5, ""obbIfno cannot be null"");
	int v5 = Binder.getCallingUid();
	StorageManagerService$ObbState v5 = new StorageManagerService$ObbState(p0,p1,p2,v5,p3,p4,0);
	StorageManagerService$MountObbAction v6 = new StorageManagerService$MountObbAction(p0,v5,v5,p5);
	Message v8 = this.mObbActionHandler.obtainMessage(1, v6);
	boolean v9 = this.mObbActionHandler.sendMessage(v8);
	return;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","createUserKey(IIZ)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
10 = getCaughtException ,
return,","depth : 0
public void createUserKey(int p1, int p2, boolean p3){
	int v2 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","createUserKey(IIZ)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
10 = getCaughtException ,
return,","depth : 0
public void createUserKey(int p1, int p2, boolean p3){
	this.mVold.createUserKey(p1, p2, p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","createUserKey(IIZ)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
goto (from iindex= 4 to iindex = 7),
return,","depth : 0
public void createUserKey(int p1, int p2, boolean p3){
	this.mVold.createUserKey(p1, p2, p3);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","runIdleMaintenance()V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, runIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
return,","depth : 0
public void runIdleMaintenance(){
	p0.runIdleMaint(0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","runIdleMaintenance()V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, runIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, needsCheckpoint()Z > 1 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/StorageManagerService, supportsBlockCheckpoint()Z > 1 @13 exception:9,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 9 to iindex = 7),
17 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
18 = getfield < Application, Lcom/android/server/StorageManagerService, mNeedGC, <Primordial,Z> > 1,
19 = new <Application,Lcom/android/server/StorageManagerService$10>@30,
26 = getCaughtException ,
return,
return,","depth : 0
public void runIdleMaintenance(){
	p0.runIdleMaint(0);
	return;
}
-----
depth : 1
public void runIdleMaint(Runnable p1){
	boolean v2 = p0.needsCheckpoint();
	boolean v3 = p0.supportsBlockCheckpoint();
	StorageManagerService$10 v3 = new StorageManagerService$10(p0,p1);
	int v5 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","runIdleMaintenance()V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, runIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, needsCheckpoint()Z > 1 @7 exception:6,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/StorageManagerService, supportsBlockCheckpoint()Z > 1 @13 exception:9,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 9 to iindex = 7),
17 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
18 = getfield < Application, Lcom/android/server/StorageManagerService, mNeedGC, <Primordial,Z> > 1,
19 = new <Application,Lcom/android/server/StorageManagerService$10>@30,
26 = getCaughtException ,
return,
return,","depth : 0
public void runIdleMaintenance(){
	p0.runIdleMaint(0);
	return;
}
-----
depth : 1
public void runIdleMaint(Runnable p1){
	boolean v2 = p0.needsCheckpoint();
	boolean v3 = p0.supportsBlockCheckpoint();
	StorageManagerService$10 v3 = new StorageManagerService$10(p0,p1);
	int v5 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 2
public boolean needsCheckpoint(){
	boolean v2 = this.mVold.needsCheckpoint();
	return v2;
}
-----
depth : 2
public boolean supportsBlockCheckpoint(){
	boolean v2 = this.mVold.supportsBlockCheckpoint();
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","runIdleMaintenance()V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, runIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, needsCheckpoint()Z > 1 @7 exception:6,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/StorageManagerService, supportsBlockCheckpoint()Z > 1 @13 exception:9,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 9 to iindex = 7),
17 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
18 = getfield < Application, Lcom/android/server/StorageManagerService, mNeedGC, <Primordial,Z> > 1,
19 = new <Application,Lcom/android/server/StorageManagerService$10>@30,
26 = getCaughtException ,
return,
return,","depth : 0
public void runIdleMaintenance(){
	p0.runIdleMaint(0);
	return;
}
-----
depth : 1
public void runIdleMaint(Runnable p1){
	boolean v2 = p0.needsCheckpoint();
	boolean v3 = p0.supportsBlockCheckpoint();
	StorageManagerService$10 v3 = new StorageManagerService$10(p0,p1);
	this.mVold.runIdleMaint(this.mNeedGC, v3);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 2
public boolean needsCheckpoint(){
	boolean v2 = this.mVold.needsCheckpoint();
	return v2;
}
-----
depth : 2
public boolean supportsBlockCheckpoint(){
	boolean v2 = this.mVold.supportsBlockCheckpoint();
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","shutdown(Landroid/os/storage/IStorageShutdownObserver;)V","0","9 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 12 @19 exception:13,
return,","depth : 0
public void shutdown(IStorageShutdownObserver p1){
	int v2 = Slog.i(""StorageManagerService"", ""Shutting down"");
	Message v3 = this.mHandler.obtainMessage(3, p1);
	v3.sendToTarget();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getManageSpaceActivityIntent(Ljava/lang/String;I)Landroid/app/PendingIntent;","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 9,10,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
22 = arrayload 9[10],
24 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, hasExternalStorageAccess(ILjava/lang/String;)Z > 21,6,22 @19 exception:23,
conditional branch(eq, to iindex=-1) 24,10,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 49,10,
61 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
conditional branch(ne, to iindex=-1) 61,10,
64 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
67 = new <Application,Landroid/content/Intent>@79,
70 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
72 = invokevirtual < Application, Landroid/content/Intent, setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent; > 67,2,70 @88 exception:71,
75 = invokevirtual < Application, Landroid/content/Intent, setFlags(I)Landroid/content/Intent; > 67,73 @93 exception:74,
77 = invokestatic < Application, Landroid/app/ActivityOptions, makeBasic()Landroid/app/ActivityOptions; > @96 exception:76,
invokevirtual < Application, Landroid/app/ActivityOptions, setIgnorePendingIntentCreatorForegroundState(Z)V > 77,78 @101 exception:79,
82 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 77 @106 exception:81,
return 84,","depth : 0
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	boolean v3 = this.mStorageManagerInternal.hasExternalStorageAccess(v1, v2[0]);
	int v4 = UserHandle.getUserId(v1);
	ApplicationInfo v5 = this.mIPackageManager.getApplicationInfo(p1, 0, v4);
	long v6 = Binder.clearCallingIdentity();
	Context v7 = this.mContext.createPackageContext(p1, 0);
	Intent v7 = new Intent(""android.intent.action.VIEW"");
	Intent v9 = v7.setClassName(p1, ApplicationInfo.manageSpaceActivityName);
	Intent v10 = v7.setFlags(268435456);
	ActivityOptions v11 = ActivityOptions.makeBasic();
	v11.setIgnorePendingIntentCreatorForegroundState(1);
	Bundle v13 = v11.toBundle();
	PendingIntent v14 = PendingIntent.getActivity(v7, p2, v7, 1409286144, v13);
	Binder.restoreCallingIdentity(v6);
	return v14;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getManageSpaceActivityIntent(Ljava/lang/String;I)Landroid/app/PendingIntent;","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 9,10,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
22 = arrayload 9[10],
24 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, hasExternalStorageAccess(ILjava/lang/String;)Z > 21,6,22 @19 exception:23,
5 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
7 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$fgetmIAppOpsService(Lcom/android/server/StorageManagerService;)Lcom/android/internal/app/IAppOpsService; > 5 @3 exception:6,
conditional branch(ne, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,4,
13 = phi  4,12,
return 13,
conditional branch(eq, to iindex=-1) 24,10,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 49,10,
61 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
conditional branch(ne, to iindex=-1) 61,10,
64 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
67 = new <Application,Landroid/content/Intent>@79,
70 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
72 = invokevirtual < Application, Landroid/content/Intent, setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent; > 67,2,70 @88 exception:71,
75 = invokevirtual < Application, Landroid/content/Intent, setFlags(I)Landroid/content/Intent; > 67,73 @93 exception:74,
77 = invokestatic < Application, Landroid/app/ActivityOptions, makeBasic()Landroid/app/ActivityOptions; > @96 exception:76,
1 = new <Application,Landroid/app/ActivityOptions>@0,
return 1,
invokevirtual < Application, Landroid/app/ActivityOptions, setIgnorePendingIntentCreatorForegroundState(Z)V > 77,78 @101 exception:79,
putfield 1.< Application, Landroid/app/ActivityOptions, mIgnorePendingIntentCreatorForegroundState, <Primordial,Z> > = 2,
return,
82 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 77 @106 exception:81,
return 84,","depth : 0
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	boolean v3 = this.mStorageManagerInternal.hasExternalStorageAccess(v1, v2[0]);
	int v4 = UserHandle.getUserId(v1);
	ApplicationInfo v5 = this.mIPackageManager.getApplicationInfo(p1, 0, v4);
	long v6 = Binder.clearCallingIdentity();
	Context v7 = this.mContext.createPackageContext(p1, 0);
	Intent v7 = new Intent(""android.intent.action.VIEW"");
	Intent v9 = v7.setClassName(p1, ApplicationInfo.manageSpaceActivityName);
	Intent v10 = v7.setFlags(268435456);
	ActivityOptions v11 = ActivityOptions.makeBasic();
	v11.setIgnorePendingIntentCreatorForegroundState(1);
	Bundle v13 = v11.toBundle();
	PendingIntent v14 = PendingIntent.getActivity(v7, p2, v7, 1409286144, v13);
	Binder.restoreCallingIdentity(v6);
	return v14;
}
-----
depth : 1
public boolean hasExternalStorageAccess(int p1, String p2){
	IAppOpsService v1 = StorageManagerService.-$$Nest$fgetmIAppOpsService(this.this$0);
	int v2 = v1.checkOperation(92, p1, p2);
	return phiInstruction;
}
-----
depth : 1
public ActivityOptions makeBasic(){
	ActivityOptions v0 = new ActivityOptions();
	return v0;
}
-----
depth : 1
public void setIgnorePendingIntentCreatorForegroundState(boolean p1){
	this.mIgnorePendingIntentCreatorForegroundState = p1;
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getManageSpaceActivityIntent(Ljava/lang/String;I)Landroid/app/PendingIntent;","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 9,10,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
22 = arrayload 9[10],
24 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, hasExternalStorageAccess(ILjava/lang/String;)Z > 21,6,22 @19 exception:23,
5 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
7 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$fgetmIAppOpsService(Lcom/android/server/StorageManagerService;)Lcom/android/internal/app/IAppOpsService; > 5 @3 exception:6,
conditional branch(ne, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,4,
13 = phi  4,12,
return 13,
conditional branch(eq, to iindex=-1) 24,10,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 49,10,
61 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
conditional branch(ne, to iindex=-1) 61,10,
106 = new <Application,Ljava/lang/StringBuilder>@47,
return 10,","depth : 0
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	boolean v3 = this.mStorageManagerInternal.hasExternalStorageAccess(v1, v2[0]);
	int v4 = UserHandle.getUserId(v1);
	ApplicationInfo v5 = this.mIPackageManager.getApplicationInfo(p1, 0, v4);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(p1);
	StringBuilder v8 = v5.append("" doesn't have a manageSpaceActivity"");
	String v9 = v5.toString();
	int v10 = Log.i(""StorageManagerService"", v9);
	return 0;
}
-----
depth : 1
public boolean hasExternalStorageAccess(int p1, String p2){
	IAppOpsService v1 = StorageManagerService.-$$Nest$fgetmIAppOpsService(this.this$0);
	int v2 = v1.checkOperation(92, p1, p2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getManageSpaceActivityIntent(Ljava/lang/String;I)Landroid/app/PendingIntent;","2","7 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 9,10,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
22 = arrayload 9[10],
24 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, hasExternalStorageAccess(ILjava/lang/String;)Z > 21,6,22 @19 exception:23,
5 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
7 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$fgetmIAppOpsService(Lcom/android/server/StorageManagerService;)Lcom/android/internal/app/IAppOpsService; > 5 @3 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mIAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
return 2,
conditional branch(ne, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,4,
13 = phi  4,12,
return 13,
conditional branch(eq, to iindex=-1) 24,10,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 49,10,
61 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
conditional branch(ne, to iindex=-1) 61,10,
64 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
67 = new <Application,Landroid/content/Intent>@79,
70 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
72 = invokevirtual < Application, Landroid/content/Intent, setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent; > 67,2,70 @88 exception:71,
75 = invokevirtual < Application, Landroid/content/Intent, setFlags(I)Landroid/content/Intent; > 67,73 @93 exception:74,
77 = invokestatic < Application, Landroid/app/ActivityOptions, makeBasic()Landroid/app/ActivityOptions; > @96 exception:76,
invokevirtual < Application, Landroid/app/ActivityOptions, setIgnorePendingIntentCreatorForegroundState(Z)V > 77,78 @101 exception:79,
82 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 77 @106 exception:81,
return 84,","depth : 0
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	boolean v3 = this.mStorageManagerInternal.hasExternalStorageAccess(v1, v2[0]);
	int v4 = UserHandle.getUserId(v1);
	ApplicationInfo v5 = this.mIPackageManager.getApplicationInfo(p1, 0, v4);
	long v6 = Binder.clearCallingIdentity();
	Context v7 = this.mContext.createPackageContext(p1, 0);
	Intent v7 = new Intent(""android.intent.action.VIEW"");
	Intent v9 = v7.setClassName(p1, ApplicationInfo.manageSpaceActivityName);
	Intent v10 = v7.setFlags(268435456);
	ActivityOptions v11 = ActivityOptions.makeBasic();
	v11.setIgnorePendingIntentCreatorForegroundState(1);
	Bundle v13 = v11.toBundle();
	PendingIntent v14 = PendingIntent.getActivity(v7, p2, v7, 1409286144, v13);
	Binder.restoreCallingIdentity(v6);
	return v14;
}
-----
depth : 1
public boolean hasExternalStorageAccess(int p1, String p2){
	IAppOpsService v1 = StorageManagerService.-$$Nest$fgetmIAppOpsService(this.this$0);
	int v2 = v1.checkOperation(92, p1, p2);
	return phiInstruction;
}
-----
depth : 2
public IAppOpsService -$$Nest$fgetmIAppOpsService(StorageManagerService p1){
	return this.mIAppOpsService;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getManageSpaceActivityIntent(Ljava/lang/String;I)Landroid/app/PendingIntent;","2","7 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 9,10,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
22 = arrayload 9[10],
24 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, hasExternalStorageAccess(ILjava/lang/String;)Z > 21,6,22 @19 exception:23,
5 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
7 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$fgetmIAppOpsService(Lcom/android/server/StorageManagerService;)Lcom/android/internal/app/IAppOpsService; > 5 @3 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mIAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
return 2,
25 = getCaughtException ,
26 = new <Application,Ljava/lang/StringBuilder>@38,
return 4,
conditional branch(eq, to iindex=-1) 24,10,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 49,10,
61 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
conditional branch(ne, to iindex=-1) 61,10,
64 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
67 = new <Application,Landroid/content/Intent>@79,
70 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
72 = invokevirtual < Application, Landroid/content/Intent, setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent; > 67,2,70 @88 exception:71,
75 = invokevirtual < Application, Landroid/content/Intent, setFlags(I)Landroid/content/Intent; > 67,73 @93 exception:74,
77 = invokestatic < Application, Landroid/app/ActivityOptions, makeBasic()Landroid/app/ActivityOptions; > @96 exception:76,
invokevirtual < Application, Landroid/app/ActivityOptions, setIgnorePendingIntentCreatorForegroundState(Z)V > 77,78 @101 exception:79,
82 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 77 @106 exception:81,
return 84,","depth : 0
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	boolean v3 = this.mStorageManagerInternal.hasExternalStorageAccess(v1, v2[0]);
	int v4 = UserHandle.getUserId(v1);
	ApplicationInfo v5 = this.mIPackageManager.getApplicationInfo(p1, 0, v4);
	long v6 = Binder.clearCallingIdentity();
	Context v7 = this.mContext.createPackageContext(p1, 0);
	Intent v7 = new Intent(""android.intent.action.VIEW"");
	Intent v9 = v7.setClassName(p1, ApplicationInfo.manageSpaceActivityName);
	Intent v10 = v7.setFlags(268435456);
	ActivityOptions v11 = ActivityOptions.makeBasic();
	v11.setIgnorePendingIntentCreatorForegroundState(1);
	Bundle v13 = v11.toBundle();
	PendingIntent v14 = PendingIntent.getActivity(v7, p2, v7, 1409286144, v13);
	Binder.restoreCallingIdentity(v6);
	return v14;
}
-----
depth : 1
public boolean hasExternalStorageAccess(int p1, String p2){
	IAppOpsService v1 = StorageManagerService.-$$Nest$fgetmIAppOpsService(this.this$0);
	int v2 = v1.checkOperation(92, p1, p2);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Failed to check MANAGE_EXTERNAL_STORAGE access for "");
	StringBuilder v5 = v2.append(p2);
	String v6 = v2.toString();
	int v7 = Slog.w(v6, caughtException);
	return 0;
}
-----
depth : 2
public IAppOpsService -$$Nest$fgetmIAppOpsService(StorageManagerService p1){
	return this.mIAppOpsService;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getManageSpaceActivityIntent(Ljava/lang/String;I)Landroid/app/PendingIntent;","2","7 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 9,10,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
22 = arrayload 9[10],
24 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, hasExternalStorageAccess(ILjava/lang/String;)Z > 21,6,22 @19 exception:23,
5 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
7 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$fgetmIAppOpsService(Lcom/android/server/StorageManagerService;)Lcom/android/internal/app/IAppOpsService; > 5 @3 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mIAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
return 2,
conditional branch(ne, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,4,
13 = phi  4,12,
return 13,
conditional branch(eq, to iindex=-1) 24,10,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mIPackageManager, <Application,Landroid/content/pm/IPackageManager> > 1,
conditional branch(eq, to iindex=-1) 49,10,
61 = getfield < Application, Landroid/content/pm/ApplicationInfo, manageSpaceActivityName, <Application,Ljava/lang/String> > 49,
conditional branch(ne, to iindex=-1) 61,10,
106 = new <Application,Ljava/lang/StringBuilder>@47,
return 10,","depth : 0
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	boolean v3 = this.mStorageManagerInternal.hasExternalStorageAccess(v1, v2[0]);
	int v4 = UserHandle.getUserId(v1);
	ApplicationInfo v5 = this.mIPackageManager.getApplicationInfo(p1, 0, v4);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(p1);
	StringBuilder v8 = v5.append("" doesn't have a manageSpaceActivity"");
	String v9 = v5.toString();
	int v10 = Log.i(""StorageManagerService"", v9);
	return 0;
}
-----
depth : 1
public boolean hasExternalStorageAccess(int p1, String p2){
	IAppOpsService v1 = StorageManagerService.-$$Nest$fgetmIAppOpsService(this.this$0);
	int v2 = v1.checkOperation(92, p1, p2);
	return phiInstruction;
}
-----
depth : 2
public IAppOpsService -$$Nest$fgetmIAppOpsService(StorageManagerService p1){
	return this.mIAppOpsService;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","partitionPrivate(Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,7,12,13 @25 exception:14,
18 = getCaughtException ,
return,","depth : 0
public void partitionPrivate(String p1){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 1, -1);
	p0.waitForLatch(v3, ""partitionPrivate"", 180000);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionPrivate(Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:5,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,21,
return,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Ljava/util/concurrent/CountDownLatch>6 <Application,Ljava/util/concurrent/CountDownLatch>,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/concurrent/CountDownLatch>@13,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  7,9,
monitorexit 3,
return 15,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,7,12,13 @25 exception:14,
8 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @4 exception:7,
10 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
conditional branch(eq, to iindex=-1) 12,13,
return,
18 = getCaughtException ,
return,","depth : 0
public void partitionPrivate(String p1){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 1, -1);
	p0.waitForLatch(v3, ""partitionPrivate"", 180000);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public CountDownLatch findOrCreateDiskScanLatch(String p1){
	Object v1 = this.mDiskScanLatches.get(p1);
	CountDownLatch v1 = new CountDownLatch(1);
	Object v3 = this.mDiskScanLatches.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public void waitForLatch(CountDownLatch p1, String p2, long p3){
	long v1 = SystemClock.elapsedRealtime();
	boolean v2 = p1.await(5000, TimeUnit.MILLISECONDS);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionPrivate(Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:5,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,21,
return,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Ljava/util/concurrent/CountDownLatch>6 <Application,Ljava/util/concurrent/CountDownLatch>,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/concurrent/CountDownLatch>@13,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  7,9,
monitorexit 3,
return 15,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,7,12,13 @25 exception:14,
8 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @4 exception:7,
10 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
conditional branch(eq, to iindex=-1) 12,13,
return,
goto (from iindex= 12 to iindex = 7),
return,","depth : 0
public void partitionPrivate(String p1){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 1, -1);
	p0.waitForLatch(v3, ""partitionPrivate"", 180000);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public CountDownLatch findOrCreateDiskScanLatch(String p1){
	Object v1 = this.mDiskScanLatches.get(p1);
	CountDownLatch v1 = new CountDownLatch(1);
	Object v3 = this.mDiskScanLatches.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public void waitForLatch(CountDownLatch p1, String p2, long p3){
	long v1 = SystemClock.elapsedRealtime();
	boolean v2 = p1.await(5000, TimeUnit.MILLISECONDS);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionPrivate(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:5,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,21,
return,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,7,12,13 @25 exception:14,
18 = getCaughtException ,
return,","depth : 0
public void partitionPrivate(String p1){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 1, -1);
	p0.waitForLatch(v3, ""partitionPrivate"", 180000);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 2
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionPrivate(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:5,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,21,
return,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,7,12,13 @25 exception:14,
goto (from iindex= 12 to iindex = 7),
return,","depth : 0
public void partitionPrivate(String p1){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 1, -1);
	p0.waitForLatch(v3, ""partitionPrivate"", 180000);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 2
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionPrivate(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:5,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,21,
return,
7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
18 = getCaughtException ,
return,","depth : 0
public void partitionPrivate(String p1){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	int v4 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 2
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","abortIdleMaintenance()V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, abortIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
return,","depth : 0
public void abortIdleMaintenance(){
	p0.abortIdleMaint(0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","abortIdleMaintenance()V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, abortIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
10 = getCaughtException ,
return,
return,","depth : 0
public void abortIdleMaintenance(){
	p0.abortIdleMaint(0);
	return;
}
-----
depth : 1
public void abortIdleMaint(Runnable p1){
	int v2 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","abortIdleMaintenance()V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, abortIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
6 = new <Application,Lcom/android/server/StorageManagerService$11>@7,
10 = getCaughtException ,
return,
return,","depth : 0
public void abortIdleMaintenance(){
	p0.abortIdleMaint(0);
	return;
}
-----
depth : 1
public void abortIdleMaint(Runnable p1){
	StorageManagerService$11 v1 = new StorageManagerService$11(p0,p1);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","abortIdleMaintenance()V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, abortIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
6 = new <Application,Lcom/android/server/StorageManagerService$11>@7,
10 = getCaughtException ,
return,
return,","depth : 0
public void abortIdleMaintenance(){
	p0.abortIdleMaint(0);
	return;
}
-----
depth : 1
public void abortIdleMaint(Runnable p1){
	StorageManagerService$11 v1 = new StorageManagerService$11(p0,p1);
	this.mVold.abortIdleMaint(v1);
	int v4 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","abortIdleMaintenance()V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, abortIdleMaint(Ljava/lang/Runnable;)V > 1,2 @1 exception:3,
5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
6 = new <Application,Lcom/android/server/StorageManagerService$11>@7,
goto (from iindex= 6 to iindex = 7),
return,
return,","depth : 0
public void abortIdleMaintenance(){
	p0.abortIdleMaint(0);
	return;
}
-----
depth : 1
public void abortIdleMaint(Runnable p1){
	StorageManagerService$11 v1 = new StorageManagerService$11(p0,p1);
	this.mVold.abortIdleMaint(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","registerListener(Landroid/os/storage/IStorageEventListener;)V","0","3 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, register(Landroid/os/storage/IStorageEventListener;)V > 3,2 @2 exception:4,
return,","depth : 0
public void registerListener(IStorageEventListener p1){
	this.mCallbacks.register(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","registerListener(Landroid/os/storage/IStorageEventListener;)V","1","3 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, register(Landroid/os/storage/IStorageEventListener;)V > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/StorageManagerService$Callbacks, mCallbacks, <Application,Landroid/os/RemoteCallbackList> > 1,
5 = invokevirtual < Application, Landroid/os/RemoteCallbackList, register(Landroid/os/IInterface;)Z > 3,2 @2 exception:4,
return,
return,","depth : 0
public void registerListener(IStorageEventListener p1){
	this.mCallbacks.register(p1);
	return;
}
-----
depth : 1
public void register(IStorageEventListener p1){
	boolean v1 = this.mCallbacks.register(p1);
	return;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","mount(Ljava/lang/String;)V","0","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isMountDisallowed(Landroid/os/storage/VolumeInfo;)Z > 1,6 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/StorageManagerService, mount(Landroid/os/storage/VolumeInfo;)V > 1,6 @15 exception:24,
return,","depth : 0
public void mount(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	boolean v3 = p0.isMountDisallowed(v2);
	p0.mount(v2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","mount(Ljava/lang/String;)V","1","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isMountDisallowed(Landroid/os/storage/VolumeInfo;)Z > 1,6 @9 exception:7,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
7 = checkcast <Application,Landroid/os/UserManager>6 <Application,Landroid/os/UserManager>,
8 = getfield < Application, Landroid/os/storage/VolumeInfo, disk, <Application,Landroid/os/storage/DiskInfo> > 2,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Landroid/os/storage/DiskInfo, isUsb()Z > 8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 16 to iindex = 2),
20 = phi  19,9,
23 = getfield < Application, Landroid/os/storage/VolumeInfo, type, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 23,9,
conditional branch(eq, to iindex=-1) 23,24,
conditional branch(ne, to iindex=-1) 23,25,
goto (from iindex= 24 to iindex = 3),
32 = phi  9,30,
conditional branch(ne, to iindex=-1) 20,9,
conditional branch(eq, to iindex=-1) 32,9,
36 = phi  9,24,
return 36,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/StorageManagerService, mount(Landroid/os/storage/VolumeInfo;)V > 1,6 @15 exception:24,
4 = new <Application,Ljava/lang/StringBuilder>@2,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
38 = getCaughtException ,
return,
return,","depth : 0
public void mount(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	boolean v3 = p0.isMountDisallowed(v2);
	p0.mount(v2);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public boolean isMountDisallowed(VolumeInfo p1){
	Object v1 = this.mContext.getSystemService(UserManage.class);
	boolean v2 = VolumeInfo.disk.isUsb();
	UserHandle v3 = Binder.getCallingUserHandle();
	boolean v4 = v1.hasUserRestriction(""no_usb_file_transfer"", v3);
	UserHandle v5 = Binder.getCallingUserHandle();
	boolean v6 = v1.hasUserRestriction(""no_physical_media"", v5);
	return phiInstruction;
}
-----
depth : 1
public void mount(VolumeInfo p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""Mounting volume "");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""StorageManagerService"", v4);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","mount(Ljava/lang/String;)V","2","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isMountDisallowed(Landroid/os/storage/VolumeInfo;)Z > 1,6 @9 exception:7,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
7 = checkcast <Application,Landroid/os/UserManager>6 <Application,Landroid/os/UserManager>,
8 = getfield < Application, Landroid/os/storage/VolumeInfo, disk, <Application,Landroid/os/storage/DiskInfo> > 2,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Landroid/os/storage/DiskInfo, isUsb()Z > 8 @15 exception:10,
2 = getfield < Application, Landroid/os/storage/DiskInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 16 to iindex = 2),
20 = phi  19,9,
23 = getfield < Application, Landroid/os/storage/VolumeInfo, type, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 23,9,
conditional branch(eq, to iindex=-1) 23,24,
conditional branch(ne, to iindex=-1) 23,25,
goto (from iindex= 24 to iindex = 3),
32 = phi  9,30,
conditional branch(ne, to iindex=-1) 20,9,
conditional branch(eq, to iindex=-1) 32,9,
36 = phi  9,24,
return 36,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/StorageManagerService, mount(Landroid/os/storage/VolumeInfo;)V > 1,6 @15 exception:24,
return,","depth : 0
public void mount(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	boolean v3 = p0.isMountDisallowed(v2);
	p0.mount(v2);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public boolean isMountDisallowed(VolumeInfo p1){
	Object v1 = this.mContext.getSystemService(UserManage.class);
	boolean v2 = VolumeInfo.disk.isUsb();
	UserHandle v3 = Binder.getCallingUserHandle();
	boolean v4 = v1.hasUserRestriction(""no_usb_file_transfer"", v3);
	UserHandle v5 = Binder.getCallingUserHandle();
	boolean v6 = v1.hasUserRestriction(""no_physical_media"", v5);
	return phiInstruction;
}
-----
depth : 2
public boolean isUsb(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","mount(Ljava/lang/String;)V","2","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isMountDisallowed(Landroid/os/storage/VolumeInfo;)Z > 1,6 @9 exception:7,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
7 = checkcast <Application,Landroid/os/UserManager>6 <Application,Landroid/os/UserManager>,
8 = getfield < Application, Landroid/os/storage/VolumeInfo, disk, <Application,Landroid/os/storage/DiskInfo> > 2,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Landroid/os/storage/DiskInfo, isUsb()Z > 8 @15 exception:10,
2 = getfield < Application, Landroid/os/storage/DiskInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 16 to iindex = 2),
20 = phi  19,9,
23 = getfield < Application, Landroid/os/storage/VolumeInfo, type, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 23,9,
conditional branch(eq, to iindex=-1) 23,24,
conditional branch(ne, to iindex=-1) 23,25,
goto (from iindex= 26 to iindex = 12),
32 = phi  9,30,
conditional branch(ne, to iindex=-1) 20,9,
conditional branch(eq, to iindex=-1) 32,9,
36 = phi  9,24,
return 36,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/StorageManagerService, mount(Landroid/os/storage/VolumeInfo;)V > 1,6 @15 exception:24,
return,","depth : 0
public void mount(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	boolean v3 = p0.isMountDisallowed(v2);
	p0.mount(v2);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public boolean isMountDisallowed(VolumeInfo p1){
	Object v1 = this.mContext.getSystemService(UserManage.class);
	boolean v2 = VolumeInfo.disk.isUsb();
	UserHandle v3 = Binder.getCallingUserHandle();
	boolean v4 = v1.hasUserRestriction(""no_usb_file_transfer"", v3);
	return phiInstruction;
}
-----
depth : 2
public boolean isUsb(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","unmountObb(Ljava/lang/String;ZLandroid/os/storage/IObbActionListener;I)V","0","9 = getfield < Application, Lcom/android/server/StorageManagerService, mObbMounts, <Application,Ljava/util/Map> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mObbPathToStateMap, <Application,Ljava/util/Map> > 1,
13 = checkcast <Application,Lcom/android/server/StorageManagerService$ObbState>12 <Application,Lcom/android/server/StorageManagerService$ObbState>,
monitorexit 9,
conditional branch(eq, to iindex=-1) 13,19,
34 = new <Application,Lcom/android/server/StorageManagerService$ObbState>@24,
35 = getfield < Application, Lcom/android/server/StorageManagerService$ObbState, canonicalPath, <Application,Ljava/lang/String> > 13,
36 = getfield < Application, Lcom/android/server/StorageManagerService$ObbState, volId, <Application,Ljava/lang/String> > 13,
38 = new <Application,Lcom/android/server/StorageManagerService$UnmountObbAction>@38,
40 = getfield < Application, Lcom/android/server/StorageManagerService, mObbActionHandler, <Application,Lcom/android/server/StorageManagerService$ObbActionHandler> > 1,
goto (from iindex= 28 to iindex = 23),
return,","depth : 0
public void unmountObb(String p1, boolean p2, IObbActionListener p3, int p4){
	Object v1 = Objects.requireNonNull(p1, ""rawPath cannot be null"");
	Object v2 = this.mObbPathToStateMap.get(p1);
	int v3 = Binder.getCallingUid();
	StorageManagerService$ObbState v3 = new StorageManagerService$ObbState(p0,p1,StorageManagerService$ObbState.canonicalPath,v3,p3,p4,StorageManagerService$ObbState.volId);
	StorageManagerService$UnmountObbAction v4 = new StorageManagerService$UnmountObbAction(p0,v3,p2);
	Message v6 = this.mObbActionHandler.obtainMessage(1, v4);
	boolean v7 = this.mObbActionHandler.sendMessage(v6);
	return;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","unmountObb(Ljava/lang/String;ZLandroid/os/storage/IObbActionListener;I)V","0","9 = getfield < Application, Lcom/android/server/StorageManagerService, mObbMounts, <Application,Ljava/util/Map> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mObbPathToStateMap, <Application,Ljava/util/Map> > 1,
13 = checkcast <Application,Lcom/android/server/StorageManagerService$ObbState>12 <Application,Lcom/android/server/StorageManagerService$ObbState>,
monitorexit 9,
conditional branch(eq, to iindex=-1) 13,19,
21 = new <Application,Ljava/lang/StringBuilder>@56,
return,","depth : 0
public void unmountObb(String p1, boolean p2, IObbActionListener p3, int p4){
	Object v1 = Objects.requireNonNull(p1, ""rawPath cannot be null"");
	Object v2 = this.mObbPathToStateMap.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Unknown OBB mount at "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""StorageManagerService"", v6);
	return;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","fixupAppDir(Ljava/lang/String;)V","0","3 = getstatic < Application, Lcom/android/server/StorageManagerService, KNOWN_APP_DIR_PATHS, <Application,Ljava/util/regex/Pattern> >,
conditional branch(eq, to iindex=-1) 7,9,
conditional branch(ne, to iindex=-1) 26,9,
34 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
83 = getCaughtException ,
84 = new <Application,Ljava/lang/StringBuilder>@133,
goto (from iindex= 71 to iindex = 26),
return,","depth : 0
public void fixupAppDir(String p1){
	Matcher v1 = this.KNOWN_APP_DIR_PATHS.matcher(p1);
	boolean v2 = v1.matches();
	String v3 = v1.group(2);
	String v4 = v1.group(2);
	int v5 = Integer.parseInt(v4);
	String v6 = v1.group(3);
	PackageManager v7 = this.mContext.getPackageManager();
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(""Invalid userId in path: "");
	StringBuilder v10 = v7.append(p1);
	String v11 = v7.toString();
	int v12 = Log.e(""StorageManagerService"", v11, caughtException);
	return;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","format(Ljava/lang/String;)V","0","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
7 = getfield < Application, Landroid/os/storage/VolumeInfo, fsUuid, <Application,Ljava/lang/String> > 6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 6,
13 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @20 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
invokevirtual < Application, Lcom/android/server/StorageManagerService, forgetVolume(Ljava/lang/String;)V > 1,7 @26 exception:15,
19 = getCaughtException ,
return,","depth : 0
public void format(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	this.mVold.format(VolumeInfo.id, ""auto"");
	boolean v4 = TextUtils.isEmpty(VolumeInfo.fsUuid);
	p0.forgetVolume(VolumeInfo.fsUuid);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","format(Ljava/lang/String;)V","1","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
7 = getfield < Application, Landroid/os/storage/VolumeInfo, fsUuid, <Application,Ljava/lang/String> > 6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 6,
13 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @20 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
invokevirtual < Application, Lcom/android/server/StorageManagerService, forgetVolume(Ljava/lang/String;)V > 1,7 @26 exception:15,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
monitorexit 7,
return,
19 = getCaughtException ,
return,","depth : 0
public void format(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	this.mVold.format(VolumeInfo.id, ""auto"");
	boolean v4 = TextUtils.isEmpty(VolumeInfo.fsUuid);
	p0.forgetVolume(VolumeInfo.fsUuid);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","format(Ljava/lang/String;)V","1","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
7 = getfield < Application, Landroid/os/storage/VolumeInfo, fsUuid, <Application,Ljava/lang/String> > 6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 6,
13 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @20 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
invokevirtual < Application, Lcom/android/server/StorageManagerService, forgetVolume(Ljava/lang/String;)V > 1,7 @26 exception:15,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
monitorexit 7,
return,
goto (from iindex= 13 to iindex = 7),
return,","depth : 0
public void format(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	this.mVold.format(VolumeInfo.id, ""auto"");
	boolean v4 = TextUtils.isEmpty(VolumeInfo.fsUuid);
	p0.forgetVolume(VolumeInfo.fsUuid);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","format(Ljava/lang/String;)V","2","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
7 = getfield < Application, Landroid/os/storage/VolumeInfo, fsUuid, <Application,Ljava/lang/String> > 6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 6,
13 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @20 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
invokevirtual < Application, Lcom/android/server/StorageManagerService, forgetVolume(Ljava/lang/String;)V > 1,7 @26 exception:15,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
conditional branch(eq, to iindex=-1) 5,3,
6 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
return 6,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
monitorexit 7,
return,
19 = getCaughtException ,
return,","depth : 0
public void format(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	this.mVold.format(VolumeInfo.id, ""auto"");
	boolean v4 = TextUtils.isEmpty(VolumeInfo.fsUuid);
	p0.forgetVolume(VolumeInfo.fsUuid);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
depth : 2
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 2
public String getDefaultPrimaryStorageUuid(){
	boolean v1 = SystemProperties.getBoolean(""ro.vold.primary_physical"", 0);
	return StorageManager.UUID_PRIVATE_INTERNAL;
}
-----
depth : 2
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","format(Ljava/lang/String;)V","2","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
7 = getfield < Application, Landroid/os/storage/VolumeInfo, fsUuid, <Application,Ljava/lang/String> > 6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 6,
13 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @20 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
invokevirtual < Application, Lcom/android/server/StorageManagerService, forgetVolume(Ljava/lang/String;)V > 1,7 @26 exception:15,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
conditional branch(eq, to iindex=-1) 5,3,
6 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
return 6,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
monitorexit 7,
return,
goto (from iindex= 13 to iindex = 7),
return,","depth : 0
public void format(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	this.mVold.format(VolumeInfo.id, ""auto"");
	boolean v4 = TextUtils.isEmpty(VolumeInfo.fsUuid);
	p0.forgetVolume(VolumeInfo.fsUuid);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
depth : 2
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 2
public String getDefaultPrimaryStorageUuid(){
	boolean v1 = SystemProperties.getBoolean(""ro.vold.primary_physical"", 0);
	return StorageManager.UUID_PRIVATE_INTERNAL;
}
-----
depth : 2
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","format(Ljava/lang/String;)V","2","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
7 = getfield < Application, Landroid/os/storage/VolumeInfo, fsUuid, <Application,Ljava/lang/String> > 6,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 6,
13 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @20 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
invokevirtual < Application, Lcom/android/server/StorageManagerService, forgetVolume(Ljava/lang/String;)V > 1,7 @26 exception:15,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
conditional branch(eq, to iindex=-1) 5,3,
return 7,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
monitorexit 7,
return,
19 = getCaughtException ,
return,","depth : 0
public void format(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	this.mVold.format(VolumeInfo.id, ""auto"");
	boolean v4 = TextUtils.isEmpty(VolumeInfo.fsUuid);
	p0.forgetVolume(VolumeInfo.fsUuid);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
depth : 2
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 2
public String getDefaultPrimaryStorageUuid(){
	boolean v1 = SystemProperties.getBoolean(""ro.vold.primary_physical"", 0);
	return ""primary_physical"";
}
-----
depth : 2
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","mountProxyFileDescriptorBridge()Lcom/android/internal/os/AppFuseMount;","0","8 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
conditional branch(ne, to iindex=-1) 10,9,
11 = new <Application,Lcom/android/server/storage/AppFuseBridge>@20,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > = 11,
13 = new <Application,Ljava/lang/Thread>@27,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
19 = phi  9,18,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mNextAppFuseName, <Primordial,I> > 1,
24 = binaryop(add) 22 , 23,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mNextAppFuseName, <Primordial,I> > = 24,
25 = new <Application,Lcom/android/internal/os/AppFuseMount>@46,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
27 = new <Application,Lcom/android/server/StorageManagerService$AppFuseMountScope>@50,
30 = invokevirtual < Application, Lcom/android/server/storage/AppFuseBridge, addBridge(Lcom/android/server/storage/AppFuseBridge$MountScope;)Landroid/os/ParcelFileDescriptor; > 26,27 @55 exception:29,
31 = getCaughtException ,
conditional branch(eq, to iindex=-1) 19,9,
monitorexit 8,
return 9,","depth : 0
public AppFuseMount mountProxyFileDescriptorBridge(){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptorBridge"");
	int v2 = Binder.getCallingUid();
	AppFuseBridge v2 = new AppFuseBridge();
	this.mAppFuseBridge = v2;
	Thread v3 = new Thread(this.mAppFuseBridge,""AppFuseBridge"");
	v3.start();
	this.mNextAppFuseName = (this.mNextAppFuseName + 1);
	AppFuseMount v5 = new AppFuseMount;
	StorageManagerService$AppFuseMountScope v5 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);
	ParcelFileDescriptor v7 = this.mAppFuseBridge.addBridge(v5);
	int v8 = Slog.e(""StorageManagerService"", """", caughtException);
	return 0;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","mountProxyFileDescriptorBridge()Lcom/android/internal/os/AppFuseMount;","1","8 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
conditional branch(ne, to iindex=-1) 10,9,
11 = new <Application,Lcom/android/server/storage/AppFuseBridge>@20,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > = 11,
13 = new <Application,Ljava/lang/Thread>@27,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
19 = phi  9,18,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mNextAppFuseName, <Primordial,I> > 1,
24 = binaryop(add) 22 , 23,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mNextAppFuseName, <Primordial,I> > = 24,
25 = new <Application,Lcom/android/internal/os/AppFuseMount>@46,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
27 = new <Application,Lcom/android/server/StorageManagerService$AppFuseMountScope>@50,
30 = invokevirtual < Application, Lcom/android/server/storage/AppFuseBridge, addBridge(Lcom/android/server/storage/AppFuseBridge$MountScope;)Landroid/os/ParcelFileDescriptor; > 26,27 @55 exception:29,
invokespecial < Application, Lcom/android/server/storage/AppFuseBridge, native_lock()V > 1 @0 exception:3,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mScopes, <Application,Landroid/util/SparseArray> > 1,
5 = getfield < Application, Lcom/android/server/storage/AppFuseBridge$MountScope, mountId, <Primordial,I> > 2,
conditional branch(ge, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
12 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mNativeLoop, <Primordial,J> > 1,
14 = binaryop(lt) 12 , 13,
conditional branch(eq, to iindex=-1) 14,8,
18 = getfield < Application, Lcom/android/server/storage/AppFuseBridge$MountScope, mountId, <Primordial,I> > 2,
24 = invokespecial < Application, Lcom/android/server/storage/AppFuseBridge, native_add_bridge(JII)I > 1,12,18,22 @38 exception:23,
conditional branch(eq, to iindex=-1) 24,25,
31 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mScopes, <Application,Landroid/util/SparseArray> > 1,
32 = getfield < Application, Lcom/android/server/storage/AppFuseBridge$MountScope, mountId, <Primordial,I> > 2,
monitorexit 1,
invokespecial < Application, Lcom/android/server/storage/AppFuseBridge, native_unlock()V > 1 @58 exception:47,
return 30,
31 = getCaughtException ,
conditional branch(eq, to iindex=-1) 19,9,
monitorexit 8,
return 9,","depth : 0
public AppFuseMount mountProxyFileDescriptorBridge(){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptorBridge"");
	int v2 = Binder.getCallingUid();
	AppFuseBridge v2 = new AppFuseBridge();
	this.mAppFuseBridge = v2;
	Thread v3 = new Thread(this.mAppFuseBridge,""AppFuseBridge"");
	v3.start();
	this.mNextAppFuseName = (this.mNextAppFuseName + 1);
	AppFuseMount v5 = new AppFuseMount;
	StorageManagerService$AppFuseMountScope v5 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);
	ParcelFileDescriptor v7 = this.mAppFuseBridge.addBridge(v5);
	int v8 = Slog.e(""StorageManagerService"", """", caughtException);
	return 0;
}
-----
depth : 1
public ParcelFileDescriptor addBridge(AppFuseBridge$MountScope p1){
	int v2 = this.mScopes.indexOfKey(AppFuseBridge$MountScope.mountId);
	Preconditions.checkArgument(phiInstruction);
	ParcelFileDescriptor v4 = p1.open();
	int v5 = v4.detachFd();
	ParcelFileDescriptor v7 = ParcelFileDescriptor.adoptFd(v6);
	this.mScopes.put(AppFuseBridge$MountScope.mountId, p1);
	IoUtils.closeQuietly(0);
	return v7;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","mountProxyFileDescriptorBridge()Lcom/android/internal/os/AppFuseMount;","1","8 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
conditional branch(ne, to iindex=-1) 10,9,
11 = new <Application,Lcom/android/server/storage/AppFuseBridge>@20,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > = 11,
13 = new <Application,Ljava/lang/Thread>@27,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
19 = phi  9,18,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mNextAppFuseName, <Primordial,I> > 1,
24 = binaryop(add) 22 , 23,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mNextAppFuseName, <Primordial,I> > = 24,
25 = new <Application,Lcom/android/internal/os/AppFuseMount>@46,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
27 = new <Application,Lcom/android/server/StorageManagerService$AppFuseMountScope>@50,
30 = invokevirtual < Application, Lcom/android/server/storage/AppFuseBridge, addBridge(Lcom/android/server/storage/AppFuseBridge$MountScope;)Landroid/os/ParcelFileDescriptor; > 26,27 @55 exception:29,
invokespecial < Application, Lcom/android/server/storage/AppFuseBridge, native_lock()V > 1 @0 exception:3,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mScopes, <Application,Landroid/util/SparseArray> > 1,
5 = getfield < Application, Lcom/android/server/storage/AppFuseBridge$MountScope, mountId, <Primordial,I> > 2,
conditional branch(ge, to iindex=-1) 7,8,
10 = phi  9,8,
12 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mNativeLoop, <Primordial,J> > 1,
14 = binaryop(lt) 12 , 13,
conditional branch(eq, to iindex=-1) 14,8,
18 = getfield < Application, Lcom/android/server/storage/AppFuseBridge$MountScope, mountId, <Primordial,I> > 2,
24 = invokespecial < Application, Lcom/android/server/storage/AppFuseBridge, native_add_bridge(JII)I > 1,12,18,22 @38 exception:23,
conditional branch(eq, to iindex=-1) 24,25,
31 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mScopes, <Application,Landroid/util/SparseArray> > 1,
32 = getfield < Application, Lcom/android/server/storage/AppFuseBridge$MountScope, mountId, <Primordial,I> > 2,
monitorexit 1,
invokespecial < Application, Lcom/android/server/storage/AppFuseBridge, native_unlock()V > 1 @58 exception:47,
return 30,
31 = getCaughtException ,
conditional branch(eq, to iindex=-1) 19,9,
monitorexit 8,
return 9,","depth : 0
public AppFuseMount mountProxyFileDescriptorBridge(){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptorBridge"");
	int v2 = Binder.getCallingUid();
	AppFuseBridge v2 = new AppFuseBridge();
	this.mAppFuseBridge = v2;
	Thread v3 = new Thread(this.mAppFuseBridge,""AppFuseBridge"");
	v3.start();
	this.mNextAppFuseName = (this.mNextAppFuseName + 1);
	AppFuseMount v5 = new AppFuseMount;
	StorageManagerService$AppFuseMountScope v5 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);
	ParcelFileDescriptor v7 = this.mAppFuseBridge.addBridge(v5);
	int v8 = Slog.e(""StorageManagerService"", """", caughtException);
	return 0;
}
-----
depth : 1
public ParcelFileDescriptor addBridge(AppFuseBridge$MountScope p1){
	int v2 = this.mScopes.indexOfKey(AppFuseBridge$MountScope.mountId);
	Preconditions.checkArgument(phiInstruction);
	ParcelFileDescriptor v4 = p1.open();
	int v5 = v4.detachFd();
	ParcelFileDescriptor v7 = ParcelFileDescriptor.adoptFd(v6);
	this.mScopes.put(AppFuseBridge$MountScope.mountId, p1);
	IoUtils.closeQuietly(0);
	return v7;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","unlockUserKey(II[B)V","0","35 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @53 exception:34,
conditional branch(eq, to iindex=-1) 35,23,
conditional branch(eq, to iindex=-1) 6,23,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(eq, to iindex=-1) 38,23,
conditional branch(eq, to iindex=-1) 40,23,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
46 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @133 exception:45,
goto (from iindex= 62 to iindex = 8),
58 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 58,
59 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, append(I)V > 59,2 @153 exception:60,
monitorexit 58,
return,","depth : 0
public void unlockUserKey(int p1, int p2, byte[] p3){
	boolean v12 = p0.isUserKeyUnlocked(p1);
	boolean v13 = this.mLockPatternUtils.isSecure(p1);
	boolean v14 = ArrayUtils.isEmpty(p3);
	String v15 = p0.encodeBytes(p3);
	this.mVold.unlockUserKey(p1, p2, v15);
	this.mLocalUnlockedUsers.append(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","unlockUserKey(II[B)V","1","35 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @53 exception:34,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
monitorexit 3,
return 6,
conditional branch(eq, to iindex=-1) 35,23,
conditional branch(eq, to iindex=-1) 6,23,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(eq, to iindex=-1) 38,23,
conditional branch(eq, to iindex=-1) 40,23,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
46 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @133 exception:45,
conditional branch(eq, to iindex=-1) 4,5,
return 8,
goto (from iindex= 62 to iindex = 8),
58 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 58,
59 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, append(I)V > 59,2 @153 exception:60,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > = 5,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, invalidateIsUserUnlockedCache()V > 1 @8 exception:6,
return,
monitorexit 58,
return,","depth : 0
public void unlockUserKey(int p1, int p2, byte[] p3){
	boolean v12 = p0.isUserKeyUnlocked(p1);
	boolean v13 = this.mLockPatternUtils.isSecure(p1);
	boolean v14 = ArrayUtils.isEmpty(p3);
	String v15 = p0.encodeBytes(p3);
	this.mVold.unlockUserKey(p1, p2, v15);
	this.mLocalUnlockedUsers.append(p1);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 1
public String encodeBytes(byte[] p1){
	boolean v1 = ArrayUtils.isEmpty(p1);
	return ""!"";
}
-----
depth : 1
public void append(int p1){
	[I v1 = ArrayUtils.appendInt(this.users, p1);
	this.users = v1;
	p0.invalidateIsUserUnlockedCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","unlockUserKey(II[B)V","1","35 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @53 exception:34,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
monitorexit 3,
return 6,
conditional branch(eq, to iindex=-1) 35,23,
conditional branch(eq, to iindex=-1) 6,23,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(eq, to iindex=-1) 38,23,
conditional branch(eq, to iindex=-1) 40,23,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
46 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @133 exception:45,
conditional branch(eq, to iindex=-1) 4,5,
return 7,
goto (from iindex= 62 to iindex = 8),
58 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 58,
59 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, append(I)V > 59,2 @153 exception:60,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > = 5,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, invalidateIsUserUnlockedCache()V > 1 @8 exception:6,
return,
monitorexit 58,
return,","depth : 0
public void unlockUserKey(int p1, int p2, byte[] p3){
	boolean v12 = p0.isUserKeyUnlocked(p1);
	boolean v13 = this.mLockPatternUtils.isSecure(p1);
	boolean v14 = ArrayUtils.isEmpty(p3);
	String v15 = p0.encodeBytes(p3);
	this.mVold.unlockUserKey(p1, p2, v15);
	this.mLocalUnlockedUsers.append(p1);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 1
public String encodeBytes(byte[] p1){
	boolean v1 = ArrayUtils.isEmpty(p1);
	String v2 = HexDump.toHexString(p1);
	return v2;
}
-----
depth : 1
public void append(int p1){
	[I v1 = ArrayUtils.appendInt(this.users, p1);
	this.users = v1;
	p0.invalidateIsUserUnlockedCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","unlockUserKey(II[B)V","2","35 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @53 exception:34,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
return 5,
monitorexit 3,
return 6,
conditional branch(eq, to iindex=-1) 35,23,
conditional branch(eq, to iindex=-1) 6,23,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(eq, to iindex=-1) 38,23,
conditional branch(eq, to iindex=-1) 40,23,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
46 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @133 exception:45,
goto (from iindex= 62 to iindex = 8),
58 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 58,
59 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, append(I)V > 59,2 @153 exception:60,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > = 5,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, invalidateIsUserUnlockedCache()V > 1 @8 exception:6,
return,
return,
monitorexit 58,
return,","depth : 0
public void unlockUserKey(int p1, int p2, byte[] p3){
	boolean v12 = p0.isUserKeyUnlocked(p1);
	boolean v13 = this.mLockPatternUtils.isSecure(p1);
	boolean v14 = ArrayUtils.isEmpty(p3);
	String v15 = p0.encodeBytes(p3);
	this.mVold.unlockUserKey(p1, p2, v15);
	this.mLocalUnlockedUsers.append(p1);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 2
public boolean contains(int p1){
	boolean v1 = ArrayUtils.contains(this.users, p1);
	return v1;
}
-----
depth : 1
public void append(int p1){
	[I v1 = ArrayUtils.appendInt(this.users, p1);
	this.users = v1;
	p0.invalidateIsUserUnlockedCache();
	return;
}
-----
depth : 2
public void invalidateIsUserUnlockedCache(){
	UserManager.invalidateIsUserUnlockedCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","unlockUserKey(II[B)V","2","35 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @53 exception:34,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
return 5,
monitorexit 3,
return 6,
conditional branch(eq, to iindex=-1) 35,23,
conditional branch(eq, to iindex=-1) 6,23,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(eq, to iindex=-1) 38,23,
conditional branch(eq, to iindex=-1) 40,23,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
46 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @133 exception:45,
51 = getCaughtException ,
return,","depth : 0
public void unlockUserKey(int p1, int p2, byte[] p3){
	boolean v12 = p0.isUserKeyUnlocked(p1);
	boolean v13 = this.mLockPatternUtils.isSecure(p1);
	boolean v14 = ArrayUtils.isEmpty(p3);
	String v15 = p0.encodeBytes(p3);
	int v16 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 2
public boolean contains(int p1){
	boolean v1 = ArrayUtils.contains(this.users, p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","unlockUserKey(II[B)V","2","35 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @53 exception:34,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
return 5,
monitorexit 3,
return 6,
conditional branch(eq, to iindex=-1) 35,23,
conditional branch(eq, to iindex=-1) 6,23,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(eq, to iindex=-1) 38,23,
conditional branch(eq, to iindex=-1) 40,23,
44 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
46 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @133 exception:45,
51 = getCaughtException ,
return,","depth : 0
public void unlockUserKey(int p1, int p2, byte[] p3){
	boolean v12 = p0.isUserKeyUnlocked(p1);
	boolean v13 = this.mLockPatternUtils.isSecure(p1);
	boolean v14 = ArrayUtils.isEmpty(p3);
	String v15 = p0.encodeBytes(p3);
	this.mVold.unlockUserKey(p1, p2, v15);
	int v17 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 2
public boolean contains(int p1){
	boolean v1 = ArrayUtils.contains(this.users, p1);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","clearUserKeyAuth(II[B)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @7 exception:8,
13 = getCaughtException ,
return,","depth : 0
public void clearUserKeyAuth(int p1, int p2, byte[] p3){
	String v2 = p0.encodeBytes(p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","clearUserKeyAuth(II[B)V","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @7 exception:8,
conditional branch(eq, to iindex=-1) 4,5,
return 8,
13 = getCaughtException ,
return,","depth : 0
public void clearUserKeyAuth(int p1, int p2, byte[] p3){
	String v2 = p0.encodeBytes(p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public String encodeBytes(byte[] p1){
	boolean v1 = ArrayUtils.isEmpty(p1);
	return ""!"";
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","clearUserKeyAuth(II[B)V","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @7 exception:8,
conditional branch(eq, to iindex=-1) 4,5,
return 7,
13 = getCaughtException ,
return,","depth : 0
public void clearUserKeyAuth(int p1, int p2, byte[] p3){
	String v2 = p0.encodeBytes(p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public String encodeBytes(byte[] p1){
	boolean v1 = ArrayUtils.isEmpty(p1);
	String v2 = HexDump.toHexString(p1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","fstrim(ILandroid/os/IVoldTaskListener;)V","0","7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, needsCheckpoint()Z > 1 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/StorageManagerService, supportsBlockCheckpoint()Z > 1 @11 exception:9,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 8 to iindex = 9),
18 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
19 = new <Application,Lcom/android/server/StorageManagerService$9>@28,
return,","depth : 0
public void fstrim(int p1, IVoldTaskListener p2){
	boolean v2 = p0.needsCheckpoint();
	boolean v3 = p0.supportsBlockCheckpoint();
	StorageManagerService$9 v3 = new StorageManagerService$9(p0,p2);
	this.mVold.fstrim(p1, v3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","fstrim(ILandroid/os/IVoldTaskListener;)V","1","7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, needsCheckpoint()Z > 1 @5 exception:6,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/StorageManagerService, supportsBlockCheckpoint()Z > 1 @11 exception:9,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 8 to iindex = 9),
18 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
19 = new <Application,Lcom/android/server/StorageManagerService$9>@28,
return,","depth : 0
public void fstrim(int p1, IVoldTaskListener p2){
	boolean v2 = p0.needsCheckpoint();
	boolean v3 = p0.supportsBlockCheckpoint();
	StorageManagerService$9 v3 = new StorageManagerService$9(p0,p2);
	this.mVold.fstrim(p1, v3);
	return;
}
-----
depth : 1
public boolean needsCheckpoint(){
	boolean v2 = this.mVold.needsCheckpoint();
	return v2;
}
-----
depth : 1
public boolean supportsBlockCheckpoint(){
	boolean v2 = this.mVold.supportsBlockCheckpoint();
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","fstrim(ILandroid/os/IVoldTaskListener;)V","1","7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, needsCheckpoint()Z > 1 @5 exception:6,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/StorageManagerService, supportsBlockCheckpoint()Z > 1 @11 exception:9,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 12 to iindex = 11),
return,","depth : 0
public void fstrim(int p1, IVoldTaskListener p2){
	boolean v2 = p0.needsCheckpoint();
	boolean v3 = p0.supportsBlockCheckpoint();
	int v4 = Slog.i(""StorageManagerService"", ""Skipping fstrim - block based checkpoint in progress"");
	return;
}
-----
depth : 1
public boolean needsCheckpoint(){
	boolean v2 = this.mVold.needsCheckpoint();
	return v2;
}
-----
depth : 1
public boolean supportsBlockCheckpoint(){
	boolean v2 = this.mVold.supportsBlockCheckpoint();
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","unmount(Ljava/lang/String;)V","0","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
invokevirtual < Application, Lcom/android/server/StorageManagerService, unmount(Landroid/os/storage/VolumeInfo;)V > 1,6 @9 exception:7,
return,","depth : 0
public void unmount(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	p0.unmount(v2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","unmount(Ljava/lang/String;)V","1","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
invokevirtual < Application, Lcom/android/server/StorageManagerService, unmount(Landroid/os/storage/VolumeInfo;)V > 1,6 @9 exception:7,
4 = getfield < Application, Landroid/os/storage/VolumeInfo, type, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/StorageManagerService, mInstaller, <Application,Lcom/android/server/pm/Installer> > 1,
12 = getCaughtException ,
20 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
21 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 2,
30 = getCaughtException ,
goto (from iindex= 10 to iindex = 20),
return,
return,","depth : 0
public void unmount(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	p0.unmount(v2);
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
depth : 1
public void unmount(VolumeInfo p1){
	String v1 = p1.getFsUuid();
	int v2 = Slog.e(""StorageManagerService"", ""Failed unmount mirror data"", caughtException);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","isObbMounted(Ljava/lang/String;)Z","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mObbMounts, <Application,Ljava/util/Map> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mObbPathToStateMap, <Application,Ljava/util/Map> > 1,
monitorexit 6,
return 9,","depth : 0
public boolean isObbMounted(String p1){
	Object v1 = Objects.requireNonNull(p1, ""rawPath cannot be null"");
	boolean v2 = this.mObbPathToStateMap.containsKey(p1);
	return v2;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","openProxyFileDescriptor(III)Landroid/os/ParcelFileDescriptor;","0","10 = binaryop(and) 4 , 9,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
23 = getCaughtException ,
monitorexit 12,
throw 23,
24 = getCaughtException ,
return 11,","depth : 0
public ParcelFileDescriptor openProxyFileDescriptor(int p1, int p2, int p3){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptor"");
	int v2 = Slog.v(""StorageManagerService"", ""The mount point has already been invalid"", caughtException);
	return 0;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","openProxyFileDescriptor(III)Landroid/os/ParcelFileDescriptor;","0","10 = binaryop(and) 4 , 9,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/storage/AppFuseBridge, openFile(III)Landroid/os/ParcelFileDescriptor; > 13,2,3,10 @28 exception:14,
23 = getCaughtException ,
monitorexit 12,
throw 23,
24 = getCaughtException ,
return 11,","depth : 0
public ParcelFileDescriptor openProxyFileDescriptor(int p1, int p2, int p3){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptor"");
	ParcelFileDescriptor v2 = this.mAppFuseBridge.openFile(p1, p2, (p3 & 805306368));
	int v3 = Slog.v(""StorageManagerService"", ""The mount point has already been invalid"", caughtException);
	return 0;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","openProxyFileDescriptor(III)Landroid/os/ParcelFileDescriptor;","0","10 = binaryop(and) 4 , 9,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/storage/AppFuseBridge, openFile(III)Landroid/os/ParcelFileDescriptor; > 13,2,3,10 @28 exception:14,
monitorexit 12,
23 = getCaughtException ,
monitorexit 12,
throw 23,
24 = getCaughtException ,
return 11,","depth : 0
public ParcelFileDescriptor openProxyFileDescriptor(int p1, int p2, int p3){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptor"");
	ParcelFileDescriptor v2 = this.mAppFuseBridge.openFile(p1, p2, (p3 & 805306368));
	int v3 = Slog.v(""StorageManagerService"", ""The mount point has already been invalid"", caughtException);
	return 0;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","openProxyFileDescriptor(III)Landroid/os/ParcelFileDescriptor;","1","10 = binaryop(and) 4 , 9,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/storage/AppFuseBridge, openFile(III)Landroid/os/ParcelFileDescriptor; > 13,2,3,10 @28 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mScopes, <Application,Landroid/util/SparseArray> > 1,
8 = checkcast <Application,Lcom/android/server/storage/AppFuseBridge$MountScope>7 <Application,Lcom/android/server/storage/AppFuseBridge$MountScope>,
conditional branch(eq, to iindex=-1) 8,9,
monitorexit 1,
conditional branch(eq, to iindex=-1) 18,9,
return 24,
23 = getCaughtException ,
monitorexit 12,
throw 23,
24 = getCaughtException ,
return 11,","depth : 0
public ParcelFileDescriptor openProxyFileDescriptor(int p1, int p2, int p3){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptor"");
	ParcelFileDescriptor v2 = this.mAppFuseBridge.openFile(p1, p2, (p3 & 805306368));
	int v3 = Slog.v(""StorageManagerService"", ""The mount point has already been invalid"", caughtException);
	return 0;
}
-----
depth : 1
public ParcelFileDescriptor openFile(int p1, int p2, int p3){
	Object v1 = this.mScopes.get(p1);
	boolean v2 = v1.waitForMount();
	int v3 = FileUtils.translateModePfdToPosix(p3);
	ParcelFileDescriptor v4 = v1.openFile(p1, p2, v3);
	return v4;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","openProxyFileDescriptor(III)Landroid/os/ParcelFileDescriptor;","1","10 = binaryop(and) 4 , 9,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mAppFuseBridge, <Application,Lcom/android/server/storage/AppFuseBridge> > 1,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/storage/AppFuseBridge, openFile(III)Landroid/os/ParcelFileDescriptor; > 13,2,3,10 @28 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/storage/AppFuseBridge, mScopes, <Application,Landroid/util/SparseArray> > 1,
8 = checkcast <Application,Lcom/android/server/storage/AppFuseBridge$MountScope>7 <Application,Lcom/android/server/storage/AppFuseBridge$MountScope>,
conditional branch(eq, to iindex=-1) 8,9,
monitorexit 1,
conditional branch(eq, to iindex=-1) 18,9,
return 24,
monitorexit 12,
23 = getCaughtException ,
monitorexit 12,
throw 23,
24 = getCaughtException ,
return 11,","depth : 0
public ParcelFileDescriptor openProxyFileDescriptor(int p1, int p2, int p3){
	int v1 = Slog.v(""StorageManagerService"", ""mountProxyFileDescriptor"");
	ParcelFileDescriptor v2 = this.mAppFuseBridge.openFile(p1, p2, (p3 & 805306368));
	int v3 = Slog.v(""StorageManagerService"", ""The mount point has already been invalid"", caughtException);
	return 0;
}
-----
depth : 1
public ParcelFileDescriptor openFile(int p1, int p2, int p3){
	Object v1 = this.mScopes.get(p1);
	boolean v2 = v1.waitForMount();
	int v3 = FileUtils.translateModePfdToPosix(p3);
	ParcelFileDescriptor v4 = v1.openFile(p1, p2, v3);
	return v4;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","disableAppDataIsolation(Ljava/lang/String;II)V","0","goto (from iindex= 5 to iindex = 10),
12 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
19 = arraylength 14,
conditional branch(eq, to iindex=-1) 19,7,
goto (from iindex= 19 to iindex = 7),
22 = phi  14,21,
24 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void disableAppDataIsolation(String p1, int p2, int p3){
	String v2 = this.mPmInternal.getSharedUserPackagesForPackage(p1, p3);
	int v3 = this.mPmInternal.getPackageUid(p1, 0, p3);
	this.mVold.unmountAppStorageDirs(v3, p2, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","disableAppDataIsolation(Ljava/lang/String;II)V","0","goto (from iindex= 5 to iindex = 10),
12 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
19 = arraylength 14,
conditional branch(eq, to iindex=-1) 19,7,
21 = new <Application,[Ljava/lang/String>@3920 ,
arraystore 21[7] = 2,
22 = phi  14,21,
24 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void disableAppDataIsolation(String p1, int p2, int p3){
	String v2 = this.mPmInternal.getSharedUserPackagesForPackage(p1, p3);
	int v3 = this.mPmInternal.getPackageUid(p1, 0, p3);
	String v3 = new String(1);
	this.mVold.unmountAppStorageDirs(v3, p2, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","disableAppDataIsolation(Ljava/lang/String;II)V","0","12 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
19 = arraylength 14,
conditional branch(eq, to iindex=-1) 19,7,
goto (from iindex= 19 to iindex = 7),
22 = phi  14,21,
24 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void disableAppDataIsolation(String p1, int p2, int p3){
	String v2 = this.mPmInternal.getSharedUserPackagesForPackage(p1, p3);
	int v3 = this.mPmInternal.getPackageUid(p1, 0, p3);
	this.mVold.unmountAppStorageDirs(v3, p2, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","disableAppDataIsolation(Ljava/lang/String;II)V","0","12 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
19 = arraylength 14,
conditional branch(eq, to iindex=-1) 19,7,
21 = new <Application,[Ljava/lang/String>@3920 ,
arraystore 21[7] = 2,
22 = phi  14,21,
24 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void disableAppDataIsolation(String p1, int p2, int p3){
	String v2 = this.mPmInternal.getSharedUserPackagesForPackage(p1, p3);
	int v3 = this.mPmInternal.getPackageUid(p1, 0, p3);
	String v3 = new String(1);
	this.mVold.unmountAppStorageDirs(v3, p2, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","benchmark(Ljava/lang/String;Landroid/os/IVoldTaskListener;)V","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
7 = new <Application,Lcom/android/server/StorageManagerService$8>@7,
return,","depth : 0
public void benchmark(String p1, IVoldTaskListener p2){
	StorageManagerService$8 v1 = new StorageManagerService$8(p0,p2);
	this.mVold.benchmark(p1, v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getCloudMediaProvider()Ljava/lang/String;","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
10 = checkcast <Application,Ljava/lang/String>9 <Application,Ljava/lang/String>,
monitorexit 6,
conditional branch(ne, to iindex=-1) 10,16,
return 16,","depth : 0
public String getCloudMediaProvider(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mCloudMediaProviders.get(v2);
	return 0;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","getCloudMediaProvider()Ljava/lang/String;","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
10 = checkcast <Application,Ljava/lang/String>9 <Application,Ljava/lang/String>,
monitorexit 6,
conditional branch(ne, to iindex=-1) 10,16,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(eq, to iindex=-1) 20,16,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
22 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 20,
conditional branch(eq, to iindex=-1) 24,16,
goto (from iindex= 28 to iindex = 2),
return 16,","depth : 0
public String getCloudMediaProvider(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mCloudMediaProviders.get(v2);
	ProviderInfo v4 = this.mPmInternal.resolveContentProvider(v3, 0, v2, v1);
	boolean v5 = this.mPmInternal.filterAppAccess(ProviderInfo.packageName, v1, v2);
	return 0;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","getCloudMediaProvider()Ljava/lang/String;","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
10 = checkcast <Application,Ljava/lang/String>9 <Application,Ljava/lang/String>,
monitorexit 6,
conditional branch(ne, to iindex=-1) 10,16,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(eq, to iindex=-1) 20,16,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
22 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 20,
conditional branch(eq, to iindex=-1) 24,16,
return 10,","depth : 0
public String getCloudMediaProvider(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mCloudMediaProviders.get(v2);
	ProviderInfo v4 = this.mPmInternal.resolveContentProvider(v3, 0, v2, v1);
	boolean v5 = this.mPmInternal.filterAppAccess(ProviderInfo.packageName, v1, v2);
	return v3;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","getCloudMediaProvider()Ljava/lang/String;","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
10 = checkcast <Application,Ljava/lang/String>9 <Application,Ljava/lang/String>,
monitorexit 6,
conditional branch(ne, to iindex=-1) 10,16,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(eq, to iindex=-1) 20,16,
return 16,","depth : 0
public String getCloudMediaProvider(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mCloudMediaProviders.get(v2);
	ProviderInfo v4 = this.mPmInternal.resolveContentProvider(v3, 0, v2, v1);
	return 0;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","isUserKeyUnlocked(I)Z","0","3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
monitorexit 3,
return 6,","depth : 0
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","isUserKeyUnlocked(I)Z","1","3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
return 5,
monitorexit 3,
return 6,","depth : 0
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 1
public boolean contains(int p1){
	boolean v1 = ArrayUtils.contains(this.users, p1);
	return v1;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","isAppIoBlocked(Ljava/lang/String;III)Z","0","7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isAppIoBlocked(I)Z > 1,3 @0 exception:6,
return 7,","depth : 0
public boolean isAppIoBlocked(String p1, int p2, int p3, int p4){
	boolean v1 = p0.isAppIoBlocked(p2);
	return v1;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","isAppIoBlocked(Ljava/lang/String;III)Z","1","7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isAppIoBlocked(I)Z > 1,3 @0 exception:6,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
5 = invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, isAppIoBlocked(I)Z > 3,2 @2 exception:4,
return 5,
return 7,","depth : 0
public boolean isAppIoBlocked(String p1, int p2, int p3, int p4){
	boolean v1 = p0.isAppIoBlocked(p2);
	return v1;
}
-----
depth : 1
public boolean isAppIoBlocked(int p1){
	boolean v1 = this.mStorageSessionController.isAppIoBlocked(p1);
	return v1;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","isAppIoBlocked(Ljava/lang/String;III)Z","2","7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isAppIoBlocked(I)Z > 1,3 @0 exception:6,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
5 = invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, isAppIoBlocked(I)Z > 3,2 @2 exception:4,
5 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
9 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>8 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 5,
conditional branch(eq, to iindex=-1) 9,14,
return 16,
return 5,
return 7,","depth : 0
public boolean isAppIoBlocked(String p1, int p2, int p3, int p4){
	boolean v1 = p0.isAppIoBlocked(p2);
	return v1;
}
-----
depth : 1
public boolean isAppIoBlocked(int p1){
	boolean v1 = this.mStorageSessionController.isAppIoBlocked(p1);
	return v1;
}
-----
depth : 2
public boolean isAppIoBlocked(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mConnections.get(v1);
	boolean v3 = v2.isAppIoBlocked(p1);
	return v3;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","isAppIoBlocked(Ljava/lang/String;III)Z","2","7 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isAppIoBlocked(I)Z > 1,3 @0 exception:6,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
5 = invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, isAppIoBlocked(I)Z > 3,2 @2 exception:4,
5 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
9 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>8 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 5,
conditional branch(eq, to iindex=-1) 9,14,
return 14,
return 5,
return 7,","depth : 0
public boolean isAppIoBlocked(String p1, int p2, int p3, int p4){
	boolean v1 = p0.isAppIoBlocked(p2);
	return v1;
}
-----
depth : 1
public boolean isAppIoBlocked(int p1){
	boolean v1 = this.mStorageSessionController.isAppIoBlocked(p1);
	return v1;
}
-----
depth : 2
public boolean isAppIoBlocked(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mConnections.get(v1);
	return 0;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","notifyAppIoResumed(Ljava/lang/String;III)V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoResumed(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
return,","depth : 0
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoResumed(p1, p2, p3, p4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","notifyAppIoResumed(Ljava/lang/String;III)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoResumed(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
8 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>11 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 8,
conditional branch(eq, to iindex=-1) 12,17,
invokevirtual < Application, Lcom/android/server/storage/StorageUserConnection, notifyAppIoResumed(Ljava/lang/String;III)V > 12,2,3,4,5 @18 exception:18,
return,
return,","depth : 0
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoResumed(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	int v1 = UserHandle.getUserId(p2);
	Object v2 = this.mConnections.get(v1);
	v2.notifyAppIoResumed(p1, p2, p3, p4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","notifyAppIoResumed(Ljava/lang/String;III)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoResumed(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
8 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>11 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 8,
conditional branch(eq, to iindex=-1) 12,17,
invokevirtual < Application, Lcom/android/server/storage/StorageUserConnection, notifyAppIoResumed(Ljava/lang/String;III)V > 12,2,3,4,5 @18 exception:18,
6 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mSessionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mUidsBlockedOnIo, <Application,Landroid/util/SparseArray> > 1,
13 = checkcast <Application,Ljava/lang/Integer>12 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 15,8,
17 = new <Application,Ljava/lang/StringBuilder>@24,
conditional branch(gt, to iindex=-1) 15,31,
38 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mUidsBlockedOnIo, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 25 to iindex = 12),
monitorexit 6,
return,
return,
return,","depth : 0
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoResumed(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	int v1 = UserHandle.getUserId(p2);
	Object v2 = this.mConnections.get(v1);
	v2.notifyAppIoResumed(p1, p2, p3, p4);
	return;
}
-----
depth : 2
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	Integer v1 = Integer.valueOf(0);
	Object v2 = this.mUidsBlockedOnIo.get(p2, v1);
	int v3 = v2.intValue();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Unexpected app IO resumption for uid: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""StorageUserConnection"", v7);
	this.mUidsBlockedOnIo.remove(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","notifyAppIoResumed(Ljava/lang/String;III)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoResumed(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
8 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>11 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 8,
conditional branch(eq, to iindex=-1) 12,17,
invokevirtual < Application, Lcom/android/server/storage/StorageUserConnection, notifyAppIoResumed(Ljava/lang/String;III)V > 12,2,3,4,5 @18 exception:18,
6 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mSessionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mUidsBlockedOnIo, <Application,Landroid/util/SparseArray> > 1,
13 = checkcast <Application,Ljava/lang/Integer>12 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 15,8,
17 = new <Application,Ljava/lang/StringBuilder>@24,
conditional branch(gt, to iindex=-1) 15,31,
32 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mUidsBlockedOnIo, <Application,Landroid/util/SparseArray> > 1,
34 = binaryop(add) 15 , 33,
monitorexit 6,
return,
return,
return,","depth : 0
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoResumed(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	int v1 = UserHandle.getUserId(p2);
	Object v2 = this.mConnections.get(v1);
	v2.notifyAppIoResumed(p1, p2, p3, p4);
	return;
}
-----
depth : 2
public void notifyAppIoResumed(String p1, int p2, int p3, int p4){
	Integer v1 = Integer.valueOf(0);
	Object v2 = this.mUidsBlockedOnIo.get(p2, v1);
	int v3 = v2.intValue();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Unexpected app IO resumption for uid: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""StorageUserConnection"", v7);
	Integer v9 = Integer.valueOf((v3 + -1));
	this.mUidsBlockedOnIo.put(p2, v9);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getDisks()[Landroid/os/storage/DiskInfo;","0","2 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mDisks, <Application,Landroid/util/ArrayMap> > 1,
6 = new <Application,[Landroid/os/storage/DiskInfo>@95 ,
17 = phi  16,7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mDisks, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 17,10,
monitorexit 2,
return 6,","depth : 0
public DiskInfo getDisks(){
	int v1 = this.mDisks.size();
	DiskInfo v1 = new DiskInfo(v1);
	int v2 = this.mDisks.size();
	return v1;
}
-----
","NONE"


"Lcom/android/server/StorageManagerService","fixateNewestUserKeyAuth(I)V","0","5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
8 = getCaughtException ,
return,","depth : 0
public void fixateNewestUserKeyAuth(int p1){
	int v2 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","fixateNewestUserKeyAuth(I)V","0","5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
8 = getCaughtException ,
return,","depth : 0
public void fixateNewestUserKeyAuth(int p1){
	this.mVold.fixateNewestUserKeyAuth(p1);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","fixateNewestUserKeyAuth(I)V","0","5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
goto (from iindex= 4 to iindex = 7),
return,","depth : 0
public void fixateNewestUserKeyAuth(int p1){
	this.mVold.fixateNewestUserKeyAuth(p1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","needsCheckpoint()Z","0","4 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 6,","depth : 0
public boolean needsCheckpoint(){
	boolean v2 = this.mVold.needsCheckpoint();
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","notifyAppIoBlocked(Ljava/lang/String;III)V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoBlocked(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
return,","depth : 0
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoBlocked(p1, p2, p3, p4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","notifyAppIoBlocked(Ljava/lang/String;III)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoBlocked(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
8 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>11 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 8,
conditional branch(eq, to iindex=-1) 12,17,
invokevirtual < Application, Lcom/android/server/storage/StorageUserConnection, notifyAppIoBlocked(Ljava/lang/String;III)V > 12,2,3,4,5 @18 exception:18,
return,
return,","depth : 0
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoBlocked(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	int v1 = UserHandle.getUserId(p2);
	Object v2 = this.mConnections.get(v1);
	v2.notifyAppIoBlocked(p1, p2, p3, p4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","notifyAppIoBlocked(Ljava/lang/String;III)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoBlocked(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
8 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>11 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 8,
conditional branch(eq, to iindex=-1) 12,17,
return,
return,","depth : 0
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoBlocked(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	int v1 = UserHandle.getUserId(p2);
	Object v2 = this.mConnections.get(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","notifyAppIoBlocked(Ljava/lang/String;III)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageSessionController, <Application,Lcom/android/server/storage/StorageSessionController> > 1,
invokevirtual < Application, Lcom/android/server/storage/StorageSessionController, notifyAppIoBlocked(Ljava/lang/String;III)V > 7,2,3,4,5 @5 exception:8,
8 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/storage/StorageSessionController, mConnections, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/storage/StorageUserConnection>11 <Application,Lcom/android/server/storage/StorageUserConnection>,
monitorexit 8,
conditional branch(eq, to iindex=-1) 12,17,
invokevirtual < Application, Lcom/android/server/storage/StorageUserConnection, notifyAppIoBlocked(Ljava/lang/String;III)V > 12,2,3,4,5 @18 exception:18,
6 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mSessionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mUidsBlockedOnIo, <Application,Landroid/util/SparseArray> > 1,
13 = checkcast <Application,Ljava/lang/Integer>12 <Application,Ljava/lang/Integer>,
16 = getfield < Application, Lcom/android/server/storage/StorageUserConnection, mUidsBlockedOnIo, <Application,Landroid/util/SparseArray> > 1,
18 = binaryop(add) 15 , 17,
monitorexit 6,
return,
return,
return,","depth : 0
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	p0.enforceExternalStorageService();
	this.mStorageSessionController.notifyAppIoBlocked(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	int v1 = UserHandle.getUserId(p2);
	Object v2 = this.mConnections.get(v1);
	v2.notifyAppIoBlocked(p1, p2, p3, p4);
	return;
}
-----
depth : 2
public void notifyAppIoBlocked(String p1, int p2, int p3, int p4){
	Integer v1 = Integer.valueOf(0);
	Object v2 = this.mUidsBlockedOnIo.get(p2, v1);
	int v3 = v2.intValue();
	Integer v4 = Integer.valueOf((v3 + 1));
	this.mUidsBlockedOnIo.put(p2, v4);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","destroyUserKey(I)V","0","5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
8 = getCaughtException ,
return,","depth : 0
public void destroyUserKey(int p1){
	int v2 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","destroyUserKey(I)V","0","5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
8 = getCaughtException ,
return,","depth : 0
public void destroyUserKey(int p1){
	this.mVold.destroyUserKey(p1);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","destroyUserKey(I)V","0","5 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
goto (from iindex= 4 to iindex = 7),
return,","depth : 0
public void destroyUserKey(int p1){
	this.mVold.destroyUserKey(p1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","startCheckpoint(I)V","0","goto (from iindex= 7 to iindex = 10),
12 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void startCheckpoint(int p1){
	this.mVold.startCheckpoint(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","startCheckpoint(I)V","0","12 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void startCheckpoint(int p1){
	this.mVold.startCheckpoint(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","startCheckpoint(I)V","0","12 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void startCheckpoint(int p1){
	this.mVold.startCheckpoint(p1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","lastMaintenance()J","0","2 = getfield < Application, Lcom/android/server/StorageManagerService, mLastMaintenance, <Primordial,J> > 1,
return 2,","depth : 0
public long lastMaintenance(){
	return this.mLastMaintenance;
}
-----
","NONE"


"Lcom/android/server/StorageManagerService","allocateBytes(Ljava/lang/String;JILjava/lang/String;)V","0","9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,4,7,5 @4 exception:8,
11 = binaryop(or) 9 , 10,
13 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,11,5 @10 exception:12,
14 = binaryop(lt) 3 , 13,
conditional branch(le, to iindex=-1) 14,15,
17 = binaryop(or) 9 , 16,
19 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,17,5 @20 exception:18,
20 = binaryop(add) 13 , 19,
21 = binaryop(lt) 3 , 20,
conditional branch(gt, to iindex=-1) 21,15,
goto (from iindex= 15 to iindex = 42),
48 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
49 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
52 = checkcast <Application,Landroid/os/storage/StorageManager>51 <Application,Landroid/os/storage/StorageManager>,
58 = binaryop(and) 9 , 57,
conditional branch(eq, to iindex=-1) 58,15,
goto (from iindex= 50 to iindex = -6),
63 = phi  60,62,
67 = binaryop(add) 3 , 63,
goto (from iindex= 47 to iindex = 6),
68 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return,","depth : 0
public void allocateBytes(String p1, long p2, int p3, String p4){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p3, v1, p4);
	long v3 = p0.getAllocatableBytes(p1, (v2 | 8), p4);
	long v4 = p0.getAllocatableBytes(p1, (v2 | 16), p4);
	Object v5 = this.mContext.getSystemService(StorageManage.class);
	long v6 = Binder.clearCallingIdentity();
	File v7 = v5.findPathForUuid(p1);
	long v8 = v5.getStorageLowBytes(v7);
	this.mPmInternal.freeStorage(p1, (p2 + phiInstruction), v2);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","allocateBytes(Ljava/lang/String;JILjava/lang/String;)V","1","9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,4,7,5 @4 exception:8,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
11 = binaryop(or) 9 , 10,
13 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,11,5 @10 exception:12,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
14 = binaryop(lt) 3 , 13,
conditional branch(le, to iindex=-1) 14,15,
17 = binaryop(or) 9 , 16,
19 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,17,5 @20 exception:18,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
20 = binaryop(add) 13 , 19,
21 = binaryop(lt) 3 , 20,
conditional branch(gt, to iindex=-1) 21,15,
goto (from iindex= 15 to iindex = 42),
48 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
49 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
52 = checkcast <Application,Landroid/os/storage/StorageManager>51 <Application,Landroid/os/storage/StorageManager>,
58 = binaryop(and) 9 , 57,
conditional branch(eq, to iindex=-1) 58,15,
goto (from iindex= 50 to iindex = -6),
63 = phi  60,62,
67 = binaryop(add) 3 , 63,
goto (from iindex= 47 to iindex = 6),
68 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return,","depth : 0
public void allocateBytes(String p1, long p2, int p3, String p4){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p3, v1, p4);
	long v3 = p0.getAllocatableBytes(p1, (v2 | 8), p4);
	long v4 = p0.getAllocatableBytes(p1, (v2 | 16), p4);
	Object v5 = this.mContext.getSystemService(StorageManage.class);
	long v6 = Binder.clearCallingIdentity();
	File v7 = v5.findPathForUuid(p1);
	long v8 = v5.getStorageLowBytes(v7);
	this.mPmInternal.freeStorage(p1, (p2 + phiInstruction), v2);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","allocateBytes(Ljava/lang/String;JILjava/lang/String;)V","1","9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,4,7,5 @4 exception:8,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
11 = binaryop(or) 9 , 10,
13 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,11,5 @10 exception:12,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
14 = binaryop(lt) 3 , 13,
conditional branch(le, to iindex=-1) 14,15,
17 = binaryop(or) 9 , 16,
19 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,17,5 @20 exception:18,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
20 = binaryop(add) 13 , 19,
21 = binaryop(lt) 3 , 20,
conditional branch(gt, to iindex=-1) 21,15,
goto (from iindex= 15 to iindex = 42),
48 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
49 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
52 = checkcast <Application,Landroid/os/storage/StorageManager>51 <Application,Landroid/os/storage/StorageManager>,
58 = binaryop(and) 9 , 57,
conditional branch(eq, to iindex=-1) 58,15,
63 = phi  60,62,
67 = binaryop(add) 3 , 63,
goto (from iindex= 47 to iindex = 6),
68 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return,","depth : 0
public void allocateBytes(String p1, long p2, int p3, String p4){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p3, v1, p4);
	long v3 = p0.getAllocatableBytes(p1, (v2 | 8), p4);
	long v4 = p0.getAllocatableBytes(p1, (v2 | 16), p4);
	Object v5 = this.mContext.getSystemService(StorageManage.class);
	long v6 = Binder.clearCallingIdentity();
	File v7 = v5.findPathForUuid(p1);
	long v8 = v5.getStorageFullBytes(v7);
	this.mPmInternal.freeStorage(p1, (p2 + phiInstruction), v2);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","allocateBytes(Ljava/lang/String;JILjava/lang/String;)V","2","9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,4,7,5 @4 exception:8,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
11 = binaryop(or) 9 , 10,
13 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,11,5 @10 exception:12,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
14 = binaryop(lt) 3 , 13,
conditional branch(le, to iindex=-1) 14,15,
17 = binaryop(or) 9 , 16,
19 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,17,5 @20 exception:18,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
20 = binaryop(add) 13 , 19,
21 = binaryop(lt) 3 , 20,
conditional branch(gt, to iindex=-1) 21,15,
goto (from iindex= 15 to iindex = 42),
48 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
49 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
52 = checkcast <Application,Landroid/os/storage/StorageManager>51 <Application,Landroid/os/storage/StorageManager>,
58 = binaryop(and) 9 , 57,
conditional branch(eq, to iindex=-1) 58,15,
goto (from iindex= 50 to iindex = -6),
63 = phi  60,62,
67 = binaryop(add) 3 , 63,
goto (from iindex= 47 to iindex = 6),
68 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return,","depth : 0
public void allocateBytes(String p1, long p2, int p3, String p4){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p3, v1, p4);
	long v3 = p0.getAllocatableBytes(p1, (v2 | 8), p4);
	long v4 = p0.getAllocatableBytes(p1, (v2 | 16), p4);
	Object v5 = this.mContext.getSystemService(StorageManage.class);
	long v6 = Binder.clearCallingIdentity();
	File v7 = v5.findPathForUuid(p1);
	long v8 = v5.getStorageLowBytes(v7);
	this.mPmInternal.freeStorage(p1, (p2 + phiInstruction), v2);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 2
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 2
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","allocateBytes(Ljava/lang/String;JILjava/lang/String;)V","2","9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,4,7,5 @4 exception:8,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
11 = binaryop(or) 9 , 10,
13 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,11,5 @10 exception:12,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
59 = binaryop(add) 33 , 54,
60 = binaryop(sub) 59 , 34,
return 62,
14 = binaryop(lt) 3 , 13,
conditional branch(le, to iindex=-1) 14,15,
17 = binaryop(or) 9 , 16,
19 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,17,5 @20 exception:18,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
20 = binaryop(add) 13 , 19,
21 = binaryop(lt) 3 , 20,
conditional branch(gt, to iindex=-1) 21,15,
goto (from iindex= 15 to iindex = 42),
48 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
49 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
52 = checkcast <Application,Landroid/os/storage/StorageManager>51 <Application,Landroid/os/storage/StorageManager>,
58 = binaryop(and) 9 , 57,
conditional branch(eq, to iindex=-1) 58,15,
goto (from iindex= 50 to iindex = -6),
63 = phi  60,62,
67 = binaryop(add) 3 , 63,
goto (from iindex= 47 to iindex = 6),
68 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return,","depth : 0
public void allocateBytes(String p1, long p2, int p3, String p4){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p3, v1, p4);
	long v3 = p0.getAllocatableBytes(p1, (v2 | 8), p4);
	long v4 = p0.getAllocatableBytes(p1, (v2 | 16), p4);
	Object v5 = this.mContext.getSystemService(StorageManage.class);
	long v6 = Binder.clearCallingIdentity();
	File v7 = v5.findPathForUuid(p1);
	long v8 = v5.getStorageLowBytes(v7);
	this.mPmInternal.freeStorage(p1, (p2 + phiInstruction), v2);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 2
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 2
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","allocateBytes(Ljava/lang/String;JILjava/lang/String;)V","2","9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,4,7,5 @4 exception:8,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
11 = binaryop(or) 9 , 10,
13 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,11,5 @10 exception:12,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,
14 = binaryop(lt) 3 , 13,
conditional branch(le, to iindex=-1) 14,15,
17 = binaryop(or) 9 , 16,
19 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J > 1,2,17,5 @20 exception:18,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
59 = binaryop(add) 33 , 54,
60 = binaryop(sub) 59 , 34,
return 62,
20 = binaryop(add) 13 , 19,
21 = binaryop(lt) 3 , 20,
conditional branch(gt, to iindex=-1) 21,15,
goto (from iindex= 15 to iindex = 42),
48 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
49 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
52 = checkcast <Application,Landroid/os/storage/StorageManager>51 <Application,Landroid/os/storage/StorageManager>,
58 = binaryop(and) 9 , 57,
conditional branch(eq, to iindex=-1) 58,15,
goto (from iindex= 50 to iindex = -6),
63 = phi  60,62,
67 = binaryop(add) 3 , 63,
goto (from iindex= 47 to iindex = 6),
68 = getfield < Application, Lcom/android/server/StorageManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return,","depth : 0
public void allocateBytes(String p1, long p2, int p3, String p4){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p3, v1, p4);
	long v3 = p0.getAllocatableBytes(p1, (v2 | 8), p4);
	long v4 = p0.getAllocatableBytes(p1, (v2 | 16), p4);
	Object v5 = this.mContext.getSystemService(StorageManage.class);
	long v6 = Binder.clearCallingIdentity();
	File v7 = v5.findPathForUuid(p1);
	long v8 = v5.getStorageLowBytes(v7);
	this.mPmInternal.freeStorage(p1, (p2 + phiInstruction), v2);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 2
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
depth : 1
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 2
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getCacheSizeBytes(Ljava/lang/String;I)J","0","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/lang/String;I)Landroid/app/usage/StorageStats; > 18,2,3 @29 exception:19,
22 = invokevirtual < Application, Landroid/app/usage/StorageStats, getCacheBytes()J > 20 @33 exception:21,
return 22,","depth : 0
public long getCacheSizeBytes(String p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	StorageStats v5 = v4.queryStatsForUid(p1, p2);
	long v6 = v5.getCacheBytes();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getCacheSizeBytes(Ljava/lang/String;I)J","1","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/lang/String;I)Landroid/app/usage/StorageStats; > 18,2,3 @29 exception:19,
7 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/util/UUID;I)Landroid/app/usage/StorageStats; > 1,5,3 @4 exception:6,
return 7,
22 = invokevirtual < Application, Landroid/app/usage/StorageStats, getCacheBytes()J > 20 @33 exception:21,
2 = getfield < Application, Landroid/app/usage/StorageStats, cacheBytes, <Primordial,J> > 1,
return 2,
return 22,","depth : 0
public long getCacheSizeBytes(String p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	StorageStats v5 = v4.queryStatsForUid(p1, p2);
	long v6 = v5.getCacheBytes();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
depth : 1
public StorageStats queryStatsForUid(String p1, int p2){
	UUID v1 = StorageManager.convert(p1);
	StorageStats v2 = p0.queryStatsForUid(v1, p2);
	return v2;
}
-----
depth : 1
public long getCacheBytes(){
	return this.cacheBytes;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getCacheSizeBytes(Ljava/lang/String;I)J","1","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/lang/String;I)Landroid/app/usage/StorageStats; > 18,2,3 @29 exception:19,
7 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/util/UUID;I)Landroid/app/usage/StorageStats; > 1,5,3 @4 exception:6,
return 7,
22 = invokevirtual < Application, Landroid/app/usage/StorageStats, getCacheBytes()J > 20 @33 exception:21,
2 = getfield < Application, Landroid/app/usage/StorageStats, cacheBytes, <Primordial,J> > 1,
return 2,
return 22,","depth : 0
public long getCacheSizeBytes(String p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	Object v3 = this.mContext.getSystemService(StorageStatsManage.class);
	StorageStats v4 = v3.queryStatsForUid(p1, p2);
	long v5 = v4.getCacheBytes();
	Binder.restoreCallingIdentity(v2);
	return v5;
}
-----
depth : 1
public StorageStats queryStatsForUid(String p1, int p2){
	UUID v1 = StorageManager.convert(p1);
	StorageStats v2 = p0.queryStatsForUid(v1, p2);
	return v2;
}
-----
depth : 1
public long getCacheBytes(){
	return this.cacheBytes;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getCacheSizeBytes(Ljava/lang/String;I)J","2","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/lang/String;I)Landroid/app/usage/StorageStats; > 18,2,3 @29 exception:19,
7 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/util/UUID;I)Landroid/app/usage/StorageStats; > 1,5,3 @4 exception:6,
4 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
7 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 11,
return 7,
22 = invokevirtual < Application, Landroid/app/usage/StorageStats, getCacheBytes()J > 20 @33 exception:21,
return 22,","depth : 0
public long getCacheSizeBytes(String p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	StorageStats v5 = v4.queryStatsForUid(p1, p2);
	long v6 = v5.getCacheBytes();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
depth : 1
public StorageStats queryStatsForUid(String p1, int p2){
	UUID v1 = StorageManager.convert(p1);
	StorageStats v2 = p0.queryStatsForUid(v1, p2);
	return v2;
}
-----
depth : 2
public StorageStats queryStatsForUid(UUID p1, int p2){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	StorageStats v3 = this.mService.queryStatsForUid(v1, p2, v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getCacheSizeBytes(Ljava/lang/String;I)J","2","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/lang/String;I)Landroid/app/usage/StorageStats; > 18,2,3 @29 exception:19,
7 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, queryStatsForUid(Ljava/util/UUID;I)Landroid/app/usage/StorageStats; > 1,5,3 @4 exception:6,
4 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
7 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 11,
return 7,
22 = invokevirtual < Application, Landroid/app/usage/StorageStats, getCacheBytes()J > 20 @33 exception:21,
return 22,","depth : 0
public long getCacheSizeBytes(String p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	Object v3 = this.mContext.getSystemService(StorageStatsManage.class);
	StorageStats v4 = v3.queryStatsForUid(p1, p2);
	long v5 = v4.getCacheBytes();
	Binder.restoreCallingIdentity(v2);
	return v5;
}
-----
depth : 1
public StorageStats queryStatsForUid(String p1, int p2){
	UUID v1 = StorageManager.convert(p1);
	StorageStats v2 = p0.queryStatsForUid(v1, p2);
	return v2;
}
-----
depth : 2
public StorageStats queryStatsForUid(UUID p1, int p2){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	StorageStats v3 = this.mService.queryStatsForUid(v1, p2, v2);
	return v3;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","runMaintenance()V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, runIdleMaintenance(Ljava/lang/Runnable;)V > 1,4 @6 exception:5,
return,","depth : 0
public void runMaintenance(){
	p0.runIdleMaintenance(0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","runMaintenance()V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, runIdleMaintenance(Ljava/lang/Runnable;)V > 1,4 @6 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
return,
return,","depth : 0
public void runMaintenance(){
	p0.runIdleMaintenance(0);
	return;
}
-----
depth : 1
public void runIdleMaintenance(Runnable p1){
	Message v1 = this.mHandler.obtainMessage(4, p1);
	boolean v2 = this.mHandler.sendMessage(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","supportsCheckpoint()Z","0","2 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return 4,","depth : 0
public boolean supportsCheckpoint(){
	boolean v1 = this.mVold.supportsCheckpoint();
	return v1;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","setCloudMediaProvider(Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:3,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Ljava/lang/String>11 <Application,Ljava/lang/String>,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
18 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 21 @42 exception:22,
monitorexit 8,
return,","depth : 0
public void setCloudMediaProvider(String p1){
	p0.enforceExternalStorageService();
	int v2 = Binder.getCallingUid();
	int v3 = UserHandle.getUserId(v2);
	Object v4 = this.mCloudMediaProviders.get(v3);
	boolean v5 = Objects.equals(p1, v4);
	this.mCloudMediaProviders.put(v3, p1);
	Message v7 = this.mHandler.obtainMessage(16, v3, 0, p1);
	v7.sendToTarget();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setCloudMediaProvider(Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceExternalStorageService()V > 1 @0 exception:3,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mCloudMediaProviders, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Ljava/lang/String>11 <Application,Ljava/lang/String>,
conditional branch(ne, to iindex=-1) 14,15,
monitorexit 8,
return,","depth : 0
public void setCloudMediaProvider(String p1){
	p0.enforceExternalStorageService();
	int v2 = Binder.getCallingUid();
	int v3 = UserHandle.getUserId(v2);
	Object v4 = this.mCloudMediaProviders.get(v3);
	boolean v5 = Objects.equals(p1, v4);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","commitChanges()V","0","8 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
return,","depth : 0
public void commitChanges(){
	this.mVold.commitChanges();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","forgetVolume(Ljava/lang/String;)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
monitorexit 7,
return,","depth : 0
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetVolume(Ljava/lang/String;)V","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, notifyVolumeForgotten(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
conditional branch(eq, to iindex=-1) 5,3,
6 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
return 6,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
monitorexit 7,
return,","depth : 0
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
depth : 1
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 1
public String getDefaultPrimaryStorageUuid(){
	boolean v1 = SystemProperties.getBoolean(""ro.vold.primary_physical"", 0);
	return StorageManager.UUID_PRIVATE_INTERNAL;
}
-----
depth : 1
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetVolume(Ljava/lang/String;)V","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, notifyVolumeForgotten(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
conditional branch(eq, to iindex=-1) 5,3,
return 7,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
monitorexit 7,
return,","depth : 0
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
depth : 1
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 1
public String getDefaultPrimaryStorageUuid(){
	boolean v1 = SystemProperties.getBoolean(""ro.vold.primary_physical"", 0);
	return ""primary_physical"";
}
-----
depth : 1
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetVolume(Ljava/lang/String;)V","2","7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, notifyVolumeForgotten(Ljava/lang/String;)V > 1,2 @0 exception:3,
putfield 4.< Application, Lcom/android/internal/os/SomeArgs, arg1, <Application,Ljava/lang/Object> > = 2,
return,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
monitorexit 7,
return,","depth : 0
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v9 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v9;
	Message v10 = this.mHandler.obtainMessage(10);
	v10.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
depth : 1
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 2
public void notifyVolumeForgotten(String p1){
	SomeArgs v1 = SomeArgs.obtain();
	SomeArgs.arg1 = p1;
	Message v2 = p0.obtainMessage(4, v1);
	v2.sendToTarget();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetVolume(Ljava/lang/String;)V","2","7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, notifyVolumeForgotten(Ljava/lang/String;)V > 1,2 @0 exception:3,
putfield 4.< Application, Lcom/android/internal/os/SomeArgs, arg1, <Application,Ljava/lang/Object> > = 2,
return,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
31 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @53 exception:30,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 31,
32 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 35 @67 exception:36,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
monitorexit 7,
return,","depth : 0
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v6 = Objects.equals(this.mPrimaryStorageUuid, p1);
	String v7 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v7;
	Message v8 = this.mHandler.obtainMessage(10);
	v8.sendToTarget();
	p0.writeSettingsLocked();
	return;
}
-----
depth : 1
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 2
public void notifyVolumeForgotten(String p1){
	SomeArgs v1 = SomeArgs.obtain();
	SomeArgs.arg1 = p1;
	Message v2 = p0.obtainMessage(4, v1);
	v2.sendToTarget();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetVolume(Ljava/lang/String;)V","2","7 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
11 = checkcast <Application,Landroid/os/storage/VolumeRecord>10 <Application,Landroid/os/storage/VolumeRecord>,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/os/storage/VolumeRecord, partGuid, <Application,Ljava/lang/String> > 11,
15 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @23 exception:14,
conditional branch(ne, to iindex=-1) 15,12,
16 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 19 @37 exception:20,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeForgotten(Lcom/android/server/StorageManagerService$Callbacks;Ljava/lang/String;)V > 25,2 @42 exception:26,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, notifyVolumeForgotten(Ljava/lang/String;)V > 1,2 @0 exception:3,
putfield 4.< Application, Lcom/android/internal/os/SomeArgs, arg1, <Application,Ljava/lang/Object> > = 2,
return,
return,
27 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(eq, to iindex=-1) 29,12,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @70 exception:41,
monitorexit 7,
return,","depth : 0
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
	Message v5 = this.mHandler.obtainMessage(9, v3);
	v5.sendToTarget();
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
	boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
	p0.writeSettingsLocked();
	return;
}
-----
depth : 1
public void -$$Nest$mnotifyVolumeForgotten(StorageManagerService$Callbacks p1, String p2){
	p1.notifyVolumeForgotten(p2);
	return;
}
-----
depth : 2
public void notifyVolumeForgotten(String p1){
	SomeArgs v1 = SomeArgs.obtain();
	SomeArgs.arg1 = p1;
	Message v2 = p0.obtainMessage(4, v1);
	v2.sendToTarget();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","partitionPublic(Ljava/lang/String;)V","0","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @5 exception:5,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,6,11,12 @22 exception:13,
17 = getCaughtException ,
return,","depth : 0
public void partitionPublic(String p1){
	CountDownLatch v2 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 0, -1);
	p0.waitForLatch(v2, ""partitionPublic"", 180000);
	int v5 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionPublic(Ljava/lang/String;)V","1","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Ljava/util/concurrent/CountDownLatch>6 <Application,Ljava/util/concurrent/CountDownLatch>,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/concurrent/CountDownLatch>@13,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  7,9,
monitorexit 3,
return 15,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,6,11,12 @22 exception:13,
8 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @4 exception:7,
10 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
conditional branch(eq, to iindex=-1) 12,13,
return,
17 = getCaughtException ,
return,","depth : 0
public void partitionPublic(String p1){
	CountDownLatch v2 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 0, -1);
	p0.waitForLatch(v2, ""partitionPublic"", 180000);
	int v5 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public CountDownLatch findOrCreateDiskScanLatch(String p1){
	Object v1 = this.mDiskScanLatches.get(p1);
	CountDownLatch v1 = new CountDownLatch(1);
	Object v3 = this.mDiskScanLatches.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public void waitForLatch(CountDownLatch p1, String p2, long p3){
	long v1 = SystemClock.elapsedRealtime();
	boolean v2 = p1.await(5000, TimeUnit.MILLISECONDS);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionPublic(Ljava/lang/String;)V","1","6 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Ljava/util/concurrent/CountDownLatch>6 <Application,Ljava/util/concurrent/CountDownLatch>,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/concurrent/CountDownLatch>@13,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  7,9,
monitorexit 3,
return 15,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,6,11,12 @22 exception:13,
8 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @4 exception:7,
10 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
conditional branch(eq, to iindex=-1) 12,13,
return,
goto (from iindex= 11 to iindex = 7),
return,","depth : 0
public void partitionPublic(String p1){
	CountDownLatch v2 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 0, -1);
	p0.waitForLatch(v2, ""partitionPublic"", 180000);
	return;
}
-----
depth : 1
public CountDownLatch findOrCreateDiskScanLatch(String p1){
	Object v1 = this.mDiskScanLatches.get(p1);
	CountDownLatch v1 = new CountDownLatch(1);
	Object v3 = this.mDiskScanLatches.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public void waitForLatch(CountDownLatch p1, String p2, long p3){
	long v1 = SystemClock.elapsedRealtime();
	boolean v2 = p1.await(5000, TimeUnit.MILLISECONDS);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getVolumes(I)[Landroid/os/storage/VolumeInfo;","0","3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = new <Application,[Landroid/os/storage/VolumeInfo>@96 ,
18 = phi  17,8,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 18,11,
monitorexit 3,
return 7,","depth : 0
public VolumeInfo getVolumes(int p1){
	int v1 = this.mVolumes.size();
	VolumeInfo v1 = new VolumeInfo(v1);
	int v2 = this.mVolumes.size();
	return v1;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","forgetAllVolumes()V","0","4 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
33 = phi  32,5,
6 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,8,
35 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
37 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
38 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 40,5,
42 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @75 exception:41,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 42,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @81 exception:46,
47 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 50 @92 exception:51,
monitorexit 4,
return,","depth : 0
public void forgetAllVolumes(){
	int v2 = this.mRecords.size();
	this.mRecords.clear();
	boolean v4 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, this.mPrimaryStorageUuid);
	String v5 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v5;
	p0.writeSettingsLocked();
	Message v7 = this.mHandler.obtainMessage(10);
	v7.sendToTarget();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetAllVolumes()V","0","4 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
33 = phi  32,5,
6 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,8,
35 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
37 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
38 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 40,5,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @81 exception:46,
47 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 50 @92 exception:51,
monitorexit 4,
return,","depth : 0
public void forgetAllVolumes(){
	int v2 = this.mRecords.size();
	this.mRecords.clear();
	boolean v4 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, this.mPrimaryStorageUuid);
	p0.writeSettingsLocked();
	Message v6 = this.mHandler.obtainMessage(10);
	v6.sendToTarget();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetAllVolumes()V","1","4 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
33 = phi  32,5,
6 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,8,
35 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
37 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
38 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 40,5,
42 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @75 exception:41,
conditional branch(eq, to iindex=-1) 5,3,
return 7,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 42,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @81 exception:46,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
47 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 50 @92 exception:51,
monitorexit 4,
return,","depth : 0
public void forgetAllVolumes(){
	int v2 = this.mRecords.size();
	this.mRecords.clear();
	boolean v4 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, this.mPrimaryStorageUuid);
	String v5 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v5;
	p0.writeSettingsLocked();
	Message v7 = this.mHandler.obtainMessage(10);
	v7.sendToTarget();
	return;
}
-----
depth : 1
public String getDefaultPrimaryStorageUuid(){
	boolean v1 = SystemProperties.getBoolean(""ro.vold.primary_physical"", 0);
	return ""primary_physical"";
}
-----
depth : 1
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetAllVolumes()V","1","4 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
33 = phi  32,5,
6 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,8,
35 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
37 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
38 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 40,5,
42 = invokevirtual < Application, Lcom/android/server/StorageManagerService, getDefaultPrimaryStorageUuid()Ljava/lang/String; > 1 @75 exception:41,
conditional branch(eq, to iindex=-1) 5,3,
6 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
return 6,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 42,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @81 exception:46,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
47 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 50 @92 exception:51,
monitorexit 4,
return,","depth : 0
public void forgetAllVolumes(){
	int v2 = this.mRecords.size();
	this.mRecords.clear();
	boolean v4 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, this.mPrimaryStorageUuid);
	String v5 = p0.getDefaultPrimaryStorageUuid();
	this.mPrimaryStorageUuid = v5;
	p0.writeSettingsLocked();
	Message v7 = this.mHandler.obtainMessage(10);
	v7.sendToTarget();
	return;
}
-----
depth : 1
public String getDefaultPrimaryStorageUuid(){
	boolean v1 = SystemProperties.getBoolean(""ro.vold.primary_physical"", 0);
	return StorageManager.UUID_PRIVATE_INTERNAL;
}
-----
depth : 1
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","forgetAllVolumes()V","1","4 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
33 = phi  32,5,
6 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,8,
35 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
37 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
38 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 40,5,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @81 exception:46,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
47 = getfield < Application, Lcom/android/server/StorageManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 50 @92 exception:51,
monitorexit 4,
return,","depth : 0
public void forgetAllVolumes(){
	int v2 = this.mRecords.size();
	this.mRecords.clear();
	boolean v4 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, this.mPrimaryStorageUuid);
	p0.writeSettingsLocked();
	Message v6 = this.mHandler.obtainMessage(10);
	v6.sendToTarget();
	return;
}
-----
depth : 1
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J","0","8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,","depth : 0
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J","1","8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/util/UUID;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/util/UUID;)J > 1,4 @4 exception:5,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,","depth : 0
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 1
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J","1","8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/util/UUID;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/util/UUID;)J > 1,4 @4 exception:5,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
59 = binaryop(add) 33 , 54,
60 = binaryop(sub) 59 , 34,
return 62,","depth : 0
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 1
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J","2","8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/util/UUID;)Z > 1,4 @4 exception:5,
3 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
6 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 10,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/util/UUID;)J > 1,4 @4 exception:5,
3 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
6 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 10,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,","depth : 0
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public boolean isQuotaSupported(UUID p1){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	boolean v3 = this.mService.isQuotaSupported(v1, v2);
	return v3;
}
-----
depth : 1
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(UUID p1){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	long v3 = this.mService.getCacheBytes(v1, v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J","2","8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
6 = binaryop(and) 2 , 5,
conditional branch(eq, to iindex=-1) 6,8,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/util/UUID;)Z > 1,4 @4 exception:5,
3 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
6 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 10,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/util/UUID;)J > 1,4 @4 exception:5,
3 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
6 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 10,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
59 = binaryop(add) 33 , 54,
60 = binaryop(sub) 59 , 34,
return 62,","depth : 0
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v1 = this.mContext.getSystemService(AppOpsManage.class);
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = v1.isOperationActive(26, p2, p3);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""UID "");
	StringBuilder v6 = v3.append(p2);
	StringBuilder v7 = v3.append("" is actively using camera; letting them defy reserved cached data"");
	String v8 = v3.toString();
	int v9 = Slog.d(""StorageManagerService"", v8);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public boolean isQuotaSupported(UUID p1){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	boolean v3 = this.mService.isQuotaSupported(v1, v2);
	return v3;
}
-----
depth : 1
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(UUID p1){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	long v3 = this.mService.getCacheBytes(v1, v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J","2","8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, adjustAllocateFlags(IILjava/lang/String;)I > 1,3,6,4 @4 exception:7,
14 = binaryop(and) 2 , 13,
16 = binaryop(and) 14 , 15,
17 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
21 = checkcast <Application,Landroid/app/AppOpsManager>20 <Application,Landroid/app/AppOpsManager>,
conditional branch(eq, to iindex=-1) 26,8,
27 = new <Application,Ljava/lang/StringBuilder>@39,
49 = binaryop(or) 16 , 48,
51 = phi  16,49,
return 51,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
10 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
13 = checkcast <Application,Landroid/os/storage/StorageManager>12 <Application,Landroid/os/storage/StorageManager>,
14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
24 = binaryop(and) 8 , 23,
conditional branch(ne, to iindex=-1) 24,26,
goto (from iindex= 27 to iindex = 4),
33 = phi  28,25,
34 = phi  30,25,
35 = phi  32,25,
39 = binaryop(and) 8 , 38,
conditional branch(ne, to iindex=-1) 39,26,
41 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/lang/String;)Z > 18,2 @62 exception:40,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, isQuotaSupported(Ljava/util/UUID;)Z > 1,4 @4 exception:5,
3 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
6 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 10,
return 6,
conditional branch(eq, to iindex=-1) 41,26,
46 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/lang/String;)J > 18,2 @68 exception:45,
6 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheBytes(Ljava/util/UUID;)J > 1,4 @4 exception:5,
3 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
6 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 10,
return 6,
49 = binaryop(sub) 46 , 48,
goto (from iindex= 43 to iindex = 2),
54 = phi  51,25,
58 = binaryop(and) 8 , 57,
conditional branch(eq, to iindex=-1) 58,26,
64 = binaryop(add) 33 , 54,
65 = binaryop(sub) 64 , 35,
return 67,","depth : 0
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = p0.adjustAllocateFlags(p2, v1, p3);
	Object v3 = this.mContext.getSystemService(StorageManage.class);
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = Binder.clearCallingIdentity();
	File v6 = v3.findPathForUuid(p1);
	long v7 = v6.getUsableSpace();
	long v8 = v3.getStorageLowBytes(v6);
	long v9 = v3.getStorageFullBytes(v6);
	boolean v10 = v4.isQuotaSupported(p1);
	long v11 = v4.getCacheBytes(p1);
	long v12 = v3.getStorageCacheBytes(v6, v2);
	long v13 = Math.max(0, (v11 - v12));
	long v14 = Math.max(0, ((phiInstruction + phiInstruction) - phiInstruction));
	Binder.restoreCallingIdentity(v5);
	return v14;
}
-----
depth : 1
public int adjustAllocateFlags(int p1, int p2, String p3){
	Object v2 = this.mContext.getSystemService(AppOpsManage.class);
	long v3 = Binder.clearCallingIdentity();
	boolean v4 = v2.isOperationActive(26, p2, p3);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""UID "");
	StringBuilder v7 = v4.append(p2);
	StringBuilder v8 = v4.append("" is actively using camera; letting them defy reserved cached data"");
	String v9 = v4.toString();
	int v10 = Slog.d(""StorageManagerService"", v9);
	Binder.restoreCallingIdentity(v3);
	return phiInstruction;
}
-----
depth : 1
public boolean isQuotaSupported(String p1){
	UUID v1 = StorageManager.convert(p1);
	boolean v2 = p0.isQuotaSupported(v1);
	return v2;
}
-----
depth : 2
public boolean isQuotaSupported(UUID p1){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	boolean v3 = this.mService.isQuotaSupported(v1, v2);
	return v3;
}
-----
depth : 1
public long getCacheBytes(String p1){
	UUID v1 = StorageManager.convert(p1);
	long v2 = p0.getCacheBytes(v1);
	return v2;
}
-----
depth : 2
public long getCacheBytes(UUID p1){
	String v1 = StorageManager.convert(p1);
	String v2 = this.mContext.getOpPackageName();
	long v3 = this.mService.getCacheBytes(v1, v2);
	return v3;
}
-----
","SYS_OR_SIG"


"Lcom/android/server/StorageManagerService","getExternalStorageMountMode(ILjava/lang/String;)I","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, getExternalStorageMountMode(ILjava/lang/String;)I > 6,2,3 @7 exception:7,
return 8,","depth : 0
public int getExternalStorageMountMode(int p1, String p2){
	int v2 = this.mStorageManagerInternal.getExternalStorageMountMode(p1, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getExternalStorageMountMode(ILjava/lang/String;)I","1","6 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, getExternalStorageMountMode(ILjava/lang/String;)I > 6,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
6 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$mgetMountModeInternal(Lcom/android/server/StorageManagerService;ILjava/lang/String;)I > 4,2,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$sfgetLOCAL_LOGV()Z > @6 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = new <Application,Ljava/lang/StringBuilder>@12,
return 6,
return 8,","depth : 0
public int getExternalStorageMountMode(int p1, String p2){
	int v2 = this.mStorageManagerInternal.getExternalStorageMountMode(p1, p2);
	return v2;
}
-----
depth : 1
public int getExternalStorageMountMode(int p1, String p2){
	int v1 = StorageManagerService.-$$Nest$mgetMountModeInternal(this.this$0, p1, p2);
	boolean v2 = StorageManagerService.-$$Nest$sfgetLOCAL_LOGV();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Resolved mode "");
	StringBuilder v5 = v2.append(v1);
	StringBuilder v6 = v2.append("" for "");
	StringBuilder v7 = v2.append(p2);
	StringBuilder v8 = v2.append(""/"");
	String v9 = UserHandle.formatUid(p1);
	StringBuilder v10 = v2.append(v9);
	String v11 = v2.toString();
	int v12 = Slog.v(""StorageManagerService"", v11);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getExternalStorageMountMode(ILjava/lang/String;)I","1","6 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, getExternalStorageMountMode(ILjava/lang/String;)I > 6,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
6 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$mgetMountModeInternal(Lcom/android/server/StorageManagerService;ILjava/lang/String;)I > 4,2,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$sfgetLOCAL_LOGV()Z > @6 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
return 6,
return 8,","depth : 0
public int getExternalStorageMountMode(int p1, String p2){
	int v2 = this.mStorageManagerInternal.getExternalStorageMountMode(p1, p2);
	return v2;
}
-----
depth : 1
public int getExternalStorageMountMode(int p1, String p2){
	int v1 = StorageManagerService.-$$Nest$mgetMountModeInternal(this.this$0, p1, p2);
	boolean v2 = StorageManagerService.-$$Nest$sfgetLOCAL_LOGV();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getExternalStorageMountMode(ILjava/lang/String;)I","2","6 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, getExternalStorageMountMode(ILjava/lang/String;)I > 6,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
6 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$mgetMountModeInternal(Lcom/android/server/StorageManagerService;ILjava/lang/String;)I > 4,2,3 @2 exception:5,
return 5,
8 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$sfgetLOCAL_LOGV()Z > @6 exception:7,
1 = getstatic < Application, Lcom/android/server/StorageManagerService, LOCAL_LOGV, <Primordial,Z> >,
return 1,
conditional branch(eq, to iindex=-1) 8,9,
10 = new <Application,Ljava/lang/StringBuilder>@12,
return 6,
return 8,","depth : 0
public int getExternalStorageMountMode(int p1, String p2){
	int v2 = this.mStorageManagerInternal.getExternalStorageMountMode(p1, p2);
	return v2;
}
-----
depth : 1
public int getExternalStorageMountMode(int p1, String p2){
	int v1 = StorageManagerService.-$$Nest$mgetMountModeInternal(this.this$0, p1, p2);
	boolean v2 = StorageManagerService.-$$Nest$sfgetLOCAL_LOGV();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Resolved mode "");
	StringBuilder v5 = v2.append(v1);
	StringBuilder v6 = v2.append("" for "");
	StringBuilder v7 = v2.append(p2);
	StringBuilder v8 = v2.append(""/"");
	String v9 = UserHandle.formatUid(p1);
	StringBuilder v10 = v2.append(v9);
	String v11 = v2.toString();
	int v12 = Slog.v(""StorageManagerService"", v11);
	return v1;
}
-----
depth : 2
public int -$$Nest$mgetMountModeInternal(StorageManagerService p1, int p2, String p3){
	int v1 = p1.getMountModeInternal(p2, p3);
	return v1;
}
-----
depth : 2
public boolean -$$Nest$sfgetLOCAL_LOGV(){
	return this.LOCAL_LOGV;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getExternalStorageMountMode(ILjava/lang/String;)I","2","6 = getfield < Application, Lcom/android/server/StorageManagerService, mStorageManagerInternal, <Application,Lcom/android/server/StorageManagerService$StorageManagerInternalImpl> > 1,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, getExternalStorageMountMode(ILjava/lang/String;)I > 6,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/StorageManagerService$StorageManagerInternalImpl, this$0, <Application,Lcom/android/server/StorageManagerService> > 1,
6 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$mgetMountModeInternal(Lcom/android/server/StorageManagerService;ILjava/lang/String;)I > 4,2,3 @2 exception:5,
return 5,
8 = invokestatic < Application, Lcom/android/server/StorageManagerService, -$$Nest$sfgetLOCAL_LOGV()Z > @6 exception:7,
1 = getstatic < Application, Lcom/android/server/StorageManagerService, LOCAL_LOGV, <Primordial,Z> >,
return 1,
conditional branch(eq, to iindex=-1) 8,9,
return 6,
return 8,","depth : 0
public int getExternalStorageMountMode(int p1, String p2){
	int v2 = this.mStorageManagerInternal.getExternalStorageMountMode(p1, p2);
	return v2;
}
-----
depth : 1
public int getExternalStorageMountMode(int p1, String p2){
	int v1 = StorageManagerService.-$$Nest$mgetMountModeInternal(this.this$0, p1, p2);
	boolean v2 = StorageManagerService.-$$Nest$sfgetLOCAL_LOGV();
	return v1;
}
-----
depth : 2
public int -$$Nest$mgetMountModeInternal(StorageManagerService p1, int p2, String p3){
	int v1 = p1.getMountModeInternal(p2, p3);
	return v1;
}
-----
depth : 2
public boolean -$$Nest$sfgetLOCAL_LOGV(){
	return this.LOCAL_LOGV;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getPrimaryStorageUuid()Ljava/lang/String;","0","2 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
monitorexit 2,
return 3,","depth : 0
public String getPrimaryStorageUuid(){
	return this.mPrimaryStorageUuid;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","addUserKeyAuth(II[B)V","0","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @7 exception:8,
13 = getCaughtException ,
return,","depth : 0
public void addUserKeyAuth(int p1, int p2, byte[] p3){
	String v2 = p0.encodeBytes(p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","addUserKeyAuth(II[B)V","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @7 exception:8,
conditional branch(eq, to iindex=-1) 4,5,
return 8,
13 = getCaughtException ,
return,","depth : 0
public void addUserKeyAuth(int p1, int p2, byte[] p3){
	String v2 = p0.encodeBytes(p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public String encodeBytes(byte[] p1){
	boolean v1 = ArrayUtils.isEmpty(p1);
	return ""!"";
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","addUserKeyAuth(II[B)V","1","7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
9 = invokevirtual < Application, Lcom/android/server/StorageManagerService, encodeBytes([B)Ljava/lang/String; > 1,4 @7 exception:8,
conditional branch(eq, to iindex=-1) 4,5,
return 7,
13 = getCaughtException ,
return,","depth : 0
public void addUserKeyAuth(int p1, int p2, byte[] p3){
	String v2 = p0.encodeBytes(p3);
	int v3 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public String encodeBytes(byte[] p1){
	boolean v1 = ArrayUtils.isEmpty(p1);
	String v2 = HexDump.toHexString(p1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","unregisterListener(Landroid/os/storage/IStorageEventListener;)V","0","3 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, unregister(Landroid/os/storage/IStorageEventListener;)V > 3,2 @2 exception:4,
return,","depth : 0
public void unregisterListener(IStorageEventListener p1){
	this.mCallbacks.unregister(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","unregisterListener(Landroid/os/storage/IStorageEventListener;)V","1","3 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$Callbacks, unregister(Landroid/os/storage/IStorageEventListener;)V > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/StorageManagerService$Callbacks, mCallbacks, <Application,Landroid/os/RemoteCallbackList> > 1,
5 = invokevirtual < Application, Landroid/os/RemoteCallbackList, unregister(Landroid/os/IInterface;)Z > 3,2 @2 exception:4,
return,
return,","depth : 0
public void unregisterListener(IStorageEventListener p1){
	this.mCallbacks.unregister(p1);
	return;
}
-----
depth : 1
public void unregister(IStorageEventListener p1){
	boolean v1 = this.mCallbacks.unregister(p1);
	return;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","getMountedObbPath(Ljava/lang/String;)Ljava/lang/String;","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, warnOnNotMounted()V > 1 @6 exception:6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mObbMounts, <Application,Ljava/util/Map> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mObbPathToStateMap, <Application,Ljava/util/Map> > 1,
11 = checkcast <Application,Lcom/android/server/StorageManagerService$ObbState>10 <Application,Lcom/android/server/StorageManagerService$ObbState>,
monitorexit 7,
conditional branch(ne, to iindex=-1) 11,17,
18 = getfield < Application, Lcom/android/server/StorageManagerService$ObbState, volId, <Application,Ljava/lang/String> > 11,
20 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,18 @49 exception:19,
return 24,","depth : 0
public String getMountedObbPath(String p1){
	Object v1 = Objects.requireNonNull(p1, ""rawPath cannot be null"");
	p0.warnOnNotMounted();
	Object v3 = this.mObbPathToStateMap.get(p1);
	VolumeInfo v4 = p0.findVolumeByIdOrThrow(StorageManagerService$ObbState.volId);
	File v5 = v4.getPath();
	String v6 = v5.getAbsolutePath();
	return v6;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","getMountedObbPath(Ljava/lang/String;)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, warnOnNotMounted()V > 1 @6 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
20 = phi  19,3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 20,6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Landroid/os/storage/VolumeInfo>9 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 12,3,
conditional branch(eq, to iindex=-1) 14,3,
monitorexit 2,
return,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mObbMounts, <Application,Ljava/util/Map> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mObbPathToStateMap, <Application,Ljava/util/Map> > 1,
11 = checkcast <Application,Lcom/android/server/StorageManagerService$ObbState>10 <Application,Lcom/android/server/StorageManagerService$ObbState>,
monitorexit 7,
conditional branch(ne, to iindex=-1) 11,17,
18 = getfield < Application, Lcom/android/server/StorageManagerService$ObbState, volId, <Application,Ljava/lang/String> > 11,
20 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,18 @49 exception:19,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
return 24,","depth : 0
public String getMountedObbPath(String p1){
	Object v1 = Objects.requireNonNull(p1, ""rawPath cannot be null"");
	p0.warnOnNotMounted();
	Object v3 = this.mObbPathToStateMap.get(p1);
	VolumeInfo v4 = p0.findVolumeByIdOrThrow(StorageManagerService$ObbState.volId);
	File v5 = v4.getPath();
	String v6 = v5.getAbsolutePath();
	return v6;
}
-----
depth : 1
public void warnOnNotMounted(){
	int v1 = this.mVolumes.size();
	Object v2 = this.mVolumes.valueAt(phiInstruction);
	boolean v3 = v2.isPrimary();
	boolean v4 = v2.isMountedWritable();
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
","NONE"
"Lcom/android/server/StorageManagerService","getMountedObbPath(Ljava/lang/String;)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, warnOnNotMounted()V > 1 @6 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
20 = phi  19,3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 20,6,
monitorexit 2,
return,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mObbMounts, <Application,Ljava/util/Map> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/StorageManagerService, mObbPathToStateMap, <Application,Ljava/util/Map> > 1,
11 = checkcast <Application,Lcom/android/server/StorageManagerService$ObbState>10 <Application,Lcom/android/server/StorageManagerService$ObbState>,
monitorexit 7,
conditional branch(ne, to iindex=-1) 11,17,
18 = getfield < Application, Lcom/android/server/StorageManagerService$ObbState, volId, <Application,Ljava/lang/String> > 11,
20 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findVolumeByIdOrThrow(Ljava/lang/String;)Landroid/os/storage/VolumeInfo; > 1,18 @49 exception:19,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mVolumes, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Landroid/os/storage/VolumeInfo>6 <Application,Landroid/os/storage/VolumeInfo>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
return 24,","depth : 0
public String getMountedObbPath(String p1){
	Object v1 = Objects.requireNonNull(p1, ""rawPath cannot be null"");
	p0.warnOnNotMounted();
	Object v3 = this.mObbPathToStateMap.get(p1);
	VolumeInfo v4 = p0.findVolumeByIdOrThrow(StorageManagerService$ObbState.volId);
	File v5 = v4.getPath();
	String v6 = v5.getAbsolutePath();
	return v6;
}
-----
depth : 1
public void warnOnNotMounted(){
	int v1 = this.mVolumes.size();
	int v2 = Slog.w(""StorageManagerService"", ""No primary storage mounted!"");
	return;
}
-----
depth : 1
public VolumeInfo findVolumeByIdOrThrow(String p1){
	Object v1 = this.mVolumes.get(p1);
	return v1;
}
-----
","NONE"

"Lcom/android/server/StorageManagerService","setPrimaryStorageUuid(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;)V","0","6 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 9,10,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 22,10,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 3,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 2,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
27 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
30 = checkcast <Application,Landroid/os/UserManager>29 <Application,Landroid/os/UserManager>,
conditional branch(eq, to iindex=-1) 36,10,
50 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 52,10,
conditional branch(eq, to iindex=-1) 54,10,
55 = getfield < Application, Lcom/android/server/StorageManagerService, mCurrentUserId, <Primordial,I> > 1,
56 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
58 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,56,55 @124 exception:57,
60 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,2,55 @128 exception:59,
conditional branch(ne, to iindex=-1) 58,10,
conditional branch(ne, to iindex=-1) 60,10,
monitorexit 6,
62 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
63 = getfield < Application, Landroid/os/storage/VolumeInfo, id, <Application,Ljava/lang/String> > 58,
72 = getCaughtException ,
return,","depth : 0
public void setPrimaryStorageUuid(String p1, IPackageMoveObserver p2){
	boolean v2 = Objects.equals(this.mPrimaryStorageUuid, p1);
	this.mMoveCallback = p2;
	this.mMoveTargetUuid = p1;
	Object v3 = this.mContext.getSystemService(UserManage.class);
	List v4 = v3.getUsers();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	boolean v7 = primary_physical.equals(this.mPrimaryStorageUuid);
	boolean v8 = primary_physical.equals(p1);
	VolumeInfo v9 = p0.findStorageForUuidAsUser(this.mPrimaryStorageUuid, this.mCurrentUserId);
	VolumeInfo v10 = p0.findStorageForUuidAsUser(p1, this.mCurrentUserId);
	int v11 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setPrimaryStorageUuid(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;)V","1","6 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 9,10,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 22,10,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 3,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 2,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
27 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
30 = checkcast <Application,Landroid/os/UserManager>29 <Application,Landroid/os/UserManager>,
conditional branch(eq, to iindex=-1) 36,10,
50 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 52,10,
conditional branch(eq, to iindex=-1) 54,10,
55 = getfield < Application, Lcom/android/server/StorageManagerService, mCurrentUserId, <Primordial,I> > 1,
56 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
58 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,56,55 @124 exception:57,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
37 = new <Application,Ljava/lang/StringBuilder>@60,
return 12,
60 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,2,55 @128 exception:59,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
37 = new <Application,Ljava/lang/StringBuilder>@60,
return 12,
conditional branch(ne, to iindex=-1) 58,10,
95 = new <Application,Ljava/lang/StringBuilder>@137,
100 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, onMoveStatusLocked(I)V > 1,61 @159 exception:107,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 3,5,
conditional branch(ne, to iindex=-1) 2,9,
11 = new <Application,Ljava/lang/StringBuilder>@24,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 25,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @53 exception:26,
conditional branch(eq, to iindex=-1) 31,5,
32 = new <Application,Ljava/lang/StringBuilder>@62,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 5,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 5,
return,
monitorexit 6,
return,","depth : 0
public void setPrimaryStorageUuid(String p1, IPackageMoveObserver p2){
	boolean v2 = Objects.equals(this.mPrimaryStorageUuid, p1);
	this.mMoveCallback = p2;
	this.mMoveTargetUuid = p1;
	Object v3 = this.mContext.getSystemService(UserManage.class);
	List v4 = v3.getUsers();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	boolean v7 = primary_physical.equals(this.mPrimaryStorageUuid);
	boolean v8 = primary_physical.equals(p1);
	VolumeInfo v9 = p0.findStorageForUuidAsUser(this.mPrimaryStorageUuid, this.mCurrentUserId);
	VolumeInfo v10 = p0.findStorageForUuidAsUser(p1, this.mCurrentUserId);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Failing move due to missing from volume "");
	StringBuilder v13 = v10.append(this.mPrimaryStorageUuid);
	String v14 = v10.toString();
	int v15 = Slog.w(""StorageManagerService"", v14);
	p0.onMoveStatusLocked(-6);
	return;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""findStorageForUuidAsUser cannot find volumeUuid:"");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""StorageManagerService"", v8);
	return 0;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""findStorageForUuidAsUser cannot find volumeUuid:"");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""StorageManagerService"", v8);
	return 0;
}
-----
depth : 1
public void onMoveStatusLocked(int p1){
	this.mMoveCallback.onStatusChanged(-1, p1, -1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Move to "");
	StringBuilder v4 = v1.append(this.mMoveTargetUuid);
	StringBuilder v5 = v1.append("" copy phase finshed; persisting"");
	String v6 = v1.toString();
	int v7 = Slog.d(""StorageManagerService"", v6);
	this.mPrimaryStorageUuid = this.mMoveTargetUuid;
	p0.writeSettingsLocked();
	boolean v9 = PackageManager.isMoveStatusFinished(p1);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Move to "");
	StringBuilder v12 = v9.append(this.mMoveTargetUuid);
	StringBuilder v13 = v9.append("" finished with status "");
	StringBuilder v14 = v9.append(p1);
	String v15 = v9.toString();
	int v16 = Slog.d(""StorageManagerService"", v15);
	this.mMoveCallback = 0;
	this.mMoveTargetUuid = 0;
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setPrimaryStorageUuid(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;)V","1","6 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 9,10,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 22,10,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 3,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 2,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
27 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
30 = checkcast <Application,Landroid/os/UserManager>29 <Application,Landroid/os/UserManager>,
conditional branch(eq, to iindex=-1) 36,10,
50 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 52,10,
conditional branch(eq, to iindex=-1) 54,10,
55 = getfield < Application, Lcom/android/server/StorageManagerService, mCurrentUserId, <Primordial,I> > 1,
56 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
58 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,56,55 @124 exception:57,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
18 = new <Application,Ljava/lang/StringBuilder>@84,
return 36,
60 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,2,55 @128 exception:59,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
37 = new <Application,Ljava/lang/StringBuilder>@60,
return 12,
conditional branch(ne, to iindex=-1) 58,10,
95 = new <Application,Ljava/lang/StringBuilder>@137,
100 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, onMoveStatusLocked(I)V > 1,61 @159 exception:107,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 3,5,
conditional branch(ne, to iindex=-1) 2,9,
11 = new <Application,Ljava/lang/StringBuilder>@24,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 25,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @53 exception:26,
conditional branch(eq, to iindex=-1) 31,5,
32 = new <Application,Ljava/lang/StringBuilder>@62,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 5,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 5,
return,
monitorexit 6,
return,","depth : 0
public void setPrimaryStorageUuid(String p1, IPackageMoveObserver p2){
	boolean v2 = Objects.equals(this.mPrimaryStorageUuid, p1);
	this.mMoveCallback = p2;
	this.mMoveTargetUuid = p1;
	Object v3 = this.mContext.getSystemService(UserManage.class);
	List v4 = v3.getUsers();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	boolean v7 = primary_physical.equals(this.mPrimaryStorageUuid);
	boolean v8 = primary_physical.equals(p1);
	VolumeInfo v9 = p0.findStorageForUuidAsUser(this.mPrimaryStorageUuid, this.mCurrentUserId);
	VolumeInfo v10 = p0.findStorageForUuidAsUser(p1, this.mCurrentUserId);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Failing move due to missing from volume "");
	StringBuilder v13 = v10.append(this.mPrimaryStorageUuid);
	String v14 = v10.toString();
	int v15 = Slog.w(""StorageManagerService"", v14);
	p0.onMoveStatusLocked(-6);
	return;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	String v6 = v4.getId();
	String v7 = v6.replace(""private"", ""emulated"");
	StringBuilder v8 = v4.append(v7);
	StringBuilder v9 = v4.append("";"");
	StringBuilder v10 = v4.append(p2);
	String v11 = v4.toString();
	VolumeInfo v12 = v1.findVolumeById(v11);
	return v12;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""findStorageForUuidAsUser cannot find volumeUuid:"");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""StorageManagerService"", v8);
	return 0;
}
-----
depth : 1
public void onMoveStatusLocked(int p1){
	this.mMoveCallback.onStatusChanged(-1, p1, -1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Move to "");
	StringBuilder v4 = v1.append(this.mMoveTargetUuid);
	StringBuilder v5 = v1.append("" copy phase finshed; persisting"");
	String v6 = v1.toString();
	int v7 = Slog.d(""StorageManagerService"", v6);
	this.mPrimaryStorageUuid = this.mMoveTargetUuid;
	p0.writeSettingsLocked();
	boolean v9 = PackageManager.isMoveStatusFinished(p1);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Move to "");
	StringBuilder v12 = v9.append(this.mMoveTargetUuid);
	StringBuilder v13 = v9.append("" finished with status "");
	StringBuilder v14 = v9.append(p1);
	String v15 = v9.toString();
	int v16 = Slog.d(""StorageManagerService"", v15);
	this.mMoveCallback = 0;
	this.mMoveTargetUuid = 0;
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setPrimaryStorageUuid(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;)V","2","6 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 9,10,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 22,10,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 3,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 2,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
27 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
30 = checkcast <Application,Landroid/os/UserManager>29 <Application,Landroid/os/UserManager>,
conditional branch(eq, to iindex=-1) 36,10,
50 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 52,10,
conditional branch(eq, to iindex=-1) 54,10,
55 = getfield < Application, Lcom/android/server/StorageManagerService, mCurrentUserId, <Primordial,I> > 1,
56 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
58 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,56,55 @124 exception:57,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
37 = new <Application,Ljava/lang/StringBuilder>@60,
return 12,
60 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,2,55 @128 exception:59,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
37 = new <Application,Ljava/lang/StringBuilder>@60,
return 12,
conditional branch(ne, to iindex=-1) 58,10,
95 = new <Application,Ljava/lang/StringBuilder>@137,
100 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, onMoveStatusLocked(I)V > 1,61 @159 exception:107,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 3,5,
conditional branch(ne, to iindex=-1) 2,9,
11 = new <Application,Ljava/lang/StringBuilder>@24,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 25,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @53 exception:26,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
conditional branch(eq, to iindex=-1) 31,5,
32 = new <Application,Ljava/lang/StringBuilder>@62,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 5,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 5,
return,
monitorexit 6,
return,","depth : 0
public void setPrimaryStorageUuid(String p1, IPackageMoveObserver p2){
	boolean v2 = Objects.equals(this.mPrimaryStorageUuid, p1);
	this.mMoveCallback = p2;
	this.mMoveTargetUuid = p1;
	Object v3 = this.mContext.getSystemService(UserManage.class);
	List v4 = v3.getUsers();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	boolean v7 = primary_physical.equals(this.mPrimaryStorageUuid);
	boolean v8 = primary_physical.equals(p1);
	VolumeInfo v9 = p0.findStorageForUuidAsUser(this.mPrimaryStorageUuid, this.mCurrentUserId);
	VolumeInfo v10 = p0.findStorageForUuidAsUser(p1, this.mCurrentUserId);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Failing move due to missing from volume "");
	StringBuilder v13 = v10.append(this.mPrimaryStorageUuid);
	String v14 = v10.toString();
	int v15 = Slog.w(""StorageManagerService"", v14);
	p0.onMoveStatusLocked(-6);
	return;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""findStorageForUuidAsUser cannot find volumeUuid:"");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""StorageManagerService"", v8);
	return 0;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""findStorageForUuidAsUser cannot find volumeUuid:"");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""StorageManagerService"", v8);
	return 0;
}
-----
depth : 1
public void onMoveStatusLocked(int p1){
	this.mMoveCallback.onStatusChanged(-1, p1, -1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Move to "");
	StringBuilder v4 = v1.append(this.mMoveTargetUuid);
	StringBuilder v5 = v1.append("" copy phase finshed; persisting"");
	String v6 = v1.toString();
	int v7 = Slog.d(""StorageManagerService"", v6);
	this.mPrimaryStorageUuid = this.mMoveTargetUuid;
	p0.writeSettingsLocked();
	boolean v9 = PackageManager.isMoveStatusFinished(p1);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Move to "");
	StringBuilder v12 = v9.append(this.mMoveTargetUuid);
	StringBuilder v13 = v9.append("" finished with status "");
	StringBuilder v14 = v9.append(p1);
	String v15 = v9.toString();
	int v16 = Slog.d(""StorageManagerService"", v15);
	this.mMoveCallback = 0;
	this.mMoveTargetUuid = 0;
	return;
}
-----
depth : 2
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setPrimaryStorageUuid(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;)V","2","6 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 9,10,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 22,10,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 3,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 2,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
27 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
30 = checkcast <Application,Landroid/os/UserManager>29 <Application,Landroid/os/UserManager>,
conditional branch(eq, to iindex=-1) 36,10,
50 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 52,10,
conditional branch(eq, to iindex=-1) 54,10,
55 = getfield < Application, Lcom/android/server/StorageManagerService, mCurrentUserId, <Primordial,I> > 1,
56 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
58 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,56,55 @124 exception:57,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
18 = new <Application,Ljava/lang/StringBuilder>@84,
return 36,
60 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,2,55 @128 exception:59,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
37 = new <Application,Ljava/lang/StringBuilder>@60,
return 12,
conditional branch(ne, to iindex=-1) 58,10,
95 = new <Application,Ljava/lang/StringBuilder>@137,
100 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, onMoveStatusLocked(I)V > 1,61 @159 exception:107,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 3,5,
conditional branch(ne, to iindex=-1) 2,9,
11 = new <Application,Ljava/lang/StringBuilder>@24,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 25,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @53 exception:26,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
conditional branch(eq, to iindex=-1) 31,5,
32 = new <Application,Ljava/lang/StringBuilder>@62,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 5,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 5,
return,
monitorexit 6,
return,","depth : 0
public void setPrimaryStorageUuid(String p1, IPackageMoveObserver p2){
	boolean v2 = Objects.equals(this.mPrimaryStorageUuid, p1);
	this.mMoveCallback = p2;
	this.mMoveTargetUuid = p1;
	Object v3 = this.mContext.getSystemService(UserManage.class);
	List v4 = v3.getUsers();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	boolean v7 = primary_physical.equals(this.mPrimaryStorageUuid);
	boolean v8 = primary_physical.equals(p1);
	VolumeInfo v9 = p0.findStorageForUuidAsUser(this.mPrimaryStorageUuid, this.mCurrentUserId);
	VolumeInfo v10 = p0.findStorageForUuidAsUser(p1, this.mCurrentUserId);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Failing move due to missing from volume "");
	StringBuilder v13 = v10.append(this.mPrimaryStorageUuid);
	String v14 = v10.toString();
	int v15 = Slog.w(""StorageManagerService"", v14);
	p0.onMoveStatusLocked(-6);
	return;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	String v6 = v4.getId();
	String v7 = v6.replace(""private"", ""emulated"");
	StringBuilder v8 = v4.append(v7);
	StringBuilder v9 = v4.append("";"");
	StringBuilder v10 = v4.append(p2);
	String v11 = v4.toString();
	VolumeInfo v12 = v1.findVolumeById(v11);
	return v12;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""findStorageForUuidAsUser cannot find volumeUuid:"");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""StorageManagerService"", v8);
	return 0;
}
-----
depth : 1
public void onMoveStatusLocked(int p1){
	this.mMoveCallback.onStatusChanged(-1, p1, -1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Move to "");
	StringBuilder v4 = v1.append(this.mMoveTargetUuid);
	StringBuilder v5 = v1.append("" copy phase finshed; persisting"");
	String v6 = v1.toString();
	int v7 = Slog.d(""StorageManagerService"", v6);
	this.mPrimaryStorageUuid = this.mMoveTargetUuid;
	p0.writeSettingsLocked();
	boolean v9 = PackageManager.isMoveStatusFinished(p1);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Move to "");
	StringBuilder v12 = v9.append(this.mMoveTargetUuid);
	StringBuilder v13 = v9.append("" finished with status "");
	StringBuilder v14 = v9.append(p1);
	String v15 = v9.toString();
	int v16 = Slog.d(""StorageManagerService"", v15);
	this.mMoveCallback = 0;
	this.mMoveTargetUuid = 0;
	return;
}
-----
depth : 2
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setPrimaryStorageUuid(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;)V","2","6 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 9,10,
22 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 22,10,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 3,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 2,
26 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
27 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
30 = checkcast <Application,Landroid/os/UserManager>29 <Application,Landroid/os/UserManager>,
conditional branch(eq, to iindex=-1) 36,10,
50 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 52,10,
conditional branch(eq, to iindex=-1) 54,10,
55 = getfield < Application, Lcom/android/server/StorageManagerService, mCurrentUserId, <Primordial,I> > 1,
56 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
58 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,56,55 @124 exception:57,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
37 = new <Application,Ljava/lang/StringBuilder>@60,
return 12,
60 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findStorageForUuidAsUser(Ljava/lang/String;I)Landroid/os/storage/VolumeInfo; > 1,2,55 @128 exception:59,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
5 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
8 = checkcast <Application,Landroid/os/storage/StorageManager>7 <Application,Landroid/os/storage/StorageManager>,
9 = getstatic < Application, Landroid/os/storage/StorageManager, UUID_PRIVATE_INTERNAL, <Application,Ljava/lang/String> >,
conditional branch(eq, to iindex=-1) 11,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(ne, to iindex=-1) 17,12,
18 = new <Application,Ljava/lang/StringBuilder>@84,
return 36,
conditional branch(ne, to iindex=-1) 58,10,
95 = new <Application,Ljava/lang/StringBuilder>@137,
100 = getfield < Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, onMoveStatusLocked(I)V > 1,61 @159 exception:107,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > 1,
conditional branch(ne, to iindex=-1) 3,5,
conditional branch(ne, to iindex=-1) 2,9,
11 = new <Application,Ljava/lang/StringBuilder>@24,
15 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
25 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mPrimaryStorageUuid, <Application,Ljava/lang/String> > = 25,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @53 exception:26,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
conditional branch(eq, to iindex=-1) 31,5,
32 = new <Application,Ljava/lang/StringBuilder>@62,
36 = getfield < Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveCallback, <Application,Landroid/content/pm/IPackageMoveObserver> > = 5,
putfield 1.< Application, Lcom/android/server/StorageManagerService, mMoveTargetUuid, <Application,Ljava/lang/String> > = 5,
return,
monitorexit 6,
return,","depth : 0
public void setPrimaryStorageUuid(String p1, IPackageMoveObserver p2){
	boolean v2 = Objects.equals(this.mPrimaryStorageUuid, p1);
	this.mMoveCallback = p2;
	this.mMoveTargetUuid = p1;
	Object v3 = this.mContext.getSystemService(UserManage.class);
	List v4 = v3.getUsers();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	boolean v7 = primary_physical.equals(this.mPrimaryStorageUuid);
	boolean v8 = primary_physical.equals(p1);
	VolumeInfo v9 = p0.findStorageForUuidAsUser(this.mPrimaryStorageUuid, this.mCurrentUserId);
	VolumeInfo v10 = p0.findStorageForUuidAsUser(p1, this.mCurrentUserId);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Failing move due to missing from volume "");
	StringBuilder v13 = v10.append(this.mPrimaryStorageUuid);
	String v14 = v10.toString();
	int v15 = Slog.w(""StorageManagerService"", v14);
	p0.onMoveStatusLocked(-6);
	return;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""findStorageForUuidAsUser cannot find volumeUuid:"");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""StorageManagerService"", v8);
	return 0;
}
-----
depth : 1
public VolumeInfo findStorageForUuidAsUser(String p1, int p2){
	Object v1 = this.mContext.getSystemService(StorageManage.class);
	boolean v2 = Objects.equals(StorageManager.UUID_PRIVATE_INTERNAL, p1);
	boolean v3 = primary_physical.equals(p1);
	VolumeInfo v4 = v1.findVolumeByUuid(p1);
	StringBuilder v4 = new StringBuilder();
	String v6 = v4.getId();
	String v7 = v6.replace(""private"", ""emulated"");
	StringBuilder v8 = v4.append(v7);
	StringBuilder v9 = v4.append("";"");
	StringBuilder v10 = v4.append(p2);
	String v11 = v4.toString();
	VolumeInfo v12 = v1.findVolumeById(v11);
	return v12;
}
-----
depth : 1
public void onMoveStatusLocked(int p1){
	this.mMoveCallback.onStatusChanged(-1, p1, -1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Move to "");
	StringBuilder v4 = v1.append(this.mMoveTargetUuid);
	StringBuilder v5 = v1.append("" copy phase finshed; persisting"");
	String v6 = v1.toString();
	int v7 = Slog.d(""StorageManagerService"", v6);
	this.mPrimaryStorageUuid = this.mMoveTargetUuid;
	p0.writeSettingsLocked();
	boolean v9 = PackageManager.isMoveStatusFinished(p1);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Move to "");
	StringBuilder v12 = v9.append(this.mMoveTargetUuid);
	StringBuilder v13 = v9.append("" finished with status "");
	StringBuilder v14 = v9.append(p1);
	String v15 = v9.toString();
	int v16 = Slog.d(""StorageManagerService"", v15);
	this.mMoveCallback = 0;
	this.mMoveTargetUuid = 0;
	return;
}
-----
depth : 2
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","partitionMixed(Ljava/lang/String;I)V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:6,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,8,12,13 @24 exception:14,
18 = getCaughtException ,
return,","depth : 0
public void partitionMixed(String p1, int p2){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 2, p2);
	p0.waitForLatch(v3, ""partitionMixed"", 180000);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionMixed(Ljava/lang/String;I)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,21,
return,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Ljava/util/concurrent/CountDownLatch>6 <Application,Ljava/util/concurrent/CountDownLatch>,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/concurrent/CountDownLatch>@13,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  7,9,
monitorexit 3,
return 15,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,8,12,13 @24 exception:14,
8 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @4 exception:7,
10 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
conditional branch(eq, to iindex=-1) 12,13,
return,
18 = getCaughtException ,
return,","depth : 0
public void partitionMixed(String p1, int p2){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 2, p2);
	p0.waitForLatch(v3, ""partitionMixed"", 180000);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public CountDownLatch findOrCreateDiskScanLatch(String p1){
	Object v1 = this.mDiskScanLatches.get(p1);
	CountDownLatch v1 = new CountDownLatch(1);
	Object v3 = this.mDiskScanLatches.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public void waitForLatch(CountDownLatch p1, String p2, long p3){
	long v1 = SystemClock.elapsedRealtime();
	boolean v2 = p1.await(5000, TimeUnit.MILLISECONDS);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionMixed(Ljava/lang/String;I)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,21,
return,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Ljava/util/concurrent/CountDownLatch>6 <Application,Ljava/util/concurrent/CountDownLatch>,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Ljava/util/concurrent/CountDownLatch>@13,
12 = getfield < Application, Lcom/android/server/StorageManagerService, mDiskScanLatches, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  7,9,
monitorexit 3,
return 15,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,8,12,13 @24 exception:14,
8 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @4 exception:7,
10 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
conditional branch(eq, to iindex=-1) 12,13,
return,
goto (from iindex= 11 to iindex = 7),
return,","depth : 0
public void partitionMixed(String p1, int p2){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 2, p2);
	p0.waitForLatch(v3, ""partitionMixed"", 180000);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public CountDownLatch findOrCreateDiskScanLatch(String p1){
	Object v1 = this.mDiskScanLatches.get(p1);
	CountDownLatch v1 = new CountDownLatch(1);
	Object v3 = this.mDiskScanLatches.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public void waitForLatch(CountDownLatch p1, String p2, long p3){
	long v1 = SystemClock.elapsedRealtime();
	boolean v2 = p1.await(5000, TimeUnit.MILLISECONDS);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionMixed(Ljava/lang/String;I)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,21,
return,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,8,12,13 @24 exception:14,
18 = getCaughtException ,
return,","depth : 0
public void partitionMixed(String p1, int p2){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 2, p2);
	p0.waitForLatch(v3, ""partitionMixed"", 180000);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 2
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionMixed(Ljava/lang/String;I)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,21,
return,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService, waitForLatch(Ljava/util/concurrent/CountDownLatch;Ljava/lang/String;J)V > 1,8,12,13 @24 exception:14,
goto (from iindex= 11 to iindex = 7),
return,","depth : 0
public void partitionMixed(String p1, int p2){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	this.mVold.partition(p1, 2, p2);
	p0.waitForLatch(v3, ""partitionMixed"", 180000);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 2
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","partitionMixed(Ljava/lang/String;I)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, enforceAdminUser()V > 1 @5 exception:6,
2 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
6 = checkcast <Application,Landroid/os/UserManager>5 <Application,Landroid/os/UserManager>,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 12 @23 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,21,
return,
8 = invokevirtual < Application, Lcom/android/server/StorageManagerService, findOrCreateDiskScanLatch(Ljava/lang/String;)Ljava/util/concurrent/CountDownLatch; > 1,2 @8 exception:7,
9 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
18 = getCaughtException ,
return,","depth : 0
public void partitionMixed(String p1, int p2){
	p0.enforceAdminUser();
	CountDownLatch v3 = p0.findOrCreateDiskScanLatch(p1);
	int v4 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public void enforceAdminUser(){
	Object v1 = this.mContext.getSystemService(""user"");
	int v2 = UserHandle.getCallingUserId();
	long v3 = Binder.clearCallingIdentity();
	UserInfo v4 = v1.getUserInfo(v2);
	boolean v5 = v4.isAdmin();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 2
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","getCacheQuotaBytes(Ljava/lang/String;I)J","0","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheQuotaBytes(Ljava/lang/String;I)J > 18,2,3 @29 exception:19,
return 20,","depth : 0
public long getCacheQuotaBytes(String p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = v4.getCacheQuotaBytes(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getCacheQuotaBytes(Ljava/lang/String;I)J","0","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheQuotaBytes(Ljava/lang/String;I)J > 18,2,3 @29 exception:19,
return 20,","depth : 0
public long getCacheQuotaBytes(String p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	Object v3 = this.mContext.getSystemService(StorageStatsManage.class);
	long v4 = v3.getCacheQuotaBytes(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getCacheQuotaBytes(Ljava/lang/String;I)J","1","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheQuotaBytes(Ljava/lang/String;I)J > 18,2,3 @29 exception:19,
4 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
5 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 9,
return 20,","depth : 0
public long getCacheQuotaBytes(String p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	long v5 = v4.getCacheQuotaBytes(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return v5;
}
-----
depth : 1
public long getCacheQuotaBytes(String p1, int p2){
	String v1 = this.mContext.getOpPackageName();
	long v2 = this.mService.getCacheQuotaBytes(p1, p2, v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","getCacheQuotaBytes(Ljava/lang/String;I)J","1","14 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
15 = load_metadata: <Application,Landroid/app/usage/StorageStatsManager>, <Primordial,Ljava/lang/Class>,
18 = checkcast <Application,Landroid/app/usage/StorageStatsManager>17 <Application,Landroid/app/usage/StorageStatsManager>,
20 = invokevirtual < Application, Landroid/app/usage/StorageStatsManager, getCacheQuotaBytes(Ljava/lang/String;I)J > 18,2,3 @29 exception:19,
4 = getfield < Application, Landroid/app/usage/StorageStatsManager, mService, <Application,Landroid/app/usage/IStorageStatsManager> > 1,
5 = getfield < Application, Landroid/app/usage/StorageStatsManager, mContext, <Application,Landroid/content/Context> > 1,
return 9,
return 20,","depth : 0
public long getCacheQuotaBytes(String p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	Object v3 = this.mContext.getSystemService(StorageStatsManage.class);
	long v4 = v3.getCacheQuotaBytes(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public long getCacheQuotaBytes(String p1, int p2){
	String v1 = this.mContext.getOpPackageName();
	long v2 = this.mService.getCacheQuotaBytes(p1, p2, v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","setVolumeUserFlags(Ljava/lang/String;II)V","0","9 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Landroid/os/storage/VolumeRecord>12 <Application,Landroid/os/storage/VolumeRecord>,
14 = getfield < Application, Landroid/os/storage/VolumeRecord, userFlags, <Primordial,I> > 13,
15 = bitnot 4,
16 = binaryop(and) 14 , 15,
17 = binaryop(and) 3 , 4,
18 = binaryop(or) 17 , 16,
putfield 13.< Application, Landroid/os/storage/VolumeRecord, userFlags, <Primordial,I> > = 18,
19 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeRecordChanged(Lcom/android/server/StorageManagerService$Callbacks;Landroid/os/storage/VolumeRecord;)V > 19,13 @29 exception:20,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @32 exception:21,
monitorexit 9,
return,","depth : 0
public void setVolumeUserFlags(String p1, int p2, int p3){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.get(p1);
	VolumeRecord.userFlags = ((p2 & p3) | (VolumeRecord.userFlags & (~p3)));
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);
	p0.writeSettingsLocked();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","setVolumeUserFlags(Ljava/lang/String;II)V","1","9 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mRecords, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Landroid/os/storage/VolumeRecord>12 <Application,Landroid/os/storage/VolumeRecord>,
14 = getfield < Application, Landroid/os/storage/VolumeRecord, userFlags, <Primordial,I> > 13,
15 = bitnot 4,
16 = binaryop(and) 14 , 15,
17 = binaryop(and) 3 , 4,
18 = binaryop(or) 17 , 16,
putfield 13.< Application, Landroid/os/storage/VolumeRecord, userFlags, <Primordial,I> > = 18,
19 = getfield < Application, Lcom/android/server/StorageManagerService, mCallbacks, <Application,Lcom/android/server/StorageManagerService$Callbacks> > 1,
invokestatic < Application, Lcom/android/server/StorageManagerService$Callbacks, -$$Nest$mnotifyVolumeRecordChanged(Lcom/android/server/StorageManagerService$Callbacks;Landroid/os/storage/VolumeRecord;)V > 19,13 @29 exception:20,
return,
invokevirtual < Application, Lcom/android/server/StorageManagerService, writeSettingsLocked()V > 1 @32 exception:21,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
45 = phi  3,3,6,
conditional branch(eq, to iindex=-1) 45,3,
49 = getfield < Application, Lcom/android/server/StorageManagerService, mSettingsFile, <Application,Landroid/util/AtomicFile> > 1,
return,
monitorexit 9,
return,","depth : 0
public void setVolumeUserFlags(String p1, int p2, int p3){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.get(p1);
	VolumeRecord.userFlags = ((p2 & p3) | (VolumeRecord.userFlags & (~p3)));
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);
	p0.writeSettingsLocked();
	return;
}
-----
depth : 1
public void -$$Nest$mnotifyVolumeRecordChanged(StorageManagerService$Callbacks p1, VolumeRecord p2){
	p1.notifyVolumeRecordChanged(p2);
	return;
}
-----
depth : 1
public void writeSettingsLocked(){
	this.mSettingsFile.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","lockUserKey(I)V","0","12 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @22 exception:11,
conditional branch(ne, to iindex=-1) 12,3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
20 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, remove(I)V > 21,2 @66 exception:22,
monitorexit 20,
return,","depth : 0
public void lockUserKey(int p1){
	boolean v3 = p0.isUserKeyUnlocked(p1);
	this.mVold.lockUserKey(p1);
	this.mLocalUnlockedUsers.remove(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","lockUserKey(I)V","1","12 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @22 exception:11,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
monitorexit 3,
return 6,
conditional branch(ne, to iindex=-1) 12,3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
20 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, remove(I)V > 21,2 @66 exception:22,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > = 5,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, invalidateIsUserUnlockedCache()V > 1 @8 exception:6,
return,
monitorexit 20,
return,","depth : 0
public void lockUserKey(int p1){
	boolean v3 = p0.isUserKeyUnlocked(p1);
	this.mVold.lockUserKey(p1);
	this.mLocalUnlockedUsers.remove(p1);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 1
public void remove(int p1){
	[I v1 = ArrayUtils.removeInt(this.users, p1);
	this.users = v1;
	p0.invalidateIsUserUnlockedCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","lockUserKey(I)V","1","12 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @22 exception:11,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
monitorexit 3,
return 6,
conditional branch(ne, to iindex=-1) 12,3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
16 = getCaughtException ,
return,","depth : 0
public void lockUserKey(int p1){
	boolean v3 = p0.isUserKeyUnlocked(p1);
	int v4 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","lockUserKey(I)V","2","12 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @22 exception:11,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
return 5,
monitorexit 3,
return 6,
conditional branch(ne, to iindex=-1) 12,3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
20 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, remove(I)V > 21,2 @66 exception:22,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
putfield 1.< Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > = 5,
invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, invalidateIsUserUnlockedCache()V > 1 @8 exception:6,
return,
return,
monitorexit 20,
return,","depth : 0
public void lockUserKey(int p1){
	boolean v3 = p0.isUserKeyUnlocked(p1);
	this.mVold.lockUserKey(p1);
	this.mLocalUnlockedUsers.remove(p1);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 2
public boolean contains(int p1){
	boolean v1 = ArrayUtils.contains(this.users, p1);
	return v1;
}
-----
depth : 1
public void remove(int p1){
	[I v1 = ArrayUtils.removeInt(this.users, p1);
	this.users = v1;
	p0.invalidateIsUserUnlockedCache();
	return;
}
-----
depth : 2
public void invalidateIsUserUnlockedCache(){
	UserManager.invalidateIsUserUnlockedCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","lockUserKey(I)V","2","12 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @22 exception:11,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
return 5,
monitorexit 3,
return 6,
conditional branch(ne, to iindex=-1) 12,3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
16 = getCaughtException ,
return,","depth : 0
public void lockUserKey(int p1){
	boolean v3 = p0.isUserKeyUnlocked(p1);
	int v4 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 2
public boolean contains(int p1){
	boolean v1 = ArrayUtils.contains(this.users, p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","lockUserKey(I)V","2","12 = invokevirtual < Application, Lcom/android/server/StorageManagerService, isUserKeyUnlocked(I)Z > 1,2 @22 exception:11,
3 = getfield < Application, Lcom/android/server/StorageManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/StorageManagerService, mLocalUnlockedUsers, <Application,Lcom/android/server/StorageManagerService$WatchedLockedUsers> > 1,
6 = invokevirtual < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, contains(I)Z > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/StorageManagerService$WatchedLockedUsers, users, <Primordial,[I> > 1,
return 5,
monitorexit 3,
return 6,
conditional branch(ne, to iindex=-1) 12,3,
13 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
16 = getCaughtException ,
return,","depth : 0
public void lockUserKey(int p1){
	boolean v3 = p0.isUserKeyUnlocked(p1);
	this.mVold.lockUserKey(p1);
	int v5 = Slog.wtf(""StorageManagerService"", caughtException);
	return;
}
-----
depth : 1
public boolean isUserKeyUnlocked(int p1){
	boolean v1 = this.mLocalUnlockedUsers.contains(p1);
	return v1;
}
-----
depth : 2
public boolean contains(int p1){
	boolean v1 = ArrayUtils.contains(this.users, p1);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/StorageManagerService","prepareUserStorage(Ljava/lang/String;III)V","0","invokevirtual < Application, Lcom/android/server/StorageManagerService, prepareUserStorageInternal(Ljava/lang/String;III)V > 1,2,3,4,5 @5 exception:8,
return,","depth : 0
public void prepareUserStorage(String p1, int p2, int p3, int p4){
	p0.prepareUserStorageInternal(p1, p2, p3, p4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","prepareUserStorage(Ljava/lang/String;III)V","1","invokevirtual < Application, Lcom/android/server/StorageManagerService, prepareUserStorageInternal(Ljava/lang/String;III)V > 1,2,3,4,5 @5 exception:8,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
11 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
14 = checkcast <Application,Landroid/os/storage/StorageManager>13 <Application,Landroid/os/storage/StorageManager>,
25 = getCaughtException ,
28 = new <Application,[Ljava/lang/Object>@4127 ,
arraystore 28[9] = 29,
arraystore 28[6] = 32,
arraystore 28[33] = 34,
40 = load_metadata: <Application,Lcom/android/server/pm/UserManagerInternal>, <Primordial,Ljava/lang/Class>,
42 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 40 @70 exception:41,
43 = checkcast <Application,Lcom/android/server/pm/UserManagerInternal>42 <Application,Lcom/android/server/pm/UserManagerInternal>,
conditional branch(eq, to iindex=-1) 45,9,
48 = new <Application,Ljava/lang/StringBuilder>@82,
return,
return,","depth : 0
public void prepareUserStorage(String p1, int p2, int p3, int p4){
	p0.prepareUserStorageInternal(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void prepareUserStorageInternal(String p1, int p2, int p3, int p4){
	this.mVold.prepareUserStorage(p1, p2, p3, p4);
	Object v2 = this.mContext.getSystemService(StorageManage.class);
	Object v2 = new Object(3);
	Integer v3 = Integer.valueOf(-1);
	int v4 = EventLog.writeEvent(1397638484, v2);
	int v5 = Slog.wtf(""StorageManagerService"", caughtException);
	Object v6 = LocalServices.getService(UserManagerInterna.class);
	boolean v7 = v6.shouldIgnorePrepareStorageErrors(p2);
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(""ignoring error preparing storage for existing user "");
	StringBuilder v10 = v7.append(p2);
	StringBuilder v11 = v7.append(""; device may be insecure!"");
	String v12 = v7.toString();
	int v13 = Slog.wtf(""StorageManagerService"", v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","prepareUserStorage(Ljava/lang/String;III)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, prepareUserStorageInternal(Ljava/lang/String;III)V > 1,2,3,4,5 @5 exception:8,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
11 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
14 = checkcast <Application,Landroid/os/storage/StorageManager>13 <Application,Landroid/os/storage/StorageManager>,
25 = getCaughtException ,
28 = new <Application,[Ljava/lang/Object>@4127 ,
arraystore 28[9] = 29,
arraystore 28[6] = 32,
arraystore 28[33] = 34,
40 = load_metadata: <Application,Lcom/android/server/pm/UserManagerInternal>, <Primordial,Ljava/lang/Class>,
42 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 40 @70 exception:41,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
43 = checkcast <Application,Lcom/android/server/pm/UserManagerInternal>42 <Application,Lcom/android/server/pm/UserManagerInternal>,
conditional branch(eq, to iindex=-1) 45,9,
48 = new <Application,Ljava/lang/StringBuilder>@82,
return,
return,","depth : 0
public void prepareUserStorage(String p1, int p2, int p3, int p4){
	p0.prepareUserStorageInternal(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void prepareUserStorageInternal(String p1, int p2, int p3, int p4){
	this.mVold.prepareUserStorage(p1, p2, p3, p4);
	Object v2 = this.mContext.getSystemService(StorageManage.class);
	Object v2 = new Object(3);
	Integer v3 = Integer.valueOf(-1);
	int v4 = EventLog.writeEvent(1397638484, v2);
	int v5 = Slog.wtf(""StorageManagerService"", caughtException);
	Object v6 = LocalServices.getService(UserManagerInterna.class);
	boolean v7 = v6.shouldIgnorePrepareStorageErrors(p2);
	StringBuilder v7 = new StringBuilder();
	StringBuilder v9 = v7.append(""ignoring error preparing storage for existing user "");
	StringBuilder v10 = v7.append(p2);
	StringBuilder v11 = v7.append(""; device may be insecure!"");
	String v12 = v7.toString();
	int v13 = Slog.wtf(""StorageManagerService"", v12);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/StorageManagerService","prepareUserStorage(Ljava/lang/String;III)V","2","invokevirtual < Application, Lcom/android/server/StorageManagerService, prepareUserStorageInternal(Ljava/lang/String;III)V > 1,2,3,4,5 @5 exception:8,
7 = getfield < Application, Lcom/android/server/StorageManagerService, mVold, <Application,Landroid/os/IVold> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/StorageManagerService, mContext, <Application,Landroid/content/Context> > 1,
11 = load_metadata: <Application,Landroid/os/storage/StorageManager>, <Primordial,Ljava/lang/Class>,
14 = checkcast <Application,Landroid/os/storage/StorageManager>13 <Application,Landroid/os/storage/StorageManager>,
25 = getCaughtException ,
28 = new <Application,[Ljava/lang/Object>@4127 ,
arraystore 28[9] = 29,
arraystore 28[6] = 32,
arraystore 28[33] = 34,
40 = load_metadata: <Application,Lcom/android/server/pm/UserManagerInternal>, <Primordial,Ljava/lang/Class>,
42 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 40 @70 exception:41,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
43 = checkcast <Application,Lcom/android/server/pm/UserManagerInternal>42 <Application,Lcom/android/server/pm/UserManagerInternal>,
conditional branch(eq, to iindex=-1) 45,9,
48 = new <Application,Ljava/lang/StringBuilder>@82,
return,
return,","depth : 0
public void prepareUserStorage(String p1, int p2, int p3, int p4){
	p0.prepareUserStorageInternal(p1, p2, p3, p4);
	return;
}
-----
depth : 1
public void prepareUserStorageInternal(String p1, int p2, int p3, int p4){
	this.mVold.prepareUserStorage(p1, p2, p3, p4);
	Object v2 = this.mContext.getSystemService(StorageManage.class);
	VolumeInfo v3 = v2.findVolumeByUuid(p1);
	Object v3 = new Object(3);
	Integer v4 = Integer.valueOf(-1);
	int v5 = EventLog.writeEvent(1397638484, v3);
	int v6 = Slog.wtf(""StorageManagerService"", caughtException);
	Object v7 = LocalServices.getService(UserManagerInterna.class);
	boolean v8 = v7.shouldIgnorePrepareStorageErrors(p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""ignoring error preparing storage for existing user "");
	StringBuilder v11 = v8.append(p2);
	StringBuilder v12 = v8.append(""; device may be insecure!"");
	String v13 = v8.toString();
	int v14 = Slog.wtf(""StorageManagerService"", v13);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"

