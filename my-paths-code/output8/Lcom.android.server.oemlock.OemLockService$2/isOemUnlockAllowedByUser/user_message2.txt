The method isOemUnlockAllowedByUser has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isOemUnlockAllowedByUser(){
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = this.mOemLock;
	boolean v4 = v3.isOemUnlockAllowedByDevice();
	Binder.restoreCallingIdentity(v2);
	return v4;
}


This is path 2 for the API with depth 0:
public boolean isOemUnlockAllowedByUser(){
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByDevice();
	Binder.restoreCallingIdentity(v2);
	return v4;
}

and the following sink code:
['OemLock v3 = this.mOemLock;\nboolean v4 = v3.isOemUnlockAllowedByDevice();\nreturn v4;']

The method isOemUnlockAllowedByUser has the following similar APIs:

- API Name: isOemUnlockAllowedByCarrier()Z with Similarity Score: 0.9068787693977356
  - Access Control Level: SYS_OR_SIG and the following code:
OemLock v3 = this.mOemLock;
boolean v4 = v3.isOemUnlockAllowedByCarrier();
return v4;

- API Name: isOemUnlockAllowed()Z with Similarity Score: 0.8958078622817993
  - Access Control Level: SYS_OR_SIG and the following code:
OemLock v3 = this.mOemLock;
boolean v4 = v3.isOemUnlockAllowedByCarrier();
boolean v6 = v5.isOemUnlockAllowedByDevice();
v9.forceOemUnlockEnabled(1);

