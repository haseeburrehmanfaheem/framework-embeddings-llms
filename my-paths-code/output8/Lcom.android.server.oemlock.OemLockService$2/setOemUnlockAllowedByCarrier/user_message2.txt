The method setOemUnlockAllowedByCarrier has the following code snippet:

This is path 1 for the API with depth 2:
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	int v4 = UserHandle.getCallingUserId();
	long v5 = Binder.clearCallingIdentity();
	UserManager v6 = UserManager.get(this.mContext);
	boolean v7 = v6.isUserAdmin(v4);
	if (v7 == 0) {
		Binder.restoreCallingIdentity(v5);
		long v9 = Binder.clearCallingIdentity();
		OemLock v10 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
		v10.setOemUnlockAllowedByCarrier(p1, p2);
		Binder.restoreCallingIdentity(v9);
		return;
	}
}


This is path 2 for the API with depth 1:
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	this.this$0.enforceUserIsAdmin();
	long v4 = Binder.clearCallingIdentity();
	OemLock v5 = this.mOemLock;
	v5.setOemUnlockAllowedByCarrier(p1, p2);
	Binder.restoreCallingIdentity(v4);
	return;
}


This is path 3 for the API with depth 0:
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v3 = Binder.clearCallingIdentity();
	OemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v4.setOemUnlockAllowedByCarrier(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return;
}

and the following sink code:
['long v4 = Binder.clearCallingIdentity();\nOemLock v5 = this.mOemLock;\nv5.setOemUnlockAllowedByCarrier(p1, p2);\nBinder.restoreCallingIdentity(v4);', 'int v4 = UserHandle.getCallingUserId();\nlong v5 = Binder.clearCallingIdentity();\nUserManager v6 = UserManager.get(this.mContext);\nboolean v7 = v6.isUserAdmin(v4);\nOemLock v10 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);\nv10.setOemUnlockAllowedByCarrier(p1, p2);', 'long v3 = Binder.clearCallingIdentity();\nOemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);\nv4.setOemUnlockAllowedByCarrier(p1, p2);\nBinder.restoreCallingIdentity(v3);']

The method setOemUnlockAllowedByCarrier has the following similar APIs:

- API Name: getAuthToken(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZZLandroid/os/Bundle;)V with Similarity Score: 0.8279216289520264
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = UserHandle.getCallingUserId();
long v5 = Binder.clearCallingIdentity();
AccountManagerService$UserAccounts v6 = this.mUsers.get(v4);
AuthenticatorDescription v8 = AuthenticatorDescription.newKey(Account.type);
RegisteredServicesCache$ServiceInfo v10 = this.mAuthenticatorCache.getServiceInfo(v8, AccountManagerService$UserAccounts.-$$Nest$fgetuserId(v6));

- API Name: setOemUnlockAllowedByUser(Z)V with Similarity Score: 0.8067905902862549
  - Access Control Level: SYS_OR_SIG and the following code:
OemLock v15 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
boolean v16 = v15.isOemUnlockAllowedByCarrier();
OemLock v17 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
v17.setOemUnlockAllowedByDevice(p1);

