The method setAutofillFailure in the following class Lcom.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub has the following code snippet:

This is path 1 for the API with depth 2:
public void setAutofillFailure(int p1, List p2, int p3){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p3);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = IAutoFillManager$Stub.getCallingUid();
		boolean v6 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v6 != 0) {
			Object v7 = this.mSessions.get(p1);
			if (v7 == 0) {
				if (v4 == Session.uid) {
					int v9 = p2.size();
					if (0 >= v9) {
						Object v10 = p2.get(0);
						Object v11 = this.mViewStates.get(v10);
						if (v11 != 0) {
							v11.resetState(4);
							int v13 = v11.getState();
							v11.setState((v13 | 1024));
							if (Helper.sVerbose == 0) {
								String v20 = v11.getStateAsString();
								int v24 = p2.size();
								if ((0 + 1) >= v24) {
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setAutofillFailure(int p1, List p2, int p3){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p3);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = IAutoFillManager$Stub.getCallingUid();
		boolean v6 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v6 != 0) {
			Object v7 = this.mSessions.get(p1);
			if (v7 == 0) {
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setAutofillFailure(int p1, List p2, int p3){
	Object v1 = AutofillManagerService.access$3900(this.this$0);
	AbstractPerUserSystemService v2 = AutofillManagerService.access$4000(this.this$0, p3);
	if (v2 == 0) {
		if (Helper.sVerbose == 0) {
			return;
		}
	}
}

and the following sink code:
['int v4 = IAutoFillManager$Stub.getCallingUid();\nboolean v6 = AutofillManagerServiceImpl.isEnabledLocked();\nObject v7 = this.mSessions.get(p1);\nif (v7 == 0) { ... }\nObject v10 = p2.get(0);\nObject v11 = this.mViewStates.get(v10);\nv11.resetState(4);\nint v13 = v11.getState();\nv11.setState((v13 | 1024));']

The method setAutofillFailure has the following similar APIs:

- API Name: isSingleSessionActive(I)Z in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.780726432800293, Code:
int v7 = ActivityManager.handleIncomingUser(v4, v3, p1, 0, 0, "isSingleSessionActive", 0);
TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(v5);
Map v15 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
int v16 = v15.size();
  - Similarity: 0.7735688090324402, Code:
int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p1, "isSingleSessionActive");
TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);
Map v8 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
int v9 = v8.size();
  - Similarity: 0.761594295501709, Code:
int v6 = this.this$0.resolveCallingUserId(v4, v3, p1, "isSingleSessionActive");
TvInputManagerService$UserState v9 = this.this$0.getOrCreateUserStateLocked(v5);
Map v10 = this.sessionStateMap;
int v11 = v10.size();
  - Access Control Level: SYS_OR_SIG

- API Name: notifyAdResponse(Landroid/os/IBinder;Landroid/media/tv/AdResponse;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7720859050750732, Code:
int v3 = v4;
TvInteractiveAppManagerService$SessionState v10 = TvInteractiveAppManagerService.getOrCreateUserStateLocked(v3);
TvInteractiveAppManagerService$SessionState v11 = TvInteractiveAppManagerService.getSessionStateLocked(p1, v1, v10);
ITvInteractiveAppSession v14 = TvInteractiveAppManagerService$SessionState.-$$Nest$fgetmSession(v8);
v12.notifyAdResponse(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: removeOverlayView(Landroid/os/IBinder;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7683653235435486, Code:
int v5 = ActivityManager.handleIncomingUser(v2, v1, p2, 0, 0, "removeOverlayView", 0);
TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p1, v1, v3);
ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
ITvInputSession v8 = v9;
v8.removeOverlayView();
  - Access Control Level: SYS_OR_SIG

- API Name: releaseSession(Landroid/os/IBinder;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7582611441612244, Code:
int v5 = ActivityManager.handleIncomingUser(v2, v1, p2, 0, 0, "releaseSession", 0);
TvInteractiveAppManagerService$SessionState v10 = TvInteractiveAppManagerService.getSessionStateLocked(p1, v1, v3);
ITvInteractiveAppSession v12 = TvInteractiveAppManagerService$SessionState.-$$Nest$fgetmSession(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: registerCallback(Landroid/media/tv/interactive/ITvInteractiveAppManagerCallback;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7508066296577454, Code:
int v3 = v4;
TvInteractiveAppManagerService$UserState v10 = TvInteractiveAppManagerService.getUserStateLocked(v3);
TvInteractiveAppManagerService$UserState v11 = new TvInteractiveAppManagerService$UserState(v3,0);
this.mUserStates.put(v3, v11);
RemoteCallbackList v14 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
boolean v15 = v14.register(p1);
  - Access Control Level: NONE

