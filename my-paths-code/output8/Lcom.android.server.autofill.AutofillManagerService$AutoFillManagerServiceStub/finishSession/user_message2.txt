The method finishSession has the following code snippet:

This is path 1 for the API with depth 2:
public void finishSession(int p1, int p2, int p3){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p2);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = IAutoFillManager$Stub.getCallingUid();
		boolean v6 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v6 != 0) {
			Object v7 = this.mSessions.get(p1);
			if (v7 == 0) {
				if (v4 == Session.uid) {
					if (this.mDestroyed == 0) {
						this.mSessionState = 2;
						FillResponse v9 = Session.getLastResponseLocked("showSaveLocked(%s)");
						if (v9 != 0) {
							if (0 != 0) {
								int v10 = 0.getFlags();
								if ((v10 & 4) == 0) {
									ArrayMap v11 = Helper.createSanitizers(0);
									ArrayMap v12 = new ArrayMap();
									ArraySet v14 = new ArraySet();
									AutofillId v16 = 0.getRequiredIds();
									if (v16 == 0) {
										if (0 >= v16.length) {
											AutofillId v17 = 0.getOptionalIds();
											if (Helper.sVerbose == 0) {
												if (v17 == 0) {
													if (0 != 0) {
														if (Helper.sDebug == 0) {
															Session$SaveResult v26 = new Session$SaveResult(0,1,3);
															Session$SaveResult v8 = v26;
															int v28 = this.mSaveDialogNotShowReason;
															Session$$ExternalSyntheticLambda1 v30 = new Session$$ExternalSyntheticLambda1();
															Integer v32 = Integer.valueOf(v28);
															Integer v33 = Integer.valueOf(p3);
															Message v34 = PooledLambda.obtainMessage(v30, Session, v32, v33);
															boolean v35 = this.mHandler.sendMessage(v34);
															boolean v36 = this.mLogSaveShown;
															if (v36 == 0) {
																Session$$ExternalSyntheticLambda0 v38 = new Session$$ExternalSyntheticLambda0();
																Message v40 = PooledLambda.obtainMessage(v38, Session);
																boolean v41 = this.mHandler.sendMessage(v40);
																boolean v42 = this.mRemoveSession;
																if (Helper.sVerbose == 0) {
																	if (v42 == 0) {
																		if (Helper.sVerbose == 0) {
																			if (this.mDestroyed == 0) {
																				boolean v58 = Session.isSaveUiPendingLocked();
																				if (v58 == 0) {
																					RemoteFillService v59 = Session.destroyLocked();
																					this.mService.removeSessionLocked(this.id);
																					if (v59 == 0) {
																						v59.destroy();
																						this.mSessionState = 3;
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void finishSession(int p1, int p2, int p3){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p2);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = IAutoFillManager$Stub.getCallingUid();
		boolean v6 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v6 != 0) {
			Object v7 = this.mSessions.get(p1);
			if (v7 == 0) {
				if (v4 == Session.uid) {
					Session$SaveResult v8 = v7.showSaveLocked();
					int v9 = v8.getNoSaveUiReason();
					v7.logContextCommitted(v9, p3);
					boolean v11 = v8.isLogSaveShown();
					if (v11 == 0) {
						v7.logSaveUiShown();
						boolean v13 = v8.isRemoveSession();
						if (Helper.sVerbose == 0) {
							if (v13 == 0) {
								v7.removeFromServiceLocked();
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void finishSession(int p1, int p2, int p3){
	Object v1 = AutofillManagerService.access$4100(this.this$0);
	AbstractPerUserSystemService v2 = AutofillManagerService.access$4200(this.this$0, p2);
	if (v2 == 0) {
		if (Helper.sVerbose == 0) {
			return;
		}
	}
}

and the following sink code:
['AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p2);\nint v4 = IAutoFillManager$Stub.getCallingUid();\nSession$SaveResult v26 = new Session$SaveResult(0,1,3);\nthis.mHandler.sendMessage(v34);', 'AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p2);\nSession$SaveResult v8 = v7.showSaveLocked();\nv7.logContextCommitted(v9, p3);']

The method finishSession has the following similar APIs:

- API Name: cancelSession(II)V with Similarity Score: 0.8960276246070862
  - Access Control Level: NONE and the following code:
AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p2);
int v4 = IAutoFillManager$Stub.getCallingUid();
Object v7 = this.mSessions.get(p1);
v7.removeFromServiceLocked();

- API Name: cancelSession(II)V with Similarity Score: 0.8587465882301331
  - Access Control Level: NONE and the following code:
AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p2);
int v4 = IAutoFillManager$Stub.getCallingUid();
Object v7 = this.mSessions.get(p1);
v7.removeFromServiceLocked();

