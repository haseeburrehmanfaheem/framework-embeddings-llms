The method getAvailableFieldClassificationAlgorithms has the following code snippet:

This is path 1 for the API with depth 2:
public void getAvailableFieldClassificationAlgorithms(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getFCAlgorithms()", v5);
		if (v7 != 0) {
			FieldClassificationStrategy$$ExternalSyntheticLambda0 v9 = new FieldClassificationStrategy$$ExternalSyntheticLambda0();
			Object v11 = FieldClassificationStrategy.getMetadataValue("android.autofill.field_classification.available_algorithms", v9);
			String v8 = v11;
			String v6 = v8;
			Bundle v14 = SyncResultReceiver.bundleFor(v6);
			AutofillManagerService.send(p1, v14);
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void getAvailableFieldClassificationAlgorithms(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getFCAlgorithms()", v5);
		if (v7 != 0) {
			String v8 = this.mFieldClassificationStrategy.getAvailableAlgorithms();
			String v6 = v8;
			this.this$0.send(p1, v6);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void getAvailableFieldClassificationAlgorithms(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AutofillManagerService.access$3100(this.this$0);
	AbstractPerUserSystemService v3 = AutofillManagerService.access$3200(this.this$0, v1);
	if (v3 == 0) {
		if (Helper.sVerbose == 0) {
			AutofillManagerService.-$$Nest$msend(this.this$0, p1, getAvailableFieldClassificationAlgorithms());
			return;
		}
	}
}

and the following sink code:
['int v1 = UserHandle.getCallingUserId();\nAbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);\nString v8 = this.mFieldClassificationStrategy.getAvailableAlgorithms();\nthis.this$0.send(p1, v6);', 'int v1 = UserHandle.getCallingUserId();\nAbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);\nObject v2 = AbstractMasterSystemService.mLock;\nFieldClassificationStrategy$$ExternalSyntheticLambda0 v9 = new FieldClassificationStrategy$$ExternalSyntheticLambda0();\nObject v11 = FieldClassificationStrategy.getMetadataValue("android.autofill.field_classification.available_algorithms", v9);\nBundle v14 = SyncResultReceiver.bundleFor(v6);\nAutofillManagerService.send(p1, v14);']

The method getAvailableFieldClassificationAlgorithms has the following similar APIs:

- API Name: getFillEventHistory(Lcom/android/internal/os/IResultReceiver;)V with Similarity Score: 0.8623532056808472
  - Access Control Level: NONE and the following code:
int v1 = UserHandle.getCallingUserId();
AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
FillEventHistory v6 = this.mAugmentedAutofillEventHistory;
Bundle v11 = SyncResultReceiver.bundleFor(v6);
AutofillManagerService.send(p1, v11);

- API Name: getUserDataId(Lcom/android/internal/os/IResultReceiver;)V with Similarity Score: 0.8341686129570007
  - Access Control Level: NONE and the following code:
int v1 = UserHandle.getCallingUserId();
AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getUserData", v5);
AutofillManagerService.send(p1, v11);

