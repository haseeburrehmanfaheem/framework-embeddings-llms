This is path 1 for the API with depth 2:
public void getFillEventHistory(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		if (this.mEventHistory == 0) {
			boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getFillEventHistory", v5);
			if (v7 == 0) {
				if (this.mAugmentedAutofillEventHistory == 0) {
					boolean v8 = AutofillManagerServiceImpl.isCalledByAugmentedAutofillServiceLocked("getFillEventHistory", v5);
					if (v8 == 0) {
						FillEventHistory v6 = this.mAugmentedAutofillEventHistory;
						Bundle v11 = SyncResultReceiver.bundleFor(v6);
						AutofillManagerService.send(p1, v11);
						return;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void getFillEventHistory(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		if (this.mEventHistory == 0) {
			boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getFillEventHistory", v5);
			if (v7 == 0) {
				if (this.mAugmentedAutofillEventHistory == 0) {
					boolean v8 = AutofillManagerServiceImpl.isCalledByAugmentedAutofillServiceLocked("getFillEventHistory", v5);
					if (v8 == 0) {
						FillEventHistory v6 = this.mAugmentedAutofillEventHistory;
						this.this$0.send(p1, v6);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void getFillEventHistory(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AutofillManagerService.access$1700(this.this$0);
	AbstractPerUserSystemService v3 = AutofillManagerService.access$1800(this.this$0, v1);
	if (v3 == 0) {
		if (Helper.sVerbose == 0) {
			AutofillManagerService.-$$Nest$msend(this.this$0, p1, getFillEventHistory());
			return;
		}
	}
}
