This is path 1 for the API with depth 2:
public void startSession(IBinder p1, IBinder p2, AutofillId p3, Rect p4, AutofillValue p5, int p6, boolean p7, int p8, ComponentName p9, boolean p10, IResultReceiver p11){
	Preconditions.checkArgument(1, "userId");
	Context v10 = this.this$0.getContext();
	PackageManager v11 = v10.getPackageManager();
	PackageInfo v12 = v11.getPackageInfoAsUser(v5, 0, p6);
	ActivityManagerInternal v13 = this.mAm;
	int v14 = v13.getTaskIdForActivity(p1, 0);
	Object v15 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v17 = this.this$0.getServiceForUserLocked(p6);
	AbstractPerUserSystemService v16 = v17;
	int v18 = IAutoFillManager$Stub.getCallingUid();
	boolean v19 = AbstractMasterSystemService.mAllowInstantService;
	if ((p8 & 8) == 0) {
		boolean v21 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v21 != 0) {
			if (1 != 0) {
				boolean v23 = this.mDisabledInfoCache.isAutofillDisabledLocked(AbstractPerUserSystemService.mUserId, p9);
				boolean v22 = v23;
				if (v22 == 0) {
					boolean v25 = AutofillManagerService.mAugmentedAutofillState.isWhitelisted(AbstractPerUserSystemService.mUserId, p9);
					boolean v24 = v25;
					if (v24 == 0) {
						if (Helper.sDebug == 0) {
							if (Helper.sVerbose == 0) {
								long v44 = System.currentTimeMillis();
								if ((this.mLastPrune < (v44 - 30000)) >= 0) {
									this.mLastPrune = v44;
									int v45 = this.mSessions.size();
									if (v45 <= 0) {
										AutofillManagerServiceImpl$PruneTask v46 = new AutofillManagerServiceImpl$PruneTask(AutofillManagerServiceImpl,0);
										Void v48 = new Void(0);
										AsyncTask v49 = v46.execute(v48);
										if ((0 + 1) <= 2048) {
											int v51 = this.sRandom.nextInt();
											int v52 = Math.abs(v51);
											if (v52 == 0) {
												if (v52 == 2147483647) {
													int v53 = this.mSessions.indexOfKey(v52);
													if (v53 >= 0) {
														if (((0 + 1) + 1) <= 2048) {
															int v54 = this.sRandom.nextInt();
															int v55 = Math.abs(v54);
															if (v55 == 0) {
																if (v55 == 2147483647) {
																	int v56 = this.mSessions.indexOfKey(v55);
																	if (v56 >= 0) {
																		AutofillManagerServiceImpl.assertCallerLocked(p9, p10);
																		if (this.mInfo != 0) {
																			ServiceInfo v58 = this.mInfo.getServiceInfo();
																			ComponentName v59 = v58.getComponentName();
																			Session v60 = new Session(AutofillManagerServiceImpl,this.mUi,v61,this.mHandler,AbstractPerUserSystemService.mUserId,AbstractPerUserSystemService.mLock,v55,v14,v18,p1,p2,p7,this.mUiLatencyHistory,this.mWtfHistory,0,p9,p10,v19,1,p8,this.mInputMethodManagerInternal);
																			Context v61 = AutofillManagerServiceImpl.getContext();
																			this.mSessions.put(Session.id, v60);
																			Session v50 = v60;
																			if (v50 != 0) {
																				long v20 = 2147483647;
																				if ((v20 >> 32) == 0) {
																					Bundle v66 = SyncResultReceiver.bundleFor((v20 >> 32));
																					p11.send(v20, v66);
																					return;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void startSession(IBinder p1, IBinder p2, AutofillId p3, Rect p4, AutofillValue p5, int p6, boolean p7, int p8, ComponentName p9, boolean p10, IResultReceiver p11){
	Preconditions.checkArgument(1, "userId");
	Context v10 = this.this$0.getContext();
	PackageManager v11 = v10.getPackageManager();
	PackageInfo v12 = v11.getPackageInfoAsUser(v5, 0, p6);
	ActivityManagerInternal v13 = this.mAm;
	int v14 = v13.getTaskIdForActivity(p1, 0);
	Object v15 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v17 = this.this$0.getServiceForUserLocked(p6);
	AbstractPerUserSystemService v16 = v17;
	int v18 = IAutoFillManager$Stub.getCallingUid();
	boolean v19 = AbstractMasterSystemService.mAllowInstantService;
	if ((p8 & 8) == 0) {
		boolean v21 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v21 != 0) {
			if (1 != 0) {
				boolean v22 = AutofillManagerServiceImpl.isAutofillDisabledLocked(p9);
				if (v22 == 0) {
					boolean v23 = AutofillManagerServiceImpl.isWhitelistedForAugmentedAutofillLocked(p9);
					if (v23 == 0) {
						if (Helper.sDebug == 0) {
							if (Helper.sVerbose == 0) {
								AutofillManagerServiceImpl.pruneAbandonedSessionsLocked();
								Session v42 = AutofillManagerServiceImpl.createSessionByTokenLocked(p1, v14, v18, p2, p7, p9, p10, v19, 1, p8);
								if (v42 != 0) {
									long v20 = 2147483647;
									if ((v20 >> 32) == 0) {
										this.this$0.send(p11, v20, (v20 >> 32));
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void startSession(IBinder p1, IBinder p2, AutofillId p3, Rect p4, AutofillValue p5, int p6, boolean p7, int p8, ComponentName p9, boolean p10, IResultReceiver p11){
	Preconditions.checkArgument(1, "userId");
	Context v10 = this.this$0.getContext();
	PackageManager v11 = v10.getPackageManager();
	PackageInfo v12 = v11.getPackageInfoAsUser(v5, 0, p6);
	ActivityManagerInternal v13 = AutofillManagerService.-$$Nest$fgetmAm(this.this$0);
	int v14 = v13.getTaskIdForActivity(p1, 0);
	Object v15 = AutofillManagerService.access$1400(this.this$0);
	AbstractPerUserSystemService v16 = AutofillManagerService.access$1500(this.this$0, p6);
	int v17 = IAutoFillManager$Stub.getCallingUid();
	boolean v18 = AutofillManagerService.access$1600(this.this$0);
	long v19 = v16.startSessionLocked(p1, v14, v17, p2, p3, p4, p5, p7, p9, p10, v18, p8);
	if ((v19 >> 32) == 0) {
		AutofillManagerService.-$$Nest$msend(this.this$0, p11, v19, (v19 >> 32));
		return;
	}
}
