The method isOpened has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isOpened(String p1, String p2){
	if (v4 != 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			Object v5 = this.mSipGroups.get(p1);
			if (v5 != 0) {
				boolean v7 = 1;
				if (v7 != 0) {
					boolean v9 = 1;
					if (v9 == 0) {
						boolean v6 = 0;
						if (v6 == 0) {
							p0.log("only creator or radio can query on the profile");
							return 0;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isOpened(String p1, String p2){
	if (v4 != 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			Object v5 = this.mSipGroups.get(p1);
			if (v5 != 0) {
				boolean v7 = SipService.isCallerRadio();
				if (v7 != 0) {
					boolean v8 = SipService.isCallerCreator(v5);
					if (v8 == 0) {
						boolean v6 = 0;
						if (v6 == 0) {
							int v10 = Rlog.d("SipService", "only creator or radio can query on the profile");
							return 0;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isOpened(String p1, String p2){
	boolean v1 = p0.canUseSip(p2, "isOpened");
	if (v1 != 0) {
		Object v2 = this.mSipGroups.get(p1);
		if (v2 != 0) {
			boolean v3 = p0.isCallerCreatorOrRadio(v2);
			if (v3 == 0) {
				p0.log("only creator or radio can query on the profile");
				return 0;
			}
		}
	}
}

and the following sink code:
['boolean v1 = p0.canUseSip(p2, "isOpened");\nObject v2 = this.mSipGroups.get(p1);\nboolean v3 = p0.isCallerCreatorOrRadio(v2);']

The method isOpened has the following similar APIs:

- API Name: isRegistered(Ljava/lang/String;Ljava/lang/String;)Z with Similarity Score: 0.9222909808158875
  - Access Control Level: DANGEROUS and the following code:
Object v2 = this.mSipGroups.get(p1);
boolean v3 = p0.isCallerCreatorOrRadio(v2);
boolean v4 = v2.isRegistered();
return v4;

- API Name: close(Ljava/lang/String;Ljava/lang/String;)V with Similarity Score: 0.8430317640304565
  - Access Control Level: DANGEROUS and the following code:
boolean v1 = p0.canUseSip(p2, "close");
Object v4 = this.mSipGroups.remove(p1);
p0.notifyProfileRemoved(v5);
v4.close();

