The method open in the following class Lcom.android.server.sip.SipService has the following code snippet:

This is path 1 for the API with depth 2:
public void open(SipProfile p1, String p2){
	if (v4 != 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			int v5 = Binder.getCallingUid();
			p1.setCallingUid(v5);
			String v8 = p1.getUriString();
			Object v9 = this.mSipGroups.get(v8);
			if (v9 != 0) {
				SipService$SipSessionGroupExt v10 = new SipService$SipSessionGroupExt(SipService,p1,0,0);
				Object v12 = this.mSipGroups.put(v8, v10);
				StringBuilder v14 = new StringBuilder();
				StringBuilder v16 = v14.append("notify: profile added: ");
				StringBuilder v17 = v16.append(p1);
				String v18 = v17.toString();
				SipService.log(v18);
				Intent v20 = new Intent("com.android.phone.SIP_ADD_PHONE");
				String v22 = p1.getUriString();
				Intent v23 = v20.putExtra("android:localSipUri", v22);
				this.mContext.sendBroadcast(v20, "android.permission.USE_SIP");
				int v25 = this.mSipGroups.size();
				if (v25 != 1) {
					SipService.registerReceivers();
					SipService$SipSessionGroupExt v7 = v10;
					p0.loge("openToMakeCalls()", caughtException);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void open(SipProfile p1, String p2){
	if (v4 != 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			int v5 = Binder.getCallingUid();
			p1.setCallingUid(v5);
			String v8 = p1.getUriString();
			Object v9 = this.mSipGroups.get(v8);
			if (v9 != 0) {
				SipService$SipSessionGroupExt v10 = new SipService$SipSessionGroupExt(SipService,p1,0,0);
				Object v12 = this.mSipGroups.put(v8, v10);
				SipService.notifyProfileAdded(p1);
				SipService$SipSessionGroupExt v7 = v10;
				int v15 = Rlog.e("SipService", "openToMakeCalls()", caughtException);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void open(SipProfile p1, String p2){
	boolean v1 = p0.canUseSip(p2, "open");
	if (v1 != 0) {
		int v2 = Binder.getCallingUid();
		p1.setCallingUid(v2);
		SipService$SipSessionGroupExt v4 = p0.createGroup(p1);
		p0.loge("openToMakeCalls()", caughtException);
		return;
	}
}

and the following sink code:
['int v5 = Binder.getCallingUid();\np1.setCallingUid(v5);\nString v8 = p1.getUriString();\nObject v9 = this.mSipGroups.get(v8);\nSipService$SipSessionGroupExt v10 = new SipService$SipSessionGroupExt(SipService,p1,0,0);\nObject v12 = this.mSipGroups.put(v8, v10);', 'int v2 = Binder.getCallingUid();\np1.setCallingUid(v2);\nSipService$SipSessionGroupExt v4 = p0.createGroup(p1);']

The method open has the following similar APIs:

- API Name: open3(Landroid/net/sip/SipProfile;Landroid/app/PendingIntent;Landroid/net/sip/ISipSessionListener;Ljava/lang/String;)V in the following Class: Lcom.android.server.sip.SipService with the following sink code entries:
  - Similarity: 0.992743730545044, Code:
int v2 = Binder.getCallingUid();
p1.setCallingUid(v2);
SipService$SipSessionGroupExt v16 = p0.createGroup(p1, p2, p3);
  - Similarity: 0.9760438799858093, Code:
int v5 = Binder.getCallingUid();
p1.setCallingUid(v5);
SipService$SipSessionGroupExt v33 = new SipService$SipSessionGroupExt(SipService,p1,p2,p3);
Object v35 = this.mSipGroups.put(v31, v33);
  - Access Control Level: DANGEROUS

- API Name: createSession(Landroid/net/sip/SipProfile;Landroid/net/sip/ISipSessionListener;Ljava/lang/String;)Landroid/net/sip/ISipSession; in the following Class: Lcom.android.server.sip.SipService with the following sink code entries:
  - Similarity: 0.9829636216163635, Code:
int v12 = Binder.getCallingUid();
p1.setCallingUid(v12);
SipService$SipSessionGroupExt v17 = new SipService$SipSessionGroupExt(SipService,p1,0,0);
Object v19 = this.mSipGroups.put(v15, v17);
  - Similarity: 0.791776716709137, Code:
SipService$SipSessionGroupExt v10 = p0.createGroup(p1);
ISipSession v11 = v10.createSession(p2);
  - Access Control Level: DANGEROUS

- API Name: isRegistered(Ljava/lang/String;Ljava/lang/String;)Z in the following Class: Lcom.android.server.sip.SipService with the following sink code entries:
  - Similarity: 0.7925803065299988, Code:
Object v5 = this.mSipGroups.get(p1);
boolean v7 = SipService.isCallerRadio();
boolean v8 = SipService.isCallerCreator(v5);
boolean v10 = this.mAutoRegistration.isRegistered();
boolean v9 = v10;
return v9;
  - Access Control Level: DANGEROUS

- API Name: notifyError(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7580112814903259, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
int v4 = this.this$0.resolveCallingUserId(v2, v1, p4, "notifyError");
TvInteractiveAppManagerService$SessionState v8 = this.this$0.getSessionStateLocked(p1, v1, v3);
ITvInteractiveAppSession v10 = this.this$0.getSessionLocked(v7);
v9.notifyError(p2, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: isOpened(Ljava/lang/String;Ljava/lang/String;)Z in the following Class: Lcom.android.server.sip.SipService with the following sink code entries:
  - Similarity: 0.7571378946304321, Code:
boolean v1 = p0.canUseSip(p2, "isOpened");
Object v2 = this.mSipGroups.get(p1);
boolean v3 = p0.isCallerCreatorOrRadio(v2);
  - Access Control Level: DANGEROUS

