The method requestBaseStateOverride in the following class Lcom.android.server.devicestate.DeviceStateManagerService$BinderService has the following code snippet:

This is path 1 for the API with depth 2:
public void requestBaseStateOverride(IBinder p1, int p2, int p3){
	if (p1 == 0) {
		long v4 = Binder.clearCallingIdentity();
		Optional v7 = DeviceStateManagerService.getStateLocked(p2);
		boolean v8 = v7.isPresent();
		if (v8 == 0) {
			Object v9 = this.mProcessRecords.get(v1);
			if (v9 == 0) {
				boolean v10 = this.mOverrideRequestController.hasRequest(p1, 1);
				if (v10 != 0) {
					OverrideRequest v11 = new OverrideRequest(p1,v1,p2,p3,1);
					this.mOverrideRequestController.addBaseStateRequest(v11);
					Binder.restoreCallingIdentity(v4);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void requestBaseStateOverride(IBinder p1, int p2, int p3){
	if (p1 == 0) {
		long v4 = Binder.clearCallingIdentity();
		this.this$0.requestBaseStateOverrideInternal(p2, p3, v1, p1);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}


This is path 3 for the API with depth 0:
public void requestBaseStateOverride(IBinder p1, int p2, int p3){
	if (p1 == 0) {
		long v4 = Binder.clearCallingIdentity();
		DeviceStateManagerService.-$$Nest$mrequestBaseStateOverrideInternal(this.this$0, p2, p3, v1, p1);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}

and the following sink code:
['OverrideRequest v11 = new OverrideRequest(p1,v1,p2,p3,1);\nthis.mOverrideRequestController.addBaseStateRequest(v11);', 'Optional v7 = DeviceStateManagerService.getStateLocked(p2);', 'this.this$0.requestBaseStateOverrideInternal(p2, p3, v1, p1);', 'DeviceStateManagerService.-$$Nest$mrequestBaseStateOverrideInternal(this.this$0, p2, p3, v1, p1);']

The method requestBaseStateOverride has the following similar APIs:

- API Name: cancelBaseStateOverride()V in the following Class: Lcom.android.server.devicestate.DeviceStateManagerService$BinderService with the following sink code entries:
  - Similarity: 0.85451740026474, Code:
DeviceStateManagerService.-$$Nest$mcancelBaseStateOverrideInternal(this.this$0, v1);
  - Similarity: 0.7399572134017944, Code:
this.this$0.cancelBaseStateOverrideInternal(v1);
  - Access Control Level: SYS_OR_SIG

- API Name: getDeviceStateInfo()Landroid/hardware/devicestate/DeviceStateInfo; in the following Class: Lcom.android.server.devicestate.DeviceStateManagerService$BinderService with the following sink code entries:
  - Similarity: 0.761748194694519, Code:
DeviceStateInfo v3 = this.this$0.getDeviceStateInfoLocked();
return v2;
  - Similarity: 0.7415153980255127, Code:
DeviceStateInfo v2 = DeviceStateManagerService.-$$Nest$mgetDeviceStateInfoLocked(this.this$0);
return v2;
  - Access Control Level: NONE

- API Name: getState(Landroid/media/IMediaRouterClient;)Landroid/media/MediaRouterClientState; in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7279958724975586, Code:
MediaRouterClientState v2 = p0.getStateLocked(p1);
return v2;
  - Access Control Level: NONE

- API Name: requestState(Landroid/os/IBinder;II)V in the following Class: Lcom.android.server.devicestate.DeviceStateManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7114065289497375, Code:
int v1 = Binder.getCallingPid();
DeviceStateManagerService.-$$Nest$massertCanRequestDeviceState(this.this$0, v1, p2);
DeviceStateManagerService.-$$Nest$mrequestStateInternal(this.this$0, p2, p3, v1, p1);
  - Access Control Level: SYS_OR_SIG

- API Name: setVirtualDisplayState(Landroid/hardware/display/IVirtualDisplayCallback;Z)V in the following Class: Lcom.android.server.display.DisplayManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7088119387626648, Code:
DisplayManagerService.-$$Nest$msetVirtualDisplayStateInternal(this.this$0, v2, p2);
  - Access Control Level: NONE

