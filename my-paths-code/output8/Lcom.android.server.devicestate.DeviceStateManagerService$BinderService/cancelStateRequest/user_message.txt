This is path 1 for the API with depth 2:
public void cancelStateRequest(){
	int v1 = Binder.getCallingPid();
	long v8 = Binder.clearCallingIdentity();
	Object v11 = this.mProcessRecords.get(v1);
	if (v11 == 0) {
		Object v12 = Objects.requireNonNull(this.mOverrideRequestController);
		DeviceStateManagerService$$ExternalSyntheticLambda3 v13 = new DeviceStateManagerService$$ExternalSyntheticLambda3(this.mOverrideRequestController);
		this.mActiveOverride.ifPresent(v13);
		Binder.restoreCallingIdentity(v8);
		return;
	}
}


This is path 2 for the API with depth 1:
public void cancelStateRequest(){
	int v1 = Binder.getCallingPid();
	this.this$0.assertCanControlDeviceState(v1);
	long v4 = Binder.clearCallingIdentity();
	this.this$0.cancelStateRequestInternal(v1);
	Binder.restoreCallingIdentity(v4);
	return;
}


This is path 3 for the API with depth 0:
public void cancelStateRequest(){
	int v1 = Binder.getCallingPid();
	DeviceStateManagerService.-$$Nest$massertCanControlDeviceState(this.this$0, v1);
	long v3 = Binder.clearCallingIdentity();
	DeviceStateManagerService.-$$Nest$mcancelStateRequestInternal(this.this$0, v1);
	Binder.restoreCallingIdentity(v3);
	return;
}
