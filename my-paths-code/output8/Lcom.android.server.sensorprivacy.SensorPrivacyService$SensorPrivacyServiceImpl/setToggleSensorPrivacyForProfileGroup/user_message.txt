This is path 1 for the API with depth 2:
public void setToggleSensorPrivacyForProfileGroup(int p1, int p2, int p3, boolean p4){
	if (p1 != -2) {
		int v2 = this.mCurrentUser;
		UserManagerInternal v3 = this.mUserManagerInternal;
		int v4 = v3.getProfileParentId(p1);
		SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2 v5 = new SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2(p0,v4,p2,p3,p4);
		[I v9 = this.mUserManagerInternal.getUserIds();
		if (0 >= v9.length) {
			Integer v10 = Integer.valueOf(v9[0]);
			v5.accept(v10);
			if ((0 + 1) >= v9.length) {
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setToggleSensorPrivacyForProfileGroup(int p1, int p2, int p3, boolean p4){
	if (p1 != -2) {
		int v2 = this.mCurrentUser;
		UserManagerInternal v3 = this.mUserManagerInternal;
		int v4 = v3.getProfileParentId(p1);
		SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2 v5 = new SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2(p0,v4,p2,p3,p4);
		this.this$0.forAllUsers(v5);
		return;
	}
}


This is path 3 for the API with depth 0:
public void setToggleSensorPrivacyForProfileGroup(int p1, int p2, int p3, boolean p4){
	if (p1 != -2) {
		int v2 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
		UserManagerInternal v3 = SensorPrivacyService.-$$Nest$fgetmUserManagerInternal(this.this$0);
		int v4 = v3.getProfileParentId(p1);
		SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2 v5 = new SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2(p0,v4,p2,p3,p4);
		SensorPrivacyService.-$$Nest$mforAllUsers(this.this$0, v5);
		return;
	}
}
