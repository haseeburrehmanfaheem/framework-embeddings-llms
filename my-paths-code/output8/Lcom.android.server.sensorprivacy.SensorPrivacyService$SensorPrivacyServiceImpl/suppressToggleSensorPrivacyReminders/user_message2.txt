The method suppressToggleSensorPrivacyReminders in the following class Lcom.android.server.sensorprivacy.SensorPrivacyService$SensorPrivacyServiceImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void suppressToggleSensorPrivacyReminders(int p1, int p2, IBinder p3, boolean p4){
	if (p1 != -2) {
		int v2 = this.mCurrentUser;
		Object v3 = Objects.requireNonNull(p3);
		Pair v4 = new Pair(v5,v6);
		Integer v5 = Integer.valueOf(p2);
		UserHandle v6 = UserHandle.of(p1);
		if (p4 == 0) {
			SensorPrivacyService$SensorPrivacyHandler$$ExternalSyntheticLambda0 v9 = new SensorPrivacyService$SensorPrivacyHandler$$ExternalSyntheticLambda0();
			SensorPrivacyService$SensorPrivacyServiceImpl v11 = this.mSensorPrivacyServiceImpl;
			Message v12 = PooledLambda.obtainMessage(v9, v11, v4, p3);
			boolean v13 = SensorPrivacyService$SensorPrivacyHandler.sendMessage(v12);
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void suppressToggleSensorPrivacyReminders(int p1, int p2, IBinder p3, boolean p4){
	if (p1 != -2) {
		int v2 = this.mCurrentUser;
		Object v3 = Objects.requireNonNull(p3);
		Pair v4 = new Pair(v5,v6);
		Integer v5 = Integer.valueOf(p2);
		UserHandle v6 = UserHandle.of(p1);
		if (p4 == 0) {
			p3.linkToDeath(p0, 0);
			Object v9 = this.mSuppressReminders.get(v4);
			if (v9 != 0) {
				ArrayList v10 = new ArrayList(1);
				Object v12 = this.mSuppressReminders.put(v4, v10);
				boolean v13 = v9.add(p3);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void suppressToggleSensorPrivacyReminders(int p1, int p2, IBinder p3, boolean p4){
	if (p1 != -2) {
		int v2 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
		Object v3 = Objects.requireNonNull(p3);
		Pair v4 = new Pair(v5,v6);
		Integer v5 = Integer.valueOf(p2);
		UserHandle v6 = UserHandle.of(p1);
		if (p4 == 0) {
			p3.linkToDeath(p0, 0);
			Object v9 = this.mSuppressReminders.get(v4);
			if (v9 != 0) {
				ArrayList v10 = new ArrayList(1);
				Object v12 = this.mSuppressReminders.put(v4, v10);
				boolean v13 = v9.add(p3);
				return;
			}
		}
	}
}

and the following sink code:
['int v2 = this.mCurrentUser;\nObject v3 = Objects.requireNonNull(p3);\nPair v4 = new Pair(v5,v6);\nInteger v5 = Integer.valueOf(p2);\nUserHandle v6 = UserHandle.of(p1);', 'p3.linkToDeath(p0, 0);\nObject v9 = this.mSuppressReminders.get(v4);\nArrayList v10 = new ArrayList(1);\nObject v12 = this.mSuppressReminders.put(v4, v10);\nboolean v13 = v9.add(p3);', 'SensorPrivacyService$SensorPrivacyHandler$$ExternalSyntheticLambda0 v9 = new SensorPrivacyService$SensorPrivacyHandler$$ExternalSyntheticLambda0();\nMessage v12 = PooledLambda.obtainMessage(v9, v11, v4, p3);\nboolean v13 = SensorPrivacyService$SensorPrivacyHandler.sendMessage(v12);']

The method suppressToggleSensorPrivacyReminders has the following similar APIs:

- API Name: setToggleSensorPrivacy(IIIZ)V in the following Class: Lcom.android.server.sensorprivacy.SensorPrivacyService$SensorPrivacyServiceImpl with the following sink code entries:
  - Similarity: 0.8638498783111572, Code:
SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda3 v18 = new SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda3(SensorPrivacyService$SensorPrivacyServiceImpl,1,p1,p3,v17,p4,p2);
this.mSensorPrivacyStateController.atomic(v18);
  - Access Control Level: SYS_OR_SIG

- API Name: onSuggestConversationActions(Landroid/view/textclassifier/TextClassificationSessionId;Landroid/view/textclassifier/ConversationActions$Request;Landroid/service/textclassifier/ITextClassifierCallback;)V in the following Class: Lcom.android.server.textclassifier.TextClassificationManagerService with the following sink code entries:
  - Similarity: 0.7792366743087769, Code:
TextClassificationManagerService$$ExternalSyntheticLambda1 v5 = new TextClassificationManagerService$$ExternalSyntheticLambda1(p1,p2,p3);
int v11 = UserHandle.getCallingUserId();
TextClassificationManagerService$UserState v38 = new TextClassificationManagerService$UserState(TextClassificationManagerService,v11,0);
  - Access Control Level: SYS_OR_SIG

- API Name: setLockScreenShown(ZZ)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.776681661605835, Code:
ActivityTaskManagerService$$ExternalSyntheticLambda10 v6 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
Boolean v8 = Boolean.valueOf(p1);
Message v9 = PooledLambda.obtainMessage(v6, this.mAmInternal, v8);
boolean v10 = this.mH.sendMessage(v9);
  - Access Control Level: SYS_OR_SIG

- API Name: setToggleSensorPrivacyForProfileGroup(IIIZ)V in the following Class: Lcom.android.server.sensorprivacy.SensorPrivacyService$SensorPrivacyServiceImpl with the following sink code entries:
  - Similarity: 0.7719236612319946, Code:
int v4 = v3.getProfileParentId(p1);
SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2 v5 = new SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda2(p0,v4,p2,p3,p4);
  - Access Control Level: NORMAL

- API Name: registerAuthenticators(Ljava/util/List;)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.7718835473060608, Code:
IrisService$IrisServiceWrapper$$ExternalSyntheticLambda0 v9 = new IrisService$IrisServiceWrapper$$ExternalSyntheticLambda0(p0,p1);
boolean v11 = v6.post(v9);
  - Access Control Level: NORMAL

