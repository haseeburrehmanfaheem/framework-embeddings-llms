The method showSensorUseDialog has the following code snippet:

This is path 1 for the API with depth 2:
public void showSensorUseDialog(int p1){
	int v5 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
	SensorState v6 = this.mSensorPrivacyStateController.getState(1, v5, p1);
	boolean v7 = v6.isEnabled();
	boolean v3 = v7;
	if (v3 != 0) {
		int v10 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
		SensorState v11 = this.mSensorPrivacyStateController.getState(2, v10, p1);
		boolean v12 = v11.isEnabled();
		boolean v8 = v12;
		if (v8 == 0) {
			boolean v2 = 1;
			if (v2 != 0) {
				int v13 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
				UserHandle v14 = UserHandle.of(v13);
				p0.enqueueSensorUseReminderDialogAsync(-1, v14, "android", p1);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void showSensorUseDialog(int p1){
	boolean v3 = SensorPrivacyService$SensorPrivacyServiceImpl.isToggleSensorPrivacyEnabled(1, p1);
	if (v3 != 0) {
		boolean v4 = SensorPrivacyService$SensorPrivacyServiceImpl.isToggleSensorPrivacyEnabled(2, p1);
		if (v4 == 0) {
			boolean v2 = 1;
			if (v2 != 0) {
				int v5 = this.mCurrentUser;
				UserHandle v6 = UserHandle.of(v5);
				SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda4 v8 = new SensorPrivacyService$SensorPrivacyServiceImpl$$ExternalSyntheticLambda4();
				Integer v10 = Integer.valueOf(-1);
				Integer v11 = Integer.valueOf(p1);
				Message v12 = PooledLambda.obtainMessage(v8, SensorPrivacyService$SensorPrivacyServiceImpl, v10, v6, "android", v11);
				boolean v13 = this.mHandler.sendMessage(v12);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void showSensorUseDialog(int p1){
	boolean v2 = p0.isCombinedToggleSensorPrivacyEnabled(p1);
	if (v2 != 0) {
		int v3 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
		UserHandle v4 = UserHandle.of(v3);
		p0.enqueueSensorUseReminderDialogAsync(-1, v4, "android", p1);
		return;
	}
}

and the following sink code:
['int v5 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);\nSensorState v6 = this.mSensorPrivacyStateController.getState(1, v5, p1);\nSensorState v11 = this.mSensorPrivacyStateController.getState(2, v10, p1);\nUserHandle v14 = UserHandle.of(v13);\np0.enqueueSensorUseReminderDialogAsync(-1, v14, "android", p1);', 'boolean v3 = SensorPrivacyService$SensorPrivacyServiceImpl.isToggleSensorPrivacyEnabled(1, p1);\nboolean v4 = SensorPrivacyService$SensorPrivacyServiceImpl.isToggleSensorPrivacyEnabled(2, p1);\nUserHandle v6 = UserHandle.of(v5);\nMessage v12 = PooledLambda.obtainMessage(v8, SensorPrivacyService$SensorPrivacyServiceImpl, v10, v6, "android", v11);\nthis.mHandler.sendMessage(v12);', 'boolean v2 = p0.isCombinedToggleSensorPrivacyEnabled(p1);\nUserHandle v4 = UserHandle.of(v3);\np0.enqueueSensorUseReminderDialogAsync(-1, v4, "android", p1);']

The method showSensorUseDialog has the following similar APIs:

- API Name: isCombinedToggleSensorPrivacyEnabled(I)Z with Similarity Score: 0.8249439597129822
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = this.mCurrentUser;
SensorState v4 = this.mSensorPrivacyStateController.getState(1, v3, p1);
int v6 = SensorState.getState();
if (v6 != 1) { ... }
return 1;

- API Name: isToggleSensorPrivacyEnabled(II)Z with Similarity Score: 0.822378396987915
  - Access Control Level: SYS_OR_SIG and the following code:
int v2 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
SensorState v3 = this.mSensorPrivacyStateController.getState(p1, v2, p2);
boolean v4 = v3.isEnabled();

