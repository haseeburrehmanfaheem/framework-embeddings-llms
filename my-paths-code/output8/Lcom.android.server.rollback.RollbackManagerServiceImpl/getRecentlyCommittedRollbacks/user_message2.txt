The method getRecentlyCommittedRollbacks has the following code snippet:

This is path 1 for the API with depth 2:
public ParceledListSlice getRecentlyCommittedRollbacks(){
	Handler v2 = this.mHandler;
	Looper v3 = v2.getLooper();
	boolean v4 = v3.isCurrentThread();
	Preconditions.checkState((v4 ^ 1));
	p0.enforceManageRollbacks("getRecentlyCommittedRollbacks");
	RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);
	Handler v11 = RollbackManagerServiceImpl.getHandler();
	Looper v12 = v11.getLooper();
	boolean v13 = v12.isCurrentThread();
	Preconditions.checkState((v13 ^ 1));
	CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor);
	Object v16 = v15.get();
	Object v9 = v16;
	return v9;
}


This is path 2 for the API with depth 1:
public ParceledListSlice getRecentlyCommittedRollbacks(){
	Handler v2 = RollbackManagerServiceImpl.getHandler();
	Looper v3 = v2.getLooper();
	boolean v4 = v3.isCurrentThread();
	Preconditions.checkState((v4 ^ 1));
	if (v8 != 0) {
		RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v9 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);
		RollbackManagerServiceImpl.assertNotInWorkerThread();
		CompletableFuture v13 = CompletableFuture.supplyAsync(v9, this.mExecutor);
		Object v14 = v13.get();
		Object v11 = v14;
		return v11;
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getRecentlyCommittedRollbacks(){
	p0.assertNotInWorkerThread();
	p0.enforceManageRollbacks("getRecentlyCommittedRollbacks");
	RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);
	Object v5 = p0.awaitResult(v3);
	return v5;
}

and the following sink code:
['RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);\nCompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor);\nObject v16 = v15.get();\nreturn v9;', 'RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v9 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);\nCompletableFuture v13 = CompletableFuture.supplyAsync(v9, this.mExecutor);\nObject v14 = v13.get();\nreturn v11;', 'RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);\nObject v5 = p0.awaitResult(v3);\nreturn v5;']

The method getRecentlyCommittedRollbacks has the following similar APIs:

- API Name: getAvailableRollbacks()Landroid/content/pm/ParceledListSlice; with Similarity Score: 0.9963403940200806
  - Access Control Level: SYS_OR_SIG and the following code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0);
Object v5 = p0.awaitResult(v3);
return v5;

- API Name: getAvailableRollbacks()Landroid/content/pm/ParceledListSlice; with Similarity Score: 0.9951362013816833
  - Access Control Level: SYS_OR_SIG and the following code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v9 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0);
CompletableFuture v13 = CompletableFuture.supplyAsync(v9, this.mExecutor);
Object v14 = v13.get();
return v14;

