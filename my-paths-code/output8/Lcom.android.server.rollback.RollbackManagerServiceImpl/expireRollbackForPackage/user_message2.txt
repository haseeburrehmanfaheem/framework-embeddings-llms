The method expireRollbackForPackage in the following class Lcom.android.server.rollback.RollbackManagerServiceImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void expireRollbackForPackage(String p1){
	RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);
	Handler v7 = RollbackManagerServiceImpl.getHandler();
	Looper v8 = v7.getLooper();
	boolean v9 = v8.isCurrentThread();
	Preconditions.checkState((v9 ^ 1));
	CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);
	Object v12 = v11.get();
	return;
}


This is path 2 for the API with depth 1:
public void expireRollbackForPackage(String p1){
	RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);
	RollbackManagerServiceImpl.assertNotInWorkerThread();
	CompletableFuture v7 = CompletableFuture.runAsync(v3, this.mExecutor);
	Object v8 = v7.get();
	return;
}


This is path 3 for the API with depth 0:
public void expireRollbackForPackage(String p1){
	RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);
	p0.awaitResult(v3);
	return;
}

and the following sink code:
['RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);\nCompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);\nObject v12 = v11.get();', 'RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);\nCompletableFuture v7 = CompletableFuture.runAsync(v3, this.mExecutor);\nObject v8 = v7.get();', 'RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);\np0.awaitResult(v3);']

The method expireRollbackForPackage has the following similar APIs:

- API Name: notifyStagedSession(I)I in the following Class: Lcom.android.server.rollback.RollbackManagerServiceImpl with the following sink code entries:
  - Similarity: 0.9824185967445374, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1);
CompletableFuture v7 = CompletableFuture.supplyAsync(v3, this.mExecutor);
Object v8 = v7.get();
int v9 = v8.intValue();
return v9;
  - Similarity: 0.9788970351219177, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1);
CompletableFuture v11 = CompletableFuture.supplyAsync(v3, this.mExecutor);
Object v12 = v11.get();
int v13 = v12.intValue();
return v13;
  - Similarity: 0.9653217196464539, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1);
Object v5 = p0.awaitResult(v3);
int v6 = v5.intValue();
return v6;
  - Access Control Level: SYS_OR_SIG

- API Name: reloadPersistedData()V in the following Class: Lcom.android.server.rollback.RollbackManagerServiceImpl with the following sink code entries:
  - Similarity: 0.9788457155227661, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0);
p0.awaitResult(v3);
  - Similarity: 0.9678434133529663, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0);
CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);
  - Similarity: 0.9658638834953308, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0);
CompletableFuture v7 = CompletableFuture.runAsync(v3, this.mExecutor);
  - Access Control Level: SYS_OR_SIG

- API Name: getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.rollback.RollbackManagerServiceImpl with the following sink code entries:
  - Similarity: 0.9748965501785278, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);
CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor);
Object v16 = v15.get();
return v9;
  - Similarity: 0.9630155563354492, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v9 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);
CompletableFuture v13 = CompletableFuture.supplyAsync(v9, this.mExecutor);
Object v14 = v13.get();
return v11;
  - Similarity: 0.9629166722297668, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);
Object v5 = p0.awaitResult(v3);
return v5;
  - Access Control Level: SYS_OR_SIG

- API Name: getAvailableRollbacks()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.rollback.RollbackManagerServiceImpl with the following sink code entries:
  - Similarity: 0.9689496159553528, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0);
CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor);
Object v16 = v15.get();
return v16;
  - Similarity: 0.961979329586029, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v9 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0);
CompletableFuture v13 = CompletableFuture.supplyAsync(v9, this.mExecutor);
Object v14 = v13.get();
return v14;
  - Similarity: 0.9609206914901733, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0);
Object v5 = p0.awaitResult(v3);
return v5;
  - Access Control Level: SYS_OR_SIG

- API Name: blockRollbackManager(J)V in the following Class: Lcom.android.server.rollback.RollbackManagerServiceImpl with the following sink code entries:
  - Similarity: 0.9544311761856079, Code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda13 v4 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda13(p0,p1);
boolean v6 = v3.post(v4);
  - Access Control Level: SYS_OR_SIG

