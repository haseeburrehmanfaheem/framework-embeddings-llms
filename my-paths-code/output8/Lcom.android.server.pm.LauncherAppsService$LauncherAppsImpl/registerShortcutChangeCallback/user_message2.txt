The method registerShortcutChangeCallback in the following class Lcom.android.server.pm.LauncherAppsService$LauncherAppsImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void registerShortcutChangeCallback(String p1, ShortcutQueryWrapper p2, IShortcutChangeCallback p3){
	List v2 = this.mShortcutIds;
	if (v2 == 0) {
		String v3 = this.mPackage;
		if (v3 == 0) {
			List v4 = this.mLocusIds;
			if (v4 == 0) {
				String v5 = this.mPackage;
				if (v5 == 0) {
					int v8 = ILauncherApps$Stub.getCallingUid();
					int v7 = v8;
					int v9 = UserHandle.getUserId(v7);
					int v6 = v9;
					UserHandle v10 = UserHandle.of(v6);
					int v11 = p0.injectBinderCallingPid();
					int v12 = p0.injectBinderCallingUid();
					if (v13 == 0) {
						this.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, v10);
						return;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void registerShortcutChangeCallback(String p1, ShortcutQueryWrapper p2, IShortcutChangeCallback p3){
	List v2 = this.mShortcutIds;
	if (v2 == 0) {
		String v3 = this.mPackage;
		if (v3 == 0) {
			List v4 = this.mLocusIds;
			if (v4 == 0) {
				String v5 = this.mPackage;
				if (v5 == 0) {
					int v7 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
					int v8 = UserHandle.getUserId(v7);
					int v6 = v8;
					UserHandle v9 = UserHandle.of(v6);
					int v11 = ILauncherApps$Stub.getCallingPid();
					int v10 = v11;
					int v13 = ILauncherApps$Stub.getCallingUid();
					int v12 = v13;
					if (v14 == 0) {
						this.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, v9);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void registerShortcutChangeCallback(String p1, ShortcutQueryWrapper p2, IShortcutChangeCallback p3){
	List v2 = p2.getShortcutIds();
	if (v2 == 0) {
		String v3 = p2.getPackage();
		if (v3 == 0) {
			List v4 = p2.getLocusIds();
			if (v4 == 0) {
				String v5 = p2.getPackage();
				if (v5 == 0) {
					int v6 = p0.injectCallingUserId();
					UserHandle v7 = UserHandle.of(v6);
					int v8 = p0.injectBinderCallingPid();
					int v9 = p0.injectBinderCallingUid();
					if (v10 == 0) {
						this.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, v7);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['int v8 = ILauncherApps$Stub.getCallingUid();\nUserHandle v10 = UserHandle.of(v6);\nthis.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, v10);', 'int v7 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();\nUserHandle v9 = UserHandle.of(v6);\nthis.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, v9);', 'int v6 = p0.injectCallingUserId();\nUserHandle v7 = UserHandle.of(v6);\nthis.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, v7);']

The method registerShortcutChangeCallback has the following similar APIs:

- API Name: getShortcutIconFd(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Landroid/os/ParcelFileDescriptor; in the following Class: Lcom.android.server.pm.LauncherAppsService$LauncherAppsImpl with the following sink code entries:
  - Similarity: 0.8663967847824097, Code:
int v10 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
int v11 = UserHandle.getUserId(v10);
this.mShortcutServiceInternal.getShortcutIconFdAsync(v9, p1, p2, p3, p4, v7);
Object v13 = v7.get();
return v13;
  - Similarity: 0.8502351641654968, Code:
int v21 = ILauncherApps$Stub.getCallingUid();
int v22 = UserHandle.getUserId(v20);
this.mShortcutServiceInternal.getShortcutIconFdAsync(v19, p1, p2, p3, p4, v17);
Object v24 = v17.get();
return v24;
  - Similarity: 0.8203614354133606, Code:
int v5 = p0.getCallingUserId();
this.mShortcutServiceInternal.getShortcutIconFdAsync(v5, p1, p2, p3, p4, v3);
Object v7 = v3.get();
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: getShortcutIconUri(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; in the following Class: Lcom.android.server.pm.LauncherAppsService$LauncherAppsImpl with the following sink code entries:
  - Similarity: 0.8474110960960388, Code:
int v10 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
int v11 = UserHandle.getUserId(v10);
this.mShortcutServiceInternal.getShortcutIconUriAsync(v9, p1, p2, p3, p4, v7);
Object v13 = v7.get();
return v13;
  - Similarity: 0.8330824971199036, Code:
int v21 = ILauncherApps$Stub.getCallingUid();
int v22 = UserHandle.getUserId(v20);
this.mShortcutServiceInternal.getShortcutIconUriAsync(v19, p1, p2, p3, p4, v17);
Object v24 = v17.get();
return v24;
  - Similarity: 0.8034507036209106, Code:
int v5 = p0.getCallingUserId();
this.mShortcutServiceInternal.getShortcutIconUriAsync(v5, p1, p2, p3, p4, v3);
Object v7 = v3.get();
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: hasShortcutHostPermission(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.LauncherAppsService$LauncherAppsImpl with the following sink code entries:
  - Similarity: 0.8430485725402832, Code:
int v3 = ILauncherApps$Stub.getCallingUid();
int v6 = this.mIPM.getPackageUid(p1, 794624, v5);
boolean v13 = this.mShortcutServiceInternal.hasShortcutHostPermission(v7, p1, v11, v12);
return v13;
  - Access Control Level: NONE

- API Name: disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V in the following Class: Lcom.android.server.pm.ShortcutService with the following sink code entries:
  - Similarity: 0.7979761362075806, Code:
long v7 = ShortcutService.injectClearCallingIdentity();
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p5);
ShortcutUser v25 = new ShortcutUser(ShortcutService,p5);
this.mUsers.put(p5, v25);
  - Access Control Level: SYS_OR_SIG

- API Name: unregisterShortcutChangeCallback(Ljava/lang/String;Landroid/content/pm/IShortcutChangeCallback;)V in the following Class: Lcom.android.server.pm.LauncherAppsService$LauncherAppsImpl with the following sink code entries:
  - Similarity: 0.7832203507423401, Code:
this.mShortcutChangeHandler.removeShortcutChangeCallback(p2);
  - Access Control Level: NONE

