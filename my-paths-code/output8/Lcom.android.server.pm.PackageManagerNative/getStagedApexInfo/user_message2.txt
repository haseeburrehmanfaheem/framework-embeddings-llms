The method getStagedApexInfo has the following code snippet:

This is path 1 for the API with depth 2:
public StagedApexInfo getStagedApexInfo(String p1){
	StagingManager v1 = this.mStagingManager;
	int v3 = this.mStagedSessions.size();
	if (0 >= v3) {
		Object v4 = this.mStagedSessions.valueAt(0);
		boolean v5 = v4.isSessionReady();
		if (v5 == 0) {
			boolean v6 = v4.isDestroyed();
			if (v6 != 0) {
				boolean v7 = v4.hasParentSessionId();
				if (v7 != 0) {
					int v8 = this.mStagedSessions.size();
					if ((0 + 1) >= v8) {
						Object v9 = this.mStagedSessions.valueAt((0 + 1));
						boolean v10 = v9.isSessionReady();
						if (v10 == 0) {
							boolean v11 = v9.isDestroyed();
							if (v11 != 0) {
								boolean v12 = v9.hasParentSessionId();
								if (v12 != 0) {
									boolean v13 = v9.containsApexSession();
									if (v13 != 0) {
										if (v9 == 0) {
											Preconditions.checkArgument(1, "Session is null");
											boolean v16 = v9.hasParentSessionId();
											StringBuilder v17 = new StringBuilder();
											int v19 = v9.sessionId();
											StringBuilder v20 = v17.append(v19);
											StringBuilder v21 = v17.append(" session has parent session");
											String v22 = v17.toString();
											Preconditions.checkArgument((1 ^ v16), v22);
											boolean v24 = v9.containsApexSession();
											StringBuilder v25 = new StringBuilder();
											int v27 = v9.sessionId();
											StringBuilder v28 = v25.append(v27);
											StringBuilder v29 = v25.append(" session does not contain apex");
											String v30 = v25.toString();
											Preconditions.checkArgument(v24, v30);
											boolean v32 = v9.isSessionReady();
											if (v32 == 0) {
												boolean v33 = v9.isDestroyed();
												if (v33 == 0) {
													ApexSessionParams v34 = new ApexSessionParams();
													int v36 = v9.sessionId();
													ApexSessionParams.sessionId = v36;
													IntArray v37 = new IntArray();
													boolean v39 = v9.isMultiPackage();
													if (v39 == 0) {
														[I v40 = v37.toArray();
														ApexSessionParams.childSessionIds = v40;
														ApexInfo v41 = this.mApexManager.getStagedApexInfos(v34);
														ArrayMap v42 = new ArrayMap();
														if (0 >= v41.length) {
															Object v44 = v42.put(ApexInfo.moduleName, v41[0]);
															if ((0 + 1) >= v41.length) {
																Map v14 = v42;
																Object v45 = v14.get(p1);
																if (v45 == 0) {
																	StagedApexInfo v46 = new StagedApexInfo();
																	StagedApexInfo.moduleName = ApexInfo.moduleName;
																	StagedApexInfo.diskImagePath = ApexInfo.modulePath;
																	StagedApexInfo.versionCode = ApexInfo.versionCode;
																	StagedApexInfo.versionName = ApexInfo.versionName;
																	StagedApexInfo.hasClassPathJars = ApexInfo.hasClassPathJars;
																	StagedApexInfo v2 = v46;
																	return v2;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public StagedApexInfo getStagedApexInfo(String p1){
	StagingManager v1 = this.mStagingManager;
	int v3 = this.mStagedSessions.size();
	if (0 >= v3) {
		Object v4 = this.mStagedSessions.valueAt(0);
		boolean v5 = v4.isSessionReady();
		if (v5 == 0) {
			boolean v6 = v4.isDestroyed();
			if (v6 != 0) {
				boolean v7 = v4.hasParentSessionId();
				if (v7 != 0) {
					int v8 = this.mStagedSessions.size();
					if ((0 + 1) >= v8) {
						Object v9 = this.mStagedSessions.valueAt((0 + 1));
						boolean v10 = v9.isSessionReady();
						if (v10 == 0) {
							boolean v11 = v9.isDestroyed();
							if (v11 != 0) {
								boolean v12 = v9.hasParentSessionId();
								if (v12 != 0) {
									boolean v13 = v9.containsApexSession();
									if (v13 != 0) {
										Map v14 = StagingManager.getStagedApexInfos(v9);
										Object v15 = v14.get(p1);
										if (v15 == 0) {
											StagedApexInfo v16 = new StagedApexInfo();
											StagedApexInfo.moduleName = ApexInfo.moduleName;
											StagedApexInfo.diskImagePath = ApexInfo.modulePath;
											StagedApexInfo.versionCode = ApexInfo.versionCode;
											StagedApexInfo.versionName = ApexInfo.versionName;
											StagedApexInfo.hasClassPathJars = ApexInfo.hasClassPathJars;
											StagedApexInfo v2 = v16;
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public StagedApexInfo getStagedApexInfo(String p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	StagedApexInfo v2 = v1.getStagedApexInfo(p1);
	return v2;
}

and the following sink code:
['ApexSessionParams v34 = new ApexSessionParams();\nint v36 = v9.sessionId();\nApexSessionParams.sessionId = v36;\nIntArray v37 = new IntArray();\nboolean v39 = v9.isMultiPackage();\nApexInfo v41 = this.mApexManager.getStagedApexInfos(v34);\nArrayMap v42 = new ArrayMap();\nObject v44 = v42.put(ApexInfo.moduleName, v41[0]);\nStagedApexInfo v46 = new StagedApexInfo();\nStagedApexInfo.moduleName = ApexInfo.moduleName;\nStagedApexInfo.diskImagePath = ApexInfo.modulePath;\nStagedApexInfo.versionCode = ApexInfo.versionCode;\nStagedApexInfo.versionName = ApexInfo.versionName;\nStagedApexInfo.hasClassPathJars = ApexInfo.hasClassPathJars;\nreturn v2;', 'Map v14 = StagingManager.getStagedApexInfos(v9);\nObject v15 = v14.get(p1);\nif (v15 == 0) {\n    StagedApexInfo v16 = new StagedApexInfo();\n    StagedApexInfo.moduleName = ApexInfo.moduleName;\n    StagedApexInfo.diskImagePath = ApexInfo.modulePath;\n    StagedApexInfo.versionCode = ApexInfo.versionCode;\n    StagedApexInfo.versionName = ApexInfo.versionName;\n    StagedApexInfo.hasClassPathJars = ApexInfo.hasClassPathJars;\n    return v2;', 'StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();\nStagedApexInfo v2 = v1.getStagedApexInfo(p1);\nreturn v2;']

The method getStagedApexInfo has the following similar APIs:

- API Name: getStagedApexModuleNames()[Ljava/lang/String; with Similarity Score: 0.9363987445831299
  - Access Control Level: NONE and the following code:
ApexSessionParams v31 = new ApexSessionParams();
int v33 = v6.sessionId;
ApexSessionParams.sessionId = v33;
ApexInfo v38 = this.mApexManager.getStagedApexInfos(v31);
ArrayMap v39 = new ArrayMap();
Object v41 = v39.put(ApexInfo.moduleName, v38[0]);
Set v42 = v11.keySet();
boolean v43 = v3.addAll(v42);
List v2 = v3;
String v45 = new String(0);
Object v46 = v2.toArray(v45);
return v46;

- API Name: getStagedApexModuleNames()[Ljava/lang/String; with Similarity Score: 0.9217004179954529
  - Access Control Level: NONE and the following code:
StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
List v2 = v1.getStagedApexModuleNames();
String v3 = new String(0);
Object v4 = v2.toArray(v3);
return v4;

