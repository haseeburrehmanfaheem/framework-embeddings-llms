This is path 1 for the API with depth 2:
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	boolean v3 = Thread.holdsLock(this.mLock);
	if (v3 == 0) {
		Object v4 = this.sSnapshot.get();
		int v5 = this.sSnapshotPendingVersion.get();
		if (v4 == 0) {
			int v6 = v4.getVersion();
			if (v6 != v5) {
				Object v7 = this.sSnapshot.get();
				int v8 = this.sSnapshotPendingVersion.get();
				if (v7 == 0) {
					int v9 = v7.getVersion();
					if (v9 != v8) {
						int v10 = this.sSnapshotPendingVersion.get();
						long v12 = SystemClock.currentTimeMicro();
						if (v7 != 0) {
							PackageManagerService$Snapshot v13 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v15 = new ComputerEngine(v13,v10);
							long v17 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v12, v17, -1);
								Computer v11 = v15;
								this.sSnapshot.set(v11);
								Computer v20 = v11.use();
								Computer v2 = v20;
								ApplicationInfo v21 = v2.getApplicationInfo(p1, 0, v1);
								if (v21 == 0) {
									if ((ApplicationInfo.flags & 2) == 0) {
										return 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	boolean v3 = Thread.holdsLock(this.mLock);
	if (v3 == 0) {
		Object v4 = this.sSnapshot.get();
		int v5 = this.sSnapshotPendingVersion.get();
		if (v4 == 0) {
			int v6 = v4.getVersion();
			if (v6 != v5) {
				Object v7 = this.sSnapshot.get();
				int v8 = this.sSnapshotPendingVersion.get();
				if (v7 == 0) {
					int v9 = v7.getVersion();
					if (v9 != v8) {
						int v10 = this.sSnapshotPendingVersion.get();
						Computer v11 = PackageManagerService.rebuildSnapshot(v7, v10);
						this.sSnapshot.set(v11);
						Computer v13 = v11.use();
						Computer v2 = v13;
						ApplicationInfo v14 = v2.getApplicationInfo(p1, 0, v1);
						if (v14 == 0) {
							if ((ApplicationInfo.flags & 2) == 0) {
								return 1;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	Computer v2 = this.mPm.snapshotComputer();
	ApplicationInfo v3 = v2.getApplicationInfo(p1, 0, v1);
	if (v3 == 0) {
		if ((ApplicationInfo.flags & 2) == 0) {
			return 1;
		}
	}
}
