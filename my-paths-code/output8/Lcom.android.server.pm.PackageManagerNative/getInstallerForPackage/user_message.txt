This is path 1 for the API with depth 2:
public String getInstallerForPackage(String p1){
	boolean v2 = Thread.holdsLock(this.mLock);
	if (v2 == 0) {
		Object v3 = this.sSnapshot.get();
		int v4 = this.sSnapshotPendingVersion.get();
		if (v3 == 0) {
			int v5 = v3.getVersion();
			if (v5 != v4) {
				Object v6 = this.sSnapshot.get();
				int v7 = this.sSnapshotPendingVersion.get();
				if (v6 == 0) {
					int v8 = v6.getVersion();
					if (v8 != v7) {
						int v9 = this.sSnapshotPendingVersion.get();
						long v11 = SystemClock.currentTimeMicro();
						if (v6 != 0) {
							PackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v14 = new ComputerEngine(v12,v9);
							long v16 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v11, v16, -1);
								Computer v10 = v14;
								this.sSnapshot.set(v10);
								Computer v19 = v10.use();
								Computer v1 = v19;
								String v20 = v1.getInstallerPackageName(p1);
								boolean v21 = TextUtils.isEmpty(v20);
								if (v21 != 0) {
									int v22 = Binder.getCallingUid();
									int v23 = UserHandle.getUserId(v22);
									ApplicationInfo v24 = v1.getApplicationInfo(p1, 0, v23);
									if (v24 == 0) {
										if ((ApplicationInfo.flags & 1) == 0) {
											return "preload";
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public String getInstallerForPackage(String p1){
	boolean v2 = Thread.holdsLock(this.mLock);
	if (v2 == 0) {
		Object v3 = this.sSnapshot.get();
		int v4 = this.sSnapshotPendingVersion.get();
		if (v3 == 0) {
			int v5 = v3.getVersion();
			if (v5 != v4) {
				Object v6 = this.sSnapshot.get();
				int v7 = this.sSnapshotPendingVersion.get();
				if (v6 == 0) {
					int v8 = v6.getVersion();
					if (v8 != v7) {
						int v9 = this.sSnapshotPendingVersion.get();
						Computer v10 = PackageManagerService.rebuildSnapshot(v6, v9);
						this.sSnapshot.set(v10);
						Computer v12 = v10.use();
						Computer v1 = v12;
						String v13 = v1.getInstallerPackageName(p1);
						boolean v14 = TextUtils.isEmpty(v13);
						if (v14 != 0) {
							int v15 = Binder.getCallingUid();
							int v16 = UserHandle.getUserId(v15);
							ApplicationInfo v17 = v1.getApplicationInfo(p1, 0, v16);
							if (v17 == 0) {
								if ((ApplicationInfo.flags & 1) == 0) {
									return "preload";
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public String getInstallerForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getInstallerPackageName(p1);
	boolean v3 = TextUtils.isEmpty(v2);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		int v5 = UserHandle.getUserId(v4);
		ApplicationInfo v6 = v1.getApplicationInfo(p1, 0, v5);
		if (v6 == 0) {
			if ((ApplicationInfo.flags & 1) == 0) {
				return "preload";
			}
		}
	}
}
