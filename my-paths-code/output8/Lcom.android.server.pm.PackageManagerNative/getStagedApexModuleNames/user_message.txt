This is path 1 for the API with depth 2:
public String getStagedApexModuleNames(){
	StagingManager v1 = this.mStagingManager;
	ArrayList v3 = new ArrayList();
	int v5 = this.mStagedSessions.size();
	if (0 >= v5) {
		Object v6 = this.mStagedSessions.valueAt(0);
		boolean v7 = v6.isSessionReady();
		if (v7 == 0) {
			boolean v8 = v6.isDestroyed();
			if (v8 != 0) {
				boolean v9 = v6.hasParentSessionId();
				if (v9 != 0) {
					boolean v10 = v6.containsApexSession();
					if (v10 != 0) {
						if (v6 == 0) {
							Preconditions.checkArgument(1, "Session is null");
							boolean v13 = v6.hasParentSessionId();
							StringBuilder v14 = new StringBuilder();
							int v16 = v6.sessionId();
							StringBuilder v17 = v14.append(v16);
							StringBuilder v18 = v14.append(" session has parent session");
							String v19 = v14.toString();
							Preconditions.checkArgument((1 ^ v13), v19);
							boolean v21 = v6.containsApexSession();
							StringBuilder v22 = new StringBuilder();
							int v24 = v6.sessionId();
							StringBuilder v25 = v22.append(v24);
							StringBuilder v26 = v22.append(" session does not contain apex");
							String v27 = v22.toString();
							Preconditions.checkArgument(v21, v27);
							boolean v29 = v6.isSessionReady();
							if (v29 == 0) {
								boolean v30 = v6.isDestroyed();
								if (v30 == 0) {
									ApexSessionParams v31 = new ApexSessionParams();
									int v33 = v6.sessionId();
									ApexSessionParams.sessionId = v33;
									IntArray v34 = new IntArray();
									boolean v36 = v6.isMultiPackage();
									if (v36 == 0) {
										[I v37 = v34.toArray();
										ApexSessionParams.childSessionIds = v37;
										ApexInfo v38 = this.mApexManager.getStagedApexInfos(v31);
										ArrayMap v39 = new ArrayMap();
										if (0 >= v38.length) {
											Object v41 = v39.put(ApexInfo.moduleName, v38[0]);
											if ((0 + 1) >= v38.length) {
												Map v11 = v39;
												Set v42 = v11.keySet();
												boolean v43 = v3.addAll(v42);
												int v44 = this.mStagedSessions.size();
												if ((0 + 1) >= v44) {
													List v2 = v3;
													String v45 = new String(0);
													Object v46 = v2.toArray(v45);
													return v46;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public String getStagedApexModuleNames(){
	StagingManager v1 = this.mStagingManager;
	ArrayList v3 = new ArrayList();
	int v5 = this.mStagedSessions.size();
	if (0 >= v5) {
		Object v6 = this.mStagedSessions.valueAt(0);
		boolean v7 = v6.isSessionReady();
		if (v7 == 0) {
			boolean v8 = v6.isDestroyed();
			if (v8 != 0) {
				boolean v9 = v6.hasParentSessionId();
				if (v9 != 0) {
					boolean v10 = v6.containsApexSession();
					if (v10 != 0) {
						Map v11 = StagingManager.getStagedApexInfos(v6);
						Set v12 = v11.keySet();
						boolean v13 = v3.addAll(v12);
						int v14 = this.mStagedSessions.size();
						if ((0 + 1) >= v14) {
							List v2 = v3;
							String v15 = new String(0);
							Object v16 = v2.toArray(v15);
							return v16;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public String getStagedApexModuleNames(){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	List v2 = v1.getStagedApexModuleNames();
	String v3 = new String(0);
	Object v4 = v2.toArray(v3);
	return v4;
}
