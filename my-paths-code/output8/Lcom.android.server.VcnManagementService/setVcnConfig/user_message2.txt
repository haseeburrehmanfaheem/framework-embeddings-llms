The method setVcnConfig has the following code snippet:

This is path 1 for the API with depth 2:
public void setVcnConfig(ParcelUuid p1, VcnConfig p2, String p3){
	int v21 = this.mDeps.getBinderCallingUid();
	if (v21 == 1000) {
		UserHandle v22 = UserHandle.getUserHandleForUid(v21);
		boolean v23 = v22.isSystem();
		if (v23 == 0) {
			Object v24 = this.mContext.getSystemService(SubscriptionManage.class);
			ArrayList v25 = new ArrayList();
			VcnManagementService$$ExternalSyntheticLambda11 v27 = new VcnManagementService$$ExternalSyntheticLambda11(v25,v24,p1);
			Binder.withCleanCallingIdentity(v27);
			Iterator v30 = v25.iterator();
			boolean v31 = v30.hasNext();
			if (v31 == 0) {
				Object v32 = v30.next();
				Object v33 = this.mContext.getSystemService(TelephonyManage.class);
				int v34 = v32.getSubscriptionId();
				TelephonyManager v35 = v33.createForSubscriptionId(v34);
				int v36 = v32.getSimSlotIndex();
				boolean v37 = SubscriptionManager.isValidSlotIndex(v36);
				if (v37 == 0) {
					int v38 = v35.checkCarrierPrivilegesForPackage(p3);
					if (v38 != 1) {
						boolean v39 = v30.hasNext();
						if (v39 == 0) {
							Object v40 = v30.next();
							Object v41 = this.mContext.getSystemService(TelephonyManage.class);
							int v42 = v40.getSubscriptionId();
							TelephonyManager v43 = v41.createForSubscriptionId(v42);
							int v44 = v40.getSimSlotIndex();
							boolean v45 = SubscriptionManager.isValidSlotIndex(v44);
							if (v45 == 0) {
								int v46 = v43.checkCarrierPrivilegesForPackage(p3);
								if (v46 != 1) {
									VcnManagementService$$ExternalSyntheticLambda4 v47 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);
									Binder.withCleanCallingIdentity(v47);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setVcnConfig(ParcelUuid p1, VcnConfig p2, String p3){
	VcnManagementService.enforcePrimaryUser();
	Object v21 = this.mContext.getSystemService(SubscriptionManage.class);
	ArrayList v22 = new ArrayList();
	VcnManagementService$$ExternalSyntheticLambda11 v24 = new VcnManagementService$$ExternalSyntheticLambda11(v22,v21,p1);
	Binder.withCleanCallingIdentity(v24);
	Iterator v27 = v22.iterator();
	boolean v28 = v27.hasNext();
	if (v28 == 0) {
		Object v29 = v27.next();
		Object v30 = this.mContext.getSystemService(TelephonyManage.class);
		int v31 = v29.getSubscriptionId();
		TelephonyManager v32 = v30.createForSubscriptionId(v31);
		int v33 = v29.getSimSlotIndex();
		boolean v34 = SubscriptionManager.isValidSlotIndex(v33);
		if (v34 == 0) {
			int v35 = v32.checkCarrierPrivilegesForPackage(p3);
			if (v35 != 1) {
				boolean v36 = v27.hasNext();
				if (v36 == 0) {
					Object v37 = v27.next();
					Object v38 = this.mContext.getSystemService(TelephonyManage.class);
					int v39 = v37.getSubscriptionId();
					TelephonyManager v40 = v38.createForSubscriptionId(v39);
					int v41 = v37.getSimSlotIndex();
					boolean v42 = SubscriptionManager.isValidSlotIndex(v41);
					if (v42 == 0) {
						int v43 = v40.checkCarrierPrivilegesForPackage(p3);
						if (v43 != 1) {
							VcnManagementService$$ExternalSyntheticLambda4 v44 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);
							Binder.withCleanCallingIdentity(v44);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setVcnConfig(ParcelUuid p1, VcnConfig p2, String p3){
	p0.enforceManageTestNetworksForTestMode(p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p3);
	VcnManagementService$$ExternalSyntheticLambda4 v18 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);
	Binder.withCleanCallingIdentity(v18);
	return;
}

and the following sink code:
['VcnManagementService$$ExternalSyntheticLambda11 v27 = new VcnManagementService$$ExternalSyntheticLambda11(v25,v24,p1);\nBinder.withCleanCallingIdentity(v27);', 'VcnManagementService$$ExternalSyntheticLambda4 v44 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);\nBinder.withCleanCallingIdentity(v44);']

The method setVcnConfig has the following similar APIs:

- API Name: clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V with Similarity Score: 0.9970792531967163
  - Access Control Level: NONE and the following code:
VcnManagementService$$ExternalSyntheticLambda11 v28 = new VcnManagementService$$ExternalSyntheticLambda11(v26,v25,p1);
Binder.withCleanCallingIdentity(v28);

- API Name: addVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V with Similarity Score: 0.9941630959510803
  - Access Control Level: NORMAL and the following code:
VcnManagementService$$ExternalSyntheticLambda2 v4 = new VcnManagementService$$ExternalSyntheticLambda2(p0,p1);
Binder.withCleanCallingIdentity(v4);

