The method registerVcnStatusCallback in the following class Lcom.android.server.VcnManagementService has the following code snippet:

This is path 1 for the API with depth 1:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	if (v12 != 0) {
		Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
		Object v14 = this.mConfigs.get(p1);
		Object v15 = this.mVcns.get(p1);
		if (v15 != 0) {
			if (v14 == 0) {
				if (v16 != 0) {
					if (v15 != 0) {
						if (0 == 2) {
							if (0 != 3) {
								VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(0);
								Binder.restoreCallingIdentity(v2);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	if (v12 != 0) {
		Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
		Object v14 = this.mConfigs.get(p1);
		Object v15 = this.mVcns.get(p1);
		if (v15 != 0) {
			if (v14 == 0) {
				if (v16 != 0) {
					if (v15 != 0) {
						if (0 == 2) {
							if (0 != 3) {
								VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(0);
								p0.logDbg("VcnStatusCallback threw on VCN status change", caughtException);
								Binder.restoreCallingIdentity(v2);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 1:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	if (v12 != 0) {
		Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
		Object v14 = this.mConfigs.get(p1);
		Object v15 = this.mVcns.get(p1);
		if (v15 != 0) {
			if (v14 == 0) {
				if (v16 != 0) {
					if (v15 != 0) {
						VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(0);
						Binder.restoreCallingIdentity(v2);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['IBinder v8 = p2.asBinder();\nVcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);\nv8.linkToDeath(v9, 0);']

The method registerVcnStatusCallback has the following similar APIs:

- API Name: unregisterVcnStatusCallback(Landroid/net/vcn/IVcnStatusCallback;)V in the following Class: Lcom.android.server.VcnManagementService with the following sink code entries:
  - Similarity: 0.7536846995353699, Code:
IBinder v3 = p1.asBinder();
Object v4 = this.mRegisteredStatusCallbacks.remove(v3);
boolean v5 = v3.unlinkToDeath(v4, 0);
  - Access Control Level: NONE

- API Name: registerPackageChangeObserver(Landroid/content/pm/IPackageChangeObserver;)V in the following Class: Lcom.android.server.pm.PackageManagerNative with the following sink code entries:
  - Similarity: 0.7510563731193542, Code:
IBinder v1 = p1.asBinder();
PackageManagerNative$PackageChangeObserverDeathRecipient v2 = new PackageManagerNative$PackageChangeObserverDeathRecipient(p0,p1);
v1.linkToDeath(v2, 0);
  - Access Control Level: NONE

- API Name: addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.750640332698822, Code:
HdmiControlService$HdmiControlStatusChangeListenerRecord v6 = new HdmiControlService$HdmiControlStatusChangeListenerRecord(HdmiControlService,p1);
IBinder v8 = p1.asBinder();
v8.linkToDeath(v6, 0);
boolean v10 = this.mHdmiControlStatusChangeListenerRecords.add(v6);
  - Similarity: 0.7494527101516724, Code:
HdmiControlService$HdmiControlStatusChangeListenerRecord v4 = new HdmiControlService$HdmiControlStatusChangeListenerRecord(HdmiControlService,p1);
IBinder v6 = p1.asBinder();
v6.linkToDeath(v4, 0);
boolean v8 = this.mHdmiControlStatusChangeListenerRecords.add(v4);
  - Access Control Level: SYS_OR_SIG

- API Name: sendVendorCommand(II[BZ)V in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.7396201491355896, Code:
HdmiControlService$BinderService$15 v2 = new HdmiControlService$BinderService$15(p0,p1,p4,p2,p3);
this.this$0.runOnServiceThread(v2);
  - Access Control Level: SYS_OR_SIG

- API Name: addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.7388773560523987, Code:
HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p1);
IBinder v9 = p1.asBinder();
v9.linkToDeath(v7, 0);
boolean v11 = this.mDeviceEventListenerRecords.add(v7);
  - Access Control Level: SYS_OR_SIG

