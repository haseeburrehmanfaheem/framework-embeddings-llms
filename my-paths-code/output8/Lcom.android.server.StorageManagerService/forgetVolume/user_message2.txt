The method forgetVolume in the following class Lcom.android.server.StorageManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	if (v3 == 0) {
		boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
		if (v4 != 0) {
			Message v5 = this.mHandler.obtainMessage(9, v3);
			v5.sendToTarget();
			SomeArgs v9 = SomeArgs.obtain();
			SomeArgs.arg1 = p1;
			Message v10 = StorageManagerService$Callbacks.obtainMessage(4, v9);
			v10.sendToTarget();
			boolean v12 = Objects.equals(this.mPrimaryStorageUuid, p1);
			if (v12 == 0) {
				String v13 = p0.getDefaultPrimaryStorageUuid();
				this.mPrimaryStorageUuid = v13;
				Message v14 = this.mHandler.obtainMessage(10);
				v14.sendToTarget();
				p0.writeSettingsLocked();
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	if (v3 == 0) {
		boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
		if (v4 != 0) {
			Message v5 = this.mHandler.obtainMessage(9, v3);
			v5.sendToTarget();
			this.mCallbacks.notifyVolumeForgotten(p1);
			boolean v9 = Objects.equals(this.mPrimaryStorageUuid, p1);
			if (v9 == 0) {
				boolean v11 = SystemProperties.getBoolean("ro.vold.primary_physical", 0);
				if (v11 == 0) {
					String v10 = "primary_physical";
					this.mPrimaryStorageUuid = v10;
					Message v12 = this.mHandler.obtainMessage(10);
					v12.sendToTarget();
					FileOutputStream v15 = this.mSettingsFile.startWrite();
					TypedXmlSerializer v16 = Xml.resolveSerializer(v15);
					if (0 == 0) {
						this.mSettingsFile.failWrite(0);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void forgetVolume(String p1){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.remove(p1);
	if (v3 == 0) {
		boolean v4 = TextUtils.isEmpty(VolumeRecord.partGuid);
		if (v4 != 0) {
			Message v5 = this.mHandler.obtainMessage(9, v3);
			v5.sendToTarget();
			StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, p1);
			boolean v8 = Objects.equals(this.mPrimaryStorageUuid, p1);
			if (v8 == 0) {
				String v9 = p0.getDefaultPrimaryStorageUuid();
				this.mPrimaryStorageUuid = v9;
				Message v10 = this.mHandler.obtainMessage(10);
				v10.sendToTarget();
				p0.writeSettingsLocked();
				return;
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mRecords.remove(p1);\nMessage v5 = this.mHandler.obtainMessage(9, v3);\nv5.sendToTarget();', 'SomeArgs v9 = SomeArgs.obtain();\nSomeArgs.arg1 = p1;\nMessage v10 = StorageManagerService$Callbacks.obtainMessage(4, v9);\nv10.sendToTarget();', 'this.mPrimaryStorageUuid = v13;\nMessage v14 = this.mHandler.obtainMessage(10);\nv14.sendToTarget();\np0.writeSettingsLocked();', 'this.mCallbacks.notifyVolumeForgotten(p1);']

The method forgetVolume has the following similar APIs:

- API Name: forgetAllVolumes()V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.8625791072845459, Code:
int v2 = this.mRecords.size();
Object v3 = this.mRecords.keyAt(0);
Object v4 = this.mRecords.valueAt(0);
Message v6 = this.mHandler.obtainMessage(9, v4);
v6.sendToTarget();
  - Access Control Level: SYS_OR_SIG

- API Name: registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8081610202789307, Code:
Message v3 = this.mHandler.obtainMessage(2, p1);
v3.sendToTarget();
  - Access Control Level: SYS_OR_SIG

- API Name: shutdown(Landroid/os/storage/IStorageShutdownObserver;)V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.8078832626342773, Code:
Message v3 = this.mHandler.obtainMessage(3, p1);
v3.sendToTarget();
  - Access Control Level: SYS_OR_SIG

- API Name: scheduleNonStrongBiometricIdleTimeout(I)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8078656196594238, Code:
Message v3 = this.mHandler.obtainMessage(9, p1, 0);
v3.sendToTarget();
  - Access Control Level: SYS_OR_SIG

- API Name: reportSuccessfulBiometricUnlock(ZI)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8002830147743225, Code:
Message v3 = this.mHandler.obtainMessage(7, p2, 0);
v3.sendToTarget();
  - Access Control Level: SYS_OR_SIG

