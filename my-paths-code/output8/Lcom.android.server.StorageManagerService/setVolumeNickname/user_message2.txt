The method setVolumeNickname has the following code snippet:

This is path 1 for the API with depth 1:
public void setVolumeNickname(String p1, String p2){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.get(p1);
	VolumeRecord.nickname = p2;
	this.mCallbacks.notifyVolumeRecordChanged(v3);
	FileOutputStream v7 = this.mSettingsFile.startWrite();
	TypedXmlSerializer v8 = Xml.resolveSerializer(v7);
	if (0 == 0) {
		this.mSettingsFile.failWrite(0);
		return;
	}
}


This is path 2 for the API with depth 0:
public void setVolumeNickname(String p1, String p2){
	Object v2 = Objects.requireNonNull(p1);
	Object v3 = this.mRecords.get(p1);
	VolumeRecord.nickname = p2;
	StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);
	p0.writeSettingsLocked();
	return;
}

and the following sink code:
['VolumeRecord.nickname = p2;\nStorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);\np0.writeSettingsLocked();']

The method setVolumeNickname has the following similar APIs:

- API Name: setVolumeUserFlags(Ljava/lang/String;II)V with Similarity Score: 0.7850732207298279
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = Objects.requireNonNull(p1);
Object v3 = this.mRecords.get(p1);
VolumeRecord.userFlags = ((p2 & p3) | (VolumeRecord.userFlags & (~p3)));
StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);

