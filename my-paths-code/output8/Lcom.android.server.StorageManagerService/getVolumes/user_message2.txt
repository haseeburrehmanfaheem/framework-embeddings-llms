The method getVolumes in the following class Lcom.android.server.StorageManagerService has the following code snippet:

This is path 1 for the API with depth 0:
public VolumeInfo getVolumes(int p1){
	int v1 = this.mVolumes.size();
	VolumeInfo v2 = new VolumeInfo(v1);
	int v3 = this.mVolumes.size();
	if (0 >= v3) {
		Object v4 = this.mVolumes.valueAt(0);
		int v5 = this.mVolumes.size();
		if ((0 + 1) >= v5) {
			return v2;
		}
	}
}

and the following sink code:
['int v1 = this.mVolumes.size();\nVolumeInfo v2 = new VolumeInfo(v1);\nreturn v2;']

The method getVolumes has the following similar APIs:

- API Name: getDisks()[Landroid/os/storage/DiskInfo; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.859510064125061, Code:
int v1 = this.mDisks.size();
DiskInfo v2 = new DiskInfo(v1);
return v2;
  - Access Control Level: NONE

- API Name: getVolumeRecords(I)[Landroid/os/storage/VolumeRecord; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7873762249946594, Code:
int v1 = this.mRecords.size();
VolumeRecord v2 = new VolumeRecord(v1);
return v2;
  - Access Control Level: NONE

- API Name: getTotalBytes(Ljava/lang/String;Ljava/lang/String;)J in the following Class: Lcom.android.server.usage.StorageStatsService with the following sink code entries:
  - Similarity: 0.7792941331863403, Code:
VolumeInfo v1 = this.mStorage.findVolumeByUuid(p1);
long v2 = FileUtils.roundStorageSize(DiskInfo.size);
return v2;
  - Access Control Level: NONE

