The method clearUserKeyAuth in the following class Lcom.android.server.StorageManagerService has the following code snippet:

This is path 1 for the API with depth 1:
public void clearUserKeyAuth(int p1, int p2, byte[] p3){
	boolean v3 = ArrayUtils.isEmpty(p3);
	if (v3 == 0) {
		String v4 = HexDump.toHexString(p3);
		String v2 = v4;
		this.mVold.clearUserKeyAuth(p1, p2, v2);
		return;
	}
}


This is path 2 for the API with depth 0:
public void clearUserKeyAuth(int p1, int p2, byte[] p3){
	String v2 = p0.encodeBytes(p3);
	this.mVold.clearUserKeyAuth(p1, p2, v2);
	return;
}


This is path 3 for the API with depth 1:
public void clearUserKeyAuth(int p1, int p2, byte[] p3){
	boolean v3 = ArrayUtils.isEmpty(p3);
	if (v3 == 0) {
		String v2 = "!";
		this.mVold.clearUserKeyAuth(p1, p2, v2);
		return;
	}
}

and the following sink code:
['String v4 = HexDump.toHexString(p3);\nString v2 = v4;\nthis.mVold.clearUserKeyAuth(p1, p2, v2);', 'String v2 = p0.encodeBytes(p3);\nthis.mVold.clearUserKeyAuth(p1, p2, v2);']

The method clearUserKeyAuth has the following similar APIs:

- API Name: addUserKeyAuth(II[B)V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.9467576742172241, Code:
String v2 = p0.encodeBytes(p3);
this.mVold.addUserKeyAuth(p1, p2, v2);
  - Similarity: 0.8800076842308044, Code:
boolean v3 = ArrayUtils.isEmpty(p3);
if (v3 == 0) {
String v4 = HexDump.toHexString(p3);
String v2 = v4;
this.mVold.addUserKeyAuth(p1, p2, v2);
  - Similarity: 0.8220844268798828, Code:
boolean v3 = ArrayUtils.isEmpty(p3);
if (v3 == 0) {
String v2 = "!";
this.mVold.addUserKeyAuth(p1, p2, v2);
  - Access Control Level: SYS_OR_SIG

- API Name: fixateNewestUserKeyAuth(I)V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7993224263191223, Code:
this.mVold.fixateNewestUserKeyAuth(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: unlockUserKey(II[B)V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7822128534317017, Code:
boolean v15 = this.mLockPatternUtils.isSecure(p1);
String v19 = HexDump.toHexString(p3);
String v17 = v19;
this.mVold.unlockUserKey(p1, p2, v17);
[I v22 = ArrayUtils.appendInt(this.users, p1);
this.users = v22;
  - Similarity: 0.7638711929321289, Code:
boolean v14 = this.mLockPatternUtils.isSecure(p1);
String v16 = p0.encodeBytes(p3);
this.mVold.unlockUserKey(p1, p2, v16);
this.mLocalUnlockedUsers.append(p1);
  - Similarity: 0.7360383868217468, Code:
boolean v16 = this.mLockPatternUtils.isSecure(p1);
String v18 = p0.encodeBytes(p3);
this.mVold.unlockUserKey(p1, p2, v18);
[I v21 = ArrayUtils.appendInt(this.users, p1);
this.users = v21;
  - Access Control Level: SYS_OR_SIG

- API Name: destroyUserKey(I)V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7745194435119629, Code:
this.mVold.destroyUserKey(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: createUserKey(IIZ)V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7322689294815063, Code:
this.mVold.createUserKey(p1, p2, p3);
  - Access Control Level: SYS_OR_SIG

