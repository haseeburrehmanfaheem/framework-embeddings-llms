This is path 1 for the API with depth 2:
public void format(String p1){
	Object v3 = this.mVolumes.get(p1);
	if (v3 == 0) {
		VolumeInfo v2 = v3;
		this.mVold.format(VolumeInfo.id, "auto");
		boolean v5 = TextUtils.isEmpty(VolumeInfo.fsUuid);
		if (v5 != 0) {
			Object v8 = Objects.requireNonNull(VolumeInfo.fsUuid);
			Object v9 = this.mRecords.remove(VolumeInfo.fsUuid);
			if (v9 == 0) {
				boolean v10 = TextUtils.isEmpty(VolumeRecord.partGuid);
				if (v10 != 0) {
					Message v11 = this.mHandler.obtainMessage(9, v9);
					v11.sendToTarget();
					this.mCallbacks.notifyVolumeForgotten(VolumeInfo.fsUuid);
					boolean v15 = Objects.equals(this.mPrimaryStorageUuid, VolumeInfo.fsUuid);
					if (v15 == 0) {
						boolean v17 = SystemProperties.getBoolean("ro.vold.primary_physical", 0);
						if (v17 == 0) {
							String v16 = StorageManager.UUID_PRIVATE_INTERNAL;
							this.mPrimaryStorageUuid = v16;
							Message v18 = this.mHandler.obtainMessage(10);
							v18.sendToTarget();
							FileOutputStream v21 = this.mSettingsFile.startWrite();
							TypedXmlSerializer v22 = Xml.resolveSerializer(v21);
							if (0 == 0) {
								this.mSettingsFile.failWrite(0);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void format(String p1){
	Object v3 = this.mVolumes.get(p1);
	if (v3 == 0) {
		VolumeInfo v2 = v3;
		this.mVold.format(VolumeInfo.id, "auto");
		boolean v5 = TextUtils.isEmpty(VolumeInfo.fsUuid);
		if (v5 != 0) {
			Object v8 = Objects.requireNonNull(VolumeInfo.fsUuid);
			Object v9 = this.mRecords.remove(VolumeInfo.fsUuid);
			if (v9 == 0) {
				boolean v10 = TextUtils.isEmpty(VolumeRecord.partGuid);
				if (v10 != 0) {
					Message v11 = this.mHandler.obtainMessage(9, v9);
					v11.sendToTarget();
					StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeForgotten(this.mCallbacks, VolumeInfo.fsUuid);
					boolean v14 = Objects.equals(this.mPrimaryStorageUuid, VolumeInfo.fsUuid);
					if (v14 == 0) {
						String v15 = StorageManagerService.getDefaultPrimaryStorageUuid();
						this.mPrimaryStorageUuid = v15;
						Message v16 = this.mHandler.obtainMessage(10);
						v16.sendToTarget();
						StorageManagerService.writeSettingsLocked();
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void format(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	this.mVold.format(VolumeInfo.id, "auto");
	boolean v4 = TextUtils.isEmpty(VolumeInfo.fsUuid);
	if (v4 != 0) {
		p0.forgetVolume(VolumeInfo.fsUuid);
		return;
	}
}
