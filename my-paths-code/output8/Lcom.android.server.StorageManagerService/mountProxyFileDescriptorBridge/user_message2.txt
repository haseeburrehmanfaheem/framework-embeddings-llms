The method mountProxyFileDescriptorBridge has the following code snippet:

This is path 1 for the API with depth 1:
public AppFuseMount mountProxyFileDescriptorBridge(){
	int v2 = Binder.getCallingUid();
	if (this.mAppFuseBridge != 0) {
		AppFuseBridge v3 = new AppFuseBridge();
		this.mAppFuseBridge = v3;
		Thread v5 = new Thread(this.mAppFuseBridge,"AppFuseBridge");
		v5.start();
		this.mNextAppFuseName = (this.mNextAppFuseName + 1);
		AppFuseMount v8 = new AppFuseMount;
		StorageManagerService$AppFuseMountScope v9 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);
		AppFuseBridge.native_lock();
		int v13 = this.mScopes.indexOfKey(AppFuseBridge$MountScope.mountId);
		if (v13 >= 0) {
			Preconditions.checkArgument(1);
			if ((this.mNativeLoop < 0) == 0) {
				ParcelFileDescriptor v15 = v9.open();
				int v16 = v15.detachFd();
				int v17 = AppFuseBridge.native_add_bridge(this.mNativeLoop, AppFuseBridge$MountScope.mountId, v16);
				if (v17 == -1) {
					ParcelFileDescriptor v18 = ParcelFileDescriptor.adoptFd(v17);
					this.mScopes.put(AppFuseBridge$MountScope.mountId, v9);
					AppFuseBridge.native_unlock();
					IoUtils.closeQuietly(0);
					ParcelFileDescriptor v11 = v18;
					if (0 == 0) {
						this.mAppFuseBridge = 0;
						if (this.mAppFuseBridge != 0) {
							AppFuseBridge v22 = new AppFuseBridge();
							this.mAppFuseBridge = v22;
							Thread v24 = new Thread(this.mAppFuseBridge,"AppFuseBridge");
							v24.start();
							this.mNextAppFuseName = (this.mNextAppFuseName + 1);
							AppFuseMount v27 = new AppFuseMount(this.mNextAppFuseName,v30);
							StorageManagerService$AppFuseMountScope v28 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);
							AppFuseBridge.native_lock();
							int v32 = this.mScopes.indexOfKey(AppFuseBridge$MountScope.mountId);
							if (v32 >= 0) {
								Preconditions.checkArgument(1);
								if ((this.mNativeLoop < 0) == 0) {
									ParcelFileDescriptor v34 = v28.open();
									int v35 = v34.detachFd();
									int v36 = AppFuseBridge.native_add_bridge(this.mNativeLoop, AppFuseBridge$MountScope.mountId, v35);
									if (v36 == -1) {
										ParcelFileDescriptor v37 = ParcelFileDescriptor.adoptFd(v36);
										this.mScopes.put(AppFuseBridge$MountScope.mountId, v28);
										AppFuseBridge.native_unlock();
										IoUtils.closeQuietly(0);
										ParcelFileDescriptor v30 = v37;
										return v27;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public AppFuseMount mountProxyFileDescriptorBridge(){
	int v2 = Binder.getCallingUid();
	if (this.mAppFuseBridge != 0) {
		AppFuseBridge v3 = new AppFuseBridge();
		this.mAppFuseBridge = v3;
		Thread v5 = new Thread(this.mAppFuseBridge,"AppFuseBridge");
		v5.start();
		this.mNextAppFuseName = (this.mNextAppFuseName + 1);
		AppFuseMount v8 = new AppFuseMount;
		StorageManagerService$AppFuseMountScope v9 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);
		ParcelFileDescriptor v11 = this.mAppFuseBridge.addBridge(v9);
		if (0 == 0) {
			this.mAppFuseBridge = 0;
			if (this.mAppFuseBridge != 0) {
				AppFuseBridge v12 = new AppFuseBridge();
				this.mAppFuseBridge = v12;
				Thread v14 = new Thread(this.mAppFuseBridge,"AppFuseBridge");
				v14.start();
				this.mNextAppFuseName = (this.mNextAppFuseName + 1);
				AppFuseMount v17 = new AppFuseMount(this.mNextAppFuseName,v20);
				StorageManagerService$AppFuseMountScope v18 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);
				ParcelFileDescriptor v20 = this.mAppFuseBridge.addBridge(v18);
				return v17;
			}
		}
	}
}

and the following sink code:
['int v2 = Binder.getCallingUid();\nif (this.mAppFuseBridge != 0) {\nAppFuseBridge v3 = new AppFuseBridge();\nthis.mAppFuseBridge = v3;\nThread v5 = new Thread(this.mAppFuseBridge,"AppFuseBridge");\nv5.start();\nthis.mNextAppFuseName = (this.mNextAppFuseName + 1);\nAppFuseMount v8 = new AppFuseMount;\nStorageManagerService$AppFuseMountScope v9 = new StorageManagerService$AppFuseMountScope(p0,v2,this.mNextAppFuseName);\nParcelFileDescriptor v11 = this.mAppFuseBridge.addBridge(v9);\nreturn v17;']

The method mountProxyFileDescriptorBridge has the following similar APIs:

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.7625486850738525
  - Access Control Level: SYS_OR_SIG and the following code:
int v9 = Binder.getCallingUid();
IPackageManager v10 = AppGlobals.getPackageManager();
String v11 = v10.getPackagesForUid(v9);
UserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);
boolean v29 = v3.add(v27);

- API Name: addAccount(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZLandroid/os/Bundle;)V with Similarity Score: 0.7203311324119568
  - Access Control Level: SYS_OR_SIG and the following code:
int v17 = Binder.getCallingUid();
int v25 = UserHandle.getUserId(v24);
Object v28 = LocalServices.getService(DevicePolicyManagerInterna.class);
boolean v29 = v28.isActiveProfileOwner(v24);

