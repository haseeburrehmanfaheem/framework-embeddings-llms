The method getDisks in the following class Lcom.android.server.StorageManagerService has the following code snippet:

This is path 1 for the API with depth 0:
public DiskInfo getDisks(){
	int v1 = this.mDisks.size();
	DiskInfo v2 = new DiskInfo(v1);
	int v3 = this.mDisks.size();
	if (0 >= v3) {
		Object v4 = this.mDisks.valueAt(0);
		int v5 = this.mDisks.size();
		if ((0 + 1) >= v5) {
			return v2;
		}
	}
}

and the following sink code:
['int v1 = this.mDisks.size();\nDiskInfo v2 = new DiskInfo(v1);\nreturn v2;']

The method getDisks has the following similar APIs:

- API Name: getVolumes(I)[Landroid/os/storage/VolumeInfo; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.859510064125061, Code:
int v1 = this.mVolumes.size();
VolumeInfo v2 = new VolumeInfo(v1);
return v2;
  - Access Control Level: NONE

- API Name: getTotalBytes(Ljava/lang/String;Ljava/lang/String;)J in the following Class: Lcom.android.server.usage.StorageStatsService with the following sink code entries:
  - Similarity: 0.7581534385681152, Code:
VolumeInfo v1 = this.mStorage.findVolumeByUuid(p1);
long v2 = FileUtils.roundStorageSize(DiskInfo.size);
return v2;
  - Access Control Level: NONE

- API Name: getVolumeRecords(I)[Landroid/os/storage/VolumeRecord; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7206077575683594, Code:
int v1 = this.mRecords.size();
VolumeRecord v2 = new VolumeRecord(v1);
return v2;
  - Access Control Level: NONE

- API Name: getMaximumDataBlockSize()J in the following Class: Lcom.android.server.PersistentDataBlockService$1 with the following sink code entries:
  - Similarity: 0.7124775648117065, Code:
long v5 = this.this$0.doGetMaximumDataBlockSize();
long v4 = v5;
return v4;
  - Access Control Level: NONE

