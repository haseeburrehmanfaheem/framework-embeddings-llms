The method getVolumeRecords in the following class Lcom.android.server.StorageManagerService has the following code snippet:

This is path 1 for the API with depth 0:
public VolumeRecord getVolumeRecords(int p1){
	int v1 = this.mRecords.size();
	VolumeRecord v2 = new VolumeRecord(v1);
	int v3 = this.mRecords.size();
	if (0 >= v3) {
		Object v4 = this.mRecords.valueAt(0);
		int v5 = this.mRecords.size();
		if ((0 + 1) >= v5) {
			return v2;
		}
	}
}

and the following sink code:
['int v1 = this.mRecords.size();\nVolumeRecord v2 = new VolumeRecord(v1);\nreturn v2;']

The method getVolumeRecords has the following similar APIs:

- API Name: getVolumes(I)[Landroid/os/storage/VolumeInfo; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7873762249946594, Code:
int v1 = this.mVolumes.size();
VolumeInfo v2 = new VolumeInfo(v1);
return v2;
  - Access Control Level: NONE

- API Name: getDisks()[Landroid/os/storage/DiskInfo; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7206077575683594, Code:
int v1 = this.mDisks.size();
DiskInfo v2 = new DiskInfo(v1);
return v2;
  - Access Control Level: NONE

- API Name: setVolumeUserFlags(Ljava/lang/String;II)V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7200049757957458, Code:
Object v2 = Objects.requireNonNull(p1);
Object v3 = this.mRecords.get(p1);
VolumeRecord.userFlags = ((p2 & p3) | (VolumeRecord.userFlags & (~p3)));
StorageManagerService$Callbacks.-$$Nest$mnotifyVolumeRecordChanged(this.mCallbacks, v3);
  - Access Control Level: SYS_OR_SIG

