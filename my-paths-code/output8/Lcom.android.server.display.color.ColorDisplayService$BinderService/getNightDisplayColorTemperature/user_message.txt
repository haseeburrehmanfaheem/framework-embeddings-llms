This is path 1 for the API with depth 2:
public int getNightDisplayColorTemperature(){
	long v1 = Binder.clearCallingIdentity();
	ColorDisplayService$NightDisplayTintController v2 = this.mNightDisplayTintController;
	if (this.mColorTemp == 0) {
		int v4 = this.mColorTemp.intValue();
		if (v4 != -1) {
			Context v6 = this.this$0.getContext();
			Resources v7 = v6.getResources();
			int v8 = v7.getInteger(17694897);
			Context v9 = this.this$0.getContext();
			int v10 = ColorDisplayManager.getMinimumColorTemperature(v9);
			Context v11 = this.this$0.getContext();
			int v12 = ColorDisplayManager.getMaximumColorTemperature(v11);
			if (v4 >= v10) {
				int v5 = v10;
				int v3 = v5;
				Binder.restoreCallingIdentity(v1);
				return v3;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int getNightDisplayColorTemperature(){
	long v1 = Binder.clearCallingIdentity();
	ColorDisplayService$NightDisplayTintController v2 = this.mNightDisplayTintController;
	if (this.mColorTemp == 0) {
		int v4 = this.mColorTemp.intValue();
		int v5 = ColorDisplayService$NightDisplayTintController.clampNightDisplayColorTemperature(v4);
		int v3 = v5;
		Binder.restoreCallingIdentity(v1);
		return v3;
	}
}


This is path 3 for the API with depth 0:
public int getNightDisplayColorTemperature(){
	long v1 = Binder.clearCallingIdentity();
	ColorDisplayService$NightDisplayTintController v2 = ColorDisplayService.-$$Nest$fgetmNightDisplayTintController(this.this$0);
	int v3 = v2.getColorTemperature();
	Binder.restoreCallingIdentity(v1);
	return v3;
}
