The method unregisterSmartspaceUpdates in the following class Lcom.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub has the following code snippet:

This is path 1 for the API with depth 2:
public void unregisterSmartspaceUpdates(SmartspaceSessionId p1, ISmartspaceCallback p2){
	SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0(p1,p2);
	if (v11 == 0) {
		ServiceNameResolver v12 = AbstractMasterSystemService.mServiceNameResolver;
		boolean v13 = v12.isTemporary(v9);
		if (v13 != 0) {
			ActivityTaskManagerInternal v14 = this.mActivityTaskManagerInternal;
			int v15 = Binder.getCallingUid();
			boolean v16 = v14.isCallerRecents(v15);
			if (v16 == 0) {
				long v17 = Binder.clearCallingIdentity();
				Object v18 = AbstractMasterSystemService.mLock;
				AbstractPerUserSystemService v20 = this.this$0.getServiceForUserLocked(v9);
				AbstractPerUserSystemService v19 = v20;
				v1.accept(v19);
				Binder.restoreCallingIdentity(v17);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void unregisterSmartspaceUpdates(SmartspaceSessionId p1, ISmartspaceCallback p2){
	SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0(p1,p2);
	if (v11 == 0) {
		ServiceNameResolver v12 = SmartspaceManagerService.access$000(this.this$0);
		boolean v13 = v12.isTemporary(v9);
		if (v13 != 0) {
			ActivityTaskManagerInternal v14 = SmartspaceManagerService.-$$Nest$fgetmActivityTaskManagerInternal(this.this$0);
			int v15 = Binder.getCallingUid();
			boolean v16 = v14.isCallerRecents(v15);
			if (v16 == 0) {
				long v17 = Binder.clearCallingIdentity();
				Object v18 = SmartspaceManagerService.access$100(this.this$0);
				AbstractPerUserSystemService v19 = SmartspaceManagerService.access$200(this.this$0, v9);
				v1.accept(v19);
				Binder.restoreCallingIdentity(v17);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void unregisterSmartspaceUpdates(SmartspaceSessionId p1, ISmartspaceCallback p2){
	SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0(p1,p2);
	p0.runForUserLocked("unregisterSmartspaceUpdates", p1, v1);
	return;
}

and the following sink code:
['SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0(p1,p2);\nv1.accept(v19);', 'SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda0(p1,p2);\np0.runForUserLocked("unregisterSmartspaceUpdates", p1, v1);']

The method unregisterSmartspaceUpdates has the following similar APIs:

- API Name: registerSmartspaceUpdates(Landroid/app/smartspace/SmartspaceSessionId;Landroid/app/smartspace/ISmartspaceCallback;)V in the following Class: Lcom.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub with the following sink code entries:
  - Similarity: 0.992139458656311, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda1 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda1(p1,p2);
v1.accept(v19);
  - Similarity: 0.983981192111969, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda1 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda1(p1,p2);
p0.runForUserLocked("registerSmartspaceUpdates", p1, v1);
  - Access Control Level: SYS_OR_SIG

- API Name: notifySmartspaceEvent(Landroid/app/smartspace/SmartspaceSessionId;Landroid/app/smartspace/SmartspaceTargetEvent;)V in the following Class: Lcom.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub with the following sink code entries:
  - Similarity: 0.9855104684829712, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda2 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda2(p1,p2);
v1.accept(v19);
  - Similarity: 0.8980856537818909, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda2 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda2(p1,p2);
p0.runForUserLocked("notifySmartspaceEvent", p1, v1);
  - Access Control Level: SYS_OR_SIG

- API Name: requestSmartspaceUpdate(Landroid/app/smartspace/SmartspaceSessionId;)V in the following Class: Lcom.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub with the following sink code entries:
  - Similarity: 0.9793197512626648, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4(p1);
v1.accept(v19);
  - Similarity: 0.9243898391723633, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4(p1);
p0.runForUserLocked("requestSmartspaceUpdate", p1, v1);
  - Access Control Level: SYS_OR_SIG

- API Name: createSmartspaceSession(Landroid/app/smartspace/SmartspaceConfig;Landroid/app/smartspace/SmartspaceSessionId;Landroid/os/IBinder;)V in the following Class: Lcom.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub with the following sink code entries:
  - Similarity: 0.9747082591056824, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda3 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda3(p1,p2,p3);
v1.accept(v19);
  - Access Control Level: SYS_OR_SIG

- API Name: destroySmartspaceSession(Landroid/app/smartspace/SmartspaceSessionId;)V in the following Class: Lcom.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub with the following sink code entries:
  - Similarity: 0.9713170528411865, Code:
SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda5 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda5(p1);
v1.accept(v19);
  - Access Control Level: SYS_OR_SIG

