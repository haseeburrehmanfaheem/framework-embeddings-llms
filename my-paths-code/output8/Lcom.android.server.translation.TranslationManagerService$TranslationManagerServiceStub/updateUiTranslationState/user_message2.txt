The method updateUiTranslationState in the following class Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub has the following code snippet:

This is path 1 for the API with depth 2:
public void updateUiTranslationState(int p1, TranslationSpec p2, TranslationSpec p3, List p4, IBinder p5, int p6, UiTranslationSpec p7, int p8){
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.getServiceForUserLocked(p8);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		String v7 = AbstractMasterSystemService.mServiceNameResolver.getDefaultServiceName(p8);
		if (v7 != 0) {
			String v8 = AbstractMasterSystemService.mServiceNameResolver.getServiceName(p8);
			boolean v9 = v7.equals(v8);
			boolean v6 = v9;
			boolean v5 = v6;
			if (v5 != 0) {
				boolean v11 = 1;
				boolean v10 = v11;
				if (v10 == 0) {
					ActivityTaskManagerInternal$ActivityTokens v20 = this.mActivityTaskManagerInternal.getAttachedNonFinishingActivityForTask(p6, p5);
					if (v20 != 0) {
						WeakReference v21 = new WeakReference(v20);
						this.mLastActivityTokens = v21;
						if (p1 != 3) {
							boolean v23 = this.mWaitingFinishedCallbackActivities.add(p5);
							IBinder v24 = this.mActivityToken;
							IApplicationThread v25 = this.mAppThread;
							v25.updateUiTranslationState(v24, p1, p2, p3, p4, p7);
							ComponentName v27 = this.mActivityTaskManagerInternal.getActivityName(v24);
							Context v29 = this.mMaster.getContext();
							Context v28 = v29;
							int v30 = this.mUserId;
							if (v27 == 0) {
								PackageManager v32 = v28.getPackageManager();
								String v33 = v27.getPackageName();
								ApplicationInfo v34 = v32.getApplicationInfoAsUser(v33, 0, v30);
								int v31 = -1;
								String v41 = v27.getPackageName();
								Object v43 = this.mActiveTranslations.get(v24);
								if (v43 != 0) {
									if (p1 == 0) {
										if (this.DEBUG == 0) {
											if (0 == 0) {
												if (0 == 0) {
													TranslationManagerServiceImpl.invokeCallbacks(p1, p2, p3, v41, v31);
													TranslationManagerServiceImpl.updateActiveTranslationsLocked(p1, p2, p3, v41, v24, v31);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void updateUiTranslationState(int p1, TranslationSpec p2, TranslationSpec p3, List p4, IBinder p5, int p6, UiTranslationSpec p7, int p8){
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.getServiceForUserLocked(p8);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		boolean v6 = this.this$0.isDefaultServiceLocked(p8);
		boolean v5 = v6;
		if (v5 != 0) {
			boolean v8 = this.this$0.isCalledByServiceAppLocked(p8, "updateUiTranslationState");
			boolean v7 = v8;
			if (v7 == 0) {
				ActivityTaskManagerInternal$ActivityTokens v10 = this.mActivityTaskManagerInternal.getAttachedNonFinishingActivityForTask(p6, p5);
				if (v10 != 0) {
					WeakReference v11 = new WeakReference(v10);
					this.mLastActivityTokens = v11;
					if (p1 != 3) {
						boolean v13 = this.mWaitingFinishedCallbackActivities.add(p5);
						IBinder v14 = v10.getActivityToken();
						IApplicationThread v15 = v10.getApplicationThread();
						v15.updateUiTranslationState(v14, p1, p2, p3, p4, p7);
						ComponentName v17 = this.mActivityTaskManagerInternal.getActivityName(v14);
						Context v18 = TranslationManagerServiceImpl.getContext();
						int v19 = TranslationManagerServiceImpl.getUserId();
						int v20 = TranslationManagerServiceImpl.getAppUidByComponentName(v18, v17, v19);
						String v21 = v17.getPackageName();
						TranslationManagerServiceImpl.invokeCallbacksIfNecessaryLocked(p1, p2, p3, v21, v14, v20);
						TranslationManagerServiceImpl.updateActiveTranslationsLocked(p1, p2, p3, v21, v14, v20);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void updateUiTranslationState(int p1, TranslationSpec p2, TranslationSpec p3, List p4, IBinder p5, int p6, UiTranslationSpec p7, int p8){
	Object v2 = TranslationManagerService.access$800(this.this$0);
	AbstractPerUserSystemService v3 = TranslationManagerService.access$900(this.this$0, p8);
	if (v3 == 0) {
		boolean v4 = TranslationManagerService.-$$Nest$misDefaultServiceLocked(this.this$0, p8);
		if (v4 != 0) {
			boolean v5 = TranslationManagerService.-$$Nest$misCalledByServiceAppLocked(this.this$0, p8, "updateUiTranslationState");
			if (v5 == 0) {
				v3.updateUiTranslationStateLocked(p1, p2, p3, p4, p5, p6, p7);
				return;
			}
		}
	}
}

and the following sink code:
['AbstractPerUserSystemService v4 = this.this$0.getServiceForUserLocked(p8);\nActivityTaskManagerInternal$ActivityTokens v20 = this.mActivityTaskManagerInternal.getAttachedNonFinishingActivityForTask(p6, p5);\nv25.updateUiTranslationState(v24, p1, p2, p3, p4, p7);\nTranslationManagerServiceImpl.invokeCallbacks(p1, p2, p3, v41, v31);\nTranslationManagerServiceImpl.updateActiveTranslationsLocked(p1, p2, p3, v41, v24, v31);', 'AbstractPerUserSystemService v3 = TranslationManagerService.access$900(this.this$0, p8);\nv3.updateUiTranslationStateLocked(p1, p2, p3, p4, p5, p6, p7);']

The method updateUiTranslationState has the following similar APIs:

- API Name: onTranslationFinished(ZLandroid/os/IBinder;Landroid/content/ComponentName;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.796113908290863, Code:
AbstractPerUserSystemService v2 = TranslationManagerService.access$1500(this.this$0, p4);
v2.onTranslationFinishedLocked(p1, p2, p3);
  - Similarity: 0.7918497920036316, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
if (p1 == 0) {
Bundle v21 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);
this.mCallbacks.broadcast(v24);
  - Access Control Level: NONE

- API Name: onTranslationCapabilitiesRequest(IILandroid/os/ResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7740041017532349, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
boolean v5 = this.this$0.isDefaultServiceLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
  - Access Control Level: NONE

- API Name: getServiceSettingsActivity(Lcom/android/internal/os/IResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7722811698913574, Code:
AbstractPerUserSystemService v2 = TranslationManagerService.access$1700(this.this$0, p2);
ComponentName v3 = v2.getServiceSettingsActivityLocked();
Intent v5 = new Intent();
Intent v7 = v5.setComponent(v3);
PendingIntent v12 = PendingIntent.getActivityAsUser(v9, 0, v5, 67108864, 0, v10);
Bundle v13 = SyncResultReceiver.bundleFor(v12);
p1.send(1, v13);
  - Access Control Level: NONE

- API Name: onSessionCreated(Landroid/view/translation/TranslationContext;ILcom/android/internal/os/IResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7676129937171936, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
v9.onSessionCreated(p1, p2, p3);
  - Similarity: 0.741221010684967, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
RemoteTranslationService$$ExternalSyntheticLambda1 v26 = new RemoteTranslationService$$ExternalSyntheticLambda1(p1,p2,p3);
boolean v28 = RemoteTranslationService.run(v26);
  - Access Control Level: NONE

- API Name: unregisterTranslationCapabilityCallback(Landroid/os/IRemoteCallback;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7628970742225647, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
boolean v5 = this.mTranslationCapabilityCallbacks.unregister(p1);
  - Access Control Level: NONE

