The method onSessionCreated has the following code snippet:

This is path 1 for the API with depth 2:
public void onSessionCreated(TranslationContext p1, int p2, IResultReceiver p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		String v6 = AbstractMasterSystemService.mServiceNameResolver.getDefaultServiceName(p4);
		if (v6 != 0) {
			String v7 = AbstractMasterSystemService.mServiceNameResolver.getServiceName(p4);
			boolean v8 = v6.equals(v7);
			boolean v5 = v8;
			boolean v4 = v5;
			if (v4 != 0) {
				boolean v10 = 1;
				boolean v9 = v10;
				if (v9 == 0) {
					if (this.mRemoteTranslationService != 0) {
						String v20 = TranslationManagerServiceImpl.getComponentNameLocked();
						if (v20 != 0) {
							ComponentName v21 = ComponentName.unflattenFromString(v20);
							RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
							Context v23 = TranslationManagerServiceImpl.getContext();
							this.mRemoteTranslationService = v22;
							RemoteTranslationService v19 = this.mRemoteTranslationService;
							if (v19 == 0) {
								RemoteTranslationService$$ExternalSyntheticLambda1 v26 = new RemoteTranslationService$$ExternalSyntheticLambda1(p1,p2,p3);
								boolean v28 = RemoteTranslationService.run(v26);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void onSessionCreated(TranslationContext p1, int p2, IResultReceiver p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		boolean v5 = this.this$0.isDefaultServiceLocked(p4);
		boolean v4 = v5;
		if (v4 != 0) {
			boolean v7 = this.this$0.isCalledByServiceAppLocked(p4, "onSessionCreated");
			boolean v6 = v7;
			if (v6 == 0) {
				RemoteTranslationService v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
				if (v9 == 0) {
					v9.onSessionCreated(p1, p2, p3);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void onSessionCreated(TranslationContext p1, int p2, IResultReceiver p3, int p4){
	Object v1 = TranslationManagerService.access$600(this.this$0);
	AbstractPerUserSystemService v2 = TranslationManagerService.access$700(this.this$0, p4);
	if (v2 == 0) {
		boolean v3 = TranslationManagerService.-$$Nest$misDefaultServiceLocked(this.this$0, p4);
		if (v3 != 0) {
			boolean v4 = TranslationManagerService.-$$Nest$misCalledByServiceAppLocked(this.this$0, p4, "onSessionCreated");
			if (v4 == 0) {
				p3.send(2, 0);
				return;
			}
		}
	}
}

and the following sink code:
['AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);\nRemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);\nRemoteTranslationService$$ExternalSyntheticLambda1 v26 = new RemoteTranslationService$$ExternalSyntheticLambda1(p1,p2,p3);\nboolean v28 = RemoteTranslationService.run(v26);', 'AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);\nRemoteTranslationService v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();\nv9.onSessionCreated(p1, p2, p3);', 'p3.send(2, 0);']

The method onSessionCreated has the following similar APIs:

- API Name: onTranslationCapabilitiesRequest(IILandroid/os/ResultReceiver;I)V with Similarity Score: 1.0
  - Access Control Level: NONE and the following code:
p3.send(2, 0);

- API Name: onTranslationCapabilitiesRequest(IILandroid/os/ResultReceiver;I)V with Similarity Score: 0.9221217632293701
  - Access Control Level: NONE and the following code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
boolean v5 = this.this$0.isDefaultServiceLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);

