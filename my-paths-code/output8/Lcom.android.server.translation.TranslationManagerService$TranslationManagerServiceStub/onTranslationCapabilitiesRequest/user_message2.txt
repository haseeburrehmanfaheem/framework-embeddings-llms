The method onTranslationCapabilitiesRequest in the following class Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub has the following code snippet:

This is path 1 for the API with depth 2:
public void onTranslationCapabilitiesRequest(int p1, int p2, ResultReceiver p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		String v6 = AbstractMasterSystemService.mServiceNameResolver.getDefaultServiceName(p4);
		if (v6 != 0) {
			String v7 = AbstractMasterSystemService.mServiceNameResolver.getServiceName(p4);
			boolean v8 = v6.equals(v7);
			boolean v5 = v8;
			boolean v4 = v5;
			if (v4 != 0) {
				boolean v10 = 1;
				boolean v9 = v10;
				if (v9 == 0) {
					if (this.mRemoteTranslationService != 0) {
						String v20 = TranslationManagerServiceImpl.getComponentNameLocked();
						if (v20 != 0) {
							ComponentName v21 = ComponentName.unflattenFromString(v20);
							RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
							Context v23 = TranslationManagerServiceImpl.getContext();
							this.mRemoteTranslationService = v22;
							RemoteTranslationService v19 = this.mRemoteTranslationService;
							if (v19 == 0) {
								RemoteTranslationService$$ExternalSyntheticLambda2 v26 = new RemoteTranslationService$$ExternalSyntheticLambda2(p1,p2,p3);
								boolean v28 = RemoteTranslationService.run(v26);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void onTranslationCapabilitiesRequest(int p1, int p2, ResultReceiver p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		boolean v5 = this.this$0.isDefaultServiceLocked(p4);
		boolean v4 = v5;
		if (v4 != 0) {
			boolean v7 = this.this$0.isCalledByServiceAppLocked(p4, "getTranslationCapabilities");
			boolean v6 = v7;
			if (v6 == 0) {
				RemoteTranslationService v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
				if (v9 == 0) {
					v9.onTranslationCapabilitiesRequest(p1, p2, p3);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void onTranslationCapabilitiesRequest(int p1, int p2, ResultReceiver p3, int p4){
	Object v1 = TranslationManagerService.access$000(this.this$0);
	AbstractPerUserSystemService v2 = TranslationManagerService.access$100(this.this$0, p4);
	if (v2 == 0) {
		boolean v3 = TranslationManagerService.-$$Nest$misDefaultServiceLocked(this.this$0, p4);
		if (v3 != 0) {
			boolean v4 = TranslationManagerService.-$$Nest$misCalledByServiceAppLocked(this.this$0, p4, "getTranslationCapabilities");
			if (v4 == 0) {
				p3.send(2, 0);
				return;
			}
		}
	}
}

and the following sink code:
['AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);\nboolean v5 = this.this$0.isDefaultServiceLocked(p4);\nRemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);', 'v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();\nv9.onTranslationCapabilitiesRequest(p1, p2, p3);', 'p3.send(2, 0);']

The method onTranslationCapabilitiesRequest has the following similar APIs:

- API Name: onSessionCreated(Landroid/view/translation/TranslationContext;ILcom/android/internal/os/IResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 1.0000001192092896, Code:
p3.send(2, 0);
  - Similarity: 0.9221218228340149, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
RemoteTranslationService$$ExternalSyntheticLambda1 v26 = new RemoteTranslationService$$ExternalSyntheticLambda1(p1,p2,p3);
boolean v28 = RemoteTranslationService.run(v26);
  - Similarity: 0.8958139419555664, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
v9.onSessionCreated(p1, p2, p3);
  - Access Control Level: NONE

- API Name: registerTranslationCapabilityCallback(Landroid/os/IRemoteCallback;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.8968978524208069, Code:
RemoteTranslationService v11 = new RemoteTranslationService(v12,v10,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
  - Similarity: 0.7969028949737549, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
Integer v6 = Integer.valueOf(v4);
boolean v7 = this.mTranslationCapabilityCallbacks.register(p1, v6);
  - Access Control Level: NONE

- API Name: onTranslationFinished(ZLandroid/os/IBinder;Landroid/content/ComponentName;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.8338262438774109, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
if (p1 == 0) {
Bundle v21 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);
this.mCallbacks.broadcast(v24);
  - Similarity: 0.7741943597793579, Code:
AbstractPerUserSystemService v2 = TranslationManagerService.access$1500(this.this$0, p4);
v2.onTranslationFinishedLocked(p1, p2, p3);
  - Access Control Level: NONE

- API Name: unregisterTranslationCapabilityCallback(Landroid/os/IRemoteCallback;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.833794891834259, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
boolean v5 = this.mTranslationCapabilityCallbacks.unregister(p1);
  - Access Control Level: NONE

- API Name: hideToolbar(JI)V in the following Class: Lcom.android.server.selectiontoolbar.SelectionToolbarManagerService$SelectionToolbarManagerServiceStub with the following sink code entries:
  - Similarity: 0.7803889513015747, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
if (v2 == 0) {
RemoteSelectionToolbarRenderService v8 = new RemoteSelectionToolbarRenderService(v9,v7,AbstractPerUserSystemService.mUserId,this.mRemoteServiceCallback);
this.mRemoteService = v8;
RemoteSelectionToolbarRenderService v5 = this.mRemoteService;
if (v5 == 0) {
RemoteSelectionToolbarRenderService$$ExternalSyntheticLambda3 v12 = new RemoteSelectionToolbarRenderService$$ExternalSyntheticLambda3(p1);
boolean v14 = RemoteSelectionToolbarRenderService.run(v12);
  - Access Control Level: NONE

