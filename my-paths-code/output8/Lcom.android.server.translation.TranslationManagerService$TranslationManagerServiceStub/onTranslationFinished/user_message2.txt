The method onTranslationFinished has the following code snippet:

This is path 1 for the API with depth 2:
public void onTranslationFinished(boolean p1, IBinder p2, ComponentName p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	Context v6 = this.mMaster.getContext();
	Context v5 = v6;
	int v7 = this.mUserId;
	if (p3 == 0) {
		PackageManager v9 = v5.getPackageManager();
		String v10 = p3.getPackageName();
		ApplicationInfo v11 = v9.getApplicationInfoAsUser(v10, 0, v7);
		int v8 = -1;
		String v18 = p3.getPackageName();
		if (p1 == 0) {
			boolean v19 = this.mWaitingFinishedCallbackActivities.contains(p2);
			if (v19 == 0) {
				Bundle v21 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);
				int v22 = this.mCallbacks.getRegisteredCallbackCount();
				if (v22 != 0) {
					List v23 = TranslationManagerServiceImpl.getEnabledInputMethods();
					TranslationManagerServiceImpl$$ExternalSyntheticLambda0 v24 = new TranslationManagerServiceImpl$$ExternalSyntheticLambda0(TranslationManagerServiceImpl,v8,v21,v23);
					this.mCallbacks.broadcast(v24);
					boolean v27 = this.mWaitingFinishedCallbackActivities.remove(p2);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void onTranslationFinished(boolean p1, IBinder p2, ComponentName p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	Context v5 = TranslationManagerServiceImpl.getContext();
	int v6 = TranslationManagerServiceImpl.getUserId();
	int v7 = TranslationManagerServiceImpl.getAppUidByComponentName(v5, p3, v6);
	String v8 = p3.getPackageName();
	if (p1 == 0) {
		boolean v9 = this.mWaitingFinishedCallbackActivities.contains(p2);
		if (v9 == 0) {
			TranslationManagerServiceImpl.invokeCallbacks(3, 0, 0, v8, v7);
			boolean v11 = this.mWaitingFinishedCallbackActivities.remove(p2);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void onTranslationFinished(boolean p1, IBinder p2, ComponentName p3, int p4){
	Object v1 = TranslationManagerService.access$1400(this.this$0);
	AbstractPerUserSystemService v2 = TranslationManagerService.access$1500(this.this$0, p4);
	v2.onTranslationFinishedLocked(p1, p2, p3);
	return;
}

and the following sink code:
['AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);\nif (p1 == 0) {\nBundle v21 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);\nthis.mCallbacks.broadcast(v24);', 'int v7 = TranslationManagerServiceImpl.getAppUidByComponentName(v5, p3, v6);\nif (p1 == 0) {\nTranslationManagerServiceImpl.invokeCallbacks(3, 0, 0, v8, v7);', 'AbstractPerUserSystemService v2 = TranslationManagerService.access$1500(this.this$0, p4);\nv2.onTranslationFinishedLocked(p1, p2, p3);']

The method onTranslationFinished has the following similar APIs:

- API Name: onSessionCreated(Landroid/view/translation/TranslationContext;ILcom/android/internal/os/IResultReceiver;I)V with Similarity Score: 0.8469353318214417
  - Access Control Level: NONE and the following code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
v9.onSessionCreated(p1, p2, p3);

- API Name: unregisterTranslationCapabilityCallback(Landroid/os/IRemoteCallback;I)V with Similarity Score: 0.846289336681366
  - Access Control Level: NONE and the following code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
boolean v5 = this.mTranslationCapabilityCallbacks.unregister(p1);

