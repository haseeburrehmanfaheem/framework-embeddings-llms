The method registerTranslationCapabilityCallback in the following class Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub has the following code snippet:

This is path 1 for the API with depth 2:
public void registerTranslationCapabilityCallback(IRemoteCallback p1, int p2){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = Binder.getCallingUid();
		Integer v6 = Integer.valueOf(v4);
		boolean v7 = this.mTranslationCapabilityCallbacks.register(p1, v6);
		if (this.mRemoteTranslationService != 0) {
			String v9 = TranslationManagerServiceImpl.getComponentNameLocked();
			if (v9 != 0) {
				ComponentName v10 = ComponentName.unflattenFromString(v9);
				RemoteTranslationService v11 = new RemoteTranslationService(v12,v10,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
				Context v12 = TranslationManagerServiceImpl.getContext();
				this.mRemoteTranslationService = v11;
				RemoteTranslationService v8 = this.mRemoteTranslationService;
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void registerTranslationCapabilityCallback(IRemoteCallback p1, int p2){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = Binder.getCallingUid();
		Integer v6 = Integer.valueOf(v4);
		boolean v7 = this.mTranslationCapabilityCallbacks.register(p1, v6);
		RemoteTranslationService v8 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
		return;
	}
}


This is path 3 for the API with depth 0:
public void registerTranslationCapabilityCallback(IRemoteCallback p1, int p2){
	Object v1 = TranslationManagerService.access$200(this.this$0);
	AbstractPerUserSystemService v2 = TranslationManagerService.access$300(this.this$0, p2);
	if (v2 == 0) {
		int v3 = Binder.getCallingUid();
		v2.registerTranslationCapabilityCallback(p1, v3);
		return;
	}
}

and the following sink code:
['AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);\nInteger v6 = Integer.valueOf(v4);\nboolean v7 = this.mTranslationCapabilityCallbacks.register(p1, v6);', 'RemoteTranslationService v11 = new RemoteTranslationService(v12,v10,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);', 'v2.registerTranslationCapabilityCallback(p1, v3);']

The method registerTranslationCapabilityCallback has the following similar APIs:

- API Name: unregisterTranslationCapabilityCallback(Landroid/os/IRemoteCallback;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.9656040668487549, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
boolean v5 = this.mTranslationCapabilityCallbacks.unregister(p1);
  - Similarity: 0.833557665348053, Code:
AbstractPerUserSystemService v2 = TranslationManagerService.access$500(this.this$0, p2);
v2.unregisterTranslationCapabilityCallback(p1);
  - Access Control Level: NONE

- API Name: onTranslationCapabilitiesRequest(IILandroid/os/ResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.8968978524208069, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
boolean v5 = this.this$0.isDefaultServiceLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
  - Similarity: 0.7478916645050049, Code:
v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
v9.onTranslationCapabilitiesRequest(p1, p2, p3);
  - Access Control Level: NONE

- API Name: onSessionCreated(Landroid/view/translation/TranslationContext;ILcom/android/internal/os/IResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.8421229124069214, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
RemoteTranslationService$$ExternalSyntheticLambda1 v26 = new RemoteTranslationService$$ExternalSyntheticLambda1(p1,p2,p3);
boolean v28 = RemoteTranslationService.run(v26);
  - Similarity: 0.7882782816886902, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v9 = TranslationManagerServiceImpl.ensureRemoteServiceLocked();
v9.onSessionCreated(p1, p2, p3);
  - Access Control Level: NONE

- API Name: onTranslationFinished(ZLandroid/os/IBinder;Landroid/content/ComponentName;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.8153378963470459, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
if (p1 == 0) {
Bundle v21 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);
this.mCallbacks.broadcast(v24);
  - Similarity: 0.7455028891563416, Code:
AbstractPerUserSystemService v2 = TranslationManagerService.access$1500(this.this$0, p4);
v2.onTranslationFinishedLocked(p1, p2, p3);
  - Access Control Level: NONE

- API Name: registerUiTranslationStateCallback(Landroid/os/IRemoteCallback;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7586684226989746, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
int v4 = Binder.getCallingUid();
Integer v6 = Integer.valueOf(v4);
boolean v7 = this.mCallbacks.register(p1, v6);
  - Access Control Level: NONE

