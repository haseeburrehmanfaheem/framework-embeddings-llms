The method canUserAttemptToConfigureInteractAcrossProfiles has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	UserManager v3 = this.mInjector.getUserManager();
	[I v4 = v3.getProfileIds(v1, 0);
	if (v4.length >= 2) {
		if (0 >= v4.length) {
			boolean v6 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[0]);
			if (v6 == 0) {
				if ((0 + 1) >= v4.length) {
					boolean v7 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[(0 + 1)]);
					if (v7 == 0) {
						boolean v5 = 1;
						if (v5 == 0) {
							String v8 = AppOpsManager.opToPermission(93);
							if (v9 != 0) {
								boolean v2 = (v10 ^ 1);
								return v2;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	UserManager v3 = this.mInjector.getUserManager();
	[I v4 = v3.getProfileIds(v1, 0);
	if (v4.length >= 2) {
		boolean v5 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4);
		if (v5 == 0) {
			String v6 = AppOpsManager.opToPermission(93);
			if (v7 != 0) {
				boolean v2 = (v8 ^ 1);
				return v2;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}

and the following sink code:
['int v1 = this.mInjector.getCallingUserId();\n[I v4 = v3.getProfileIds(v1, 0);\nboolean v6 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[0]);', 'int v1 = this.mInjector.getCallingUserId();\nUserManager v3 = this.mInjector.getUserManager();\n[I v4 = v3.getProfileIds(v1, 0);\nboolean v5 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4);', 'int v1 = this.mInjector.getCallingUserId();\nboolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);']

The method canUserAttemptToConfigureInteractAcrossProfiles has the following similar APIs:

- API Name: canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z with Similarity Score: 0.9860643148422241
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = this.mInjector.getCallingUserId();
boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);

- API Name: canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z with Similarity Score: 0.9554608464241028
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = this.mInjector.getCallingUserId();
boolean v3 = CrossProfileAppsServiceImpl.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);

