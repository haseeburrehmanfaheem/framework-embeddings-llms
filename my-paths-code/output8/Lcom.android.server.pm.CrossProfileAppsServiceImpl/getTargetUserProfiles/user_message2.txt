The method getTargetUserProfiles in the following class Lcom.android.server.pm.CrossProfileAppsServiceImpl has the following code snippet:

This is path 1 for the API with depth 2:
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	DevicePolicyEventLogger v7 = new DevicePolicyEventLogger(125);
	DevicePolicyEventLogger v6 = v7;
	String v9 = new String(1);
	this.mStringArrayValue = v9;
	DevicePolicyEventLogger v10 = DevicePolicyEventLogger;
	if (this.mStringArrayValue != 0) {
		byte[] v12 = 0;
		StatsEvent$Builder v14 = StatsEvent.newBuilder();
		StatsEvent$Builder v15 = v14.setAtomId(103);
		StatsEvent$Builder v16 = v14.writeInt(this.mEventId);
		StatsEvent$Builder v17 = v14.writeString(this.mAdminPackageName);
		StatsEvent$Builder v18 = v14.writeInt(this.mIntValue);
		StatsEvent$Builder v19 = v14.writeBoolean(this.mBooleanValue);
		StatsEvent$Builder v20 = v14.writeLong(this.mTimePeriodMs);
		if (v12 != 0) {
			[B v21 = new [B(0);
			StatsEvent$Builder v22 = v14.writeByteArray(v12);
			StatsEvent$Builder v23 = v14.usePooledBuffer();
			StatsEvent v24 = v14.build();
			StatsLog.write(v24);
			int v26 = this.mInjector.getCallingUserId();
			List v27 = p0.getTargetUserProfilesUnchecked(p1, v26);
			return v27;
		}
	}
}


This is path 2 for the API with depth 1:
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	DevicePolicyEventLogger v7 = new DevicePolicyEventLogger(125);
	DevicePolicyEventLogger v6 = v7;
	String v9 = new String(1);
	this.mStringArrayValue = v9;
	DevicePolicyEventLogger v10 = DevicePolicyEventLogger;
	byte[] v12 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v12);
	int v14 = this.mInjector.getCallingUserId();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v16 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v14,p1);
	Object v18 = this.mInjector.withCleanCallingIdentity(v16);
	List v15 = v18;
	return v15;
}


This is path 3 for the API with depth 0:
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	DevicePolicyEventLogger v3 = DevicePolicyEventLogger.createEvent(125);
	String v4 = new String(1);
	DevicePolicyEventLogger v5 = v3.setStrings(v4);
	v5.write();
	int v7 = this.mInjector.getCallingUserId();
	List v8 = p0.getTargetUserProfilesUnchecked(p1, v7);
	return v8;
}

and the following sink code:
['List v27 = p0.getTargetUserProfilesUnchecked(p1, v26);\nreturn v27;', 'int v14 = this.mInjector.getCallingUserId();\nList v15 = v18;\nreturn v15;', 'String v9 = new String(1);\nthis.mStringArrayValue = v9;']

The method getTargetUserProfiles has the following similar APIs:

- API Name: startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.8263123631477356, Code:
this.mStringArrayValue = v10;
v18.setAtomId(103);
v19.writeInt(this.mEventId);
  - Access Control Level: SYS_OR_SIG

- API Name: editProperties(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Z)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.806950569152832, Code:
int v1 = Binder.getCallingUid();
List v20 = AccountManagerService.getTypesManagedByCaller(v1, v18);
AccountManagerService$16 v31 = new AccountManagerService$16(p0,v29,p1,p2,p3,1,0,0,p2);
  - Similarity: 0.8007900714874268, Code:
int v1 = Binder.getCallingUid();
List v21 = AccountManagerService.getTypesForCaller(v1, v18, 0);
AccountManagerService$16 v43 = new AccountManagerService$16(p0,v25,p1,p2,p3,1,0,0,p2);
  - Access Control Level: SYS_OR_SIG

- API Name: getRestrictBackgroundByCaller()I in the following Class: Lcom.android.server.net.NetworkPolicyManagerService with the following sink code entries:
  - Similarity: 0.8022352457046509, Code:
int v2 = Binder.getCallingUid();
int v3 = 3;
return v3;
  - Access Control Level: NORMAL

- API Name: getServiceDeviceInfo(Ljava/lang/String;Ljava/lang/String;)Landroid/media/midi/MidiDeviceInfo; in the following Class: Lcom.android.server.midi.MidiService with the following sink code entries:
  - Similarity: 0.7927813529968262, Code:
int v1 = Binder.getCallingUid();
boolean v14 = v10.isUidAllowed(v1);
  - Access Control Level: NONE

- API Name: removeAccountAsUser(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;ZI)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7874526381492615, Code:
int v1 = Binder.getCallingUid();
UserHandle v23 = UserHandle.of(p4);
List v27 = AccountManagerService.getTypesForCaller(v1, v24, 0);
boolean v28 = v26.contains(Account.type);
if (v25 != 0) { ... }
  - Access Control Level: SYS_OR_SIG

