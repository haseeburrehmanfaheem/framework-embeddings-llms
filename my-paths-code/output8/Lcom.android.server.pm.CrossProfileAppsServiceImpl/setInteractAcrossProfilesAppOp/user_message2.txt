The method setInteractAcrossProfilesAppOp in the following class Lcom.android.server.pm.CrossProfileAppsServiceImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void setInteractAcrossProfilesAppOp(String p1, int p2){
	int v1 = this.mInjector.getCallingUserId();
	int v3 = this.mInjector.getCallingUid();
	if (v4 != 0) {
		if (v5 == 0) {
			if (v6 != 0) {
				if (v7 == 0) {
					if (p2 != 0) {
						boolean v9 = CrossProfileAppsServiceImpl.canConfigureInteractAcrossProfiles(p1, v1);
						if (v9 != 0) {
							UserManager v10 = this.mInjector.getUserManager();
							[I v11 = v10.getProfileIds(v1, 0);
							if (0 >= v11.length) {
								boolean v12 = CrossProfileAppsServiceImpl.isPackageInstalled(p1, v11[0]);
								if (v12 != 0) {
									if ((0 + 1) >= v11.length) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setInteractAcrossProfilesAppOp(String p1, int p2){
	int v1 = this.mInjector.getCallingUserId();
	int v3 = this.mInjector.getCallingUid();
	if (v4 != 0) {
		if (v5 == 0) {
			if (v6 != 0) {
				if (v7 == 0) {
					CrossProfileAppsServiceImpl.setInteractAcrossProfilesAppOpUnchecked(p1, p2, v1);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setInteractAcrossProfilesAppOp(String p1, int p2){
	int v1 = this.mInjector.getCallingUserId();
	p0.setInteractAcrossProfilesAppOp(p1, p2, v1);
	return;
}

and the following sink code:
['CrossProfileAppsServiceImpl.setInteractAcrossProfilesAppOpUnchecked(p1, p2, v1);', 'p0.setInteractAcrossProfilesAppOp(p1, p2, v1);', 'CrossProfileAppsServiceImpl.canConfigureInteractAcrossProfiles(p1, v1);']

The method setInteractAcrossProfilesAppOp has the following similar APIs:

- API Name: canRequestInteractAcrossProfiles(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.849927544593811, Code:
p0.canRequestInteractAcrossProfilesUnchecked(p1);
  - Access Control Level: NONE

- API Name: canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.8404206037521362, Code:
int v1 = this.mInjector.getCallingUserId();
boolean v3 = CrossProfileAppsServiceImpl.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
  - Similarity: 0.8005073070526123, Code:
int v1 = this.mInjector.getCallingUserId();
boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);
  - Similarity: 0.7528039813041687, Code:
boolean v4 = CrossProfileAppsServiceImpl.hasOtherProfileWithPackageInstalled(p1, v1);
boolean v7 = CrossProfileAppsServiceImpl.isCrossProfilePackageAllowlisted(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.7933699488639832, Code:
int v1 = this.mInjector.getCallingUserId();
boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
  - Access Control Level: SYS_OR_SIG

- API Name: canAddMoreManagedProfiles(IZ)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.704131007194519, Code:
boolean v1 = p0.canAddMoreProfilesToUser("android.os.usertype.profile.MANAGED", p1, p2);
return v1;
  - Access Control Level: SYS_OR_SIG

