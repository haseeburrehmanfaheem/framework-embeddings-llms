The method startActivityAsUser has the following code snippet:

This is path 1 for the API with depth 2:
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	DevicePolicyEventLogger v8 = new DevicePolicyEventLogger(126);
	DevicePolicyEventLogger v7 = v8;
	String v10 = new String(1);
	this.mStringArrayValue = v10;
	DevicePolicyEventLogger v11 = DevicePolicyEventLogger;
	if (this.mStringArrayValue != 0) {
		StringList v14 = new StringList();
		StringList.stringValue = this.mStringArrayValue;
		byte[] v16 = MessageNano.toByteArray(v14);
		byte[] v13 = v16;
		StatsEvent$Builder v18 = StatsEvent.newBuilder();
		StatsEvent$Builder v19 = v18.setAtomId(103);
		StatsEvent$Builder v20 = v18.writeInt(this.mEventId);
		StatsEvent$Builder v21 = v18.writeString(this.mAdminPackageName);
		StatsEvent$Builder v22 = v18.writeInt(this.mIntValue);
		StatsEvent$Builder v23 = v18.writeBoolean(this.mBooleanValue);
		StatsEvent$Builder v24 = v18.writeLong(this.mTimePeriodMs);
		if (v13 != 0) {
			[B v25 = new [B(0);
			StatsEvent$Builder v26 = v18.writeByteArray(v13);
			StatsEvent$Builder v27 = v18.usePooledBuffer();
			StatsEvent v28 = v18.build();
			StatsLog.write(v28);
			int v30 = this.mInjector.getCallingUserId();
			int v31 = this.mInjector.getCallingUid();
			int v32 = this.mInjector.getCallingPid();
			List v33 = p0.getTargetUserProfilesUnchecked(p2, v30);
			UserHandle v34 = UserHandle.of(p5);
			boolean v35 = v33.contains(v34);
			if (v35 == 0) {
				String v36 = p4.getPackageName();
				boolean v37 = p2.equals(v36);
				if (v37 == 0) {
					Intent v38 = new Intent();
					if (p6 == 0) {
						Intent v40 = v38.setAction("android.intent.action.MAIN");
						Intent v41 = v38.addCategory("android.intent.category.LAUNCHER");
						if (p7 != 0) {
							Intent v42 = v38.addFlags(270532608);
							String v43 = p4.getPackageName();
							Intent v44 = v38.setPackage(v43);
							p0.verifyActivityCanHandleIntentAndExported(v38, p4, v31, p5);
							if (p8 != 0) {
								ActivityOptions v46 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
								Bundle v47 = v46.toBundle();
								Intent v48 = v38.setPackage(0);
								Intent v49 = v38.setComponent(p4);
								ActivityTaskManagerInternal v50 = this.mInjector.getActivityTaskManagerInternal();
								int v51 = v50.startActivityAsUser(p1, p2, p3, v38, p7, 0, v47, p5);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	DevicePolicyEventLogger v8 = new DevicePolicyEventLogger(126);
	DevicePolicyEventLogger v7 = v8;
	String v10 = new String(1);
	this.mStringArrayValue = v10;
	DevicePolicyEventLogger v11 = DevicePolicyEventLogger;
	byte[] v13 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v13);
	int v15 = this.mInjector.getCallingUserId();
	int v16 = this.mInjector.getCallingUid();
	int v17 = this.mInjector.getCallingPid();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v19 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v15,p2);
	Object v21 = this.mInjector.withCleanCallingIdentity(v19);
	List v18 = v21;
	UserHandle v22 = UserHandle.of(p5);
	boolean v23 = v18.contains(v22);
	if (v23 == 0) {
		String v24 = p4.getPackageName();
		boolean v25 = p2.equals(v24);
		if (v25 == 0) {
			Intent v26 = new Intent();
			if (p6 == 0) {
				Intent v28 = v26.setAction("android.intent.action.MAIN");
				Intent v29 = v26.addCategory("android.intent.category.LAUNCHER");
				if (p7 != 0) {
					Intent v30 = v26.addFlags(270532608);
					String v31 = p4.getPackageName();
					Intent v32 = v26.setPackage(v31);
					CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2 v34 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2(CrossProfileAppsServiceImpl,v26,v16,p5,p4);
					this.mInjector.withCleanCallingIdentity(v34);
					if (p8 != 0) {
						ActivityOptions v38 = new ActivityOptions();
						this.mAnimationType = 12;
						ActivityOptions v37 = v38;
						Bundle v40 = v37.toBundle();
						Intent v41 = v26.setPackage(0);
						Intent v42 = v26.setComponent(p4);
						ActivityTaskManagerInternal v43 = this.mInjector.getActivityTaskManagerInternal();
						int v44 = v43.startActivityAsUser(p1, p2, p3, v26, p7, 0, v40, p5);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	if (v20 == 0) {
		Intent v21 = v16.setComponent(p4);
		p0.verifyActivityCanHandleIntentAndExported(v16, p4, v9, p5);
		if (p8 != 0) {
			ActivityOptions v23 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
			Bundle v24 = v23.toBundle();
			Intent v25 = v16.setPackage(0);
			Intent v26 = v16.setComponent(p4);
			ActivityTaskManagerInternal v27 = this.mInjector.getActivityTaskManagerInternal();
			int v28 = v27.startActivityAsUser(p1, p2, p3, v16, p7, 0, v24, p5);
			return;
		}
	}
}

and the following sink code:
['DevicePolicyEventLogger v8 = new DevicePolicyEventLogger(126);\nStatsLog.write(v28);\nFrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v13);', 'Intent v38 = new Intent();\nIntent v26 = v26.setComponent(p4);\nActivityTaskManagerInternal v27 = this.mInjector.getActivityTaskManagerInternal();\nint v28 = v27.startActivityAsUser(p1, p2, p3, v16, p7, 0, v24, p5);', 'this.mStringArrayValue = v10;\nv18.setAtomId(103);\nv19.writeInt(this.mEventId);']

The method startActivityAsUser has the following similar APIs:

- API Name: startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V with Similarity Score: 0.9190582036972046
  - Access Control Level: SYS_OR_SIG and the following code:
DevicePolicyEventLogger v26 = new DevicePolicyEventLogger(150);
String v28 = new String(1);
this.mStringArrayValue = v28;
byte[] v35 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v35);

- API Name: startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V with Similarity Score: 0.8762045502662659
  - Access Control Level: SYS_OR_SIG and the following code:
ActivityTaskManagerInternal v19 = this.mInjector.getActivityTaskManagerInternal();
int v20 = v19.startActivityAsUser(p1, p2, p3, v11, p6, 0, p7, p5);

