The method canInteractAcrossProfiles in the following class Lcom.android.server.pm.CrossProfileAppsServiceImpl has the following code snippet:

This is path 1 for the API with depth 1:
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	int v6 = this.mInjector.getCallingUserId();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v8 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v6,p1);
	Object v10 = this.mInjector.withCleanCallingIdentity(v8);
	List v7 = v10;
	boolean v11 = v7.isEmpty();
	if (v11 == 0) {
		return 0;
	}
}


This is path 2 for the API with depth 0:
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	if (v5 == 0) {
		return 0;
	}
}


This is path 3 for the API with depth 0:
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	if (v5 == 0) {
		if (v6 == 0) {
			if (v7 == 0) {
				return 0;
			}
		}
	}
}

and the following sink code:
['p0.verifyCallingPackage(p1);\nint v3 = this.mInjector.getCallingUserId();\nList v4 = p0.getTargetUserProfilesUnchecked(p1, v3);', 'CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v8 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v6,p1);']

The method canInteractAcrossProfiles has the following similar APIs:

- API Name: resetInteractAcrossProfilesAppOps(Ljava/util/List;)V in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.9590580463409424, Code:
CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1 v1 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1(p0);
p1.forEach(v1);
  - Access Control Level: NONE

- API Name: canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.933641791343689, Code:
CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9 v18 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9(CrossProfileAppsServiceImpl,p1);
Object v20 = this.mInjector.withCleanCallingIdentity(v18);
boolean v21 = v20.booleanValue();
  - Similarity: 0.7981862425804138, Code:
int v1 = this.mInjector.getCallingUserId();
boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);
  - Similarity: 0.7732442021369934, Code:
int v1 = this.mInjector.getCallingUserId();
boolean v3 = CrossProfileAppsServiceImpl.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
  - Access Control Level: SYS_OR_SIG

- API Name: startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.8752912878990173, Code:
CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6 v19 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6(CrossProfileAppsServiceImpl,v11,v7,p5);
ActivityTaskManagerInternal v22 = this.mInjector.getActivityTaskManagerInternal();
int v23 = v22.startActivityAsUser(p1, p2, p3, v11, p6, 0, p7, p5);
  - Access Control Level: SYS_OR_SIG

- API Name: canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.8257414102554321, Code:
int v1 = this.mInjector.getCallingUserId();
[I v4 = v3.getProfileIds(v1, 0);
boolean v6 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[0]);
  - Similarity: 0.8080471158027649, Code:
int v1 = this.mInjector.getCallingUserId();
boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
  - Similarity: 0.8028894662857056, Code:
int v1 = this.mInjector.getCallingUserId();
UserManager v3 = this.mInjector.getUserManager();
[I v4 = v3.getProfileIds(v1, 0);
boolean v5 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4);
  - Access Control Level: SYS_OR_SIG

- API Name: getTargetUserProfiles(Ljava/lang/String;)Ljava/util/List; in the following Class: Lcom.android.server.pm.CrossProfileAppsServiceImpl with the following sink code entries:
  - Similarity: 0.7802340984344482, Code:
List v27 = p0.getTargetUserProfilesUnchecked(p1, v26);
return v27;
  - Access Control Level: NONE

