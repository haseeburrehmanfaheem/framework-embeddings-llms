The method hasProjectionPermission has the following code snippet:

This is path 1 for the API with depth 1:
public boolean hasProjectionPermission(int p1, String p2){
	if (v2 != 0) {
		AppOpsManager v3 = this.mAppOps;
		int v4 = v3.noteOpNoThrow(46, p1, p2);
		if (v4 != 0) {
			Binder.restoreCallingIdentity(v1);
			return (0 | 0);
		}
	}
}


This is path 2 for the API with depth 0:
public boolean hasProjectionPermission(int p1, String p2){
	if (v2 != 0) {
		AppOpsManager v3 = MediaProjectionManagerService.-$$Nest$fgetmAppOps(this.this$0);
		int v4 = v3.noteOpNoThrow(46, p1, p2);
		if (v4 != 0) {
			Binder.restoreCallingIdentity(v1);
			return (0 | 0);
		}
	}
}


This is path 3 for the API with depth 0:
public boolean hasProjectionPermission(int p1, String p2){
	if (v2 != 0) {
		AppOpsManager v3 = MediaProjectionManagerService.-$$Nest$fgetmAppOps(this.this$0);
		int v4 = v3.noteOpNoThrow(46, p1, p2);
		if (v4 != 0) {
			Binder.restoreCallingIdentity(v1);
			return (0 | 0);
		}
	}
}

and the following sink code:
['AppOpsManager v3 = this.mAppOps;\nint v4 = v3.noteOpNoThrow(46, p1, p2);', 'AppOpsManager v3 = MediaProjectionManagerService.-$$Nest$fgetmAppOps(this.this$0);\nint v4 = v3.noteOpNoThrow(46, p1, p2);']

The method hasProjectionPermission has the following similar APIs:

- API Name: finishDataDelivery(ILandroid/content/AttributionSourceState;Z)V with Similarity Score: 0.7464978098869324
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mContext.getSystemService(AppOpsManage.class);
int v20 = getNext().getUid();
String v21 = v19.getPackagesForUid(v20);
v3.finishOp(v25, p1, v26, v17, v27);

- API Name: finishDataDelivery(ILandroid/content/AttributionSourceState;Z)V with Similarity Score: 0.7366498112678528
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mContext.getSystemService(AppOpsManage.class);
int v20 = getNext().getUid();
String v21 = v19.getPackagesForUid(v20);
v3.finishOp(v25, p1, v26, v17, v27);

