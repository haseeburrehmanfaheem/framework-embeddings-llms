The method removeCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void removeCallback(IMediaProjectionWatcherCallback p1){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionManagerService.unlinkDeathRecipientLocked(p1);
		this.mCallbackDelegate.remove(p1);
		Binder.restoreCallingIdentity(v3);
		return;
	}
}


This is path 2 for the API with depth 1:
public void removeCallback(IMediaProjectionWatcherCallback p1){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		this.this$0.removeCallback(p1);
		Binder.restoreCallingIdentity(v3);
		return;
	}
}


This is path 3 for the API with depth 0:
public void removeCallback(IMediaProjectionWatcherCallback p1){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionManagerService.-$$Nest$mremoveCallback(this.this$0, p1);
		Binder.restoreCallingIdentity(v3);
		return;
	}
}

and the following sink code:
['MediaProjectionManagerService.unlinkDeathRecipientLocked(p1);\nthis.mCallbackDelegate.remove(p1);', 'this.this$0.removeCallback(p1);', 'MediaProjectionManagerService.-$$Nest$mremoveCallback(this.this$0, p1);']

The method removeCallback has the following similar APIs:

- API Name: addCallback(Landroid/media/projection/IMediaProjectionWatcherCallback;)V with Similarity Score: 0.8353831768035889
  - Access Control Level: SYS_OR_SIG and the following code:
long v3 = Binder.clearCallingIdentity();
MediaProjectionManagerService$2 v6 = new MediaProjectionManagerService$2(MediaProjectionManagerService,p1);
this.mCallbackDelegate.add(p1);
MediaProjectionManagerService.linkDeathRecipientLocked(p1, v6);
Binder.restoreCallingIdentity(v3);

- API Name: removeSensorPrivacyListener(Landroid/hardware/ISensorPrivacyListener;)V with Similarity Score: 0.7903454303741455
  - Access Control Level: SYS_OR_SIG and the following code:
this.mHandler.removeListener(p1);

