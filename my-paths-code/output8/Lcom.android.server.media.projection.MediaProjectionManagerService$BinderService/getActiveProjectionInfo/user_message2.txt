The method getActiveProjectionInfo has the following code snippet:

This is path 1 for the API with depth 2:
public MediaProjectionInfo getActiveProjectionInfo(){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		if (this.mProjectionGrant != 0) {
			MediaProjectionInfo v6 = this.mProjectionGrant.getProjectionInfo();
			MediaProjectionInfo v5 = v6;
			MediaProjectionInfo v4 = v5;
			Binder.restoreCallingIdentity(v3);
			return v4;
		}
	}
}


This is path 2 for the API with depth 1:
public MediaProjectionInfo getActiveProjectionInfo(){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionInfo v5 = this.this$0.getActiveProjectionInfo();
		MediaProjectionInfo v4 = v5;
		Binder.restoreCallingIdentity(v3);
		return v4;
	}
}


This is path 3 for the API with depth 0:
public MediaProjectionInfo getActiveProjectionInfo(){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionInfo v4 = MediaProjectionManagerService.-$$Nest$mgetActiveProjectionInfo(this.this$0);
		Binder.restoreCallingIdentity(v3);
		return v4;
	}
}

and the following sink code:
['MediaProjectionInfo v6 = this.mProjectionGrant.getProjectionInfo();\nreturn v4;', 'MediaProjectionInfo v4 = MediaProjectionManagerService.-$$Nest$mgetActiveProjectionInfo(this.this$0);', 'MediaProjectionInfo v5 = this.this$0.getActiveProjectionInfo();']

The method getActiveProjectionInfo has the following similar APIs:

- API Name: stopActiveProjection()V with Similarity Score: 0.7808074951171875
  - Access Control Level: SYS_OR_SIG and the following code:
int v12 = v11.unsafeCheckOpRawNoThrow(24, this.uid, this.packageName);
v13.setMode(24, this.uid, this.packageName, 3);
MediaProjectionManagerService.-$$Nest$mstopProjectionLocked(this.this$0, MediaProjectionManagerService$MediaProjection);

- API Name: setContentRecordingSession(Landroid/view/ContentRecordingSession;Landroid/media/projection/IMediaProjection;)V with Similarity Score: 0.7639406323432922
  - Access Control Level: NONE and the following code:
boolean v5 = MediaProjectionManagerService.-$$Nest$misValidMediaProjection(this.this$0, v4);
boolean v8 = v6.setContentRecordingSession(p1);
int v17 = v16.unsafeCheckOpRawNoThrow(24, this.uid, this.packageName);
v18.setMode(24, this.uid, this.packageName, 3);
MediaProjectionManagerService.-$$Nest$mstopProjectionLocked(this.this$0, MediaProjectionManagerService$MediaProjection);

