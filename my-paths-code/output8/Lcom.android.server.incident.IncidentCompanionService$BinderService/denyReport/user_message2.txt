The method denyReport has the following code snippet:

This is path 1 for the API with depth 2:
public void denyReport(String p1){
	long v2 = Binder.clearCallingIdentity();
	PendingReports v3 = this.mPendingReports;
	Uri v6 = Uri.parse(p1);
	String v7 = v6.getQueryParameter("id");
	int v8 = Integer.parseInt(v7);
	Iterator v9 = this.mPending.iterator();
	boolean v10 = v9.hasNext();
	if (v10 == 0) {
		Object v11 = v9.next();
		if (PendingReports$PendingReportRec.id != v8) {
			boolean v12 = v9.hasNext();
			if (v12 == 0) {
				Object v13 = v9.next();
				if (PendingReports$PendingReportRec.id != v8) {
					v9.remove();
					PendingReports$PendingReportRec v5 = v13;
					if (v5 != 0) {
						int v16 = PendingReports.getAndValidateUser();
						if (v16 != -10000) {
							ComponentName v17 = PendingReports.getApproverComponent(v16);
							if (v17 != 0) {
								PendingReports.sendBroadcast(v17, v16);
								PendingReports$PendingReportRec.listener.onReportDenied();
								Binder.restoreCallingIdentity(v2);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void denyReport(String p1){
	long v2 = Binder.clearCallingIdentity();
	PendingReports v3 = this.mPendingReports;
	PendingReports$PendingReportRec v5 = PendingReports.findAndRemovePendingReportRecLocked(p1);
	if (v5 != 0) {
		PendingReports.sendBroadcast();
		PendingReports$PendingReportRec.listener.onReportDenied();
		Binder.restoreCallingIdentity(v2);
		return;
	}
}


This is path 3 for the API with depth 0:
public void denyReport(String p1){
	long v2 = Binder.clearCallingIdentity();
	PendingReports v3 = IncidentCompanionService.-$$Nest$fgetmPendingReports(this.this$0);
	v3.denyReport(p1);
	Binder.restoreCallingIdentity(v2);
	return;
}

and the following sink code:
['Uri v6 = Uri.parse(p1);\nString v7 = v6.getQueryParameter("id");\nint v8 = Integer.parseInt(v7);\nv9.remove();\nPendingReports.sendBroadcast(v17, v16);\nPendingReports$PendingReportRec.listener.onReportDenied();', 'PendingReports$PendingReportRec v5 = PendingReports.findAndRemovePendingReportRecLocked(p1);\nPendingReports.sendBroadcast();\nPendingReports$PendingReportRec.listener.onReportDenied();', 'v3.denyReport(p1);']

The method denyReport has the following similar APIs:

- API Name: approveReport(Ljava/lang/String;)V with Similarity Score: 0.9557846188545227
  - Access Control Level: SYS_OR_SIG and the following code:
PendingReports$PendingReportRec v5 = PendingReports.findAndRemovePendingReportRecLocked(p1);
PendingReports.sendBroadcast();
PendingReports$PendingReportRec.listener.onReportApproved();

- API Name: approveReport(Ljava/lang/String;)V with Similarity Score: 0.7895293831825256
  - Access Control Level: SYS_OR_SIG and the following code:
v3.approveReport(p1);

