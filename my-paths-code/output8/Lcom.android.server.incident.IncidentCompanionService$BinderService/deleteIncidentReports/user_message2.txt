The method deleteIncidentReports has the following code snippet:

This is path 1 for the API with depth 2:
public void deleteIncidentReports(String p1, String p2, String p3){
	if (p1 == 0) {
		if (p2 == 0) {
			if (p3 == 0) {
				int v1 = p1.length();
				if (v1 == 0) {
					int v2 = p2.length();
					if (v2 == 0) {
						int v3 = p3.length();
						if (v3 == 0) {
							long v5 = Binder.clearCallingIdentity();
							IBinder v8 = ServiceManager.getService("incident");
							IIncidentManager v9 = IIncidentManager$Stub.asInterface(v8);
							IIncidentManager v7 = v9;
							IIncidentManager v6 = v7;
							v6.deleteIncidentReports(p1, p2, p3);
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void deleteIncidentReports(String p1, String p2, String p3){
	if (p1 == 0) {
		if (p2 == 0) {
			if (p3 == 0) {
				int v1 = p1.length();
				if (v1 == 0) {
					int v2 = p2.length();
					if (v2 == 0) {
						int v3 = p3.length();
						if (v3 == 0) {
							long v5 = Binder.clearCallingIdentity();
							IIncidentManager v7 = this.this$0.getIIncidentManager();
							IIncidentManager v6 = v7;
							v6.deleteIncidentReports(p1, p2, p3);
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void deleteIncidentReports(String p1, String p2, String p3){
	if (p1 == 0) {
		if (p2 == 0) {
			if (p3 == 0) {
				int v1 = p1.length();
				if (v1 == 0) {
					int v2 = p2.length();
					if (v2 == 0) {
						int v3 = p3.length();
						if (v3 == 0) {
							long v5 = Binder.clearCallingIdentity();
							IIncidentManager v6 = IncidentCompanionService.-$$Nest$mgetIIncidentManager(this.this$0);
							v6.deleteIncidentReports(p1, p2, p3);
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['long v5 = Binder.clearCallingIdentity();\nIBinder v8 = ServiceManager.getService("incident");\nIIncidentManager v9 = IIncidentManager$Stub.asInterface(v8);\nv6.deleteIncidentReports(p1, p2, p3);\nBinder.restoreCallingIdentity(v5);', 'long v5 = Binder.clearCallingIdentity();\nIIncidentManager v7 = this.this$0.getIIncidentManager();\nv6.deleteIncidentReports(p1, p2, p3);\nBinder.restoreCallingIdentity(v5);', 'long v5 = Binder.clearCallingIdentity();\nIIncidentManager v6 = IncidentCompanionService.-$$Nest$mgetIIncidentManager(this.this$0);\nv6.deleteIncidentReports(p1, p2, p3);\nBinder.restoreCallingIdentity(v5);']

The method deleteIncidentReports has the following similar APIs:

- API Name: deleteAllIncidentReports(Ljava/lang/String;)V with Similarity Score: 0.9817627668380737
  - Access Control Level: SYS_OR_SIG and the following code:
long v3 = Binder.clearCallingIdentity();
IIncidentManager v4 = IncidentCompanionService.-$$Nest$mgetIIncidentManager(this.this$0);
v4.deleteAllIncidentReports(p1);
Binder.restoreCallingIdentity(v3);

- API Name: deleteAllIncidentReports(Ljava/lang/String;)V with Similarity Score: 0.9773914813995361
  - Access Control Level: SYS_OR_SIG and the following code:
long v3 = Binder.clearCallingIdentity();
IBinder v6 = ServiceManager.getService("incident");
IIncidentManager v7 = IIncidentManager$Stub.asInterface(v6);
IIncidentManager v5 = v7;
IIncidentManager v4 = v5;
v4.deleteAllIncidentReports(p1);
Binder.restoreCallingIdentity(v3);

