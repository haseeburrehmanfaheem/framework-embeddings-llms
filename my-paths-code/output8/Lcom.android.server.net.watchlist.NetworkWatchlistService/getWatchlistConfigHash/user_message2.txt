The method getWatchlistConfigHash in the following class Lcom.android.server.net.watchlist.NetworkWatchlistService has the following code snippet:

This is path 1 for the API with depth 2:
public byte[] getWatchlistConfigHash(){
	boolean v2 = this.mXmlFile.exists();
	if (v2 != 0) {
		FileInputStream v4 = new FileInputStream(this.mXmlFile);
		byte[] v6 = DigestUtils.getSha256Hash(v4);
		v4.close();
		byte[] v3 = v6;
		byte[] v1 = v3;
		return v1;
	}
}


This is path 2 for the API with depth 1:
public byte[] getWatchlistConfigHash(){
	boolean v2 = this.mXmlFile.exists();
	if (v2 != 0) {
		byte[] v1 = 0;
		return v1;
	}
}


This is path 3 for the API with depth 0:
public byte[] getWatchlistConfigHash(){
	byte[] v1 = this.mConfig.getWatchlistConfigHash();
	return v1;
}

and the following sink code:
['FileInputStream v4 = new FileInputStream(this.mXmlFile);\nbyte[] v6 = DigestUtils.getSha256Hash(v4);\nv4.close();\nbyte[] v3 = v6;\nbyte[] v1 = v3;\nreturn v1;', 'this.mConfig.getWatchlistConfigHash();\nbyte[] v1 = this.mConfig.getWatchlistConfigHash();\nreturn v1;', 'byte[] v1 = 0;\nreturn v1;']

The method getWatchlistConfigHash has the following similar APIs:

- API Name: reloadWatchlist()V in the following Class: Lcom.android.server.net.watchlist.NetworkWatchlistService with the following sink code entries:
  - Similarity: 0.770210862159729, Code:
boolean v4 = this.mXmlFile.exists();
if (v4 != 0) {
FileInputStream v5 = new FileInputStream(this.mXmlFile);
ArrayList v7 = new ArrayList();
ArrayList v9 = new ArrayList();
ArrayList v11 = new ArrayList();
ArrayList v13 = new ArrayList();
XmlPullParser v15 = Xml.newPullParser();
String v16 = StandardCharsets.UTF_8.name();
v15.setInput(v5, v16);
int v18 = v15.nextTag();
v15.require(2, 0, "watchlist-config");
int v20 = v15.nextTag();
if (v20 != 2) {
v15.require(3, 0, "watchlist-config");
WatchlistConfig$CrcShaDigests v22 = new WatchlistConfig$CrcShaDigests(v23,v25);
HarmfulCrcs v23 = new HarmfulCrcs(v7);
HarmfulDigests v25 = new HarmfulDigests(v9);
this.mDomainDigests = v22;
WatchlistConfig$CrcShaDigests v28 = new WatchlistConfig$CrcShaDigests(v29,v31);
HarmfulCrcs v29 = new HarmfulCrcs(v11);
HarmfulDigests v31 = new HarmfulDigests(v13);
this.mIpDigests = v28;
v5.close();
return;
  - Access Control Level: SYS_OR_SIG

- API Name: getSplitPermissions()Ljava/util/List; in the following Class: Lcom.android.server.pm.permission.PermissionManagerService with the following sink code entries:
  - Similarity: 0.7447549700737, Code:
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: retrieveSystemUpdateInfo()Landroid/os/Bundle; in the following Class: Lcom.android.server.SystemUpdateManagerService with the following sink code entries:
  - Similarity: 0.743859589099884, Code:
FileInputStream v4 = this.mFile.openRead();
TypedXmlPullParser v5 = Xml.resolvePullParser(v4);
if (v4 == 0) {
v4.close();
  - Access Control Level: SYS_OR_SIG

- API Name: getRestrictBackgroundStatus(I)I in the following Class: Lcom.android.server.net.NetworkPolicyManagerService with the following sink code entries:
  - Similarity: 0.7438377141952515, Code:
int v2 = 3;
return v2;
  - Access Control Level: NORMAL

