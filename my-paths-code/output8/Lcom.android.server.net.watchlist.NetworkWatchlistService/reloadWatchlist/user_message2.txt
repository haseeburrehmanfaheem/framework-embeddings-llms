The method reloadWatchlist in the following class Lcom.android.server.net.watchlist.NetworkWatchlistService has the following code snippet:

This is path 1 for the API with depth 1:
public void reloadWatchlist(){
	boolean v4 = this.mXmlFile.exists();
	if (v4 != 0) {
		return;
	}
}


This is path 2 for the API with depth 0:
public void reloadWatchlist(){
	this.mConfig.reloadConfig();
	return;
}


This is path 3 for the API with depth 1:
public void reloadWatchlist(){
	boolean v4 = this.mXmlFile.exists();
	if (v4 != 0) {
		FileInputStream v5 = new FileInputStream(this.mXmlFile);
		ArrayList v7 = new ArrayList();
		ArrayList v9 = new ArrayList();
		ArrayList v11 = new ArrayList();
		ArrayList v13 = new ArrayList();
		XmlPullParser v15 = Xml.newPullParser();
		String v16 = StandardCharsets.UTF_8.name();
		v15.setInput(v5, v16);
		int v18 = v15.nextTag();
		v15.require(2, 0, "watchlist-config");
		int v20 = v15.nextTag();
		if (v20 != 2) {
			v15.require(3, 0, "watchlist-config");
			WatchlistConfig$CrcShaDigests v22 = new WatchlistConfig$CrcShaDigests(v23,v25);
			HarmfulCrcs v23 = new HarmfulCrcs(v7);
			HarmfulDigests v25 = new HarmfulDigests(v9);
			this.mDomainDigests = v22;
			WatchlistConfig$CrcShaDigests v28 = new WatchlistConfig$CrcShaDigests(v29,v31);
			HarmfulCrcs v29 = new HarmfulCrcs(v11);
			HarmfulDigests v31 = new HarmfulDigests(v13);
			this.mIpDigests = v28;
			v5.close();
			return;
		}
	}
}

and the following sink code:
['boolean v4 = this.mXmlFile.exists();\nif (v4 != 0) {\nFileInputStream v5 = new FileInputStream(this.mXmlFile);\nArrayList v7 = new ArrayList();\nArrayList v9 = new ArrayList();\nArrayList v11 = new ArrayList();\nArrayList v13 = new ArrayList();\nXmlPullParser v15 = Xml.newPullParser();\nString v16 = StandardCharsets.UTF_8.name();\nv15.setInput(v5, v16);\nint v18 = v15.nextTag();\nv15.require(2, 0, "watchlist-config");\nint v20 = v15.nextTag();\nif (v20 != 2) {\nv15.require(3, 0, "watchlist-config");\nWatchlistConfig$CrcShaDigests v22 = new WatchlistConfig$CrcShaDigests(v23,v25);\nHarmfulCrcs v23 = new HarmfulCrcs(v7);\nHarmfulDigests v25 = new HarmfulDigests(v9);\nthis.mDomainDigests = v22;\nWatchlistConfig$CrcShaDigests v28 = new WatchlistConfig$CrcShaDigests(v29,v31);\nHarmfulCrcs v29 = new HarmfulCrcs(v11);\nHarmfulDigests v31 = new HarmfulDigests(v13);\nthis.mIpDigests = v28;\nv5.close();\nreturn;']

The method reloadWatchlist has the following similar APIs:

- API Name: getWatchlistConfigHash()[B in the following Class: Lcom.android.server.net.watchlist.NetworkWatchlistService with the following sink code entries:
  - Similarity: 0.770210862159729, Code:
FileInputStream v4 = new FileInputStream(this.mXmlFile);
byte[] v6 = DigestUtils.getSha256Hash(v4);
v4.close();
byte[] v3 = v6;
byte[] v1 = v3;
return v1;
  - Access Control Level: NONE

