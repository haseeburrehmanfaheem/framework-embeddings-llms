The method stopWatchlistLogging in the following class Lcom.android.server.net.watchlist.NetworkWatchlistService has the following code snippet:

This is path 1 for the API with depth 1:
public boolean stopWatchlistLogging(){
	if (this.mIsLoggingEnabled != 0) {
		this.mIsLoggingEnabled = 0;
		boolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);
		boolean v2 = 0;
		return v2;
	}
}


This is path 2 for the API with depth 0:
public boolean stopWatchlistLogging(){
	boolean v2 = p0.stopWatchlistLoggingImpl();
	return v2;
}


This is path 3 for the API with depth 1:
public boolean stopWatchlistLogging(){
	if (this.mIsLoggingEnabled != 0) {
		this.mIsLoggingEnabled = 0;
		boolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);
		boolean v2 = v3;
		return v2;
	}
}

and the following sink code:
['boolean v2 = p0.stopWatchlistLoggingImpl();\nreturn v2;', 'this.mIsLoggingEnabled = 0;\nboolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);\nboolean v2 = v3;\nreturn v2;']

The method stopWatchlistLogging has the following similar APIs:

- API Name: startWatchlistLogging()Z in the following Class: Lcom.android.server.net.watchlist.NetworkWatchlistService with the following sink code entries:
  - Similarity: 0.9787127375602722, Code:
boolean v2 = p0.startWatchlistLoggingImpl();
return v2;
  - Similarity: 0.932660698890686, Code:
boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);
if (v3 == 0) {
this.mIsLoggingEnabled = 1;
boolean v2 = 1;
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: removeNetdEventCallback(I)Z in the following Class: Lcom.android.server.connectivity.IpConnectivityMetrics$Impl with the following sink code entries:
  - Similarity: 0.8400726318359375, Code:
boolean v2 = IpConnectivityMetrics.mNetdListener.removeNetdEventCallback(p1);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z in the following Class: Lcom.android.server.connectivity.IpConnectivityMetrics$Impl with the following sink code entries:
  - Similarity: 0.8372616767883301, Code:
boolean v2 = IpConnectivityMetrics.mNetdListener.addNetdEventCallback(p1, p2);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: logDefaultNetworkValidity(Z)V in the following Class: Lcom.android.server.connectivity.IpConnectivityMetrics$Impl with the following sink code entries:
  - Similarity: 0.7265979051589966, Code:
IpConnectivityMetrics.mDefaultNetworkMetrics.logDefaultNetworkValidity(v3, p1);
  - Access Control Level: NORMAL

- API Name: onConnectEvent(IIILjava/lang/String;II)V in the following Class: Lcom.android.server.connectivity.NetdEventListenerService with the following sink code entries:
  - Similarity: 0.7141421437263489, Code:
long v6 = BitUtils.packBits(v5);
NetdEventListenerService.collectPendingMetricsSnapshot(v1, 1);
NetworkMetrics v8 = new NetworkMetrics(p1,v6,this.mConnectTb);
this.mNetworkMetrics.put(p1, v8);
  - Similarity: 0.713406503200531, Code:
Object v3 = this.mNetworkMetrics.get(p1);
NetworkCapabilities v4 = this.mCallback.getNetworkCapabilities(p1);
NetdEventListenerService$NetworkMetricsSnapshot v10 = NetdEventListenerService$NetworkMetricsSnapshot.collect(v9, this.mNetworkMetrics);
this.mNetworkMetrics.put(p1, v13);
  - Access Control Level: NONE

