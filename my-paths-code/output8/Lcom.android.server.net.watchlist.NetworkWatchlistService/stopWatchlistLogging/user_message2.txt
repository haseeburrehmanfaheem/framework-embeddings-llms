The method stopWatchlistLogging has the following code snippet:

This is path 1 for the API with depth 1:
public boolean stopWatchlistLogging(){
	if (this.mIsLoggingEnabled != 0) {
		this.mIsLoggingEnabled = 0;
		boolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);
		boolean v2 = 0;
		return v2;
	}
}


This is path 2 for the API with depth 0:
public boolean stopWatchlistLogging(){
	boolean v2 = p0.stopWatchlistLoggingImpl();
	return v2;
}


This is path 3 for the API with depth 1:
public boolean stopWatchlistLogging(){
	if (this.mIsLoggingEnabled != 0) {
		this.mIsLoggingEnabled = 0;
		boolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);
		boolean v2 = v3;
		return v2;
	}
}

and the following sink code:
['boolean v2 = p0.stopWatchlistLoggingImpl();\nreturn v2;', 'this.mIsLoggingEnabled = 0;\nboolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);\nboolean v2 = v3;\nreturn v2;']

The method stopWatchlistLogging has the following similar APIs:

- API Name: startWatchlistLogging()Z with Similarity Score: 0.978712797164917
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = p0.startWatchlistLoggingImpl();
return v2;

- API Name: startWatchlistLogging()Z with Similarity Score: 0.9326608777046204
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);
if (v3 == 0) {
this.mIsLoggingEnabled = 1;
boolean v2 = 1;
return v2;

