The method updateScores in the following class Lcom.android.server.NetworkScoreService has the following code snippet:

This is path 1 for the API with depth 1:
public boolean updateScores(ScoredNetwork p1){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	boolean v2 = 1;
	if (v2 == 0) {
		long v4 = Binder.clearCallingIdentity();
		ArrayMap v5 = new ArrayMap();
		if (0 >= p1.length) {
			Integer v7 = Integer.valueOf(NetworkKey.type);
			Object v8 = v5.get(v7);
			if (v8 != 0) {
				ArrayList v9 = new ArrayList();
				Integer v11 = Integer.valueOf(NetworkKey.type);
				Object v12 = v5.put(v11, v9);
				boolean v13 = v8.add(p1[0]);
				if ((0 + 1) >= p1.length) {
					Set v14 = v5.entrySet();
					Iterator v15 = v14.iterator();
					boolean v16 = v15.hasNext();
					if (v16 == 0) {
						Object v17 = v15.next();
						Object v18 = v17.getKey();
						Object v19 = this.mScoreCaches.get(v18);
						if (v19 == 0) {
							if (1 == 0) {
								if (v20 == 0) {
									boolean v21 = v15.hasNext();
									if (v21 == 0) {
										Binder.restoreCallingIdentity(v4);
										return 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public boolean updateScores(ScoredNetwork p1){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	boolean v2 = p0.isCallerActiveScorer(v1);
	if (v2 == 0) {
		long v3 = Binder.clearCallingIdentity();
		ArrayMap v4 = new ArrayMap();
		if (0 >= p1.length) {
			Integer v6 = Integer.valueOf(NetworkKey.type);
			Object v7 = v4.get(v6);
			if (v7 != 0) {
				ArrayList v8 = new ArrayList();
				Integer v10 = Integer.valueOf(NetworkKey.type);
				Object v11 = v4.put(v10, v8);
				boolean v12 = v7.add(p1[0]);
				if ((0 + 1) >= p1.length) {
					Set v13 = v4.entrySet();
					Iterator v14 = v13.iterator();
					boolean v15 = v14.hasNext();
					if (v15 == 0) {
						Object v16 = v14.next();
						Object v17 = v16.getKey();
						Object v18 = this.mScoreCaches.get(v17);
						if (v18 == 0) {
							if (1 == 0) {
								if (v19 == 0) {
									boolean v20 = v14.hasNext();
									if (v20 == 0) {
										Binder.restoreCallingIdentity(v3);
										return 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean updateScores(ScoredNetwork p1){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	boolean v2 = p0.isCallerActiveScorer(v1);
	if (v2 == 0) {
		long v3 = Binder.clearCallingIdentity();
		ArrayMap v4 = new ArrayMap();
		if (0 >= p1.length) {
			Integer v6 = Integer.valueOf(NetworkKey.type);
			Object v7 = v4.get(v6);
			if (v7 != 0) {
				boolean v8 = v7.add(p1[0]);
				if ((0 + 1) >= p1.length) {
					Set v9 = v4.entrySet();
					Iterator v10 = v9.iterator();
					boolean v11 = v10.hasNext();
					if (v11 == 0) {
						Object v12 = v10.next();
						Object v13 = v12.getKey();
						Object v14 = this.mScoreCaches.get(v13);
						if (v14 == 0) {
							int v15 = v14.getRegisteredCallbackCount();
							if (v15 != 0) {
								if (1 == 0) {
									if (v16 == 0) {
										boolean v17 = v10.hasNext();
										if (v17 == 0) {
											Binder.restoreCallingIdentity(v3);
											return 1;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v1 = INetworkScoreService$Stub.getCallingUid();\nArrayMap v4 = new ArrayMap();\nInteger v6 = Integer.valueOf(NetworkKey.type);\nObject v7 = v4.get(v6);', 'boolean v2 = p0.isCallerActiveScorer(v1);\nlong v3 = Binder.clearCallingIdentity();']

The method updateScores has the following similar APIs:

- API Name: disableScoring()V in the following Class: Lcom.android.server.NetworkScoreService with the following sink code entries:
  - Similarity: 0.8038649559020996, Code:
int v1 = INetworkScoreService$Stub.getCallingUid();
if (v3 == 0) {
if (this.mServiceConnection == 0) {
NetworkScorerAppData v5 = this.mServiceConnection.getAppData();
if (NetworkScorerAppData.packageUid != v1) {
  - Similarity: 0.7874389886856079, Code:
int v1 = INetworkScoreService$Stub.getCallingUid();
boolean v4 = NetworkScoreService.isCallerActiveScorer(v1);
  - Access Control Level: SYS_OR_SIG

- API Name: addCallback(Landroid/media/projection/IMediaProjectionWatcherCallback;)V in the following Class: Lcom.android.server.media.projection.MediaProjectionManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7815650105476379, Code:
long v3 = Binder.clearCallingIdentity();
this.this$0.addCallback(p1);
Binder.restoreCallingIdentity(v3);
  - Access Control Level: SYS_OR_SIG

- API Name: isHardwareDetected(ILjava/lang/String;)Z in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.7786812782287598, Code:
long v3 = Binder.clearCallingIdentity();
ServiceProvider v5 = this.this$0.getProviderForSensor(p1);
boolean v6 = v4.isHardwareDetected(p1);
Binder.restoreCallingIdentity(v3);
  - Access Control Level: NORMAL

- API Name: clearPassword(Landroid/accounts/Account;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7673616409301758, Code:
int var1 = Binder.getCallingUid();
long v17 = IAccountManager$Stub.clearCallingIdentity();
AccountManagerService$UserAccounts v18 = p0.getUserAccounts(v15);
  - Access Control Level: SYS_OR_SIG

- API Name: registerClientAsUser(Landroid/media/IMediaRouterClient;Ljava/lang/String;I)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7575050592422485, Code:
long v6 = Binder.clearCallingIdentity();
p0.registerClientLocked(p1, v1, v3, p2, v4, 1);
Binder.restoreCallingIdentity(v6);
  - Access Control Level: SYS_OR_SIG

