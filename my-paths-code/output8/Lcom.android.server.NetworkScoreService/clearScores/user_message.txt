This is path 1 for the API with depth 2:
public boolean clearScores(){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	if (v3 == 0) {
		if (this.mServiceConnection == 0) {
			NetworkScorerAppData v5 = this.mServiceConnection.getAppData();
			if (NetworkScorerAppData.packageUid != v1) {
				boolean v4 = 1;
				if (v4 == 0) {
					long v6 = Binder.clearCallingIdentity();
					NetworkScoreService$4 v8 = new NetworkScoreService$4(NetworkScoreService);
					ArrayList v11 = new ArrayList(v12);
					Collection v12 = this.mScoreCaches.values();
					Collection v10 = v11;
					Iterator v15 = v10.iterator();
					boolean v16 = v15.hasNext();
					if (v16 == 0) {
						Object v17 = v15.next();
						int v18 = v17.beginBroadcast();
						if (0 >= v18) {
							IInterface v19 = v17.getBroadcastItem(0);
							Object v20 = v17.getBroadcastCookie(0);
							v8.accept(v19, v20);
							if ((0 + 1) >= v18) {
								v17.finishBroadcast();
								boolean v23 = v15.hasNext();
								if (v23 == 0) {
									Binder.restoreCallingIdentity(v6);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean clearScores(){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	if (v3 == 0) {
		boolean v4 = NetworkScoreService.isCallerActiveScorer(v1);
		if (v4 == 0) {
			long v5 = Binder.clearCallingIdentity();
			NetworkScoreService$4 v7 = new NetworkScoreService$4(NetworkScoreService);
			Collection v9 = NetworkScoreService.getScoreCacheLists();
			NetworkScoreService.sendCacheUpdateCallback(v7, v9);
			Binder.restoreCallingIdentity(v5);
			return 1;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean clearScores(){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	p0.enforceSystemOrIsActiveScorer(v1);
	long v3 = Binder.clearCallingIdentity();
	p0.clearInternal();
	Binder.restoreCallingIdentity(v3);
	return 1;
}
