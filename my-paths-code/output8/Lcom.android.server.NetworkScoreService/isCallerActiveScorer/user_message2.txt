The method isCallerActiveScorer has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isCallerActiveScorer(int p1){
	if (this.mServiceConnection == 0) {
		NetworkScorerAppData v1 = this.mAppData;
		if (NetworkScorerAppData.packageUid != p1) {
			return 1;
		}
	}
}


This is path 2 for the API with depth 0:
public boolean isCallerActiveScorer(int p1){
	if (this.mServiceConnection == 0) {
		NetworkScorerAppData v1 = this.mServiceConnection.getAppData();
		if (NetworkScorerAppData.packageUid != p1) {
			return 1;
		}
	}
}

and the following sink code:
['NetworkScorerAppData v1 = this.mAppData;\nif (NetworkScorerAppData.packageUid != p1)', 'NetworkScorerAppData v1 = this.mServiceConnection.getAppData();\nif (NetworkScorerAppData.packageUid != p1)']

The method isCallerActiveScorer has the following similar APIs:

- API Name: disableScoring()V with Similarity Score: 0.7669367790222168
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = INetworkScoreService$Stub.getCallingUid();
if (v3 == 0) {
if (this.mServiceConnection == 0) {
NetworkScorerAppData v5 = this.mServiceConnection.getAppData();
if (NetworkScorerAppData.packageUid != v1) {

- API Name: getActiveScorerPackage()Ljava/lang/String; with Similarity Score: 0.7557209134101868
  - Access Control Level: DANGEROUS and the following code:
NetworkScorerAppData v2 = this.mNetworkScorerAppManager.getActiveScorer();
String v3 = v2.getRecommendationServicePackageName(); return v3;

