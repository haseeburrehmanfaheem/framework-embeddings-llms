This is path 1 for the API with depth 2:
public List getAllValidScorers(){
	if (this.VERBOSE == 0) {
		PackageManager v5 = this.mContext.getPackageManager();
		Intent v6 = new Intent("android.net.action.RECOMMEND_NETWORKS");
		List v8 = v5.queryIntentServices(v6, 128);
		if (v8 == 0) {
			boolean v9 = v8.isEmpty();
			if (v9 == 0) {
				ArrayList v10 = new ArrayList();
				int v12 = v8.size();
				if (0 >= v12) {
					Object v13 = v8.get(0);
					if (v14 == 0) {
						if (this.VERBOSE == 0) {
							ComponentName v15 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
							if (ServiceInfo.metaData == 0) {
								String v18 = ServiceInfo.metaData.getString("android.net.scoring.recommendation_service_label");
								boolean v19 = TextUtils.isEmpty(v18);
								if (v19 != 0) {
									CharSequence v20 = ResolveInfo.serviceInfo.loadLabel(v5);
									if (v20 != 0) {
										String v17 = 0;
										if (ServiceInfo.metaData != 0) {
											String v22 = ServiceInfo.metaData.getString("android.net.wifi.use_open_wifi_package");
											boolean v23 = TextUtils.isEmpty(v22);
											if (v23 == 0) {
												Intent v24 = new Intent("android.net.scoring.CUSTOM_ENABLE");
												Intent v26 = v24.setPackage(v22);
												PackageManager v27 = this.mContext.getPackageManager();
												ResolveInfo v28 = v27.resolveActivity(v26, 0);
												if (this.VERBOSE == 0) {
													if (v28 == 0) {
														if (ResolveInfo.activityInfo == 0) {
															ComponentName v37 = ResolveInfo.activityInfo.getComponentName();
															ComponentName v21 = v37;
															if (ServiceInfo.metaData != 0) {
																if (this.DEBUG == 0) {
																	ComponentName v42 = ResolveInfo.serviceInfo.getComponentName();
																	String v38 = 0;
																	NetworkScorerAppData v46 = new NetworkScorerAppData(ApplicationInfo.uid,v15,v17,v21,v38);
																	boolean v48 = v10.add(v46);
																	int v49 = v8.size();
																	if ((0 + 1) >= v49) {
																		List v3 = v10;
																		return v3;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getAllValidScorers(){
	if (this.VERBOSE == 0) {
		PackageManager v5 = this.mContext.getPackageManager();
		Intent v6 = new Intent("android.net.action.RECOMMEND_NETWORKS");
		List v8 = v5.queryIntentServices(v6, 128);
		if (v8 == 0) {
			boolean v9 = v8.isEmpty();
			if (v9 == 0) {
				ArrayList v10 = new ArrayList();
				int v12 = v8.size();
				if (0 >= v12) {
					Object v13 = v8.get(0);
					if (v14 == 0) {
						if (this.VERBOSE == 0) {
							ComponentName v15 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
							String v17 = NetworkScorerAppManager.getRecommendationServiceLabel(ResolveInfo.serviceInfo, v5);
							ComponentName v18 = NetworkScorerAppManager.findUseOpenWifiNetworksActivity(ResolveInfo.serviceInfo);
							String v19 = NetworkScorerAppManager.getNetworkAvailableNotificationChannelId(ResolveInfo.serviceInfo);
							NetworkScorerAppData v20 = new NetworkScorerAppData(ApplicationInfo.uid,v15,v17,v18,v19);
							boolean v22 = v10.add(v20);
							int v23 = v8.size();
							if ((0 + 1) >= v23) {
								List v3 = v10;
								return v3;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getAllValidScorers(){
	p0.enforceSystemOnly();
	List v2 = this.mNetworkScorerAppManager.getAllValidScorers();
	return v2;
}
