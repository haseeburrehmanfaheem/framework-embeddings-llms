The method getAllValidScorers in the following class Lcom.android.server.NetworkScoreService has the following code snippet:

This is path 1 for the API with depth 2:
public List getAllValidScorers(){
	if (this.VERBOSE == 0) {
		PackageManager v5 = this.mContext.getPackageManager();
		Intent v6 = new Intent("android.net.action.RECOMMEND_NETWORKS");
		List v8 = v5.queryIntentServices(v6, 128);
		if (v8 == 0) {
			boolean v9 = v8.isEmpty();
			if (v9 == 0) {
				ArrayList v10 = new ArrayList();
				int v12 = v8.size();
				if (0 >= v12) {
					Object v13 = v8.get(0);
					if (v14 == 0) {
						if (this.VERBOSE == 0) {
							ComponentName v15 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
							if (ServiceInfo.metaData == 0) {
								String v18 = ServiceInfo.metaData.getString("android.net.scoring.recommendation_service_label");
								boolean v19 = TextUtils.isEmpty(v18);
								if (v19 != 0) {
									CharSequence v20 = ResolveInfo.serviceInfo.loadLabel(v5);
									if (v20 != 0) {
										String v17 = 0;
										if (ServiceInfo.metaData != 0) {
											String v22 = ServiceInfo.metaData.getString("android.net.wifi.use_open_wifi_package");
											boolean v23 = TextUtils.isEmpty(v22);
											if (v23 == 0) {
												Intent v24 = new Intent("android.net.scoring.CUSTOM_ENABLE");
												Intent v26 = v24.setPackage(v22);
												PackageManager v27 = this.mContext.getPackageManager();
												ResolveInfo v28 = v27.resolveActivity(v26, 0);
												if (this.VERBOSE == 0) {
													if (v28 == 0) {
														if (ResolveInfo.activityInfo == 0) {
															ComponentName v37 = ResolveInfo.activityInfo.getComponentName();
															ComponentName v21 = v37;
															if (ServiceInfo.metaData != 0) {
																if (this.DEBUG == 0) {
																	ComponentName v42 = ResolveInfo.serviceInfo.getComponentName();
																	String v38 = 0;
																	NetworkScorerAppData v46 = new NetworkScorerAppData(ApplicationInfo.uid,v15,v17,v21,v38);
																	boolean v48 = v10.add(v46);
																	int v49 = v8.size();
																	if ((0 + 1) >= v49) {
																		List v3 = v10;
																		return v3;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getAllValidScorers(){
	if (this.VERBOSE == 0) {
		PackageManager v5 = this.mContext.getPackageManager();
		Intent v6 = new Intent("android.net.action.RECOMMEND_NETWORKS");
		List v8 = v5.queryIntentServices(v6, 128);
		if (v8 == 0) {
			boolean v9 = v8.isEmpty();
			if (v9 == 0) {
				ArrayList v10 = new ArrayList();
				int v12 = v8.size();
				if (0 >= v12) {
					Object v13 = v8.get(0);
					if (v14 == 0) {
						if (this.VERBOSE == 0) {
							ComponentName v15 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
							String v17 = NetworkScorerAppManager.getRecommendationServiceLabel(ResolveInfo.serviceInfo, v5);
							ComponentName v18 = NetworkScorerAppManager.findUseOpenWifiNetworksActivity(ResolveInfo.serviceInfo);
							String v19 = NetworkScorerAppManager.getNetworkAvailableNotificationChannelId(ResolveInfo.serviceInfo);
							NetworkScorerAppData v20 = new NetworkScorerAppData(ApplicationInfo.uid,v15,v17,v18,v19);
							boolean v22 = v10.add(v20);
							int v23 = v8.size();
							if ((0 + 1) >= v23) {
								List v3 = v10;
								return v3;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getAllValidScorers(){
	p0.enforceSystemOnly();
	List v2 = this.mNetworkScorerAppManager.getAllValidScorers();
	return v2;
}

and the following sink code:
['PackageManager v5 = this.mContext.getPackageManager();\nIntent v6 = new Intent("android.net.action.RECOMMEND_NETWORKS");\nList v8 = v5.queryIntentServices(v6, 128);\nNetworkScorerAppData v46 = new NetworkScorerAppData(ApplicationInfo.uid,v15,v17,v21,v38);', 'PackageManager v5 = this.mContext.getPackageManager();\nIntent v6 = new Intent("android.net.action.RECOMMEND_NETWORKS");\nList v8 = v5.queryIntentServices(v6, 128);\nNetworkScorerAppData v20 = new NetworkScorerAppData(ApplicationInfo.uid,v15,v17,v18,v19);', 'List v2 = this.mNetworkScorerAppManager.getAllValidScorers();\nreturn v2;']

The method getAllValidScorers has the following similar APIs:

- API Name: getActiveScorer()Landroid/net/NetworkScorerAppData; in the following Class: Lcom.android.server.NetworkScoreService with the following sink code entries:
  - Similarity: 0.7894327044487, Code:
p0.enforceSystemOnly();
NetworkScorerAppData v2 = this.mNetworkScorerAppManager.getActiveScorer();
return v2;
  - Similarity: 0.7466470003128052, Code:
int v4 = NetworkScorerAppManager.getNetworkRecommendationsEnabledSetting();
String v5 = NetworkScorerAppManager.getNetworkRecommendationsPackage();
NetworkScorerAppData v6 = NetworkScorerAppManager.getScorer(v5);
return v3;
  - Similarity: 0.726302981376648, Code:
int v5 = this.mSettingsFacade.getInt(this.mContext, "network_recommendations_enabled", 0);
String v7 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");
List v10 = NetworkScorerAppManager.getAllValidScorers();
Object v12 = v10.get(0);
NetworkScorerAppData v8 = v16;
return v3;
  - Access Control Level: DANGEROUS

- API Name: setActiveScorer(Ljava/lang/String;)Z in the following Class: Lcom.android.server.NetworkScoreService with the following sink code entries:
  - Similarity: 0.7731170654296875, Code:
boolean v2 = this.mNetworkScorerAppManager.setActiveScorer(p1);
  - Similarity: 0.7422012686729431, Code:
NetworkScorerAppManager.setNetworkRecommendationsPackage(p1);
NetworkScorerAppManager.setNetworkRecommendationsEnabledSetting(1);
  - Access Control Level: DANGEROUS

- API Name: getActiveScorerPackage()Ljava/lang/String; in the following Class: Lcom.android.server.NetworkScoreService with the following sink code entries:
  - Similarity: 0.7355279922485352, Code:
String v6 = NetworkScorerAppManager.getNetworkRecommendationsPackage();
NetworkScorerAppData v7 = NetworkScorerAppManager.getScorer(v6);
String v9 = this.mRecommendationService.getPackageName(); return v8;
  - Similarity: 0.7192773222923279, Code:
String v8 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");
List v11 = NetworkScorerAppManager.getAllValidScorers();
String v20 = v4.getRecommendationServicePackageName(); return v20;
  - Similarity: 0.7139638066291809, Code:
NetworkScorerAppData v2 = this.mNetworkScorerAppManager.getActiveScorer();
String v3 = v2.getRecommendationServicePackageName(); return v3;
  - Access Control Level: DANGEROUS

- API Name: notifyResourceGranted(II)V in the following Class: Lcom.android.server.media.MediaResourceMonitorService$MediaResourceMonitorImpl with the following sink code entries:
  - Similarity: 0.7295899391174316, Code:
Intent v20 = new Intent("android.intent.action.MEDIA_RESOURCE_GRANTED");
Intent v22 = v20.putExtra("android.intent.extra.PACKAGES", v12);
Intent v23 = v20.putExtra("android.intent.extra.MEDIA_RESOURCE_TYPE", p2);
v27.sendBroadcastAsUser(v20, v26, "android.permission.RECEIVE_MEDIA_RESOURCE_USAGE");
  - Access Control Level: NONE

- API Name: isCallerActiveScorer(I)Z in the following Class: Lcom.android.server.NetworkScoreService with the following sink code entries:
  - Similarity: 0.7055472731590271, Code:
NetworkScorerAppData v1 = this.mServiceConnection.getAppData();
if (NetworkScorerAppData.packageUid != p1)
  - Access Control Level: NONE

