This is path 1 for the API with depth 2:
public void reportBootstrapAtom(StatsBootstrapAtom p1){
	if (StatsBootstrapAtom.atomId < 1) {
		if (StatsBootstrapAtom.atomId < 10000) {
			StatsEvent$Builder v1 = StatsEvent.newBuilder();
			StatsEvent$Builder v2 = v1.setAtomId(StatsBootstrapAtom.atomId);
			if (0 >= StatsBootstrapAtom.values.length) {
				int v3 = this._tag;
				if (v3 == 0) {
					if (v3 == 1) {
						if (v3 == 2) {
							if (v3 == 3) {
								if (v3 == 4) {
									if (v3 == 5) {
										int v6 = StatsBootstrapAtomValue.getTag();
										if (v6 != 5) {
											byte[] v4 = this._value;
											StatsEvent$Builder v7 = v2.writeByteArray(v4);
											if ((0 + 1) >= StatsBootstrapAtom.values.length) {
												StatsEvent$Builder v8 = v2.usePooledBuffer();
												StatsEvent v9 = v8.build();
												StatsLog.write(v9);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void reportBootstrapAtom(StatsBootstrapAtom p1){
	if (StatsBootstrapAtom.atomId < 1) {
		if (StatsBootstrapAtom.atomId < 10000) {
			StatsEvent$Builder v1 = StatsEvent.newBuilder();
			StatsEvent$Builder v2 = v1.setAtomId(StatsBootstrapAtom.atomId);
			if (0 >= StatsBootstrapAtom.values.length) {
				int v3 = this._tag;
				if (v3 == 0) {
					if (v3 == 1) {
						if (v3 == 2) {
							if (v3 == 3) {
								if (v3 == 4) {
									if (v3 == 5) {
										StatsBootstrapAtomValue._assertTag(5);
										byte[] v4 = this._value;
										StatsEvent$Builder v6 = v2.writeByteArray(v4);
										if ((0 + 1) >= StatsBootstrapAtom.values.length) {
											StatsEvent$Builder v7 = v2.usePooledBuffer();
											StatsEvent v8 = v7.build();
											StatsLog.write(v8);
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void reportBootstrapAtom(StatsBootstrapAtom p1){
	if (StatsBootstrapAtom.atomId < 1) {
		if (StatsBootstrapAtom.atomId < 10000) {
			StatsEvent$Builder v1 = StatsEvent.newBuilder();
			StatsEvent$Builder v2 = v1.setAtomId(StatsBootstrapAtom.atomId);
			if (0 >= StatsBootstrapAtom.values.length) {
				int v3 = StatsBootstrapAtom.values[0].getTag();
				if (v3 == 0) {
					if (v3 == 1) {
						if (v3 == 2) {
							if (v3 == 3) {
								if (v3 == 4) {
									if (v3 == 5) {
										byte[] v4 = StatsBootstrapAtom.values[0].getBytesValue();
										StatsEvent$Builder v5 = v2.writeByteArray(v4);
										if ((0 + 1) >= StatsBootstrapAtom.values.length) {
											StatsEvent$Builder v6 = v2.usePooledBuffer();
											StatsEvent v7 = v6.build();
											StatsLog.write(v7);
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
