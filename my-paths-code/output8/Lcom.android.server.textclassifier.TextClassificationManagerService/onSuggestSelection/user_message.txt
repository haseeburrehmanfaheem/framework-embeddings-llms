This is path 1 for the API with depth 2:
public void onSuggestSelection(TextClassificationSessionId p1, TextSelection$Request p2, ITextClassifierCallback p3){
	Object v1 = Objects.requireNonNull(p2);
	SystemTextClassifierMetadata v2 = this.mSystemTcMetadata;
	Object v3 = Objects.requireNonNull(v2);
	SystemTextClassifierMetadata v4 = this.mSystemTcMetadata;
	TextClassificationManagerService$$ExternalSyntheticLambda6 v5 = new TextClassificationManagerService$$ExternalSyntheticLambda6(p1,p2,p3);
	Object v8 = Objects.requireNonNull(v5);
	Object v9 = Objects.requireNonNull("onSuggestSelection");
	Object v10 = Objects.requireNonNull(p3);
	if (v4 != 0) {
		int v11 = UserHandle.getCallingUserId();
		if (v4 != 0) {
			if (v4 != 0) {
				if (1 == 0) {
					StringBuilder v17 = new StringBuilder();
					StringBuilder v19 = v17.append("Invalid package name. callingPackage=");
					StringBuilder v20 = v17.append(0);
					StringBuilder v21 = v17.append(", callingUid=");
					StringBuilder v22 = v17.append(v16);
					String v23 = v17.toString();
					Preconditions.checkArgument(0, v23);
					Object v37 = this.mUserStates.get(v11);
					if (v37 != 0) {
						TextClassificationManagerService$UserState v38 = new TextClassificationManagerService$UserState(TextClassificationManagerService,v11,0);
						this.mUserStates.put(v11, v38);
						TextClassificationManagerService$UserState v36 = v37;
						if (1 == 0) {
							TextClassificationConstants v42 = TextClassificationManagerService.-$$Nest$fgetmSettings(this.this$0);
							Object v43 = Objects.requireNonNull(v42);
							TextClassificationManagerService$UserState$$ExternalSyntheticLambda0 v44 = new TextClassificationManagerService$UserState$$ExternalSyntheticLambda0(v42);
							Object v46 = Binder.withCleanCallingIdentity(v44);
							boolean v47 = TextUtils.isEmpty(v46);
							if (v47 != 0) {
								String v48 = TextClassificationManagerService.-$$Nest$fgetmDefaultTextClassifierPackage(this.this$0);
								boolean v49 = v46.equals(v48);
								if (v49 == 0) {
									String v50 = TextClassificationManagerService.-$$Nest$fgetmSystemTextClassifierPackage(this.this$0);
									boolean v51 = v46.equals(v50);
									if (v51 == 0) {
										if (this.mSystemServiceState == 0) {
											if (this.mUntrustedServiceState != 0) {
												TextClassificationManagerService$ServiceState v52 = new TextClassificationManagerService$ServiceState(this.this$0,this.mUserId,v46,0,0);
												this.mUntrustedServiceState = v52;
												TextClassificationManagerService$ServiceState v41 = this.mUntrustedServiceState;
												if (v41 != 0) {
													boolean v54 = this.mInstalled;
													if (v54 == 0) {
														boolean v55 = this.mEnabled;
														if (v55 != 0) {
															if (1 == 0) {
																boolean v57 = v41.bindLocked();
																boolean v56 = v57;
																if (v56 != 0) {
																	if (this.mService == 0) {
																		boolean v58 = 1;
																		if (v58 == 0) {
																			TextClassificationManagerService$PendingRequest v59 = new TextClassificationManagerService$PendingRequest("onSuggestSelection",v60,v62,v64,TextClassificationManagerService,v41,v65);
																			TextClassificationManagerService$$ExternalSyntheticLambda10 v60 = new TextClassificationManagerService$$ExternalSyntheticLambda10(v5,v41);
																			TextClassificationManagerService$$ExternalSyntheticLambda11 v62 = new TextClassificationManagerService$$ExternalSyntheticLambda11(p3);
																			IBinder v64 = p3.asBinder();
																			int v65 = Binder.getCallingUid();
																			Object v68 = Objects.requireNonNull(v59);
																			int v69 = FixedSizeQueue.size();
																			if (v69 != this.mMaxSize) {
																				Object v70 = this.mDelegate.remove();
																				if (this.mOnEntryEvictedListener == 0) {
																					this.mOnEntryEvictedListener.onEntryEvicted(v70);
																					boolean v72 = this.mDelegate.add(v59);
																					boolean v67 = 1;
																					return;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void onSuggestSelection(TextClassificationSessionId p1, TextSelection$Request p2, ITextClassifierCallback p3){
	Object v1 = Objects.requireNonNull(p2);
	SystemTextClassifierMetadata v2 = this.mSystemTcMetadata;
	Object v3 = Objects.requireNonNull(v2);
	SystemTextClassifierMetadata v4 = this.mSystemTcMetadata;
	TextClassificationManagerService$$ExternalSyntheticLambda6 v5 = new TextClassificationManagerService$$ExternalSyntheticLambda6(p1,p2,p3);
	Object v8 = Objects.requireNonNull(v5);
	Object v9 = Objects.requireNonNull("onSuggestSelection");
	Object v10 = Objects.requireNonNull(p3);
	if (v4 != 0) {
		int v11 = UserHandle.getCallingUserId();
		if (v4 != 0) {
			if (v4 != 0) {
				if (1 == 0) {
					TextClassificationManagerService.validateCallingPackage(0);
					TextClassificationManagerService.validateUser(v11);
					TextClassificationManagerService$UserState v14 = TextClassificationManagerService.getUserStateLocked(v11);
					TextClassificationManagerService$ServiceState v15 = v14.getServiceStateLocked(1);
					if (v15 != 0) {
						boolean v16 = v15.isInstalledLocked();
						if (v16 == 0) {
							boolean v17 = v15.isEnabledLocked();
							if (v17 != 0) {
								if (1 == 0) {
									boolean v18 = TextClassificationManagerService$ServiceState.-$$Nest$mbindLocked(v15);
									if (v18 != 0) {
										boolean v19 = v15.isBoundLocked();
										if (v19 == 0) {
											TextClassificationManagerService$PendingRequest v20 = new TextClassificationManagerService$PendingRequest("onSuggestSelection",v21,v23,v25,TextClassificationManagerService,v15,v26);
											TextClassificationManagerService$$ExternalSyntheticLambda10 v21 = new TextClassificationManagerService$$ExternalSyntheticLambda10(v5,v15);
											TextClassificationManagerService$$ExternalSyntheticLambda11 v23 = new TextClassificationManagerService$$ExternalSyntheticLambda11(p3);
											IBinder v25 = p3.asBinder();
											int v26 = Binder.getCallingUid();
											boolean v28 = TextClassificationManagerService$ServiceState.mPendingRequests.add(v20);
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void onSuggestSelection(TextClassificationSessionId p1, TextSelection$Request p2, ITextClassifierCallback p3){
	Object v1 = Objects.requireNonNull(p2);
	SystemTextClassifierMetadata v2 = p2.getSystemTextClassifierMetadata();
	Object v3 = Objects.requireNonNull(v2);
	SystemTextClassifierMetadata v4 = p2.getSystemTextClassifierMetadata();
	TextClassificationManagerService$$ExternalSyntheticLambda6 v5 = new TextClassificationManagerService$$ExternalSyntheticLambda6(p1,p2,p3);
	p0.handleRequest(v4, 1, 1, v5, "onSuggestSelection", p3);
	return;
}
