The method shouldHandleTvPowerKey in the following class Lcom.android.server.hdmi.HdmiControlService$BinderService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean shouldHandleTvPowerKey(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	Integer v7 = Integer.valueOf(0);
	boolean v8 = this.mLocalDevices.contains(v7);
	boolean v6 = v8;
	if (v6 == 0) {
		HdmiCecConfig v9 = this.mHdmiCecConfig;
		HdmiCecConfig$Setting v11 = HdmiCecConfig.getSetting("power_control_mode");
		if (v11 == 0) {
			String v12 = v11.getValueType();
			boolean v13 = v12.equals("string");
			if (v13 == 0) {
				StringBuilder v14 = new StringBuilder();
				StringBuilder v16 = v14.append("Getting CEC setting value '");
				StringBuilder v17 = v14.append("power_control_mode");
				StringBuilder v18 = v14.append("'.");
				String v19 = v14.toString();
				Object v20 = new Object(0);
				HdmiLogger.debug(v19, v20);
				HdmiCecConfig$Value v22 = v11.getDefaultValue();
				String v23 = v22.getStringValue();
				String v24 = HdmiCecConfig.retrieveValue(v11, v23);
				String v10 = v24;
				boolean v25 = v10.equals("none");
				if (v25 == 0) {
					HdmiCecConfig v26 = this.mHdmiCecConfig;
					HdmiCecConfig$Setting v28 = HdmiCecConfig.getSetting("hdmi_cec_enabled");
					if (v28 == 0) {
						String v29 = v28.getValueType();
						boolean v30 = v29.equals("int");
						if (v30 == 0) {
							StringBuilder v31 = new StringBuilder();
							StringBuilder v33 = v31.append("Getting CEC setting value '");
							StringBuilder v34 = v31.append("hdmi_cec_enabled");
							StringBuilder v35 = v31.append("'.");
							String v36 = v31.toString();
							Object v37 = new Object(0);
							HdmiLogger.debug(v36, v37);
							HdmiCecConfig$Value v39 = v28.getDefaultValue();
							Integer v40 = v39.getIntValue();
							int v41 = v40.intValue();
							String v42 = Integer.toString(v41);
							String v43 = HdmiCecConfig.retrieveValue(v28, v42);
							int v44 = Integer.parseInt(v43);
							int v27 = v44;
							if (v27 == 1) {
								boolean v5 = this.mIsCecAvailable;
								return v5;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean shouldHandleTvPowerKey(){
	this.this$0.initBinderCall();
	boolean v4 = HdmiControlService.isTvDevice();
	if (v4 == 0) {
		HdmiCecConfig v5 = HdmiControlService.getHdmiCecConfig();
		String v6 = v5.getStringValue("power_control_mode");
		boolean v7 = v6.equals("none");
		if (v7 == 0) {
			HdmiCecConfig v8 = HdmiControlService.getHdmiCecConfig();
			int v9 = v8.getIntValue("hdmi_cec_enabled");
			if (v9 == 1) {
				boolean v3 = this.mIsCecAvailable;
				return v3;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean shouldHandleTvPowerKey(){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	boolean v2 = this.this$0.shouldHandleTvPowerKey();
	return v2;
}

and the following sink code:
['HdmiCecConfig v5 = HdmiControlService.getHdmiCecConfig();\nString v6 = v5.getStringValue("power_control_mode");\nboolean v7 = v6.equals("none");', 'HdmiCecConfig v8 = HdmiControlService.getHdmiCecConfig();\nint v9 = v8.getIntValue("hdmi_cec_enabled");']

The method shouldHandleTvPowerKey has the following similar APIs:

- API Name: getCecSettingIntValue(Ljava/lang/String;)I in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.8697096109390259, Code:
HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
int v4 = v3.getIntValue(p1);
return v4;
  - Access Control Level: SYS_OR_SIG

- API Name: getAllowedCecSettingIntValues(Ljava/lang/String;)[I in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.8524920344352722, Code:
HdmiCecConfig v4 = this.mHdmiCecConfig;
HdmiCecConfig$Setting v6 = HdmiCecConfig.getSetting(p1);
List v5 = v9;
Stream v18 = v5.stream();
IntStream v21 = v18.mapToInt(v19);
[I v22 = v21.toArray();
return v22;
  - Similarity: 0.8312531113624573, Code:
HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
boolean v9 = this.mSettings.containsKey(p1);
List v7 = v15;
Stream v24 = v7.stream();
IntStream v27 = v24.mapToInt(v25);
[I v28 = v27.toArray();
return v28;
  - Access Control Level: SYS_OR_SIG

- API Name: getCecSettingStringValue(Ljava/lang/String;)Ljava/lang/String; in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.8423479199409485, Code:
HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
String v4 = v3.getStringValue(p1);
return v4;
  - Access Control Level: SYS_OR_SIG

- API Name: setCecSettingIntValue(Ljava/lang/String;I)V in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.8384809494018555, Code:
HdmiCecConfig v4 = this.mHdmiCecConfig;
HdmiCecConfig$Setting v6 = HdmiCecConfig.getSetting(p1);
List v10 = HdmiCecConfig.getAllowedIntValues(p1);
HdmiCecConfig.storeValue(v6, v23);
  - Access Control Level: SYS_OR_SIG

- API Name: getUserCecSettings()Ljava/util/List; in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.8375144004821777, Code:
HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
List v4 = v3.getUserSettings();
return v4;
  - Access Control Level: SYS_OR_SIG

