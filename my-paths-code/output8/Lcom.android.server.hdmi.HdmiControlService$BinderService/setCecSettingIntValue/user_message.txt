This is path 1 for the API with depth 2:
public void setCecSettingIntValue(String p1, int p2){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = v10;
		if (v8 == 0) {
			boolean v11 = this.mUserConfigurable;
			if (v11 == 0) {
				HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue();
				String v14 = v13.getStringValue();
				if (v14 == 0) {
					String v12 = "string";
					boolean v15 = v12.equals("int");
					if (v15 == 0) {
						HdmiCecConfig$Setting v17 = HdmiCecConfig.getSetting(p1);
						if (v17 == 0) {
							String v18 = v17.getValueType();
							boolean v19 = v18.equals("int");
							if (v19 == 0) {
								ArrayList v20 = new ArrayList();
								List v22 = v17.getAllowedValues();
								Iterator v23 = v22.iterator();
								boolean v24 = v23.hasNext();
								if (v24 == 0) {
									Object v25 = v23.next();
									Integer v26 = v25.getIntValue();
									boolean v27 = v20.add(v26);
									boolean v28 = v23.hasNext();
									if (v28 == 0) {
										List v16 = v20;
										Integer v29 = Integer.valueOf(p2);
										boolean v30 = v16.contains(v29);
										if (v30 == 0) {
											StringBuilder v31 = new StringBuilder();
											StringBuilder v33 = v31.append("Updating CEC setting '");
											StringBuilder v34 = v31.append(p1);
											StringBuilder v35 = v31.append("' to '");
											StringBuilder v36 = v31.append(p2);
											StringBuilder v37 = v31.append("'.");
											String v38 = v31.toString();
											Object v39 = new Object(0);
											HdmiLogger v41 = HdmiLogger.getLogger();
											String v42 = HdmiLogger.toLogString(v38, v39);
											v41.debugInternal(v42);
											String v44 = Integer.toString(p2);
											int v46 = HdmiCecConfig.getStorage(v8);
											String v47 = HdmiCecConfig.getStorageKey(v8);
											if (v46 != 0) {
												StringBuilder v48 = new StringBuilder();
												StringBuilder v50 = v48.append("Setting '");
												StringBuilder v51 = v48.append(v47);
												StringBuilder v52 = v48.append("' sysprop.");
												String v53 = v48.toString();
												Object v54 = new Object(0);
												HdmiLogger.debug(v53, v54);
												this.mStorageAdapter.storeSystemProperty(v47, v44);
												Binder.restoreCallingIdentity(v5);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setCecSettingIntValue(String p1, int p2){
	this.this$0.initBinderCall();
	long v3 = Binder.clearCallingIdentity();
	HdmiCecConfig v4 = this.mHdmiCecConfig;
	HdmiCecConfig$Setting v6 = HdmiCecConfig.getSetting(p1);
	if (v6 == 0) {
		boolean v7 = v6.getUserConfigurable();
		if (v7 == 0) {
			String v8 = v6.getValueType();
			boolean v9 = v8.equals("int");
			if (v9 == 0) {
				List v10 = HdmiCecConfig.getAllowedIntValues(p1);
				Integer v11 = Integer.valueOf(p2);
				boolean v12 = v10.contains(v11);
				if (v12 == 0) {
					StringBuilder v13 = new StringBuilder();
					StringBuilder v15 = v13.append("Updating CEC setting '");
					StringBuilder v16 = v13.append(p1);
					StringBuilder v17 = v13.append("' to '");
					StringBuilder v18 = v13.append(p2);
					StringBuilder v19 = v13.append("'.");
					String v20 = v13.toString();
					Object v21 = new Object(0);
					HdmiLogger.debug(v20, v21);
					String v23 = Integer.toString(p2);
					HdmiCecConfig.storeValue(v6, v23);
					Binder.restoreCallingIdentity(v3);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setCecSettingIntValue(String p1, int p2){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	v3.setIntValue(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return;
}
