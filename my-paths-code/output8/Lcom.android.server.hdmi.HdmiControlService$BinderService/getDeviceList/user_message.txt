This is path 1 for the API with depth 2:
public List getDeviceList(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	HdmiCecNetwork v5 = HdmiControlService.-$$Nest$fgetmHdmiCecNetwork(this.this$0);
	ArrayList v7 = new ArrayList();
	Iterator v9 = this.mSafeAllDeviceInfos.iterator();
	boolean v10 = v9.hasNext();
	if (v10 == 0) {
		Object v11 = v9.next();
		int v12 = this.mLogicalAddress;
		int v14 = this.mLocalDevices.size();
		if (0 >= v14) {
			int v15 = this.mLocalDevices.keyAt(0);
			Object v16 = this.mLocalDevices.get(v15);
			HdmiDeviceInfo v17 = v16.getDeviceInfo();
			int v18 = v17.getLogicalAddress();
			if (v18 != v12) {
				int v19 = this.mLocalDevices.size();
				if ((0 + 1) >= v19) {
					int v20 = this.mLocalDevices.keyAt((0 + 1));
					Object v21 = this.mLocalDevices.get(v20);
					HdmiDeviceInfo v22 = v21.getDeviceInfo();
					int v23 = v22.getLogicalAddress();
					if (v23 != v12) {
						boolean v13 = 1;
						if (v13 == 0) {
							boolean v24 = v7.add(v11);
							boolean v25 = v9.hasNext();
							if (v25 == 0) {
								List v6 = v7;
								return v6;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getDeviceList(){
	this.this$0.initBinderCall();
	HdmiCecNetwork v3 = this.mHdmiCecNetwork;
	ArrayList v5 = new ArrayList();
	Iterator v7 = this.mSafeAllDeviceInfos.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		int v10 = v9.getLogicalAddress();
		boolean v11 = HdmiCecNetwork.isLocalDeviceAddress(v10);
		if (v11 == 0) {
			boolean v12 = v5.add(v9);
			boolean v13 = v7.hasNext();
			if (v13 == 0) {
				List v4 = v5;
				return v4;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getDeviceList(){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	HdmiCecNetwork v2 = HdmiControlService.-$$Nest$fgetmHdmiCecNetwork(this.this$0);
	List v3 = v2.getSafeCecDevicesLocked();
	return v3;
}
