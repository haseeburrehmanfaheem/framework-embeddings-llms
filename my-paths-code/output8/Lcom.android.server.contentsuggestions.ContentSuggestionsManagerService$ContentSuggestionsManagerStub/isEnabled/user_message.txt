This is path 1 for the API with depth 2:
public void isEnabled(int p1, IResultReceiver p2){
	int v1 = UserHandle.getCallingUserId();
	if (v5 == 0) {
		boolean v6 = AbstractMasterSystemService.mServiceNameResolver.isTemporary(v1);
		if (v6 != 0) {
			int v7 = Binder.getCallingUid();
			boolean v8 = this.mActivityTaskManagerInternal.isCallerRecents(v7);
			if (v8 == 0) {
				Object v9 = ContentSuggestionsManagerService.access$1000(this.this$0);
				boolean v10 = ContentSuggestionsManagerService.access$1100(this.this$0, p1);
				p2.send((v10 ^ 1), 0);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void isEnabled(int p1, IResultReceiver p2){
	int v1 = UserHandle.getCallingUserId();
	this.this$0.enforceCaller(v1, "isEnabled");
	Object v4 = AbstractMasterSystemService.mLock;
	boolean v6 = this.this$0.isDisabledLocked(p1);
	boolean v5 = v6;
	p2.send((v5 ^ 1), 0);
	return;
}


This is path 3 for the API with depth 0:
public void isEnabled(int p1, IResultReceiver p2){
	int v1 = UserHandle.getCallingUserId();
	ContentSuggestionsManagerService.-$$Nest$menforceCaller(this.this$0, v1, "isEnabled");
	Object v3 = ContentSuggestionsManagerService.access$1000(this.this$0);
	boolean v4 = ContentSuggestionsManagerService.access$1100(this.this$0, p1);
	p2.send((v4 ^ 1), 0);
	return;
}
