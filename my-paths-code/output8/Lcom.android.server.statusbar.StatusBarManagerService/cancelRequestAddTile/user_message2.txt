The method cancelRequestAddTile has the following code snippet:

This is path 1 for the API with depth 2:
public void cancelRequestAddTile(String p1){
	Object v5 = this.mCurrentRequestAddTilePackages.remove(p1);
	if (v5 == 0) {
		boolean v4 = 1;
		if (this.mBar == 0) {
			this.mBar.cancelRequestAddTile(p1);
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void cancelRequestAddTile(String p1){
	boolean v4 = StatusBarManagerService.clearTileAddRequest(p1);
	if (this.mBar == 0) {
		this.mBar.cancelRequestAddTile(p1);
		return;
	}
}


This is path 3 for the API with depth 0:
public void cancelRequestAddTile(String p1){
	p0.enforceStatusBar();
	p0.cancelRequestAddTileInternal(p1);
	return;
}

and the following sink code:
['Object v5 = this.mCurrentRequestAddTilePackages.remove(p1);\nif (v5 == 0) {\nthis.mBar.cancelRequestAddTile(p1);', 'boolean v4 = StatusBarManagerService.clearTileAddRequest(p1);\nthis.mBar.cancelRequestAddTile(p1);', 'p0.cancelRequestAddTileInternal(p1);']

The method cancelRequestAddTile has the following similar APIs:

- API Name: remTile(Landroid/content/ComponentName;)V with Similarity Score: 0.7343524098396301
  - Access Control Level: SYS_OR_SIG and the following code:
this.mBar.remQsTile(p1);

- API Name: addTile(Landroid/content/ComponentName;)V with Similarity Score: 0.7281994819641113
  - Access Control Level: SYS_OR_SIG and the following code:
if (this.mBar == 0) {
this.mBar.addQsTile(p1);

