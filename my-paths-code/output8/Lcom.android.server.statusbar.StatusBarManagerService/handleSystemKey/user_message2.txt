The method handleSystemKey has the following code snippet:

This is path 1 for the API with depth 2:
public void handleSystemKey(int p1){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingUid();
	ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2);
	Object v6 = this.QUERY_CACHE.query(v5);
	boolean v7 = v6.booleanValue();
	boolean v4 = v7;
	if (v4 == 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			if (this.mBar == 0) {
				this.mBar.handleSystemKey(p1);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void handleSystemKey(int p1){
	if (v5 == 0) {
		StatusBarManagerService.enforceExpandStatusBar();
		boolean v7 = this.mActivityTaskManager.canCloseSystemDialogs(v3, v2);
		if (v7 != 0) {
			boolean v1 = 1;
			if (v1 != 0) {
				if (this.mBar == 0) {
					this.mBar.handleSystemKey(p1);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void handleSystemKey(int p1){
	boolean v1 = p0.checkCanCollapseStatusBar("handleSystemKey");
	if (v1 != 0) {
		if (this.mBar == 0) {
			this.mBar.handleSystemKey(p1);
			return;
		}
	}
}

and the following sink code:
['if (this.mBar == 0) {\nthis.mBar.handleSystemKey(p1);\nreturn;']

The method handleSystemKey has the following similar APIs:

- API Name: setUdfpsHbmListener(Landroid/hardware/fingerprint/IUdfpsHbmListener;)V with Similarity Score: 0.7317261099815369
  - Access Control Level: SYS_OR_SIG and the following code:
if (this.mBar == 0) {
this.mBar.setUdfpsHbmListener(p1);

- API Name: suppressAmbientDisplay(Z)V with Similarity Score: 0.7096606492996216
  - Access Control Level: SYS_OR_SIG and the following code:
this.mBar.suppressAmbientDisplay(p1);

