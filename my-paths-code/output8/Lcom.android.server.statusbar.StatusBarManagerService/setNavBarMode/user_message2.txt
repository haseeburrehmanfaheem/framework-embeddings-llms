The method setNavBarMode in the following class Lcom.android.server.statusbar.StatusBarManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void setNavBarMode(int p1){
	if (p1 == 0) {
		if (p1 != 1) {
			long v3 = Binder.clearCallingIdentity();
			ContentResolver v4 = this.mContext.getContentResolver();
			boolean v5 = Settings$Secure.putIntForUser(v4, "nav_bar_kids_mode", p1, this.mCurrentUserId);
			ContentResolver v6 = this.mContext.getContentResolver();
			boolean v7 = Settings$Secure.putIntForUser(v6, "nav_bar_force_visible", p1, this.mCurrentUserId);
			if (this.mOverlayManager != 0) {
				IBinder v9 = ServiceManager.getService("overlay");
				IOverlayManager v10 = IOverlayManager$Stub.asInterface(v9);
				this.mOverlayManager = v10;
				if (v10 != 0) {
					IOverlayManager v8 = this.mOverlayManager;
					if (v8 == 0) {
						if (p1 != 1) {
							if ("com.android.internal.systemui.navbar.threebutton" != 0) {
								PackageManager v12 = this.mContext.getPackageManager();
								PackageManager$PackageInfoFlags v14 = new PackageManager$PackageInfoFlags(0);
								PackageManager$PackageInfoFlags v13 = v14;
								PackageInfo v16 = v12.getPackageInfo("com.android.internal.systemui.navbar.threebutton", v13);
								if (v16 == 0) {
									boolean v11 = 0;
									if (v11 == 0) {
										boolean v17 = v8.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);
										Binder.restoreCallingIdentity(v3);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setNavBarMode(int p1){
	if (p1 == 0) {
		if (p1 != 1) {
			long v3 = Binder.clearCallingIdentity();
			ContentResolver v4 = this.mContext.getContentResolver();
			boolean v5 = Settings$Secure.putIntForUser(v4, "nav_bar_kids_mode", p1, this.mCurrentUserId);
			ContentResolver v6 = this.mContext.getContentResolver();
			boolean v7 = Settings$Secure.putIntForUser(v6, "nav_bar_force_visible", p1, this.mCurrentUserId);
			if (this.mOverlayManager != 0) {
				IBinder v9 = ServiceManager.getService("overlay");
				IOverlayManager v10 = IOverlayManager$Stub.asInterface(v9);
				this.mOverlayManager = v10;
				if (v10 != 0) {
					IOverlayManager v8 = this.mOverlayManager;
					if (v8 == 0) {
						if (p1 != 1) {
							if ("com.android.internal.systemui.navbar.threebutton" != 0) {
								boolean v11 = 0;
								if (v11 == 0) {
									boolean v12 = v8.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);
									Binder.restoreCallingIdentity(v3);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setNavBarMode(int p1){
	p0.enforceStatusBar();
	if (p1 == 0) {
		if (p1 != 1) {
			long v2 = Binder.clearCallingIdentity();
			ContentResolver v3 = this.mContext.getContentResolver();
			boolean v4 = Settings$Secure.putIntForUser(v3, "nav_bar_kids_mode", p1, this.mCurrentUserId);
			ContentResolver v5 = this.mContext.getContentResolver();
			boolean v6 = Settings$Secure.putIntForUser(v5, "nav_bar_force_visible", p1, this.mCurrentUserId);
			IOverlayManager v7 = p0.getOverlayManager();
			if (v7 == 0) {
				if (p1 != 1) {
					boolean v8 = p0.isPackageSupported("com.android.internal.systemui.navbar.threebutton");
					if (v8 == 0) {
						boolean v9 = v7.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);
						Binder.restoreCallingIdentity(v2);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v5 = Settings$Secure.putIntForUser(v4, "nav_bar_kids_mode", p1, this.mCurrentUserId);\nboolean v7 = Settings$Secure.putIntForUser(v6, "nav_bar_force_visible", p1, this.mCurrentUserId);', 'boolean v17 = v8.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);\nboolean v9 = v7.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);']

The method setNavBarMode has the following similar APIs:

- API Name: getNavBarMode()I in the following Class: Lcom.android.server.statusbar.StatusBarManagerService with the following sink code entries:
  - Similarity: 0.8428373336791992, Code:
int v4 = Settings$Secure.getIntForUser(v3, "nav_bar_kids_mode", this.mCurrentUserId);
return v4;
  - Access Control Level: SYS_OR_SIG

- API Name: setTeletextAppEnabled(Landroid/os/IBinder;ZI)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7104279398918152, Code:
int v4 = this.this$0.resolveCallingUserId(v2, v1, p3, "setTeletextAppEnabled");
TvInteractiveAppManagerService$SessionState v8 = this.this$0.getSessionStateLocked(p1, v1, v3);
ITvInteractiveAppSession v10 = this.this$0.getSessionLocked(v7);
v9.setTeletextAppEnabled(p2);
  - Access Control Level: SYS_OR_SIG

