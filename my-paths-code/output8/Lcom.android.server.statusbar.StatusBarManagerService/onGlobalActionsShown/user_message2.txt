The method onGlobalActionsShown has the following code snippet:

This is path 1 for the API with depth 1:
public void onGlobalActionsShown(){
	long v3 = Binder.clearCallingIdentity();
	if (this.mGlobalActionListener != 0) {
		Binder.restoreCallingIdentity(v3);
		return;
	}
}


This is path 2 for the API with depth 0:
public void onGlobalActionsShown(){
	p0.enforceStatusBarService();
	long v2 = Binder.clearCallingIdentity();
	if (this.mGlobalActionListener != 0) {
		Binder.restoreCallingIdentity(v2);
		return;
	}
}


This is path 3 for the API with depth 0:
public void onGlobalActionsShown(){
	p0.enforceStatusBarService();
	long v2 = Binder.clearCallingIdentity();
	if (this.mGlobalActionListener != 0) {
		this.mGlobalActionListener.onGlobalActionsShown();
		Binder.restoreCallingIdentity(v2);
		return;
	}
}

and the following sink code:
['p0.enforceStatusBarService();\nlong v2 = Binder.clearCallingIdentity();\nif (this.mGlobalActionListener != 0) {\nthis.mGlobalActionListener.onGlobalActionsShown();\nBinder.restoreCallingIdentity(v2);']

The method onGlobalActionsShown has the following similar APIs:

- API Name: onGlobalActionsHidden()V with Similarity Score: 0.8247021436691284
  - Access Control Level: SYS_OR_SIG and the following code:
p0.enforceStatusBarService();
this.mGlobalActionListener.onGlobalActionsDismissed();

- API Name: reportPerceptibleAsync(Landroid/os/IBinder;Z)V with Similarity Score: 0.7716090679168701
  - Access Control Level: SYS_OR_SIG and the following code:
long v8 = Binder.clearCallingIdentity();
this.mCurPerceptible = p2;
IBinder v11 = this.mBindingController.getCurToken();
StatusBarManagerService$UiState v22 = StatusBarManagerService.getUiState(this.mCurTokenDisplayId);
StatusBarManagerService$UiState.-$$Nest$msetImeWindowState(v22, this.mImeWindowVis, this.mBackDisposition, v13, v18);

