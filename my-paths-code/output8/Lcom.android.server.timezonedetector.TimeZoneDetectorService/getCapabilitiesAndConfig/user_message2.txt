The method getCapabilitiesAndConfig in the following class Lcom.android.server.timezonedetector.TimeZoneDetectorService has the following code snippet:

This is path 1 for the API with depth 2:
public TimeZoneCapabilitiesAndConfig getCapabilitiesAndConfig(){
	int v1 = this.mCallerIdentityInjector.getCallingUserId();
	long v4 = this.mCallerIdentityInjector.clearCallingIdentity();
	ConfigurationInternal v5 = this.mServiceConfigAccessor.getConfigurationInternal(v1);
	TimeZoneCapabilitiesAndConfig v7 = new TimeZoneCapabilitiesAndConfig(v8,v9);
	TimeZoneCapabilities v8 = ConfigurationInternal.asCapabilities();
	TimeZoneConfiguration v9 = ConfigurationInternal.asConfiguration();
	TimeZoneCapabilitiesAndConfig v6 = v7;
	this.mCallerIdentityInjector.restoreCallingIdentity(v4);
	TimeZoneCapabilitiesAndConfig v2 = v6;
	return v2;
}


This is path 2 for the API with depth 1:
public TimeZoneCapabilitiesAndConfig getCapabilitiesAndConfig(){
	int v1 = this.mCallerIdentityInjector.getCallingUserId();
	long v4 = this.mCallerIdentityInjector.clearCallingIdentity();
	ConfigurationInternal v5 = this.mServiceConfigAccessor.getConfigurationInternal(v1);
	TimeZoneCapabilitiesAndConfig v6 = v5.createCapabilitiesAndConfig();
	this.mCallerIdentityInjector.restoreCallingIdentity(v4);
	TimeZoneCapabilitiesAndConfig v2 = v6;
	return v2;
}


This is path 3 for the API with depth 0:
public TimeZoneCapabilitiesAndConfig getCapabilitiesAndConfig(){
	int v1 = this.mCallerIdentityInjector.getCallingUserId();
	TimeZoneCapabilitiesAndConfig v2 = p0.getCapabilitiesAndConfig(v1);
	return v2;
}

and the following sink code:
['ConfigurationInternal v5 = this.mServiceConfigAccessor.getConfigurationInternal(v1);\nTimeZoneCapabilitiesAndConfig v6 = v5.createCapabilitiesAndConfig();\nreturn v2;', 'int v1 = this.mCallerIdentityInjector.getCallingUserId();\nConfigurationInternal v5 = this.mServiceConfigAccessor.getConfigurationInternal(v1);\nTimeZoneCapabilities v8 = ConfigurationInternal.asCapabilities();\nTimeZoneConfiguration v9 = ConfigurationInternal.asConfiguration();\nTimeZoneCapabilitiesAndConfig v7 = new TimeZoneCapabilitiesAndConfig(v8,v9);\nreturn v2;', 'int v1 = this.mCallerIdentityInjector.getCallingUserId();\nTimeZoneCapabilitiesAndConfig v2 = p0.getCapabilitiesAndConfig(v1);\nreturn v2;']

The method getCapabilitiesAndConfig has the following similar APIs:

- API Name: getCapabilitiesAndConfig()Landroid/app/time/TimeCapabilitiesAndConfig; in the following Class: Lcom.android.server.timedetector.TimeDetectorService with the following sink code entries:
  - Similarity: 0.9213576912879944, Code:
int v1 = this.mCallerIdentityInjector.getCallingUserId();
TimeCapabilitiesAndConfig v2 = p0.getTimeCapabilitiesAndConfig(v1);
return v2;
  - Similarity: 0.8124290108680725, Code:
ConfigurationInternal v5 = this.mTimeDetectorStrategy.getConfigurationInternal(v1);
TimeCapabilities v8 = ConfigurationInternal.timeCapabilities();
TimeConfiguration v9 = ConfigurationInternal.timeConfiguration();
TimeCapabilitiesAndConfig v7 = new TimeCapabilitiesAndConfig(v8,v9);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: updateConfiguration(Landroid/app/time/TimeZoneConfiguration;)Z in the following Class: Lcom.android.server.timezonedetector.TimeZoneDetectorService with the following sink code entries:
  - Similarity: 0.7568159103393555, Code:
boolean v9 = this.mServiceConfigAccessor.updateConfiguration(v5, p1);
boolean v2 = v9;
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: getApplicationLocales(Ljava/lang/String;I)Landroid/os/LocaleList; in the following Class: Lcom.android.server.locales.LocaleManagerService$LocaleManagerBinderService with the following sink code entries:
  - Similarity: 0.7459368109703064, Code:
int v5 = this.mActivityManagerInternal.handleIncomingUser(v3, v4, p2, 0, 0, "getApplicationLocales", 0);
boolean v7 = LocaleManagerService.isPackageOwnedByCaller(p1, v5, 0);
long v14 = Binder.clearCallingIdentity();
ActivityTaskManagerInternal$PackageConfig v16 = this.mActivityTaskManagerInternal.getApplicationConfig(p1, v5);
LocaleList v17 = LocaleList.getEmptyLocaleList();
Binder.restoreCallingIdentity(v14);
LocaleList v1 = v15;
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.7304337620735168, Code:
int v1 = this.mType;
if (v1 != -1) {
boolean v6 = p2.isNone();
long v7 = Binder.clearCallingIdentity();
ContentResolver v9 = this.mContext.getContentResolver();
int v10 = this.mInjector.settingsSecureGetInt(v9, "user_setup_complete", 0, 0);
if (v10 != 0) {
int v11 = this.mInjector.settingsSecureGetInt(v9, "secure_frp_mode", 0, 0);
VerifyCredentialResponse v21 = LockSettingsService.doVerifyCredential(p2, UserInfo.id, 0, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: transferOwner(III)Z in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7206577062606812, Code:
boolean v13 = TunerResourceManagerService.transferFeCiCamOwner(p2, p3);
return v12;
  - Access Control Level: SYS_OR_SIG

