The method getLights in the following class Lcom.android.server.lights.LightsService$LightsManagerBinderService has the following code snippet:

This is path 1 for the API with depth 2:
public List getLights(){
	ArrayList v3 = new ArrayList();
	SparseArray v5 = this.mLightsById;
	int v6 = v5.size();
	if (0 >= v6) {
		SparseArray v7 = this.mLightsById;
		Object v8 = v7.valueAt(0);
		if (HwLight.type < 0) {
			if (HwLight.type >= 8) {
				boolean v10 = 1;
				boolean v9 = v10;
				if (v9 != 0) {
					SparseArray v11 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
					Object v12 = v11.valueAt(0);
					HwLight v13 = LightsService$LightImpl.-$$Nest$fgetmHwLight(v12);
					Light v14 = new Light(HwLight.id,HwLight.ordinal,HwLight.type);
					boolean v16 = v3.add(v14);
					SparseArray v17 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
					int v18 = v17.size();
					if ((0 + 1) >= v18) {
						return v3;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getLights(){
	ArrayList v3 = new ArrayList();
	SparseArray v5 = this.mLightsById;
	int v6 = v5.size();
	if (0 >= v6) {
		SparseArray v7 = this.mLightsById;
		Object v8 = v7.valueAt(0);
		boolean v10 = v8.isSystemLight();
		boolean v9 = v10;
		if (v9 != 0) {
			SparseArray v11 = this.mLightsById;
			Object v12 = v11.valueAt(0);
			HwLight v13 = this.mHwLight;
			Light v14 = new Light(HwLight.id,HwLight.ordinal,HwLight.type);
			boolean v16 = v3.add(v14);
			SparseArray v17 = this.mLightsById;
			int v18 = v17.size();
			if ((0 + 1) >= v18) {
				return v3;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getLights(){
	ArrayList v3 = new ArrayList();
	SparseArray v5 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
	int v6 = v5.size();
	if (0 >= v6) {
		SparseArray v7 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
		Object v8 = v7.valueAt(0);
		boolean v9 = LightsService$LightImpl.-$$Nest$misSystemLight(v8);
		if (v9 != 0) {
			SparseArray v10 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
			Object v11 = v10.valueAt(0);
			HwLight v12 = LightsService$LightImpl.-$$Nest$fgetmHwLight(v11);
			Light v13 = new Light(HwLight.id,HwLight.ordinal,HwLight.type);
			boolean v15 = v3.add(v13);
			SparseArray v16 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
			int v17 = v16.size();
			if ((0 + 1) >= v17) {
				return v3;
			}
		}
	}
}

and the following sink code:
['ArrayList v3 = new ArrayList();\nSparseArray v5 = this.mLightsById;\nObject v8 = v7.valueAt(0);\nHwLight v13 = LightsService$LightImpl.-$$Nest$fgetmHwLight(v12);\nLight v14 = new Light(HwLight.id,HwLight.ordinal,HwLight.type);\nboolean v16 = v3.add(v14);\nreturn v3;']

The method getLights has the following similar APIs:

- API Name: getLightState(I)Landroid/hardware/lights/LightState; in the following Class: Lcom.android.server.lights.LightsService$LightsManagerBinderService with the following sink code entries:
  - Similarity: 0.7435541152954102, Code:
Object v4 = v3.get(p1);
boolean v5 = LightsService$LightImpl.-$$Nest$misSystemLight(v4);
int v7 = LightsService$LightImpl.-$$Nest$mgetColor(v4);
LightState v6 = new LightState(v7);
return v6;
  - Access Control Level: SYS_OR_SIG

- API Name: setLightStates(Landroid/os/IBinder;[I[Landroid/hardware/lights/LightState;)V in the following Class: Lcom.android.server.lights.LightsService$LightsManagerBinderService with the following sink code entries:
  - Similarity: 0.7163550853729248, Code:
LightsService$LightImpl.setLightLocked(v41, 0, 0, 0, 0);
  - Access Control Level: SYS_OR_SIG

