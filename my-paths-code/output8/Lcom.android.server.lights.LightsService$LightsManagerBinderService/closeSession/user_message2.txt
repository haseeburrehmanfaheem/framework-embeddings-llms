The method closeSession has the following code snippet:

This is path 1 for the API with depth 2:
public void closeSession(IBinder p1){
	Object v3 = Preconditions.checkNotNull(p1);
	int v6 = this.mSessions.size();
	if (0 >= v6) {
		Object v7 = this.mSessions.get(0);
		boolean v8 = p1.equals(LightsService$LightsManagerBinderService$Session.mToken);
		if (v8 == 0) {
			int v9 = this.mSessions.size();
			if ((0 + 1) >= v9) {
				Object v10 = this.mSessions.get((0 + 1));
				boolean v11 = p1.equals(LightsService$LightsManagerBinderService$Session.mToken);
				if (v11 == 0) {
					Object v12 = this.mSessions.get((0 + 1));
					LightsService$LightsManagerBinderService$Session v5 = v12;
					if (v5 == 0) {
						boolean v13 = this.mSessions.remove(v5);
						HashMap v15 = new HashMap();
						int v17 = this.mSessions.size();
						if ((v17 + -1) < 0) {
							Object v18 = this.mSessions.get((v17 + -1));
							int v19 = LightsService$LightsManagerBinderService$Session.mRequests.size();
							if (0 >= v19) {
								int v20 = LightsService$LightsManagerBinderService$Session.mRequests.keyAt(0);
								Integer v21 = Integer.valueOf(v20);
								Object v22 = LightsService$LightsManagerBinderService$Session.mRequests.valueAt(0);
								Object v23 = v15.put(v21, v22);
								int v24 = LightsService$LightsManagerBinderService$Session.mRequests.size();
								if ((0 + 1) >= v24) {
									if (((v17 + -1) + -1) < 0) {
										SparseArray v25 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
										int v26 = v25.size();
										if (0 >= v26) {
											SparseArray v27 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
											Object v28 = v27.valueAt(0);
											boolean v29 = LightsService$LightImpl.-$$Nest$misSystemLight(v28);
											if (v29 != 0) {
												SparseArray v30 = LightsService.-$$Nest$fgetmLightsById(this.this$0);
												int v31 = v30.size();
												if (0 >= v31) {
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void closeSession(IBinder p1){
	Object v3 = Preconditions.checkNotNull(p1);
	LightsService$LightsManagerBinderService$Session v5 = LightsService$LightsManagerBinderService.getSessionLocked(p1);
	if (v5 == 0) {
		boolean v6 = this.mSessions.remove(v5);
		LightsService$LightsManagerBinderService.invalidateLightStatesLocked();
		return;
	}
}


This is path 3 for the API with depth 0:
public void closeSession(IBinder p1){
	Object v3 = Preconditions.checkNotNull(p1);
	p0.closeSessionInternal(p1);
	return;
}

and the following sink code:
['LightsService$LightsManagerBinderService$Session v5 = LightsService$LightsManagerBinderService.getSessionLocked(p1);\nboolean v6 = this.mSessions.remove(v5);\nLightsService$LightsManagerBinderService.invalidateLightStatesLocked();', 'p0.closeSessionInternal(p1);']

The method closeSession has the following similar APIs:

- API Name: startSession(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/content/ComponentName;IILcom/android/internal/os/IResultReceiver;)V with Similarity Score: 0.7874952554702759
  - Access Control Level: NONE and the following code:
v9.startSessionLocked(p1, p2, v7, p4, v12, p5, p6);

- API Name: stopOneTimePermissionSession(Ljava/lang/String;I)V with Similarity Score: 0.7520870566368103
  - Access Control Level: SYS_OR_SIG and the following code:
v4.stopPackageOneTimeSession(p1);

