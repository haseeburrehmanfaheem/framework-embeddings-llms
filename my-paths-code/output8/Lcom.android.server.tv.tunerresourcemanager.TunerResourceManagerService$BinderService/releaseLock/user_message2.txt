The method releaseLock has the following code snippet:

This is path 1 for the API with depth 2:
public boolean releaseLock(int p1){
	boolean v4 = TunerResourceManagerService.lockForTunerApiLock(p1, 500, "releaseLockInternal()");
	if (v4 != 0) {
		boolean v3 = 0;
		boolean v2 = v3;
		return v2;
	}
}


This is path 2 for the API with depth 1:
public boolean releaseLock(int p1){
	boolean v3 = this.this$0.releaseLockInternal(p1, 500, 0, 0);
	boolean v2 = v3;
	return v2;
}


This is path 3 for the API with depth 0:
public boolean releaseLock(int p1){
	boolean v2 = TunerResourceManagerService.-$$Nest$mreleaseLockInternal(this.this$0, p1, 500, 0, 0);
	return v2;
}

and the following sink code:
['boolean v3 = this.this$0.releaseLockInternal(p1, 500, 0, 0);\nboolean v2 = v3;\nreturn v2;', 'boolean v2 = TunerResourceManagerService.-$$Nest$mreleaseLockInternal(this.this$0, p1, 500, 0, 0);\nreturn v2;', 'boolean v4 = TunerResourceManagerService.lockForTunerApiLock(p1, 500, "releaseLockInternal()");\nif (v4 != 0) {\nboolean v3 = 0;\nboolean v2 = v3;\nreturn v2;']

The method releaseLock has the following similar APIs:

- API Name: acquireLock(IJ)Z with Similarity Score: 0.9443024396896362
  - Access Control Level: SYS_OR_SIG and the following code:
long v4 = SystemClock.uptimeMillis();
boolean v5 = TunerResourceManagerService.lockForTunerApiLock(p1, 500, "acquireLockInternal()");
boolean v3 = 0;
boolean v2 = v3;
return v2;

- API Name: acquireLock(IJ)Z with Similarity Score: 0.9028707146644592
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = TunerResourceManagerService.-$$Nest$macquireLockInternal(this.this$0, p1, p2, 500);
return v2;

