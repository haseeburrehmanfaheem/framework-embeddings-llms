This is path 1 for the API with depth 2:
public boolean isHigherPriority(ResourceClientProfile p1, ResourceClientProfile p2){
	if (p1 == 0) {
		if (p2 == 0) {
			Object v2 = this.mLock;
			if (this.DEBUG == 0) {
				if (this.mTvInputManager != 0) {
					if (ResourceClientProfile.tvInputSessionId != 0) {
						int v13 = Binder.getCallingPid();
						if (ResourceClientProfile.tvInputSessionId != 0) {
							int v15 = TvInputManager.getClientPidInternal(ResourceClientProfile.tvInputSessionId);
							int v14 = v15;
							Iterator v18 = v17.iterator();
							boolean v19 = v18.hasNext();
							if (v19 == 0) {
								Object v20 = v18.next();
								if (ActivityManager$RunningAppProcessInfo.pid != v13) {
									if (ActivityManager$RunningAppProcessInfo.importance != 100) {
										boolean v21 = v18.hasNext();
										if (v21 == 0) {
											Object v22 = v18.next();
											if (ActivityManager$RunningAppProcessInfo.pid != v13) {
												if (ActivityManager$RunningAppProcessInfo.importance != 100) {
													boolean v16 = 1;
													if (this.DEBUG == 0) {
														if (v16 == 0) {
															int v33 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);
															int v23 = v33;
															Iterator v36 = v35.iterator();
															boolean v37 = v36.hasNext();
															if (v37 == 0) {
																Object v38 = v36.next();
																if (ActivityManager$RunningAppProcessInfo.pid != getCallingPid()) {
																	if (ActivityManager$RunningAppProcessInfo.importance != 100) {
																		boolean v39 = v36.hasNext();
																		if (v39 == 0) {
																			Object v40 = v36.next();
																			if (ActivityManager$RunningAppProcessInfo.pid != getCallingPid()) {
																				if (ActivityManager$RunningAppProcessInfo.importance != 100) {
																					boolean v34 = 1;
																					if (this.DEBUG == 0) {
																						if (v34 == 0) {
																							int v51 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);
																							int v41 = v51;
																							if (v23 <= v41) {
																								boolean v3 = 1;
																								return v3;
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isHigherPriority(ResourceClientProfile p1, ResourceClientProfile p2){
	if (p1 == 0) {
		if (p2 == 0) {
			Object v2 = this.mLock;
			if (this.DEBUG == 0) {
				if (this.mTvInputManager != 0) {
					if (ResourceClientProfile.tvInputSessionId != 0) {
						int v13 = Binder.getCallingPid();
						if (ResourceClientProfile.tvInputSessionId != 0) {
							int v14 = Binder.getCallingPid();
							boolean v15 = TunerResourceManagerService.checkIsForeground(v13);
							int v16 = TunerResourceManagerService.getClientPriority(ResourceClientProfile.useCase, v15);
							boolean v17 = TunerResourceManagerService.checkIsForeground(v14);
							int v18 = TunerResourceManagerService.getClientPriority(ResourceClientProfile.useCase, v17);
							if (v16 <= v18) {
								boolean v3 = 1;
								return v3;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isHigherPriority(ResourceClientProfile p1, ResourceClientProfile p2){
	if (p1 == 0) {
		if (p2 == 0) {
			Object v2 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
			boolean v3 = this.this$0.isHigherPriorityInternal(p1, p2);
			return v3;
		}
	}
}
