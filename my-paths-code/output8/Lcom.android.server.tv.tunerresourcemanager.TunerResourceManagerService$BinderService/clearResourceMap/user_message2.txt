The method clearResourceMap in the following class Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService has the following code snippet:

This is path 1 for the API with depth 1:
public void clearResourceMap(int p1){
	Object v2 = this.mLock;
	if (p1 == 0) {
		TunerResourceManagerService.replaceFeResourceMap(0, this.mFrontendResources);
		TunerResourceManagerService.replaceFeCounts(0, this.mFrontendExistingNums);
		TunerResourceManagerService.replaceFeCounts(0, this.mFrontendUsedNums);
		TunerResourceManagerService.replaceFeCounts(0, this.mFrontendMaxUsableNums);
		return;
	}
}


This is path 2 for the API with depth 0:
public void clearResourceMap(int p1){
	Object v2 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
	this.this$0.clearResourceMapInternal(p1);
	return;
}

and the following sink code:
['TunerResourceManagerService.replaceFeResourceMap(0, this.mFrontendResources);\nTunerResourceManagerService.replaceFeCounts(0, this.mFrontendExistingNums);\nTunerResourceManagerService.replaceFeCounts(0, this.mFrontendUsedNums);\nTunerResourceManagerService.replaceFeCounts(0, this.mFrontendMaxUsableNums);', 'this.this$0.clearResourceMapInternal(p1);']

The method clearResourceMap has the following similar APIs:

- API Name: restoreResourceMap(I)V in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.9573572874069214, Code:
TunerResourceManagerService.replaceFeResourceMap(this.mFrontendResourcesBackup, this.mFrontendResources);
TunerResourceManagerService.replaceFeCounts(this.mFrontendExistingNumsBackup, this.mFrontendExistingNums);
TunerResourceManagerService.replaceFeCounts(this.mFrontendUsedNumsBackup, this.mFrontendUsedNums);
TunerResourceManagerService.replaceFeCounts(this.mFrontendMaxUsableNumsBackup, this.mFrontendMaxUsableNums);
  - Similarity: 0.8874364495277405, Code:
this.this$0.restoreResourceMapInternal(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: storeResourceMap(I)V in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.9321390986442566, Code:
if (p1 == 0) {
TunerResourceManagerService.replaceFeResourceMap(this.mFrontendResources, this.mFrontendResourcesBackup);
TunerResourceManagerService.replaceFeCounts(this.mFrontendExistingNums, this.mFrontendExistingNumsBackup);
TunerResourceManagerService.replaceFeCounts(this.mFrontendUsedNums, this.mFrontendUsedNumsBackup);
TunerResourceManagerService.replaceFeCounts(this.mFrontendMaxUsableNums, this.mFrontendMaxUsableNumsBackup);
  - Access Control Level: SYS_OR_SIG

- API Name: removeCallback(Landroid/media/projection/IMediaProjectionWatcherCallback;)V in the following Class: Lcom.android.server.media.projection.MediaProjectionManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7263398766517639, Code:
this.this$0.removeCallback(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: setFrontendInfoList([Landroid/media/tv/tunerresourcemanager/TunerFrontendInfo;)V in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7201827168464661, Code:
Map v8 = this.mFrontendResources;
Set v9 = v8.keySet();
Integer v12 = Integer.valueOf(TunerFrontendInfo.handle);
Object v13 = this.mFrontendResources.get(v12);
FrontendResource$Builder v14 = new FrontendResource$Builder(TunerFrontendInfo.handle);
this.mType = TunerFrontendInfo.type;
this.mExclusiveGroupId = TunerFrontendInfo.exclusiveGroupId;
FrontendResource v19 = new FrontendResource(FrontendResource$Builder,0);
Integer v49 = Integer.valueOf(v48);
Object v50 = this.mFrontendResources.put(v49, v18);
  - Access Control Level: SYS_OR_SIG

