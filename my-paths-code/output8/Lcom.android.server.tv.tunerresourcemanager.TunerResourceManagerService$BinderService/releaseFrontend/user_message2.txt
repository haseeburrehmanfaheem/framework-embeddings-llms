The method releaseFrontend has the following code snippet:

This is path 1 for the API with depth 2:
public void releaseFrontend(int p1, int p2){
	if (p1 == -1) {
		if (((-16777216 & p1) >> 24) == 0) {
			boolean v4 = 0;
			boolean v3 = v4;
			if (v3 == 0) {
				Object v5 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
				boolean v6 = this.this$0.checkClientExists(p2);
				if (v6 == 0) {
					FrontendResource v7 = this.this$0.getFrontendResource(p1);
					if (v7 == 0) {
						int v8 = v7.getOwnerClientId();
						ClientProfile v9 = this.this$0.getClientProfile(v8);
						if (v8 == p2) {
							if (v9 == 0) {
								Set v10 = v9.getShareFeClientIds();
								Integer v11 = Integer.valueOf(p2);
								boolean v12 = v10.contains(v11);
								if (v12 == 0) {
									if (this.DEBUG == 0) {
										int v17 = this.mHandle;
										int v24 = this.mOwnerClientId;
										if (p2 != v24) {
											int v25 = this.mOwnerClientId;
											Integer v27 = Integer.valueOf(v25);
											Object v28 = this.mClientProfiles.get(v27);
											ClientProfile v26 = v28;
											if (v26 == 0) {
												Set v29 = this.mShareFeClientIds;
												Iterator v30 = v29.iterator();
												boolean v31 = v30.hasNext();
												if (v31 == 0) {
													Object v32 = v30.next();
													int v33 = v32.intValue();
													Binder.allowBlockingForCurrentThread();
													ClientProfile v36 = TunerResourceManagerService.getClientProfile(v33);
													if (v36 != 0) {
														Set v37 = v36.getShareFeClientIds();
														Iterator v38 = v37.iterator();
														boolean v39 = v38.hasNext();
														if (v39 == 0) {
															Object v40 = v38.next();
															int v41 = v40.intValue();
															Integer v42 = Integer.valueOf(v41);
															Object v43 = this.mListeners.get(v42);
															IResourcesReclaimListener v44 = v43.getListener();
															v44.onReclaimResources();
															ClientProfile v46 = TunerResourceManagerService.getClientProfile(v41);
															TunerResourceManagerService.clearAllResourcesAndClientMapping(v46);
															boolean v48 = v38.hasNext();
															if (v48 == 0) {
																if (this.DEBUG == 0) {
																	Integer v57 = Integer.valueOf(v33);
																	Object v58 = this.mListeners.get(v57);
																	IResourcesReclaimListener v59 = v58.getListener();
																	v59.onReclaimResources();
																	TunerResourceManagerService.clearAllResourcesAndClientMapping(v36);
																	boolean v34 = 1;
																	boolean v62 = v30.hasNext();
																	if (v62 == 0) {
																		Integer v64 = Integer.valueOf(p2);
																		Object v65 = this.mClientProfiles.get(v64);
																		ClientProfile v63 = v65;
																		if (v63 != 0) {
																			Set v67 = v63.getInUseFrontendHandles();
																			Iterator v68 = v67.iterator();
																			boolean v69 = v68.hasNext();
																			if (v69 == 0) {
																				Object v70 = v68.next();
																				int v71 = v70.intValue();
																				FrontendResource v72 = TunerResourceManagerService.getFrontendResource(v71);
																				int v73 = v72.getOwnerClientId();
																				int v74 = v63.getId();
																				if (v73 != v74) {
																					ClientProfile v75 = TunerResourceManagerService.getClientProfile(v73);
																					if (v75 == 0) {
																						int v76 = v63.getId();
																						v75.stopSharingFrontend(v76);
																						boolean v78 = v68.hasNext();
																						if (v78 == 0) {
																							int v79 = v63.getPrimaryFrontend();
																							if (v79 == -1) {
																								FrontendResource v80 = TunerResourceManagerService.getFrontendResource(v79);
																								if (v80 == 0) {
																									int v81 = v80.getType();
																									TunerResourceManagerService.decreFrontendNum(this.mFrontendUsedNums, v81);
																									v63.releaseFrontend();
																									return;
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void releaseFrontend(int p1, int p2){
	boolean v4 = this.this$0.validateResourceHandle(0, p1);
	boolean v3 = v4;
	if (v3 == 0) {
		Object v5 = this.mLock;
		Set v7 = this.mClientProfiles.keySet();
		Integer v8 = Integer.valueOf(p2);
		boolean v9 = v7.contains(v8);
		boolean v6 = v9;
		if (v6 == 0) {
			Integer v11 = Integer.valueOf(p1);
			Object v12 = this.mFrontendResources.get(v11);
			FrontendResource v10 = v12;
			if (v10 == 0) {
				int v13 = this.mOwnerClientId;
				Integer v15 = Integer.valueOf(v13);
				Object v16 = this.mClientProfiles.get(v15);
				ClientProfile v14 = v16;
				if (v13 == p2) {
					if (v14 == 0) {
						Set v17 = this.mShareFeClientIds;
						Integer v18 = Integer.valueOf(p2);
						boolean v19 = v17.contains(v18);
						if (v19 == 0) {
							if (this.DEBUG == 0) {
								int v24 = v10.getHandle();
								int v31 = v10.getOwnerClientId();
								if (p2 != v31) {
									int v32 = v10.getOwnerClientId();
									ClientProfile v33 = TunerResourceManagerService.getClientProfile(v32);
									if (v33 == 0) {
										Set v34 = v33.getShareFeClientIds();
										Iterator v35 = v34.iterator();
										boolean v36 = v35.hasNext();
										if (v36 == 0) {
											Object v37 = v35.next();
											int v38 = v37.intValue();
											boolean v39 = TunerResourceManagerService.reclaimResource(v38, 0);
											boolean v40 = v35.hasNext();
											if (v40 == 0) {
												ClientProfile v41 = TunerResourceManagerService.getClientProfile(p2);
												TunerResourceManagerService.clearFrontendAndClientMapping(v41);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void releaseFrontend(int p1, int p2){
	boolean v3 = TunerResourceManagerService.-$$Nest$mvalidateResourceHandle(this.this$0, 0, p1);
	if (v3 == 0) {
		Object v4 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
		boolean v5 = this.this$0.checkClientExists(p2);
		if (v5 == 0) {
			FrontendResource v6 = this.this$0.getFrontendResource(p1);
			if (v6 == 0) {
				int v7 = v6.getOwnerClientId();
				ClientProfile v8 = this.this$0.getClientProfile(v7);
				if (v7 == p2) {
					if (v8 == 0) {
						Set v9 = v8.getShareFeClientIds();
						Integer v10 = Integer.valueOf(p2);
						boolean v11 = v9.contains(v10);
						if (v11 == 0) {
							this.this$0.releaseFrontendInternal(v6, p2);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['FrontendResource v6 = this.this$0.getFrontendResource(p1);\nint v7 = v6.getOwnerClientId();\nClientProfile v8 = this.this$0.getClientProfile(v7);\nthis.this$0.releaseFrontendInternal(v6, p2);', 'boolean v4 = TunerResourceManagerService.-$$Nest$mvalidateResourceHandle(this.this$0, 0, p1);\nObject v5 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);\nboolean v5 = this.this$0.checkClientExists(p2);']

The method releaseFrontend has the following similar APIs:

- API Name: releaseLnb(II)V with Similarity Score: 0.7790279388427734
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = TunerResourceManagerService.-$$Nest$mvalidateResourceHandle(this.this$0, 3, p1);
Object v4 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
boolean v5 = this.this$0.checkClientExists(p2);
LnbResource v6 = this.this$0.getLnbResource(p1);
this.this$0.releaseLnbInternal(v6);

- API Name: releaseLnb(II)V with Similarity Score: 0.7726454138755798
  - Access Control Level: SYS_OR_SIG and the following code:
Object v5 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
boolean v6 = this.this$0.checkClientExists(p2);
LnbResource v7 = this.this$0.getLnbResource(p1);
int v8 = v7.getOwnerClientId();
if (v8 != p2) { ... }
TunerResourceManagerService.getClientProfile(v19);
v20.releaseLnb(v22);

