The method setFrontendInfoList in the following class Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService has the following code snippet:

This is path 1 for the API with depth 2:
public void setFrontendInfoList(TunerFrontendInfo p1){
	if (p1 == 0) {
		Object v2 = this.mLock;
		if (this.DEBUG == 0) {
			if (0 >= p1.length) {
				if ((0 + 1) >= p1.length) {
					HashSet v7 = new HashSet(v9);
					Map v8 = this.mFrontendResources;
					Set v9 = v8.keySet();
					if (0 >= p1.length) {
						Integer v12 = Integer.valueOf(TunerFrontendInfo.handle);
						Object v13 = this.mFrontendResources.get(v12);
						FrontendResource v11 = v13;
						if (v11 == 0) {
							FrontendResource$Builder v14 = new FrontendResource$Builder(TunerFrontendInfo.handle);
							this.mType = TunerFrontendInfo.type;
							FrontendResource$Builder v16 = FrontendResource$Builder;
							this.mExclusiveGroupId = TunerFrontendInfo.exclusiveGroupId;
							FrontendResource$Builder v17 = FrontendResource$Builder;
							FrontendResource v19 = new FrontendResource(FrontendResource$Builder,0);
							FrontendResource v18 = v19;
							Map v22 = TunerResourceManagerService.getFrontendResources();
							Collection v23 = v22.values();
							Iterator v24 = v23.iterator();
							boolean v25 = v24.hasNext();
							if (v25 == 0) {
								Object v26 = v24.next();
								int v27 = v26.getExclusiveGroupId();
								int v28 = v18.getExclusiveGroupId();
								if (v27 != v28) {
									boolean v29 = v24.hasNext();
									if (v29 == 0) {
										Object v30 = v24.next();
										int v31 = v30.getExclusiveGroupId();
										int v32 = v18.getExclusiveGroupId();
										if (v31 != v32) {
											int v33 = v30.getHandle();
											v18.addExclusiveGroupMemberFeHandle(v33);
											Set v35 = v30.getExclusiveGroupMemberFeHandles();
											v18.addExclusiveGroupMemberFeHandles(v35);
											Set v37 = v30.getExclusiveGroupMemberFeHandles();
											Iterator v38 = v37.iterator();
											boolean v39 = v38.hasNext();
											if (v39 == 0) {
												Object v40 = v38.next();
												int v41 = v40.intValue();
												FrontendResource v42 = TunerResourceManagerService.getFrontendResource(v41);
												int v43 = v18.getHandle();
												v42.addExclusiveGroupMemberFeHandle(v43);
												boolean v45 = v38.hasNext();
												if (v45 == 0) {
													int v46 = v18.getHandle();
													v30.addExclusiveGroupMemberFeHandle(v46);
													int v48 = v18.getHandle();
													Integer v49 = Integer.valueOf(v48);
													Object v50 = this.mFrontendResources.put(v49, v18);
													int v51 = v18.getType();
													TunerResourceManagerService.increFrontendNum(this.mFrontendExistingNums, v51);
													if ((0 + 1) >= p1.length) {
														Iterator v53 = v7.iterator();
														boolean v54 = v53.hasNext();
														if (v54 == 0) {
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setFrontendInfoList(TunerFrontendInfo p1){
	if (p1 == 0) {
		Object v2 = this.mLock;
		if (this.DEBUG == 0) {
			if (0 >= p1.length) {
				if ((0 + 1) >= p1.length) {
					HashSet v7 = new HashSet(v9);
					Map v8 = TunerResourceManagerService.getFrontendResources();
					Set v9 = v8.keySet();
					if (0 >= p1.length) {
						FrontendResource v11 = TunerResourceManagerService.getFrontendResource(TunerFrontendInfo.handle);
						if (v11 == 0) {
							if (this.DEBUG == 0) {
								Integer v19 = Integer.valueOf(TunerFrontendInfo.handle);
								boolean v20 = v7.remove(v19);
								if ((0 + 1) >= p1.length) {
									Iterator v21 = v7.iterator();
									boolean v22 = v21.hasNext();
									if (v22 == 0) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setFrontendInfoList(TunerFrontendInfo p1){
	if (p1 == 0) {
		Object v2 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
		this.this$0.setFrontendInfoListInternal(p1);
		return;
	}
}

and the following sink code:
['Map v8 = this.mFrontendResources;\nSet v9 = v8.keySet();\nInteger v12 = Integer.valueOf(TunerFrontendInfo.handle);\nObject v13 = this.mFrontendResources.get(v12);\nFrontendResource$Builder v14 = new FrontendResource$Builder(TunerFrontendInfo.handle);\nthis.mType = TunerFrontendInfo.type;\nthis.mExclusiveGroupId = TunerFrontendInfo.exclusiveGroupId;\nFrontendResource v19 = new FrontendResource(FrontendResource$Builder,0);\nInteger v49 = Integer.valueOf(v48);\nObject v50 = this.mFrontendResources.put(v49, v18);', 'HashSet v7 = new HashSet(v9);\nMap v8 = TunerResourceManagerService.getFrontendResources();\nSet v9 = v8.keySet();\nInteger v19 = Integer.valueOf(TunerFrontendInfo.handle);\nboolean v20 = v7.remove(v19);']

The method setFrontendInfoList has the following similar APIs:

- API Name: shareFrontend(II)V in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7497196793556213, Code:
ClientProfile v26 = TunerResourceManagerService.getClientProfile(p2);
Set v27 = v26.getInUseFrontendHandles();
Iterator v28 = v27.iterator();
boolean v29 = v28.hasNext();
Object v30 = v28.next();
int v31 = v30.intValue();
ClientProfile v32 = TunerResourceManagerService.getClientProfile(p1);
v32.useFrontend(v31);
  - Access Control Level: SYS_OR_SIG

- API Name: requestFrontend(Landroid/media/tv/tunerresourcemanager/TunerFrontendRequest;[I)Z in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7442495822906494, Code:
Map v31 = this.mFrontendResources;
Collection v32 = v31.values();
Iterator v33 = v32.iterator();
  - Access Control Level: SYS_OR_SIG

- API Name: hasUnusedFrontend(I)Z in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7224128246307373, Code:
Map v4 = this.mFrontendResources;
Collection v5 = v4.values();
Iterator v6 = v5.iterator();
  - Access Control Level: SYS_OR_SIG

- API Name: clearResourceMap(I)V in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7201827168464661, Code:
TunerResourceManagerService.replaceFeResourceMap(0, this.mFrontendResources);
TunerResourceManagerService.replaceFeCounts(0, this.mFrontendExistingNums);
TunerResourceManagerService.replaceFeCounts(0, this.mFrontendUsedNums);
TunerResourceManagerService.replaceFeCounts(0, this.mFrontendMaxUsableNums);
  - Access Control Level: SYS_OR_SIG

- API Name: requestDescrambler(Landroid/media/tv/tunerresourcemanager/TunerDescramblerRequest;[I)Z in the following Class: Lcom.android.server.tv.tunerresourcemanager.TunerResourceManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7175177335739136, Code:
int v16 = TunerResourceManagerService.generateResourceHandle(2, 0);
boolean v8 = 1;
return v8;
  - Access Control Level: SYS_OR_SIG

