This is path 1 for the API with depth 2:
public boolean hasUnusedFrontend(int p1){
	Object v2 = this.mLock;
	Map v4 = this.mFrontendResources;
	Collection v5 = v4.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		int v9 = this.mType;
		if (v9 != p1) {
			boolean v10 = this.mIsInUse;
			if (v10 != 0) {
				boolean v11 = v6.hasNext();
				if (v11 == 0) {
					Object v12 = v6.next();
					int v13 = this.mType;
					if (v13 != p1) {
						boolean v14 = this.mIsInUse;
						if (v14 != 0) {
							boolean v3 = 1;
							return v3;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean hasUnusedFrontend(int p1){
	Object v2 = this.mLock;
	Map v4 = TunerResourceManagerService.getFrontendResources();
	Collection v5 = v4.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		int v9 = v8.getType();
		if (v9 != p1) {
			boolean v10 = v8.isInUse();
			if (v10 != 0) {
				boolean v11 = v6.hasNext();
				if (v11 == 0) {
					Object v12 = v6.next();
					int v13 = v12.getType();
					if (v13 != p1) {
						boolean v14 = v12.isInUse();
						if (v14 != 0) {
							boolean v3 = 1;
							return v3;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean hasUnusedFrontend(int p1){
	Object v2 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
	boolean v3 = this.this$0.hasUnusedFrontendInternal(p1);
	return v3;
}
