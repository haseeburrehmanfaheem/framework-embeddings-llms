The method isMinimalPostProcessingRequested has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isMinimalPostProcessingRequested(int p1){
	DisplayManagerService$SyncRoot v1 = this.mSyncRoot;
	LogicalDisplayMapper v2 = this.mLogicalDisplayMapper;
	Object v4 = this.mLogicalDisplays.get(p1);
	LogicalDisplay v3 = v4;
	boolean v5 = this.mRequestedMinimalPostProcessing;
	return v5;
}


This is path 2 for the API with depth 0:
public boolean isMinimalPostProcessingRequested(int p1){
	DisplayManagerService$SyncRoot v1 = DisplayManagerService.-$$Nest$fgetmSyncRoot(this.this$0);
	LogicalDisplayMapper v2 = DisplayManagerService.-$$Nest$fgetmLogicalDisplayMapper(this.this$0);
	LogicalDisplay v3 = v2.getDisplayLocked(p1);
	boolean v4 = v3.getRequestedMinimalPostProcessingLocked();
	return v4;
}

and the following sink code:
['LogicalDisplay v3 = v2.getDisplayLocked(p1);\nboolean v4 = v3.getRequestedMinimalPostProcessingLocked();\nreturn v4;', 'boolean v5 = this.mRequestedMinimalPostProcessing;\nreturn v5;']

The method isMinimalPostProcessingRequested has the following similar APIs:

- API Name: getDisplayInfo(I)Landroid/view/DisplayInfo; with Similarity Score: 0.7702498435974121
  - Access Control Level: NONE and the following code:
LogicalDisplay v5 = this.mLogicalDisplayMapper.getDisplayLocked(p1);
DisplayEventReceiver$FrameRateOverride v6 = v5.getFrameRateOverrides();
DisplayInfo v7 = v5.getDisplayInfoLocked();
DisplayInfo v8 = DisplayManagerService.getDisplayInfoForFrameRateOverride(v6, v7, v1);
DisplayInfo v4 = v8;
DisplayInfo v3 = v4;
return v3;

- API Name: requestColorMode(II)V with Similarity Score: 0.754281759262085
  - Access Control Level: SYS_OR_SIG and the following code:
LogicalDisplay v6 = this.mLogicalDisplayMapper.getDisplayLocked(p1);
int v7 = v6.getRequestedColorModeLocked();
v6.setRequestedColorModeLocked(p2);

