The method pauseWifiDisplay has the following code snippet:

This is path 1 for the API with depth 2:
public void pauseWifiDisplay(){
	long v3 = Binder.clearCallingIdentity();
	if (this.mWifiDisplayAdapter == 0) {
		this.mWifiDisplayAdapter.requestPauseLocked();
		Binder.restoreCallingIdentity(v3);
		return;
	}
}


This is path 2 for the API with depth 1:
public void pauseWifiDisplay(){
	long v3 = Binder.clearCallingIdentity();
	this.this$0.pauseWifiDisplayInternal();
	Binder.restoreCallingIdentity(v3);
	return;
}


This is path 3 for the API with depth 0:
public void pauseWifiDisplay(){
	long v3 = Binder.clearCallingIdentity();
	DisplayManagerService.-$$Nest$mpauseWifiDisplayInternal(this.this$0);
	Binder.restoreCallingIdentity(v3);
	return;
}

and the following sink code:
['this.mWifiDisplayAdapter.requestPauseLocked();', 'this.this$0.pauseWifiDisplayInternal();', 'DisplayManagerService.-$$Nest$mpauseWifiDisplayInternal(this.this$0);']

The method pauseWifiDisplay has the following similar APIs:

- API Name: connectWifiDisplay(Ljava/lang/String;)V with Similarity Score: 0.9198318719863892
  - Access Control Level: SYS_OR_SIG and the following code:
DisplayManagerService.-$$Nest$mconnectWifiDisplayInternal(this.this$0, p1);

- API Name: forgetWifiDisplay(Ljava/lang/String;)V with Similarity Score: 0.9020141363143921
  - Access Control Level: SYS_OR_SIG and the following code:
DisplayManagerService.-$$Nest$mforgetWifiDisplayInternal(this.this$0, p1);

