This is path 1 for the API with depth 2:
public void releaseVirtualDisplay(IVirtualDisplayCallback p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v2 = p1.asBinder();
	if (this.mVirtualDisplayAdapter != 0) {
		DisplayDevice v5 = this.mVirtualDisplayAdapter.releaseVirtualDisplayLocked(v2);
		if (v5 == 0) {
			this.mDisplayDeviceRepo.onDisplayDeviceEvent(v5, 3);
			Binder.restoreCallingIdentity(v1);
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void releaseVirtualDisplay(IVirtualDisplayCallback p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v2 = p1.asBinder();
	this.this$0.releaseVirtualDisplayInternal(v2);
	Binder.restoreCallingIdentity(v1);
	return;
}


This is path 3 for the API with depth 0:
public void releaseVirtualDisplay(IVirtualDisplayCallback p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v2 = p1.asBinder();
	DisplayManagerService.-$$Nest$mreleaseVirtualDisplayInternal(this.this$0, v2);
	Binder.restoreCallingIdentity(v1);
	return;
}
