This is path 1 for the API with depth 2:
public BrightnessConfiguration getBrightnessConfigurationForDisplay(String p1, int p2){
	long v6 = Binder.clearCallingIdentity();
	Object v9 = this.mContext.getSystemService(UserManage.class);
	UserManager v8 = v9;
	UserManager v7 = v8;
	int v10 = v7.getUserSerialNumber(p2);
	DisplayManagerService$SyncRoot v11 = DisplayManagerService.-$$Nest$fgetmSyncRoot(this.this$0);
	BrightnessConfiguration v14 = this.mPersistentDataStore.getBrightnessConfigurationForDisplayLocked(p1, v10);
	if (v14 != 0) {
		BrightnessConfiguration v15 = this.mPersistentDataStore.getBrightnessConfiguration(v10);
		BrightnessConfiguration v13 = v14;
		BrightnessConfiguration v12 = v13;
		if (v12 != 0) {
			DisplayDevice v18 = this.mDisplayDeviceRepo.getByUniqueIdLocked(p1);
			LogicalDisplay v19 = this.mLogicalDisplayMapper.getDisplayLocked(v18);
			if (v19 == 0) {
				int v20 = v19.getDisplayIdLocked();
				Object v21 = this.mDisplayPowerControllers.get(v20);
				DisplayPowerController v17 = v21;
				DisplayPowerController v16 = v17;
				if (v16 == 0) {
					if (this.mAutomaticBrightnessController != 0) {
						BrightnessConfiguration v24 = this.mInteractiveModeBrightnessMapper.getDefaultConfig();
						BrightnessConfiguration v23 = v24;
						BrightnessConfiguration v22 = v23;
						Binder.restoreCallingIdentity(v6);
						return v12;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public BrightnessConfiguration getBrightnessConfigurationForDisplay(String p1, int p2){
	long v6 = Binder.clearCallingIdentity();
	UserManager v8 = this.this$0.getUserManager();
	UserManager v7 = v8;
	int v9 = v7.getUserSerialNumber(p2);
	DisplayManagerService$SyncRoot v10 = this.mSyncRoot;
	BrightnessConfiguration v12 = this.this$0.getBrightnessConfigForDisplayWithPdsFallbackLocked(p1, v9);
	BrightnessConfiguration v11 = v12;
	if (v11 != 0) {
		DisplayPowerController v14 = this.this$0.getDpcFromUniqueIdLocked(p1);
		DisplayPowerController v13 = v14;
		if (v13 == 0) {
			if (this.mAutomaticBrightnessController != 0) {
				BrightnessConfiguration v16 = this.mAutomaticBrightnessController.getDefaultConfig();
				BrightnessConfiguration v15 = v16;
				Binder.restoreCallingIdentity(v6);
				return v11;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public BrightnessConfiguration getBrightnessConfigurationForDisplay(String p1, int p2){
	long v6 = Binder.clearCallingIdentity();
	UserManager v7 = DisplayManagerService.-$$Nest$mgetUserManager(this.this$0);
	int v8 = v7.getUserSerialNumber(p2);
	DisplayManagerService$SyncRoot v9 = DisplayManagerService.-$$Nest$fgetmSyncRoot(this.this$0);
	BrightnessConfiguration v10 = DisplayManagerService.-$$Nest$mgetBrightnessConfigForDisplayWithPdsFallbackLocked(this.this$0, p1, v8);
	if (v10 != 0) {
		DisplayPowerController v11 = DisplayManagerService.-$$Nest$mgetDpcFromUniqueIdLocked(this.this$0, p1);
		if (v11 == 0) {
			BrightnessConfiguration v12 = v11.getDefaultBrightnessConfiguration();
			Binder.restoreCallingIdentity(v6);
			return v10;
		}
	}
}
