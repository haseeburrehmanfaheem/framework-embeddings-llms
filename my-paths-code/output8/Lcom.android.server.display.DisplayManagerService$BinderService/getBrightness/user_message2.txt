The method getBrightness has the following code snippet:

This is path 1 for the API with depth 2:
public float getBrightness(int p1){
	long v3 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v4 = this.mSyncRoot;
	SparseArray v5 = this.mDisplayPowerControllers;
	Object v6 = v5.get(p1);
	if (v6 == 0) {
		float v8 = this.mBrightness;
		boolean v9 = Float.isNaN(v8);
		if (v9 == 0) {
			float v11 = MathUtils.constrain(v8, 0, 1065353216);
			float v10 = v11;
			float v7 = v10;
			Binder.restoreCallingIdentity(v3);
			return v7;
		}
	}
}


This is path 2 for the API with depth 1:
public float getBrightness(int p1){
	long v3 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v4 = this.mSyncRoot;
	SparseArray v5 = this.mDisplayPowerControllers;
	Object v6 = v5.get(p1);
	if (v6 == 0) {
		float v8 = this.mBrightnessSetting.getBrightness();
		boolean v9 = Float.isNaN(v8);
		if (v9 == 0) {
			float v10 = DisplayPowerController.clampAbsoluteBrightness(v8);
			float v7 = v10;
			Binder.restoreCallingIdentity(v3);
			return v7;
		}
	}
}


This is path 3 for the API with depth 0:
public float getBrightness(int p1){
	long v3 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v4 = DisplayManagerService.-$$Nest$fgetmSyncRoot(this.this$0);
	SparseArray v5 = DisplayManagerService.-$$Nest$fgetmDisplayPowerControllers(this.this$0);
	Object v6 = v5.get(p1);
	if (v6 == 0) {
		float v7 = v6.getScreenBrightnessSetting();
		Binder.restoreCallingIdentity(v3);
		return v7;
	}
}

and the following sink code:
['float v8 = this.mBrightnessSetting.getBrightness();\nfloat v10 = DisplayPowerController.clampAbsoluteBrightness(v8);\nfloat v7 = v10;\nreturn v7;', 'float v8 = this.mBrightness;\nfloat v11 = MathUtils.constrain(v8, 0, 1065353216);\nfloat v10 = v11;\nfloat v7 = v10;\nreturn v7;']

The method getBrightness has the following similar APIs:

- API Name: setBrightness(IF)V with Similarity Score: 0.7790595889091492
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v4 = DisplayManagerService.isValidBrightness(p2);
this.mBrightnessSetting.setBrightness(p2);
PersistentDataStore v11 = this.mPersistentDataStore;
PersistentDataStore.save();

- API Name: getBrightnessConfigurationForUser(I)Landroid/hardware/display/BrightnessConfiguration; with Similarity Score: 0.755050778388977
  - Access Control Level: SYS_OR_SIG and the following code:
BrightnessConfiguration v6 = p0.getBrightnessConfigurationForDisplay(v5, p1);
return v6;

