The method connectWifiDisplay has the following code snippet:

This is path 1 for the API with depth 2:
public void connectWifiDisplay(String p1){
	long v3 = Binder.clearCallingIdentity();
	if (this.mWifiDisplayAdapter == 0) {
		this.mWifiDisplayAdapter.requestConnectLocked(p1);
		Binder.restoreCallingIdentity(v3);
		return;
	}
}


This is path 2 for the API with depth 1:
public void connectWifiDisplay(String p1){
	long v3 = Binder.clearCallingIdentity();
	this.this$0.connectWifiDisplayInternal(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}


This is path 3 for the API with depth 0:
public void connectWifiDisplay(String p1){
	long v3 = Binder.clearCallingIdentity();
	DisplayManagerService.-$$Nest$mconnectWifiDisplayInternal(this.this$0, p1);
	Binder.restoreCallingIdentity(v3);
	return;
}

and the following sink code:
['this.mWifiDisplayAdapter.requestConnectLocked(p1);', 'this.this$0.connectWifiDisplayInternal(p1);', 'DisplayManagerService.-$$Nest$mconnectWifiDisplayInternal(this.this$0, p1);']

The method connectWifiDisplay has the following similar APIs:

- API Name: pauseWifiDisplay()V with Similarity Score: 0.9198318719863892
  - Access Control Level: SYS_OR_SIG and the following code:
DisplayManagerService.-$$Nest$mpauseWifiDisplayInternal(this.this$0);

- API Name: forgetWifiDisplay(Ljava/lang/String;)V with Similarity Score: 0.9096927046775818
  - Access Control Level: SYS_OR_SIG and the following code:
DisplayManagerService.-$$Nest$mforgetWifiDisplayInternal(this.this$0, p1);

