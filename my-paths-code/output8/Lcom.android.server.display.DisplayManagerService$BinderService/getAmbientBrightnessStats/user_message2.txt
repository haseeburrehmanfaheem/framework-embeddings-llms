The method getAmbientBrightnessStats has the following code snippet:

This is path 1 for the API with depth 2:
public ParceledListSlice getAmbientBrightnessStats(){
	int v3 = Binder.getCallingUid();
	int v4 = UserHandle.getUserId(v3);
	long v5 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v6 = this.mSyncRoot;
	SparseArray v7 = this.mDisplayPowerControllers;
	Object v8 = v7.get(0);
	if (this.mBrightnessTracker != 0) {
		if (this.mAmbientBrightnessStatsTracker == 0) {
			ArrayList v11 = this.mAmbientBrightnessStatsTracker.getUserStats(v4);
			if (v11 == 0) {
				ParceledListSlice v12 = new ParceledListSlice(v11);
				ParceledListSlice v10 = v12;
				ParceledListSlice v9 = v10;
				Binder.restoreCallingIdentity(v5);
				return v9;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice getAmbientBrightnessStats(){
	int v3 = Binder.getCallingUid();
	int v4 = UserHandle.getUserId(v3);
	long v5 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v6 = this.mSyncRoot;
	SparseArray v7 = this.mDisplayPowerControllers;
	Object v8 = v7.get(0);
	if (this.mBrightnessTracker != 0) {
		ParceledListSlice v10 = this.mBrightnessTracker.getAmbientBrightnessStats(v4);
		ParceledListSlice v9 = v10;
		Binder.restoreCallingIdentity(v5);
		return v9;
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getAmbientBrightnessStats(){
	int v3 = Binder.getCallingUid();
	int v4 = UserHandle.getUserId(v3);
	long v5 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v6 = DisplayManagerService.-$$Nest$fgetmSyncRoot(this.this$0);
	SparseArray v7 = DisplayManagerService.-$$Nest$fgetmDisplayPowerControllers(this.this$0);
	Object v8 = v7.get(0);
	ParceledListSlice v9 = v8.getAmbientBrightnessStats(v4);
	Binder.restoreCallingIdentity(v5);
	return v9;
}

and the following sink code:
['int v3 = Binder.getCallingUid();\nint v4 = UserHandle.getUserId(v3);\nlong v5 = Binder.clearCallingIdentity();\nSparseArray v7 = this.mDisplayPowerControllers;\nObject v8 = v7.get(0);\nParceledListSlice v9 = v8.getAmbientBrightnessStats(v4);\nBinder.restoreCallingIdentity(v5);\nreturn v9;', 'int v3 = Binder.getCallingUid();\nint v4 = UserHandle.getUserId(v3);\nlong v5 = Binder.clearCallingIdentity();\nParceledListSlice v10 = this.mBrightnessTracker.getAmbientBrightnessStats(v4);\nParceledListSlice v9 = v10;\nBinder.restoreCallingIdentity(v5);\nreturn v9;']

The method getAmbientBrightnessStats has the following similar APIs:

- API Name: getDisplayIds()[I with Similarity Score: 0.7736330628395081
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingUid();
DisplayInfo v9 = v8.getDisplayInfoLocked();
boolean v10 = v9.hasAccess(v1);
[I v12 = Arrays.copyOfRange(v7, 0, 0);
return v5;

- API Name: generateCinematicEffect(Landroid/app/wallpapereffectsgeneration/CinematicEffectRequest;Landroid/app/wallpapereffectsgeneration/ICinematicEffectListener;)V with Similarity Score: 0.7594531774520874
  - Access Control Level: SYS_OR_SIG and the following code:
int v15 = Binder.getCallingUid();
boolean v16 = v14.isCallerRecents(v15);
v1.accept(v20);
Binder.restoreCallingIdentity(v18);

