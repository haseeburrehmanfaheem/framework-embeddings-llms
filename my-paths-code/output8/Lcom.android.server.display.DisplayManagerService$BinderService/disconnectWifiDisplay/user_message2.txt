The method disconnectWifiDisplay has the following code snippet:

This is path 1 for the API with depth 2:
public void disconnectWifiDisplay(){
	long v1 = Binder.clearCallingIdentity();
	if (this.mWifiDisplayAdapter == 0) {
		this.mWifiDisplayAdapter.requestDisconnectLocked();
		Binder.restoreCallingIdentity(v1);
		return;
	}
}


This is path 2 for the API with depth 1:
public void disconnectWifiDisplay(){
	long v1 = Binder.clearCallingIdentity();
	this.this$0.disconnectWifiDisplayInternal();
	Binder.restoreCallingIdentity(v1);
	return;
}


This is path 3 for the API with depth 0:
public void disconnectWifiDisplay(){
	long v1 = Binder.clearCallingIdentity();
	DisplayManagerService.-$$Nest$mdisconnectWifiDisplayInternal(this.this$0);
	Binder.restoreCallingIdentity(v1);
	return;
}

and the following sink code:
['this.mWifiDisplayAdapter.requestDisconnectLocked();\nthis.this$0.disconnectWifiDisplayInternal();\nDisplayManagerService.-$$Nest$mdisconnectWifiDisplayInternal(this.this$0);']

The method disconnectWifiDisplay has the following similar APIs:

- API Name: stopWifiDisplayScan()V with Similarity Score: 0.817211925983429
  - Access Control Level: SYS_OR_SIG and the following code:
this.this$0.stopWifiDisplayScanInternal(v3);
DisplayManagerService.-$$Nest$mstopWifiDisplayScanInternal(this.this$0, v3);

- API Name: connectWifiDisplay(Ljava/lang/String;)V with Similarity Score: 0.815485954284668
  - Access Control Level: SYS_OR_SIG and the following code:
DisplayManagerService.-$$Nest$mconnectWifiDisplayInternal(this.this$0, p1);

