The method getSerial in the following class Lcom.android.server.os.DeviceIdentifiersPolicyService$DeviceIdentifiersPolicy has the following code snippet:

This is path 1 for the API with depth 2:
public String getSerial(){
	boolean v3 = TelephonyPermissions.checkCallingOrSelfUseIccAuthWithDeviceIdentifier(this.mContext, 0, 0, "getSerial");
	if (v3 == 0) {
		boolean v2 = v4;
		boolean v1 = v2;
		if (v1 != 0) {
			String v5 = SystemProperties.get("ro.serialno", "unknown");
			return v5;
		}
	}
}


This is path 2 for the API with depth 1:
public String getSerial(){
	boolean v2 = TelephonyPermissions.checkCallingOrSelfReadDeviceIdentifiers(this.mContext, -1, 0, 0, "getSerial");
	boolean v1 = v2;
	if (v1 != 0) {
		String v3 = SystemProperties.get("ro.serialno", "unknown");
		return v3;
	}
}


This is path 3 for the API with depth 0:
public String getSerial(){
	boolean v1 = TelephonyPermissions.checkCallingOrSelfReadDeviceIdentifiers(this.mContext, 0, 0, "getSerial");
	if (v1 != 0) {
		String v2 = SystemProperties.get("ro.serialno", "unknown");
		return v2;
	}
}

and the following sink code:
['boolean v3 = TelephonyPermissions.checkCallingOrSelfUseIccAuthWithDeviceIdentifier(this.mContext, 0, 0, "getSerial");\nString v5 = SystemProperties.get("ro.serialno", "unknown");\nreturn v5;', 'boolean v2 = TelephonyPermissions.checkCallingOrSelfReadDeviceIdentifiers(this.mContext, -1, 0, 0, "getSerial");\nString v3 = SystemProperties.get("ro.serialno", "unknown");\nreturn v3;', 'boolean v1 = TelephonyPermissions.checkCallingOrSelfReadDeviceIdentifiers(this.mContext, 0, 0, "getSerial");\nString v2 = SystemProperties.get("ro.serialno", "unknown");\nreturn v2;']

The method getSerial has the following similar APIs:

- API Name: getSerialForPackage(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; in the following Class: Lcom.android.server.os.DeviceIdentifiersPolicyService$DeviceIdentifiersPolicy with the following sink code entries:
  - Similarity: 0.9904474020004272, Code:
boolean v7 = TelephonyPermissions.checkCallingOrSelfReadDeviceIdentifiers(this.mContext, -1, p1, p2, "getSerial");
String v8 = SystemProperties.get("ro.serialno", "unknown");
return v8;
  - Similarity: 0.9794731736183167, Code:
boolean v2 = TelephonyPermissions.checkCallingOrSelfReadDeviceIdentifiers(this.mContext, p1, p2, "getSerial");
String v3 = SystemProperties.get("ro.serialno", "unknown");
return v3;
  - Similarity: 0.966643214225769, Code:
boolean v8 = TelephonyPermissions.checkCallingOrSelfUseIccAuthWithDeviceIdentifier(this.mContext, p1, p2, "getSerial");
String v10 = SystemProperties.get("ro.serialno", "unknown");
return v10;
  - Access Control Level: DANGEROUS

- API Name: checkDeviceIdentifierAccess(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)I in the following Class: Lcom.android.server.pm.permission.LegacyPermissionManagerService with the following sink code entries:
  - Similarity: 0.7484014630317688, Code:
long v4 = this.mInjector.clearCallingIdentity();
Object v6 = this.mContext.getSystemService("appops");
int v7 = v5.noteOpNoThrow("android:read_device_identifiers", p5, p1, p3, p2);
this.mInjector.restoreCallingIdentity(v4);
Object v10 = this.mContext.getSystemService("device_policy");
boolean v11 = v9.hasDeviceIdentifierAccess(p1, p4, p5);
  - Access Control Level: SYS_OR_SIG

