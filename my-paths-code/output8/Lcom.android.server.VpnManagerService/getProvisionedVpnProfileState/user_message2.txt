The method getProvisionedVpnProfileState has the following code snippet:

This is path 1 for the API with depth 2:
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, "No package name provided");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	if (v12 != 0) {
		Binder.restoreCallingIdentity(v10);
		boolean v15 = Vpn.isCurrentPreparedPackage(p1);
		if (v15 == 0) {
			boolean v16 = Vpn.isIkev2VpnRunner();
			if (v16 == 0) {
				boolean v14 = 1;
				if (v14 == 0) {
					VpnProfileState v18 = new VpnProfileState(v19,v21,this.mAlwaysOn,this.mLockdown);
					int v19 = Vpn.getStateFromLegacyState(this.mLegacyState);
					boolean v20 = Vpn.isIkev2VpnRunner();
					if (v20 == 0) {
						String v21 = Vpn.getSessionKeyLocked();
						VpnProfileState v17 = v18;
						VpnProfileState v7 = v17;
						return v7;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, "No package name provided");
	Vpn.enforceNotRestrictedUser();
	boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
	if (v10 == 0) {
		VpnProfileState v11 = Vpn.makeVpnProfileStateLocked();
		VpnProfileState v7 = v11;
		return v7;
	}
}


This is path 3 for the API with depth 0:
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);
	return v5;
}

and the following sink code:
['int v19 = Vpn.getStateFromLegacyState(this.mLegacyState);\nString v21 = Vpn.getSessionKeyLocked();\nVpnProfileState v18 = new VpnProfileState(v19,v21,this.mAlwaysOn,this.mLockdown);\nVpnProfileState v7 = v17;\nreturn v7;', 'boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);\nVpnProfileState v11 = Vpn.makeVpnProfileStateLocked();\nVpnProfileState v7 = v11;\nreturn v7;', 'VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);\nreturn v5;']

The method getProvisionedVpnProfileState has the following similar APIs:

- API Name: startVpnProfile(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.8543933033943176
  - Access Control Level: SYS_OR_SIG and the following code:
Vpn.prepare(p1, 0, 2)
VpnProfile v13 = Vpn.getVpnProfilePrivileged(p1)
Vpn.startVpnProfilePrivileged(v13, p1)
String v16 = Vpn.getSessionKeyLocked()
return v8;

- API Name: deleteVpnProfile(Ljava/lang/String;)V with Similarity Score: 0.8540958762168884
  - Access Control Level: SYS_OR_SIG and the following code:
Vpn.verifyCallingUidAndPackage(p1);
Vpn.enforceNotRestrictedUser();
boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
if (v10 == 0) { ... }
VpnProfileStore v12 = Vpn.getVpnProfileStore();
String v13 = Vpn.getProfileNameForPackage(p1);
boolean v14 = v12.remove(v13);

