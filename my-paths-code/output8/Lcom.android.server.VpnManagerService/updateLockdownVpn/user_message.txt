This is path 1 for the API with depth 2:
public boolean updateLockdownVpn(){
	byte[] v6 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");
	byte[] v5 = v6;
	if (v5 == 0) {
		boolean v4 = 1;
		this.mLockdownEnabled = v4;
		if (v4 != 0) {
			ILegacyKeystore v9 = LegacyVpnProfileStore.getService();
			byte[] v10 = v9.get("LOCKDOWN_VPN", -1);
			if (ServiceSpecificException.errorCode == 7) {
				byte[] v8 = 0;
				byte[] v7 = v8;
				if (v7 != 0) {
					String v11 = new String(v7);
					StringBuilder v13 = new StringBuilder();
					StringBuilder v15 = v13.append("VPN_");
					StringBuilder v16 = v13.append(v11);
					String v17 = v13.toString();
					ILegacyKeystore v20 = LegacyVpnProfileStore.getService();
					byte[] v21 = v20.get(v17, -1);
					if (ServiceSpecificException.errorCode == 7) {
						byte[] v19 = 0;
						byte[] v18 = v19;
						VpnProfile v22 = VpnProfile.decode(v11, v18);
						if (v22 != 0) {
							int v23 = this.mDeps.getCallingUid();
							int v24 = UserHandle.getUserId(v23);
							Object v25 = this.mVpns.get(v24);
							if (v25 != 0) {
								LockdownVpnTracker v26 = new LockdownVpnTracker(this.mContext,this.mHandler,v25,v22);
								this.mLockdownTracker = 0;
								if (this.mLockdownTracker == 0) {
									LockdownVpnTracker.shutdownLocked();
									if (v26 == 0) {
										this.mLockdownTracker = v26;
										LockdownVpnTracker.initLocked();
										return 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean updateLockdownVpn(){
	byte[] v5 = this.mVpnProfileStore.get("LOCKDOWN_VPN");
	if (v5 == 0) {
		boolean v4 = 1;
		this.mLockdownEnabled = v4;
		if (v4 != 0) {
			byte[] v7 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");
			byte[] v6 = v7;
			if (v6 != 0) {
				String v8 = new String(v6);
				StringBuilder v10 = new StringBuilder();
				StringBuilder v12 = v10.append("VPN_");
				StringBuilder v13 = v10.append(v8);
				String v14 = v10.toString();
				byte[] v16 = LegacyVpnProfileStore.get(v14);
				byte[] v15 = v16;
				VpnProfile v17 = VpnProfile.decode(v8, v15);
				if (v17 != 0) {
					int v19 = Binder.getCallingUid();
					int v18 = v19;
					int v20 = UserHandle.getUserId(v18);
					Object v21 = this.mVpns.get(v20);
					if (v21 != 0) {
						LockdownVpnTracker v22 = new LockdownVpnTracker(this.mContext,this.mHandler,v21,v17);
						this.mLockdownTracker = 0;
						if (this.mLockdownTracker == 0) {
							this.mLockdownTracker.shutdown();
							if (v22 == 0) {
								this.mLockdownTracker = v22;
								v22.init();
								return 1;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	if (v4 != 0) {
		byte[] v5 = this.mVpnProfileStore.get("LOCKDOWN_VPN");
		if (v5 != 0) {
			String v6 = new String(v5);
			StringBuilder v8 = new StringBuilder();
			StringBuilder v10 = v8.append("VPN_");
			StringBuilder v11 = v8.append(v6);
			String v12 = v8.toString();
			byte[] v13 = this.mVpnProfileStore.get(v12);
			VpnProfile v14 = VpnProfile.decode(v6, v13);
			if (v14 != 0) {
				int v15 = this.mDeps.getCallingUid();
				int v16 = UserHandle.getUserId(v15);
				Object v17 = this.mVpns.get(v16);
				if (v17 != 0) {
					StringBuilder v18 = new StringBuilder();
					StringBuilder v20 = v18.append("VPN for user ");
					StringBuilder v21 = v18.append(v16);
					StringBuilder v22 = v18.append(" not ready yet. Skipping lockdown");
					String v23 = v18.toString();
					VpnManagerService.logw(v23);
					return 0;
				}
			}
		}
	}
}
