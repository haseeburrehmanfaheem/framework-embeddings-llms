The method stopVpnProfile in the following class Lcom.android.server.VpnManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, "No package name provided");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	if (v12 != 0) {
		Binder.restoreCallingIdentity(v10);
		boolean v15 = Vpn.isCurrentPreparedPackage(p1);
		if (v15 == 0) {
			boolean v16 = Vpn.isIkev2VpnRunner();
			if (v16 == 0) {
				boolean v14 = 1;
				if (v14 == 0) {
					boolean v18 = SdkLevel.isAtLeastT();
					if (v18 == 0) {
						boolean v19 = Vpn.isVpnApp(p1);
						if (v19 == 0) {
							String v20 = Vpn.getSessionKeyLocked();
							VpnProfileState v21 = Vpn.makeVpnProfileStateLocked();
							Intent v22 = Vpn.buildVpnManagerEventIntent("android.net.category.EVENT_DEACTIVATED_BY_USER", -1, -1, p1, v20, v21, 0, 0, 0);
							this.mVpnRunner.exit();
							if (v22 == 0) {
								boolean v24 = Vpn.isVpnApp(p1);
								if (v24 == 0) {
									Vpn.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, v22);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, "No package name provided");
	Vpn.enforceNotRestrictedUser();
	boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
	if (v10 == 0) {
		Vpn.stopVpnRunnerAndNotifyAppLocked(p1);
		return;
	}
}


This is path 3 for the API with depth 0:
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	v4.stopVpnProfile(p1);
	return;
}

and the following sink code:
['Vpn.buildVpnManagerEventIntent("android.net.category.EVENT_DEACTIVATED_BY_USER", -1, -1, p1, v20, v21, 0, 0, 0);\nthis.mVpnRunner.exit();\nVpn.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, v22);', 'Vpn.stopVpnRunnerAndNotifyAppLocked(p1);', 'this.mVpns.get(v3).stopVpnProfile(p1);']

The method stopVpnProfile has the following similar APIs:

- API Name: deleteVpnProfile(Ljava/lang/String;)V in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.8768572807312012, Code:
Object v3 = this.mVpns.get(v2);
v3.deleteVpnProfile(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: factoryReset()V in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.796298086643219, Code:
this.mVpnProfileStore.remove("LOCKDOWN_VPN");
p0.setLockdownTracker(0);
  - Access Control Level: SYS_OR_SIG

- API Name: getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo; in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.757869303226471, Code:
Object v2 = this.mVpns.get(p1);
LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.7412591576576233, Code:
boolean v3 = p0.isLockdownVpnEnabled();
Object v4 = this.mVpns.get(p1);
StringBuilder v5 = new StringBuilder();
VpnManagerService.logw(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: startVpnProfile(Ljava/lang/String;)Ljava/lang/String; in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.7369817495346069, Code:
p0.verifyCallingUidAndPackage(p1, v1)
String v6 = v5.startVpnProfile(p1)
return v6;
  - Access Control Level: SYS_OR_SIG

