This is path 1 for the API with depth 2:
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	if (v2 == 0) {
		boolean v6 = "[Legacy VPN]".equals(p1);
		if (v6 == 0) {
			PackageManager v7 = this.mContext.getPackageManager();
			long v8 = Binder.clearCallingIdentity();
			int v9 = v7.getPackageUidAsUser(p1, this.mUserId);
			Binder.restoreCallingIdentity(v8);
			int v5 = -1;
			if (v5 == -1) {
				boolean v11 = "[Legacy VPN]".equals(p1);
				if (v11 == 0) {
					long v12 = Binder.clearCallingIdentity();
					if (p3 == -1) {
						if (p3 == 1) {
							if (p3 == 2) {
								String v13 = new String(1);
								Binder.restoreCallingIdentity(v12);
								boolean v3 = 0;
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	if (v2 == 0) {
		int v5 = Vpn.getAppUid(p1, this.mUserId);
		if (v5 == -1) {
			boolean v6 = "[Legacy VPN]".equals(p1);
			if (v6 == 0) {
				long v7 = Binder.clearCallingIdentity();
				if (p3 == -1) {
					if (p3 == 1) {
						if (p3 == 2) {
							String v8 = new String(1);
							Binder.restoreCallingIdentity(v7);
							boolean v3 = 0;
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	if (v2 == 0) {
		boolean v3 = v2.setPackageAuthorization(p1, p3);
		return;
	}
}
