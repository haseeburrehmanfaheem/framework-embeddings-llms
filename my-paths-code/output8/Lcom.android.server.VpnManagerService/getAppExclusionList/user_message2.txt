The method getAppExclusionList in the following class Lcom.android.server.VpnManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v5 = Binder.clearCallingIdentity();
		VpnProfileStore v6 = this.mVpnProfileStore;
		StringBuilder v8 = new StringBuilder();
		StringBuilder v10 = v8.append("VPNAPPEXCLUDED_");
		StringBuilder v11 = v8.append(this.mUserId);
		StringBuilder v12 = v8.append("_");
		StringBuilder v13 = v8.append(p2);
		String v14 = v8.toString();
		String v7 = v14;
		byte[] v16 = LegacyVpnProfileStore.get(v7);
		byte[] v15 = v16;
		if (v15 == 0) {
			if (v15.length != 0) {
				ByteArrayInputStream v18 = new ByteArrayInputStream(v15);
				PersistableBundle v20 = PersistableBundle.readFromStream(v18);
				PersistableBundle v17 = v20;
				int v22 = v17.getInt("COLLECTION_LENGTH");
				ArrayList v23 = new ArrayList(v22);
				if (0 >= v22) {
					Object v25 = new Object(1);
					Integer v26 = Integer.valueOf(0);
					String v27 = String.format("LIST_ITEM_%d", v25);
					PersistableBundle v28 = v17.getPersistableBundle(v27);
					Object v29 = PersistableBundleUtils.STRING_DESERIALIZER.fromPersistableBundle(v28);
					boolean v30 = v23.add(v29);
					if ((0 + 1) >= v22) {
						List v21 = v23;
						Binder.restoreCallingIdentity(v5);
						List v4 = v21;
						return v4;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v5 = Binder.clearCallingIdentity();
		VpnProfileStore v6 = Vpn.getVpnProfileStore();
		String v7 = Vpn.getVpnAppExcludedForPackage(p2);
		byte[] v8 = v6.get(v7);
		if (v8 == 0) {
			if (v8.length != 0) {
				ArrayList v9 = new ArrayList();
				Binder.restoreCallingIdentity(v5);
				List v4 = v9;
				return v4;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		StringBuilder v4 = new StringBuilder();
		StringBuilder v6 = v4.append("User ");
		StringBuilder v7 = v4.append(p1);
		StringBuilder v8 = v4.append(" has no Vpn configuration");
		String v9 = v4.toString();
		VpnManagerService.logw(v9);
		return 0;
	}
}

and the following sink code:
['String v14 = v8.toString();\nbyte[] v16 = LegacyVpnProfileStore.get(v7);\nByteArrayInputStream v18 = new ByteArrayInputStream(v15);\nPersistableBundle v20 = PersistableBundle.readFromStream(v18);\nArrayList v23 = new ArrayList(v22);\nList v21 = v23;\nreturn v4;', 'String v7 = Vpn.getVpnAppExcludedForPackage(p2);\nbyte[] v8 = v6.get(v7);\nArrayList v9 = new ArrayList();\nList v4 = v9;\nreturn v4;']

The method getAppExclusionList has the following similar APIs:

- API Name: setAppExclusionList(ILjava/lang/String;Ljava/util/List;)Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.8002212643623352, Code:
Object v3 = this.mVpns.get(p1);
PersistableBundle v11 = PersistableBundleUtils.fromList(p3, PersistableBundleUtils.STRING_SERIALIZER);
byte[] v12 = PersistableBundleUtils.toDiskStableBytes(v11);
VpnProfileStore v14 = Vpn.getVpnProfileStore();
String v15 = Vpn.getVpnAppExcludedForPackage(p2);
boolean v16 = v14.put(v15, v12);
  - Similarity: 0.7322674989700317, Code:
Vpn.enforceNotRestrictedUser();
boolean v6 = Vpn.storeAppExclusionList(p2, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: updateLockdownVpn()Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.7690684795379639, Code:
byte[] v5 = this.mVpnProfileStore.get("LOCKDOWN_VPN");
String v6 = new String(v5);
StringBuilder v10 = v8.append("VPN_");
StringBuilder v11 = v8.append(v6);
VpnProfile v14 = VpnProfile.decode(v6, v13);
  - Similarity: 0.7573567628860474, Code:
byte[] v5 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");
String v8 = new String(v6);
StringBuilder v12 = v10.append("VPN_");
StringBuilder v13 = v10.append(v8);
VpnProfile v17 = VpnProfile.decode(v8, v15);
LockdownVpnTracker v22 = new LockdownVpnTracker(this.mContext, this.mHandler, v21, v17);
this.mLockdownTracker = v22;
  - Similarity: 0.7474066615104675, Code:
byte[] v6 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");
String v11 = new String(v7);
StringBuilder v13 = v10.append("VPN_");
StringBuilder v16 = v13.append(v11);
VpnProfile v22 = VpnProfile.decode(v11, v18);
LockdownVpnTracker v26 = new LockdownVpnTracker(this.mContext, this.mHandler, v25, v22);
this.mLockdownTracker = v26;
  - Access Control Level: SYS_OR_SIG

- API Name: deleteVpnProfile(Ljava/lang/String;)V in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.7578290700912476, Code:
Object v4 = this.mVpns.get(v3);
Object v6 = Objects.requireNonNull(p1, "No package name provided");
boolean v17 = Vpn.isCurrentPreparedPackage(p1);
if (v17 == 0) { ... }
VpnProfileStore v46 = this.mVpnProfileStore;
StringBuilder v48 = new StringBuilder();
String v54 = v48.toString();
boolean v56 = LegacyVpnProfileStore.remove(v47);
  - Access Control Level: SYS_OR_SIG

- API Name: isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.7271974086761475, Code:
VpnProfile v7 = Vpn.getVpnProfilePrivileged(p2);
Intent v11 = new Intent("android.net.VpnService");
Intent v13 = v11.setPackage(p2);
List v14 = v9.queryIntentServicesAsUser(v11, 128, this.mUserId);
  - Access Control Level: SYS_OR_SIG

- API Name: stopVpnProfile(Ljava/lang/String;)V in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.7258516550064087, Code:
Vpn.stopVpnRunnerAndNotifyAppLocked(p1);
  - Access Control Level: NONE

