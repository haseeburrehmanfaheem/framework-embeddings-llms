The method startVpnProfile in the following class Lcom.android.server.VpnManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v7 = this.mVpns.get(v5);
	Object v9 = Objects.requireNonNull(p1, "No package name provided");
	long v11 = Binder.clearCallingIdentity();
	UserInfo v12 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v13 = v12.isRestricted();
	if (v13 != 0) {
		Binder.restoreCallingIdentity(v11);
		if (v16 == 0) {
			if (p1 == 0) {
				Vpn.verifyCallingUidAndPackage(p1);
				if (0 == 0) {
					Vpn.verifyCallingUidAndPackage(0);
					if (p1 == 0) {
						if (this.mAlwaysOn == 0) {
							boolean v19 = Vpn.isCurrentPreparedPackage(p1);
							if (v19 != 0) {
								boolean v20 = Vpn.isCurrentPreparedPackage(p1);
								if (v20 != 0) {
									boolean v21 = p1.equals("[Legacy VPN]");
									if (v21 != 0) {
										boolean v22 = Vpn.isVpnPreConsented(this.mContext, p1, 2);
										if (v22 != 0) {
											if (0 == 0) {
												boolean v23 = 0.equals("[Legacy VPN]");
												if (v23 != 0) {
													boolean v24 = Vpn.isCurrentPreparedPackage(0);
													if (v24 == 0) {
														boolean v15 = 1;
														if (v15 == 0) {
															long v25 = Binder.clearCallingIdentity();
															boolean v27 = this.mDeps.isCallerSystem();
															if (v27 != 0) {
																VpnProfileStore v28 = Vpn.getVpnProfileStore();
																String v29 = Vpn.getProfileNameForPackage(p1);
																byte[] v30 = v28.get(v29);
																if (v30 != 0) {
																	VpnProfile v31 = VpnProfile.decode("", v30);
																	VpnProfile v26 = v31;
																	if (v26 == 0) {
																		boolean v48 = this.mVpnRunner instanceof Vpn$IkeV2VpnRunner;
																		if (v48 == 0) {
																			boolean v50 = Vpn.isIkev2VpnRunner();
																			if (v50 == 0) {
																				String v51 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
																				String v49 = v51;
																				Binder.restoreCallingIdentity(v25);
																				String v8 = v49;
																				return v8;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v7 = this.mVpns.get(v5);
	Object v9 = Objects.requireNonNull(p1, "No package name provided");
	Vpn.enforceNotRestrictedUser();
	boolean v11 = Vpn.prepare(p1, 0, 2);
	if (v11 == 0) {
		long v12 = Binder.clearCallingIdentity();
		VpnProfile v13 = Vpn.getVpnProfilePrivileged(p1);
		if (v13 == 0) {
			Vpn.startVpnProfilePrivileged(v13, p1);
			boolean v15 = Vpn.isIkev2VpnRunner();
			if (v15 == 0) {
				String v16 = Vpn.getSessionKeyLocked();
				Binder.restoreCallingIdentity(v12);
				String v8 = v16;
				return v8;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	String v6 = v5.startVpnProfile(p1);
	return v6;
}

and the following sink code:
['Vpn.prepare(p1, 0, 2)\nVpnProfile v13 = Vpn.getVpnProfilePrivileged(p1)\nVpn.startVpnProfilePrivileged(v13, p1)\nString v16 = Vpn.getSessionKeyLocked()\nreturn v8;', 'p0.verifyCallingUidAndPackage(p1, v1)\nString v6 = v5.startVpnProfile(p1)\nreturn v6;']

The method startVpnProfile has the following similar APIs:

- API Name: getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState; in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.8543933629989624, Code:
boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
VpnProfileState v11 = Vpn.makeVpnProfileStateLocked();
VpnProfileState v7 = v11;
return v7;
  - Similarity: 0.84114670753479, Code:
int v19 = Vpn.getStateFromLegacyState(this.mLegacyState);
String v21 = Vpn.getSessionKeyLocked();
VpnProfileState v18 = new VpnProfileState(v19,v21,this.mAlwaysOn,this.mLockdown);
VpnProfileState v7 = v17;
return v7;
  - Similarity: 0.7870297431945801, Code:
VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);
return v5;
  - Access Control Level: NONE

- API Name: deleteVpnProfile(Ljava/lang/String;)V in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.8194094896316528, Code:
Vpn.verifyCallingUidAndPackage(p1);
Vpn.enforceNotRestrictedUser();
boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
if (v10 == 0) { ... }
VpnProfileStore v12 = Vpn.getVpnProfileStore();
String v13 = Vpn.getProfileNameForPackage(p1);
boolean v14 = v12.remove(v13);
  - Access Control Level: SYS_OR_SIG

- API Name: prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.8135333061218262, Code:
Vpn.verifyCallingUidAndPackage(p1);
boolean v8 = Vpn.isCurrentPreparedPackage(p1);
boolean v11 = Vpn.isVpnPreConsented(this.mContext, p1, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.8074371814727783, Code:
boolean v3 = p0.isLockdownVpnEnabled();
Object v4 = this.mVpns.get(p1);
StringBuilder v5 = new StringBuilder();
VpnManagerService.logw(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.7831354141235352, Code:
VpnProfile v7 = Vpn.getVpnProfilePrivileged(p2);
Intent v11 = new Intent("android.net.VpnService");
Intent v13 = v11.setPackage(p2);
List v14 = v9.queryIntentServicesAsUser(v11, 128, this.mUserId);
  - Access Control Level: SYS_OR_SIG

