This is path 1 for the API with depth 2:
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v6 = Binder.clearCallingIdentity();
		UserInfo v7 = this.mUserManager.getUserInfo(this.mUserId);
		boolean v8 = v7.isRestricted();
		if (v8 != 0) {
			Binder.restoreCallingIdentity(v6);
			PersistableBundle v11 = PersistableBundleUtils.fromList(p3, PersistableBundleUtils.STRING_SERIALIZER);
			byte[] v12 = PersistableBundleUtils.toDiskStableBytes(v11);
			long v13 = Binder.clearCallingIdentity();
			VpnProfileStore v14 = Vpn.getVpnProfileStore();
			String v15 = Vpn.getVpnAppExcludedForPackage(p2);
			boolean v16 = v14.put(v15, v12);
			Binder.restoreCallingIdentity(v13);
			boolean v10 = 1;
			if (v10 != 0) {
				boolean v4 = 0;
				return v4;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		Vpn.enforceNotRestrictedUser();
		boolean v6 = Vpn.storeAppExclusionList(p2, p3);
		if (v6 != 0) {
			boolean v4 = 0;
			return v4;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		boolean v4 = v3.setAppExclusionList(p2, p3);
		return v4;
	}
}
