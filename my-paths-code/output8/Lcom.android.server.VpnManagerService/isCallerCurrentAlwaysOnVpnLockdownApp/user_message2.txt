The method isCallerCurrentAlwaysOnVpnLockdownApp in the following class Lcom.android.server.VpnManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	if (v6 != 0) {
		Vpn v4 = 0;
		Vpn v1 = v4;
		if (v1 == 0) {
			boolean v7 = v1.getLockdown();
			if (v7 == 0) {
				return 1;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	int v2 = this.mDeps.getCallingUid();
	Vpn v3 = VpnManagerService.getVpnIfOwner(v2);
	Vpn v1 = v3;
	if (v1 == 0) {
		boolean v4 = this.mLockdown;
		if (v4 == 0) {
			return 1;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	if (v1 == 0) {
		boolean v2 = v1.getLockdown();
		if (v2 == 0) {
			return 1;
		}
	}
}

and the following sink code:
['int v3 = Binder.getCallingUid();\nint v5 = UserHandle.getUserId(v2);\nObject v6 = this.mVpns.get(v5);', 'int v2 = this.mDeps.getCallingUid();\nVpn v3 = VpnManagerService.getVpnIfOwner(v2);', 'Vpn v1 = p0.getVpnIfOwner();']

The method isCallerCurrentAlwaysOnVpnLockdownApp has the following similar APIs:

- API Name: isCallerCurrentAlwaysOnVpnApp()Z in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.9400801062583923, Code:
Vpn v1 = p0.getVpnIfOwner();
boolean v2 = v1.getAlwaysOn();
  - Similarity: 0.8744343519210815, Code:
Vpn v3 = VpnManagerService.getVpnIfOwner(v2);
boolean v4 = this.mAlwaysOn;
  - Access Control Level: NONE

- API Name: getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo; in the following Class: Lcom.android.server.VpnManagerService with the following sink code entries:
  - Similarity: 0.8298642039299011, Code:
Object v2 = this.mVpns.get(p1);
LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: requestAd(Landroid/os/IBinder;Landroid/media/tv/AdRequest;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8085951805114746, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
TvInputManagerService$SessionState v10 = TvInputManagerService.getOrCreateUserStateLocked(v3);
ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(v8);
v12.requestAd(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo; in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8065324425697327, Code:
int v1 = Binder.getCallingPid();
int v2 = Binder.getCallingUid();
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "getTvInputInfo");
long v4 = Binder.clearCallingIdentity();
Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
  - Similarity: 0.7939562797546387, Code:
int v1 = Binder.getCallingPid();
int v2 = Binder.getCallingUid();
int v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "getTvInputInfo");
int v3 = v4;
long v5 = Binder.clearCallingIdentity();
Object v6 = this.mLock;
TvInputManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
  - Access Control Level: NONE

- API Name: addOnAppsChangedListener(Ljava/lang/String;Landroid/content/pm/IOnAppsChangedListener;)V in the following Class: Lcom.android.server.pm.LauncherAppsService$LauncherAppsImpl with the following sink code entries:
  - Similarity: 0.8023485541343689, Code:
int v3 = ILauncherApps$Stub.getCallingUid();
int v5 = UserHandle.getUserId(v2);
int v6 = this.mIPM.getPackageUid(p1, 794624, v5);
  - Access Control Level: NONE

