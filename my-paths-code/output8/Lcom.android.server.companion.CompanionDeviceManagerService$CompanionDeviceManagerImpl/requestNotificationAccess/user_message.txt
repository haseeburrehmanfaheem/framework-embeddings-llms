This is path 1 for the API with depth 2:
public PendingIntent requestNotificationAccess(ComponentName p1, int p2){
	String v1 = p1.getPackageName();
	Context v6 = this.this$0.getContext();
	PackageInfo v8 = PackageUtils.getPackageInfo(v6, v3, v1);
	if (PackageInfo.reqFeatures == 0) {
		if (0 >= PackageInfo.reqFeatures.length) {
			boolean v9 = "android.software.companion_device_setup".equals(FeatureInfo.name);
			if (v9 == 0) {
				if ((0 + 1) >= PackageInfo.reqFeatures.length) {
					boolean v10 = "android.software.companion_device_setup".equals(FeatureInfo.name);
					if (v10 == 0) {
						AssociationStoreImpl v11 = this.mAssociationStore;
						List v13 = AssociationStoreImpl.getAssociationsForUser(v3);
						AssociationStoreImpl$$ExternalSyntheticLambda0 v14 = new AssociationStoreImpl$$ExternalSyntheticLambda0(v1);
						List v16 = CollectionUtils.filter(v13, v14);
						List v17 = Collections.unmodifiableList(v16);
						List v12 = v17;
						boolean v18 = ArrayUtils.isEmpty(v12);
						Preconditions.checkState((v18 ^ 1), "App must have an association before calling this API");
						long v20 = Binder.clearCallingIdentity();
						Context v21 = this.this$0.getContext();
						Context v22 = this.this$0.getContext();
						Intent v23 = NotificationAccessConfirmationActivityContract.launcherIntent(v22, p2, p1);
						UserHandle v24 = new UserHandle(p2);
						PendingIntent v26 = PendingIntent.getActivityAsUser(v21, 0, v23, 1409286144, 0, v24);
						Binder.restoreCallingIdentity(v20);
						return v26;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public PendingIntent requestNotificationAccess(ComponentName p1, int p2){
	String v1 = p1.getPackageName();
	long v6 = Binder.clearCallingIdentity();
	Context v7 = this.this$0.getContext();
	Context v8 = this.this$0.getContext();
	Intent v10 = new Intent();
	String v12 = v8.getString(17040008);
	ComponentName v13 = ComponentName.unflattenFromString(v12);
	Intent v14 = v10.setComponent(v13);
	Intent v15 = v14.putExtra("user_id", p2);
	Intent v16 = v15.putExtra("component_name", p1);
	Intent v9 = v16;
	UserHandle v17 = new UserHandle(p2);
	PendingIntent v19 = PendingIntent.getActivityAsUser(v7, 0, v9, 1409286144, 0, v17);
	Binder.restoreCallingIdentity(v6);
	return v19;
}


This is path 3 for the API with depth 0:
public PendingIntent requestNotificationAccess(ComponentName p1, int p2){
	String v1 = p1.getPackageName();
	p0.checkCanCallNotificationApi(v1);
	long v3 = Binder.clearCallingIdentity();
	Context v4 = this.this$0.getContext();
	Context v5 = this.this$0.getContext();
	Intent v6 = NotificationAccessConfirmationActivityContract.launcherIntent(v5, p2, p1);
	UserHandle v7 = new UserHandle(p2);
	PendingIntent v9 = PendingIntent.getActivityAsUser(v4, 0, v6, 1409286144, 0, v7);
	Binder.restoreCallingIdentity(v3);
	return v9;
}
