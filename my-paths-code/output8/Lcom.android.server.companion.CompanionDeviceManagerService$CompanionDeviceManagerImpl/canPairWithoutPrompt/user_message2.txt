The method canPairWithoutPrompt in the following class Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canPairWithoutPrompt(String p1, String p2, int p3){
	AssociationStoreImpl v1 = this.mAssociationStore;
	MacAddress v4 = MacAddress.fromString(p2);
	Object v5 = this.mAddressMap.get(v4);
	if (v5 != 0) {
		ArrayList v6 = new ArrayList(v7);
		int v7 = v5.size();
		Iterator v9 = v5.iterator();
		boolean v10 = v9.hasNext();
		if (v10 == 0) {
			Object v11 = v9.next();
			Object v12 = this.mIdMap.get(v11);
			boolean v13 = v6.add(v12);
			boolean v14 = v9.hasNext();
			if (v14 == 0) {
				List v15 = Collections.unmodifiableList(v6);
				List v3 = v15;
				AssociationStoreImpl$$ExternalSyntheticLambda2 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);
				boolean v19 = CollectionUtils.isEmpty(v3);
				if (v19 == 0) {
					int v20 = v3.size();
					if (0 >= v20) {
						Object v21 = v3.get(0);
						boolean v22 = v16.test(v21);
						if (v22 == 0) {
							int v23 = v3.size();
							if ((0 + 1) >= v23) {
								Object v24 = v3.get((0 + 1));
								boolean v25 = v16.test(v24);
								if (v25 == 0) {
									Object v18 = v24;
									AssociationInfo v2 = v18;
									if (v2 != 0) {
										long v26 = System.currentTimeMillis();
										long v27 = v2.getTimeApprovedMs();
										if (((v26 - v27) < 600000) >= 0) {
											return 0;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean canPairWithoutPrompt(String p1, String p2, int p3){
	AssociationStoreImpl v1 = this.mAssociationStore;
	List v3 = AssociationStoreImpl.getAssociationsByAddress(p2);
	AssociationStoreImpl$$ExternalSyntheticLambda2 v4 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);
	Object v6 = CollectionUtils.find(v3, v4);
	AssociationInfo v2 = v6;
	if (v2 != 0) {
		long v7 = System.currentTimeMillis();
		long v8 = this.mTimeApprovedMs;
		if (((v7 - v8) < 600000) >= 0) {
			return 0;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean canPairWithoutPrompt(String p1, String p2, int p3){
	AssociationStoreImpl v1 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
	AssociationInfo v2 = v1.getAssociationsForPackageWithAddress(p3, p1, p2);
	if (v2 != 0) {
		long v3 = System.currentTimeMillis();
		long v4 = v2.getTimeApprovedMs();
		if (((v3 - v4) < 600000) >= 0) {
			return 0;
		}
	}
}

and the following sink code:
['List v3 = AssociationStoreImpl.getAssociationsByAddress(p2);\nAssociationStoreImpl$$ExternalSyntheticLambda2 v4 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);\nObject v6 = CollectionUtils.find(v3, v4);\nAssociationInfo v2 = v6;', 'AssociationInfo v2 = v1.getAssociationsForPackageWithAddress(p3, p1, p2);\nlong v3 = System.currentTimeMillis();\nlong v4 = v2.getTimeApprovedMs();']

The method canPairWithoutPrompt has the following similar APIs:

- API Name: legacyDisassociate(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.9420068264007568, Code:
List v5 = AssociationStoreImpl.getAssociationsByAddress(p1);
AssociationStoreImpl$$ExternalSyntheticLambda2 v6 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p2);
Object v8 = CollectionUtils.find(v5, v6);
int v11 = v4.getUserId();
String v12 = v4.getPackageName();
boolean v13 = PermissionsUtils.checkCallerCanManageAssociationsForPackage(v9, v11, v12);
  - Similarity: 0.8792281746864319, Code:
AssociationInfo v4 = this.mAssociationStore.getAssociationsForPackageWithAddress(p3, p2, p1);
Context v5 = CompanionDeviceManagerService.getContext();
AssociationInfo v6 = PermissionsUtils.sanitizeWithCallerChecks(v5, v4);
  - Access Control Level: SYS_OR_SIG

- API Name: registerDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.8824224472045898, Code:
PermissionsUtils.enforceCallerIsSystemOr(v4, p2);
AssociationInfo v7 = v6.getAssociationsForPackageWithAddress(v4, p2, p1);
v12.updateAssociation(v11);
  - Similarity: 0.8261930346488953, Code:
AssociationStoreImpl v10 = this.mAssociationStore;
List v12 = AssociationStoreImpl.getAssociationsByAddress(p1);
AssociationInfo$Builder v18 = new AssociationInfo$Builder(v11,0);
AssociationInfo v22 = new AssociationInfo(v23,v24,v25,v26,v27,v28,v29,this.mNotifyOnDeviceNearby,this.mRevoked,v30);
this.mIdMap.put(v39, v21);
  - Access Control Level: SYS_OR_SIG

- API Name: unregisterDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.829710066318512, Code:
int v4 = UserHandle.getCallingUserId();
AssociationStoreImpl v10 = this.mAssociationStore;
List v12 = AssociationStoreImpl.getAssociationsByAddress(p1);
AssociationStoreImpl$$ExternalSyntheticLambda2 v13 = new AssociationStoreImpl$$ExternalSyntheticLambda2(v4,p2);
Object v15 = CollectionUtils.find(v12, v13);
AssociationInfo v11 = v15;
AssociationInfo$Builder v18 = new AssociationInfo$Builder(v11,0);
AssociationInfo$NonActionableBuilder v17 = v18;
AssociationInfo$Builder v20 = v17.setNotifyOnDeviceNearby(0);
AssociationInfo v22 = new AssociationInfo(v23,v24,v25,v26,v27,v28,v29,this.mNotifyOnDeviceNearby,this.mRevoked,v30);
  - Similarity: 0.7950270175933838, Code:
PermissionsUtils.enforceCallerIsSystemOr(v4, p2);
AssociationStoreImpl v6 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
AssociationInfo v7 = v6.getAssociationsForPackageWithAddress(v4, p2, p1);
AssociationInfo$NonActionableBuilder v9 = AssociationInfo.builder(v7);
AssociationInfo$Builder v10 = v9.setNotifyOnDeviceNearby(0);
AssociationInfo v11 = v10.build();
  - Access Control Level: SYS_OR_SIG

- API Name: getAssociations(Ljava/lang/String;I)Ljava/util/List; in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.8217673301696777, Code:
AssociationStoreImpl v19 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
List v22 = AssociationStoreImpl.getAssociationsForUserLocked(p2);
AssociationStoreImpl$$ExternalSyntheticLambda0 v23 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
int v26 = CollectionUtils.size(v21);
Object v27 = v21.get(0);
boolean v28 = v23.test(v27);
return v20;
  - Similarity: 0.7982137203216553, Code:
PackageUtils$$ExternalSyntheticLambda0 v14 = new PackageUtils$$ExternalSyntheticLambda0(v12,p1,v13,p2);
Object v16 = Binder.withCleanCallingIdentity(v14);
List v15 = AssociationStoreImpl.getAssociationsForUser(p2);
AssociationStoreImpl$$ExternalSyntheticLambda0 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
List v18 = CollectionUtils.filter(v15, v16);
return v19;
  - Access Control Level: SYS_OR_SIG

- API Name: hasNotificationAccess(Landroid/content/ComponentName;)Z in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.7879936695098877, Code:
String v1 = p1.getPackageName();
List v13 = AssociationStoreImpl.getAssociationsForUser(v3);
AssociationStoreImpl$$ExternalSyntheticLambda0 v14 = new AssociationStoreImpl$$ExternalSyntheticLambda0(v1);
List v16 = CollectionUtils.filter(v13, v14);
boolean v22 = v21.isNotificationListenerAccessGranted(p1);
  - Access Control Level: SYS_OR_SIG

