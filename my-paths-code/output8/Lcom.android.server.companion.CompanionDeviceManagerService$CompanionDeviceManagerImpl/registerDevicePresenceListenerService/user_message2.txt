The method registerDevicePresenceListenerService in the following class Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void registerDevicePresenceListenerService(String p1, String p2, int p3){
	int v4 = UserHandle.getCallingUserId();
	if (v9 == 0) {
		AssociationStoreImpl v10 = this.mAssociationStore;
		List v12 = AssociationStoreImpl.getAssociationsByAddress(p1);
		AssociationStoreImpl$$ExternalSyntheticLambda2 v13 = new AssociationStoreImpl$$ExternalSyntheticLambda2(v4,p2);
		Object v15 = CollectionUtils.find(v12, v13);
		AssociationInfo v11 = v15;
		if (v11 == 0) {
			boolean v16 = this.mNotifyOnDeviceNearby;
			if (1 != v16) {
				AssociationInfo$Builder v18 = new AssociationInfo$Builder(v11,0);
				AssociationInfo$NonActionableBuilder v17 = v18;
				AssociationInfo$Builder v20 = v17.setNotifyOnDeviceNearby(1);
				AssociationInfo v22 = new AssociationInfo(v23,v24,v25,v26,v27,v28,v29,this.mNotifyOnDeviceNearby,this.mRevoked,v30,this.mLastTimeConnectedMs);
				int v23 = AssociationInfo.-$$Nest$fgetmId(this.mOriginalInfo);
				int v24 = AssociationInfo.-$$Nest$fgetmUserId(this.mOriginalInfo);
				String v25 = AssociationInfo.-$$Nest$fgetmPackageName(this.mOriginalInfo);
				MacAddress v26 = AssociationInfo.-$$Nest$fgetmDeviceMacAddress(this.mOriginalInfo);
				CharSequence v27 = AssociationInfo.-$$Nest$fgetmDisplayName(this.mOriginalInfo);
				String v28 = AssociationInfo.-$$Nest$fgetmDeviceProfile(this.mOriginalInfo);
				boolean v29 = AssociationInfo.-$$Nest$fgetmSelfManaged(this.mOriginalInfo);
				long v30 = AssociationInfo.-$$Nest$fgetmTimeApprovedMs(this.mOriginalInfo);
				AssociationInfo v21 = v22;
				AssociationStoreImpl v32 = this.mAssociationStore;
				AssociationStoreImpl.checkNotRevoked(v21);
				int v35 = v21.getId();
				Integer v36 = Integer.valueOf(v35);
				Object v37 = this.mIdMap.get(v36);
				if (v37 != 0) {
					boolean v38 = v37.equals(v21);
					if (v38 == 0) {
						Integer v39 = Integer.valueOf(v35);
						Object v40 = this.mIdMap.put(v39, v21);
						int v41 = v37.getUserId();
						AssociationStoreImpl.invalidateCacheForUserLocked(v41);
						MacAddress v43 = v21.getDeviceMacAddress();
						MacAddress v44 = v37.getDeviceMacAddress();
						boolean v45 = Objects.equals(v44, v43);
						if ((v45 ^ 1) == 0) {
							if (v44 == 0) {
								Object v46 = this.mAddressMap.get(v44);
								Integer v47 = Integer.valueOf(v35);
								boolean v48 = v46.remove(v47);
								if (v43 == 0) {
									AssociationStoreImpl$$ExternalSyntheticLambda3 v49 = new AssociationStoreImpl$$ExternalSyntheticLambda3();
									Object v51 = this.mAddressMap.computeIfAbsent(v43, v49);
									Integer v52 = Integer.valueOf(v35);
									boolean v53 = v51.add(v52);
									if ((v45 ^ 1) == 0) {
										AssociationStoreImpl.broadcastChange(2, v21);
										if (1 == 0) {
											CompanionDevicePresenceMonitor v55 = this.mDevicePresenceMonitor;
											int v56 = this.mId;
											Integer v58 = Integer.valueOf(v56);
											boolean v59 = this.mReportedSelfManagedDevices.contains(v58);
											if (v59 != 0) {
												Integer v60 = Integer.valueOf(v56);
												boolean v61 = this.mConnectedBtDevices.contains(v60);
												if (v61 != 0) {
													Integer v62 = Integer.valueOf(v56);
													boolean v63 = this.mNearbyBleDevices.contains(v62);
													if (v63 != 0) {
														Integer v64 = Integer.valueOf(v56);
														boolean v65 = this.mSimulated.contains(v64);
														if (v65 == 0) {
															boolean v57 = 0;
															if (v57 == 0) {
																int v66 = this.mId;
																this.this$0.onDeviceAppearedInternal(v66);
																if (1 != 0) {
																	boolean v70 = this.this$0.shouldBindPackage(v4, p2);
																	boolean v69 = v70;
																	if (v69 != 0) {
																		CompanionApplicationController v71 = this.mCompanionAppController;
																		Object v73 = this.mBoundCompanionApplications.removePackage(v4, p2);
																		if (v73 != 0) {
																			Iterator v74 = v73.iterator();
																			boolean v75 = v74.hasNext();
																			if (v75 == 0) {
																				Object v76 = v74.next();
																				v76.postUnbind();
																				boolean v78 = v74.hasNext();
																				if (v78 == 0) {
																					return;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void registerDevicePresenceListenerService(String p1, String p2, int p3){
	int v4 = UserHandle.getCallingUserId();
	PermissionsUtils.enforceCallerIsSystemOr(v4, p2);
	AssociationStoreImpl v6 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
	AssociationInfo v7 = v6.getAssociationsForPackageWithAddress(v4, p2, p1);
	if (v7 == 0) {
		boolean v8 = v7.isNotifyOnDeviceNearby();
		if (1 != v8) {
			AssociationInfo$NonActionableBuilder v9 = AssociationInfo.builder(v7);
			AssociationInfo$Builder v10 = v9.setNotifyOnDeviceNearby(1);
			AssociationInfo v11 = v10.build();
			AssociationStoreImpl v12 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
			v12.updateAssociation(v11);
			if (1 == 0) {
				CompanionDevicePresenceMonitor v14 = CompanionDeviceManagerService.-$$Nest$fgetmDevicePresenceMonitor(this.this$0);
				int v15 = v11.getId();
				boolean v16 = v14.isDevicePresent(v15);
				if (v16 == 0) {
					int v17 = v11.getId();
					CompanionDeviceManagerService.-$$Nest$monDeviceAppearedInternal(this.this$0, v17);
					if (1 != 0) {
						boolean v19 = CompanionDeviceManagerService.-$$Nest$mshouldBindPackage(this.this$0, v4, p2);
						if (v19 != 0) {
							CompanionApplicationController v20 = CompanionDeviceManagerService.-$$Nest$fgetmCompanionAppController(this.this$0);
							v20.unbindCompanionApplication(v4, p2);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void registerDevicePresenceListenerService(String p1, String p2, int p3){
	p0.registerDevicePresenceListenerActive(p2, p1, 1);
	return;
}

and the following sink code:
['AssociationStoreImpl v10 = this.mAssociationStore;\nList v12 = AssociationStoreImpl.getAssociationsByAddress(p1);\nAssociationInfo$Builder v18 = new AssociationInfo$Builder(v11,0);\nAssociationInfo v22 = new AssociationInfo(v23,v24,v25,v26,v27,v28,v29,this.mNotifyOnDeviceNearby,this.mRevoked,v30);\nthis.mIdMap.put(v39, v21);', 'PermissionsUtils.enforceCallerIsSystemOr(v4, p2);\nAssociationInfo v7 = v6.getAssociationsForPackageWithAddress(v4, p2, p1);\nv12.updateAssociation(v11);', 'p0.registerDevicePresenceListenerActive(p2, p1, 1);']

The method registerDevicePresenceListenerService has the following similar APIs:

- API Name: unregisterDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.9981452226638794, Code:
p0.registerDevicePresenceListenerActive(p2, p1, 0);
  - Similarity: 0.8968696594238281, Code:
PermissionsUtils.enforceCallerIsSystemOr(v4, p2);
AssociationStoreImpl v6 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
AssociationInfo v7 = v6.getAssociationsForPackageWithAddress(v4, p2, p1);
AssociationInfo$NonActionableBuilder v9 = AssociationInfo.builder(v7);
AssociationInfo$Builder v10 = v9.setNotifyOnDeviceNearby(0);
AssociationInfo v11 = v10.build();
  - Similarity: 0.8671252727508545, Code:
int v4 = UserHandle.getCallingUserId();
AssociationStoreImpl v10 = this.mAssociationStore;
List v12 = AssociationStoreImpl.getAssociationsByAddress(p1);
AssociationStoreImpl$$ExternalSyntheticLambda2 v13 = new AssociationStoreImpl$$ExternalSyntheticLambda2(v4,p2);
Object v15 = CollectionUtils.find(v12, v13);
AssociationInfo v11 = v15;
AssociationInfo$Builder v18 = new AssociationInfo$Builder(v11,0);
AssociationInfo$NonActionableBuilder v17 = v18;
AssociationInfo$Builder v20 = v17.setNotifyOnDeviceNearby(0);
AssociationInfo v22 = new AssociationInfo(v23,v24,v25,v26,v27,v28,v29,this.mNotifyOnDeviceNearby,this.mRevoked,v30);
  - Access Control Level: SYS_OR_SIG

- API Name: notifyDeviceAppeared(I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.8984375596046448, Code:
AssociationInfo v2 = this.mAssociationStore.getAssociationById(p1);
AssociationInfo$Builder v7 = new AssociationInfo$Builder(v1,0);
long v9 = System.currentTimeMillis();
AssociationInfo$Builder v10 = v6.setLastTimeConnected(v9);
AssociationInfo v12 = new AssociationInfo(v13,v14,v15,v16,v17,v18,v19,this.mNotifyOnDeviceNearby,this.mRevoked,v20,this.mLastTimeConnectedMs);
  - Similarity: 0.8360175490379333, Code:
Object v4 = this.mIdMap.get(v3);
AssociationInfo$NonActionableBuilder v11 = AssociationInfo.builder(v1);
long v12 = System.currentTimeMillis();
AssociationInfo$Builder v13 = v11.setLastTimeConnected(v12);
AssociationInfo v15 = new AssociationInfo(v16,v17,v18,v19,v20,v21,v22,this.mNotifyOnDeviceNearby,this.mRevoked,v23,this.mLastTimeConnectedMs);
  - Access Control Level: SYS_OR_SIG

- API Name: legacyDisassociate(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.8867372870445251, Code:
AssociationInfo v4 = this.mAssociationStore.getAssociationsForPackageWithAddress(p3, p2, p1);
Context v5 = CompanionDeviceManagerService.getContext();
AssociationInfo v6 = PermissionsUtils.sanitizeWithCallerChecks(v5, v4);
  - Access Control Level: SYS_OR_SIG

- API Name: canPairWithoutPrompt(Ljava/lang/String;Ljava/lang/String;I)Z in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.8824224472045898, Code:
AssociationInfo v2 = v1.getAssociationsForPackageWithAddress(p3, p1, p2);
long v3 = System.currentTimeMillis();
long v4 = v2.getTimeApprovedMs();
  - Similarity: 0.8261930346488953, Code:
List v3 = AssociationStoreImpl.getAssociationsByAddress(p2);
AssociationStoreImpl$$ExternalSyntheticLambda2 v4 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);
Object v6 = CollectionUtils.find(v3, v4);
AssociationInfo v2 = v6;
  - Access Control Level: NONE

- API Name: createAssociation(Ljava/lang/String;Ljava/lang/String;I[B)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.840603768825531, Code:
MacAddress v7 = MacAddress.fromString(p2);
int v9 = CompanionDeviceManagerService.getNewAssociationIdForPackage(p3, p1);
AssociationInfo v11 = new AssociationInfo(v9,p3,p1,v7,0,0,0,0,0,v10,9223372036854775807);
this.mAssociationStore.addAssociation(v11);
  - Access Control Level: NORMAL

