The method isDeviceAssociatedForWifiConnection has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isDeviceAssociatedForWifiConnection(String p1, String p2, int p3){
	if (v5 != 0) {
		if (1 == 0) {
			AssociationStoreImpl v6 = this.mAssociationStore;
			List v9 = AssociationStoreImpl.getAssociationsForUserLocked(p3);
			List v8 = v9;
			AssociationStoreImpl$$ExternalSyntheticLambda0 v10 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
			int v13 = CollectionUtils.size(v8);
			if (0 >= v13) {
				Object v14 = v8.get(0);
				boolean v15 = v10.test(v14);
				if (v15 == 0) {
					ArrayList v16 = ArrayUtils.add(0, v14);
					int v17 = CollectionUtils.size(v8);
					if ((0 + 1) >= v17) {
						List v18 = CollectionUtils.emptyIfNull(0);
						List v12 = v18;
						List v19 = Collections.unmodifiableList(v12);
						List v7 = v19;
						CompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0 v20 = new CompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0(p2);
						boolean v24 = CollectionUtils.isEmpty(v7);
						if (v24 == 0) {
							int v25 = v7.size();
							if (0 >= v25) {
								Object v26 = v7.get(0);
								boolean v27 = v20.test(v26);
								if (v27 == 0) {
									int v28 = v7.size();
									if ((0 + 1) >= v28) {
										Object v29 = v7.get((0 + 1));
										boolean v30 = v20.test(v29);
										if (v30 == 0) {
											Object v23 = v29;
											if (v23 == 0) {
												boolean v22 = 1;
												return v22;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isDeviceAssociatedForWifiConnection(String p1, String p2, int p3){
	if (v5 != 0) {
		if (1 == 0) {
			AssociationStoreImpl v6 = this.mAssociationStore;
			List v8 = AssociationStoreImpl.getAssociationsForUser(p3);
			AssociationStoreImpl$$ExternalSyntheticLambda0 v9 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
			List v11 = CollectionUtils.filter(v8, v9);
			List v12 = Collections.unmodifiableList(v11);
			List v7 = v12;
			CompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0 v13 = new CompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0(p2);
			Object v16 = CollectionUtils.find(v7, v13);
			if (v16 == 0) {
				boolean v15 = 1;
				return v15;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isDeviceAssociatedForWifiConnection(String p1, String p2, int p3){
	if (v5 != 0) {
		if (1 == 0) {
			AssociationStoreImpl v6 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
			List v7 = v6.getAssociationsForPackage(p3, p1);
			CompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0 v8 = new CompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0(p2);
			boolean v10 = CollectionUtils.any(v7, v8);
			return v10;
		}
	}
}

and the following sink code:
['List v7 = v6.getAssociationsForPackage(p3, p1);\nCompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0 v8 = new CompanionDeviceManagerService$CompanionDeviceManagerImpl$$ExternalSyntheticLambda0(p2);\nboolean v10 = CollectionUtils.any(v7, v8);\nreturn v10;']

The method isDeviceAssociatedForWifiConnection has the following similar APIs:

- API Name: legacyDisassociate(Ljava/lang/String;Ljava/lang/String;I)V with Similarity Score: 0.778823971748352
  - Access Control Level: SYS_OR_SIG and the following code:
List v5 = AssociationStoreImpl.getAssociationsByAddress(p1);
AssociationStoreImpl$$ExternalSyntheticLambda2 v6 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p2);
Object v8 = CollectionUtils.find(v5, v6);
int v11 = v4.getUserId();
String v12 = v4.getPackageName();
boolean v13 = PermissionsUtils.checkCallerCanManageAssociationsForPackage(v9, v11, v12);

- API Name: hasNotificationAccess(Landroid/content/ComponentName;)Z with Similarity Score: 0.7638177871704102
  - Access Control Level: SYS_OR_SIG and the following code:
String v1 = p1.getPackageName();
List v13 = AssociationStoreImpl.getAssociationsForUser(v3);
AssociationStoreImpl$$ExternalSyntheticLambda0 v14 = new AssociationStoreImpl$$ExternalSyntheticLambda0(v1);
List v16 = CollectionUtils.filter(v13, v14);
boolean v22 = v21.isNotificationListenerAccessGranted(p1);

