The method addOrUpdateStatus in the following class Lcom.android.server.people.PeopleService$1 has the following code snippet:

This is path 1 for the API with depth 2:
public void addOrUpdateStatus(String p1, int p2, String p3, ConversationStatus p4){
	IActivityManager v3 = ActivityManager.getService();
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = v3.handleIncomingUser(v4, v5, p2, 1, 1, "", 0);
	int v2 = p2;
	int v1 = v2;
	long v12 = p4.getStartTimeMillis();
	long v13 = System.currentTimeMillis();
	if ((v12 < v13) > 0) {
		DataManager v14 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
		PackageData v17 = DataManager.getPackage(p1, p2);
		if (v17 == 0) {
			ConversationStore v18 = v17.getConversationStore();
			if (v18 == 0) {
				ConversationStore v16 = v18;
				ConversationInfo v20 = v16.getConversation(p3);
				if (v20 == 0) {
					ConversationInfo v19 = v20;
					ConversationInfo$Builder v21 = new ConversationInfo$Builder(v19);
					String v24 = p4.getId();
					Object v25 = this.mCurrStatuses.put(v24, p4);
					ConversationInfo$Builder v23 = ConversationInfo$Builder;
					Object v27 = Objects.requireNonNull(this.mShortcutId);
					ConversationInfo v28 = new ConversationInfo(ConversationInfo$Builder,0);
					ConversationInfo v26 = v28;
					v16.addOrUpdate(v26);
					String v32 = v26.getShortcutId();
					ConversationChannel v33 = DataManager.getConversationChannel(p1, p2, v32, v26);
					if (v33 == 0) {
						ConversationChannel v34 = new ConversationChannel(1);
						List v35 = Arrays.asList(v34);
						DataManager.notifyConversationsListeners(v35);
						long v37 = this.mEndTimeMs;
						if ((v37 < 0) < 0) {
							long v39 = Binder.clearCallingIdentity();
							Intent v40 = new Intent("ConversationStatusExpiration");
							Intent v42 = v40.setPackage("android");
							Uri$Builder v43 = new Uri$Builder();
							Uri$Builder v45 = v43.scheme("expStatus");
							String v46 = ConversationStatusExpirationBroadcastReceiver.getKey(p2, p1, p3, p4);
							Uri$Builder v47 = v45.appendPath(v46);
							Uri v48 = v47.build();
							Intent v49 = v42.setData(v48);
							Intent v50 = v49.addFlags(268435456);
							Intent v51 = v50.putExtra("userId", p2);
							PendingIntent v52 = PendingIntent.getBroadcast(this.mContext, 10, v51, 201326592);
							Object v53 = this.mContext.getSystemService(AlarmManage.class);
							long v54 = p4.getEndTimeMillis();
							v53.setExactAndAllowWhileIdle(0, v54, v52);
							Binder.restoreCallingIdentity(v39);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void addOrUpdateStatus(String p1, int p2, String p3, ConversationStatus p4){
	int v2 = this.this$0.handleIncomingUser(p2);
	int v1 = v2;
	this.this$0.checkCallerIsSameApp(p1);
	long v5 = this.mStartTimeMs;
	long v6 = System.currentTimeMillis();
	if ((v5 < v6) > 0) {
		DataManager v7 = this.mDataManager;
		ConversationStore v9 = DataManager.getConversationStoreOrThrow(p1, p2);
		ConversationInfo v10 = DataManager.getConversationInfoOrThrow(v9, p3);
		ConversationInfo$Builder v11 = new ConversationInfo$Builder(v10);
		ConversationInfo$Builder v13 = v11.addOrUpdateStatus(p4);
		ConversationInfo v14 = v11.build();
		DataManager.updateConversationStoreThenNotifyListeners(v9, v14, p1, p2);
		long v16 = p4.getEndTimeMillis();
		if ((v16 < 0) < 0) {
			this.mStatusExpReceiver.scheduleExpiration(this.mContext, p2, p1, p3, p4);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void addOrUpdateStatus(String p1, int p2, String p3, ConversationStatus p4){
	int v1 = PeopleService.-$$Nest$mhandleIncomingUser(this.this$0, p2);
	PeopleService.-$$Nest$mcheckCallerIsSameApp(this.this$0, p1);
	long v3 = p4.getStartTimeMillis();
	long v4 = System.currentTimeMillis();
	if ((v3 < v4) > 0) {
		DataManager v5 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
		v5.addOrUpdateStatus(p1, p2, p3, p4);
		return;
	}
}

and the following sink code:
['ConversationInfo$Builder v21 = new ConversationInfo$Builder(v19);\nString v24 = p4.getId();\nObject v25 = this.mCurrStatuses.put(v24, p4);\nConversationInfo$Builder v23 = ConversationInfo$Builder;\nObject v27 = Objects.requireNonNull(this.mShortcutId);\nConversationInfo v28 = new ConversationInfo(ConversationInfo$Builder,0);\nConversationInfo v26 = v28;\nv16.addOrUpdate(v26);', 'Intent v40 = new Intent("ConversationStatusExpiration");\nIntent v42 = v40.setPackage("android");\nUri$Builder v43 = new Uri$Builder();\nUri$Builder v45 = v43.scheme("expStatus");\nString v46 = ConversationStatusExpirationBroadcastReceiver.getKey(p2, p1, p3, p4);\nUri$Builder v47 = v45.appendPath(v46);\nUri v48 = v47.build();\nIntent v49 = v42.setData(v48);\nIntent v50 = v49.addFlags(268435456);\nIntent v51 = v50.putExtra("userId", p2);\nPendingIntent v52 = PendingIntent.getBroadcast(this.mContext, 10, v51, 201326592);\nObject v53 = this.mContext.getSystemService(AlarmManage.class);\nlong v54 = p4.getEndTimeMillis();\nv53.setExactAndAllowWhileIdle(0, v54, v52);', 'ConversationInfo$Builder v11 = new ConversationInfo$Builder(v10);\nConversationInfo$Builder v13 = v11.addOrUpdateStatus(p4);\nConversationInfo v14 = v11.build();\nDataManager.updateConversationStoreThenNotifyListeners(v9, v14, p1, p2);', 'this.mStatusExpReceiver.scheduleExpiration(this.mContext, p2, p1, p3, p4);']

The method addOrUpdateStatus has the following similar APIs:

- API Name: clearStatus(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.people.PeopleService$1 with the following sink code entries:
  - Similarity: 0.9715287089347839, Code:
ConversationInfo$Builder v9 = new ConversationInfo$Builder(v8);
ConversationInfo$Builder v11 = v9.clearStatus(p4);
ConversationInfo v12 = v9.build();
DataManager.updateConversationStoreThenNotifyListeners(v7, v12, p1, p2);
  - Similarity: 0.932930052280426, Code:
ConversationInfo$Builder v19 = new ConversationInfo$Builder(v17);
Object v22 = this.mCurrStatuses.remove(p4);
ConversationInfo v25 = new ConversationInfo(ConversationInfo$Builder,0);
v14.addOrUpdate(v23);
  - Access Control Level: SYS_OR_SIG

- API Name: clearStatuses(Ljava/lang/String;ILjava/lang/String;)V in the following Class: Lcom.android.server.people.PeopleService$1 with the following sink code entries:
  - Similarity: 0.9690368175506592, Code:
ConversationInfo$Builder v9 = new ConversationInfo$Builder(v8);
ConversationInfo$Builder v11 = v9.setStatuses(0);
ConversationInfo v12 = v9.build();
DataManager.updateConversationStoreThenNotifyListeners(v7, v12, p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: getStatuses(Ljava/lang/String;ILjava/lang/String;)Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.people.PeopleService$1 with the following sink code entries:
  - Similarity: 0.7554579973220825, Code:
int v2 = this.this$0.handleIncomingUser(p2);
this.this$0.checkCallerIsSameApp(p1);
ConversationStore v10 = DataManager.getConversationStoreOrThrow(p1, p2);
ConversationInfo v11 = DataManager.getConversationInfoOrThrow(v10, p3);
List v12 = DataManager.getStatuses(v11);
ParceledListSlice v7 = new ParceledListSlice(v9);
return v7;
  - Access Control Level: SYS_OR_SIG

