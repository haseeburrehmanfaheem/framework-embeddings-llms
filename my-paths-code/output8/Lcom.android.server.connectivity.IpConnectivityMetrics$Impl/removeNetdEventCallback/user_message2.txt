The method removeNetdEventCallback has the following code snippet:

This is path 1 for the API with depth 2:
public boolean removeNetdEventCallback(int p1){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		if (0 >= this.ALLOWED_CALLBACK_TYPES.length) {
			boolean v3 = 0;
			if (v3 != 0) {
				boolean v2 = 1;
				return v2;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean removeNetdEventCallback(int p1){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		boolean v3 = NetdEventListenerService.isValidCallerType(p1);
		if (v3 != 0) {
			boolean v2 = 1;
			return v2;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean removeNetdEventCallback(int p1){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		boolean v2 = IpConnectivityMetrics.mNetdListener.removeNetdEventCallback(p1);
		return v2;
	}
}

and the following sink code:
['boolean v2 = IpConnectivityMetrics.mNetdListener.removeNetdEventCallback(p1);\nreturn v2;', 'boolean v3 = NetdEventListenerService.isValidCallerType(p1);']

The method removeNetdEventCallback has the following similar APIs:

- API Name: addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z with Similarity Score: 1.0000001192092896
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = NetdEventListenerService.isValidCallerType(p1);

- API Name: addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z with Similarity Score: 0.9467878937721252
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = IpConnectivityMetrics.mNetdListener.addNetdEventCallback(p1, p2);
return v2;

