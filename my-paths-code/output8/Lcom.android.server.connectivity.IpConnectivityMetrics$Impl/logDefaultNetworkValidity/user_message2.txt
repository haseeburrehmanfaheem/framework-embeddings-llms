The method logDefaultNetworkValidity in the following class Lcom.android.server.connectivity.IpConnectivityMetrics$Impl has the following code snippet:

This is path 1 for the API with depth 2:
public void logDefaultNetworkValidity(boolean p1){
	Context v1 = this.this$0.getContext();
	long v3 = SystemClock.elapsedRealtime();
	if (p1 != 0) {
		if (this.mIsCurrentlyValid == 0) {
			this.mIsCurrentlyValid = 0;
			DefaultNetworkEvent.validatedMs = (DefaultNetworkEvent.validatedMs + (v3 - this.mLastValidationTimeMs));
			if (p1 == 0) {
				if (this.mIsCurrentlyValid != 0) {
					this.mIsCurrentlyValid = 1;
					this.mLastValidationTimeMs = v3;
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void logDefaultNetworkValidity(boolean p1){
	Context v1 = this.this$0.getContext();
	long v3 = SystemClock.elapsedRealtime();
	if (p1 != 0) {
		if (this.mIsCurrentlyValid == 0) {
			this.mIsCurrentlyValid = 0;
			DefaultNetworkMetrics.updateValidationTime(v3);
			if (p1 == 0) {
				if (this.mIsCurrentlyValid != 0) {
					this.mIsCurrentlyValid = 1;
					this.mLastValidationTimeMs = v3;
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void logDefaultNetworkValidity(boolean p1){
	Context v1 = this.this$0.getContext();
	long v3 = SystemClock.elapsedRealtime();
	IpConnectivityMetrics.mDefaultNetworkMetrics.logDefaultNetworkValidity(v3, p1);
	return;
}

and the following sink code:
['if (p1 != 0) {\nif (this.mIsCurrentlyValid == 0) {\nthis.mIsCurrentlyValid = 0;\nDefaultNetworkEvent.validatedMs = (DefaultNetworkEvent.validatedMs + (v3 - this.mLastValidationTimeMs));', 'if (p1 != 0) {\nif (this.mIsCurrentlyValid == 0) {\nthis.mIsCurrentlyValid = 0;\nDefaultNetworkMetrics.updateValidationTime(v3);', 'IpConnectivityMetrics.mDefaultNetworkMetrics.logDefaultNetworkValidity(v3, p1);']

The method logDefaultNetworkValidity has the following similar APIs:

- API Name: addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z in the following Class: Lcom.android.server.connectivity.IpConnectivityMetrics$Impl with the following sink code entries:
  - Similarity: 0.7271322011947632, Code:
boolean v2 = IpConnectivityMetrics.mNetdListener.addNetdEventCallback(p1, p2);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: stopWatchlistLogging()Z in the following Class: Lcom.android.server.net.watchlist.NetworkWatchlistService with the following sink code entries:
  - Similarity: 0.7265979051589966, Code:
this.mIsLoggingEnabled = 0;
boolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);
boolean v2 = v3;
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: startWatchlistLogging()Z in the following Class: Lcom.android.server.net.watchlist.NetworkWatchlistService with the following sink code entries:
  - Similarity: 0.7063604593276978, Code:
boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);
if (v3 == 0) {
this.mIsLoggingEnabled = 1;
boolean v2 = 1;
return v2;
  - Access Control Level: SYS_OR_SIG

