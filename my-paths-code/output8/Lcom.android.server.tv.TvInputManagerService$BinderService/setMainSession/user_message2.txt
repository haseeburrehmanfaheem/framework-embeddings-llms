The method setMainSession in the following class Lcom.android.server.tv.TvInputManagerService$BinderService has the following code snippet:

This is path 1 for the API with depth 2:
public void setMainSession(IBinder p1, int p2){
	if (v2 != 0) {
		int v3 = Binder.getCallingUid();
		int v4 = Binder.getCallingPid();
		int v7 = ActivityManager.handleIncomingUser(v4, v3, p2, 0, 0, "setMainSession", 0);
		int v6 = v7;
		int v5 = v6;
		long v8 = Binder.clearCallingIdentity();
		Object v9 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
		TvInputManagerService$UserState v12 = TvInputManagerService.getUserStateLocked(v5);
		if (v12 != 0) {
			TvInputManagerService$UserState v13 = new TvInputManagerService$UserState(this.mContext,v5,0);
			this.mUserStates.put(v5, v13);
			TvInputManagerService$UserState v11 = v12;
			TvInputManagerService$UserState v10 = v11;
			IBinder v16 = TvInputManagerService$UserState.-$$Nest$fgetmainSessionToken(v10);
			if (v16 != p1) {
				IBinder v17 = TvInputManagerService$UserState.-$$Nest$fgetmainSessionToken(v10);
				TvInputManagerService$UserState.-$$Nest$fputmainSessionToken(v10, p1);
				if (p1 == 0) {
					TvInputManagerService$SessionState v21 = TvInputManagerService.getSessionStateLocked(p1, v3, p2);
					IBinder v22 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v21);
					if (v22 == 0) {
						IBinder v23 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v21);
						TvInputManagerService$SessionState v24 = TvInputManagerService.getSessionStateLocked(v23, 1000, p2);
						ComponentName v25 = TvInputManagerService$SessionState.-$$Nest$fgetcomponentName(v21);
						TvInputManagerService$ServiceState v26 = TvInputManagerService.getServiceStateLocked(v25, p2);
						boolean v27 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v26);
						if (v27 != 0) {
							ITvInputSession v28 = TvInputManagerService.getSessionLocked(v21);
							v28.setMain(1);
							boolean v30 = TvInputManagerService$SessionState.-$$Nest$fgetisMainSession(v21);
							if (v30 == 1) {
								TvInputManagerService$UserState v31 = TvInputManagerService.getUserStateLocked(p2);
								TvInputManagerService$SessionState.-$$Nest$fputisMainSession(v21, 1);
								TvInputManagerService.notifyCurrentChannelInfosUpdatedLocked(v31);
								if (v17 == 0) {
									TvInputManagerService$SessionState v36 = TvInputManagerService.getSessionStateLocked(v17, 1000, p2);
									IBinder v37 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v36);
									if (v37 == 0) {
										IBinder v38 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v36);
										TvInputManagerService$SessionState v39 = TvInputManagerService.getSessionStateLocked(v38, 1000, p2);
										ComponentName v40 = TvInputManagerService$SessionState.-$$Nest$fgetcomponentName(v36);
										TvInputManagerService$ServiceState v41 = TvInputManagerService.getServiceStateLocked(v40, p2);
										boolean v42 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v41);
										if (v42 != 0) {
											ITvInputSession v43 = TvInputManagerService.getSessionLocked(v36);
											v43.setMain(0);
											boolean v45 = TvInputManagerService$SessionState.-$$Nest$fgetisMainSession(v36);
											if (v45 == 0) {
												TvInputManagerService$UserState v46 = TvInputManagerService.getUserStateLocked(p2);
												TvInputManagerService$SessionState.-$$Nest$fputisMainSession(v36, 0);
												TvInputManagerService.notifyCurrentChannelInfosUpdatedLocked(v46);
												Binder.restoreCallingIdentity(v8);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setMainSession(IBinder p1, int p2){
	if (v2 != 0) {
		int v3 = Binder.getCallingUid();
		int v4 = Binder.getCallingPid();
		int v6 = this.this$0.resolveCallingUserId(v4, v3, p2, "setMainSession");
		int v5 = v6;
		long v7 = Binder.clearCallingIdentity();
		Object v8 = this.mLock;
		TvInputManagerService$UserState v10 = this.this$0.getOrCreateUserStateLocked(v5);
		TvInputManagerService$UserState v9 = v10;
		IBinder v11 = this.mainSessionToken;
		if (v11 != p1) {
			IBinder v12 = this.mainSessionToken;
			this.mainSessionToken = p1;
			if (p1 == 0) {
				this.this$0.setMainLocked(p1, 1, v3, p2);
				if (v12 == 0) {
					this.this$0.setMainLocked(v12, 0, 1000, p2);
					Binder.restoreCallingIdentity(v7);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setMainSession(IBinder p1, int p2){
	if (v2 != 0) {
		int v3 = Binder.getCallingUid();
		int v4 = Binder.getCallingPid();
		int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p2, "setMainSession");
		long v6 = Binder.clearCallingIdentity();
		Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
		TvInputManagerService$UserState v8 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);
		IBinder v9 = TvInputManagerService$UserState.-$$Nest$fgetmainSessionToken(v8);
		if (v9 != p1) {
			IBinder v10 = TvInputManagerService$UserState.-$$Nest$fgetmainSessionToken(v8);
			TvInputManagerService$UserState.-$$Nest$fputmainSessionToken(v8, p1);
			if (p1 == 0) {
				TvInputManagerService.-$$Nest$msetMainLocked(this.this$0, p1, 1, v3, p2);
				if (v10 == 0) {
					TvInputManagerService.-$$Nest$msetMainLocked(this.this$0, v10, 0, 1000, p2);
					Binder.restoreCallingIdentity(v6);
					return;
				}
			}
		}
	}
}

and the following sink code:
['int v3 = Binder.getCallingUid();\nint v4 = Binder.getCallingPid();\nint v7 = ActivityManager.handleIncomingUser(v4, v3, p2, 0, 0, "setMainSession", 0);', 'IBinder v16 = TvInputManagerService$UserState.-$$Nest$fgetmainSessionToken(v10);\nTvInputManagerService$UserState.-$$Nest$fputmainSessionToken(v10, p1);', 'TvInputManagerService$UserState v13 = new TvInputManagerService$UserState(this.mContext,v5,0);\nthis.mUserStates.put(v5, v13);']

The method setMainSession has the following similar APIs:

- API Name: isParentalControlsEnabled(I)Z in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.9651576280593872, Code:
TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,v3,0);
this.mUserStates.put(v3, v11);
  - Access Control Level: NONE

- API Name: notifySignalStrength(Landroid/os/IBinder;II)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.9294857382774353, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
int v5 = ActivityManager.handleIncomingUser(v2, v1, p3, 0, 0, "notifySignalStrength", 0);
TvInteractiveAppManagerService$SessionState v10 = TvInteractiveAppManagerService.getOrCreateUserStateLocked(v3);
ITvInteractiveAppSession v14 = TvInteractiveAppManagerService$SessionState.-$$Nest$fgetmSession(v8);
v12.notifySignalStrength(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.9291719198226929, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
int v5 = ActivityManager.handleIncomingUser(v2, v1, p3, 0, 0, "setInteractiveAppNotificationEnabled", 0);
TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p1, v1, v3);
ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
v8.setInteractiveAppNotificationEnabled(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: resetInteractiveApp(Landroid/os/IBinder;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.9175374507904053, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
int v5 = ActivityManager.handleIncomingUser(v2, v1, p2, 0, 0, "resetInteractiveApp", 0);
TvInteractiveAppManagerService$SessionState v11 = TvInteractiveAppManagerService.getSessionStateLocked(p1, v1, v10);
ITvInteractiveAppSession v14 = TvInteractiveAppManagerService$SessionState.-$$Nest$fgetmSession(v8);
v12.resetInteractiveApp();
  - Access Control Level: SYS_OR_SIG

- API Name: setTeletextAppEnabled(Landroid/os/IBinder;ZI)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.9077677726745605, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
int v5 = ActivityManager.handleIncomingUser(v2, v1, p3, 0, 0, "setTeletextAppEnabled", 0);
TvInteractiveAppManagerService$SessionState v11 = TvInteractiveAppManagerService.getSessionStateLocked(p1, v1, v10);
ITvInteractiveAppSession v14 = TvInteractiveAppManagerService$SessionState.-$$Nest$fgetmSession(v8);
v12.setTeletextAppEnabled(p2);
  - Access Control Level: SYS_OR_SIG

