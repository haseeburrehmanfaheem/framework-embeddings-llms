The method captureFrame has the following code snippet:

This is path 1 for the API with depth 2:
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v7 = ActivityManager.handleIncomingUser(v4, v3, p4, 0, 0, "captureFrame", 0);
	int v6 = v7;
	int v5 = v6;
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(v5);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,v5,0);
		this.mUserStates.put(v5, v12);
		TvInputManagerService$UserState v10 = v11;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v16 = v15.get(p1);
		if (v16 != 0) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
			Collection v18 = v17.values();
			Iterator v19 = v18.iterator();
			boolean v20 = v19.hasNext();
			if (v20 == 0) {
				Object v21 = v19.next();
				String v22 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v21);
				boolean v23 = v22.equals(p1);
				if (v23 == 0) {
					IBinder v24 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v21);
					if (v24 == 0) {
						boolean v25 = v19.hasNext();
						if (v25 == 0) {
							Object v26 = v19.next();
							String v27 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v26);
							boolean v28 = v27.equals(p1);
							if (v28 == 0) {
								IBinder v29 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v26);
								if (v29 == 0) {
									Map v30 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
									IBinder v31 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v26);
									Object v32 = v30.get(v31);
									String v33 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v32);
									TvInputHardwareManager v34 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
									if (0 == 0) {
										int v37 = this.mConnections.size();
										if (0 >= v37) {
											Object v38 = this.mConnections.get(0);
											TvInputInfo v39 = v38.getInfoLocked();
											String v40 = v39.getId();
											boolean v41 = v40.equals(0);
											if (v41 == 0) {
												int v42 = this.mConnections.size();
												if ((0 + 1) >= v42) {
													Object v43 = this.mConnections.get((0 + 1));
													TvInputInfo v44 = v43.getInfoLocked();
													String v45 = v44.getId();
													boolean v46 = v45.equals(0);
													if (v46 == 0) {
														int v36 = (0 + 1);
														if (v36 >= 0) {
															Object v47 = this.mConnections.get(v36);
															TvInputHardwareManager$TvInputHardwareImpl v48 = this.mHardware;
															if (v48 == 0) {
																Runnable v49 = this.mOnFirstFrameCaptured;
																if (v49 == 0) {
																	v49.run();
																	this.mOnFirstFrameCaptured = 0;
																	boolean v53 = v48.startCapture(p2, p3);
																	boolean v52 = v53;
																	if (v52 == 0) {
																		TvInputHardwareManager$2 v54 = new TvInputHardwareManager$2(TvInputHardwareManager,v48,p3);
																		this.mOnFirstFrameCaptured = v54;
																		boolean v35 = v52;
																		Binder.restoreCallingIdentity(v2);
																		return v35;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v6 = this.this$0.resolveCallingUserId(v4, v3, p4, "captureFrame");
	int v5 = v6;
	Object v7 = this.mLock;
	TvInputManagerService$UserState v9 = this.this$0.getOrCreateUserStateLocked(v5);
	TvInputManagerService$UserState v8 = v9;
	Map v10 = this.inputMap;
	Object v11 = v10.get(p1);
	if (v11 != 0) {
		Map v12 = this.sessionStateMap;
		Collection v13 = v12.values();
		Iterator v14 = v13.iterator();
		boolean v15 = v14.hasNext();
		if (v15 == 0) {
			Object v16 = v14.next();
			String v17 = this.inputId;
			boolean v18 = v17.equals(p1);
			if (v18 == 0) {
				IBinder v19 = this.hardwareSessionToken;
				if (v19 == 0) {
					boolean v20 = v14.hasNext();
					if (v20 == 0) {
						Object v21 = v14.next();
						String v22 = this.inputId;
						boolean v23 = v22.equals(p1);
						if (v23 == 0) {
							IBinder v24 = this.hardwareSessionToken;
							if (v24 == 0) {
								Map v25 = this.sessionStateMap;
								IBinder v26 = this.hardwareSessionToken;
								Object v27 = v25.get(v26);
								String v28 = this.inputId;
								TvInputHardwareManager v29 = this.mTvInputHardwareManager;
								if (0 == 0) {
									int v31 = TvInputHardwareManager.findDeviceIdForInputIdLocked(0);
									if (v31 >= 0) {
										Object v32 = this.mConnections.get(v31);
										TvInputHardwareManager$TvInputHardwareImpl v33 = v32.getHardwareImplLocked();
										if (v33 == 0) {
											Runnable v34 = v32.getOnFirstFrameCapturedLocked();
											if (v34 == 0) {
												v34.run();
												v32.setOnFirstFrameCapturedLocked(0);
												boolean v37 = TvInputHardwareManager$TvInputHardwareImpl.-$$Nest$mstartCapture(v33, p2, p3);
												if (v37 == 0) {
													TvInputHardwareManager$2 v38 = new TvInputHardwareManager$2(TvInputHardwareManager,v33,p3);
													v32.setOnFirstFrameCapturedLocked(v38);
													boolean v30 = v37;
													Binder.restoreCallingIdentity(v2);
													return v30;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p4, "captureFrame");
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);
	Map v8 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v7);
	Object v9 = v8.get(p1);
	if (v9 != 0) {
		Map v10 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
		Collection v11 = v10.values();
		Iterator v12 = v11.iterator();
		boolean v13 = v12.hasNext();
		if (v13 == 0) {
			Object v14 = v12.next();
			String v15 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v14);
			boolean v16 = v15.equals(p1);
			if (v16 == 0) {
				IBinder v17 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v14);
				if (v17 == 0) {
					boolean v18 = v12.hasNext();
					if (v18 == 0) {
						Object v19 = v12.next();
						String v20 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v19);
						boolean v21 = v20.equals(p1);
						if (v21 == 0) {
							IBinder v22 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v19);
							if (v22 == 0) {
								Map v23 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
								IBinder v24 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v19);
								Object v25 = v23.get(v24);
								String v26 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v25);
								TvInputHardwareManager v27 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
								if (0 == 0) {
									boolean v28 = v27.captureFrame(0, p2, p3, v3, v5);
									Binder.restoreCallingIdentity(v2);
									return v28;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(v5);\nMap v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);\nObject v16 = v15.get(p1);\nTvInputHardwareManager v34 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);\nboolean v53 = v48.startCapture(p2, p3);', 'TvInputManagerService$UserState v9 = this.this$0.getOrCreateUserStateLocked(v5);\nMap v10 = this.inputMap;\nObject v11 = v10.get(p1);\nboolean v37 = TvInputHardwareManager$TvInputHardwareImpl.-$$Nest$mstartCapture(v33, p2, p3);', 'TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);\nMap v8 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v7);\nObject v9 = v8.get(p1);\nboolean v28 = v27.captureFrame(0, p2, p3, v3, v5);']

The method captureFrame has the following similar APIs:

- API Name: getTvInputState(Ljava/lang/String;I)I with Similarity Score: 0.862304151058197
  - Access Control Level: NONE and the following code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "getTvInputState");
TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
Map v7 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v6);
Object v8 = v7.get(p1);

- API Name: createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V with Similarity Score: 0.8425524234771729
  - Access Control Level: NONE and the following code:
TvInputManagerService$UserState v16 = TvInputManagerService.getUserStateLocked(v3);
Map v20 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v14);
Object v21 = v20.get(p2);
TvInputInfo v22 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v21);
Map v23 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v14);
ComponentName v24 = v22.getComponent();
Object v25 = v23.get(v24);
TvInputManagerService$ServiceState v29 = new TvInputManagerService$ServiceState(this.this$0,v30,v3,0);
this.this$0.sendSessionTokenToClientLocked(p1, p2, 0, 0, p4);

