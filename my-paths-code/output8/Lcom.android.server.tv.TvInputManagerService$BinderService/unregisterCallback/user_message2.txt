The method unregisterCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void unregisterCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 0, "unregisterCallback", 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(v3);
	if (v10 != 0) {
		TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,v3,0);
		this.mUserStates.put(v3, v11);
		TvInputManagerService$UserState v9 = v10;
		TvInputManagerService$UserState v8 = v9;
		RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v15 = v14.unregister(p1);
		Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
		Object v17 = v16.remove(p1);
		Binder.restoreCallingIdentity(v6);
		return;
	}
}


This is path 2 for the API with depth 1:
public void unregisterCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "unregisterCallback");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mLock;
	TvInputManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
	TvInputManagerService$UserState v7 = v8;
	RemoteCallbackList v9 = this.mCallbacks;
	boolean v10 = v9.unregister(p1);
	Map v11 = this.callbackPidUidMap;
	Object v12 = v11.remove(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}


This is path 3 for the API with depth 0:
public void unregisterCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "unregisterCallback");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	RemoteCallbackList v7 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
	boolean v8 = v7.unregister(p1);
	Map v9 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v6);
	Object v10 = v9.remove(p1);
	Binder.restoreCallingIdentity(v4);
	return;
}

and the following sink code:
['int v1 = Binder.getCallingPid();\nint v2 = Binder.getCallingUid();\nint v5 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 0, "unregisterCallback", 0);\nTvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(v3);\nRemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);\nboolean v15 = v14.unregister(p1);\nMap v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);\nObject v17 = v16.remove(p1);', 'int v1 = Binder.getCallingPid();\nint v2 = Binder.getCallingUid();\nint v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "unregisterCallback");\nTvInputManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);\nRemoteCallbackList v9 = this.mCallbacks;\nboolean v10 = v9.unregister(p1);\nMap v11 = this.callbackPidUidMap;\nObject v12 = v11.remove(p1);', 'int v1 = Binder.getCallingPid();\nint v2 = Binder.getCallingUid();\nint v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "unregisterCallback");\nTvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);\nRemoteCallbackList v7 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v6);\nboolean v8 = v7.unregister(p1);\nMap v9 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v6);\nObject v10 = v9.remove(p1);']

The method unregisterCallback has the following similar APIs:

- API Name: getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo; with Similarity Score: 0.9183046817779541
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingPid();
int v2 = Binder.getCallingUid();
int v5 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 0, "getTvInputInfo", 0);
int v4 = v5;
int v3 = v4;
long v6 = Binder.clearCallingIdentity();
Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(v3);

- API Name: setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V with Similarity Score: 0.9145041704177856
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
int v5 = ActivityManager.handleIncomingUser(v2, v1, p3, 0, 0, "setInteractiveAppNotificationEnabled", 0);
TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p1, v1, v3);
ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
v8.setInteractiveAppNotificationEnabled(p2);

