The method tune in the following class Lcom.android.server.tv.TvInputManagerService$BinderService has the following code snippet:

This is path 1 for the API with depth 2:
public void tune(IBinder p1, Uri p2, Bundle p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v5 = ActivityManager.handleIncomingUser(v2, v1, p4, 0, 0, "tune", 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p1, v1, v3);
	ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
	ITvInputSession v9 = v11;
	ITvInputSession v8 = v9;
	v8.tune(p2, p3);
	TvInputManagerService$UserState v15 = TvInputManagerService.getUserStateLocked(v3);
	if (v15 != 0) {
		TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,v3,0);
		this.mUserStates.put(v3, v16);
		TvInputManagerService$UserState v14 = v15;
		TvInputManagerService$UserState v13 = v14;
		Map v21 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v13);
		Object v22 = v21.get(p1);
		if (v22 == 0) {
			if (v1 == 1000) {
				int v23 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v22);
				if (v1 != v23) {
					TvInputManagerService$SessionState v20 = v22;
					TvInputManagerService$SessionState v19 = v20;
					boolean v24 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v19);
					if (v24 == 0) {
						Uri v25 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v19);
						boolean v26 = Objects.equals(v25, p2);
						if (v26 != 0) {
							if (p2 == 0) {
								String v29 = p2.getScheme();
								boolean v30 = "content".equals(v29);
								if (v30 == 0) {
									String v31 = p2.getAuthority();
									boolean v32 = "android.media.tv".equals(v31);
									if (v32 == 0) {
										boolean v28 = 1;
										if (v28 == 0) {
											List v34 = p2.getPathSegments();
											int v35 = v34.size();
											if (v35 != 2) {
												Object v36 = v34.get(0);
												boolean v37 = "passthrough".equals(v36);
												if (v37 == 0) {
													boolean v33 = 0;
													if (v33 == 0) {
														boolean v27 = 1;
														if (v27 == 0) {
															boolean v38 = TvInputManagerService$SessionState.-$$Nest$fgetisRecordingSession(v19);
															if (v38 == 0) {
																if (v13 == 0) {
																	Map v41 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v13);
																	String v42 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v19);
																	Object v43 = v41.get(v42);
																	TvInputManagerService$TvInputState v40 = v43;
																	TvInputManagerService$TvInputState v39 = v40;
																	if (v39 == 0) {
																		int v46 = TvInputManagerService$TvInputState.-$$Nest$fgetuid(v39);
																		TvInputInfo v47 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v39);
																		int v48 = v47.getType();
																		if (v48 != 0) {
																			int v49 = TvInputManagerService$TvInputState.-$$Nest$fgetinputNumber(v39);
																			TvInputInfo v50 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v39);
																			HdmiDeviceInfo v51 = v50.getHdmiDeviceInfo();
																			if (v51 == 0) {
																				int v52 = v51.getPortId();
																				[I v53 = new [I(2);
																				int v54 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v19);
																				String v55 = new String(2);
																				String v56 = TvInputManagerService$SessionState.-$$Nest$fgetsessionId(v19);
																				FrameworkStatsLog.write(327, v53, v55, 5, v56, v48, v49, v52);
																				SomeArgs v58 = SomeArgs.obtain();
																				ComponentName v59 = TvInputManagerService$SessionState.-$$Nest$fgetcomponentName(v19);
																				String v60 = v59.getPackageName();
																				SomeArgs.arg1 = v60;
																				long v61 = System.currentTimeMillis();
																				Long v62 = Long.valueOf(v61);
																				SomeArgs.arg2 = v62;
																				long v63 = ContentUris.parseId(p2);
																				Long v64 = Long.valueOf(v63);
																				SomeArgs.arg3 = v64;
																				SomeArgs.arg4 = p3;
																				SomeArgs.arg5 = p1;
																				TvInputManagerService$WatchLogHandler v65 = TvInputManagerService.-$$Nest$fgetmWatchLogHandler(this.this$0);
																				Message v66 = v65.obtainMessage(1, v58);
																				v66.sendToTarget();
																				Binder.restoreCallingIdentity(v6);
																				return;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void tune(IBinder p1, Uri p2, Bundle p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.this$0.resolveCallingUserId(v2, v1, p4, "tune");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mLock;
	ITvInputSession v8 = this.this$0.getSessionLocked(p1, v1, v3);
	ITvInputSession v7 = v8;
	v7.tune(p2, p3);
	TvInputManagerService$UserState v11 = this.this$0.getOrCreateUserStateLocked(v3);
	TvInputManagerService$UserState v10 = v11;
	TvInputManagerService$SessionState v13 = this.this$0.getSessionStateLocked(p1, v1, v10);
	TvInputManagerService$SessionState v12 = v13;
	boolean v14 = this.isCurrent;
	if (v14 == 0) {
		Uri v15 = this.currentChannel;
		boolean v16 = Objects.equals(v15, p2);
		if (v16 != 0) {
			boolean v18 = TvContract.isTvUri(p2);
			if (v18 == 0) {
				boolean v19 = TvContract.isTwoSegmentUriStartingWith(p2, "passthrough");
				if (v19 == 0) {
					boolean v17 = 1;
					if (v17 == 0) {
						boolean v20 = this.isRecordingSession;
						if (v20 == 0) {
							TvInputManagerService$TvInputState v22 = TvInputManagerService.getTvInputState(v12, v10);
							TvInputManagerService$TvInputState v21 = v22;
							this.this$0.logTuneStateChanged(5, v12, v21);
							SomeArgs v25 = SomeArgs.obtain();
							ComponentName v26 = this.componentName;
							String v27 = v26.getPackageName();
							SomeArgs.arg1 = v27;
							long v28 = System.currentTimeMillis();
							Long v29 = Long.valueOf(v28);
							SomeArgs.arg2 = v29;
							long v30 = ContentUris.parseId(p2);
							Long v31 = Long.valueOf(v30);
							SomeArgs.arg3 = v31;
							SomeArgs.arg4 = p3;
							SomeArgs.arg5 = p1;
							TvInputManagerService$WatchLogHandler v32 = this.mWatchLogHandler;
							Message v33 = v32.obtainMessage(1, v25);
							v33.sendToTarget();
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void tune(IBinder p1, Uri p2, Bundle p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p4, "tune");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	ITvInputSession v6 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, p1, v1, v3);
	v6.tune(p2, p3);
	TvInputManagerService$UserState v8 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	TvInputManagerService$SessionState v9 = TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v8);
	boolean v10 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v9);
	if (v10 == 0) {
		Uri v11 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v9);
		boolean v12 = Objects.equals(v11, p2);
		if (v12 != 0) {
			boolean v13 = TvContract.isChannelUriForPassthroughInput(p2);
			if (v13 == 0) {
				boolean v14 = TvInputManagerService$SessionState.-$$Nest$fgetisRecordingSession(v9);
				if (v14 == 0) {
					TvInputManagerService$TvInputState v15 = TvInputManagerService.-$$Nest$smgetTvInputState(v9, v8);
					TvInputManagerService.-$$Nest$mlogTuneStateChanged(this.this$0, 5, v9, v15);
					SomeArgs v17 = SomeArgs.obtain();
					ComponentName v18 = TvInputManagerService$SessionState.-$$Nest$fgetcomponentName(v9);
					String v19 = v18.getPackageName();
					SomeArgs.arg1 = v19;
					long v20 = System.currentTimeMillis();
					Long v21 = Long.valueOf(v20);
					SomeArgs.arg2 = v21;
					long v22 = ContentUris.parseId(p2);
					Long v23 = Long.valueOf(v22);
					SomeArgs.arg3 = v23;
					SomeArgs.arg4 = p3;
					SomeArgs.arg5 = p1;
					TvInputManagerService$WatchLogHandler v24 = TvInputManagerService.-$$Nest$fgetmWatchLogHandler(this.this$0);
					Message v25 = v24.obtainMessage(1, v17);
					v25.sendToTarget();
					Binder.restoreCallingIdentity(v4);
					return;
				}
			}
		}
	}
}

and the following sink code:
['int v1 = Binder.getCallingUid();\nITvInputSession v8 = TvInputManagerService.getSessionLocked(p1, v1, v3);\nv8.tune(p2, p3);', 'TvInputManagerService$UserState v11 = this.this$0.getOrCreateUserStateLocked(v3);\nTvInputManagerService$SessionState v13 = this.this$0.getSessionStateLocked(p1, v1, v10);\nboolean v14 = this.isCurrent;\nif (v14 == 0) {\nUri v15 = this.currentChannel;\nboolean v16 = Objects.equals(v15, p2);', 'SomeArgs v25 = SomeArgs.obtain();\nComponentName v26 = this.componentName;\nString v27 = v26.getPackageName();\nSomeArgs.arg1 = v27;\nlong v28 = System.currentTimeMillis();\nLong v29 = Long.valueOf(v28);\nSomeArgs.arg2 = v29;\nlong v30 = ContentUris.parseId(p2);\nLong v31 = Long.valueOf(v30);\nSomeArgs.arg3 = v31;\nSomeArgs.arg4 = p3;\nSomeArgs.arg5 = p1;', 'TvInputManagerService$WatchLogHandler v32 = this.mWatchLogHandler;\nMessage v33 = v32.obtainMessage(1, v25);\nv33.sendToTarget();']

The method tune has the following similar APIs:

- API Name: setVolume(Landroid/os/IBinder;FI)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8444061279296875, Code:
int v1 = Binder.getCallingUid();
TvInputManagerService$SessionState v11 = TvInputManagerService.getSessionStateLocked(p1, v1, v10);
ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(v8);
v12.setVolume(p2);
  - Similarity: 0.8085088729858398, Code:
int v1 = Binder.getCallingUid();
TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v3);
ITvInputSession v7 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, v6);
v7.setVolume(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: startRecording(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8321794271469116, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
ITvInputSession v6 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, p1, v1, v3);
v6.startRecording(p2, p3);
  - Similarity: 0.814596951007843, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
ITvInputSession v8 = this.this$0.getSessionLocked(p1, v1, v3);
ITvInputSession v7 = v8;
v7.startRecording(p2, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: requestAd(Landroid/os/IBinder;Landroid/media/tv/AdRequest;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8283263444900513, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
TvInputManagerService$SessionState v10 = TvInputManagerService.getOrCreateUserStateLocked(v3);
ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(v8);
v12.requestAd(p2);
  - Similarity: 0.8276946544647217, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
TvInputManagerService$SessionState v6 = TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v3);
ITvInputSession v7 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, v6);
v7.requestAd(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8195183873176575, Code:
TvInputManagerService$UserState v16 = TvInputManagerService.getUserStateLocked(v3);
Map v20 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v14);
Object v21 = v20.get(p2);
TvInputInfo v22 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v21);
Map v23 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v14);
ComponentName v24 = v22.getComponent();
Object v25 = v23.get(v24);
TvInputManagerService$ServiceState v29 = new TvInputManagerService$ServiceState(this.this$0,v30,v3,0);
this.this$0.sendSessionTokenToClientLocked(p1, p2, 0, 0, p4);
  - Access Control Level: NONE

- API Name: timeShiftPause(Landroid/os/IBinder;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8141355514526367, Code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p2, "timeShiftPause");
ITvInputSession v6 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, p1, v1, v3);
v6.timeShiftPause();
  - Access Control Level: SYS_OR_SIG

