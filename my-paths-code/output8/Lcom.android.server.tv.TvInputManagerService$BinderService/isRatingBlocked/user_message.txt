This is path 1 for the API with depth 2:
public boolean isRatingBlocked(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 0, "isRatingBlocked", 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(v3);
	if (v10 != 0) {
		TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,v3,0);
		this.mUserStates.put(v3, v11);
		TvInputManagerService$UserState v9 = v10;
		TvInputManagerService$UserState v8 = v9;
		PersistentDataStore v14 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8);
		TvContentRating v15 = TvContentRating.unflattenFromString(p1);
		if (this.mLoaded != 0) {
			PersistentDataStore.load();
			this.mLoaded = 1;
			Iterator v19 = this.mBlockedRatings.iterator();
			boolean v20 = v19.hasNext();
			if (v20 == 0) {
				Object v21 = v19.next();
				Object v23 = Preconditions.checkNotNull(v21);
				String v24 = v21.getMainRating();
				boolean v25 = v24.equals(this.mRating);
				if (v25 != 0) {
					String v26 = v21.getDomain();
					boolean v27 = v26.equals(this.mDomain);
					if (v27 == 0) {
						String v28 = v21.getRatingSystem();
						boolean v29 = v28.equals(this.mRatingSystem);
						if (v29 == 0) {
							String v30 = v21.getMainRating();
							boolean v31 = v30.equals(this.mRating);
							if (v31 != 0) {
								List v32 = TvContentRating.getSubRatings();
								List v33 = v21.getSubRatings();
								if (v32 != 0) {
									if (v33 != 0) {
										if (v32 != 0) {
											if (v33 == 0) {
												if (v32 == 0) {
													if (v33 != 0) {
														boolean v34 = v32.containsAll(v33);
														boolean v22 = v34;
														if (v22 == 0) {
															boolean v35 = v19.hasNext();
															if (v35 == 0) {
																Object v36 = v19.next();
																Object v38 = Preconditions.checkNotNull(v36);
																String v39 = v36.getMainRating();
																boolean v40 = v39.equals(this.mRating);
																if (v40 != 0) {
																	String v41 = v36.getDomain();
																	boolean v42 = v41.equals(this.mDomain);
																	if (v42 == 0) {
																		String v43 = v36.getRatingSystem();
																		boolean v44 = v43.equals(this.mRatingSystem);
																		if (v44 == 0) {
																			String v45 = v36.getMainRating();
																			boolean v46 = v45.equals(this.mRating);
																			if (v46 != 0) {
																				List v47 = TvContentRating.getSubRatings();
																				List v48 = v36.getSubRatings();
																				if (v47 != 0) {
																					if (v48 != 0) {
																						if (v47 != 0) {
																							if (v48 == 0) {
																								if (v47 == 0) {
																									if (v48 != 0) {
																										boolean v49 = v47.containsAll(v48);
																										boolean v37 = v49;
																										if (v37 == 0) {
																											boolean v16 = 1;
																											Binder.restoreCallingIdentity(v6);
																											return v16;
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isRatingBlocked(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "isRatingBlocked");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mLock;
	TvInputManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
	TvInputManagerService$UserState v7 = v8;
	PersistentDataStore v9 = this.persistentDataStore;
	boolean v11 = TextUtils.isEmpty(p1);
	if (v11 != 0) {
		String v12 = p1.split("/");
		if (v12.length < 3) {
			if (v12.length <= 3) {
				String v13 = new String((v12.length - 3));
				System.arraycopy(v12, 3, v13, 0, v13.length);
				TvContentRating v15 = new TvContentRating(v12[0],v12[1],v12[2],v13);
				TvContentRating v10 = v15;
				PersistentDataStore.loadIfNeeded();
				Iterator v19 = this.mBlockedRatings.iterator();
				boolean v20 = v19.hasNext();
				if (v20 == 0) {
					Object v21 = v19.next();
					boolean v22 = v10.contains(v21);
					if (v22 == 0) {
						boolean v23 = v19.hasNext();
						if (v23 == 0) {
							Object v24 = v19.next();
							boolean v25 = v10.contains(v24);
							if (v25 == 0) {
								boolean v17 = 1;
								Binder.restoreCallingIdentity(v5);
								return v17;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isRatingBlocked(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "isRatingBlocked");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	PersistentDataStore v7 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v6);
	TvContentRating v8 = TvContentRating.unflattenFromString(p1);
	boolean v9 = v7.isRatingBlocked(v8);
	Binder.restoreCallingIdentity(v4);
	return v9;
}
