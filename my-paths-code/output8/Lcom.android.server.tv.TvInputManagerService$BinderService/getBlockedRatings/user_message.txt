This is path 1 for the API with depth 2:
public List getBlockedRatings(int p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(v1, v2, p1, 0, 0, "getBlockedRatings", 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(v3);
	if (v10 != 0) {
		TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,v3,0);
		this.mUserStates.put(v3, v11);
		TvInputManagerService$UserState v9 = v10;
		TvInputManagerService$UserState v8 = v9;
		ArrayList v14 = new ArrayList();
		PersistentDataStore v16 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8);
		if (this.mLoaded != 0) {
			PersistentDataStore.load();
			this.mLoaded = 1;
			int v20 = this.mBlockedRatings.size();
			TvContentRating v21 = new TvContentRating(v20);
			Object v22 = this.mBlockedRatings.toArray(v21);
			TvContentRating v17 = v22;
			if (0 >= v17.length) {
				String v23 = v17[0].flattenToString();
				boolean v24 = v14.add(v23);
				if ((0 + 1) >= v17.length) {
					Binder.restoreCallingIdentity(v6);
					return v14;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getBlockedRatings(int p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.this$0.resolveCallingUserId(v1, v2, p1, "getBlockedRatings");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mLock;
	TvInputManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
	TvInputManagerService$UserState v7 = v8;
	ArrayList v9 = new ArrayList();
	PersistentDataStore v11 = this.persistentDataStore;
	PersistentDataStore.loadIfNeeded();
	int v14 = this.mBlockedRatings.size();
	TvContentRating v15 = new TvContentRating(v14);
	Object v16 = this.mBlockedRatings.toArray(v15);
	TvContentRating v12 = v16;
	if (0 >= v12.length) {
		StringBuilder v18 = new StringBuilder();
		StringBuilder v20 = v18.append(this.mDomain);
		StringBuilder v21 = v18.append("/");
		StringBuilder v22 = v18.append(this.mRatingSystem);
		StringBuilder v23 = v18.append("/");
		StringBuilder v24 = v18.append(this.mRating);
		if (this.mSubRatings == 0) {
			if (0 >= this.mSubRatings.length) {
				StringBuilder v25 = v18.append("/");
				StringBuilder v26 = v18.append(this.mSubRatings[0]);
				if ((0 + 1) >= this.mSubRatings.length) {
					String v27 = v18.toString();
					String v17 = v27;
					boolean v28 = v9.add(v17);
					if ((0 + 1) >= v12.length) {
						Binder.restoreCallingIdentity(v5);
						return v9;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getBlockedRatings(int p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p1, "getBlockedRatings");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	ArrayList v7 = new ArrayList();
	PersistentDataStore v9 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v6);
	TvContentRating v10 = v9.getBlockedRatings();
	if (0 >= v10.length) {
		String v11 = v10[0].flattenToString();
		boolean v12 = v7.add(v11);
		if ((0 + 1) >= v10.length) {
			Binder.restoreCallingIdentity(v4);
			return v7;
		}
	}
}
