The method registerCallback in the following class Lcom.android.server.tv.TvInputManagerService$BinderService has the following code snippet:

This is path 1 for the API with depth 2:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 0, "registerCallback", 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(v3);
	if (v10 != 0) {
		TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,v3,0);
		this.mUserStates.put(v3, v11);
		TvInputManagerService$UserState v9 = v10;
		TvInputManagerService$UserState v8 = v9;
		RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v15 = v14.register(p1);
		if (v15 != 0) {
			Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
			Integer v17 = Integer.valueOf(v1);
			Integer v18 = Integer.valueOf(v2);
			Pair v19 = Pair.create(v17, v18);
			Object v20 = v16.put(p1, v19);
			Binder.restoreCallingIdentity(v6);
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "registerCallback");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mLock;
	TvInputManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
	TvInputManagerService$UserState v7 = v8;
	RemoteCallbackList v9 = this.mCallbacks;
	boolean v10 = v9.register(p1);
	if (v10 != 0) {
		Map v11 = this.callbackPidUidMap;
		Integer v12 = Integer.valueOf(v1);
		Integer v13 = Integer.valueOf(v2);
		Pair v14 = Pair.create(v12, v13);
		Object v15 = v11.put(p1, v14);
		Binder.restoreCallingIdentity(v5);
		return;
	}
}


This is path 3 for the API with depth 0:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "registerCallback");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	RemoteCallbackList v7 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
	boolean v8 = v7.register(p1);
	if (v8 != 0) {
		Map v9 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v6);
		Integer v10 = Integer.valueOf(v1);
		Integer v11 = Integer.valueOf(v2);
		Pair v12 = Pair.create(v10, v11);
		Object v13 = v9.put(p1, v12);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}

and the following sink code:
['RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);\nboolean v15 = v14.register(p1);', 'Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);\nInteger v17 = Integer.valueOf(v1);\nInteger v18 = Integer.valueOf(v2);\nPair v19 = Pair.create(v17, v18);\nObject v20 = v16.put(p1, v19);', 'RemoteCallbackList v9 = this.mCallbacks;\nboolean v10 = v9.register(p1);', 'Map v11 = this.callbackPidUidMap;\nInteger v12 = Integer.valueOf(v1);\nInteger v13 = Integer.valueOf(v2);\nPair v14 = Pair.create(v12, v13);\nObject v15 = v11.put(p1, v14);', 'RemoteCallbackList v7 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v6);\nboolean v8 = v7.register(p1);', 'Map v9 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v6);\nInteger v10 = Integer.valueOf(v1);\nInteger v11 = Integer.valueOf(v2);\nPair v12 = Pair.create(v10, v11);\nObject v13 = v9.put(p1, v12);']

The method registerCallback has the following similar APIs:

- API Name: unregisterCallback(Landroid/media/tv/interactive/ITvInteractiveAppManagerCallback;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.971574604511261, Code:
RemoteCallbackList v9 = this.mCallbacks;
boolean v10 = v9.unregister(p1);
  - Similarity: 0.9463165998458862, Code:
RemoteCallbackList v14 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
boolean v15 = v14.unregister(p1);
  - Similarity: 0.9453925490379333, Code:
RemoteCallbackList v7 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
boolean v8 = v7.unregister(p1);
  - Access Control Level: NONE

- API Name: addOnAssociationsChangedListener(Landroid/companion/IOnAssociationsChangedListener;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.8658286929130554, Code:
RemoteCallbackList v9 = CompanionDeviceManagerService.-$$Nest$fgetmListeners(this.this$0);
Integer v10 = Integer.valueOf(p2);
boolean v11 = v9.register(p1, v10);
  - Similarity: 0.8062123656272888, Code:
Context v1 = this.this$0.getContext();
RemoteCallbackList v9 = this.mListeners;
Integer v10 = Integer.valueOf(p2);
boolean v11 = v9.register(p1, v10);
  - Access Control Level: SYS_OR_SIG

- API Name: addAuthenticatorsRegisteredCallback(Landroid/hardware/fingerprint/IFingerprintAuthenticatorsRegisteredCallback;)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8458021879196167, Code:
RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
boolean v5 = v4.register(p1);
  - Access Control Level: NORMAL

- API Name: registerCallback(Landroid/media/tv/interactive/ITvInteractiveAppManagerCallback;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8266853094100952, Code:
int v3 = TvInteractiveAppManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "registerCallback");
TvInteractiveAppManagerService$UserState v6 = TvInteractiveAppManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
RemoteCallbackList v7 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
boolean v8 = v7.register(p1);
  - Similarity: 0.7851389646530151, Code:
int v3 = v4;
TvInteractiveAppManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
RemoteCallbackList v9 = this.mCallbacks;
boolean v10 = v9.register(p1);
  - Access Control Level: NONE

- API Name: registerContentCaptureOptionsCallback(Ljava/lang/String;Landroid/view/contentcapture/IContentCaptureOptionsCallback;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.8186621069908142, Code:
RemoteCallbackList v13 = ContentCaptureManagerService.-$$Nest$fgetmCallbacks(this.this$0);
boolean v14 = v13.register(p2, p1);
ContentCaptureOptions v29 = new ContentCaptureOptions(ContentCaptureManagerService.mDevCfgLoggingLevel,ContentCaptureManagerService.mDevCfgMaxBufferSize,ContentCaptureManagerService.mDevCfgIdleFlushingFrequencyMs,ContentCaptureManagerService.mDevCfgTextChangeFlushingFrequencyMs,ContentCaptureManagerService.mDevCfgLogHistorySize,v20);
p2.setContentCaptureOptions(v16);
  - Similarity: 0.7908492088317871, Code:
RemoteCallbackList v2 = ContentCaptureManagerService.-$$Nest$fgetmCallbacks(this.this$0);
boolean v3 = v2.register(p2, p1);
ContentCaptureOptions v5 = ContentCaptureManagerService.mGlobalContentCaptureOptions.getOptions(v4, p1);
p2.setContentCaptureOptions(v5);
  - Access Control Level: NONE

