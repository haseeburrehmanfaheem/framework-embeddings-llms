The method createSession has the following code snippet:

This is path 1 for the API with depth 2:
public void createSession(ITvInputClient p1, String p2, boolean p3, int p4, int p5){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v5 = ActivityManager.handleIncomingUser(v2, v1, p5, 0, 0, "createSession", 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	UUID v7 = UUID.randomUUID();
	String v8 = v7.toString();
	Object v9 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	int v10 = TvInputManagerService.-$$Nest$fgetmCurrentUserId(this.this$0);
	if (p5 == v10) {
		Set v11 = TvInputManagerService.-$$Nest$fgetmRunningProfiles(this.this$0);
		Integer v12 = Integer.valueOf(p5);
		boolean v13 = v11.contains(v12);
		if (v13 != 0) {
			if (p3 != 0) {
				TvInputManagerService$UserState v16 = TvInputManagerService.getUserStateLocked(v3);
				if (v16 != 0) {
					TvInputManagerService$UserState v17 = new TvInputManagerService$UserState(this.mContext,v3,0);
					this.mUserStates.put(v3, v17);
					TvInputManagerService$UserState v15 = v16;
					TvInputManagerService$UserState v14 = v15;
					Map v20 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v14);
					Object v21 = v20.get(p2);
					if (v21 != 0) {
						TvInputInfo v22 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v21);
						Map v23 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v14);
						ComponentName v24 = v22.getComponent();
						Object v25 = v23.get(v24);
						if (v25 != 0) {
							ComponentName v26 = v22.getComponent();
							String v27 = v26.getPackageName();
							ApplicationInfo v28 = PackageManager.getApplicationInfoAsUserCached(v27, 0, v3);
							TvInputManagerService$ServiceState v29 = new TvInputManagerService$ServiceState(this.this$0,v30,v3,0);
							ComponentName v30 = v22.getComponent();
							Map v32 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v14);
							ComponentName v33 = v22.getComponent();
							Object v34 = v32.put(v33, v29);
							boolean v35 = TvInputManagerService$ServiceState.-$$Nest$fgetreconnecting(v25);
							if (v35 == 0) {
								TvInputManagerService.-$$Nest$msendSessionTokenToClientLocked(this.this$0, p1, p2, 0, 0, p4);
								Binder.restoreCallingIdentity(v6);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void createSession(ITvInputClient p1, String p2, boolean p3, int p4, int p5){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.this$0.resolveCallingUserId(v2, v1, p5, "createSession");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	UUID v6 = UUID.randomUUID();
	String v7 = v6.toString();
	Object v8 = this.mLock;
	int v9 = this.mCurrentUserId;
	if (p5 == v9) {
		Set v10 = this.mRunningProfiles;
		Integer v11 = Integer.valueOf(p5);
		boolean v12 = v10.contains(v11);
		if (v12 != 0) {
			if (p3 != 0) {
				TvInputManagerService$UserState v14 = this.this$0.getOrCreateUserStateLocked(v3);
				TvInputManagerService$UserState v13 = v14;
				Map v15 = this.inputMap;
				Object v16 = v15.get(p2);
				if (v16 != 0) {
					TvInputInfo v17 = this.info;
					Map v18 = this.serviceStateMap;
					ComponentName v19 = v17.getComponent();
					Object v20 = v18.get(v19);
					if (v20 != 0) {
						ComponentName v21 = v17.getComponent();
						String v22 = v21.getPackageName();
						ApplicationInfo v23 = PackageManager.getApplicationInfoAsUserCached(v22, 0, v3);
						TvInputManagerService$ServiceState v24 = new TvInputManagerService$ServiceState(this.this$0,v25,v3,0);
						ComponentName v25 = v17.getComponent();
						Map v27 = this.serviceStateMap;
						ComponentName v28 = v17.getComponent();
						Object v29 = v27.put(v28, v24);
						boolean v30 = this.reconnecting;
						if (v30 == 0) {
							this.this$0.sendSessionTokenToClientLocked(p1, p2, 0, 0, p4);
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void createSession(ITvInputClient p1, String p2, boolean p3, int p4, int p5){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p5, "createSession");
	long v4 = Binder.clearCallingIdentity();
	UUID v5 = UUID.randomUUID();
	String v6 = v5.toString();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	int v8 = TvInputManagerService.-$$Nest$fgetmCurrentUserId(this.this$0);
	if (p5 == v8) {
		Set v9 = TvInputManagerService.-$$Nest$fgetmRunningProfiles(this.this$0);
		Integer v10 = Integer.valueOf(p5);
		boolean v11 = v9.contains(v10);
		if (v11 != 0) {
			if (p3 != 0) {
				TvInputManagerService$UserState v12 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
				Map v13 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v12);
				Object v14 = v13.get(p2);
				if (v14 != 0) {
					TvInputInfo v15 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v14);
					Map v16 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v12);
					ComponentName v17 = v15.getComponent();
					Object v18 = v16.get(v17);
					if (v18 != 0) {
						ComponentName v19 = v15.getComponent();
						String v20 = v19.getPackageName();
						ApplicationInfo v21 = PackageManager.getApplicationInfoAsUserCached(v20, 0, v3);
						TvInputManagerService$ServiceState v22 = new TvInputManagerService$ServiceState(this.this$0,v23,v3,0);
						ComponentName v23 = v15.getComponent();
						Map v25 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v12);
						ComponentName v26 = v15.getComponent();
						Object v27 = v25.put(v26, v22);
						boolean v28 = TvInputManagerService$ServiceState.-$$Nest$fgetreconnecting(v18);
						if (v28 == 0) {
							TvInputManagerService.-$$Nest$msendSessionTokenToClientLocked(this.this$0, p1, p2, 0, 0, p4);
							Binder.restoreCallingIdentity(v4);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['TvInputManagerService$UserState v16 = TvInputManagerService.getUserStateLocked(v3);\nMap v20 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v14);\nObject v21 = v20.get(p2);\nTvInputInfo v22 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v21);\nMap v23 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v14);\nComponentName v24 = v22.getComponent();\nObject v25 = v23.get(v24);\nTvInputManagerService$ServiceState v29 = new TvInputManagerService$ServiceState(this.this$0,v30,v3,0);\nthis.this$0.sendSessionTokenToClientLocked(p1, p2, 0, 0, p4);', 'int v1 = Binder.getCallingUid();\nint v2 = Binder.getCallingPid();\nlong v6 = Binder.clearCallingIdentity();\nBinder.restoreCallingIdentity(v6);']

The method createSession has the following similar APIs:

- API Name: generateCinematicEffect(Landroid/app/wallpapereffectsgeneration/CinematicEffectRequest;Landroid/app/wallpapereffectsgeneration/ICinematicEffectListener;)V with Similarity Score: 0.8801342248916626
  - Access Control Level: SYS_OR_SIG and the following code:
int v15 = Binder.getCallingUid();
boolean v16 = v14.isCallerRecents(v15);
v1.accept(v20);
Binder.restoreCallingIdentity(v18);

- API Name: getRestrictBackgroundByCaller()I with Similarity Score: 0.8628844022750854
  - Access Control Level: NORMAL and the following code:
int v2 = Binder.getCallingUid();
int v3 = 3;
return v3;

