The method getAuthenticatorTypes in the following class Lcom.android.server.accounts.AccountManagerService has the following code snippet:

This is path 1 for the API with depth 1:
public AuthenticatorDescription getAuthenticatorTypes(int p1){
	int v1 = Binder.getCallingUid();
	if (v2 == 0) {
		int v10 = Binder.getCallingPid();
		if (v16 == 0) {
			boolean v14 = 1;
			if (v14 != 0) {
				long v17 = IAccountManager$Stub.clearCallingIdentity();
				this.mAuthenticatorCache.updateServices(p1);
				Collection v20 = this.mAuthenticatorCache.getAllServices(p1);
				int v21 = v20.size();
				AuthenticatorDescription v22 = new AuthenticatorDescription(v21);
				Iterator v23 = v20.iterator();
				boolean v24 = v23.hasNext();
				if (v24 == 0) {
					Object v25 = v23.next();
					boolean v26 = v23.hasNext();
					if (v26 == 0) {
						AuthenticatorDescription v18 = v22;
						IAccountManager$Stub.restoreCallingIdentity(v17);
						return v18;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public AuthenticatorDescription getAuthenticatorTypes(int p1){
	int v1 = Binder.getCallingUid();
	if (v2 == 0) {
		int v10 = Binder.getCallingPid();
		boolean v14 = p0.isCrossUser(v1, p1);
		if (v14 != 0) {
			long v15 = IAccountManager$Stub.clearCallingIdentity();
			AuthenticatorDescription v16 = p0.getAuthenticatorTypesInternal(p1);
			IAccountManager$Stub.restoreCallingIdentity(v15);
			return v16;
		}
	}
}

and the following sink code:
['this.mAuthenticatorCache.updateServices(p1);\nCollection v20 = this.mAuthenticatorCache.getAllServices(p1);\nint v21 = v20.size();\nAuthenticatorDescription v22 = new AuthenticatorDescription(v21);', 'boolean v14 = p0.isCrossUser(v1, p1);\nlong v15 = IAccountManager$Stub.clearCallingIdentity();\nAuthenticatorDescription v16 = p0.getAuthenticatorTypesInternal(p1);\nIAccountManager$Stub.restoreCallingIdentity(v15);']

The method getAuthenticatorTypes has the following similar APIs:

- API Name: getPassword(Landroid/accounts/Account;)Ljava/lang/String; in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.8203266859054565, Code:
int v15 = UserHandle.getCallingUserId();
boolean v16 = p0.isAccountManagedByCaller(Account.type, v1, v15);
long v17 = IAccountManager$Stub.clearCallingIdentity();
AccountManagerService$UserAccounts v18 = p0.getUserAccounts(v15);
String v19 = p0.readPasswordInternal(v18, p1);
IAccountManager$Stub.restoreCallingIdentity(v17);
return v19;
  - Similarity: 0.7809637784957886, Code:
int v15 = UserHandle.getCallingUserId();
List v17 = AccountManagerService.getTypesManagedByCaller(v1, v15);
boolean v18 = v17.contains(Account.type);
long v19 = IAccountManager$Stub.clearCallingIdentity();
AccountManagerService$UserAccounts v21 = AccountManagerService.getUserAccountsNotChecked(v15);
String v25 = AccountManagerService$UserAccounts.accountsDb.findAccountPasswordByNameAndType(Account.name, Account.type);
IAccountManager$Stub.restoreCallingIdentity(v19);
return v22;
  - Access Control Level: SYS_OR_SIG

- API Name: accountAuthenticated(Landroid/accounts/Account;)Z in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.8188420534133911, Code:
boolean v9 = p0.isAccountManagedByCaller(Account.type, v1, v8);
long v12 = IAccountManager$Stub.clearCallingIdentity();
AccountManagerService$UserAccounts v13 = p0.getUserAccounts(v8);
boolean v14 = p0.updateLastAuthenticatedTime(p1);
IAccountManager$Stub.restoreCallingIdentity(v12);
  - Access Control Level: SYS_OR_SIG

- API Name: getAuthToken(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZZLandroid/os/Bundle;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7820612788200378, Code:
int v4 = UserHandle.getCallingUserId();
long v5 = Binder.clearCallingIdentity();
AccountManagerService$UserAccounts v6 = this.mUsers.get(v4);
AuthenticatorDescription v8 = AuthenticatorDescription.newKey(Account.type);
RegisteredServicesCache$ServiceInfo v10 = this.mAuthenticatorCache.getServiceInfo(v8, AccountManagerService$UserAccounts.-$$Nest$fgetuserId(v6));
  - Access Control Level: SYS_OR_SIG

- API Name: clearPassword(Landroid/accounts/Account;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7681874632835388, Code:
int var1 = Binder.getCallingUid();
long v17 = IAccountManager$Stub.clearCallingIdentity();
AccountManagerService$UserAccounts v18 = p0.getUserAccounts(v15);
  - Access Control Level: SYS_OR_SIG

- API Name: getAccountsAndVisibilityForPackage(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map; in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7623016834259033, Code:
ArrayList v5 = new ArrayList();
Collection v8 = this.mAuthenticatorCache.getAllServices(v2);
Iterator v12 = v8.iterator();
LinkedHashMap v48 = new LinkedHashMap();
Object v52 = v50.next();
Object v53 = AccountManagerService$UserAccounts.accountCache.get(v52);
Integer v54 = Integer.valueOf(3);
Object v68 = v48.put(v53[0], v54);
return v42;
  - Access Control Level: SYS_OR_SIG

