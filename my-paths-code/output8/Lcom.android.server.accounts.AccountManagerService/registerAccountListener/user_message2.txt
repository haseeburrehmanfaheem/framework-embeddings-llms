The method registerAccountListener in the following class Lcom.android.server.accounts.AccountManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void registerAccountListener(String p1, String p2){
	int v3 = UserHandle.getCallingUserId();
	long v4 = IAccountManager$Stub.clearCallingIdentity();
	Object v7 = this.mUsers.get(v3);
	if (v7 != 0) {
		File v8 = new File(v9);
		String v9 = this.mInjector.getPreNDatabaseName(v3);
		File v11 = new File(v12);
		String v12 = this.mInjector.getDeDatabaseName(v3);
		AccountManagerService$UserAccounts v14 = new AccountManagerService$UserAccounts(this.mContext,v3,v8,v11);
		this.mUsers.append(v3, v14);
		AccountManagerService.purgeOldGrants(v14);
		AccountManager.invalidateLocalAccountsDataCaches();
		boolean v19 = AccountManagerService$UserAccounts.accountsDb.isCeDatabaseAttached();
		if (v19 != 0) {
			boolean v20 = this.mLocalUnlockedUsers.get(v3);
			if (v20 == 0) {
				if (0 == 0) {
					AccountManagerService.validateAccountsInternal(v7, 1);
					AccountManagerService$UserAccounts v6 = v7;
					AccountManagerService$UserAccounts v5 = v6;
					Map v23 = this.mReceiversForType;
					if (p1 != 0) {
						String v24 = new String(1);
						if (0 >= p1.length) {
							Map v25 = this.mReceiversForType;
							Object v26 = v25.get(p1[0]);
							if (v26 != 0) {
								HashMap v27 = new HashMap();
								Map v29 = this.mReceiversForType;
								Object v30 = v29.put(p1[0], v27);
								Object v31 = v26.get(p2);
								if (v31 == 0) {
									int v32 = v31.intValue();
									Integer v33 = Integer.valueOf(1);
									Object v34 = v26.put(p2, v33);
									if ((0 + 1) >= p1.length) {
										IAccountManager$Stub.restoreCallingIdentity(v4);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void registerAccountListener(String p1, String p2){
	int v3 = UserHandle.getCallingUserId();
	long v4 = IAccountManager$Stub.clearCallingIdentity();
	AccountManagerService$UserAccounts v6 = AccountManagerService.getUserAccountsNotChecked(v3);
	AccountManagerService$UserAccounts v5 = v6;
	Map v8 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5);
	if (p1 != 0) {
		String v9 = new String(1);
		if (0 >= p1.length) {
			Map v10 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5);
			Object v11 = v10.get(p1[0]);
			if (v11 != 0) {
				HashMap v12 = new HashMap();
				Map v14 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5);
				Object v15 = v14.put(p1[0], v12);
				Object v16 = v11.get(p2);
				if (v16 == 0) {
					int v17 = v16.intValue();
					Integer v18 = Integer.valueOf(1);
					Object v19 = v11.put(p2, v18);
					if ((0 + 1) >= p1.length) {
						IAccountManager$Stub.restoreCallingIdentity(v4);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void registerAccountListener(String p1, String p2){
	int v3 = UserHandle.getCallingUserId();
	long v4 = IAccountManager$Stub.clearCallingIdentity();
	AccountManagerService$UserAccounts v5 = p0.getUserAccounts(v3);
	p0.registerAccountListener(p1, p2, v5);
	IAccountManager$Stub.restoreCallingIdentity(v4);
	return;
}

and the following sink code:
['AccountManagerService$UserAccounts v14 = new AccountManagerService$UserAccounts(this.mContext,v3,v8,v11);\nthis.mUsers.append(v3, v14);', 'Map v23 = this.mReceiversForType;\nObject v26 = v25.get(p1[0]);\nHashMap v27 = new HashMap();\nObject v30 = v29.put(p1[0], v27);\nObject v31 = v26.get(p2);\nInteger v33 = Integer.valueOf(1);\nObject v34 = v26.put(p2, v33);', 'AccountManagerService$UserAccounts v6 = AccountManagerService.getUserAccountsNotChecked(v3);\nMap v8 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5);', 'p0.registerAccountListener(p1, p2, v5);']

The method registerAccountListener has the following similar APIs:

- API Name: unregisterAccountListener([Ljava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.9552088975906372, Code:
p0.unregisterAccountListener(p1, p2, v5)
  - Similarity: 0.8875600695610046, Code:
Map v10 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5)
Object v11 = v10.get(p1[0])
if (v11 == 0) { ... }
Object v12 = v11.get(p2)
int v14 = v13.intValue()
Integer v16 = Integer.valueOf((v15 - 1))
Object v17 = v11.put(p2, v16)
  - Access Control Level: SYS_OR_SIG

- API Name: renameAccount(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.9253769516944885, Code:
AccountManagerService$UserAccounts v32 = new AccountManagerService$UserAccounts(this.mContext,v17,v26,v29);
this.mUsers.append(v17, v32);
AccountManagerService.purgeOldGrants(v32);
AccountManager.invalidateLocalAccountsDataCaches();
  - Access Control Level: SYS_OR_SIG

- API Name: getPackagesAndVisibilityForAccount(Landroid/accounts/Account;)Ljava/util/Map; in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.908331036567688, Code:
AccountManagerService$UserAccounts v19 = new AccountManagerService$UserAccounts(this.mContext,v3,v13,v16);
this.mUsers.append(v3, v19);
Map v28 = this.visibilityCache;
Object v29 = v28.get(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: setAccountVisibility(Landroid/accounts/Account;Ljava/lang/String;I)Z in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.8677287101745605, Code:
HashSet v34 = new HashSet();
Map v36 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v11);
String v37 = new String(2);
Object v39 = v38.get(v37[0]);
  - Access Control Level: SYS_OR_SIG

- API Name: updateCredentials(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZLandroid/os/Bundle;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.8478632569313049, Code:
AccountManagerService$UserAccounts v24 = AccountManagerService.getUserAccountsNotChecked(v21);
AccountManagerService$13 v25 = new AccountManagerService$13(p0,v23,p1,Account.type,p4,1,Account.name,0,1,p2,p3,p5);
boolean v35 = AccountManagerService$Session.bindToAuthenticator(this.mAccountType);
  - Access Control Level: SYS_OR_SIG

