The method someUserHasAccount in the following class Lcom.android.server.accounts.AccountManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean someUserHasAccount(Account p1){
	if (v2 == 0) {
		long v3 = Binder.clearCallingIdentity();
		if (this.mUserManager != 0) {
			UserManager v6 = UserManager.get(this.mContext);
			this.mUserManager = v6;
			UserManager v5 = this.mUserManager;
			List v7 = v5.getAliveUsers();
			int v8 = v7.size();
			[I v9 = new [I(v8);
			if (0 >= v8) {
				Object v10 = v7.get(0);
				if ((0 + 1) >= v8) {
					ArrayList v12 = Lists.newArrayList();
					if (0 >= v9.length) {
						AccountManagerService$UserAccounts v13 = AccountManagerService.getUserAccounts(v9[0]);
						if (v13 != 0) {
							int v14 = Binder.getCallingUid();
							Account v15 = AccountManagerService.getAccountsFromCache(v13, 0, v14, 0, 0);
							if (0 >= v15.length) {
								AccountAndUser v16 = new AccountAndUser(v15[0],v9[0]);
								boolean v18 = v12.add(v16);
								if ((0 + 1) >= v15.length) {
									if ((0 + 1) >= v9.length) {
										int v19 = v12.size();
										AccountAndUser v20 = new AccountAndUser(v19);
										Object v21 = v12.toArray(v20);
										AccountAndUser v11 = v21;
										AccountAndUser v4 = v11;
										if ((v4.length - 1) < 0) {
											boolean v22 = AccountAndUser.account.equals(p1);
											if (v22 == 0) {
												if (((v4.length - 1) + -1) < 0) {
													boolean v23 = AccountAndUser.account.equals(p1);
													if (v23 == 0) {
														Binder.restoreCallingIdentity(v3);
														return 1;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean someUserHasAccount(Account p1){
	if (v2 == 0) {
		long v3 = Binder.clearCallingIdentity();
		UserManager v5 = AccountManagerService.getUserManager();
		List v6 = v5.getAliveUsers();
		int v7 = v6.size();
		[I v8 = new [I(v7);
		if (0 >= v7) {
			Object v9 = v6.get(0);
			if ((0 + 1) >= v7) {
				AccountAndUser v10 = AccountManagerService.getAccounts(v8);
				AccountAndUser v4 = v10;
				if ((v4.length - 1) < 0) {
					boolean v11 = AccountAndUser.account.equals(p1);
					if (v11 == 0) {
						if (((v4.length - 1) + -1) < 0) {
							boolean v12 = AccountAndUser.account.equals(p1);
							if (v12 == 0) {
								Binder.restoreCallingIdentity(v3);
								return 1;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean someUserHasAccount(Account p1){
	if (v2 == 0) {
		long v3 = Binder.clearCallingIdentity();
		AccountAndUser v4 = p0.getAllAccounts();
		if ((v4.length - 1) < 0) {
			boolean v5 = AccountAndUser.account.equals(p1);
			if (v5 == 0) {
				if (((v4.length - 1) + -1) < 0) {
					boolean v6 = AccountAndUser.account.equals(p1);
					if (v6 == 0) {
						Binder.restoreCallingIdentity(v3);
						return 1;
					}
				}
			}
		}
	}
}

and the following sink code:
['UserManager v6 = UserManager.get(this.mContext);\nList v7 = v5.getAliveUsers();\nAccountAndUser v16 = new AccountAndUser(v15[0],v9[0]);\nboolean v18 = v12.add(v16);']

The method someUserHasAccount has the following similar APIs:

- API Name: resetKeyStore(I)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.7771130204200745, Code:
UserManager v11 = LockSettingsService.getUserManagerFromCache(UserInfo.id);
boolean v12 = v11.isCredentialSharableWithParent();
String v26 = v22.toString();
Key v27 = this.mJavaKeyStore.getKey(v26, 0);
Cipher v28 = Cipher.getInstance("AES/GCM/NoPadding");
v28.init(2, v27, v29);
byte[] v32 = v28.doFinal(v21);
LockscreenCredential v33 = LockscreenCredential.createManagedPassword(v32);
v44.clearNamespace(2, 102);
  - Similarity: 0.7679858207702637, Code:
List v6 = this.mUserManager.getProfiles(p1);
Iterator v7 = v6.iterator();
boolean v8 = v7.hasNext();
Object v9 = v7.next();
UserHandle v12 = UserHandle.of(UserInfo.id);
Key v40 = this.mJavaKeyStore.getKey(v39, 0);
Cipher v41 = Cipher.getInstance("AES/GCM/NoPadding");
v41.init(2, v40, v42);
byte[] v45 = v41.doFinal(v34);
LockscreenCredential v47 = new LockscreenCredential(4,v48);
boolean v52 = this.mEncryptedPasswords.contains(UserInfo.id);
v85.clearNamespace(2, 102);
  - Access Control Level: SYS_OR_SIG

- API Name: onAccountAccessed(Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.773904025554657, Code:
List v9 = AccountManagerService.getTypesVisibleToCaller(v7, v3, v5);
Account v13 = AccountManagerService.getAccountsInternal(v12, v7, v5, v9, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: getAccountsByTypeForPackage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Landroid/accounts/Account; in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7738277912139893, Code:
List v30 = AccountManagerService.getTypesForCaller(v4, v2, 1)
AccountManagerService$UserAccounts v39 = AccountManagerService.getUserAccountsNotChecked(v2)
Account v46 = AccountManagerService.getAccountsFromCache(v38, v45, v4, p2, 0)
  - Access Control Level: SYS_OR_SIG

- API Name: getRemainingCreatableUserCount(Ljava/lang/String;)I in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7736033201217651, Code:
Object v2 = this.mUserTypes.get(p1);
int v5 = this.mUsers.size();
PackageManager v13 = this.mContext.getPackageManager();
return v19;
  - Access Control Level: SYS_OR_SIG

- API Name: getAuthTokenLabel(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7733342051506042, Code:
AccountManagerService$UserAccounts v9 = AccountManagerService.getUserAccountsNotChecked(v6);
AccountManagerService$7 v10 = new AccountManagerService$7(p0,v8,p1,p2,0,0,0,0,p2,p3);
boolean v20 = AccountManagerService$Session.bindToAuthenticator(this.mAccountType);
  - Access Control Level: SYS_OR_SIG

