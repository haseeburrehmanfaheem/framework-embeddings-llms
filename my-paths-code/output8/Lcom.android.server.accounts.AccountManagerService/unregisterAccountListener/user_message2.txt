The method unregisterAccountListener in the following class Lcom.android.server.accounts.AccountManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void unregisterAccountListener(String p1, String p2){
	int v3 = UserHandle.getCallingUserId();
	long v4 = IAccountManager$Stub.clearCallingIdentity();
	Object v7 = this.mUsers.get(v3);
	if (v7 != 0) {
		boolean v8 = AccountManagerService$UserAccounts.accountsDb.isCeDatabaseAttached();
		if (v8 != 0) {
			boolean v9 = this.mLocalUnlockedUsers.get(v3);
			if (v9 == 0) {
				File v17 = new File(v18);
				String v18 = this.mInjector.getCeDatabaseName(v3);
				AccountManagerService$UserAccounts.accountsDb.attachCeDatabase(v17);
				AccountManagerService.syncDeCeAccountsLocked(v7);
				if (0 == 0) {
					AccountManagerService.validateAccountsInternal(v7, 1);
					AccountManagerService$UserAccounts v6 = v7;
					AccountManagerService$UserAccounts v5 = v6;
					Map v24 = this.mReceiversForType;
					if (p1 != 0) {
						String v25 = new String(1);
						if (0 >= p1.length) {
							Map v26 = this.mReceiversForType;
							Object v27 = v26.get(p1[0]);
							if (v27 == 0) {
								Object v28 = v27.get(p2);
								if (v28 == 0) {
									Object v29 = v27.get(p2);
									int v30 = v29.intValue();
									if (v30 != 1) {
										int v31 = v29.intValue();
										Integer v32 = Integer.valueOf((v31 - 1));
										Object v33 = v27.put(p2, v32);
										if ((0 + 1) >= p1.length) {
											IAccountManager$Stub.restoreCallingIdentity(v4);
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void unregisterAccountListener(String p1, String p2){
	int v3 = UserHandle.getCallingUserId();
	long v4 = IAccountManager$Stub.clearCallingIdentity();
	AccountManagerService$UserAccounts v6 = AccountManagerService.getUserAccountsNotChecked(v3);
	AccountManagerService$UserAccounts v5 = v6;
	Map v8 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5);
	if (p1 != 0) {
		String v9 = new String(1);
		if (0 >= p1.length) {
			Map v10 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5);
			Object v11 = v10.get(p1[0]);
			if (v11 == 0) {
				Object v12 = v11.get(p2);
				if (v12 == 0) {
					Object v13 = v11.get(p2);
					int v14 = v13.intValue();
					if (v14 != 1) {
						int v15 = v13.intValue();
						Integer v16 = Integer.valueOf((v15 - 1));
						Object v17 = v11.put(p2, v16);
						if ((0 + 1) >= p1.length) {
							IAccountManager$Stub.restoreCallingIdentity(v4);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void unregisterAccountListener(String p1, String p2){
	int v3 = UserHandle.getCallingUserId();
	long v4 = IAccountManager$Stub.clearCallingIdentity();
	AccountManagerService$UserAccounts v5 = p0.getUserAccounts(v3);
	p0.unregisterAccountListener(p1, p2, v5);
	IAccountManager$Stub.restoreCallingIdentity(v4);
	return;
}

and the following sink code:
['Object v27 = v26.get(p1[0])\nif (v27 == 0) { ... }\nObject v28 = v27.get(p2)\nif (v28 == 0) { ... }\nint v30 = v29.intValue()\nInteger v32 = Integer.valueOf((v31 - 1))\nObject v33 = v27.put(p2, v32)', 'Map v10 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5)\nObject v11 = v10.get(p1[0])\nif (v11 == 0) { ... }\nObject v12 = v11.get(p2)\nint v14 = v13.intValue()\nInteger v16 = Integer.valueOf((v15 - 1))\nObject v17 = v11.put(p2, v16)', 'p0.unregisterAccountListener(p1, p2, v5)']

The method unregisterAccountListener has the following similar APIs:

- API Name: registerAccountListener([Ljava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.9552088975906372, Code:
p0.registerAccountListener(p1, p2, v5);
  - Similarity: 0.8875600695610046, Code:
AccountManagerService$UserAccounts v6 = AccountManagerService.getUserAccountsNotChecked(v3);
Map v8 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v5);
  - Similarity: 0.7902318835258484, Code:
Map v23 = this.mReceiversForType;
Object v26 = v25.get(p1[0]);
HashMap v27 = new HashMap();
Object v30 = v29.put(p1[0], v27);
Object v31 = v26.get(p2);
Integer v33 = Integer.valueOf(1);
Object v34 = v26.put(p2, v33);
  - Access Control Level: SYS_OR_SIG

- API Name: setAccountVisibility(Landroid/accounts/Account;Ljava/lang/String;I)Z in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.8727962970733643, Code:
HashSet v34 = new HashSet();
Map v36 = AccountManagerService$UserAccounts.-$$Nest$fgetmReceiversForType(v11);
String v37 = new String(2);
Object v39 = v38.get(v37[0]);
  - Similarity: 0.7199699282646179, Code:
boolean v9 = p0.setAccountVisibility(p1, p2, p3, 1, v8);
  - Access Control Level: SYS_OR_SIG

- API Name: findNanoAppOnHub(ILandroid/hardware/location/NanoAppFilter;)[I in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.7544068098068237, Code:
Object v10 = v2.get(0);
int v11 = v10.intValue();
  - Access Control Level: SYS_OR_SIG

- API Name: registerDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.7523208260536194, Code:
p0.registerDevicePresenceListenerActive(p2, p1, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: unregisterDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.7498404383659363, Code:
p0.registerDevicePresenceListenerActive(p2, p1, 0);
  - Access Control Level: SYS_OR_SIG

