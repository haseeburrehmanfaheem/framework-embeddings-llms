This is path 1 for the API with depth 2:
public void onAccountAccessed(String p1){
	int v3 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	String v5 = this.mContext.getOpPackageName();
	List v10 = AccountManagerService.getTypesForCaller(v7, v3, 1);
	List v9 = v10;
	boolean v11 = v9.isEmpty();
	if (v11 == 0) {
		long v12 = IAccountManager$Stub.clearCallingIdentity();
		AccountManagerService$UserAccounts v14 = AccountManagerService.getUserAccountsNotChecked(v3);
		AccountManagerService$UserAccounts v13 = v14;
		ArrayList v16 = new ArrayList();
		Iterator v18 = v9.iterator();
		boolean v19 = v18.hasNext();
		if (v19 == 0) {
			Object v20 = v18.next();
			Account v21 = AccountManagerService.getAccountsFromCache(v13, v20, v7, v5, 0);
			if (v21 == 0) {
				List v22 = Arrays.asList(v21);
				boolean v23 = v16.addAll(v22);
				boolean v24 = v18.hasNext();
				if (v24 == 0) {
					int v25 = v16.size();
					Account v26 = new Account(v25);
					int v27 = v16.size();
					if (0 >= v27) {
						Object v28 = v16.get(0);
						int v29 = v16.size();
						if ((0 + 1) >= v29) {
							Account v15 = v26;
							IAccountManager$Stub.restoreCallingIdentity(v12);
							Account v6 = v15;
							if (0 >= v6.length) {
								String v31 = v6[0].getAccessId();
								boolean v32 = Objects.equals(v31, p1);
								if (v32 == 0) {
									int v35 = UserHandle.getUserId(v1);
									if (v36 == 0) {
										int v37 = UserHandle.getUserId(v1);
										AccountManagerService$UserAccounts v39 = AccountManagerService.getUserAccountsNotChecked(v37);
										AccountManagerService$UserAccounts v38 = v39;
										Object v41 = Objects.requireNonNull(0, "packageName cannot be null");
										long v42 = IAccountManager$Stub.clearCallingIdentity();
										int v43 = AccountManagerService$UserAccounts.-$$Nest$fgetuserId(v38);
										int v44 = this.mPackageManager.getPackageUidAsUser(0, v43);
										IAccountManager$Stub.restoreCallingIdentity(v42);
										String v49 = caughtException.getMessage();
										Integer v53 = Integer.valueOf(3);
										Integer v40 = v53;
										int v54 = v40.intValue();
										if (v54 == 1) {
											if (v54 != 2) {
												boolean v33 = 0;
												if (v33 != 0) {
													if ((0 + 1) >= v6.length) {
														Binder.restoreCallingIdentity(v4);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void onAccountAccessed(String p1){
	int v3 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	String v5 = this.mContext.getOpPackageName();
	List v9 = AccountManagerService.getTypesVisibleToCaller(v7, v3, v5);
	boolean v10 = v9.isEmpty();
	if (v10 == 0) {
		long v11 = IAccountManager$Stub.clearCallingIdentity();
		AccountManagerService$UserAccounts v12 = AccountManagerService.getUserAccounts(v3);
		Account v13 = AccountManagerService.getAccountsInternal(v12, v7, v5, v9, 0);
		IAccountManager$Stub.restoreCallingIdentity(v11);
		Account v6 = v13;
		if (0 >= v6.length) {
			String v15 = v6[0].getAccessId();
			boolean v16 = Objects.equals(v15, p1);
			if (v16 == 0) {
				int v19 = UserHandle.getUserId(v1);
				if (v20 == 0) {
					int v21 = UserHandle.getUserId(v1);
					AccountManagerService$UserAccounts v22 = AccountManagerService.getUserAccounts(v21);
					Integer v23 = AccountManagerService.resolveAccountVisibility(v6[0], 0, v22);
					int v24 = v23.intValue();
					if (v24 == 1) {
						if (v24 != 2) {
							boolean v17 = 0;
							if (v17 != 0) {
								if ((0 + 1) >= v6.length) {
									Binder.restoreCallingIdentity(v4);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void onAccountAccessed(String p1){
	int v3 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	String v5 = this.mContext.getOpPackageName();
	Account v6 = p0.getAccounts(v3, v5);
	if (0 >= v6.length) {
		String v7 = v6[0].getAccessId();
		boolean v8 = Objects.equals(v7, p1);
		if (v8 == 0) {
			boolean v9 = p0.hasAccountAccess(v6[0], 0, v1);
			if (v9 != 0) {
				if ((0 + 1) >= v6.length) {
					Binder.restoreCallingIdentity(v4);
					return;
				}
			}
		}
	}
}
