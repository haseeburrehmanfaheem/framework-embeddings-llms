The method getAccountsByTypeForPackage in the following class Lcom.android.server.accounts.AccountManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public Account getAccountsByTypeForPackage(String p1, String p2, String p3){
	if (v7 != 0) {
		if (p1 != 0) {
			if (v27 != 0) {
				if (p1 == 0) {
					boolean v28 = v26.contains(p1);
					if (v28 == 0) {
						List v30 = AccountManagerService.getTypesForCaller(v4, v2, 1);
						List v29 = v30;
						boolean v31 = v29.isEmpty();
						if (v31 != 0) {
							if (p1 == 0) {
								boolean v32 = v29.contains(p1);
								if (v32 != 0) {
									boolean v33 = v29.contains(p1);
									if (v33 == 0) {
										ArrayList v34 = new ArrayList();
										boolean v36 = v34.add(p1);
										long v37 = IAccountManager$Stub.clearCallingIdentity();
										AccountManagerService$UserAccounts v39 = AccountManagerService.getUserAccountsNotChecked(v2);
										AccountManagerService$UserAccounts v38 = v39;
										ArrayList v41 = new ArrayList();
										Iterator v43 = v29.iterator();
										boolean v44 = v43.hasNext();
										if (v44 == 0) {
											Object v45 = v43.next();
											Account v46 = AccountManagerService.getAccountsFromCache(v38, v45, v4, p2, 0);
											if (v46 == 0) {
												List v47 = Arrays.asList(v46);
												boolean v48 = v41.addAll(v47);
												boolean v49 = v43.hasNext();
												if (v49 == 0) {
													int v50 = v41.size();
													Account v51 = new Account(v50);
													int v52 = v41.size();
													if (0 >= v52) {
														Object v53 = v41.get(0);
														int v54 = v41.size();
														if ((0 + 1) >= v54) {
															Account v40 = v51;
															IAccountManager$Stub.restoreCallingIdentity(v37);
															Account v8 = v40;
															return v8;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public Account getAccountsByTypeForPackage(String p1, String p2, String p3){
	if (v7 != 0) {
		if (p1 != 0) {
			if (v27 != 0) {
				if (p1 == 0) {
					boolean v28 = v26.contains(p1);
					if (v28 == 0) {
						List v29 = AccountManagerService.getTypesVisibleToCaller(v4, v2, p2);
						boolean v30 = v29.isEmpty();
						if (v30 != 0) {
							if (p1 == 0) {
								boolean v31 = v29.contains(p1);
								if (v31 != 0) {
									boolean v32 = v29.contains(p1);
									if (v32 == 0) {
										ArrayList v33 = new ArrayList();
										boolean v35 = v33.add(p1);
										long v36 = IAccountManager$Stub.clearCallingIdentity();
										AccountManagerService$UserAccounts v37 = AccountManagerService.getUserAccounts(v2);
										Account v38 = AccountManagerService.getAccountsInternal(v37, v4, p2, v29, 0);
										IAccountManager$Stub.restoreCallingIdentity(v36);
										Account v8 = v38;
										return v8;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public Account getAccountsByTypeForPackage(String p1, String p2, String p3){
	if (v7 != 0) {
		if (p1 != 0) {
			Account v8 = p0.getAccountsAsUserForPackage(p1, v2, p2, v4, p3, 0);
			return v8;
		}
	}
}

and the following sink code:
['Account v8 = p0.getAccountsAsUserForPackage(p1, v2, p2, v4, p3, 0)\nreturn v8;', 'List v29 = AccountManagerService.getTypesVisibleToCaller(v4, v2, p2)\nAccount v38 = AccountManagerService.getAccountsInternal(v37, v4, p2, v29, 0)\nIAccountManager$Stub.restoreCallingIdentity(v36)\nreturn v8;', 'List v30 = AccountManagerService.getTypesForCaller(v4, v2, 1)\nAccountManagerService$UserAccounts v39 = AccountManagerService.getUserAccountsNotChecked(v2)\nAccount v46 = AccountManagerService.getAccountsFromCache(v38, v45, v4, p2, 0)']

The method getAccountsByTypeForPackage has the following similar APIs:

- API Name: getAccountsAsUser(Ljava/lang/String;ILjava/lang/String;)[Landroid/accounts/Account; in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.9573407173156738, Code:
Account v3 = p0.getAccountsAsUserForPackage(p1, p2, p3, -1, p3, 0);
return v3;
  - Similarity: 0.8992431163787842, Code:
Account v33 = AccountManagerService.getAccountsInternal(v32, -1, p3, v24, 0);
IAccountManager$Stub.restoreCallingIdentity(v31);
Account v3 = v33;
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: onAccountAccessed(Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.916022777557373, Code:
List v10 = AccountManagerService.getTypesForCaller(v7, v3, 1);
Iterator v18 = v9.iterator();
Account v21 = AccountManagerService.getAccountsFromCache(v13, v20, v7, v5, 0);
ArrayList v16 = new ArrayList();
boolean v23 = v16.addAll(v22);
  - Similarity: 0.89572674036026, Code:
List v9 = AccountManagerService.getTypesVisibleToCaller(v7, v3, v5);
Account v13 = AccountManagerService.getAccountsInternal(v12, v7, v5, v9, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: getAccountsByFeatures(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.9079201221466064, Code:
List v22 = AccountManagerService.getTypesForCaller(v1, v20, 1);
boolean v23 = v21.contains(p2);
Account v35 = new Account((0 + v33.length));
Collection v36 = AccountManagerService$UserAccounts.accountCache.values();
  - Access Control Level: SYS_OR_SIG

- API Name: accountAuthenticated(Landroid/accounts/Account;)Z in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.88689124584198, Code:
boolean v9 = p0.isAccountManagedByCaller(Account.type, v1, v8);
long v12 = IAccountManager$Stub.clearCallingIdentity();
AccountManagerService$UserAccounts v13 = p0.getUserAccounts(v8);
boolean v14 = p0.updateLastAuthenticatedTime(p1);
IAccountManager$Stub.restoreCallingIdentity(v12);
  - Access Control Level: SYS_OR_SIG

- API Name: setAccountVisibility(Landroid/accounts/Account;Ljava/lang/String;I)Z in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.8842220306396484, Code:
List v7 = AccountManagerService.getTypesForCaller(v3, v4, 0);
List v6 = v7;
boolean v8 = v6.contains(Account.type);
boolean v5 = v8;
  - Access Control Level: SYS_OR_SIG

