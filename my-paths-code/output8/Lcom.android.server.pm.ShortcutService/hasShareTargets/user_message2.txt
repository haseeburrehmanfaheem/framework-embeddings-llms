The method hasShareTargets in the following class Lcom.android.server.pm.ShortcutService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasShareTargets(String p1, String p2, int p3){
	boolean v5 = this.mUnlockedUsers.get(p3);
	if (v5 == 0) {
		boolean v4 = 1;
		if (v4 == 0) {
			boolean v8 = ShortcutService.isUserUnlockedL(p3);
			if (v8 != 0) {
				if (p3 == this.mLastLockedUser) {
					ShortcutService.wtf("User still locked");
					this.mLastLockedUser = p3;
					Object v10 = this.mUsers.get(p3);
					if (v10 != 0) {
						ShortcutUser v11 = ShortcutService.loadUserLocked(p3);
						if (v11 != 0) {
							ShortcutUser v12 = new ShortcutUser(ShortcutService,p3);
							this.mUsers.put(p3, v11);
							ShortcutService.checkPackageChanges(p3);
							ShortcutUser v7 = v10;
							ShortcutPackage v17 = ShortcutUser.getPackageShortcutsIfExists(p2);
							if (v17 != 0) {
								ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p2);
								Object v20 = this.mPackages.put(p2, v18);
								ShortcutPackage v16 = v17;
								ShortcutPackage v6 = v16;
								boolean v21 = v6.hasShareTargets();
								return v21;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean hasShareTargets(String p1, String p2, int p3){
	boolean v4 = ShortcutService.isUserUnlockedL(p3);
	if (v4 == 0) {
		ShortcutUser v6 = ShortcutService.getUserShortcutsLocked(p3);
		ShortcutPackage v7 = v6.getPackageShortcuts(p2);
		ShortcutPackage v5 = v7;
		boolean v9 = this.mShareTargets.isEmpty();
		if (v9 != 0) {
			boolean v8 = 1;
			return v8;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean hasShareTargets(String p1, String p2, int p3){
	p0.throwIfUserLockedL(p3);
	ShortcutPackage v4 = p0.getPackageShortcutsLocked(p2, p3);
	boolean v5 = v4.hasShareTargets();
	return v5;
}

and the following sink code:
['ShortcutPackage v4 = p0.getPackageShortcutsLocked(p2, p3);\nboolean v5 = v4.hasShareTargets();\nreturn v5;', 'Object v10 = this.mUsers.get(p3);\nShortcutUser v11 = ShortcutService.loadUserLocked(p3);\nthis.mUsers.put(p3, v11);\nShortcutPackage v17 = ShortcutUser.getPackageShortcutsIfExists(p2);\nShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p2);\nthis.mPackages.put(p2, v18);\nboolean v21 = v6.hasShareTargets();\nreturn v21;', 'boolean v4 = ShortcutService.isUserUnlockedL(p3);\nShortcutUser v6 = ShortcutService.getUserShortcutsLocked(p3);\nShortcutPackage v7 = v6.getPackageShortcuts(p2);\nboolean v9 = this.mShareTargets.isEmpty();']

The method hasShareTargets has the following similar APIs:

- API Name: onApplicationActive(Ljava/lang/String;I)V in the following Class: Lcom.android.server.pm.ShortcutService with the following sink code entries:
  - Similarity: 0.8449104428291321, Code:
ShortcutPackage v3 = p0.getPackageShortcutsLocked(p1, p2);
v3.resetRateLimitingForCommandLineNoSaving();
  - Access Control Level: SYS_OR_SIG

- API Name: enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V in the following Class: Lcom.android.server.pm.ShortcutService with the following sink code entries:
  - Similarity: 0.8183876276016235, Code:
ShortcutPackage v4 = p0.getPackageShortcutsForPublisherLocked(p1, p3);
v4.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);
  - Similarity: 0.7964333295822144, Code:
ShortcutUser v13 = ShortcutService.getUserShortcutsLocked(p3);
ShortcutPackage v14 = v13.getPackageShortcuts(p1);
  - Similarity: 0.7939343452453613, Code:
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p3);
ShortcutUser v26 = new ShortcutUser(ShortcutService,p3);
ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
  - Access Control Level: SYS_OR_SIG

- API Name: removeAllDynamicShortcuts(Ljava/lang/String;I)V in the following Class: Lcom.android.server.pm.ShortcutService with the following sink code entries:
  - Similarity: 0.8156647682189941, Code:
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
ShortcutPackage v32 = ShortcutUser.getPackageShortcutsIfExists(p1);
ShortcutUser v27 = new ShortcutUser(ShortcutService,p2);
ShortcutPackage v33 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
  - Similarity: 0.8118279576301575, Code:
ShortcutPackage v5 = p0.getPackageShortcutsForPublisherLocked(p1, p2);
v5.findAll(v2, v6, 4);
List v9 = v5.deleteAllDynamicShortcuts();
  - Access Control Level: SYS_OR_SIG

- API Name: getShareTargets(Ljava/lang/String;Landroid/content/IntentFilter;I)Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.pm.ShortcutService with the following sink code entries:
  - Similarity: 0.8126230239868164, Code:
boolean v8 = this.mUnlockedUsers.get(p3);
int v38 = v32.size();
ShortcutUser v24 = ShortcutService.loadUserInternal(p3, v23, 0);
ParceledListSlice v49 = new ParceledListSlice(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: getShortcuts(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.pm.ShortcutService with the following sink code entries:
  - Similarity: 0.793883204460144, Code:
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p3);
ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p3);
ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p3);
ShortcutPackage v26 = v25.getPackageShortcuts(p1);
ArrayList v22 = new ArrayList();
ShortcutPackage.findAll(v22, v19, 9, 0, 0, 0);
ParceledListSlice v31 = new ParceledListSlice(v32);
  - Access Control Level: SYS_OR_SIG

