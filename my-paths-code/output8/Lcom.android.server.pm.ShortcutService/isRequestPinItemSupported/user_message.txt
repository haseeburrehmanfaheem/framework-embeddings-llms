This is path 1 for the API with depth 2:
public boolean isRequestPinItemSupported(int p1, int p2){
	boolean v2 = v4;
	if (v2 == 0) {
		long v5 = p0.injectClearCallingIdentity();
		int v8 = this.mService.getParentOrSelfUserId(p1);
		String v9 = this.mService.getDefaultLauncher(v8);
		if (v9 != 0) {
			ComponentName v10 = this.mService.injectGetPinConfirmationActivity(v9, v8, p2);
			if (v10 != 0) {
				Pair v7 = 0;
				if (v7 == 0) {
					boolean v6 = 1;
					p0.injectRestoreCallingIdentity(v5);
					return v6;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isRequestPinItemSupported(int p1, int p2){
	boolean v2 = ShortcutService.isCallerSystem();
	if (v2 == 0) {
		long v4 = Binder.clearCallingIdentity();
		long v3 = v4;
		Pair v6 = ShortcutRequestPinProcessor.getRequestPinConfirmationActivity(p1, p2);
		if (v6 == 0) {
			boolean v5 = 1;
			Binder.restoreCallingIdentity(v3);
			return v5;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isRequestPinItemSupported(int p1, int p2){
	p0.verifyCallerUserId(p1);
	long v2 = p0.injectClearCallingIdentity();
	boolean v3 = this.mShortcutRequestPinProcessor.isRequestPinItemSupported(p1, p2);
	p0.injectRestoreCallingIdentity(v2);
	return v3;
}
