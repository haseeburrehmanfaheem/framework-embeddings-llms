The method pushDynamicShortcut has the following code snippet:

This is path 1 for the API with depth 2:
public void pushDynamicShortcut(String p1, ShortcutInfo p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p3);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p3);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		if (p2 != 0) {
			String v16 = this.mPackageName;
			boolean v17 = Objects.equals(p1, v16);
			if (v17 == 0) {
				ArrayList v18 = new ArrayList();
				boolean v22 = this.mUnlockedUsers.get(p3);
				if (v22 == 0) {
					boolean v23 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p3);
					boolean v21 = v23;
					if (v21 == 0) {
						boolean v26 = ShortcutService.isUserUnlockedL(p3);
						if (v26 != 0) {
							if (p3 == this.mLastLockedUser) {
								ShortcutService.wtf("User still locked");
								this.mLastLockedUser = p3;
								Object v28 = this.mUsers.get(p3);
								if (v28 != 0) {
									ShortcutUser v29 = ShortcutService.loadUserLocked(p3);
									if (v29 != 0) {
										ShortcutUser v30 = new ShortcutUser(ShortcutService,p3);
										this.mUsers.put(p3, v29);
										ShortcutService.checkPackageChanges(p3);
										ShortcutUser v25 = v28;
										ShortcutPackage v35 = ShortcutUser.getPackageShortcutsIfExists(p1);
										if (v35 != 0) {
											ShortcutPackage v36 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
											Object v38 = this.mPackages.put(p1, v36);
											ShortcutPackage v34 = v35;
											ShortcutUser v39 = this.mShortcutUser;
											ShortcutUser.detectLocaleChange();
											ShortcutUser.rescanPackageIfNeeded(p1, 0);
											ShortcutPackage v24 = v34;
											String v43 = p2.getId();
											if (v43 != 0) {
												Object v46 = this.mShortcuts.get(v43);
												ShortcutInfo v45 = v46;
												if (v45 == 0) {
													boolean v48 = v45.isImmutable();
													if (v48 == 0) {
														if (1 == 0) {
															boolean v49 = v45.isVisibleToPublisher();
															if (v49 != 0) {
																ShortcutInfo v50 = new ShortcutInfo(1);
																List v51 = Arrays.asList(v50);
																int v53 = v51.size();
																if ((v53 - 1) < 0) {
																	Object v54 = v51.get((v53 - 1));
																	ComponentName v55 = this.mActivity;
																	if (v55 != 0) {
																		if (0 != 0) {
																			String v56 = this.mPackageName;
																			int v57 = this.mUserId;
																			long v59 = ShortcutService.getStatStartTime();
																			Intent v60 = ShortcutService.getMainActivityIntent();
																			List v61 = ShortcutService.queryActivities(v60, v56, 0, v57);
																			int v62 = v61.size();
																			if (v62 != 0) {
																				Object v63 = v61.get(0);
																				ComponentName v64 = ResolveInfo.activityInfo.getComponentName();
																				ShortcutService.logDurationStat(11, v59);
																				ComponentName v58 = 0;
																				if (v58 == 0) {
																					StringBuilder v66 = new StringBuilder();
																					StringBuilder v68 = v66.append("Launcher activity not found for package ");
																					String v69 = this.mPackageName;
																					StringBuilder v70 = v66.append(v69);
																					String v71 = v66.toString();
																					Preconditions.checkState(1, v71);
																					this.mActivity = 0;
																					if (((v53 - 1) + -1) < 0) {
																						boolean v74 = p2.hasRank();
																						if (v74 != 0) {
																							p2.setRank(0);
																							ShortcutPackage$$ExternalSyntheticLambda18 v77 = new ShortcutPackage$$ExternalSyntheticLambda18();
																							int v80 = this.mShortcuts.size();
																							if ((v80 + -1) < 0) {
																								Object v81 = this.mShortcuts.valueAt((v80 + -1));
																								v77.accept(v81);
																								if (((v80 + -1) + -1) < 0) {
																									p2.setImplicitRank(0);
																									boolean v86 = p2.isReturnedByServer();
																									if (v86 == 0) {
																										ComponentName v87 = p2.getActivity();
																										if (v87 == 0) {
																											String v88 = p2.getPackage();
																											ComponentName v89 = p2.getActivity();
																											String v90 = v89.getPackageName();
																											boolean v91 = v88.equals(v90);
																											StringBuilder v92 = new StringBuilder();
																											StringBuilder v94 = v92.append("Cannot publish shortcut: activity ");
																											ComponentName v95 = p2.getActivity();
																											StringBuilder v96 = v92.append(v95);
																											StringBuilder v97 = v92.append(" does not belong to package ");
																											String v98 = p2.getPackage();
																											StringBuilder v99 = v92.append(v98);
																											String v100 = v92.toString();
																											Preconditions.checkState(v91, v100);
																											ComponentName v102 = p2.getActivity();
																											int v103 = p2.getUserId();
																											boolean v104 = ShortcutService.injectIsMainActivity(v102, v103);
																											StringBuilder v105 = new StringBuilder();
																											StringBuilder v107 = v105.append("Cannot publish shortcut: activity ");
																											ComponentName v108 = p2.getActivity();
																											StringBuilder v109 = v105.append(v108);
																											StringBuilder v110 = v105.append(" is not main activity");
																											String v111 = v105.toString();
																											Preconditions.checkState(v104, v111);
																											if (0 != 0) {
																												p2.enforceMandatoryFields(0);
																												if (0 != 0) {
																													ComponentName v114 = p2.getActivity();
																													if (v114 == 0) {
																														Preconditions.checkState(1, "Cannot publish shortcut: target activity is not set");
																														Icon v116 = p2.getIcon();
																														if (v116 == 0) {
																															Icon v117 = p2.getIcon();
																															Icon v118 = ShortcutInfo.validateIcon(v117);
																															int v119 = p2.getFlags();
																															p2.replaceFlags((v119 & 8192));
																															p2.setRankChanged();
																															boolean v124 = ShortcutInfo.hasFlags(64);
																															boolean v123 = (v124 ^ 1);
																															Preconditions.checkArgument(v123, "pushDynamicShortcuts() cannot publish disabled shortcuts");
																															this.mFlags = (this.mFlags | 1);
																															v18.clear();
																															String v128 = this.mId;
																															if (v128 != 0) {
																																Object v130 = this.mShortcuts.get(v128);
																																ShortcutInfo v129 = v130;
																																if (v129 != 0) {
																																	int v131 = this.mMaxShortcuts;
																																	ArrayMap v133 = new ArrayMap();
																																	ShortcutPackage$$ExternalSyntheticLambda40 v135 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v133);
																																	ShortcutPackage.forEachShortcut(v135);
																																	ArrayMap v132 = v133;
																																	ComponentName v138 = this.mActivity;
																																	Object v139 = v132.get(v138);
																																	if (v139 == 0) {
																																		int v140 = v139.size();
																																		if (v140 <= v131) {
																																			if (v139 == 0) {
																																				int v141 = v139.size();
																																				if (v141 != v131) {
																																					Collections.sort(v139, this.mShortcutTypeAndRankComparator);
																																					Object v143 = v139.get((v131 - 1));
																																					boolean v145 = ShortcutInfo.isDeclaredInManifest();
																																					boolean v144 = v145;
																																					if (v144 == 0) {
																																						boolean v146 = v18.add(v143);
																																						String v147 = this.mId;
																																						ShortcutInfo v149 = ShortcutPackage.deleteOrDisableWithId(v147, 0, 0, 1, 0, 1);
																																						ShortcutInfo v148 = v149;
																																						if (v148 == 0) {
																																							if ((this.mExcludedSurfaces & 1) == 0) {
																																								boolean v150 = 1;
																																								if (v150 == 0) {
																																									boolean v152 = ShortcutUser.mService.isAppSearchEnabled();
																																									boolean v151 = v152;
																																									if (v151 == 0) {
																																										String v153 = this.mId;
																																										Object v154 = this.mTransientShortcuts.put(v153, p2);
																																										boolean v156 = ShortcutUser.mService.isAppSearchEnabled();
																																										boolean v155 = v156;
																																										if (v155 == 0) {
																																											ShortcutPackage$$ExternalSyntheticLambda11 v157 = new ShortcutPackage$$ExternalSyntheticLambda11(ShortcutPackage,p2);
																																											long v160 = Binder.clearCallingIdentity();
																																											v157.run();
																																											Binder.restoreCallingIdentity(v160);
																																											boolean v122 = 0;
																																											if (v122 == 0) {
																																												boolean v163 = v18.isEmpty();
																																												if (v163 == 0) {
																																													Object v164 = v18.get(0);
																																													List v165 = Collections.singletonList(v164);
																																													v18.clear();
																																													boolean v167 = v18.add(p2);
																																													long v170 = System.currentTimeMillis();
																																													long v169 = v170;
																																													ShortcutPackage$$ExternalSyntheticLambda4 v171 = new ShortcutPackage$$ExternalSyntheticLambda4(v169);
																																													int v174 = this.mShortcuts.size();
																																													if ((((v80 + -1) + -1) + -1) < 0) {
																																														Object v175 = this.mShortcuts.valueAt((((v80 + -1) + -1) + -1));
																																														v171.accept(v175);
																																														if (((((v80 + -1) + -1) + -1) + -1) < 0) {
																																															ArrayMap v178 = new ArrayMap();
																																															ShortcutPackage$$ExternalSyntheticLambda40 v180 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v178);
																																															ShortcutPackage.forEachShortcut(v180);
																																															ArrayMap v177 = v178;
																																															int v183 = v177.size();
																																															if ((v183 + -1) < 0) {
																																																Object v184 = v177.valueAt((v183 + -1));
																																																Collections.sort(v184, this.mShortcutRankComparator);
																																																int v186 = v184.size();
																																																if (0 >= v186) {
																																																	Object v187 = v184.get(0);
																																																	boolean v189 = ShortcutInfo.isDeclaredInManifest();
																																																	boolean v188 = v189;
																																																	if (v188 == 0) {
																																																		boolean v191 = ShortcutInfo.hasFlags(1);
																																																		boolean v190 = v191;
																																																		if (v190 != 0) {
																																																			int v192 = this.mRank;
																																																			if (v192 == 0) {
																																																				String v193 = this.mId;
																																																				ShortcutPackage$$ExternalSyntheticLambda5 v194 = new ShortcutPackage$$ExternalSyntheticLambda5(v169,0);
																																																				Object v197 = Objects.requireNonNull(v193);
																																																				Object v198 = Objects.requireNonNull(v194);
																																																				if (v187 == 0) {
																																																					v194.accept(v187);
																																																					ShortcutInfo v200 = ShortcutPackage.findShortcutById(v193);
																																																					if (v200 != 0) {
																																																						v194.accept(v200);
																																																						ShortcutInfo v202 = new ShortcutInfo(1);
																																																						ShortcutPackage.saveShortcut(v202);
																																																						if ((0 + 1) >= v186) {
																																																							if (((v183 + -1) + -1) < 0) {
																																																								Object v205 = Objects.requireNonNull(v24);
																																																								String v206 = this.mPackageName;
																																																								int v207 = this.mPackageUserId;
																																																								ShortcutService$$ExternalSyntheticLambda28 v209 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v207,v206);
																																																								Runnable v208 = v209;
																																																								Object v212 = Objects.requireNonNull(v24);
																																																								Object v213 = Objects.requireNonNull(v208);
																																																								this.mHandler.removeCallbacksAndMessages(v24);
																																																								boolean v215 = this.mHandler.postDelayed(v208, v24, 100);
																																																								List v217 = ShortcutService.removeNonKeyFields(v18);
																																																								List v218 = ShortcutService.removeNonKeyFields(v165);
																																																								UserHandle v219 = UserHandle.of(v207);
																																																								ShortcutService$$ExternalSyntheticLambda26 v220 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v207,v217,v206,v219,v218);
																																																								ShortcutService.injectPostToHandler(v220);
																																																								ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
																																																								String v225 = p2.getId();
																																																								long v228 = Binder.clearCallingIdentity();
																																																								long v227 = v228;
																																																								this.mUsageStatsManagerInternal.reportShortcutUsage(p1, v225, p3);
																																																								Binder.restoreCallingIdentity(v227);
																																																								boolean v233 = 0;
																																																								if (v233 == 0) {
																																																									ShortcutService$$ExternalSyntheticLambda25 v235 = new ShortcutService$$ExternalSyntheticLambda25();
																																																									ShortcutService.forEachLoadedUserLocked(v235);
																																																									return;
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void pushDynamicShortcut(String p1, ShortcutInfo p2, int p3){
	int v6 = ShortcutService.injectGetPackageUid(p1, p3);
	if (v6 != v4) {
		boolean v7 = ShortcutService.isEphemeralApp(p1, p3);
		Preconditions.checkState((v7 ^ 1), "Ephemeral apps can't use ShortcutManager");
		if (p2 != 0) {
			String v10 = p2.getPackage();
			boolean v11 = Objects.equals(p1, v10);
			if (v11 == 0) {
				ArrayList v12 = new ArrayList();
				boolean v15 = ShortcutService.isUserUnlockedL(p3);
				if (v15 == 0) {
					ShortcutUser v17 = ShortcutService.getUserShortcutsLocked(p3);
					ShortcutPackage v18 = v17.getPackageShortcuts(p1);
					ShortcutUser v19 = v18.getUser();
					v19.onCalledByPublisher(p1);
					ShortcutPackage v16 = v18;
					String v21 = this.mId;
					ShortcutInfo v23 = ShortcutPackage.findShortcutById(v21);
					ShortcutPackage.ensureNotImmutable(v23, 1);
					ShortcutInfo v25 = new ShortcutInfo(1);
					List v26 = Arrays.asList(v25);
					int v28 = v26.size();
					if ((v28 - 1) < 0) {
						Object v29 = v26.get((v28 - 1));
						ComponentName v30 = v29.getActivity();
						if (v30 != 0) {
							if (0 != 0) {
								String v31 = v29.getPackage();
								int v32 = v29.getUserId();
								ComponentName v33 = ShortcutService.injectGetDefaultMainActivity(v31, v32);
								if (v33 == 0) {
									StringBuilder v34 = new StringBuilder();
									StringBuilder v36 = v34.append("Launcher activity not found for package ");
									String v37 = v29.getPackage();
									StringBuilder v38 = v34.append(v37);
									String v39 = v34.toString();
									Preconditions.checkState(1, v39);
									v29.setActivity(0);
									if (((v28 - 1) + -1) < 0) {
										boolean v42 = p2.hasRank();
										if (v42 != 0) {
											this.mRank = 0;
											ShortcutPackage$$ExternalSyntheticLambda18 v45 = new ShortcutPackage$$ExternalSyntheticLambda18();
											ShortcutPackage.forEachShortcutMutate(v45);
											this.mImplicitRank = ((this.mImplicitRank & -2147483648) | (2147483647 & 0));
											ShortcutService.fixUpIncomingShortcutInfo(p2, 0, 0);
											this.mImplicitRank = (this.mImplicitRank | -2147483648);
											boolean v53 = p2.isEnabled();
											Preconditions.checkArgument(v53, "pushDynamicShortcuts() cannot publish disabled shortcuts");
											p2.addFlags(1);
											v12.clear();
											String v57 = p2.getId();
											ShortcutInfo v58 = ShortcutPackage.findShortcutById(v57);
											if (v58 != 0) {
												int v59 = ShortcutUser.mService.getMaxActivityShortcuts();
												ArrayMap v60 = ShortcutPackage.sortShortcutsToActivities();
												ComponentName v61 = p2.getActivity();
												Object v62 = v60.get(v61);
												if (v62 == 0) {
													int v63 = v62.size();
													if (v63 <= v59) {
														if (v62 == 0) {
															int v64 = v62.size();
															if (v64 != v59) {
																Collections.sort(v62, this.mShortcutTypeAndRankComparator);
																Object v66 = v62.get((v59 - 1));
																boolean v67 = v66.isManifestShortcut();
																if (v67 == 0) {
																	boolean v68 = v12.add(v66);
																	String v69 = v66.getId();
																	ShortcutInfo v70 = ShortcutPackage.deleteDynamicWithId(v69, 1, 1);
																	if (v70 == 0) {
																		boolean v71 = p2.isExcludedFromSurfaces(1);
																		if (v71 == 0) {
																			boolean v72 = ShortcutPackage.isAppSearchEnabled();
																			if (v72 == 0) {
																				String v73 = p2.getId();
																				Object v74 = this.mTransientShortcuts.put(v73, p2);
																				boolean v75 = ShortcutPackage.isAppSearchEnabled();
																				if (v75 == 0) {
																					ShortcutPackage$$ExternalSyntheticLambda11 v76 = new ShortcutPackage$$ExternalSyntheticLambda11(ShortcutPackage,p2);
																					ShortcutPackage.runAsSystem(v76);
																					boolean v52 = 0;
																					if (v52 == 0) {
																						boolean v79 = v12.isEmpty();
																						if (v79 == 0) {
																							Object v80 = v12.get(0);
																							List v81 = Collections.singletonList(v80);
																							v12.clear();
																							boolean v83 = v12.add(p2);
																							long v85 = ShortcutUser.mService.injectCurrentTimeMillis();
																							ShortcutPackage$$ExternalSyntheticLambda4 v86 = new ShortcutPackage$$ExternalSyntheticLambda4(v85);
																							ShortcutPackage.forEachShortcutMutate(v86);
																							ArrayMap v89 = ShortcutPackage.sortShortcutsToActivities();
																							int v90 = v89.size();
																							if ((v90 + -1) < 0) {
																								Object v91 = v89.valueAt((v90 + -1));
																								Collections.sort(v91, this.mShortcutRankComparator);
																								int v93 = v91.size();
																								if (0 >= v93) {
																									Object v94 = v91.get(0);
																									boolean v95 = v94.isManifestShortcut();
																									if (v95 == 0) {
																										boolean v96 = v94.isDynamic();
																										if (v96 != 0) {
																											StringBuilder v97 = new StringBuilder();
																											StringBuilder v99 = v97.append("Non-dynamic shortcut found. ");
																											String v100 = v94.toInsecureString();
																											StringBuilder v101 = v97.append(v100);
																											String v102 = v97.toString();
																											ShortcutUser.mService.wtf(v102);
																											if ((0 + 1) >= v93) {
																												if (((v90 + -1) + -1) < 0) {
																													Object v105 = Objects.requireNonNull(v16);
																													String v106 = v16.getPackageName();
																													int v107 = v16.getPackageUserId();
																													Runnable v108 = ShortcutService.notifyListenerRunnable(v106, v107);
																													ShortcutService.injectPostToHandlerDebounced(v16, v108);
																													ShortcutService.notifyShortcutChangeCallbacks(v106, v107, v12, v81);
																													v16.scheduleSave();
																													String v112 = this.mId;
																													long v114 = ShortcutService.injectClearCallingIdentity();
																													this.mUsageStatsManagerInternal.reportShortcutUsage(p1, v112, p3);
																													ShortcutService.injectRestoreCallingIdentity(v114);
																													boolean v118 = ShortcutService.injectShouldPerformVerification();
																													if (v118 == 0) {
																														ShortcutService.verifyStatesInner();
																														return;
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void pushDynamicShortcut(String p1, ShortcutInfo p2, int p3){
	p0.verifyCaller(p1, p3);
	p0.verifyShortcutInfoPackage(p1, p2);
	ArrayList v3 = new ArrayList();
	p0.throwIfUserLockedL(p3);
	ShortcutPackage v6 = p0.getPackageShortcutsForPublisherLocked(p1, p3);
	String v7 = p2.getId();
	v6.ensureNotImmutable(v7, 1);
	ShortcutInfo v9 = new ShortcutInfo(1);
	List v10 = Arrays.asList(v9);
	p0.fillInDefaultActivity(v10);
	boolean v12 = p2.hasRank();
	if (v12 != 0) {
		p2.setRank(0);
		v6.clearAllImplicitRanks();
		p2.setImplicitRank(0);
		p0.fixUpIncomingShortcutInfo(p2, 0);
		p2.setRankChanged();
		boolean v18 = v6.pushDynamicShortcut(p2, v3);
		if (v18 == 0) {
			boolean v19 = v3.isEmpty();
			if (v19 == 0) {
				Object v20 = v3.get(0);
				List v21 = Collections.singletonList(v20);
				v3.clear();
				boolean v23 = v3.add(p2);
				v6.adjustRanks();
				p0.packageShortcutsChanged(v6, v3, v21);
				String v26 = p2.getId();
				p0.reportShortcutUsedInternal(p1, v26, p3);
				p0.verifyStates();
				return;
			}
		}
	}
}

and the following sink code:
['long v7 = ShortcutService.injectClearCallingIdentity();\nint v8 = this.mIPackageManager.getPackageUid(p1, 795136, p3);\nShortcutService.injectRestoreCallingIdentity(v7);', 'ArrayList v18 = new ArrayList();\nShortcutPackage$$ExternalSyntheticLambda18 v77 = new ShortcutPackage$$ExternalSyntheticLambda18();', 'boolean v12 = p2.hasRank();\np2.setRank(0);\nv6.clearAllImplicitRanks();\np2.setImplicitRank(0);', 'ShortcutInfo v9 = new ShortcutInfo(1);\nList v10 = Arrays.asList(v9);\np0.fillInDefaultActivity(v10);', 'v6.pushDynamicShortcut(p2, v3);\np0.packageShortcutsChanged(v6, v3, v21);\nString v26 = p2.getId();\np0.reportShortcutUsedInternal(p1, v26, p3);']

The method pushDynamicShortcut has the following similar APIs:

- API Name: disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V with Similarity Score: 0.8310369253158569
  - Access Control Level: SYS_OR_SIG and the following code:
long v7 = ShortcutService.injectClearCallingIdentity();
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p5);
ShortcutUser v25 = new ShortcutUser(ShortcutService,p5);
this.mUsers.put(p5, v25);

- API Name: removeDynamicShortcuts(Ljava/lang/String;Ljava/util/List;I)V with Similarity Score: 0.8281201124191284
  - Access Control Level: SYS_OR_SIG and the following code:
long v7 = ShortcutService.injectClearCallingIdentity();
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p3);
ShortcutUser v26 = new ShortcutUser(ShortcutService,p3);
ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);

