The method finishSpellCheckerService in the following class Lcom.android.server.textservices.TextServicesManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void finishSpellCheckerService(int p1, ISpellCheckerSessionListener p2){
	Object v12 = this.mUserData.get(p1);
	TextServicesManagerService$TextServicesData v11 = v12;
	if (v11 != 0) {
		ArrayList v13 = new ArrayList();
		HashMap v15 = this.mSpellCheckerBindGroups;
		Collection v16 = v15.values();
		Iterator v17 = v16.iterator();
		boolean v18 = v17.hasNext();
		if (v18 == 0) {
			Object v19 = v17.next();
			if (v19 != 0) {
				boolean v20 = v13.add(v19);
				boolean v21 = v17.hasNext();
				if (v21 == 0) {
					int v22 = v13.size();
					if (0 >= v22) {
						Object v23 = v13.get(0);
						Object v25 = this.mLock;
						boolean v26 = this.mListeners.unregister(p2);
						IBinder v27 = p2.asBinder();
						TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0 v28 = new TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0(v27);
						boolean v30 = this.mPendingSessionRequests.removeIf(v28);
						boolean v31 = this.mOnGoingSessionRequests.removeIf(v28);
						if (this.mUnbindCalled == 0) {
							int v33 = this.mListeners.getRegisteredCallbackCount();
							if (v33 <= 0) {
								boolean v34 = this.mPendingSessionRequests.isEmpty();
								if (v34 != 0) {
									boolean v35 = this.mOnGoingSessionRequests.isEmpty();
									if (v35 != 0) {
										String v36 = TextServicesManagerService$InternalServiceConnection.-$$Nest$fgetmSciId(this.mInternalConnection);
										Object v37 = this.mSpellCheckerBindGroups.get(v36);
										if (v37 != TextServicesManagerService$SpellCheckerBindGroup) {
											Object v38 = this.mSpellCheckerBindGroups.remove(v36);
											Context v39 = TextServicesManagerService.-$$Nest$fgetmContext(this.this$0);
											v39.unbindService(this.mInternalConnection);
											this.mUnbindCalled = 1;
											if ((0 + 1) >= v22) {
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void finishSpellCheckerService(int p1, ISpellCheckerSessionListener p2){
	Object v12 = this.mUserData.get(p1);
	TextServicesManagerService$TextServicesData v11 = v12;
	if (v11 != 0) {
		ArrayList v13 = new ArrayList();
		HashMap v15 = this.mSpellCheckerBindGroups;
		Collection v16 = v15.values();
		Iterator v17 = v16.iterator();
		boolean v18 = v17.hasNext();
		if (v18 == 0) {
			Object v19 = v17.next();
			if (v19 != 0) {
				boolean v20 = v13.add(v19);
				boolean v21 = v17.hasNext();
				if (v21 == 0) {
					int v22 = v13.size();
					if (0 >= v22) {
						Object v23 = v13.get(0);
						Object v25 = TextServicesManagerService.-$$Nest$fgetmLock(this.this$0);
						boolean v26 = this.mListeners.unregister(p2);
						IBinder v27 = p2.asBinder();
						TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0 v28 = new TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0(v27);
						boolean v30 = this.mPendingSessionRequests.removeIf(v28);
						boolean v31 = this.mOnGoingSessionRequests.removeIf(v28);
						TextServicesManagerService$SpellCheckerBindGroup.cleanLocked();
						if ((0 + 1) >= v22) {
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void finishSpellCheckerService(int p1, ISpellCheckerSessionListener p2){
	p0.verifyUser(p1);
	TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);
	if (v2 != 0) {
		ArrayList v3 = new ArrayList();
		HashMap v5 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerBindGroups(v2);
		Collection v6 = v5.values();
		Iterator v7 = v6.iterator();
		boolean v8 = v7.hasNext();
		if (v8 == 0) {
			Object v9 = v7.next();
			if (v9 != 0) {
				boolean v10 = v3.add(v9);
				boolean v11 = v7.hasNext();
				if (v11 == 0) {
					int v12 = v3.size();
					if (0 >= v12) {
						Object v13 = v3.get(0);
						v13.removeListener(p2);
						if ((0 + 1) >= v12) {
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v12 = this.mUserData.get(p1);\nArrayList v13 = new ArrayList();\nHashMap v15 = this.mSpellCheckerBindGroups;\nboolean v26 = this.mListeners.unregister(p2);\nIBinder v27 = p2.asBinder();\nTextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0 v28 = new TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0(v27);\nboolean v30 = this.mPendingSessionRequests.removeIf(v28);\nboolean v31 = this.mOnGoingSessionRequests.removeIf(v28);', 'TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);\nArrayList v3 = new ArrayList();\nHashMap v5 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerBindGroups(v2);\nv13.removeListener(p2);', 'p0.verifyUser(p1);\nObject v12 = this.mUserData.get(p1);\nboolean v20 = v13.add(v19);']

The method finishSpellCheckerService has the following similar APIs:

- API Name: getEnabledSpellCheckers(I)[Landroid/view/textservice/SpellCheckerInfo; in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.863307535648346, Code:
TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);
ArrayList v3 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerList(v2);
int v4 = v3.size();
SpellCheckerInfo v5 = new SpellCheckerInfo(v4);
Object v6 = v3.toArray(v5);
return v6;
  - Access Control Level: SYS_OR_SIG

- API Name: getCurrentSpellChecker(ILjava/lang/String;)Landroid/view/textservice/SpellCheckerInfo; in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.8451545238494873, Code:
TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);
SpellCheckerInfo v3 = v2.getCurrentSpellChecker();
return v3;
  - Similarity: 0.8091276288032532, Code:
Object v12 = this.mUserData.get(p1);
String v15 = TextServicesManagerService$TextServicesData.getString("selected_spell_checker", "");
Object v17 = this.mSpellCheckerMap.get(v14);
return v13;
  - Similarity: 0.7581009864807129, Code:
String v14 = TextServicesManagerService$TextServicesData.getSelectedSpellChecker();
Object v16 = this.mSpellCheckerMap.get(v14);
return v13;
  - Access Control Level: SYS_OR_SIG

- API Name: getSpellCheckerService(ILjava/lang/String;Ljava/lang/String;Lcom/android/internal/textservice/ITextServicesSessionListener;Lcom/android/internal/textservice/ISpellCheckerSessionListener;Landroid/os/Bundle;I)V in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.8217002749443054, Code:
Object v13 = this.mUserData.get(p1);
HashMap v14 = this.mSpellCheckerMap;
boolean v15 = v14.containsKey(p2);
TextServicesManagerService$InternalServiceConnection v23 = new TextServicesManagerService$InternalServiceConnection(TextServicesManagerService,v22,v24);
Intent v26 = new Intent("android.service.textservice.SpellCheckerService");
  - Access Control Level: SYS_OR_SIG

- API Name: isSpellCheckerEnabled(I)Z in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.7848442792892456, Code:
p0.verifyUser(p1);
TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);
return 0;
  - Similarity: 0.7673903703689575, Code:
Object v12 = this.mUserData.get(p1);
TextServicesManagerService$TextServicesData v11 = v12;
int v15 = TextServicesManagerService$TextServicesData.getInt("spell_checker_enabled", 1);
return v13;
  - Access Control Level: SYS_OR_SIG

- API Name: getCurrentSpellCheckerSubtype(IZ)Landroid/view/textservice/SpellCheckerSubtype; in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.7692747712135315, Code:
Object v12 = this.mUserData.get(p1);
TextServicesManagerService$TextServicesData v11 = v12;
int v15 = Settings$Secure.getIntForUser(this.mResolver, "selected_spell_checker_subtype", 0, this.mUserId);
String v18 = TextServicesManagerService$TextServicesData.getString("selected_spell_checker", "");
Object v20 = this.mSpellCheckerMap.get(v17);
SpellCheckerInfo v16 = v20;
return v27;
  - Similarity: 0.7595762014389038, Code:
int v14 = TextServicesManagerService$TextServicesData.getInt("selected_spell_checker_subtype", 0);
String v16 = TextServicesManagerService$TextServicesData.getSelectedSpellChecker();
Object v18 = this.mSpellCheckerMap.get(v16);
return v28;
  - Access Control Level: SYS_OR_SIG

