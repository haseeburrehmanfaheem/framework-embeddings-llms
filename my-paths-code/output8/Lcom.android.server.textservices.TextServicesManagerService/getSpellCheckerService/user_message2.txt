The method getSpellCheckerService in the following class Lcom.android.server.textservices.TextServicesManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void getSpellCheckerService(int p1, String p2, String p3, ITextServicesSessionListener p4, ISpellCheckerSessionListener p5, Bundle p6, int p7){
	boolean v11 = TextUtils.isEmpty(p2);
	if (v11 != 0) {
		if (p4 == 0) {
			if (p5 != 0) {
				Object v13 = this.mUserData.get(p1);
				TextServicesManagerService$TextServicesData v12 = v13;
				if (v12 != 0) {
					HashMap v14 = this.mSpellCheckerMap;
					boolean v15 = v14.containsKey(p2);
					if (v15 != 0) {
						Object v16 = v14.get(p2);
						HashMap v17 = this.mSpellCheckerBindGroups;
						Object v18 = v17.get(p2);
						int v19 = Binder.getCallingUid();
						if (v18 != 0) {
							long v20 = Binder.clearCallingIdentity();
							String v22 = this.mId;
							TextServicesManagerService$InternalServiceConnection v23 = new TextServicesManagerService$InternalServiceConnection(TextServicesManagerService,v22,v24);
							HashMap v24 = this.mSpellCheckerBindGroups;
							Intent v26 = new Intent("android.service.textservice.SpellCheckerService");
							ComponentName v29 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
							ComponentName v28 = v29;
							Intent v31 = v26.setComponent(v28);
							int v32 = this.mUserId;
							if (v26 == 0) {
								if (v23 != 0) {
									UserHandle v34 = UserHandle.of(v32);
									boolean v35 = this.mContext.bindServiceAsUser(v26, v23, 8388609, v34);
									boolean v33 = v35;
									if (v33 != 0) {
										TextServicesManagerService$SpellCheckerBindGroup v36 = new TextServicesManagerService$SpellCheckerBindGroup(TextServicesManagerService,v23);
										HashMap v38 = this.mSpellCheckerBindGroups;
										Object v39 = v38.put(v22, v36);
										TextServicesManagerService$SpellCheckerBindGroup v21 = v36;
										Binder.restoreCallingIdentity(v20);
										if (v21 != 0) {
											TextServicesManagerService$SessionRequest v41 = new TextServicesManagerService$SessionRequest(v19,p3,p4,p5,p6,p7);
											if (this.mUnbindCalled == 0) {
												boolean v44 = this.mListeners.register(TextServicesManagerService$SessionRequest.mScListener);
												if (this.mConnected != 0) {
													TextServicesManagerService$ISpellCheckerServiceCallbackBinder v45 = new TextServicesManagerService$ISpellCheckerServiceCallbackBinder(TextServicesManagerService$SpellCheckerBindGroup,v41);
													this.mSpellChecker.getISpellCheckerSession(TextServicesManagerService$SessionRequest.mLocale, TextServicesManagerService$SessionRequest.mScListener, TextServicesManagerService$SessionRequest.mBundle, TextServicesManagerService$SessionRequest.mSupportedAttributes, v45);
													boolean v48 = this.mOnGoingSessionRequests.add(v41);
													if (this.mUnbindCalled == 0) {
														int v50 = this.mListeners.getRegisteredCallbackCount();
														if (v50 <= 0) {
															boolean v51 = this.mPendingSessionRequests.isEmpty();
															if (v51 != 0) {
																boolean v52 = this.mOnGoingSessionRequests.isEmpty();
																if (v52 != 0) {
																	String v53 = TextServicesManagerService$InternalServiceConnection.-$$Nest$fgetmSciId(this.mInternalConnection);
																	Object v54 = this.mSpellCheckerBindGroups.get(v53);
																	if (v54 != TextServicesManagerService$SpellCheckerBindGroup) {
																		Object v55 = this.mSpellCheckerBindGroups.remove(v53);
																		Context v56 = TextServicesManagerService.-$$Nest$fgetmContext(this.this$0);
																		v56.unbindService(this.mInternalConnection);
																		this.mUnbindCalled = 1;
																		return;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void getSpellCheckerService(int p1, String p2, String p3, ITextServicesSessionListener p4, ISpellCheckerSessionListener p5, Bundle p6, int p7){
	boolean v11 = TextUtils.isEmpty(p2);
	if (v11 != 0) {
		if (p4 == 0) {
			if (p5 != 0) {
				Object v13 = this.mUserData.get(p1);
				TextServicesManagerService$TextServicesData v12 = v13;
				if (v12 != 0) {
					HashMap v14 = this.mSpellCheckerMap;
					boolean v15 = v14.containsKey(p2);
					if (v15 != 0) {
						Object v16 = v14.get(p2);
						HashMap v17 = this.mSpellCheckerBindGroups;
						Object v18 = v17.get(p2);
						int v19 = Binder.getCallingUid();
						if (v18 != 0) {
							long v20 = Binder.clearCallingIdentity();
							String v22 = v16.getId();
							TextServicesManagerService$InternalServiceConnection v23 = new TextServicesManagerService$InternalServiceConnection(TextServicesManagerService,v22,v24);
							HashMap v24 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerBindGroups(v12);
							Intent v26 = new Intent("android.service.textservice.SpellCheckerService");
							ComponentName v28 = v16.getComponent();
							Intent v29 = v26.setComponent(v28);
							int v30 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmUserId(v12);
							boolean v31 = TextServicesManagerService.bindCurrentSpellCheckerService(v26, v23, 8388609, v30);
							if (v31 != 0) {
								TextServicesManagerService$SpellCheckerBindGroup v32 = new TextServicesManagerService$SpellCheckerBindGroup(TextServicesManagerService,v23);
								HashMap v34 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerBindGroups(v12);
								Object v35 = v34.put(v22, v32);
								TextServicesManagerService$SpellCheckerBindGroup v21 = v32;
								Binder.restoreCallingIdentity(v20);
								if (v21 != 0) {
									TextServicesManagerService$SessionRequest v37 = new TextServicesManagerService$SessionRequest(v19,p3,p4,p5,p6,p7);
									if (this.mUnbindCalled == 0) {
										boolean v40 = this.mListeners.register(TextServicesManagerService$SessionRequest.mScListener);
										if (this.mConnected != 0) {
											TextServicesManagerService$ISpellCheckerServiceCallbackBinder v41 = new TextServicesManagerService$ISpellCheckerServiceCallbackBinder(TextServicesManagerService$SpellCheckerBindGroup,v37);
											this.mSpellChecker.getISpellCheckerSession(TextServicesManagerService$SessionRequest.mLocale, TextServicesManagerService$SessionRequest.mScListener, TextServicesManagerService$SessionRequest.mBundle, TextServicesManagerService$SessionRequest.mSupportedAttributes, v41);
											boolean v44 = this.mOnGoingSessionRequests.add(v37);
											TextServicesManagerService$SpellCheckerBindGroup.cleanLocked();
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void getSpellCheckerService(int p1, String p2, String p3, ITextServicesSessionListener p4, ISpellCheckerSessionListener p5, Bundle p6, int p7){
	p0.verifyUser(p1);
	boolean v2 = TextUtils.isEmpty(p2);
	if (v2 != 0) {
		if (p4 == 0) {
			if (p5 != 0) {
				TextServicesManagerService$TextServicesData v3 = p0.getDataFromCallingUserIdLocked(p1);
				if (v3 != 0) {
					HashMap v4 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerMap(v3);
					boolean v5 = v4.containsKey(p2);
					if (v5 != 0) {
						Object v6 = v4.get(p2);
						HashMap v7 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerBindGroups(v3);
						Object v8 = v7.get(p2);
						int v9 = Binder.getCallingUid();
						if (v8 != 0) {
							long v10 = Binder.clearCallingIdentity();
							TextServicesManagerService$SpellCheckerBindGroup v11 = p0.startSpellCheckerServiceInnerLocked(v6, v3);
							Binder.restoreCallingIdentity(v10);
							if (v11 != 0) {
								TextServicesManagerService$SessionRequest v13 = new TextServicesManagerService$SessionRequest(v9,p3,p4,p5,p6,p7);
								v8.getISpellCheckerSessionOrQueueLocked(v13);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v13 = this.mUserData.get(p1);\nHashMap v14 = this.mSpellCheckerMap;\nboolean v15 = v14.containsKey(p2);\nTextServicesManagerService$InternalServiceConnection v23 = new TextServicesManagerService$InternalServiceConnection(TextServicesManagerService,v22,v24);\nIntent v26 = new Intent("android.service.textservice.SpellCheckerService");', 'TextServicesManagerService$SpellCheckerBindGroup v32 = new TextServicesManagerService$SpellCheckerBindGroup(TextServicesManagerService,v23);\nthis.mSpellChecker.getISpellCheckerSession(TextServicesManagerService$SessionRequest.mLocale, TextServicesManagerService$SessionRequest.mScListener, TextServicesManagerService$SessionRequest.mBundle, TextServicesManagerService$SessionRequest.mSupportedAttributes, v41);', 'TextServicesManagerService$SessionRequest v37 = new TextServicesManagerService$SessionRequest(v19,p3,p4,p5,p6,p7);\nv8.getISpellCheckerSessionOrQueueLocked(v13);']

The method getSpellCheckerService has the following similar APIs:

- API Name: getCurrentSpellChecker(ILjava/lang/String;)Landroid/view/textservice/SpellCheckerInfo; in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.9084807634353638, Code:
Object v12 = this.mUserData.get(p1);
String v15 = TextServicesManagerService$TextServicesData.getString("selected_spell_checker", "");
Object v17 = this.mSpellCheckerMap.get(v14);
return v13;
  - Similarity: 0.8383898735046387, Code:
String v14 = TextServicesManagerService$TextServicesData.getSelectedSpellChecker();
Object v16 = this.mSpellCheckerMap.get(v14);
return v13;
  - Similarity: 0.7666399478912354, Code:
TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);
SpellCheckerInfo v3 = v2.getCurrentSpellChecker();
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: getCurrentSpellCheckerSubtype(IZ)Landroid/view/textservice/SpellCheckerSubtype; in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.901191771030426, Code:
Object v12 = this.mUserData.get(p1);
TextServicesManagerService$TextServicesData v11 = v12;
int v15 = Settings$Secure.getIntForUser(this.mResolver, "selected_spell_checker_subtype", 0, this.mUserId);
String v18 = TextServicesManagerService$TextServicesData.getString("selected_spell_checker", "");
Object v20 = this.mSpellCheckerMap.get(v17);
SpellCheckerInfo v16 = v20;
return v27;
  - Similarity: 0.8423365950584412, Code:
int v14 = TextServicesManagerService$TextServicesData.getInt("selected_spell_checker_subtype", 0);
String v16 = TextServicesManagerService$TextServicesData.getSelectedSpellChecker();
Object v18 = this.mSpellCheckerMap.get(v16);
return v28;
  - Access Control Level: SYS_OR_SIG

- API Name: isSpellCheckerEnabled(I)Z in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.8925961256027222, Code:
Object v12 = this.mUserData.get(p1);
TextServicesManagerService$TextServicesData v11 = v12;
int v15 = TextServicesManagerService$TextServicesData.getInt("spell_checker_enabled", 1);
return v13;
  - Similarity: 0.7527303099632263, Code:
Object v12 = this.mUserData.get(p1);
TextServicesManagerService$TextServicesData v11 = v12;
return 0;
  - Access Control Level: SYS_OR_SIG

- API Name: finishSpellCheckerService(ILcom/android/internal/textservice/ISpellCheckerSessionListener;)V in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.8217002749443054, Code:
Object v12 = this.mUserData.get(p1);
ArrayList v13 = new ArrayList();
HashMap v15 = this.mSpellCheckerBindGroups;
boolean v26 = this.mListeners.unregister(p2);
IBinder v27 = p2.asBinder();
TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0 v28 = new TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0(v27);
boolean v30 = this.mPendingSessionRequests.removeIf(v28);
boolean v31 = this.mOnGoingSessionRequests.removeIf(v28);
  - Similarity: 0.7207704782485962, Code:
TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);
ArrayList v3 = new ArrayList();
HashMap v5 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerBindGroups(v2);
v13.removeListener(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: getEnabledSpellCheckers(I)[Landroid/view/textservice/SpellCheckerInfo; in the following Class: Lcom.android.server.textservices.TextServicesManagerService with the following sink code entries:
  - Similarity: 0.7817240953445435, Code:
TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);
ArrayList v3 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerList(v2);
int v4 = v3.size();
SpellCheckerInfo v5 = new SpellCheckerInfo(v4);
Object v6 = v3.toArray(v5);
return v6;
  - Access Control Level: SYS_OR_SIG

