This is path 1 for the API with depth 2:
public void addSessionsListener(IActiveSessionsListener p1, ComponentName p2, int p3){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		long v3 = Binder.clearCallingIdentity();
		if (p2 == 0) {
			String v5 = p2.getPackageName();
			this.this$0.enforcePackageName(v5, v2);
			int v14 = ActivityManager.getCurrentUser();
			int v8 = v14;
			int v4 = v8;
			Object v16 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
			int v19 = this.mSessionsListeners.size();
			if ((v19 + -1) < 0) {
				Object v20 = this.mSessionsListeners.get((v19 + -1));
				IBinder v21 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
				IBinder v22 = p1.asBinder();
				if (v21 != v22) {
					if (((v19 + -1) + -1) < 0) {
						Object v23 = this.mSessionsListeners.get(((v19 + -1) + -1));
						IBinder v24 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
						IBinder v25 = p1.asBinder();
						if (v24 != v25) {
							int v18 = ((v19 + -1) + -1);
							int v17 = v18;
							if (v17 == -1) {
								MediaSessionService$SessionsListenerRecord v26 = new MediaSessionService$SessionsListenerRecord(this.this$0,p1,p2,v4,v1,v2);
								IBinder v28 = p1.asBinder();
								v28.linkToDeath(v26, 0);
								ArrayList v30 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
								boolean v31 = v30.add(v26);
								Binder.restoreCallingIdentity(v3);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void addSessionsListener(IActiveSessionsListener p1, ComponentName p2, int p3){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		long v3 = Binder.clearCallingIdentity();
		if (p2 == 0) {
			String v5 = p2.getPackageName();
			MediaSessionService.-$$Nest$menforcePackageName(this.this$0, v5, v2);
			int v7 = MediaSessionService$SessionManagerImpl.handleIncomingUser(v1, v2, p3, v5);
			int v4 = v7;
			Object v9 = this.mLock;
			int v11 = this.this$0.findIndexOfSessionsListenerLocked(p1);
			int v10 = v11;
			if (v10 == -1) {
				MediaSessionService$SessionsListenerRecord v12 = new MediaSessionService$SessionsListenerRecord(this.this$0,p1,p2,v4,v1,v2);
				IBinder v14 = p1.asBinder();
				v14.linkToDeath(v12, 0);
				ArrayList v16 = this.mSessionsListeners;
				boolean v17 = v16.add(v12);
				Binder.restoreCallingIdentity(v3);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void addSessionsListener(IActiveSessionsListener p1, ComponentName p2, int p3){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		long v3 = Binder.clearCallingIdentity();
		int v4 = p0.verifySessionsRequest(p2, p3, v1, v2);
		Object v5 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
		int v6 = MediaSessionService.-$$Nest$mfindIndexOfSessionsListenerLocked(this.this$0, p1);
		if (v6 == -1) {
			MediaSessionService$SessionsListenerRecord v7 = new MediaSessionService$SessionsListenerRecord(this.this$0,p1,p2,v4,v1,v2);
			IBinder v9 = p1.asBinder();
			v9.linkToDeath(v7, 0);
			ArrayList v11 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
			boolean v12 = v11.add(v7);
			Binder.restoreCallingIdentity(v3);
			return;
		}
	}
}
