The method isTrusted in the following class Lcom.android.server.media.MediaSessionService$SessionManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isTrusted(String p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	long v4 = Binder.clearCallingIdentity();
	if (v5 != 0) {
		NotificationManager v13 = this.mNotificationManager;
		UserHandle v14 = UserHandle.getUserHandleForUid(p3);
		boolean v15 = v13.hasEnabledNotificationListener(p1, v14);
		if (v15 == 0) {
			if (MediaSessionService.DEBUG == 0) {
				boolean v6 = 0;
				if (v6 == 0) {
					Binder.restoreCallingIdentity(v4);
					return 0;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isTrusted(String p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	long v4 = Binder.clearCallingIdentity();
	if (v5 != 0) {
		NotificationManager v13 = MediaSessionService.-$$Nest$fgetmNotificationManager(this.this$0);
		UserHandle v14 = UserHandle.getUserHandleForUid(p3);
		boolean v15 = v13.hasEnabledNotificationListener(p1, v14);
		if (v15 == 0) {
			if (MediaSessionService.DEBUG == 0) {
				boolean v6 = 0;
				if (v6 == 0) {
					Binder.restoreCallingIdentity(v4);
					return 0;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isTrusted(String p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	long v4 = Binder.clearCallingIdentity();
	if (v5 != 0) {
		boolean v6 = p0.hasEnabledNotificationListener(v3, p1, p3);
		if (v6 == 0) {
			Binder.restoreCallingIdentity(v4);
			return 0;
		}
	}
}

and the following sink code:
['boolean v15 = v13.hasEnabledNotificationListener(p1, v14);\nreturn 0;', 'boolean v6 = p0.hasEnabledNotificationListener(v3, p1, p3);']

The method isTrusted has the following similar APIs:

- API Name: getCpuUsages(Ljava/lang/String;)[Landroid/os/CpuUsageInfo; in the following Class: Lcom.android.server.HardwarePropertiesManagerService with the following sink code entries:
  - Similarity: 0.8260577917098999, Code:
boolean v10 = v6.isCurrentVrListener(p1, v5);
  - Access Control Level: SYS_OR_SIG

- API Name: registerDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.7405774593353271, Code:
p0.registerDevicePresenceListenerActive(p2, p1, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: registerAccountListener([Ljava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.73944091796875, Code:
p0.registerAccountListener(p1, p2, v5);
  - Access Control Level: SYS_OR_SIG

- API Name: unregisterDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.7368019223213196, Code:
p0.registerDevicePresenceListenerActive(p2, p1, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: hasNotificationAccess(Landroid/content/ComponentName;)Z in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.732021689414978, Code:
String v1 = p1.getPackageName();
Object v7 = v6.getSystemService(NotificationManage.class);
boolean v8 = v7.isNotificationListenerAccessGranted(p1);
  - Access Control Level: SYS_OR_SIG

