This is path 1 for the API with depth 2:
public void removeSessionsListener(IActiveSessionsListener p1){
	Object v1 = this.mLock;
	int v4 = this.mSessionsListeners.size();
	if ((v4 + -1) < 0) {
		Object v5 = this.mSessionsListeners.get((v4 + -1));
		IBinder v6 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
		IBinder v7 = p1.asBinder();
		if (v6 != v7) {
			if (((v4 + -1) + -1) < 0) {
				Object v8 = this.mSessionsListeners.get(((v4 + -1) + -1));
				IBinder v9 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
				IBinder v10 = p1.asBinder();
				if (v9 != v10) {
					int v3 = ((v4 + -1) + -1);
					int v2 = v3;
					if (v2 == -1) {
						ArrayList v11 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
						Object v12 = v11.remove(v2);
						IBinder v13 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
						boolean v14 = v13.unlinkToDeath(v12, 0);
						return;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void removeSessionsListener(IActiveSessionsListener p1){
	Object v1 = this.mLock;
	int v3 = this.this$0.findIndexOfSessionsListenerLocked(p1);
	int v2 = v3;
	if (v2 == -1) {
		ArrayList v4 = this.mSessionsListeners;
		Object v5 = v4.remove(v2);
		IBinder v6 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
		boolean v7 = v6.unlinkToDeath(v5, 0);
		return;
	}
}


This is path 3 for the API with depth 0:
public void removeSessionsListener(IActiveSessionsListener p1){
	Object v1 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
	int v2 = MediaSessionService.-$$Nest$mfindIndexOfSessionsListenerLocked(this.this$0, p1);
	if (v2 == -1) {
		ArrayList v3 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
		Object v4 = v3.remove(v2);
		IBinder v5 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
		boolean v6 = v5.unlinkToDeath(v4, 0);
		return;
	}
}
