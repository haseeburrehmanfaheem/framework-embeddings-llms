The method setSessionPolicies in the following class Lcom.android.server.media.MediaSessionService$SessionManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	int v5 = p1.getUid();
	UserHandle v6 = UserHandle.getUserHandleForUid(v5);
	int v7 = v6.getIdentifier();
	MediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);
	if (v8 == 0) {
		MediaSessionStack v9 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v8);
		MediaSessionRecord v10 = v9.getMediaSessionRecord(p1);
		MediaSessionRecord v4 = v10;
		MediaSessionRecord v3 = v4;
		int v11 = v3.getUserId();
		int v14 = this.mFullUserIds.get(v11, -1);
		if (v14 >= 0) {
			Object v15 = this.mUserRecords.get(v14);
			MediaSessionService$FullUserRecord v13 = v15;
			MediaSessionService$FullUserRecord v12 = v13;
			if (v12 == 0) {
				v3.setSessionPolicies(p2);
				MediaSessionStack v17 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v12);
				int v19 = this.mPolicies;
				if ((v19 & 2) == 0) {
					if (this.DEBUG == 0) {
						String v24 = MediaSessionStack.getCallers(2);
						List v28 = this.mAudioPlayerStateMonitor.getSortedAudioPlaybackClientUids();
						int v29 = v28.size();
						if (0 >= v29) {
							Object v30 = v28.get(0);
							int v31 = v30.intValue();
							MediaSessionRecordImpl v32 = MediaSessionStack.findMediaButtonSession(v31);
							if (v32 != 0) {
								if (this.DEBUG == 0) {
									int v33 = v28.size();
									if ((0 + 1) >= v33) {
										Object v34 = v28.get((0 + 1));
										int v35 = v34.intValue();
										MediaSessionRecordImpl v36 = MediaSessionStack.findMediaButtonSession(v35);
										if (v36 != 0) {
											int v37 = v36.getSessionPolicies();
											if ((v37 & 2) == 0) {
												if (this.DEBUG == 0) {
													if (1 != 0) {
														int v38 = v36.getUid();
														this.mAudioPlayerStateMonitor.cleanUpAudioPlaybackUids(v38);
														if (v36 == this.mMediaButtonSession) {
															MediaSessionStack.updateMediaButtonSession(v36);
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	MediaSessionRecord v4 = this.this$0.getMediaSessionRecordLocked(p1);
	MediaSessionRecord v3 = v4;
	int v5 = this.mUserId;
	MediaSessionService$FullUserRecord v7 = this.this$0.getFullUserRecordLocked(v5);
	MediaSessionService$FullUserRecord v6 = v7;
	if (v6 == 0) {
		this.mPolicies = p2;
		MediaSessionStack v9 = this.mPriorityStack;
		int v11 = v3.getSessionPolicies();
		if ((v11 & 2) == 0) {
			if (v3 != this.mMediaButtonSession) {
				MediaSessionStack.updateMediaButtonSession(0);
				Binder.restoreCallingIdentity(v1);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
	MediaSessionRecord v3 = MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p1);
	int v4 = v3.getUserId();
	MediaSessionService$FullUserRecord v5 = MediaSessionService.-$$Nest$mgetFullUserRecordLocked(this.this$0, v4);
	if (v5 == 0) {
		v3.setSessionPolicies(p2);
		MediaSessionStack v7 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v5);
		v7.updateMediaButtonSessionBySessionPolicyChange(v3);
		Binder.restoreCallingIdentity(v1);
		return;
	}
}

and the following sink code:
['MediaSessionRecord v3 = MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p1);\nv3.setSessionPolicies(p2);\nMediaSessionStack v7 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v5);\nv7.updateMediaButtonSessionBySessionPolicyChange(v3);', 'this.mPolicies = p2;\nMediaSessionStack v9 = this.mPriorityStack;\nint v11 = v3.getSessionPolicies();\nif ((v11 & 2) == 0) {\n    if (v3 != this.mMediaButtonSession) {\n        MediaSessionStack.updateMediaButtonSession(0);', 'MediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);\nMediaSessionStack v9 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v8);\nMediaSessionRecord v10 = v9.getMediaSessionRecord(p1);\nv3.setSessionPolicies(p2);']

The method setSessionPolicies has the following similar APIs:

- API Name: dispatchMediaKeyEventToSessionAsSystemService(Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)Z in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.8860584497451782, Code:
MediaSessionRecord v6 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10).getMediaSessionRecord(p3);
int v31 = p2.getKeyCode();
StringBuilder v33 = new StringBuilder();
v44.tempAllowlistTargetPkgIfPossible(v45, v46, v1, v2, p1, v43);
  - Similarity: 0.8390371799468994, Code:
MediaSessionRecord v5 = MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p3);
boolean v22 = v5.sendMediaButton(p1, v1, v2, 1, p2, 0, 0);
  - Similarity: 0.82984459400177, Code:
MediaSessionRecord v6 = this.this$0.getMediaSessionRecordLocked(p3);
boolean v24 = this.mSessionCb.sendMediaButton(p1, v1, v2, 1, p2, 0, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: getSessionPolicies(Landroid/media/session/MediaSession$Token;)I in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.8631995916366577, Code:
MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p1);
if (v2 == 0) {
    int v3 = v2.getSessionPolicies();
    return v3;
  - Similarity: 0.8287636637687683, Code:
Object v1 = this.mLock;
int v4 = p1.getUid();
UserHandle v5 = UserHandle.getUserHandleForUid(v4);
int v6 = v5.getIdentifier();
MediaSessionService$FullUserRecord v7 = MediaSessionService.getFullUserRecordLocked(v6);
if (v7 == 0) {
    MediaSessionStack v8 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v7);
    MediaSessionRecord v9 = v8.getMediaSessionRecord(p1);
    MediaSessionRecord v3 = v9;
    MediaSessionRecord v2 = v3;
    if (v2 == 0) {
        int v10 = v2.getSessionPolicies();
        return v10;
  - Similarity: 0.7805139422416687, Code:
this.this$0.getMediaSessionRecordLocked(p1);
if (v2 == 0) {
    int v4 = this.mPolicies;
    return v4;
  - Access Control Level: NONE

- API Name: getMediaKeyEventSession(Ljava/lang/String;)Landroid/media/session/MediaSession$Token; in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.8340237140655518, Code:
MediaSessionService$FullUserRecord v9 = MediaSessionService.-$$Nest$mgetFullUserRecordLocked(this.this$0, v4);
if (v9 != 0) {
MediaSessionRecordImpl v10 = MediaSessionService$FullUserRecord.-$$Nest$mgetMediaButtonSessionLocked(v9);
if (v10 instanceof MediaSessionRecord == 0) {
MediaSession$Token v11 = v10.getSessionToken();
return v11;
  - Access Control Level: SYS_OR_SIG

- API Name: createSession(Ljava/lang/String;Landroid/media/session/ISessionCallback;Ljava/lang/String;Landroid/os/Bundle;I)Landroid/media/session/ISession; in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.7911339998245239, Code:
int v6 = ActivityManager.getCurrentUser();
MediaSessionRecord v14 = this.this$0.createSessionInternal(v1, v2, v6, p1, p2, p3, p4);
  - Similarity: 0.7765953540802002, Code:
int v11 = p0.handleIncomingUser(v1, v2, p5, p1);
int v14 = this.mCustomMediaSessionPolicyProvider.getSessionPoliciesForApplication(v2, p1);
MediaSessionRecord v19 = new MediaSessionRecord(v1,v2,v11,p1,p2,p3,p4,MediaSessionService,v20,v14);
SparseIntArray v22 = MediaSessionService$FullUserRecord.-$$Nest$fgetmUidToSessionCount(v15);
v22.put(v2, (v17 + 1));
MediaSessionStack v24 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v15);
v24.addSession(v19);
  - Access Control Level: SYS_OR_SIG

- API Name: dispatchVolumeKeyEventToSessionAsSystemService(Ljava/lang/String;Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)V in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.7626944184303284, Code:
MediaSessionRecord v12 = v11.getMediaSessionRecord(p4);
v38.tempAllowlistTargetPkgIfPossible(v39, v40, v1, v2, p1, "MediaSessionRecord:adjustVolume");
  - Access Control Level: SYS_OR_SIG

