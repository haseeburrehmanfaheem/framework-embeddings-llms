This is path 1 for the API with depth 2:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	int v5 = p1.getUid();
	UserHandle v6 = UserHandle.getUserHandleForUid(v5);
	int v7 = v6.getIdentifier();
	MediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);
	if (v8 == 0) {
		MediaSessionStack v9 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v8);
		MediaSessionRecord v10 = v9.getMediaSessionRecord(p1);
		MediaSessionRecord v4 = v10;
		MediaSessionRecord v3 = v4;
		int v11 = v3.getUserId();
		int v14 = this.mFullUserIds.get(v11, -1);
		if (v14 >= 0) {
			Object v15 = this.mUserRecords.get(v14);
			MediaSessionService$FullUserRecord v13 = v15;
			MediaSessionService$FullUserRecord v12 = v13;
			if (v12 == 0) {
				v3.setSessionPolicies(p2);
				MediaSessionStack v17 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v12);
				int v19 = this.mPolicies;
				if ((v19 & 2) == 0) {
					if (this.DEBUG == 0) {
						String v24 = MediaSessionStack.getCallers(2);
						List v28 = this.mAudioPlayerStateMonitor.getSortedAudioPlaybackClientUids();
						int v29 = v28.size();
						if (0 >= v29) {
							Object v30 = v28.get(0);
							int v31 = v30.intValue();
							MediaSessionRecordImpl v32 = MediaSessionStack.findMediaButtonSession(v31);
							if (v32 != 0) {
								if (this.DEBUG == 0) {
									int v33 = v28.size();
									if ((0 + 1) >= v33) {
										Object v34 = v28.get((0 + 1));
										int v35 = v34.intValue();
										MediaSessionRecordImpl v36 = MediaSessionStack.findMediaButtonSession(v35);
										if (v36 != 0) {
											int v37 = v36.getSessionPolicies();
											if ((v37 & 2) == 0) {
												if (this.DEBUG == 0) {
													if (1 != 0) {
														int v38 = v36.getUid();
														this.mAudioPlayerStateMonitor.cleanUpAudioPlaybackUids(v38);
														if (v36 == this.mMediaButtonSession) {
															MediaSessionStack.updateMediaButtonSession(v36);
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	MediaSessionRecord v4 = this.this$0.getMediaSessionRecordLocked(p1);
	MediaSessionRecord v3 = v4;
	int v5 = this.mUserId;
	MediaSessionService$FullUserRecord v7 = this.this$0.getFullUserRecordLocked(v5);
	MediaSessionService$FullUserRecord v6 = v7;
	if (v6 == 0) {
		this.mPolicies = p2;
		MediaSessionStack v9 = this.mPriorityStack;
		int v11 = v3.getSessionPolicies();
		if ((v11 & 2) == 0) {
			if (v3 != this.mMediaButtonSession) {
				MediaSessionStack.updateMediaButtonSession(0);
				Binder.restoreCallingIdentity(v1);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
	MediaSessionRecord v3 = MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p1);
	int v4 = v3.getUserId();
	MediaSessionService$FullUserRecord v5 = MediaSessionService.-$$Nest$mgetFullUserRecordLocked(this.this$0, v4);
	if (v5 == 0) {
		v3.setSessionPolicies(p2);
		MediaSessionStack v7 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v5);
		v7.updateMediaButtonSessionBySessionPolicyChange(v3);
		Binder.restoreCallingIdentity(v1);
		return;
	}
}
