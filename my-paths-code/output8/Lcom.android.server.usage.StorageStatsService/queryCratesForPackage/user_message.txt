This is path 1 for the API with depth 2:
public ParceledListSlice queryCratesForPackage(String p1, String p2, int p3, String p4){
	int v6 = Binder.getCallingUid();
	String v8 = new String(1);
	boolean v11 = Installer.checkBeforeRemote();
	if (v11 != 0) {
		CrateMetadata v12 = this.mInstalld.getAppCrates(p1, v8, p3);
		CrateMetadata v10 = v12;
		ParceledListSlice v13 = new ParceledListSlice(v14);
		boolean v15 = ArrayUtils.isEmpty(v10);
		if (v15 == 0) {
			ArrayList v16 = new ArrayList();
			if (0 >= v10.length) {
				if (v10[0] == 0) {
					boolean v18 = TextUtils.isEmpty(CrateMetadata.id);
					if (v18 != 0) {
						boolean v19 = TextUtils.isEmpty(CrateMetadata.packageName);
						if (v19 == 0) {
							CrateInfo v20 = CrateInfo.copyFrom(CrateMetadata.uid, CrateMetadata.packageName, CrateMetadata.id);
							if (v20 != 0) {
								if ((0 + 1) >= v10.length) {
									List v14 = v16;
									ParceledListSlice v9 = v13;
									return v9;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice queryCratesForPackage(String p1, String p2, int p3, String p4){
	int v6 = Binder.getCallingUid();
	String v8 = new String(1);
	CrateMetadata v10 = this.mInstaller.getAppCrates(p1, v8, p3);
	ParceledListSlice v11 = new ParceledListSlice(v12);
	List v12 = StorageStatsService.convertCrateInfoFrom(v10);
	ParceledListSlice v9 = v11;
	return v9;
}


This is path 3 for the API with depth 0:
public ParceledListSlice queryCratesForPackage(String p1, String p2, int p3, String p4){
	int v6 = Binder.getCallingUid();
	String v8 = new String(1);
	ParceledListSlice v9 = p0.getAppCrates(p1, v8, p3);
	return v9;
}
