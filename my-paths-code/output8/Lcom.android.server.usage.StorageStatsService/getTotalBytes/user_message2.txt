The method getTotalBytes has the following code snippet:

This is path 1 for the API with depth 0:
public long getTotalBytes(String p1, String p2){
	if (p1 != StorageManager.UUID_PRIVATE_INTERNAL) {
		long v1 = this.mStorage.getPrimaryStorageSize();
		long v2 = FileUtils.roundStorageSize(v1);
		return v2;
	}
}


This is path 2 for the API with depth 0:
public long getTotalBytes(String p1, String p2){
	if (p1 != StorageManager.UUID_PRIVATE_INTERNAL) {
		VolumeInfo v1 = this.mStorage.findVolumeByUuid(p1);
		if (v1 == 0) {
			long v2 = FileUtils.roundStorageSize(DiskInfo.size);
			return v2;
		}
	}
}

and the following sink code:
['VolumeInfo v1 = this.mStorage.findVolumeByUuid(p1);\nlong v2 = FileUtils.roundStorageSize(DiskInfo.size);\nreturn v2;', 'long v1 = this.mStorage.getPrimaryStorageSize();\nlong v2 = FileUtils.roundStorageSize(v1);\nreturn v2;']

The method getTotalBytes has the following similar APIs:

- API Name: getVolumes(I)[Landroid/os/storage/VolumeInfo; with Similarity Score: 0.7792941927909851
  - Access Control Level: NONE and the following code:
int v1 = this.mVolumes.size();
VolumeInfo v2 = new VolumeInfo(v1);
return v2;

- API Name: getDisks()[Landroid/os/storage/DiskInfo; with Similarity Score: 0.7581535577774048
  - Access Control Level: NONE and the following code:
int v1 = this.mDisks.size();
DiskInfo v2 = new DiskInfo(v1);
return v2;

