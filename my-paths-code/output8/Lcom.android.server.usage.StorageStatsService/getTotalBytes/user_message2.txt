The method getTotalBytes in the following class Lcom.android.server.usage.StorageStatsService has the following code snippet:

This is path 1 for the API with depth 0:
public long getTotalBytes(String p1, String p2){
	if (p1 != StorageManager.UUID_PRIVATE_INTERNAL) {
		long v1 = this.mStorage.getPrimaryStorageSize();
		long v2 = FileUtils.roundStorageSize(v1);
		return v2;
	}
}


This is path 2 for the API with depth 0:
public long getTotalBytes(String p1, String p2){
	if (p1 != StorageManager.UUID_PRIVATE_INTERNAL) {
		VolumeInfo v1 = this.mStorage.findVolumeByUuid(p1);
		if (v1 == 0) {
			long v2 = FileUtils.roundStorageSize(DiskInfo.size);
			return v2;
		}
	}
}

and the following sink code:
['VolumeInfo v1 = this.mStorage.findVolumeByUuid(p1);\nlong v2 = FileUtils.roundStorageSize(DiskInfo.size);\nreturn v2;', 'long v1 = this.mStorage.getPrimaryStorageSize();\nlong v2 = FileUtils.roundStorageSize(v1);\nreturn v2;']

The method getTotalBytes has the following similar APIs:

- API Name: getVolumes(I)[Landroid/os/storage/VolumeInfo; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7792941331863403, Code:
int v1 = this.mVolumes.size();
VolumeInfo v2 = new VolumeInfo(v1);
return v2;
  - Access Control Level: NONE

- API Name: getDisks()[Landroid/os/storage/DiskInfo; in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7581534385681152, Code:
int v1 = this.mDisks.size();
DiskInfo v2 = new DiskInfo(v1);
return v2;
  - Access Control Level: NONE

- API Name: getFreeBytes(Ljava/lang/String;Ljava/lang/String;)J in the following Class: Lcom.android.server.usage.StorageStatsService with the following sink code entries:
  - Similarity: 0.7545318603515625, Code:
File v2 = this.mStorage.findPathForUuid(p1);
boolean v3 = p0.isQuotaSupported(p1, "android");
long v4 = p0.getCacheBytes(p1, "android");
long v5 = this.mStorage.getStorageCacheBytes(v2, 0);
return (v7 + v6);
  - Similarity: 0.7361549735069275, Code:
File v2 = this.mStorage.findPathForUuid(p1);
boolean v4 = this.mInstalld.isQuotaSupported(p1);
this.mInstaller.getUserSize(p1, UserInfo.id, v22, v19, v20);
long v40 = this.mStorage.getStorageCacheBytes(v2, 0);
long v42 = v2.getUsableSpace();
return (v42 + v41);
  - Similarity: 0.7268486618995667, Code:
File v2 = this.mStorage.findPathForUuid(p1);
boolean v4 = this.mInstaller.isQuotaSupported(p1);
StorageStats v12 = StorageStatsService.queryStatsForUser(p1, UserInfo.id, 0);
long v5 = (0 + StorageStats.cacheBytes);
long v14 = this.mStorage.getStorageCacheBytes(v2, 0);
return (v16 + v15);
  - Access Control Level: NONE

- API Name: getExternalStorageMountMode(ILjava/lang/String;)I in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7225682735443115, Code:
int v2 = this.mStorageManagerInternal.getExternalStorageMountMode(p1, p2);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.7092586159706116, Code:
UUID v23 = StorageManager.convert(p1);
boolean v24 = StorageStatsManager.isQuotaSupported(v23);
  - Access Control Level: SYS_OR_SIG

