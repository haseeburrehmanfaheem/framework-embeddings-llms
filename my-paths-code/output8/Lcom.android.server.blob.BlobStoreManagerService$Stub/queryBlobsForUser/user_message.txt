This is path 1 for the API with depth 2:
public List queryBlobsForUser(int p1){
	if (p1 != -2) {
		int v2 = ActivityManager.getCurrentUser();
		Object v4 = this.sLocalServiceObjects.get(ActivityManagerInterna.class);
		Object v3 = v4;
		v3.ensureNotSpecialUser(p1);
		ArrayList v8 = new ArrayList();
		ArrayMap v10 = new ArrayMap();
		BlobStoreManagerService$$ExternalSyntheticLambda9 v12 = new BlobStoreManagerService$$ExternalSyntheticLambda9(BlobStoreManagerService,v10,p1);
		BlobStoreManagerService$$ExternalSyntheticLambda10 v14 = new BlobStoreManagerService$$ExternalSyntheticLambda10(p1,v12,v8);
		BlobStoreManagerService.forEachBlobLocked(v14);
		List v7 = v8;
		List v6 = v7;
		return v6;
	}
}


This is path 2 for the API with depth 1:
public List queryBlobsForUser(int p1){
	if (p1 != -2) {
		int v2 = ActivityManager.getCurrentUser();
		Object v4 = this.sLocalServiceObjects.get(ActivityManagerInterna.class);
		Object v3 = v4;
		v3.ensureNotSpecialUser(p1);
		List v7 = this.this$0.queryBlobsForUserInternal(p1);
		List v6 = v7;
		return v6;
	}
}


This is path 3 for the API with depth 0:
public List queryBlobsForUser(int p1){
	if (p1 != -2) {
		int v2 = ActivityManager.getCurrentUser();
		Object v3 = LocalServices.getService(ActivityManagerInterna.class);
		v3.ensureNotSpecialUser(p1);
		List v5 = BlobStoreManagerService.-$$Nest$mqueryBlobsForUserInternal(this.this$0, p1);
		return v5;
	}
}
