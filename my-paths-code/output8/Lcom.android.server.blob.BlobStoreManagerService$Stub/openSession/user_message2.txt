The method openSession in the following class Lcom.android.server.blob.BlobStoreManagerService$Stub has the following code snippet:

This is path 1 for the API with depth 2:
public IBlobStoreSession openSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	int v15 = UserHandle.getUserId(v8);
	LongSparseArray v16 = BlobStoreManagerService.getUserSessionsLocked(v15);
	Object v17 = v16.get(p1);
	if (v17 == 0) {
		boolean v18 = v17.hasAccess(v8, p2);
		if (v18 == 0) {
			boolean v19 = v17.isFinalized();
			if (v19 != 0) {
				v17.open();
				BlobStoreSession v14 = v17;
				BlobStoreSession v13 = v14;
				return v13;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public IBlobStoreSession openSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	this.this$0.verifyCallingPackage(v8, p2);
	BlobStoreSession v12 = this.this$0.openSessionInternal(p1, v8, p2);
	BlobStoreSession v11 = v12;
	return v11;
}


This is path 3 for the API with depth 0:
public IBlobStoreSession openSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);
	BlobStoreSession v10 = BlobStoreManagerService.-$$Nest$mopenSessionInternal(this.this$0, p1, v8, p2);
	return v10;
}

and the following sink code:
['BlobStoreSession v12 = this.this$0.openSessionInternal(p1, v8, p2);\nreturn v11;', 'BlobStoreManagerService.-$$Nest$mopenSessionInternal(this.this$0, p1, v8, p2);\nreturn v10;']

The method openSession has the following similar APIs:

- API Name: createSession(Landroid/app/blob/BlobHandle;Ljava/lang/String;)J in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.8797280788421631, Code:
long v7 = BlobStoreManagerService.-$$Nest$mcreateSessionInternal(this.this$0, p1, v4, p2);
return v7;
  - Similarity: 0.7051907777786255, Code:
long v19 = this.this$0.createSessionInternal(p1, v13, p2);
return v18;
  - Similarity: 0.7047685384750366, Code:
int v26 = BlobStoreManagerService.getSessionsCountLocked(v13, p2);
BlobStoreSession v29 = new BlobStoreSession(this.mContext,v28,p1,v13,p2,this.mSessionStateChangeListener);
BlobStoreManagerService.addSessionForUserLocked(v29, v31);
long v25 = v28;
return v24;
  - Access Control Level: SYS_OR_SIG

- API Name: abandonSession(JLjava/lang/String;)V in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.8710004687309265, Code:
BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p1, v8, p2);
v15.open();
v15.abandon();
  - Similarity: 0.8488678932189941, Code:
BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);
BlobStoreManagerService.-$$Nest$mabandonSessionInternal(this.this$0, p1, v8, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: openBlob(Landroid/app/blob/BlobHandle;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor; in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.7738799452781677, Code:
this.this$0.verifyCallingPackage(v13, p2);
boolean v17 = this.this$0.isAllowedBlobStoreAccess(v13, p2);
if (v16 == 0) {
ParcelFileDescriptor v19 = this.this$0.openBlobInternal(p1, v13, p2);
return v18;
  - Similarity: 0.7525613307952881, Code:
BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v4, p2);
boolean v6 = BlobStoreManagerService.-$$Nest$misAllowedBlobStoreAccess(this.this$0, v4, p2);
if (v6 == 0) {
ParcelFileDescriptor v7 = BlobStoreManagerService.-$$Nest$mopenBlobInternal(this.this$0, p1, v4, p2);
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: deleteBlob(J)V in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.7224432229995728, Code:
BlobStoreManagerService.-$$Nest$mdeleteBlobInternal(this.this$0, p1, v1);
  - Access Control Level: SYS_OR_SIG

