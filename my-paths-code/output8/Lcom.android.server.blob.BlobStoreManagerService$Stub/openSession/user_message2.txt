The method openSession has the following code snippet:

This is path 1 for the API with depth 2:
public IBlobStoreSession openSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	int v15 = UserHandle.getUserId(v8);
	LongSparseArray v16 = BlobStoreManagerService.getUserSessionsLocked(v15);
	Object v17 = v16.get(p1);
	if (v17 == 0) {
		boolean v18 = v17.hasAccess(v8, p2);
		if (v18 == 0) {
			boolean v19 = v17.isFinalized();
			if (v19 != 0) {
				v17.open();
				BlobStoreSession v14 = v17;
				BlobStoreSession v13 = v14;
				return v13;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public IBlobStoreSession openSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	this.this$0.verifyCallingPackage(v8, p2);
	BlobStoreSession v12 = this.this$0.openSessionInternal(p1, v8, p2);
	BlobStoreSession v11 = v12;
	return v11;
}


This is path 3 for the API with depth 0:
public IBlobStoreSession openSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);
	BlobStoreSession v10 = BlobStoreManagerService.-$$Nest$mopenSessionInternal(this.this$0, p1, v8, p2);
	return v10;
}

and the following sink code:
['BlobStoreSession v12 = this.this$0.openSessionInternal(p1, v8, p2);\nreturn v11;', 'BlobStoreManagerService.-$$Nest$mopenSessionInternal(this.this$0, p1, v8, p2);\nreturn v10;']

The method openSession has the following similar APIs:

- API Name: createSession(Landroid/app/blob/BlobHandle;Ljava/lang/String;)J with Similarity Score: 0.8797281980514526
  - Access Control Level: SYS_OR_SIG and the following code:
long v7 = BlobStoreManagerService.-$$Nest$mcreateSessionInternal(this.this$0, p1, v4, p2);
return v7;

- API Name: abandonSession(JLjava/lang/String;)V with Similarity Score: 0.8710005283355713
  - Access Control Level: SYS_OR_SIG and the following code:
BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p1, v8, p2);
v15.open();
v15.abandon();

