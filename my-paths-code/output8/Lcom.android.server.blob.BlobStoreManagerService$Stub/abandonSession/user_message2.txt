The method abandonSession in the following class Lcom.android.server.blob.BlobStoreManagerService$Stub has the following code snippet:

This is path 1 for the API with depth 2:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p1, v8, p2);
	v15.open();
	v15.abandon();
	if (BlobStoreConfig.LOGV == 0) {
		BlobStoreManagerService.writeBlobSessionsAsync();
		return;
	}
}


This is path 2 for the API with depth 1:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	this.this$0.verifyCallingPackage(v8, p2);
	this.this$0.abandonSessionInternal(p1, v8, p2);
	return;
}


This is path 3 for the API with depth 0:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);
	BlobStoreManagerService.-$$Nest$mabandonSessionInternal(this.this$0, p1, v8, p2);
	return;
}

and the following sink code:
['BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p1, v8, p2);\nv15.open();\nv15.abandon();', 'this.this$0.verifyCallingPackage(v8, p2);\nthis.this$0.abandonSessionInternal(p1, v8, p2);', 'BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);\nBlobStoreManagerService.-$$Nest$mabandonSessionInternal(this.this$0, p1, v8, p2);']

The method abandonSession has the following similar APIs:

- API Name: openSession(JLjava/lang/String;)Landroid/app/blob/IBlobStoreSession; in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.8710004687309265, Code:
BlobStoreSession v12 = this.this$0.openSessionInternal(p1, v8, p2);
return v11;
  - Similarity: 0.8488678932189941, Code:
BlobStoreManagerService.-$$Nest$mopenSessionInternal(this.this$0, p1, v8, p2);
return v10;
  - Access Control Level: SYS_OR_SIG

- API Name: createSession(Landroid/app/blob/BlobHandle;Ljava/lang/String;)J in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.8185709714889526, Code:
long v7 = BlobStoreManagerService.-$$Nest$mcreateSessionInternal(this.this$0, p1, v4, p2);
return v7;
  - Similarity: 0.7399494647979736, Code:
long v19 = this.this$0.createSessionInternal(p1, v13, p2);
return v18;
  - Access Control Level: SYS_OR_SIG

- API Name: releaseSession(Landroid/os/IBinder;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.765450119972229, Code:
int v4 = this.this$0.resolveCallingUserId(v2, v1, p2, "releaseSession");
TvInteractiveAppManagerService$SessionState v8 = this.this$0.releaseSessionLocked(p1, v1, v3);
  - Similarity: 0.7603742480278015, Code:
int v3 = TvInteractiveAppManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p2, "releaseSession");
TvInteractiveAppManagerService$SessionState v6 = TvInteractiveAppManagerService.-$$Nest$mreleaseSessionLocked(this.this$0, p1, v1, v3);
  - Access Control Level: SYS_OR_SIG

- API Name: releaseLease(Landroid/app/blob/BlobHandle;Ljava/lang/String;)V in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.758533239364624, Code:
BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v4, p2);
BlobStoreManagerService.-$$Nest$misAllowedBlobStoreAccess(this.this$0, v4, p2);
BlobStoreManagerService.-$$Nest$mreleaseLeaseInternal(this.this$0, p1, v4, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: openBlob(Landroid/app/blob/BlobHandle;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor; in the following Class: Lcom.android.server.blob.BlobStoreManagerService$Stub with the following sink code entries:
  - Similarity: 0.7399923205375671, Code:
BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v4, p2);
boolean v6 = BlobStoreManagerService.-$$Nest$misAllowedBlobStoreAccess(this.this$0, v4, p2);
if (v6 == 0) {
ParcelFileDescriptor v7 = BlobStoreManagerService.-$$Nest$mopenBlobInternal(this.this$0, p1, v4, p2);
return v7;
  - Access Control Level: SYS_OR_SIG

