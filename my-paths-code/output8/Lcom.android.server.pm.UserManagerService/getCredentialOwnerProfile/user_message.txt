This is path 1 for the API with depth 2:
public int getCredentialOwnerProfile(int p1){
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	if (v2 != 0) {
		Object v5 = this.mUsers.get(p1);
		if (v5 == 0) {
			if (UserInfo.partial == 0) {
				boolean v6 = this.mRemovingUserIds.get(p1);
				if (v6 != 0) {
					if (v5 == 0) {
						UserInfo v4 = 0;
						if (v4 != 0) {
							if (UserInfo.profileGroupId == p1) {
								if (UserInfo.profileGroupId != -10000) {
									Object v8 = this.mUsers.get(UserInfo.profileGroupId);
									if (v8 == 0) {
										if (UserInfo.partial == 0) {
											boolean v9 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
											if (v9 != 0) {
												if (v8 == 0) {
													UserInfo v7 = 0;
													UserInfo v3 = v7;
													if (v3 == 0) {
														return UserInfo.id;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int getCredentialOwnerProfile(int p1){
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	if (v2 != 0) {
		UserInfo v4 = UserManagerService.getUserInfoLU(p1);
		if (v4 != 0) {
			if (UserInfo.profileGroupId == p1) {
				if (UserInfo.profileGroupId != -10000) {
					UserInfo v5 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);
					UserInfo v3 = v5;
					if (v3 == 0) {
						return UserInfo.id;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public int getCredentialOwnerProfile(int p1){
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	if (v2 != 0) {
		UserInfo v3 = p0.getProfileParentLU(p1);
		if (v3 == 0) {
			return UserInfo.id;
		}
	}
}
