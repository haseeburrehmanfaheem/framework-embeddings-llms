The method getProfileParent has the following code snippet:

This is path 1 for the API with depth 2:
public UserInfo getProfileParent(int p1){
	if (v1 == 0) {
		Object v4 = this.mUsers.get(p1);
		if (v4 == 0) {
			if (UserInfo.partial == 0) {
				boolean v5 = this.mRemovingUserIds.get(p1);
				if (v5 != 0) {
					if (v4 == 0) {
						UserInfo v3 = 0;
						if (v3 != 0) {
							UserInfo v2 = 0;
							return v2;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public UserInfo getProfileParent(int p1){
	if (v1 == 0) {
		UserInfo v3 = UserManagerService.getUserInfoLU(p1);
		if (v3 != 0) {
			UserInfo v2 = 0;
			return v2;
		}
	}
}


This is path 3 for the API with depth 0:
public UserInfo getProfileParent(int p1){
	if (v1 == 0) {
		UserInfo v2 = p0.getProfileParentLU(p1);
		return v2;
	}
}

and the following sink code:
['UserInfo v2 = p0.getProfileParentLU(p1);\nreturn v2;']

The method getProfileParent has the following similar APIs:

- API Name: getProfileParentId(I)I with Similarity Score: 0.9143219590187073
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v5 = this.this$0.getProfileParentLU(p1);
if (v4 != 0) { int v2 = p1; return v2; }

- API Name: getProfileParentId(I)I with Similarity Score: 0.902732253074646
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v4 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
int v2 = p1;
return v2;

