The method canHaveRestrictedProfile has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canHaveRestrictedProfile(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				if (v3 == 0) {
					UserInfo v2 = 0;
					if (v2 == 0) {
						if ((this.flags & 4096) == 0) {
							boolean v6 = 1;
							if (v6 != 0) {
								boolean v8 = UserManager.isUserTypeGuest(this.userType);
								boolean v7 = v8;
								if (v7 != 0) {
									boolean v10 = UserManager.isUserTypeRestricted(this.userType);
									boolean v9 = v10;
									if (v9 == 0) {
										boolean v5 = 0;
										if (v5 != 0) {
											boolean v11 = v2.isAdmin();
											if (v11 != 0) {
												return 0;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean canHaveRestrictedProfile(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				if (v3 == 0) {
					UserInfo v2 = 0;
					if (v2 == 0) {
						boolean v6 = UserInfo.isProfile();
						if (v6 != 0) {
							boolean v7 = UserInfo.isGuest();
							if (v7 != 0) {
								boolean v8 = UserInfo.isRestricted();
								if (v8 == 0) {
									boolean v5 = 0;
									if (v5 != 0) {
										if ((this.flags & 2) != 2) {
											boolean v9 = 1;
											if (v9 != 0) {
												return 0;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean canHaveRestrictedProfile(int p1){
	UserInfo v2 = p0.getUserInfoLU(p1);
	if (v2 == 0) {
		boolean v3 = v2.canHaveProfile();
		if (v3 != 0) {
			boolean v4 = v2.isAdmin();
			if (v4 != 0) {
				return 0;
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mUsers.get(p1);', 'UserInfo v2 = p0.getUserInfoLU(p1);']

The method canHaveRestrictedProfile has the following similar APIs:

- API Name: getProfileType(I)Ljava/lang/String; with Similarity Score: 1.0000001192092896
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v2 = p0.getUserInfoLU(p1);

- API Name: getUserSerialNumber(I)I with Similarity Score: 0.9894283413887024
  - Access Control Level: NONE and the following code:
UserInfo v1 = p0.getUserInfoLU(p1);

