The method setUserRestriction has the following code snippet:

This is path 1 for the API with depth 2:
public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if (0 == 0) {
			if (0.length <= 0) {
				if (0.length <= 1) {
					if (p1 == 0) {
						if (v18 == 0) {
							if (0 != 0) {
								IPackageManager v19 = AppGlobals.getPackageManager();
								if (0 >= 0.length) {
									int v20 = UserHandle.getUserId(v4);
									ApplicationInfo v21 = v19.getApplicationInfo(0[0], 794624, v20);
									if ((0 + 1) >= 0.length) {
										int v22 = UserHandle.getUserId(v4);
										ApplicationInfo v23 = v19.getApplicationInfo(0[(0 + 1)], 794624, v22);
										if (v23 == 0) {
											boolean v24 = v23.isSystemApp();
											if (v24 == 0) {
												boolean v17 = 1;
												if (v17 == 0) {
													boolean v2 = 0;
													if (v2 != 0) {
														Bundle v27 = this.mBaseUserRestrictions.getRestrictions(p3);
														Bundle v28 = BundleUtils.clone(v27);
														v28.putBoolean(p1, p2);
														Object v32 = this.mUserRestrictions.get(p3);
														Bundle v31 = v32;
														if (v31 == 0) {
															Bundle v34 = new Bundle();
															Bundle v33 = v31;
															if (v28 == 0) {
																Object v37 = this.mUserRestrictions.get(p3);
																Bundle v36 = v37;
																if (v36 == v28) {
																	Preconditions.checkState(1);
																	Object v40 = this.mUserRestrictions.get(p3);
																	Bundle v39 = v40;
																	if (v39 == v28) {
																		Preconditions.checkState(1);
																		Object v43 = this.mUserRestrictions.get(p3);
																		boolean v44 = UserRestrictionsUtils.areEqual(v43, v28);
																		if ((v44 ^ 1) != 0) {
																			boolean v45 = BundleUtils.isEmpty(v28);
																			if (v45 != 0) {
																				this.mUserRestrictions.put(p3, v28);
																				boolean v42 = 1;
																				if (v42 == 0) {
																					Object v48 = this.mUsers.get(p3);
																					UserManagerService$UserData v47 = v48;
																					boolean v50 = this.mHandler.hasMessages(1, v47);
																					if (v50 != 0) {
																						Message v51 = this.mHandler.obtainMessage(1, v47);
																						boolean v52 = this.mHandler.sendMessageDelayed(v51, 2000);
																						Bundle v54 = this.mBaseUserRestrictions.getRestrictions(p3);
																						Bundle v55 = UserRestrictionsUtils.nonNull(v54);
																						Bundle v56 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
																						RestrictionsSet v57 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p3);
																						boolean v58 = BundleUtils.isEmpty(v56);
																						if (v58 == 0) {
																							boolean v59 = v57.isEmpty();
																							if (v59 == 0) {
																								Bundle v60 = BundleUtils.clone(v55);
																								UserRestrictionsUtils.merge(v60, v56);
																								Bundle v62 = v57.mergeAll();
																								UserRestrictionsUtils.merge(v60, v62);
																								Bundle v53 = v60;
																								Object v65 = this.mUserRestrictions.get(p3);
																								boolean v66 = UserRestrictionsUtils.areEqual(v65, v53);
																								if ((v66 ^ 1) != 0) {
																									boolean v67 = BundleUtils.isEmpty(v53);
																									if (v67 != 0) {
																										this.mUserRestrictions.put(p3, v53);
																										boolean v64 = 1;
																										if (this.mAppOpsService == 0) {
																											UserManagerService$3 v69 = new UserManagerService$3(UserManagerService,v53,p3);
																											boolean v71 = this.mHandler.post(v69);
																											boolean v73 = UserRestrictionsUtils.areEqual(v53, v33);
																											if (v73 == 0) {
																												Bundle v74 = new Bundle(v53);
																												Bundle v76 = new Bundle(v33);
																												UserManagerService$4 v78 = new UserManagerService$4(UserManagerService,p3,v74,v76);
																												boolean v80 = this.mHandler.post(v78);
																												Bundle v81 = new Bundle(v53);
																												Object v84 = this.mUserRestrictions.get(p3);
																												boolean v85 = UserRestrictionsUtils.areEqual(v84, v81);
																												if ((v85 ^ 1) != 0) {
																													boolean v86 = BundleUtils.isEmpty(v81);
																													if (v86 != 0) {
																														this.mUserRestrictions.put(p3, v81);
																														boolean v83 = 1;
																														return;
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v5 = AppGlobals.getPackageManager();
		String v6 = v5.getPackagesForUid(v4);
		if (0 == 0) {
			if (0.length <= 0) {
				if (0.length <= 1) {
					if (p1 == 0) {
						boolean v16 = UserRestrictionsUtils.isSystemApp(v4, 0);
						if (v16 == 0) {
							boolean v2 = 0;
							if (v2 != 0) {
								Object v20 = this.mUserRestrictions.get(p3);
								Bundle v19 = v20;
								Bundle v22 = new Bundle(v19);
								if (v19 == 0) {
									Bundle v21 = v22;
									v21.putBoolean(p1, p2);
									Bundle v26 = this.mAppliedUserRestrictions.getRestrictions(p3);
									Bundle v27 = UserRestrictionsUtils.nonNull(v26);
									if (v21 == 0) {
										Bundle v28 = this.mBaseUserRestrictions.getRestrictions(p3);
										if (v28 == v21) {
											Preconditions.checkState(1);
											Bundle v30 = this.mCachedEffectiveUserRestrictions.getRestrictions(p3);
											if (v30 == v21) {
												Preconditions.checkState(1);
												boolean v32 = this.mBaseUserRestrictions.updateRestrictions(p3, v21);
												if (v32 == 0) {
													UserManagerService$UserData v33 = UserManagerService.getUserDataNoChecks(p3);
													UserManagerService.scheduleWriteUser(v33);
													Bundle v35 = UserManagerService.computeEffectiveUserRestrictionsLR(p3);
													boolean v36 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p3, v35);
													if (this.mAppOpsService == 0) {
														UserManagerService$3 v37 = new UserManagerService$3(UserManagerService,v35,p3);
														boolean v39 = this.mHandler.post(v37);
														UserManagerService.propagateUserRestrictionsLR(p3, v35, v27);
														Bundle v41 = new Bundle(v35);
														boolean v43 = this.mAppliedUserRestrictions.updateRestrictions(p3, v41);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v2 != 0) {
		Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
		Bundle v4 = BundleUtils.clone(v3);
		v4.putBoolean(p1, p2);
		p0.updateUserRestrictionsInternalLR(v4, p3);
		return;
	}
}

and the following sink code:
['boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);\nBundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);\nBundle v4 = BundleUtils.clone(v3);\nv4.putBoolean(p1, p2);\np0.updateUserRestrictionsInternalLR(v4, p3);', 'int v4 = Binder.getCallingUid();\nIPackageManager v5 = AppGlobals.getPackageManager();\nString v6 = v5.getPackagesForUid(v4);\nboolean v16 = UserRestrictionsUtils.isSystemApp(v4, 0);\nObject v20 = this.mUserRestrictions.get(p3);\nBundle v19 = v20;\nBundle v22 = new Bundle(v19);\nv21.putBoolean(p1, p2);', 'int v4 = Binder.getCallingUid();\nIPackageManager v6 = ActivityThread.getPackageManager();\nIPackageManager v5 = v6;\nString v7 = v5.getPackagesForUid(v4);\nboolean v24 = v23.isSystemApp();\nBundle v27 = this.mBaseUserRestrictions.getRestrictions(p3);\nBundle v28 = BundleUtils.clone(v27);\nv28.putBoolean(p1, p2);']

The method setUserRestriction has the following similar APIs:

- API Name: hasBaseUserRestriction(Ljava/lang/String;I)Z with Similarity Score: 0.9443197846412659
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
boolean v4 = v3.getBoolean(p1, 0);

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z with Similarity Score: 0.8667986392974854
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
List v2 = p0.getUsers(1);
Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
boolean v6 = v5.getBoolean(p1);

