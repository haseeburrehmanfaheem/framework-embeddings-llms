The method setApplicationRestrictions in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	if (p2 == 0) {
		p2.setDefusable(1);
		if (p2 == 0) {
			boolean v5 = p2.isEmpty();
			if (v5 == 0) {
				AtomicFile v7 = new AtomicFile(v8);
				File v8 = new File(v9,v10);
				File v9 = Environment.getUserSystemDirectory(p3);
				StringBuilder v11 = new StringBuilder();
				StringBuilder v13 = v11.append("res_");
				StringBuilder v14 = v11.append(p1);
				StringBuilder v15 = v11.append(".xml");
				String v16 = v11.toString();
				String v10 = v16;
				FileOutputStream v20 = v7.startWrite();
				TypedXmlSerializer v21 = Xml.resolveSerializer(v20);
				v21.startDocument(0, Boolean.TRUE);
				v21.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output", 1);
				XmlSerializer v24 = v21.startTag(0, "restrictions");
				UserManagerService.writeBundle(p2, v21);
				XmlSerializer v26 = v21.endTag(0, "restrictions");
				v21.endDocument();
				v7.finishWrite(v20);
				if (1 != 0) {
					Intent v29 = new Intent("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");
					Intent v31 = v29.setPackage(p1);
					Intent v32 = v29.addFlags(1073741824);
					UserHandle v33 = UserHandle.of(p3);
					this.mContext.sendBroadcastAsUser(v29, v33);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	if (p2 == 0) {
		p2.setDefusable(1);
		if (p2 == 0) {
			boolean v5 = p2.isEmpty();
			if (v5 == 0) {
				File v7 = Environment.getUserSystemDirectory(p3);
				File v8 = new File(v7,v9);
				String v9 = UserManagerService.packageToRestrictionsFileName(p1);
				boolean v11 = v8.exists();
				if (v11 == 0) {
					boolean v12 = v8.delete();
					boolean v6 = 1;
					if (1 != 0) {
						Intent v13 = new Intent("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");
						Intent v15 = v13.setPackage(p1);
						Intent v16 = v13.addFlags(1073741824);
						UserHandle v17 = UserHandle.of(p3);
						this.mContext.sendBroadcastAsUser(v13, v17);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot("set application restrictions");
	if (p2 == 0) {
		p2.setDefusable(1);
		if (p2 == 0) {
			boolean v3 = p2.isEmpty();
			if (v3 == 0) {
				boolean v4 = UserManagerService.cleanAppRestrictionsForPackageLAr(p1, p3);
				if (1 != 0) {
					Intent v5 = new Intent("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");
					Intent v7 = v5.setPackage(p1);
					Intent v8 = v5.addFlags(1073741824);
					UserHandle v9 = UserHandle.of(p3);
					this.mContext.sendBroadcastAsUser(v5, v9);
					return;
				}
			}
		}
	}
}

and the following sink code:
['AtomicFile v7 = new AtomicFile(v8);\nStringBuilder v11 = new StringBuilder();\nv13 = v11.append(p1);\nString v16 = v11.toString();\nFileOutputStream v20 = v7.startWrite();\nUserManagerService.writeBundle(p2, v21);', 'File v8 = new File(v7,v9);\nString v9 = UserManagerService.packageToRestrictionsFileName(p1);\nIntent v13 = new Intent("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");\nv15 = v13.setPackage(p1);', 'UserManagerService.cleanAppRestrictionsForPackageLAr(p1, p3);\nIntent v5 = new Intent("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");\nv7 = v5.setPackage(p1);']

The method setApplicationRestrictions has the following similar APIs:

- API Name: getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8119725584983826, Code:
int v1 = UserHandle.getCallingUserId();
File v18 = Environment.getUserSystemDirectory(v1);
String v19 = UserManagerService.packageToRestrictionsFileName(p1);
AtomicFile v16 = new AtomicFile(v17);
Bundle v22 = UserManagerService.readApplicationRestrictionsLAr(v16);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: createLocalApprovalIntent()Landroid/content/Intent; in the following Class: Lcom.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl with the following sink code entries:
  - Similarity: 0.7638871669769287, Code:
int v1 = UserHandle.getCallingUserId();
ComponentName v3 = this.mDpm.getRestrictionsProvider(v1);
String v4 = v3.getPackageName();
Intent v5 = new Intent("android.content.action.REQUEST_LOCAL_APPROVAL");
Intent v7 = v5.setPackage(v4);
ResolveInfo v10 = v8.resolveIntent(v5, 0, 0, v1);
ComponentName v11 = new ComponentName(ActivityInfo.packageName,ActivityInfo.name);
Intent v13 = v5.setComponent(v11);
return v5;
  - Access Control Level: NONE

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.760948896408081, Code:
boolean v2 = this.USER_RESTRICTIONS.contains(p1);
int v3 = Binder.getCallingUid();
IPackageManager v5 = ActivityThread.getPackageManager();
String v6 = v4.getPackagesForUid(v3);
Bundle v33 = v34;
Bundle v35 = v42;
this.mUserRestrictions.put(UserInfo.id, v35);
  - Access Control Level: SYS_OR_SIG

- API Name: setUserName(ILjava/lang/String;)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7307798862457275, Code:
UserInfo.name = p2;
AtomicFile v6 = new AtomicFile(v7);
UserManagerService.writeUserLP(v2, v15);
  - Access Control Level: SYS_OR_SIG

- API Name: markGuestForDeletion(I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7303906679153442, Code:
Bundle v5 = UserManagerService.getEffectiveUserRestrictions(v2);
boolean v7 = v3.getBoolean("no_remove_user", 0);
AtomicFile v14 = new AtomicFile(v15);
UserManagerService.writeUserLP(v9, v23);
  - Access Control Level: SYS_OR_SIG

