The method removeUserEvenWhenDisallowed has the following code snippet:

This is path 1 for the API with depth 2:
public boolean removeUserEvenWhenDisallowed(int p1){
	Object v5 = this.mUsers.get(p1);
	if (p1 != 0) {
		if (v5 != 0) {
			boolean v6 = this.mRemovingUserIds.get(p1);
			if (v6 == 0) {
				this.mRemovingUserIds.put(p1, 1);
				Integer v15 = Integer.valueOf(p1);
				boolean v16 = this.mRecentlyRemovedIds.add(v15);
				int v17 = this.mRecentlyRemovedIds.size();
				if (v17 <= 100) {
					Object v18 = this.mRecentlyRemovedIds.removeFirst();
					UserInfo.partial = 1;
					UserInfo.flags = (UserInfo.flags | 64);
					AtomicFile v20 = new AtomicFile(v21);
					File v21 = new File(this.mUsersDir,v26);
					StringBuilder v22 = new StringBuilder();
					StringBuilder v24 = v22.append(UserInfo.id);
					StringBuilder v25 = v22.append(".xml");
					String v26 = v22.toString();
					FileOutputStream v29 = v20.startWrite();
					UserManagerService.writeUserLP(v5, v29);
					v20.finishWrite(v29);
					long v33 = UserManagerService.logUserJourneyBegin(6, p1, UserInfo.userType, UserInfo.flags);
					long v32 = v33;
					this.mAppOpsService.removeUser(p1);
					if (UserInfo.profileGroupId == -10000) {
						boolean v36 = UserManager.isUserTypeManagedProfile(this.userType);
						boolean v35 = v36;
						if (v35 == 0) {
							IActivityManager v37 = ActivityManager.getService();
							UserManagerService$6 v38 = new UserManagerService$6(UserManagerService,v32);
							int v40 = v37.stopUser(p1, 1, v38);
							if (v40 != 0) {
								Binder.restoreCallingIdentity(v3);
								boolean v2 = 0;
								return v2;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean removeUserEvenWhenDisallowed(int p1){
	Object v5 = this.mUsers.get(p1);
	if (p1 != 0) {
		if (v5 != 0) {
			boolean v6 = this.mRemovingUserIds.get(p1);
			if (v6 == 0) {
				UserManagerService.addRemovingUserIdLocked(p1);
				UserInfo.partial = 1;
				UserInfo.flags = (UserInfo.flags | 64);
				UserManagerService.writeUserLP(v5);
				long v15 = UserManagerService.logUserRemoveJourneyBegin(p1, UserInfo.userType, UserInfo.flags);
				this.mAppOpsService.removeUser(p1);
				if (UserInfo.profileGroupId == -10000) {
					boolean v17 = UserManagerService$UserData.info.isManagedProfile();
					if (v17 == 0) {
						IActivityManager v18 = ActivityManager.getService();
						UserManagerService$6 v19 = new UserManagerService$6(UserManagerService,v15);
						int v21 = v18.stopUser(p1, 1, v19);
						if (v21 != 0) {
							Binder.restoreCallingIdentity(v3);
							boolean v2 = 0;
							return v2;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean removeUserEvenWhenDisallowed(int p1){
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}

and the following sink code:
['Object v5 = this.mUsers.get(p1);\nboolean v6 = this.mRemovingUserIds.get(p1);\nthis.mRemovingUserIds.put(p1, 1);\nInteger v15 = Integer.valueOf(p1);\nboolean v16 = this.mRecentlyRemovedIds.add(v15);\nUserManagerService.writeUserLP(v5, v29);\nthis.mAppOpsService.removeUser(p1);\nIActivityManager v37 = ActivityManager.getService();\nint v40 = v37.stopUser(p1, 1, v38);', 'Object v5 = this.mUsers.get(p1);\nboolean v6 = this.mRemovingUserIds.get(p1);\nUserManagerService.addRemovingUserIdLocked(p1);\nUserManagerService.writeUserLP(v5);\nlong v15 = UserManagerService.logUserRemoveJourneyBegin(p1, UserInfo.userType, UserInfo.flags);\nthis.mAppOpsService.removeUser(p1);\nIActivityManager v18 = ActivityManager.getService();\nint v21 = v18.stopUser(p1, 1, v19);', 'boolean v2 = p0.removeUserUnchecked(p1);']

The method removeUserEvenWhenDisallowed has the following similar APIs:

- API Name: removeUserWhenPossible(IZ)I with Similarity Score: 0.914354681968689
  - Access Control Level: SYS_OR_SIG and the following code:
Object v13 = this.mUsers.get(p1);
this.mRemovingUserIds.put(p1, 1);
Integer v23 = Integer.valueOf(p1);
boolean v24 = this.mRecentlyRemovedIds.add(v23);
AtomicFile v28 = new AtomicFile(v29);
FileOutputStream v37 = v28.startWrite();
UserManagerService.writeUserLP(v13, v37);

- API Name: removeUser(I)Z with Similarity Score: 0.8980655074119568
  - Access Control Level: SYS_OR_SIG and the following code:
Object v10 = this.mUsers.get(p1);
boolean v11 = this.mRemovingUserIds.get(p1);
this.mRemovingUserIds.put(p1, 1);
Integer v38 = Integer.valueOf(p1);
boolean v39 = this.mRecentlyRemovedIds.add(v38);
AtomicFile v43 = new AtomicFile(v44);
UserManagerService.writeUserLP(v28, v52);

