The method isSettingRestrictedForUser in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = p1.startsWith("data_roaming");
	if (v6 == 0) {
		boolean v7 = "0".equals(p3);
		if (v7 == 0) {
			UserHandle v8 = UserHandle.of(p2);
			boolean v9 = v4.hasUserRestriction("no_data_roaming", v8);
			boolean v2 = v9;
			return v2;
		}
	}
}


This is path 2 for the API with depth 0:
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}


This is path 3 for the API with depth 1:
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = "0".equals(p3);
	if (v6 == 0) {
		UserHandle v7 = UserHandle.of(p2);
		boolean v8 = v4.hasUserRestriction("no_data_roaming", v7);
		boolean v2 = v8;
		return v2;
	}
}

and the following sink code:
['UserHandle v8 = UserHandle.of(p2);\nboolean v9 = v4.hasUserRestriction("no_data_roaming", v8);\nreturn v2;', 'UserHandle v7 = UserHandle.of(p2);\nboolean v8 = v4.hasUserRestriction("no_data_roaming", v7);\nreturn v2;', 'boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);\nreturn v2;']

The method isSettingRestrictedForUser has the following similar APIs:

- API Name: hasUserRestriction(Ljava/lang/String;I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.748420000076294, Code:
boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: hasBaseUserRestriction(Ljava/lang/String;I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7310637831687927, Code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
boolean v4 = v3.getBoolean(p1, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7086877226829529, Code:
boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
List v2 = p0.getUsers(1);
Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
boolean v6 = v5.getBoolean(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7053571939468384, Code:
int v4 = UserHandle.getCallingUserId();
UserManagerService.enforceUserRestriction("no_add_clone_profile", v4, "Cannot add user");
UserInfo v6 = UserManagerService.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
return v2;
  - Access Control Level: SYS_OR_SIG

