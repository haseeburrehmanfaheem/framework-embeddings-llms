The method isCredentialSharableWithParent has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isCredentialSharableWithParent(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(p1);
	if (v4 == 0) {
		String v3 = UserInfo.userType;
		if (v3 == 0) {
			Object v5 = this.mUserTypes.get(v3);
			UserTypeDetails v2 = v5;
			if (v2 == 0) {
				boolean v6 = v2.isProfile();
				if (v6 == 0) {
					boolean v7 = v2.isCredentialSharableWithParent();
					if (v7 == 0) {
						return 1;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isCredentialSharableWithParent(int p1){
	String v3 = UserManagerService.getUserTypeNoChecks(p1);
	if (v3 == 0) {
		Object v4 = this.mUserTypes.get(v3);
		UserTypeDetails v2 = v4;
		if (v2 == 0) {
			if ((this.mBaseType & 4096) == 0) {
				boolean v5 = 1;
				if (v5 == 0) {
					boolean v6 = this.mIsCredentialSharableWithParent;
					if (v6 == 0) {
						return 1;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isCredentialSharableWithParent(int p1){
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	if (v2 == 0) {
		boolean v3 = v2.isProfile();
		if (v3 == 0) {
			boolean v4 = v2.isCredentialSharableWithParent();
			if (v4 == 0) {
				return 1;
			}
		}
	}
}

and the following sink code:
['UserInfo v4 = UserManagerService.getUserInfoLU(p1);\nif (v4 == 0) {\nString v3 = UserInfo.userType;\nObject v5 = this.mUserTypes.get(v3);\nUserTypeDetails v2 = v5;\nboolean v6 = v2.isCredentialSharableWithParent();\nreturn 1;', 'String v3 = UserManagerService.getUserTypeNoChecks(p1);\nObject v4 = this.mUserTypes.get(v3);\nUserTypeDetails v2 = v4;\nboolean v6 = this.mIsCredentialSharableWithParent;\nreturn 1;', 'UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);\nboolean v3 = v2.isProfile();\nboolean v4 = v2.isCredentialSharableWithParent();\nreturn 1;']

The method isCredentialSharableWithParent has the following similar APIs:

- API Name: hasBadge(I)Z with Similarity Score: 0.8783173561096191
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v4 = UserManagerService.getUserInfoLU(p1);
String v3 = UserInfo.userType;
Object v5 = this.mUserTypes.get(v3);
UserTypeDetails v2 = v5;
boolean v6 = v2.hasBadge();

- API Name: isUserOfType(ILjava/lang/String;)Z with Similarity Score: 0.8782445788383484
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v3 = UserManagerService.getUserInfoLU(p1);
String v2 = UserInfo.userType;
boolean v4 = p2.equals(v2);
return 1;

