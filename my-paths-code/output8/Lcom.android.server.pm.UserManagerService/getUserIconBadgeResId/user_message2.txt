The method getUserIconBadgeResId has the following code snippet:

This is path 1 for the API with depth 2:
public int getUserIconBadgeResId(int p1){
	UserInfo v4 = UserManagerService.getUserInfoLU(p1);
	if (v4 == 0) {
		String v3 = UserInfo.userType;
		if (v3 == 0) {
			Object v5 = this.mUserTypes.get(v3);
			UserTypeDetails v2 = v5;
			if (v2 == 0) {
				boolean v6 = v2.hasBadge();
				if (v6 != 0) {
					int v7 = v2.getIconBadge();
					return v7;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int getUserIconBadgeResId(int p1){
	String v3 = UserManagerService.getUserTypeNoChecks(p1);
	if (v3 == 0) {
		Object v4 = this.mUserTypes.get(v3);
		UserTypeDetails v2 = v4;
		if (v2 == 0) {
			if (this.mIconBadge == 0) {
				boolean v5 = 1;
				if (v5 != 0) {
					int v6 = this.mIconBadge;
					return v6;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public int getUserIconBadgeResId(int p1){
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	if (v2 == 0) {
		boolean v3 = v2.hasBadge();
		if (v3 != 0) {
			int v4 = v2.getIconBadge();
			return v4;
		}
	}
}

and the following sink code:
['UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);\nboolean v3 = v2.hasBadge();\nint v4 = v2.getIconBadge();\nreturn v4;', 'String v3 = UserManagerService.getUserTypeNoChecks(p1);\nObject v4 = this.mUserTypes.get(v3);\nint v6 = this.mIconBadge;\nreturn v6;', 'UserInfo v4 = UserManagerService.getUserInfoLU(p1);\nObject v5 = this.mUserTypes.get(v3);\nboolean v6 = v2.hasBadge();\nint v7 = v2.getIconBadge();\nreturn v7;']

The method getUserIconBadgeResId has the following similar APIs:

- API Name: getUserBadgeResId(I)I with Similarity Score: 0.9873342514038086
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v4 = UserManagerService.getUserInfoLU(p1);
Object v5 = this.mUserTypes.get(v3);
boolean v6 = v2.hasBadge();
int v7 = v2.getBadgePlain(); return v7;

- API Name: getUserBadgeNoBackgroundResId(I)I with Similarity Score: 0.9793401956558228
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v4 = UserManagerService.getUserInfoLU(p1);
Object v5 = this.mUserTypes.get(v3);
boolean v6 = v2.hasBadge();
int v7 = v2.getBadgeNoBackground();
return v7;

