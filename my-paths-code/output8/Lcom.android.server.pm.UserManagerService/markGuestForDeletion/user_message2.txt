The method markGuestForDeletion in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean markGuestForDeletion(int p1){
	int v2 = UserHandle.getCallingUserId();
	Bundle v6 = this.mCachedEffectiveUserRestrictions.getRestrictions(v2);
	if (v6 != 0) {
		Bundle v7 = UserManagerService.computeEffectiveUserRestrictionsLR(v2);
		boolean v8 = this.mCachedEffectiveUserRestrictions.updateRestrictions(v2, v7);
		Bundle v5 = v6;
		Bundle v10 = new Bundle(v5);
		if (v5 == 0) {
			Bundle v9 = v10;
			Bundle v3 = v9;
			boolean v12 = v3.getBoolean("no_remove_user", 0);
			if (v12 == 0) {
				long v13 = Binder.clearCallingIdentity();
				Object v14 = this.mUsers.get(p1);
				if (p1 == 0) {
					if (v14 == 0) {
						boolean v15 = this.mRemovingUserIds.get(p1);
						if (v15 == 0) {
							boolean v16 = UserManagerService$UserData.info.isGuest();
							if (v16 != 0) {
								UserInfo.guestToRemove = 1;
								UserInfo.flags = (UserInfo.flags | 64);
								p0.writeUserLP(v14);
								Binder.restoreCallingIdentity(v13);
								return 1;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean markGuestForDeletion(int p1){
	int v2 = UserHandle.getCallingUserId();
	Bundle v5 = UserManagerService.getEffectiveUserRestrictions(v2);
	Bundle v6 = BundleUtils.clone(v5);
	Bundle v3 = v6;
	boolean v7 = v3.getBoolean("no_remove_user", 0);
	if (v7 == 0) {
		long v8 = Binder.clearCallingIdentity();
		Object v9 = this.mUsers.get(p1);
		if (p1 == 0) {
			if (v9 == 0) {
				boolean v10 = this.mRemovingUserIds.get(p1);
				if (v10 == 0) {
					boolean v12 = UserManager.isUserTypeGuest(this.userType);
					boolean v11 = v12;
					if (v11 != 0) {
						UserInfo.guestToRemove = 1;
						UserInfo.flags = (UserInfo.flags | 64);
						AtomicFile v14 = new AtomicFile(v15);
						File v15 = new File(this.mUsersDir,v20);
						StringBuilder v16 = new StringBuilder();
						StringBuilder v18 = v16.append(UserInfo.id);
						StringBuilder v19 = v16.append(".xml");
						String v20 = v16.toString();
						FileOutputStream v23 = v14.startWrite();
						UserManagerService.writeUserLP(v9, v23);
						v14.finishWrite(v23);
						Binder.restoreCallingIdentity(v8);
						return 1;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean markGuestForDeletion(int p1){
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean("no_remove_user", 0);
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		Object v6 = this.mUsers.get(p1);
		if (p1 == 0) {
			if (v6 == 0) {
				boolean v7 = this.mRemovingUserIds.get(p1);
				if (v7 == 0) {
					boolean v8 = UserManagerService$UserData.info.isGuest();
					if (v8 != 0) {
						UserInfo.guestToRemove = 1;
						UserInfo.flags = (UserInfo.flags | 64);
						p0.writeUserLP(v6);
						Binder.restoreCallingIdentity(v5);
						return 1;
					}
				}
			}
		}
	}
}

and the following sink code:
['Bundle v6 = this.mCachedEffectiveUserRestrictions.getRestrictions(v2);\nboolean v8 = this.mCachedEffectiveUserRestrictions.updateRestrictions(v2, v7);\nUserInfo.guestToRemove = 1;\nUserInfo.flags = (UserInfo.flags | 64);\np0.writeUserLP(v14);', 'Bundle v5 = UserManagerService.getEffectiveUserRestrictions(v2);\nboolean v7 = v3.getBoolean("no_remove_user", 0);\nAtomicFile v14 = new AtomicFile(v15);\nUserManagerService.writeUserLP(v9, v23);', 'Bundle v3 = p0.getUserRestrictions(v2);\nboolean v4 = v3.getBoolean("no_remove_user", 0);\np0.writeUserLP(v6);']

The method markGuestForDeletion has the following similar APIs:

- API Name: getUserRestrictions(I)Landroid/os/Bundle; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.84720778465271, Code:
Bundle v3 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
Bundle v4 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
boolean v5 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v4);
Bundle v7 = new Bundle(v2);
return v6;
  - Similarity: 0.7899624705314636, Code:
Bundle v2 = p0.getEffectiveUserRestrictions(p1);
Bundle v3 = BundleUtils.clone(v2);
return v3;
  - Similarity: 0.7633762359619141, Code:
Object v4 = this.mUserRestrictions.get(p1);
Bundle v6 = this.mBaseUserRestrictions.getRestrictions(p1);
RestrictionsSet v9 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
Bundle v12 = BundleUtils.clone(v7);
this.mUserRestrictions.put(p1, v5);
return v21;
  - Access Control Level: SYS_OR_SIG

- API Name: removeUser(I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8129570484161377, Code:
UserInfo v9 = UserManagerService.getUserInfoLU(p1);
Bundle v14 = UserManagerService.getEffectiveUserRestrictions(v11);
Bundle v15 = BundleUtils.clone(v14);
UserManagerService.addRemovingUserIdLocked(p1);
UserManagerService.writeUserLP(v20);
  - Access Control Level: SYS_OR_SIG

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8123708963394165, Code:
Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
boolean v12 = v3.add(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: setUserRestriction(Ljava/lang/String;ZI)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8073122501373291, Code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
Bundle v4 = BundleUtils.clone(v3);
v4.putBoolean(p1, p2);
p0.updateUserRestrictionsInternalLR(v4, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: hasUserRestriction(Ljava/lang/String;I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7971746325492859, Code:
Bundle v4 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
boolean v5 = v4.getBoolean(p1);
  - Similarity: 0.7947136759757996, Code:
Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);
Bundle v20 = v21;
boolean v22 = v20.getBoolean(p1);
  - Access Control Level: SYS_OR_SIG

