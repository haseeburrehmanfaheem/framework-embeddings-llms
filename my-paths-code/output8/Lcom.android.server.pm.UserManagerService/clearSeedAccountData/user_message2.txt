The method clearSeedAccountData has the following code snippet:

This is path 1 for the API with depth 1:
public void clearSeedAccountData(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserManagerService$UserData v2 = 0;
				if (v2 != 0) {
					this.seedAccountName = 0;
					this.seedAccountType = 0;
					this.seedAccountOptions = 0;
					this.persistSeedData = 0;
					AtomicFile v7 = new AtomicFile(v8);
					File v8 = new File(this.mUsersDir,v13);
					StringBuilder v9 = new StringBuilder();
					StringBuilder v11 = v9.append(UserInfo.id);
					StringBuilder v12 = v9.append(".xml");
					String v13 = v9.toString();
					FileOutputStream v16 = v7.startWrite();
					UserManagerService.writeUserLP(v2, v16);
					v7.finishWrite(v16);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void clearSeedAccountData(int p1){
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	if (v2 != 0) {
		v2.clearSeedAccountData();
		p0.writeUserLP(v2);
		return;
	}
}


This is path 3 for the API with depth 1:
public void clearSeedAccountData(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserManagerService$UserData v2 = v3;
				if (v2 != 0) {
					this.seedAccountName = 0;
					this.seedAccountType = 0;
					this.seedAccountOptions = 0;
					this.persistSeedData = 0;
					AtomicFile v7 = new AtomicFile(v8);
					File v8 = new File(this.mUsersDir,v13);
					StringBuilder v9 = new StringBuilder();
					StringBuilder v11 = v9.append(UserInfo.id);
					StringBuilder v12 = v9.append(".xml");
					String v13 = v9.toString();
					FileOutputStream v16 = v7.startWrite();
					UserManagerService.writeUserLP(v2, v16);
					v7.finishWrite(v16);
					return;
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mUsers.get(p1);\nif (v3 == 0) {\nif (UserInfo.partial == 0) {\nboolean v4 = this.mRemovingUserIds.get(p1);\nif (v4 != 0) {\nthis.seedAccountName = 0;\nthis.seedAccountType = 0;\nthis.seedAccountOptions = 0;\nthis.persistSeedData = 0;\nAtomicFile v7 = new AtomicFile(v8);\nFile v8 = new File(this.mUsersDir,v13);\nStringBuilder v9 = new StringBuilder();\nStringBuilder v11 = v9.append(UserInfo.id);\nStringBuilder v12 = v9.append(".xml");\nString v13 = v9.toString();\nFileOutputStream v16 = v7.startWrite();\nUserManagerService.writeUserLP(v2, v16);\nv7.finishWrite(v16);', 'UserManagerService$UserData v2 = p0.getUserDataLU(p1);\nif (v2 != 0) {\nv2.clearSeedAccountData();\np0.writeUserLP(v2);']

The method clearSeedAccountData has the following similar APIs:

- API Name: setUserEphemeral(IZ)Z with Similarity Score: 0.8226702213287354
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUsers.get(p1);
if ((UserInfo.flags & 256) == 0) {
if ((UserInfo.flags & 8192) == 0) {
UserInfo.flags = (UserInfo.flags | 256);
AtomicFile v4 = new AtomicFile(v5);
FileOutputStream v13 = v4.startWrite();
UserManagerService.writeUserLP(v2, v13);
v4.finishWrite(v13);

- API Name: setUserAccount(ILjava/lang/String;)V with Similarity Score: 0.8205603957176208
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUsers.get(p1);
boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
UserManagerService$UserData.account = p2;
AtomicFile v5 = new AtomicFile(v6);
StringBuilder v7 = new StringBuilder();
StringBuilder v9 = v7.append(UserInfo.id);
StringBuilder v10 = v7.append(".xml");
String v11 = v7.toString();
FileOutputStream v14 = v5.startWrite();
UserManagerService.writeUserLP(v2, v14);
v5.finishWrite(v14);

