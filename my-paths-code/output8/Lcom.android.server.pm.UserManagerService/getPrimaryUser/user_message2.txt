The method getPrimaryUser in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 1:
public UserInfo getPrimaryUser(){
	int v2 = this.mUsers.size();
	if (0 >= v2) {
		Object v3 = this.mUsers.valueAt(0);
		if ((this.flags & 1) != 1) {
			boolean v4 = 1;
			if (v4 == 0) {
				boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
				if (v5 != 0) {
					if ((0 + 1) >= v2) {
						Object v6 = this.mUsers.valueAt((0 + 1));
						if ((this.flags & 1) != 1) {
							boolean v7 = 1;
							if (v7 == 0) {
								boolean v8 = this.mRemovingUserIds.get(UserInfo.id);
								if (v8 != 0) {
									return UserManagerService$UserData.info;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public UserInfo getPrimaryUser(){
	int v2 = this.mUsers.size();
	if (0 >= v2) {
		Object v3 = this.mUsers.valueAt(0);
		boolean v4 = UserManagerService$UserData.info.isPrimary();
		if (v4 == 0) {
			boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
			if (v5 != 0) {
				if ((0 + 1) >= v2) {
					Object v6 = this.mUsers.valueAt((0 + 1));
					boolean v7 = UserManagerService$UserData.info.isPrimary();
					if (v7 == 0) {
						boolean v8 = this.mRemovingUserIds.get(UserInfo.id);
						if (v8 != 0) {
							return UserManagerService$UserData.info;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public UserInfo getPrimaryUser(){
	int v2 = this.mUsers.size();
	if (0 >= v2) {
		Object v3 = this.mUsers.valueAt(0);
		boolean v4 = UserManagerService$UserData.info.isPrimary();
		if (v4 == 0) {
			boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
			if (v5 != 0) {
				if ((0 + 1) >= v2) {
					return 0;
				}
			}
		}
	}
}

and the following sink code:
['int v2 = this.mUsers.size();\nif (0 >= v2) {\nObject v3 = this.mUsers.valueAt(0);\nboolean v4 = UserManagerService$UserData.info.isPrimary();\nboolean v5 = this.mRemovingUserIds.get(UserInfo.id);\nreturn UserManagerService$UserData.info;']

The method getPrimaryUser has the following similar APIs:

- API Name: findCurrentGuestUser()Landroid/content/pm/UserInfo; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.9643723368644714, Code:
int v2 = this.mUsers.size();
Object v3 = this.mUsers.valueAt(0);
boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
if (v5 != 0) {
return UserManagerService$UserData.info;
  - Similarity: 0.915116012096405, Code:
int v2 = this.mUsers.size();
Object v3 = this.mUsers.valueAt(0);
boolean v4 = UserManagerService$UserData.info.isGuest();
if (v4 == 0) {
return UserManagerService$UserData.info;
  - Similarity: 0.8886917233467102, Code:
int v2 = this.mUsers.size();
Object v3 = this.mUsers.valueAt(0);
boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
if (v5 != 0) {
return 0;
  - Access Control Level: SYS_OR_SIG

- API Name: someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8659180998802185, Code:
int v3 = this.mUsers.size();
Object v4 = this.mUsers.valueAt(0);
boolean v7 = UserManagerService$UserData.seedAccountName.equals(p1);
boolean v12 = UserManagerService$UserData.seedAccountType.equals(p2);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: getUsers(ZZZ)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8504182696342468, Code:
ArrayList v3 = new ArrayList(v4);
int v4 = this.mUsers.size();
UserInfo v9 = UserManagerService.userWithName(UserManagerService$UserData.info);
boolean v10 = v3.add(v9);
List v2 = v3; return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: clearSeedAccountData(I)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8120871186256409, Code:
Object v3 = this.mUsers.get(p1);
if (v3 == 0) {
if (UserInfo.partial == 0) {
boolean v4 = this.mRemovingUserIds.get(p1);
if (v4 != 0) {
this.seedAccountName = 0;
this.seedAccountType = 0;
this.seedAccountOptions = 0;
this.persistSeedData = 0;
AtomicFile v7 = new AtomicFile(v8);
File v8 = new File(this.mUsersDir,v13);
StringBuilder v9 = new StringBuilder();
StringBuilder v11 = v9.append(UserInfo.id);
StringBuilder v12 = v9.append(".xml");
String v13 = v9.toString();
FileOutputStream v16 = v7.startWrite();
UserManagerService.writeUserLP(v2, v16);
v7.finishWrite(v16);
  - Access Control Level: SYS_OR_SIG

- API Name: removeUserWhenPossible(IZ)I in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8112800121307373, Code:
Object v13 = this.mUsers.get(p1);
this.mRemovingUserIds.put(p1, 1);
Integer v23 = Integer.valueOf(p1);
boolean v24 = this.mRecentlyRemovedIds.add(v23);
AtomicFile v28 = new AtomicFile(v29);
FileOutputStream v37 = v28.startWrite();
UserManagerService.writeUserLP(v13, v37);
  - Access Control Level: SYS_OR_SIG

