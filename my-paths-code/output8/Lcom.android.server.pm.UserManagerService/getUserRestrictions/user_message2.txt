The method getUserRestrictions has the following code snippet:

This is path 1 for the API with depth 2:
public Bundle getUserRestrictions(int p1){
	Object v4 = this.mUserRestrictions.get(p1);
	Bundle v3 = v4;
	if (v3 != 0) {
		Bundle v6 = this.mBaseUserRestrictions.getRestrictions(p1);
		Bundle v7 = UserRestrictionsUtils.nonNull(v6);
		Bundle v8 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
		RestrictionsSet v9 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
		boolean v10 = BundleUtils.isEmpty(v8);
		if (v10 == 0) {
			boolean v11 = v9.isEmpty();
			if (v11 == 0) {
				Bundle v12 = BundleUtils.clone(v7);
				UserRestrictionsUtils.merge(v12, v8);
				Bundle v14 = v9.mergeAll();
				UserRestrictionsUtils.merge(v12, v14);
				Bundle v5 = v12;
				Object v17 = this.mUserRestrictions.get(p1);
				boolean v18 = UserRestrictionsUtils.areEqual(v17, v5);
				if ((v18 ^ 1) != 0) {
					boolean v19 = BundleUtils.isEmpty(v5);
					if (v19 != 0) {
						this.mUserRestrictions.put(p1, v5);
						boolean v16 = 1;
						Bundle v2 = v3;
						Bundle v21 = BundleUtils.clone(v2);
						return v21;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public Bundle getUserRestrictions(int p1){
	Bundle v3 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	if (v3 != 0) {
		Bundle v4 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
		boolean v5 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v4);
		Bundle v2 = v3;
		Bundle v7 = new Bundle(v2);
		if (v2 == 0) {
			Bundle v6 = v7;
			return v6;
		}
	}
}


This is path 3 for the API with depth 0:
public Bundle getUserRestrictions(int p1){
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}

and the following sink code:
['Object v4 = this.mUserRestrictions.get(p1);\nBundle v6 = this.mBaseUserRestrictions.getRestrictions(p1);\nRestrictionsSet v9 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);\nBundle v12 = BundleUtils.clone(v7);\nthis.mUserRestrictions.put(p1, v5);\nreturn v21;', 'Bundle v3 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);\nBundle v4 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);\nboolean v5 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v4);\nBundle v7 = new Bundle(v2);\nreturn v6;', 'Bundle v2 = p0.getEffectiveUserRestrictions(p1);\nBundle v3 = BundleUtils.clone(v2);\nreturn v3;']

The method getUserRestrictions has the following similar APIs:

- API Name: hasUserRestriction(Ljava/lang/String;I)Z with Similarity Score: 0.8931804299354553
  - Access Control Level: SYS_OR_SIG and the following code:
Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);
Bundle v20 = v21;
boolean v22 = v20.getBoolean(p1);

- API Name: hasUserRestriction(Ljava/lang/String;I)Z with Similarity Score: 0.8683006763458252
  - Access Control Level: SYS_OR_SIG and the following code:
Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);
Bundle v20 = v21;
boolean v22 = v20.getBoolean(p1);

