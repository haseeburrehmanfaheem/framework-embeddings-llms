This is path 1 for the API with depth 2:
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	int v4 = UserManagerService.scanNextAvailableIdLocked();
	if (v4 < 0) {
		int v3 = v4;
		StringBuilder v7 = new StringBuilder();
		StringBuilder v9 = v7.append("createUser-");
		StringBuilder v10 = v7.append(p3);
		String v11 = v7.toString();
		TimingsTraceAndSlog.traceBegin(v11);
		long v16 = UserManagerService.logUserJourneyBegin(4, v3, p2, p3);
		long v15 = v16;
		Object v18 = this.mUserTypes.get(p2);
		if (v18 != 0) {
			String v19 = p2.intern();
			int v20 = v18.getDefaultUserInfoFlags();
			boolean v21 = UserManagerService.checkUserTypeConsistency((p3 | v20));
			if (v21 != 0) {
				if (((p3 | v20) & 2048) == 0) {
					boolean v22 = v18.isEnabled();
					if (v22 != 0) {
						StringBuilder v23 = new StringBuilder();
						StringBuilder v25 = v23.append("Cannot add a user of disabled type ");
						StringBuilder v26 = v23.append(v19);
						StringBuilder v27 = v23.append(".");
						String v28 = v23.toString();
						UserManagerService.throwCheckedUserOperationException(v28, 6);
						if (this.mForceEphemeralUsers == 0) {
							if (0 != 0) {
								if (p4 >= 0) {
									boolean v30 = UserManagerService.isUserTypeEligibleForPreCreation(v18);
									if (v30 == 0) {
										UserInfo v31 = UserManagerService.convertPreCreatedUserIfPossible(v19, (p3 | v20), p1, 0);
										if (v31 == 0) {
											UserInfo v17 = v31;
											if (v17 == 0) {
												if (0 == 0) {
													FrameworkStatsLog.write(265, v15, v3, 3, 2);
													v5.traceEnd();
													UserInfo v2 = v17;
													return v2;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	int v3 = UserManagerService.getNextAvailableId();
	long v12 = UserManagerService.logUserCreateJourneyBegin(v3, p2, p3);
	UserInfo v13 = UserManagerService.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, 0, p5, v4, 0);
	if (v13 == 0) {
		UserManagerService.logUserCreateJourneyFinish(v12, v3, 0);
		v4.traceEnd();
		UserInfo v2 = v13;
		return v2;
	}
}


This is path 3 for the API with depth 0:
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
