This is path 1 for the API with depth 2:
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	if (v1 == 0) {
		int v2 = (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
		if (v1 != 0) {
			if ((this.mBaseType & 4096) == 0) {
				boolean v5 = 1;
				if (v5 != 0) {
					String v6 = this.mName;
					boolean v7 = v6.equals("android.os.usertype.full.RESTRICTED");
					if (v7 != 0) {
						boolean v4 = 0;
						StringBuilder v8 = new StringBuilder();
						StringBuilder v10 = v8.append("cannot pre-create user of type ");
						StringBuilder v11 = v8.append(p1);
						String v12 = v8.toString();
						Preconditions.checkArgument(v4, v12);
						int v22 = UserManagerService.scanNextAvailableIdLocked();
						if (v22 < 0) {
							int v21 = v22;
							StringBuilder v25 = new StringBuilder();
							StringBuilder v27 = v25.append("createUser-");
							StringBuilder v28 = v25.append(v2);
							String v29 = v25.toString();
							TimingsTraceAndSlog.traceBegin(v29);
							long v34 = UserManagerService.logUserJourneyBegin(4, v21, p1, v2);
							long v33 = v34;
							Object v36 = this.mUserTypes.get(p1);
							if (v36 != 0) {
								String v37 = p1.intern();
								int v38 = v36.getDefaultUserInfoFlags();
								boolean v39 = UserManagerService.checkUserTypeConsistency((v2 | v38));
								if (v39 != 0) {
									if (((v2 | v38) & 2048) == 0) {
										boolean v40 = v36.isEnabled();
										if (v40 != 0) {
											StringBuilder v41 = new StringBuilder();
											StringBuilder v43 = v41.append("Cannot add a user of disabled type ");
											StringBuilder v44 = v41.append(v37);
											StringBuilder v45 = v41.append(".");
											String v46 = v41.toString();
											UserManagerService.throwCheckedUserOperationException(v46, 6);
											if (this.mForceEphemeralUsers == 0) {
												if (1 != 0) {
													if (-10000 >= 0) {
														boolean v48 = UserManagerService.isUserTypeEligibleForPreCreation(v36);
														if (v48 == 0) {
															UserInfo v49 = UserManagerService.convertPreCreatedUserIfPossible(v37, (v2 | v38), 0, 0);
															if (v49 == 0) {
																UserInfo v35 = v49;
																if (v35 == 0) {
																	if (0 == 0) {
																		FrameworkStatsLog.write(265, v33, v21, 3, 2);
																		v23.traceEnd();
																		UserInfo v20 = v35;
																		return v20;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	if (v1 == 0) {
		int v2 = (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
		if (v1 != 0) {
			boolean v4 = 0;
			StringBuilder v5 = new StringBuilder();
			StringBuilder v7 = v5.append("cannot pre-create user of type ");
			StringBuilder v8 = v5.append(p1);
			String v9 = v5.toString();
			Preconditions.checkArgument(v4, v9);
			int v18 = UserManagerService.getNextAvailableId();
			long v27 = UserManagerService.logUserCreateJourneyBegin(v18, p1, v2);
			UserInfo v28 = UserManagerService.createUserInternalUncheckedNoTracing(0, p1, v2, -10000, 1, 0, v19, 0);
			if (v28 == 0) {
				UserManagerService.logUserCreateJourneyFinish(v27, v18, 0);
				v19.traceEnd();
				UserInfo v17 = v28;
				return v17;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	if (v1 == 0) {
		int v2 = v1.getDefaultUserInfoFlags();
		boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
		StringBuilder v5 = new StringBuilder();
		StringBuilder v7 = v5.append("cannot pre-create user of type ");
		StringBuilder v8 = v5.append(p1);
		String v9 = v5.toString();
		Preconditions.checkArgument(v4, v9);
		UserInfo v17 = p0.createUserInternalUnchecked(0, p1, v2, -10000, 1, 0, 0);
		return v17;
	}
}
