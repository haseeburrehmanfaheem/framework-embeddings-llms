The method getProfiles has the following code snippet:

This is path 1 for the API with depth 2:
public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("getting profiles related to user ");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	long v8 = Binder.clearCallingIdentity();
	UserInfo v11 = UserManagerService.getUserInfoLU(p1);
	IntArray v12 = new IntArray(v13);
	int v13 = this.mUsers.size();
	if (v11 != 0) {
		int v15 = this.mUsers.size();
		if (0 >= v15) {
			Object v16 = this.mUsers.valueAt(0);
			boolean v17 = UserManagerService.isProfileOf(v11, UserManagerService$UserData.info);
			if (v17 != 0) {
				if (p2 == 0) {
					boolean v18 = UserManagerService$UserData.info.isEnabled();
					if (v18 != 0) {
						boolean v19 = this.mRemovingUserIds.get(UserInfo.id);
						if (v19 == 0) {
							if (UserInfo.partial == 0) {
								if (0 == 0) {
									boolean v20 = 0.equals(UserInfo.userType);
									if (v20 != 0) {
										if ((0 + 1) >= v15) {
											IntArray v10 = v12;
											ArrayList v21 = new ArrayList(v22);
											int v22 = v10.size();
											int v24 = v10.size();
											if (0 >= v24) {
												int v25 = v10.get(0);
												Object v26 = this.mUsers.get(v25);
												if (1 != 0) {
													if (UserManagerService$UserData.info == 0) {
														if (UserInfo.name != 0) {
															if (UserInfo.id != 0) {
																boolean v28 = UserManagerService$UserData.info.isGuest();
																if (v28 == 0) {
																	String v29 = UserManagerService.getGuestName();
																	if (getOwnerName() == 0) {
																		UserInfo v30 = new UserInfo(UserManagerService$UserData.info);
																		UserInfo.name = getOwnerName();
																		UserInfo v27 = v30;
																		boolean v32 = v21.add(new UserInfo());
																		int v33 = v10.size();
																		if ((0 + 1) >= v33) {
																			List v9 = v21;
																			Binder.restoreCallingIdentity(v8);
																			return v9;
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("getting profiles related to user ");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	long v8 = Binder.clearCallingIdentity();
	IntArray v10 = UserManagerService.getProfileIdsLU(p1, 0, p2);
	ArrayList v11 = new ArrayList(v12);
	int v12 = v10.size();
	int v14 = v10.size();
	if (0 >= v14) {
		int v15 = v10.get(0);
		Object v16 = this.mUsers.get(v15);
		if (1 != 0) {
			UserInfo v17 = new UserInfo(UserManagerService$UserData.info);
			UserInfo.name = 0;
			UserInfo.iconPath = 0;
			boolean v19 = v11.add(v17);
			int v20 = v10.size();
			if ((0 + 1) >= v20) {
				List v9 = v11;
				Binder.restoreCallingIdentity(v8);
				return v9;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getProfiles(int p1, boolean p2){
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("getting profiles related to user ");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	long v8 = Binder.clearCallingIdentity();
	List v9 = p0.getProfilesLU(p1, 0, p2, 1);
	Binder.restoreCallingIdentity(v8);
	return v9;
}

and the following sink code:
['UserInfo v30 = new UserInfo(UserManagerService$UserData.info);\nUserInfo.name = getOwnerName();\nboolean v32 = v21.add(new UserInfo());', 'IntArray v10 = UserManagerService.getProfileIdsLU(p1, 0, p2);\nUserInfo v17 = new UserInfo(UserManagerService$UserData.info);\nboolean v19 = v11.add(v17);', 'List v9 = p0.getProfilesLU(p1, 0, p2, 1);\nreturn v9;']

The method getProfiles has the following similar APIs:

- API Name: getProfileIds(IZ)[I with Similarity Score: 0.8860398530960083
  - Access Control Level: SYS_OR_SIG and the following code:
IntArray v10 = UserManagerService.getProfileIdsLU(p1, 0, p2);
[I v11 = v10.toArray();
return v11;

- API Name: requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z with Similarity Score: 0.802346408367157
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v25 = UserManagerService.getUserInfoLU(p3);
UserInfo v26 = UserManagerService.getProfileParentLU(p3);
boolean v27 = v25.isManagedProfile();
boolean v28 = v25.isQuietModeEnabled();
UserInfo.flags = (UserInfo.flags ^ 128);

