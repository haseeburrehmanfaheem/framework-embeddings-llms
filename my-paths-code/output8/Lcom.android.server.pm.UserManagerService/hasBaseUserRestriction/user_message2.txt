The method hasBaseUserRestriction in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if (0 == 0) {
			if (0.length <= 0) {
				if (0.length <= 1) {
					if (p1 == 0) {
						if (v18 == 0) {
							if (0 != 0) {
								IPackageManager v19 = AppGlobals.getPackageManager();
								if (0 >= 0.length) {
									int v20 = UserHandle.getUserId(v4);
									ApplicationInfo v21 = v19.getApplicationInfo(0[0], 794624, v20);
									if ((0 + 1) >= 0.length) {
										int v22 = UserHandle.getUserId(v4);
										ApplicationInfo v23 = v19.getApplicationInfo(0[(0 + 1)], 794624, v22);
										if (v23 == 0) {
											boolean v24 = v23.isSystemApp();
											if (v24 == 0) {
												boolean v17 = 1;
												if (v17 == 0) {
													boolean v2 = 0;
													if (v2 != 0) {
														Bundle v27 = this.mBaseUserRestrictions.getRestrictions(p2);
														if (v27 == 0) {
															boolean v28 = v27.getBoolean(p1, 0);
															if (v28 == 0) {
																return 0;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v5 = AppGlobals.getPackageManager();
		String v6 = v5.getPackagesForUid(v4);
		if (0 == 0) {
			if (0.length <= 0) {
				if (0.length <= 1) {
					if (p1 == 0) {
						boolean v16 = UserRestrictionsUtils.isSystemApp(v4, 0);
						if (v16 == 0) {
							boolean v2 = 0;
							if (v2 != 0) {
								Object v20 = this.mUserRestrictions.get(p2);
								Bundle v19 = v20;
								if (v19 == 0) {
									boolean v21 = v19.getBoolean(p1, 0);
									if (v21 == 0) {
										return 0;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v2 != 0) {
		Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
		if (v3 == 0) {
			boolean v4 = v3.getBoolean(p1, 0);
			if (v4 == 0) {
				return 0;
			}
		}
	}
}

and the following sink code:
['boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);\nBundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);\nboolean v4 = v3.getBoolean(p1, 0);']

The method hasBaseUserRestriction has the following similar APIs:

- API Name: setUserRestriction(Ljava/lang/String;ZI)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.9443197846412659, Code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
Bundle v4 = BundleUtils.clone(v3);
v4.putBoolean(p1, p2);
p0.updateUserRestrictionsInternalLR(v4, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.9300297498703003, Code:
boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
List v2 = p0.getUsers(1);
Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
boolean v6 = v5.getBoolean(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.843152642250061, Code:
Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
boolean v12 = v3.add(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: hasUserRestriction(Ljava/lang/String;I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8317580223083496, Code:
Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);
Bundle v20 = v21;
boolean v22 = v20.getBoolean(p1);
  - Similarity: 0.8157753944396973, Code:
Bundle v4 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
boolean v5 = v4.getBoolean(p1);
  - Similarity: 0.7883832454681396, Code:
boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: getUserRestrictions(I)Landroid/os/Bundle; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8202457427978516, Code:
Bundle v3 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
Bundle v4 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
boolean v5 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v4);
Bundle v7 = new Bundle(v2);
return v6;
  - Similarity: 0.8178357481956482, Code:
Bundle v2 = p0.getEffectiveUserRestrictions(p1);
Bundle v3 = BundleUtils.clone(v2);
return v3;
  - Similarity: 0.7986070513725281, Code:
Object v4 = this.mUserRestrictions.get(p1);
Bundle v6 = this.mBaseUserRestrictions.getRestrictions(p1);
RestrictionsSet v9 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
Bundle v12 = BundleUtils.clone(v7);
this.mUserRestrictions.put(p1, v5);
return v21;
  - Access Control Level: SYS_OR_SIG

