The method setUserEphemeral in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 1:
public boolean setUserEphemeral(int p1, boolean p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		if ((UserInfo.flags & 256) == 0) {
			if ((UserInfo.flags & 8192) == 0) {
				if (1 == 0) {
					if (p2 != 0) {
						if (1 == p2) {
							if (p2 == 0) {
								UserInfo.flags = (UserInfo.flags | 256);
								if (v2 == 0) {
									AtomicFile v4 = new AtomicFile(v5);
									File v5 = new File(this.mUsersDir,v10);
									StringBuilder v6 = new StringBuilder();
									StringBuilder v8 = v6.append(UserInfo.id);
									StringBuilder v9 = v6.append(".xml");
									String v10 = v6.toString();
									FileOutputStream v13 = v4.startWrite();
									UserManagerService.writeUserLP(v2, v13);
									v4.finishWrite(v13);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public boolean setUserEphemeral(int p1, boolean p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		if ((UserInfo.flags & 256) == 0) {
			if ((UserInfo.flags & 8192) == 0) {
				if (1 == 0) {
					if (p2 != 0) {
						if (1 == p2) {
							if (p2 == 0) {
								UserInfo.flags = (UserInfo.flags | 256);
								if (v2 == 0) {
									p0.writeUserLP(v2);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean setUserEphemeral(int p1, boolean p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		if ((UserInfo.flags & 256) == 0) {
			if ((UserInfo.flags & 8192) == 0) {
				if (1 == 0) {
					if (p2 != 0) {
						if (1 == p2) {
							if (p2 == 0) {
								UserInfo.flags = (UserInfo.flags & -257);
								if (v2 == 0) {
									p0.writeUserLP(v2);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nUserInfo.flags = (UserInfo.flags | 256);\nAtomicFile v4 = new AtomicFile(v5);\nFileOutputStream v13 = v4.startWrite();\nUserManagerService.writeUserLP(v2, v13);\nv4.finishWrite(v13);', 'Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nUserInfo.flags = (UserInfo.flags | 256);\np0.writeUserLP(v2);', 'Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nUserInfo.flags = (UserInfo.flags & -257);\np0.writeUserLP(v2);']

The method setUserEphemeral has the following similar APIs:

- API Name: setUserEnabled(I)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.9026153087615967, Code:
Object v3 = this.mUsers.get(p1);
if (v4 != 0) {
UserInfo.flags = (UserInfo.flags ^ 64);
UserManagerService$UserData v6 = v7;
AtomicFile v10 = new AtomicFile(v11);
FileOutputStream v19 = v10.startWrite();
UserManagerService.writeUserLP(v6, v19);
  - Similarity: 0.8268687129020691, Code:
UserInfo v2 = p0.getUserInfoLU(p1);
if (v3 != 0) {
UserInfo.flags = (UserInfo.flags ^ 64);
UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
p0.writeUserLP(v4);
  - Access Control Level: SYS_OR_SIG

- API Name: removeUserWhenPossible(IZ)I in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8605207800865173, Code:
boolean v10 = p0.removeUserUnchecked(p1);
UserInfo.flags = (UserInfo.flags | 256);
p0.writeUserLP(v7);
  - Access Control Level: SYS_OR_SIG

- API Name: setUserAccount(ILjava/lang/String;)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8470471501350403, Code:
Object v2 = this.mUsers.get(p1);
boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
UserManagerService$UserData.account = p2;
p0.writeUserLP(v2);
  - Similarity: 0.8204749226570129, Code:
Object v2 = this.mUsers.get(p1);
boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
UserManagerService$UserData.account = p2;
AtomicFile v5 = new AtomicFile(v6);
StringBuilder v7 = new StringBuilder();
StringBuilder v9 = v7.append(UserInfo.id);
StringBuilder v10 = v7.append(".xml");
String v11 = v7.toString();
FileOutputStream v14 = v5.startWrite();
UserManagerService.writeUserLP(v2, v14);
v5.finishWrite(v14);
  - Access Control Level: SYS_OR_SIG

- API Name: setUserAdmin(I)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8309622406959534, Code:
UserInfo v2 = p0.getUserInfoLU(p1);
boolean v3 = v2.isAdmin();
if (v3 == 0) {
UserInfo.flags = (UserInfo.flags ^ 2);
UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
p0.writeUserLP(v4);
  - Access Control Level: SYS_OR_SIG

- API Name: clearSeedAccountData(I)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8226703405380249, Code:
Object v3 = this.mUsers.get(p1);
if (v3 == 0) {
if (UserInfo.partial == 0) {
boolean v4 = this.mRemovingUserIds.get(p1);
if (v4 != 0) {
this.seedAccountName = 0;
this.seedAccountType = 0;
this.seedAccountOptions = 0;
this.persistSeedData = 0;
AtomicFile v7 = new AtomicFile(v8);
File v8 = new File(this.mUsersDir,v13);
StringBuilder v9 = new StringBuilder();
StringBuilder v11 = v9.append(UserInfo.id);
StringBuilder v12 = v9.append(".xml");
String v13 = v9.toString();
FileOutputStream v16 = v7.startWrite();
UserManagerService.writeUserLP(v2, v16);
v7.finishWrite(v16);
  - Access Control Level: SYS_OR_SIG

