The method getApplicationRestrictionsForUser has the following code snippet:

This is path 1 for the API with depth 2:
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	if (v4 != 0) {
		StringBuilder v5 = new StringBuilder();
		StringBuilder v7 = v5.append("get application restrictions for other user/app ");
		StringBuilder v8 = v5.append(p1);
		String v9 = v5.toString();
		AtomicFile v14 = new AtomicFile(v15);
		File v15 = new File(v16,v17);
		File v16 = Environment.getUserSystemDirectory(p2);
		StringBuilder v18 = new StringBuilder();
		StringBuilder v20 = v18.append("res_");
		StringBuilder v21 = v18.append(p1);
		StringBuilder v22 = v18.append(".xml");
		String v23 = v18.toString();
		String v17 = v23;
		Bundle v27 = new Bundle();
		ArrayList v29 = new ArrayList();
		File v31 = v14.getBaseFile();
		boolean v32 = v31.exists();
		if (v32 != 0) {
			Bundle v26 = v27;
			Bundle v13 = v26;
			return v13;
		}
	}
}


This is path 2 for the API with depth 1:
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	if (v4 != 0) {
		StringBuilder v5 = new StringBuilder();
		StringBuilder v7 = v5.append("get application restrictions for other user/app ");
		StringBuilder v8 = v5.append(p1);
		String v9 = v5.toString();
		AtomicFile v14 = new AtomicFile(v15);
		File v15 = new File(v16,v17);
		File v16 = Environment.getUserSystemDirectory(p2);
		String v17 = UserManagerService.packageToRestrictionsFileName(p1);
		Bundle v20 = UserManagerService.readApplicationRestrictionsLAr(v14);
		Bundle v13 = v20;
		return v13;
	}
}


This is path 3 for the API with depth 0:
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	if (v4 != 0) {
		StringBuilder v5 = new StringBuilder();
		StringBuilder v7 = v5.append("get application restrictions for other user/app ");
		StringBuilder v8 = v5.append(p1);
		String v9 = v5.toString();
		UserManagerService.checkSystemOrRoot(v9);
		Bundle v11 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
		return v11;
	}
}

and the following sink code:
['Bundle v20 = UserManagerService.readApplicationRestrictionsLAr(v14);\nBundle v13 = v20;\nreturn v13;', 'Bundle v11 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);\nreturn v11;']

The method getApplicationRestrictionsForUser has the following similar APIs:

- API Name: getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle; with Similarity Score: 0.8655306100845337
  - Access Control Level: SYS_OR_SIG and the following code:
Bundle v1 = this.mUm.getApplicationRestrictions(p1);
return v1;

- API Name: getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle; with Similarity Score: 0.8614147901535034
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = UserHandle.getCallingUserId();
UserManagerService.checkSystemOrRoot(v11);
Bundle v13 = UserManagerService.readApplicationRestrictionsLAr(p1, v1);
return v2;

