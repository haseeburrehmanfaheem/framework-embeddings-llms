The method getApplicationRestrictionsForUser in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	if (v4 != 0) {
		StringBuilder v5 = new StringBuilder();
		StringBuilder v7 = v5.append("get application restrictions for other user/app ");
		StringBuilder v8 = v5.append(p1);
		String v9 = v5.toString();
		AtomicFile v14 = new AtomicFile(v15);
		File v15 = new File(v16,v17);
		File v16 = Environment.getUserSystemDirectory(p2);
		StringBuilder v18 = new StringBuilder();
		StringBuilder v20 = v18.append("res_");
		StringBuilder v21 = v18.append(p1);
		StringBuilder v22 = v18.append(".xml");
		String v23 = v18.toString();
		String v17 = v23;
		Bundle v27 = new Bundle();
		ArrayList v29 = new ArrayList();
		File v31 = v14.getBaseFile();
		boolean v32 = v31.exists();
		if (v32 != 0) {
			Bundle v26 = v27;
			Bundle v13 = v26;
			return v13;
		}
	}
}


This is path 2 for the API with depth 1:
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	if (v4 != 0) {
		StringBuilder v5 = new StringBuilder();
		StringBuilder v7 = v5.append("get application restrictions for other user/app ");
		StringBuilder v8 = v5.append(p1);
		String v9 = v5.toString();
		AtomicFile v14 = new AtomicFile(v15);
		File v15 = new File(v16,v17);
		File v16 = Environment.getUserSystemDirectory(p2);
		String v17 = UserManagerService.packageToRestrictionsFileName(p1);
		Bundle v20 = UserManagerService.readApplicationRestrictionsLAr(v14);
		Bundle v13 = v20;
		return v13;
	}
}


This is path 3 for the API with depth 0:
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	if (v4 != 0) {
		StringBuilder v5 = new StringBuilder();
		StringBuilder v7 = v5.append("get application restrictions for other user/app ");
		StringBuilder v8 = v5.append(p1);
		String v9 = v5.toString();
		UserManagerService.checkSystemOrRoot(v9);
		Bundle v11 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
		return v11;
	}
}

and the following sink code:
['Bundle v20 = UserManagerService.readApplicationRestrictionsLAr(v14);\nBundle v13 = v20;\nreturn v13;', 'Bundle v11 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);\nreturn v11;']

The method getApplicationRestrictionsForUser has the following similar APIs:

- API Name: getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8655304908752441, Code:
Bundle v1 = this.mUm.getApplicationRestrictions(p1);
return v1;
  - Similarity: 0.8614147901535034, Code:
int v1 = UserHandle.getCallingUserId();
UserManagerService.checkSystemOrRoot(v11);
Bundle v13 = UserManagerService.readApplicationRestrictionsLAr(p1, v1);
return v2;
  - Similarity: 0.8153516054153442, Code:
int v1 = UserHandle.getCallingUserId();
File v18 = Environment.getUserSystemDirectory(v1);
String v19 = UserManagerService.packageToRestrictionsFileName(p1);
AtomicFile v16 = new AtomicFile(v17);
Bundle v22 = UserManagerService.readApplicationRestrictionsLAr(v16);
return v2;
  - Similarity: 0.7997128367424011, Code:
int v1 = UserHandle.getCallingUserId();
Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7927237749099731, Code:
Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
boolean v12 = v3.add(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: getUserRestrictions(I)Landroid/os/Bundle; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7906876802444458, Code:
Bundle v2 = p0.getEffectiveUserRestrictions(p1);
Bundle v3 = BundleUtils.clone(v2);
return v3;
  - Similarity: 0.7891820073127747, Code:
Bundle v3 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
Bundle v4 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
boolean v5 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v4);
Bundle v7 = new Bundle(v2);
return v6;
  - Access Control Level: SYS_OR_SIG

- API Name: hasUserRestriction(Ljava/lang/String;I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.78241366147995, Code:
Bundle v4 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
boolean v5 = v4.getBoolean(p1);
  - Similarity: 0.7761494517326355, Code:
Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);
Bundle v20 = v21;
boolean v22 = v20.getBoolean(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: setUserRestriction(Ljava/lang/String;ZI)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7652908563613892, Code:
int v4 = Binder.getCallingUid();
IPackageManager v5 = AppGlobals.getPackageManager();
String v6 = v5.getPackagesForUid(v4);
boolean v16 = UserRestrictionsUtils.isSystemApp(v4, 0);
Object v20 = this.mUserRestrictions.get(p3);
Bundle v19 = v20;
Bundle v22 = new Bundle(v19);
v21.putBoolean(p1, p2);
  - Access Control Level: SYS_OR_SIG

