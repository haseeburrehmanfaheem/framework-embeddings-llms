The method setUserAccount has the following code snippet:

This is path 1 for the API with depth 1:
public void setUserAccount(int p1, String p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
		if (v3 != 0) {
			UserManagerService$UserData.account = p2;
			if (v2 == 0) {
				AtomicFile v5 = new AtomicFile(v6);
				File v6 = new File(this.mUsersDir,v11);
				StringBuilder v7 = new StringBuilder();
				StringBuilder v9 = v7.append(UserInfo.id);
				StringBuilder v10 = v7.append(".xml");
				String v11 = v7.toString();
				FileOutputStream v14 = v5.startWrite();
				UserManagerService.writeUserLP(v2, v14);
				v5.finishWrite(v14);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void setUserAccount(int p1, String p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
		if (v3 != 0) {
			UserManagerService$UserData.account = p2;
			if (v2 == 0) {
				p0.writeUserLP(v2);
				return;
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mUsers.get(p1);\nboolean v3 = Objects.equals(UserManagerService$UserData.account, p2);\nUserManagerService$UserData.account = p2;\nAtomicFile v5 = new AtomicFile(v6);\nStringBuilder v7 = new StringBuilder();\nStringBuilder v9 = v7.append(UserInfo.id);\nStringBuilder v10 = v7.append(".xml");\nString v11 = v7.toString();\nFileOutputStream v14 = v5.startWrite();\nUserManagerService.writeUserLP(v2, v14);\nv5.finishWrite(v14);', 'Object v2 = this.mUsers.get(p1);\nboolean v3 = Objects.equals(UserManagerService$UserData.account, p2);\nUserManagerService$UserData.account = p2;\np0.writeUserLP(v2);']

The method setUserAccount has the following similar APIs:

- API Name: setUserEnabled(I)V with Similarity Score: 0.8835034370422363
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUsers.get(p1);
if (v4 != 0) {
UserInfo.flags = (UserInfo.flags ^ 64);
UserManagerService$UserData v6 = v7;
AtomicFile v10 = new AtomicFile(v11);
FileOutputStream v19 = v10.startWrite();
UserManagerService.writeUserLP(v6, v19);

- API Name: setUserEphemeral(IZ)Z with Similarity Score: 0.8470470905303955
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUsers.get(p1);
if ((UserInfo.flags & 256) == 0) {
if ((UserInfo.flags & 8192) == 0) {
UserInfo.flags = (UserInfo.flags & -257);
p0.writeUserLP(v2);

