The method setUserAccount in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 1:
public void setUserAccount(int p1, String p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
		if (v3 != 0) {
			UserManagerService$UserData.account = p2;
			if (v2 == 0) {
				AtomicFile v5 = new AtomicFile(v6);
				File v6 = new File(this.mUsersDir,v11);
				StringBuilder v7 = new StringBuilder();
				StringBuilder v9 = v7.append(UserInfo.id);
				StringBuilder v10 = v7.append(".xml");
				String v11 = v7.toString();
				FileOutputStream v14 = v5.startWrite();
				UserManagerService.writeUserLP(v2, v14);
				v5.finishWrite(v14);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void setUserAccount(int p1, String p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
		if (v3 != 0) {
			UserManagerService$UserData.account = p2;
			if (v2 == 0) {
				p0.writeUserLP(v2);
				return;
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mUsers.get(p1);\nboolean v3 = Objects.equals(UserManagerService$UserData.account, p2);\nUserManagerService$UserData.account = p2;\nAtomicFile v5 = new AtomicFile(v6);\nStringBuilder v7 = new StringBuilder();\nStringBuilder v9 = v7.append(UserInfo.id);\nStringBuilder v10 = v7.append(".xml");\nString v11 = v7.toString();\nFileOutputStream v14 = v5.startWrite();\nUserManagerService.writeUserLP(v2, v14);\nv5.finishWrite(v14);', 'Object v2 = this.mUsers.get(p1);\nboolean v3 = Objects.equals(UserManagerService$UserData.account, p2);\nUserManagerService$UserData.account = p2;\np0.writeUserLP(v2);']

The method setUserAccount has the following similar APIs:

- API Name: setUserEnabled(I)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8835033178329468, Code:
Object v3 = this.mUsers.get(p1);
if (v4 != 0) {
UserInfo.flags = (UserInfo.flags ^ 64);
UserManagerService$UserData v6 = v7;
AtomicFile v10 = new AtomicFile(v11);
FileOutputStream v19 = v10.startWrite();
UserManagerService.writeUserLP(v6, v19);
  - Access Control Level: SYS_OR_SIG

- API Name: setUserEphemeral(IZ)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8470471501350403, Code:
Object v2 = this.mUsers.get(p1);
if ((UserInfo.flags & 256) == 0) {
if ((UserInfo.flags & 8192) == 0) {
UserInfo.flags = (UserInfo.flags & -257);
p0.writeUserLP(v2);
  - Similarity: 0.8416552543640137, Code:
Object v2 = this.mUsers.get(p1);
if ((UserInfo.flags & 256) == 0) {
if ((UserInfo.flags & 8192) == 0) {
UserInfo.flags = (UserInfo.flags | 256);
p0.writeUserLP(v2);
  - Similarity: 0.8204749226570129, Code:
Object v2 = this.mUsers.get(p1);
if ((UserInfo.flags & 256) == 0) {
if ((UserInfo.flags & 8192) == 0) {
UserInfo.flags = (UserInfo.flags | 256);
AtomicFile v4 = new AtomicFile(v5);
FileOutputStream v13 = v4.startWrite();
UserManagerService.writeUserLP(v2, v13);
v4.finishWrite(v13);
  - Access Control Level: SYS_OR_SIG

- API Name: clearSeedAccountData(I)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8205603957176208, Code:
Object v3 = this.mUsers.get(p1);
if (v3 == 0) {
if (UserInfo.partial == 0) {
boolean v4 = this.mRemovingUserIds.get(p1);
if (v4 != 0) {
this.seedAccountName = 0;
this.seedAccountType = 0;
this.seedAccountOptions = 0;
this.persistSeedData = 0;
AtomicFile v7 = new AtomicFile(v8);
File v8 = new File(this.mUsersDir,v13);
StringBuilder v9 = new StringBuilder();
StringBuilder v11 = v9.append(UserInfo.id);
StringBuilder v12 = v9.append(".xml");
String v13 = v9.toString();
FileOutputStream v16 = v7.startWrite();
UserManagerService.writeUserLP(v2, v16);
v7.finishWrite(v16);
  - Similarity: 0.7807952761650085, Code:
UserManagerService$UserData v2 = p0.getUserDataLU(p1);
if (v2 != 0) {
v2.clearSeedAccountData();
p0.writeUserLP(v2);
  - Access Control Level: SYS_OR_SIG

- API Name: getUserAccount(I)Ljava/lang/String; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7899169921875, Code:
Object v2 = this.mUsers.get(p1);
return UserManagerService$UserData.account;
  - Access Control Level: SYS_OR_SIG

- API Name: removeUserWhenPossible(IZ)I in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7880649566650391, Code:
Object v13 = this.mUsers.get(p1);
this.mRemovingUserIds.put(p1, 1);
Integer v23 = Integer.valueOf(p1);
boolean v24 = this.mRecentlyRemovedIds.add(v23);
AtomicFile v28 = new AtomicFile(v29);
FileOutputStream v37 = v28.startWrite();
UserManagerService.writeUserLP(v13, v37);
  - Access Control Level: SYS_OR_SIG

