The method hasUserRestriction in the following class Lcom.android.server.pm.UserManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasUserRestriction(String p1, int p2){
	boolean v4 = this.USER_RESTRICTIONS.contains(p1);
	if (v4 != 0) {
		int v5 = Binder.getCallingUid();
		IPackageManager v6 = AppGlobals.getPackageManager();
		String v7 = v6.getPackagesForUid(v5);
		if (0 == 0) {
			if (0.length <= 0) {
				if (0.length <= 1) {
					if (p1 == 0) {
						boolean v17 = UserRestrictionsUtils.isSystemApp(v5, 0);
						if (v17 == 0) {
							boolean v3 = 0;
							if (v3 != 0) {
								Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);
								Bundle v20 = v21;
								if (v20 == 0) {
									boolean v22 = v20.getBoolean(p1);
									if (v22 == 0) {
										boolean v2 = 0;
										return v2;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean hasUserRestriction(String p1, int p2){
	boolean v3 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v3 != 0) {
		Bundle v4 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
		if (v4 == 0) {
			boolean v5 = v4.getBoolean(p1);
			if (v5 == 0) {
				boolean v2 = 0;
				return v2;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean hasUserRestriction(String p1, int p2){
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}

and the following sink code:
['Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);\nBundle v20 = v21;\nboolean v22 = v20.getBoolean(p1);', 'Bundle v4 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);\nboolean v5 = v4.getBoolean(p1);', 'boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);\nreturn v2;']

The method hasUserRestriction has the following similar APIs:

- API Name: getUserRestrictions(I)Landroid/os/Bundle; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8931803703308105, Code:
Bundle v2 = p0.getEffectiveUserRestrictions(p1);
Bundle v3 = BundleUtils.clone(v2);
return v3;
  - Similarity: 0.8683005571365356, Code:
Bundle v3 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
Bundle v4 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);
boolean v5 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v4);
Bundle v7 = new Bundle(v2);
return v6;
  - Access Control Level: SYS_OR_SIG

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8766813278198242, Code:
Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
boolean v12 = v3.add(v10);
  - Access Control Level: SYS_OR_SIG

- API Name: setUserRestriction(Ljava/lang/String;ZI)V in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8477663397789001, Code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
Bundle v4 = BundleUtils.clone(v3);
v4.putBoolean(p1, p2);
p0.updateUserRestrictionsInternalLR(v4, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: hasBaseUserRestriction(Ljava/lang/String;I)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8317580223083496, Code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
boolean v4 = v3.getBoolean(p1, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7984536290168762, Code:
boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
List v2 = p0.getUsers(1);
Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
boolean v6 = v5.getBoolean(p1);
  - Access Control Level: SYS_OR_SIG

