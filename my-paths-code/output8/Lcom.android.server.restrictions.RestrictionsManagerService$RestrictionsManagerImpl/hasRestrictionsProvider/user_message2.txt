The method hasRestrictionsProvider in the following class Lcom.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl has the following code snippet:

This is path 1 for the API with depth 0:
public boolean hasRestrictionsProvider(){
	int v1 = UserHandle.getCallingUserId();
	if (this.mDpm == 0) {
		long v2 = Binder.clearCallingIdentity();
		ComponentName v3 = this.mDpm.getRestrictionsProvider(v1);
		if (v3 == 0) {
			Binder.restoreCallingIdentity(v2);
			return 0;
		}
	}
}

and the following sink code:
['int v1 = UserHandle.getCallingUserId();\nComponentName v3 = this.mDpm.getRestrictionsProvider(v1);\nif (v3 == 0) {\nreturn 0;']

The method hasRestrictionsProvider has the following similar APIs:

- API Name: createLocalApprovalIntent()Landroid/content/Intent; in the following Class: Lcom.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl with the following sink code entries:
  - Similarity: 0.8552742600440979, Code:
int v1 = UserHandle.getCallingUserId();
ComponentName v3 = this.mDpm.getRestrictionsProvider(v1);
String v4 = v3.getPackageName();
Intent v5 = new Intent("android.content.action.REQUEST_LOCAL_APPROVAL");
Intent v7 = v5.setPackage(v4);
ResolveInfo v10 = v8.resolveIntent(v5, 0, 0, v1);
ComponentName v11 = new ComponentName(ActivityInfo.packageName,ActivityInfo.name);
Intent v13 = v5.setComponent(v11);
return v5;
  - Access Control Level: NONE

- API Name: getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.8172293901443481, Code:
int v1 = UserHandle.getCallingUserId();
Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
return v2;
  - Similarity: 0.7833549380302429, Code:
int v1 = UserHandle.getCallingUserId();
UserManagerService.checkSystemOrRoot(v11);
Bundle v13 = UserManagerService.readApplicationRestrictionsLAr(p1, v1);
return v2;
  - Similarity: 0.7625126242637634, Code:
int v1 = UserHandle.getCallingUserId();
File v18 = Environment.getUserSystemDirectory(v1);
String v19 = UserManagerService.packageToRestrictionsFileName(p1);
AtomicFile v16 = new AtomicFile(v17);
Bundle v22 = UserManagerService.readApplicationRestrictionsLAr(v16);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7682011723518372, Code:
boolean v2 = this.USER_RESTRICTIONS.contains(p1);
int v3 = Binder.getCallingUid();
IPackageManager v5 = ActivityThread.getPackageManager();
String v6 = v4.getPackagesForUid(v3);
Bundle v33 = v34;
Bundle v35 = v42;
this.mUserRestrictions.put(UserInfo.id, v35);
  - Similarity: 0.7071135640144348, Code:
boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
List v2 = p0.getUsers(1);
Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
boolean v6 = v5.getBoolean(p1);
  - Access Control Level: SYS_OR_SIG

