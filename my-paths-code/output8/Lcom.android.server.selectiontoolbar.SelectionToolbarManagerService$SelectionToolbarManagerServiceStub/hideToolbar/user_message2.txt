The method hideToolbar in the following class Lcom.android.server.selectiontoolbar.SelectionToolbarManagerService$SelectionToolbarManagerServiceStub has the following code snippet:

This is path 1 for the API with depth 2:
public void hideToolbar(long p1, int p2){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		if (this.mRemoteService != 0) {
			String v6 = SelectionToolbarManagerServiceImpl.getComponentNameLocked();
			ComponentName v7 = ComponentName.unflattenFromString(v6);
			RemoteSelectionToolbarRenderService v8 = new RemoteSelectionToolbarRenderService(v9,v7,AbstractPerUserSystemService.mUserId,this.mRemoteServiceCallback);
			Context v9 = SelectionToolbarManagerServiceImpl.getContext();
			this.mRemoteService = v8;
			RemoteSelectionToolbarRenderService v5 = this.mRemoteService;
			if (v5 == 0) {
				RemoteSelectionToolbarRenderService$$ExternalSyntheticLambda3 v12 = new RemoteSelectionToolbarRenderService$$ExternalSyntheticLambda3(p1);
				boolean v14 = RemoteSelectionToolbarRenderService.run(v12);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void hideToolbar(long p1, int p2){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		RemoteSelectionToolbarRenderService v5 = SelectionToolbarManagerServiceImpl.ensureRemoteServiceLocked();
		if (v5 == 0) {
			v5.onHide(p1);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void hideToolbar(long p1, int p2){
	Object v1 = SelectionToolbarManagerService.access$200(this.this$0);
	AbstractPerUserSystemService v2 = SelectionToolbarManagerService.access$300(this.this$0, p2);
	if (v2 == 0) {
		v2.hideToolbar(p1);
		return;
	}
}

and the following sink code:
['AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);\nif (v2 == 0) {\nRemoteSelectionToolbarRenderService v8 = new RemoteSelectionToolbarRenderService(v9,v7,AbstractPerUserSystemService.mUserId,this.mRemoteServiceCallback);\nthis.mRemoteService = v8;\nRemoteSelectionToolbarRenderService v5 = this.mRemoteService;\nif (v5 == 0) {\nRemoteSelectionToolbarRenderService$$ExternalSyntheticLambda3 v12 = new RemoteSelectionToolbarRenderService$$ExternalSyntheticLambda3(p1);\nboolean v14 = RemoteSelectionToolbarRenderService.run(v12);', 'AbstractPerUserSystemService v2 = SelectionToolbarManagerService.access$300(this.this$0, p2);\nif (v2 == 0) {\nv2.hideToolbar(p1);', 'RemoteSelectionToolbarRenderService v5 = SelectionToolbarManagerServiceImpl.ensureRemoteServiceLocked();\nif (v5 == 0) {\nv5.onHide(p1);']

The method hideToolbar has the following similar APIs:

- API Name: showToolbar(Landroid/view/selectiontoolbar/ShowInfo;Landroid/view/selectiontoolbar/ISelectionToolbarCallback;I)V in the following Class: Lcom.android.server.selectiontoolbar.SelectionToolbarManagerService$SelectionToolbarManagerServiceStub with the following sink code entries:
  - Similarity: 0.9793639779090881, Code:
AbstractPerUserSystemService v2 = this.this$0.getServiceForUserLocked(p3);
RemoteSelectionToolbarRenderService v8 = new RemoteSelectionToolbarRenderService(v9,v7,AbstractPerUserSystemService.mUserId,this.mRemoteServiceCallback);
this.mRemoteService = v8;
RemoteSelectionToolbarRenderService$$ExternalSyntheticLambda2 v13 = new RemoteSelectionToolbarRenderService$$ExternalSyntheticLambda2(v11,p1,p2);
boolean v15 = RemoteSelectionToolbarRenderService.run(v13);
  - Similarity: 0.9424315094947815, Code:
AbstractPerUserSystemService v2 = SelectionToolbarManagerService.access$100(this.this$0, p3);
v2.showToolbar(p1, p2);
  - Similarity: 0.8836178779602051, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p3);
RemoteSelectionToolbarRenderService v5 = SelectionToolbarManagerServiceImpl.ensureRemoteServiceLocked();
v5.onShow(v6, p1, p2);
  - Access Control Level: NONE

- API Name: dismissToolbar(JI)V in the following Class: Lcom.android.server.selectiontoolbar.SelectionToolbarManagerService$SelectionToolbarManagerServiceStub with the following sink code entries:
  - Similarity: 0.9637356400489807, Code:
AbstractPerUserSystemService v2 = SelectionToolbarManagerService.access$500(this.this$0, p2);
v2.dismissToolbar(p1);
  - Similarity: 0.9525955319404602, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
RemoteSelectionToolbarRenderService v8 = new RemoteSelectionToolbarRenderService(v9,v7,AbstractPerUserSystemService.mUserId,this.mRemoteServiceCallback);
boolean v15 = RemoteSelectionToolbarRenderService.run(v13);
  - Similarity: 0.8539177775382996, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
RemoteSelectionToolbarRenderService v5 = SelectionToolbarManagerServiceImpl.ensureRemoteServiceLocked();
v5.onDismiss(v6, p1);
  - Access Control Level: NONE

- API Name: onSessionCreated(Landroid/view/translation/TranslationContext;ILcom/android/internal/os/IResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7974240779876709, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
RemoteTranslationService$$ExternalSyntheticLambda1 v26 = new RemoteTranslationService$$ExternalSyntheticLambda1(p1,p2,p3);
boolean v28 = RemoteTranslationService.run(v26);
  - Access Control Level: NONE

- API Name: onTranslationCapabilitiesRequest(IILandroid/os/ResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7803889513015747, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
boolean v5 = this.this$0.isDefaultServiceLocked(p4);
RemoteTranslationService v22 = new RemoteTranslationService(v23,v21,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);
  - Access Control Level: NONE

- API Name: createSession(Ljava/lang/String;Landroid/speech/tts/ITextToSpeechSessionCallback;)V in the following Class: Lcom.android.server.texttospeech.TextToSpeechManagerService$TextToSpeechManagerServiceStub with the following sink code entries:
  - Similarity: 0.7681805491447449, Code:
AbstractPerUserSystemService v4 = this.this$0.getServiceForUserLocked(v2);
TextToSpeechManagerService$TextToSpeechManagerServiceStub$$ExternalSyntheticLambda0 v5 = new TextToSpeechManagerService$TextToSpeechManagerServiceStub$$ExternalSyntheticLambda0(p2);
v5.runOrThrow();
  - Access Control Level: NONE

