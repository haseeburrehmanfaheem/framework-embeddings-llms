This is path 1 for the API with depth 1:
public ParceledListSlice getUriPermissions(String p1, boolean p2, boolean p3){
	ArrayList v8 = new ArrayList();
	ArrayList v7 = v8;
	if (p2 == 0) {
		Object v10 = this.mGrantedUriPermissions.get(v3);
		if (v10 != 0) {
			int v11 = v10.size();
			if (0 >= v11) {
				Object v12 = v10.valueAt(0);
				boolean v13 = p1.equals(UriPermission.targetPkg);
				if (v13 == 0) {
					if (p3 == 0) {
						if (UriPermission.persistedModeFlags == 0) {
							UriPermission v15 = new UriPermission(GrantUri.uri,this.persistedModeFlags,this.persistedCreateTime);
							UriPermission v14 = v15;
							boolean v17 = v7.add(v14);
							int v18 = v10.size();
							if (0 >= v18) {
								ParceledListSlice v19 = new ParceledListSlice(v7);
								return v19;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public ParceledListSlice getUriPermissions(String p1, boolean p2, boolean p3){
	ArrayList v7 = Lists.newArrayList();
	if (p2 == 0) {
		Object v8 = this.mGrantedUriPermissions.get(v3);
		if (v8 != 0) {
			int v9 = v8.size();
			if (0 >= v9) {
				Object v10 = v8.valueAt(0);
				boolean v11 = p1.equals(UriPermission.targetPkg);
				if (v11 == 0) {
					if (p3 == 0) {
						if (UriPermission.persistedModeFlags == 0) {
							UriPermission v12 = v10.buildPersistedPublicApiObject();
							boolean v13 = v7.add(v12);
							int v14 = v8.size();
							if (0 >= v14) {
								ParceledListSlice v15 = new ParceledListSlice(v7);
								return v15;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getUriPermissions(String p1, boolean p2, boolean p3){
	ArrayList v7 = Lists.newArrayList();
	if (p2 == 0) {
		int v8 = this.mGrantedUriPermissions.size();
		if (0 >= v8) {
			Object v9 = this.mGrantedUriPermissions.valueAt(0);
			int v10 = v9.size();
			if (0 >= v10) {
				Object v11 = v9.valueAt(0);
				boolean v12 = p1.equals(UriPermission.sourcePkg);
				if (v12 == 0) {
					if (p3 == 0) {
						if (UriPermission.persistedModeFlags == 0) {
							UriPermission v13 = v11.buildPersistedPublicApiObject();
							boolean v14 = v7.add(v13);
							int v15 = v9.size();
							if ((0 + 1) >= v15) {
								if ((0 + 1) >= v8) {
									ParceledListSlice v16 = new ParceledListSlice(v7);
									return v16;
								}
							}
						}
					}
				}
			}
		}
	}
}
