This is path 1 for the API with depth 2:
public MidiDeviceInfo getDevices(){
	ArrayList v2 = new ArrayList();
	int v4 = Binder.getCallingUid();
	Collection v5 = this.mDevicesByInfo.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		boolean v10 = this.mDeviceInfo.isPrivate();
		if (v10 == 0) {
			boolean v9 = 0;
			if (v9 == 0) {
				if (1 != 2) {
					MidiDeviceInfo v11 = this.mDeviceInfo;
					int v12 = this.mDefaultProtocol;
					if (v12 == -1) {
						MidiDeviceInfo v13 = this.mDeviceInfo;
						boolean v14 = v2.add(v13);
						boolean v15 = v6.hasNext();
						if (v15 == 0) {
							Object v16 = v2.toArray(this.EMPTY_DEVICE_INFO_ARRAY);
							MidiDeviceInfo v1 = v16;
							return v1;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public MidiDeviceInfo getDevices(){
	ArrayList v2 = new ArrayList();
	int v4 = Binder.getCallingUid();
	Collection v5 = this.mDevicesByInfo.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		boolean v9 = v8.isUidAllowed(v4);
		if (v9 == 0) {
			if (1 != 2) {
				MidiDeviceInfo v10 = v8.getDeviceInfo();
				int v11 = v10.getDefaultProtocol();
				if (v11 == -1) {
					MidiDeviceInfo v12 = v8.getDeviceInfo();
					boolean v13 = v2.add(v12);
					boolean v14 = v6.hasNext();
					if (v14 == 0) {
						Object v15 = v2.toArray(this.EMPTY_DEVICE_INFO_ARRAY);
						MidiDeviceInfo v1 = v15;
						return v1;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public MidiDeviceInfo getDevices(){
	MidiDeviceInfo v1 = p0.getDevicesForTransport(1);
	return v1;
}
