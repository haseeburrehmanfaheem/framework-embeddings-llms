This is path 1 for the API with depth 2:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	if (0 >= 16) {
		this.mNextDeviceId = (this.mNextDeviceId + 1);
		MidiDeviceInfo v9 = new MidiDeviceInfo(p7,this.mNextDeviceId,p2,p3,p4,p5,p6,0,p8);
		if (p1 == 0) {
			p1.setDeviceInfo(v9);
			if (p7 != 3) {
				if (get() != 0) {
					MidiService$Device v12 = new MidiService$Device(MidiService,p1,v9,0,v1);
					Object v14 = this.mDevicesByInfo.put(v9, get());
					if (getParcelable() == 0) {
						Collection v15 = this.mClients.values();
						Iterator v16 = v15.iterator();
						boolean v17 = v16.hasNext();
						if (v17 == 0) {
							Object v18 = v16.next();
							boolean v20 = get().isUidAllowed(this.mUid);
							if (v20 != 0) {
								MidiDeviceInfo v21 = get().getDeviceInfo();
								Collection v22 = this.mListeners.values();
								Iterator v23 = v22.iterator();
								boolean v24 = v23.hasNext();
								if (v24 == 0) {
									Object v25 = v23.next();
									v25.onDeviceAdded(v21);
									boolean v27 = v23.hasNext();
									if (v27 == 0) {
										boolean v28 = v16.hasNext();
										if (v28 == 0) {
											MidiDeviceInfo v2 = v9;
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	if (0 >= 16) {
		this.mNextDeviceId = (this.mNextDeviceId + 1);
		MidiDeviceInfo v9 = new MidiDeviceInfo(p7,this.mNextDeviceId,p2,p3,p4,p5,p6,0,p8);
		if (p1 == 0) {
			p1.setDeviceInfo(v9);
			if (p7 != 3) {
				Parcelable v12 = p6.getParcelable("bluetooth_device");
				Object v13 = this.mBluetoothDevices.get(v12);
				if (v13 == 0) {
					if (v13 != 0) {
						MidiService$Device v14 = new MidiService$Device(MidiService,p1,v9,0,v1);
						Object v16 = this.mDevicesByInfo.put(v9, v13);
						if (v12 == 0) {
							Collection v17 = this.mClients.values();
							Iterator v18 = v17.iterator();
							boolean v19 = v18.hasNext();
							if (v19 == 0) {
								MidiDeviceInfo v2 = v9;
								return v2;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	MidiDeviceInfo v2 = p0.addDeviceLocked(p7, p2, p3, p4, p5, p6, p1, 0, 0, v1, p8);
	return v2;
}
