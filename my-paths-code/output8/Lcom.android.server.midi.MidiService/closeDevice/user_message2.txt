The method closeDevice in the following class Lcom.android.server.midi.MidiService has the following code snippet:

This is path 1 for the API with depth 2:
public void closeDevice(IBinder p1, IBinder p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		Object v6 = this.mClients.put(p1, v3);
		MidiService$Client v1 = v2;
		if (v1 != 0) {
			Object v8 = this.mDeviceConnections.remove(p2);
			if (v8 == 0) {
				MidiService$Device v9 = this.mDevice;
				HashMap v11 = MidiService.-$$Nest$fgetmDevicesByInfo(this.this$0);
				boolean v12 = this.mDeviceConnections.remove(v8);
				MidiService$Device v13 = v8.getDevice();
				MidiDeviceInfo v14 = v13.getDeviceInfo();
				int v15 = v14.getType();
				if (v15 != 1) {
					Object v16 = MidiService.-$$Nest$fgetmUsbMidiLock(this.this$0);
					MidiService$Device v17 = v8.getDevice();
					MidiDeviceInfo v18 = v17.getDeviceInfo();
					this.this$0.removeUsbMidiDeviceLocked(v18);
					int v20 = this.mDeviceConnections.size();
					if (v20 != 0) {
						if (this.mServiceConnection == 0) {
							Context v21 = MidiService.-$$Nest$fgetmContext(this.this$0);
							v21.unbindService(this.mServiceConnection);
							this.mServiceConnection = 0;
							if (this.mBluetoothDevice == 0) {
								MidiService$Device.closeLocked();
								int v24 = this.mListeners.size();
								if (v24 != 0) {
									int v25 = this.mDeviceConnections.size();
									if (v25 != 0) {
										HashMap v27 = MidiService.-$$Nest$fgetmClients(this.this$0);
										HashMap v28 = MidiService.-$$Nest$fgetmClients(this.this$0);
										Object v29 = v28.remove(this.mToken);
										boolean v30 = this.mToken.unlinkToDeath(MidiService$Client, 0);
										Collection v31 = this.mDeviceConnections.values();
										Iterator v32 = v31.iterator();
										boolean v33 = v32.hasNext();
										if (v33 == 0) {
											Object v34 = v32.next();
											MidiService$Device v35 = v34.getDevice();
											v35.removeDeviceConnection(v34);
											boolean v37 = v32.hasNext();
											if (v37 == 0) {
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void closeDevice(IBinder p1, IBinder p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		Object v6 = this.mClients.put(p1, v3);
		MidiService$Client v1 = v2;
		if (v1 != 0) {
			Object v8 = this.mDeviceConnections.remove(p2);
			if (v8 == 0) {
				MidiService$Device v9 = v8.getDevice();
				v9.removeDeviceConnection(v8);
				int v11 = this.mListeners.size();
				if (v11 != 0) {
					int v12 = this.mDeviceConnections.size();
					if (v12 != 0) {
						MidiService$Client.close();
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void closeDevice(IBinder p1, IBinder p2){
	MidiService$Client v1 = p0.getClient(p1);
	if (v1 != 0) {
		v1.removeDeviceConnection(p2);
		return;
	}
}

and the following sink code:
['Object v2 = this.mClients.get(p1);\nMidiService$Client v3 = new MidiService$Client(MidiService,p1);\np1.linkToDeath(v3, 0);\nObject v6 = this.mClients.put(p1, v3);\nObject v8 = this.mDeviceConnections.remove(p2);', 'Object v2 = this.mClients.get(p1);\nMidiService$Client v3 = new MidiService$Client(MidiService,p1);\np1.linkToDeath(v3, 0);\nObject v6 = this.mClients.put(p1, v3);\nObject v8 = this.mDeviceConnections.remove(p2);', 'MidiService$Client v1 = p0.getClient(p1);\nv1.removeDeviceConnection(p2);']

The method closeDevice has the following similar APIs:

- API Name: openBluetoothDevice(Landroid/os/IBinder;Landroid/bluetooth/BluetoothDevice;Landroid/media/midi/IMidiDeviceOpenCallback;)V in the following Class: Lcom.android.server.midi.MidiService with the following sink code entries:
  - Similarity: 0.9554651975631714, Code:
Object v3 = this.mClients.get(p1);
MidiService$Client v4 = new MidiService$Client(MidiService,p1);
p1.linkToDeath(v4, 0);
Object v7 = this.mClients.put(p1, v4);
  - Similarity: 0.7036259770393372, Code:
Object v9 = this.mBluetoothDevices.get(p2);
MidiService$Device v10 = new MidiService$Device(p0,p2);
Object v12 = this.mBluetoothDevices.put(p2, v10);
  - Access Control Level: NONE

- API Name: openDevice(Landroid/os/IBinder;Landroid/media/midi/MidiDeviceInfo;Landroid/media/midi/IMidiDeviceOpenCallback;)V in the following Class: Lcom.android.server.midi.MidiService with the following sink code entries:
  - Similarity: 0.9503569602966309, Code:
MidiService$Client v3 = new MidiService$Client(MidiService, p1);
p1.linkToDeath(v3, 0);
Object v6 = this.mClients.put(p1, v3);
Object v13 = this.mDevicesByInfo.get(p2);
  - Similarity: 0.7273166179656982, Code:
MidiService$DeviceConnection v85 = new MidiService$DeviceConnection(this.this$0, v13, MidiService$Client, p3);
IBinder v87 = this.mToken;
Object v88 = this.mDeviceConnections.put(v87, v85);
  - Access Control Level: NONE

- API Name: registerListener(Landroid/os/IBinder;Landroid/media/midi/IMidiDeviceListener;)V in the following Class: Lcom.android.server.midi.MidiService with the following sink code entries:
  - Similarity: 0.9112204909324646, Code:
MidiService$Client v3 = new MidiService$Client(MidiService,p1);
p1.linkToDeath(v3, 0);
Object v6 = this.mClients.put(p1, v3);
int v8 = this.mListeners.size();
IBinder v9 = p2.asBinder();
Object v10 = this.mListeners.put(v9, p2);
p2.onDeviceStatusChanged(v19);
  - Access Control Level: NONE

- API Name: unregisterListener(Landroid/os/IBinder;Landroid/media/midi/IMidiDeviceListener;)V in the following Class: Lcom.android.server.midi.MidiService with the following sink code entries:
  - Similarity: 0.8685939908027649, Code:
MidiService$Client v3 = new MidiService$Client(MidiService,p1);
p1.linkToDeath(v3, 0);
Object v6 = this.mClients.put(p1, v3);
IBinder v8 = p2.asBinder();
Object v9 = this.mListeners.remove(v8);
  - Access Control Level: NONE

