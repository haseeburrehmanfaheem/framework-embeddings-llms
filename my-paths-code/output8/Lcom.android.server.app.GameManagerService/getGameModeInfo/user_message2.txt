The method getGameModeInfo has the following code snippet:

This is path 1 for the API with depth 2:
public GameModeInfo getGameModeInfo(String p1, int p2){
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v5 = 0;
		if (v5 != 0) {
			Integer v8 = Integer.valueOf(v3);
			boolean v9 = this.mSettings.containsKey(v8);
			if (v9 != 0) {
				Integer v10 = Integer.valueOf(v3);
				Object v11 = this.mSettings.get(v10);
				boolean v13 = this.mGameModes.containsKey(p1);
				if (v13 == 0) {
					Object v14 = this.mGameModes.get(p1);
					int v15 = v14.intValue();
					int v12 = v15;
					int v7 = v12;
					Object v17 = this.mOverrideConfigs.get(p1);
					if (v17 != 0) {
						Object v18 = this.mConfigs.get(p1);
						if (v17 != 0) {
							int v20 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
							int v21 = Integer.bitCount(v20);
							[I v22 = new [I(v21);
							int v23 = Integer.highestOneBit(v20);
							int v24 = Integer.numberOfTrailingZeros(v23);
							if (0 > v24) {
								if (((v20 >> 0) & 1) == 0) {
									if ((0 + 1) > v24) {
										[I v19 = v22;
										[I v16 = v19;
										GameModeInfo v25 = new GameModeInfo(v7,v16);
										return v25;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public GameModeInfo getGameModeInfo(String p1, int p2){
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v5 = 0;
		if (v5 != 0) {
			Integer v8 = Integer.valueOf(v3);
			boolean v9 = this.mSettings.containsKey(v8);
			if (v9 != 0) {
				Integer v10 = Integer.valueOf(v3);
				Object v11 = this.mSettings.get(v10);
				int v12 = v11.getGameModeLocked(p1);
				int v7 = v12;
				Object v14 = this.mOverrideConfigs.get(p1);
				if (v14 != 0) {
					Object v15 = this.mConfigs.get(p1);
					if (v14 != 0) {
						[I v16 = new [I(0);
						[I v13 = v16;
						GameModeInfo v17 = new GameModeInfo(v7,v13);
						return v17;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public GameModeInfo getGameModeInfo(String p1, int p2){
	boolean v5 = p0.isPackageGame(p1, v3);
	if (v5 != 0) {
		int v6 = p0.getGameModeFromSettings(p1, v3);
		[I v7 = p0.getAvailableGameModesUnchecked(p1);
		GameModeInfo v8 = new GameModeInfo(v6,v7);
		return v8;
	}
}

and the following sink code:
['ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);\nint v12 = v11.getGameModeLocked(p1);\n[I v22 = new [I(v21);\nGameModeInfo v25 = new GameModeInfo(v7,v16);', 'ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);\nint v12 = v11.getGameModeLocked(p1);\n[I v16 = new [I(0);\nGameModeInfo v17 = new GameModeInfo(v7,v13);', 'boolean v5 = p0.isPackageGame(p1, v3);\nint v6 = p0.getGameModeFromSettings(p1, v3);\n[I v7 = p0.getAvailableGameModesUnchecked(p1);\nGameModeInfo v8 = new GameModeInfo(v6,v7);']

The method getGameModeInfo has the following similar APIs:

- API Name: setGameMode(Ljava/lang/String;II)V with Similarity Score: 0.8649907112121582
  - Access Control Level: SYS_OR_SIG and the following code:
ApplicationInfo v3 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, p3);
int v6 = ActivityManager.handleIncomingUser(v4, v5, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
Integer v7 = Integer.valueOf(v6);
boolean v8 = this.mSettings.containsKey(v7);
Object v13 = this.mGameModes.put(p1, v12);

- API Name: getPackageScreenCompatMode(Ljava/lang/String;)I with Similarity Score: 0.8626100420951843
  - Access Control Level: SYS_OR_SIG and the following code:
ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0);
CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(v10);
boolean v13 = v12.alwaysSupportsScreen();
boolean v14 = v12.neverSupportsScreen();
boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(v10);
int v11 = v15;
int v7 = v11;
return v7;

