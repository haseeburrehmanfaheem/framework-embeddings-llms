The method setGameMode in the following class Lcom.android.server.app.GameManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void setGameMode(String p1, int p2, int p3){
	ApplicationInfo v3 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, p3);
	if (ApplicationInfo.category != 0) {
		boolean v2 = 0;
		if (v2 != 0) {
			int v4 = Binder.getCallingPid();
			int v5 = Binder.getCallingUid();
			int v6 = ActivityManager.handleIncomingUser(v4, v5, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
			Integer v7 = Integer.valueOf(v6);
			boolean v8 = this.mSettings.containsKey(v7);
			if (v8 != 0) {
				Integer v9 = Integer.valueOf(v6);
				Object v10 = this.mSettings.get(v9);
				Integer v12 = Integer.valueOf(p2);
				Object v13 = this.mGameModes.put(p1, v12);
				Message v14 = this.mHandler.obtainMessage(1);
				Integer v15 = Integer.valueOf(v6);
				Message.obj = v15;
				Integer v16 = Integer.valueOf(v6);
				boolean v17 = this.mHandler.hasEqualMessages(1, v16);
				if (v17 != 0) {
					boolean v18 = this.mHandler.sendMessageDelayed(v14, 10000);
					if (p2 == 1) {
						if (p2 != 0) {
							Object v20 = this.mOverrideConfigs.get(p1);
							if (v20 != 0) {
								Object v21 = this.mConfigs.get(p1);
								if (v20 != 0) {
									if (this.mBatteryModeOptedIn == 0) {
										if (p2 == 3) {
											if (this.mPerfModeOptedIn == 0) {
												if (p2 != 2) {
													boolean v22 = 1;
													if (v22 == 0) {
														GameManagerService$GamePackageConfiguration$GameModeConfiguration v24 = v20.getGameModeConfiguration(p2);
														if (v24 != 0) {
															GameManagerService$GamePackageConfiguration$GameModeConfiguration v34 = v20.getGameModeConfiguration(p2);
															if (v34 != 0) {
																Message v44 = this.mHandler.obtainMessage(6);
																Integer v45 = Integer.valueOf(v6);
																Message.obj = v45;
																Integer v46 = Integer.valueOf(v6);
																boolean v47 = this.mHandler.hasEqualMessages(6, v46);
																if (v47 != 0) {
																	boolean v48 = this.mHandler.sendMessage(v44);
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setGameMode(String p1, int p2, int p3){
	ApplicationInfo v3 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, p3);
	if (ApplicationInfo.category != 0) {
		boolean v2 = 0;
		if (v2 != 0) {
			int v4 = Binder.getCallingPid();
			int v5 = Binder.getCallingUid();
			int v6 = ActivityManager.handleIncomingUser(v4, v5, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
			Integer v7 = Integer.valueOf(v6);
			boolean v8 = this.mSettings.containsKey(v7);
			if (v8 != 0) {
				Integer v9 = Integer.valueOf(v6);
				Object v10 = this.mSettings.get(v9);
				Integer v12 = Integer.valueOf(p2);
				Object v13 = this.mGameModes.put(p1, v12);
				Message v14 = this.mHandler.obtainMessage(1);
				Integer v15 = Integer.valueOf(v6);
				Message.obj = v15;
				Integer v16 = Integer.valueOf(v6);
				boolean v17 = this.mHandler.hasEqualMessages(1, v16);
				if (v17 != 0) {
					boolean v18 = this.mHandler.sendMessageDelayed(v14, 10000);
					if (p2 == 1) {
						if (p2 != 0) {
							Object v20 = this.mOverrideConfigs.get(p1);
							if (v20 != 0) {
								Object v21 = this.mConfigs.get(p1);
								if (v20 != 0) {
									GameManagerService.disableCompatScale(p1);
									Message v29 = this.mHandler.obtainMessage(6);
									Integer v30 = Integer.valueOf(v6);
									Message.obj = v30;
									Integer v31 = Integer.valueOf(v6);
									boolean v32 = this.mHandler.hasEqualMessages(6, v31);
									if (v32 != 0) {
										boolean v33 = this.mHandler.sendMessage(v29);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setGameMode(String p1, int p2, int p3){
	boolean v2 = p0.isPackageGame(p1, p3);
	if (v2 != 0) {
		int v3 = Binder.getCallingPid();
		int v4 = Binder.getCallingUid();
		int v5 = ActivityManager.handleIncomingUser(v3, v4, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
		Integer v6 = Integer.valueOf(v5);
		boolean v7 = this.mSettings.containsKey(v6);
		if (v7 != 0) {
			Integer v8 = Integer.valueOf(v5);
			Object v9 = this.mSettings.get(v8);
			v9.setGameModeLocked(p1, p2);
			Message v11 = this.mHandler.obtainMessage(1);
			Integer v12 = Integer.valueOf(v5);
			Message.obj = v12;
			Integer v13 = Integer.valueOf(v5);
			boolean v14 = this.mHandler.hasEqualMessages(1, v13);
			if (v14 != 0) {
				boolean v15 = this.mHandler.sendMessageDelayed(v11, 10000);
				p0.updateInterventions(p1, p2, v5);
				Message v17 = this.mHandler.obtainMessage(6);
				Integer v18 = Integer.valueOf(v5);
				Message.obj = v18;
				Integer v19 = Integer.valueOf(v5);
				boolean v20 = this.mHandler.hasEqualMessages(6, v19);
				if (v20 != 0) {
					boolean v21 = this.mHandler.sendMessage(v17);
					return;
				}
			}
		}
	}
}

and the following sink code:
['ApplicationInfo v3 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, p3);\nint v6 = ActivityManager.handleIncomingUser(v4, v5, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");\nInteger v7 = Integer.valueOf(v6);\nboolean v8 = this.mSettings.containsKey(v7);\nObject v13 = this.mGameModes.put(p1, v12);', 'Message v14 = this.mHandler.obtainMessage(1);\nInteger v15 = Integer.valueOf(v6);\nMessage.obj = v15;\nboolean v18 = this.mHandler.sendMessageDelayed(v14, 10000);', 'Object v20 = this.mOverrideConfigs.get(p1);\nObject v21 = this.mConfigs.get(p1);\nGameManagerService.disableCompatScale(p1);\nMessage v29 = this.mHandler.obtainMessage(6);', 'boolean v2 = p0.isPackageGame(p1, p3);\nint v5 = ActivityManager.handleIncomingUser(v3, v4, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");\nv9.setGameModeLocked(p1, p2);\np0.updateInterventions(p1, p2, v5);']

The method setGameMode has the following similar APIs:

- API Name: runMaintenance()V in the following Class: Lcom.android.server.StorageManagerService with the following sink code entries:
  - Similarity: 0.8808539509773254, Code:
Message v3 = this.mHandler.obtainMessage(4, 0);
boolean v4 = this.mHandler.sendMessage(v3);
  - Access Control Level: SYS_OR_SIG

- API Name: unpairDevice(Ljava/lang/String;)V in the following Class: Lcom.android.server.adb.AdbService with the following sink code entries:
  - Similarity: 0.8703061938285828, Code:
Message v4 = Message.obtain(this.mHandler, 17, p1);
boolean v5 = this.mHandler.sendMessage(v4);
  - Access Control Level: SYS_OR_SIG

- API Name: getGameModeInfo(Ljava/lang/String;I)Landroid/app/GameModeInfo; in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.8649908304214478, Code:
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
int v12 = v11.getGameModeLocked(p1);
[I v22 = new [I(v21);
GameModeInfo v25 = new GameModeInfo(v7,v16);
  - Similarity: 0.8564482927322388, Code:
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
int v12 = v11.getGameModeLocked(p1);
[I v16 = new [I(0);
GameModeInfo v17 = new GameModeInfo(v7,v13);
  - Access Control Level: SYS_OR_SIG

- API Name: getGameMode(Ljava/lang/String;I)I in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.8451590538024902, Code:
int v3 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
Integer v10 = Integer.valueOf(v3);
boolean v11 = this.mSettings.containsKey(v10);
Object v13 = this.mSettings.get(v12);
int v14 = v13.getGameModeLocked(p1);
int v9 = v14;
return v9;
  - Access Control Level: SYS_OR_SIG

- API Name: setSaturationLevel(I)Z in the following Class: Lcom.android.server.display.color.ColorDisplayService$BinderService with the following sink code entries:
  - Similarity: 0.8285133242607117, Code:
Message v7 = this.mHandler.obtainMessage(4);
Message.arg1 = p1;
boolean v8 = this.mHandler.sendMessage(v7);
  - Access Control Level: SYS_OR_SIG

