The method isAngleEnabled in the following class Lcom.android.server.app.GameManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isAngleEnabled(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = ActivityManager.handleIncomingUser(v2, v3, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);
	if (ApplicationInfo.category != 0) {
		boolean v5 = 0;
		if (v5 != 0) {
			boolean v7 = 0;
			if (v7 == 0) {
				Integer v11 = Integer.valueOf(v4);
				boolean v12 = this.mSettings.containsKey(v11);
				if (v12 != 0) {
					Integer v13 = Integer.valueOf(v4);
					Object v14 = this.mSettings.get(v13);
					int v15 = v14.getGameModeLocked(p1);
					int v10 = v15;
					int v1 = v10;
					if (v1 != 0) {
						Object v16 = this.mConfigs.get(p1);
						if (v16 != 0) {
							GameManagerService$GamePackageConfiguration$GameModeConfiguration v17 = v16.getGameModeConfiguration(v1);
							if (v17 != 0) {
								boolean v18 = v17.getUseAngle();
								return v18;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isAngleEnabled(String p1, int p2){
	int v8 = GameManagerService.getGameModeFromSettings(p1, v4);
	int v1 = v8;
	if (v1 != 0) {
		Object v9 = this.mConfigs.get(p1);
		if (v9 != 0) {
			Integer v11 = Integer.valueOf(v1);
			Object v12 = this.mModeConfigs.get(v11);
			GameManagerService$GamePackageConfiguration$GameModeConfiguration v10 = v12;
			if (v10 != 0) {
				boolean v13 = this.mUseAngle;
				return v13;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isAngleEnabled(String p1, int p2){
	int v1 = p0.getGameMode(p1, p2);
	if (v1 != 0) {
		Object v2 = this.mConfigs.get(p1);
		if (v2 != 0) {
			GameManagerService$GamePackageConfiguration$GameModeConfiguration v3 = v2.getGameModeConfiguration(v1);
			if (v3 != 0) {
				boolean v4 = v3.getUseAngle();
				return v4;
			}
		}
	}
}

and the following sink code:
['int v1 = p0.getGameMode(p1, p2);\nObject v2 = this.mConfigs.get(p1);\nGameManagerService$GamePackageConfiguration$GameModeConfiguration v3 = v2.getGameModeConfiguration(v1);\nboolean v4 = v3.getUseAngle();\nreturn v4;', 'int v8 = GameManagerService.getGameModeFromSettings(p1, v4);\nObject v9 = this.mConfigs.get(p1);\nInteger v11 = Integer.valueOf(v1);\nObject v12 = this.mModeConfigs.get(v11);\nboolean v13 = this.mUseAngle;\nreturn v13;', 'Integer v13 = Integer.valueOf(v4);\nObject v14 = this.mSettings.get(v13);\nint v15 = v14.getGameModeLocked(p1);']

The method isAngleEnabled has the following similar APIs:

- API Name: getGameMode(Ljava/lang/String;I)I in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.8486267924308777, Code:
int v7 = p0.getGameModeFromSettings(p1, v3);
return v7;
  - Similarity: 0.841876208782196, Code:
int v3 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
Integer v10 = Integer.valueOf(v3);
boolean v11 = this.mSettings.containsKey(v10);
Object v13 = this.mSettings.get(v12);
int v14 = v13.getGameModeLocked(p1);
int v9 = v14;
return v9;
  - Access Control Level: SYS_OR_SIG

- API Name: getGameModeInfo(Ljava/lang/String;I)Landroid/app/GameModeInfo; in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.8426440954208374, Code:
boolean v5 = p0.isPackageGame(p1, v3);
int v6 = p0.getGameModeFromSettings(p1, v3);
[I v7 = p0.getAvailableGameModesUnchecked(p1);
GameModeInfo v8 = new GameModeInfo(v6,v7);
  - Similarity: 0.7396916747093201, Code:
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
int v12 = v11.getGameModeLocked(p1);
[I v22 = new [I(v21);
GameModeInfo v25 = new GameModeInfo(v7,v16);
  - Similarity: 0.7348669767379761, Code:
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
int v12 = v11.getGameModeLocked(p1);
[I v16 = new [I(0);
GameModeInfo v17 = new GameModeInfo(v7,v13);
  - Access Control Level: SYS_OR_SIG

- API Name: getAvailableGameModes(Ljava/lang/String;)[I in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.7945886254310608, Code:
Object v3 = this.mOverrideConfigs.get(p1);
Object v4 = this.mConfigs.get(p1);
int v6 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
int v7 = Integer.bitCount(v6);
[I v8 = new [I(v7);
return v2;
  - Similarity: 0.711768388748169, Code:
[I v2 = p0.getAvailableGameModesUnchecked(p1);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: setGameMode(Ljava/lang/String;II)V in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.7514554858207703, Code:
Object v20 = this.mOverrideConfigs.get(p1);
Object v21 = this.mConfigs.get(p1);
GameManagerService.disableCompatScale(p1);
Message v29 = this.mHandler.obtainMessage(6);
  - Similarity: 0.7511775493621826, Code:
ApplicationInfo v3 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, p3);
int v6 = ActivityManager.handleIncomingUser(v4, v5, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
Integer v7 = Integer.valueOf(v6);
boolean v8 = this.mSettings.containsKey(v7);
Object v13 = this.mGameModes.put(p1, v12);
  - Similarity: 0.7345145344734192, Code:
boolean v2 = p0.isPackageGame(p1, p3);
int v5 = ActivityManager.handleIncomingUser(v3, v4, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
v9.setGameModeLocked(p1, p2);
p0.updateInterventions(p1, p2, v5);
  - Access Control Level: SYS_OR_SIG

- API Name: getRefreshRateSwitchingType()I in the following Class: Lcom.android.server.display.DisplayManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7504817247390747, Code:
int v3 = this.mModeSwitchingType;
int v2 = v3;
return v2;
  - Similarity: 0.7238710522651672, Code:
int v3 = this.mDisplayModeDirector.getModeSwitchingType();
int v2 = v3;
return v2;
  - Access Control Level: NONE

