The method getAvailableGameModes in the following class Lcom.android.server.app.GameManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public [I getAvailableGameModes(String p1){
	Object v3 = this.mOverrideConfigs.get(p1);
	if (v3 != 0) {
		Object v4 = this.mConfigs.get(p1);
		if (v3 != 0) {
			int v6 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
			int v7 = Integer.bitCount(v6);
			[I v8 = new [I(v7);
			int v9 = Integer.highestOneBit(v6);
			int v10 = Integer.numberOfTrailingZeros(v9);
			if (0 > v10) {
				if (((v6 >> 0) & 1) == 0) {
					if ((0 + 1) > v10) {
						[I v5 = v8;
						[I v2 = v5;
						return v2;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public [I getAvailableGameModes(String p1){
	Object v3 = this.mOverrideConfigs.get(p1);
	if (v3 != 0) {
		Object v4 = this.mConfigs.get(p1);
		if (v3 != 0) {
			[I v5 = new [I(0);
			[I v2 = v5;
			return v2;
		}
	}
}


This is path 3 for the API with depth 0:
public [I getAvailableGameModes(String p1){
	[I v2 = p0.getAvailableGameModesUnchecked(p1);
	return v2;
}

and the following sink code:
['Object v3 = this.mOverrideConfigs.get(p1);\nObject v4 = this.mConfigs.get(p1);\nint v6 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();\nint v7 = Integer.bitCount(v6);\n[I v8 = new [I(v7);\nreturn v2;', '[I v2 = p0.getAvailableGameModesUnchecked(p1);\nreturn v2;', 'Object v3 = this.mOverrideConfigs.get(p1);\nObject v4 = this.mConfigs.get(p1);\n[I v5 = new [I(0);\n[I v2 = v5;\nreturn v2;']

The method getAvailableGameModes has the following similar APIs:

- API Name: isAngleEnabled(Ljava/lang/String;I)Z in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.7945886254310608, Code:
int v8 = GameManagerService.getGameModeFromSettings(p1, v4);
Object v9 = this.mConfigs.get(p1);
Integer v11 = Integer.valueOf(v1);
Object v12 = this.mModeConfigs.get(v11);
boolean v13 = this.mUseAngle;
return v13;
  - Similarity: 0.7467877268791199, Code:
Integer v13 = Integer.valueOf(v4);
Object v14 = this.mSettings.get(v13);
int v15 = v14.getGameModeLocked(p1);
  - Similarity: 0.746558427810669, Code:
int v1 = p0.getGameMode(p1, p2);
Object v2 = this.mConfigs.get(p1);
GameManagerService$GamePackageConfiguration$GameModeConfiguration v3 = v2.getGameModeConfiguration(v1);
boolean v4 = v3.getUseAngle();
return v4;
  - Access Control Level: SYS_OR_SIG

- API Name: setGameMode(Ljava/lang/String;II)V in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.790583610534668, Code:
Object v20 = this.mOverrideConfigs.get(p1);
Object v21 = this.mConfigs.get(p1);
GameManagerService.disableCompatScale(p1);
Message v29 = this.mHandler.obtainMessage(6);
  - Access Control Level: SYS_OR_SIG

- API Name: getGameMode(Ljava/lang/String;I)I in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.7736774682998657, Code:
int v7 = p0.getGameModeFromSettings(p1, v3);
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: getGameModeInfo(Ljava/lang/String;I)Landroid/app/GameModeInfo; in the following Class: Lcom.android.server.app.GameManagerService with the following sink code entries:
  - Similarity: 0.7513629198074341, Code:
boolean v5 = p0.isPackageGame(p1, v3);
int v6 = p0.getGameModeFromSettings(p1, v3);
[I v7 = p0.getAvailableGameModesUnchecked(p1);
GameModeInfo v8 = new GameModeInfo(v6,v7);
  - Access Control Level: SYS_OR_SIG

