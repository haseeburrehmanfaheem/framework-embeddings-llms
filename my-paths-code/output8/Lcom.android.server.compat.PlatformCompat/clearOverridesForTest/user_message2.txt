The method clearOverridesForTest has the following code snippet:

This is path 1 for the API with depth 2:
public void clearOverridesForTest(String p1){
	PackageManager v4 = this.mContext.getPackageManager();
	ApplicationInfo v5 = v4.getApplicationInfo(p1, 4194304);
	Long v6 = Long.valueOf(ApplicationInfo.longVersionCode);
	Long v3 = v6;
	Collection v7 = this.mChanges.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		Object v10 = v8.next();
		long v12 = v10.getId();
		OverrideAllowedState v13 = this.mOverrideValidator.getOverrideAllowedState(v12, p1);
		boolean v14 = v10.removePackageOverride(p1, v13, v3);
		boolean v11 = v14;
		boolean v15 = v8.hasNext();
		if (v15 == 0) {
			if ((0 | v11) == 0) {
				if (this.mOverridesFile == 0) {
					if (this.mBackupOverridesFile != 0) {
						Overrides v17 = new Overrides();
						List v19 = v17.getChangeOverrides();
						Collection v20 = this.mChanges.values();
						Iterator v21 = v20.iterator();
						boolean v22 = v21.hasNext();
						if (v22 == 0) {
							Object v23 = v21.next();
							ChangeOverrides v24 = v23.saveOverrides();
							if (v24 == 0) {
								boolean v25 = v19.add(v24);
								boolean v26 = v21.hasNext();
								if (v26 == 0) {
									boolean v27 = this.mOverridesFile.exists();
									if (v27 == 0) {
										boolean v28 = this.mBackupOverridesFile.exists();
										if (v28 == 0) {
											boolean v29 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
											if (v29 != 0) {
												boolean v30 = this.mOverridesFile.createNewFile();
												PrintWriter v31 = new PrintWriter(this.mOverridesFile);
												XmlWriter v33 = new XmlWriter(v31);
												XmlWriter.write(v33, v17);
												v31.close();
												boolean v37 = this.mBackupOverridesFile.delete();
												ChangeIdStateCache.invalidate();
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void clearOverridesForTest(String p1){
	Long v3 = CompatConfig.getVersionCodeOrNull(p1);
	Collection v4 = this.mChanges.values();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = CompatConfig.removeOverrideUnsafe(v7, p1, v3);
		boolean v9 = v5.hasNext();
		if (v9 == 0) {
			if ((0 | v8) == 0) {
				CompatConfig.saveOverrides();
				CompatConfig.invalidateCache();
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void clearOverridesForTest(String p1){
	this.mCompatConfig.removePackageOverrides(p1);
	return;
}

and the following sink code:
['PackageManager v4 = this.mContext.getPackageManager();\nApplicationInfo v5 = v4.getApplicationInfo(p1, 4194304);\nLong v6 = Long.valueOf(ApplicationInfo.longVersionCode);\nOverrides v17 = new Overrides();\nList v19 = v17.getChangeOverrides();\nPrintWriter v31 = new PrintWriter(this.mOverridesFile);\nXmlWriter v33 = new XmlWriter(v31);\nXmlWriter.write(v33, v17);', 'Long v3 = CompatConfig.getVersionCodeOrNull(p1);\nboolean v8 = CompatConfig.removeOverrideUnsafe(v7, p1, v3);\nCompatConfig.saveOverrides();\nCompatConfig.invalidateCache();', 'this.mCompatConfig.removePackageOverrides(p1);']

The method clearOverridesForTest has the following similar APIs:

- API Name: clearOverrideForTest(JLjava/lang/String;)Z with Similarity Score: 0.9575207233428955
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = CompatConfig.removeOverrideUnsafe(p1, p2);
CompatConfig.saveOverrides();
CompatConfig.invalidateCache();

- API Name: putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V with Similarity Score: 0.9237504005432129
  - Access Control Level: SYS_OR_SIG and the following code:
this.mCompatConfig.addPackageOverrides(p1, p2, 1);

