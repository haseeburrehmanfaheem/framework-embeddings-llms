This is path 1 for the API with depth 2:
public boolean isChangeEnabledByUid(long p1, int p2){
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	if (v3 == 0) {
		if (v3.length != 0) {
			if (0 >= v3.length) {
				int v4 = UserHandle.getUserId(p2);
				Object v8 = LocalServices.getService(PackageManagerInterna.class);
				int v9 = Process.myUid();
				ApplicationInfo v10 = v8.getApplicationInfo(v3[0], 0, v9, v4);
				ApplicationInfo v7 = v10;
				if (v7 != 0) {
					Long v12 = Long.valueOf(p1);
					Object v13 = this.mChanges.get(v12);
					if (v13 != 0) {
						boolean v14 = v13.willBeEnabled(v3[0]);
						boolean v11 = v14;
						boolean v5 = v11;
						if ((0 + 1) >= v3.length) {
							return (1 & v5);
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isChangeEnabledByUid(long p1, int p2){
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	if (v3 == 0) {
		if (v3.length != 0) {
			if (0 >= v3.length) {
				int v4 = UserHandle.getUserId(p2);
				ApplicationInfo v7 = PlatformCompat.getApplicationInfo(v3[0], v4);
				if (v7 != 0) {
					boolean v8 = this.mCompatConfig.willChangeBeEnabled(p1, v3[0]);
					boolean v5 = v8;
					if ((0 + 1) >= v3.length) {
						return (1 & v5);
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isChangeEnabledByUid(long p1, int p2){
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	if (v3 == 0) {
		if (v3.length != 0) {
			if (0 >= v3.length) {
				int v4 = UserHandle.getUserId(p2);
				boolean v5 = p0.isChangeEnabledByPackageName(p1, v3[0], v4);
				if ((0 + 1) >= v3.length) {
					return (1 & v5);
				}
			}
		}
	}
}
