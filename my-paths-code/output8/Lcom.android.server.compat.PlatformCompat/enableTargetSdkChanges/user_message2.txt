The method enableTargetSdkChanges in the following class Lcom.android.server.compat.PlatformCompat has the following code snippet:

This is path 1 for the API with depth 2:
public int enableTargetSdkChanges(String p1, int p2){
	LongArray v4 = new LongArray();
	Collection v6 = this.mChanges.values();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		int v10 = v9.getEnableSinceTargetSdk();
		if (v10 == p2) {
			long v11 = v9.getId();
			OverrideAllowedState v12 = this.mOverrideValidator.getOverrideAllowedState(v11, p1);
			if (OverrideAllowedState.state != 0) {
				long v13 = v9.getId();
				v4.add(v13);
				boolean v15 = v7.hasNext();
				if (v15 == 0) {
					[J v16 = v4.toArray();
					[J v3 = v16;
					if (0 >= v3.length) {
						PackageOverride$Builder v17 = new PackageOverride$Builder();
						this.mEnabled = 1;
						PackageOverride$Builder v19 = PackageOverride$Builder;
						if ((this.mMinVersionCode < this.mMaxVersionCode) > 0) {
							PackageOverride v21 = new PackageOverride(this.mMinVersionCode,this.mMaxVersionCode,this.mEnabled,0);
							PackageOverride v20 = v21;
							AtomicBoolean v24 = new AtomicBoolean(1);
							OverrideAllowedState v26 = this.mOverrideValidator.getOverrideAllowedState(v3[0], p1);
							v26.enforce(v3[0], p1);
							Long v28 = CompatConfig.getVersionCodeOrNull(p1);
							Long v29 = Long.valueOf(v3[0]);
							CompatConfig$$ExternalSyntheticLambda1 v30 = new CompatConfig$$ExternalSyntheticLambda1(v24,v3[0]);
							Object v32 = this.mChanges.computeIfAbsent(v29, v30);
							v32.addPackageOverride(p1, v20, v26, v28);
							CompatConfig.invalidateCache();
							boolean v35 = v24.get();
							boolean v23 = v35;
							if ((0 + 1) >= v3.length) {
								if ((0 | v23) == 0) {
									if (this.mOverridesFile == 0) {
										if (this.mBackupOverridesFile != 0) {
											Overrides v37 = new Overrides();
											List v39 = v37.getChangeOverrides();
											Collection v40 = this.mChanges.values();
											Iterator v41 = v40.iterator();
											boolean v42 = v41.hasNext();
											if (v42 == 0) {
												Object v43 = v41.next();
												ChangeOverrides v44 = v43.saveOverrides();
												if (v44 == 0) {
													boolean v45 = v39.add(v44);
													boolean v46 = v41.hasNext();
													if (v46 == 0) {
														boolean v47 = this.mOverridesFile.exists();
														if (v47 == 0) {
															boolean v48 = this.mBackupOverridesFile.exists();
															if (v48 == 0) {
																boolean v49 = this.mOverridesFile.delete();
																boolean v50 = this.mOverridesFile.createNewFile();
																PrintWriter v51 = new PrintWriter(this.mOverridesFile);
																XmlWriter v53 = new XmlWriter(v51);
																XmlWriter.write(v53, v37);
																v51.close();
																boolean v57 = this.mBackupOverridesFile.delete();
																ChangeIdStateCache.invalidate();
																int v2 = v3.length;
																int v73 = UserHandle.getAppId(v63);
																long v75 = Binder.clearCallingIdentity();
																IActivityManager v76 = ActivityManager.getService();
																if (v76 == 0) {
																	v76.killUid(v73, -1, "PlatformCompat overrides");
																	Binder.restoreCallingIdentity(v75);
																	return v2;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int enableTargetSdkChanges(String p1, int p2){
	[J v3 = CompatConfig.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	if (0 >= v3.length) {
		PackageOverride$Builder v4 = new PackageOverride$Builder();
		PackageOverride$Builder v6 = v4.setEnabled(1);
		PackageOverride v7 = v6.build();
		boolean v8 = CompatConfig.addOverrideUnsafe(v3[0], p1, v7);
		if ((0 + 1) >= v3.length) {
			if ((0 | v8) == 0) {
				CompatConfig.saveOverrides();
				CompatConfig.invalidateCache();
				int v2 = v3.length;
				int v24 = UserHandle.getAppId(v14);
				PlatformCompat.killUid(v24);
				return v2;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public int enableTargetSdkChanges(String p1, int p2){
	int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}

and the following sink code:
['LongArray v4 = new LongArray();\nint v10 = v9.getEnableSinceTargetSdk();\nif (v10 == p2) {\nOverrideAllowedState v12 = this.mOverrideValidator.getOverrideAllowedState(v11, p1);\nv4.add(v13);', 'PackageOverride$Builder v17 = new PackageOverride$Builder();\nthis.mEnabled = 1;\nPackageOverride v21 = new PackageOverride(this.mMinVersionCode,this.mMaxVersionCode,this.mEnabled,0);\nv26.enforce(v3[0], p1);', 'int v2 = CompatConfig.getAllowedChangesSinceTargetSdkForPackage(p1, p2);\nPackageOverride$Builder v4 = new PackageOverride$Builder();\nPackageOverride v7 = v6.build();\nboolean v8 = CompatConfig.addOverrideUnsafe(v3[0], p1, v7);', 'int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);\np0.killPackage(p1);']

The method enableTargetSdkChanges has the following similar APIs:

- API Name: disableTargetSdkChanges(Ljava/lang/String;I)I in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.9883806109428406, Code:
int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
p0.killPackage(p1);
  - Similarity: 0.9684888124465942, Code:
LongArray v4 = new LongArray();
int v10 = v9.getEnableSinceTargetSdk();
if (v10 == p2) {
long v11 = v9.getId();
OverrideAllowedState v12 = this.mOverrideValidator.getOverrideAllowedState(v11, p1);
v4.add(v13);
J v16 = v4.toArray();
  - Similarity: 0.919930636882782, Code:
[J v3 = CompatConfig.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
PackageOverride$Builder v4 = new PackageOverride$Builder();
PackageOverride$Builder v6 = v4.setEnabled(0);
PackageOverride v7 = v6.build();
boolean v8 = CompatConfig.addOverrideUnsafe(v3[0], p1, v7);
  - Access Control Level: SYS_OR_SIG

- API Name: clearOverrides(Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8316041231155396, Code:
this.mCompatConfig.removePackageOverrides(p1);
p0.killPackage(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8192338943481445, Code:
Set v20 = this.mChangeConfig.getDisabledSet();
PackageOverride v30 = new PackageOverride(this.mMinVersionCode,this.mMaxVersionCode,this.mEnabled,0);
Object v32 = v2.put(v25, v29);
CompatConfig.addPackageOverridesWithoutSaving(v34, p2, 0);
  - Similarity: 0.7898739576339722, Code:
Set v5 = this.mChangeConfig.getEnabledSet();
PackageOverride v15 = new PackageOverride(this.mMinVersionCode,this.mMaxVersionCode,this.mEnabled,0);
Object v17 = v2.put(v10, v14);
CompatConfig.addOverrideUnsafe(v44, p2, v45);
  - Access Control Level: SYS_OR_SIG

- API Name: setOverrides(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.7902376651763916, Code:
HashMap v2 = new HashMap();
Set v5 = this.mChangeConfig.getEnabledSet();
PackageOverride v15 = new PackageOverride(this.mMinVersionCode,this.mMaxVersionCode,this.mEnabled,0);
Object v17 = v2.put(v10, v14);
CompatibilityOverrideConfig v34 = new CompatibilityOverrideConfig(v2);
  - Similarity: 0.783153235912323, Code:
Set v20 = this.mChangeConfig.getDisabledSet();
PackageOverride v30 = new PackageOverride(this.mMinVersionCode,this.mMaxVersionCode,this.mEnabled,0);
Object v32 = v2.put(v25, v29);
  - Access Control Level: SYS_OR_SIG

- API Name: clearOverride(JLjava/lang/String;)Z in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.7887752056121826, Code:
boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
p0.killPackage(p2);
  - Access Control Level: SYS_OR_SIG

