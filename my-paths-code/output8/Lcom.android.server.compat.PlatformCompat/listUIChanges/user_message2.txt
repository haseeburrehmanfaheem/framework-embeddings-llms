The method listUIChanges has the following code snippet:

This is path 1 for the API with depth 2:
public CompatibilityChangeInfo listUIChanges(){
	int v4 = this.mChanges.size();
	CompatibilityChangeInfo v5 = new CompatibilityChangeInfo(v4);
	Collection v6 = this.mChanges.values();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		CompatibilityChangeInfo v10 = new CompatibilityChangeInfo(v9);
		boolean v12 = v7.hasNext();
		if (v12 == 0) {
			CompatibilityChangeInfo v3 = v5;
			CompatibilityChangeInfo v1 = v3;
			Stream v13 = Arrays.stream(v1);
			PlatformCompat$$ExternalSyntheticLambda0 v14 = new PlatformCompat$$ExternalSyntheticLambda0(p0);
			Stream v16 = v13.filter(v14);
			PlatformCompat$$ExternalSyntheticLambda1 v17 = new PlatformCompat$$ExternalSyntheticLambda1();
			Object v19 = v16.toArray(v17);
			return v19;
		}
	}
}


This is path 2 for the API with depth 1:
public CompatibilityChangeInfo listUIChanges(){
	CompatibilityChangeInfo v3 = this.mCompatConfig.dumpChanges();
	CompatibilityChangeInfo v1 = v3;
	Stream v4 = Arrays.stream(v1);
	PlatformCompat$$ExternalSyntheticLambda0 v5 = new PlatformCompat$$ExternalSyntheticLambda0(p0);
	Stream v7 = v4.filter(v5);
	PlatformCompat$$ExternalSyntheticLambda1 v8 = new PlatformCompat$$ExternalSyntheticLambda1();
	Object v10 = v7.toArray(v8);
	return v10;
}


This is path 3 for the API with depth 0:
public CompatibilityChangeInfo listUIChanges(){
	CompatibilityChangeInfo v1 = p0.listAllChanges();
	Stream v2 = Arrays.stream(v1);
	PlatformCompat$$ExternalSyntheticLambda0 v3 = new PlatformCompat$$ExternalSyntheticLambda0(p0);
	Stream v5 = v2.filter(v3);
	PlatformCompat$$ExternalSyntheticLambda1 v6 = new PlatformCompat$$ExternalSyntheticLambda1();
	Object v8 = v5.toArray(v6);
	return v8;
}

and the following sink code:
['CompatibilityChangeInfo v3 = this.mCompatConfig.dumpChanges();\nStream v4 = Arrays.stream(v1);\nPlatformCompat$$ExternalSyntheticLambda0 v5 = new PlatformCompat$$ExternalSyntheticLambda0(p0);\nStream v7 = v4.filter(v5);\nObject v10 = v7.toArray(new PlatformCompat$$ExternalSyntheticLambda1());', 'CompatibilityChangeInfo v1 = p0.listAllChanges();\nStream v2 = Arrays.stream(v1);\nPlatformCompat$$ExternalSyntheticLambda0 v3 = new PlatformCompat$$ExternalSyntheticLambda0(p0);\nStream v5 = v2.filter(v3);\nObject v8 = v5.toArray(new PlatformCompat$$ExternalSyntheticLambda1());', 'int v4 = this.mChanges.size();\nCompatibilityChangeInfo v5 = new CompatibilityChangeInfo(v4);\nStream v13 = Arrays.stream(v1);\nPlatformCompat$$ExternalSyntheticLambda0 v14 = new PlatformCompat$$ExternalSyntheticLambda0(p0);\nStream v16 = v13.filter(v14);\nObject v19 = v16.toArray(new PlatformCompat$$ExternalSyntheticLambda1());']

The method listUIChanges has the following similar APIs:

- API Name: listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; with Similarity Score: 0.8048173189163208
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = this.mChanges.size();
CompatibilityChangeInfo v4 = new CompatibilityChangeInfo(v3);
return v2;

- API Name: getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig; with Similarity Score: 0.7916720509529114
  - Access Control Level: SYS_OR_SIG and the following code:
Collection v7 = this.mChanges.values();
Iterator v8 = v7.iterator();
boolean v9 = v8.hasNext();
Object v10 = v8.next();
long v12 = v10.getId();
Long v13 = Long.valueOf(v12);
boolean v14 = v3.add(v13);
Compatibility$ChangeConfig v17 = new Compatibility$ChangeConfig(v3,v5);
CompatibilityChangeConfig v16 = new CompatibilityChangeConfig(v17);
return v16;

