The method clearOverrideForTest in the following class Lcom.android.server.compat.PlatformCompat has the following code snippet:

This is path 1 for the API with depth 2:
public boolean clearOverrideForTest(long p1, String p2){
	Long v4 = CompatConfig.getVersionCodeOrNull(p2);
	Long v5 = Long.valueOf(p1);
	Object v6 = this.mChanges.get(v5);
	if (v6 == 0) {
		boolean v7 = CompatConfig.removeOverrideUnsafe(v6, p2, v4);
		boolean v3 = v7;
		if (v3 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v9 = new Overrides();
					List v11 = v9.getChangeOverrides();
					Collection v12 = this.mChanges.values();
					Iterator v13 = v12.iterator();
					boolean v14 = v13.hasNext();
					if (v14 == 0) {
						Object v15 = v13.next();
						ChangeOverrides v16 = v15.saveOverrides();
						if (v16 == 0) {
							boolean v17 = v11.add(v16);
							boolean v18 = v13.hasNext();
							if (v18 == 0) {
								boolean v19 = this.mOverridesFile.exists();
								if (v19 == 0) {
									boolean v20 = this.mBackupOverridesFile.exists();
									if (v20 == 0) {
										boolean v21 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
										if (v21 != 0) {
											boolean v22 = this.mOverridesFile.createNewFile();
											PrintWriter v23 = new PrintWriter(this.mOverridesFile);
											XmlWriter v25 = new XmlWriter(v23);
											XmlWriter.write(v25, v9);
											v23.close();
											boolean v29 = this.mBackupOverridesFile.delete();
											ChangeIdStateCache.invalidate();
											boolean v2 = v3;
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean clearOverrideForTest(long p1, String p2){
	boolean v3 = CompatConfig.removeOverrideUnsafe(p1, p2);
	if (v3 == 0) {
		CompatConfig.saveOverrides();
		CompatConfig.invalidateCache();
		boolean v2 = v3;
		return v2;
	}
}


This is path 3 for the API with depth 0:
public boolean clearOverrideForTest(long p1, String p2){
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	return v2;
}

and the following sink code:
['Long v4 = CompatConfig.getVersionCodeOrNull(p2);\nObject v6 = this.mChanges.get(v5);\nOverrides v9 = new Overrides();\nList v11 = v9.getChangeOverrides();\nboolean v21 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);\nboolean v22 = this.mOverridesFile.createNewFile();\nPrintWriter v23 = new PrintWriter(this.mOverridesFile);\nXmlWriter v25 = new XmlWriter(v23);\nXmlWriter.write(v25, v9);', 'boolean v3 = CompatConfig.removeOverrideUnsafe(p1, p2);\nCompatConfig.saveOverrides();\nCompatConfig.invalidateCache();', 'boolean v2 = this.mCompatConfig.removeOverride(p1, p2);']

The method clearOverrideForTest has the following similar APIs:

- API Name: clearOverridesForTest(Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.9575207829475403, Code:
Long v3 = CompatConfig.getVersionCodeOrNull(p1);
boolean v8 = CompatConfig.removeOverrideUnsafe(v7, p1, v3);
CompatConfig.saveOverrides();
CompatConfig.invalidateCache();
  - Similarity: 0.8376591801643372, Code:
this.mCompatConfig.removePackageOverrides(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8853583335876465, Code:
Set v2 = CompatibilityOverrideConfig.overrides.keySet();
CompatConfig.addPackageOverridesWithoutSaving(p1, p2, 1);
CompatConfig.saveOverrides();
CompatConfig.invalidateCache();
  - Similarity: 0.8307321667671204, Code:
this.mCompatConfig.addPackageOverrides(p1, p2, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: clearOverride(JLjava/lang/String;)Z in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8708714246749878, Code:
boolean v3 = CompatConfig.removeOverrideUnsafe(p1, p2);
PlatformCompat.killUid(v19);
  - Similarity: 0.8532505631446838, Code:
boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
p0.killPackage(p2);
  - Access Control Level: SYS_OR_SIG

- API Name: clearOverrides(Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8550424575805664, Code:
PackageManager v4 = this.mContext.getPackageManager();
ApplicationInfo v5 = v4.getApplicationInfo(p1, 4194304);
Long v6 = Long.valueOf(ApplicationInfo.longVersionCode);
Collection v7 = this.mChanges.values();
Iterator v8 = v7.iterator();
Object v10 = v8.next();
long v12 = v10.getId();
OverrideAllowedState v13 = this.mOverrideValidator.getOverrideAllowedState(v12, p1);
boolean v14 = v10.removePackageOverride(p1, v13, v3);
Overrides v17 = new Overrides();
List v19 = v17.getChangeOverrides();
this.mOverridesFile.renameTo(this.mBackupOverridesFile);
this.mOverridesFile.createNewFile();
PrintWriter v31 = new PrintWriter(this.mOverridesFile);
XmlWriter v33 = new XmlWriter(v31);
XmlWriter.write(v33, v17);
  - Access Control Level: SYS_OR_SIG

- API Name: removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8463221192359924, Code:
Iterator v3 = CompatibilityOverridesToRemoveConfig.changeIds.iterator();
boolean v8 = this.mCompatConfig.isKnownChangeId(v6);
Long v11 = Long.valueOf(v9);
Object v12 = this.mChanges.get(v11);
boolean v23 = CompatConfig.removeOverrideUnsafe(v22, p2);
Overrides v26 = new Overrides();
List v28 = v26.getChangeOverrides();
PrintWriter v40 = new PrintWriter(this.mOverridesFile);
XmlWriter v42 = new XmlWriter(v40);
XmlWriter.write(v42, v26);
  - Access Control Level: SYS_OR_SIG

