The method clearOverride in the following class Lcom.android.server.compat.PlatformCompat has the following code snippet:

This is path 1 for the API with depth 2:
public boolean clearOverride(long p1, String p2){
	Long v4 = CompatConfig.getVersionCodeOrNull(p2);
	Long v5 = Long.valueOf(p1);
	Object v6 = this.mChanges.get(v5);
	if (v6 == 0) {
		boolean v7 = CompatConfig.removeOverrideUnsafe(v6, p2, v4);
		boolean v3 = v7;
		if (v3 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v9 = new Overrides();
					List v11 = v9.getChangeOverrides();
					Collection v12 = this.mChanges.values();
					Iterator v13 = v12.iterator();
					boolean v14 = v13.hasNext();
					if (v14 == 0) {
						Object v15 = v13.next();
						ChangeOverrides v16 = v15.saveOverrides();
						if (v16 == 0) {
							boolean v17 = v11.add(v16);
							boolean v18 = v13.hasNext();
							if (v18 == 0) {
								boolean v19 = this.mOverridesFile.exists();
								if (v19 == 0) {
									boolean v20 = this.mBackupOverridesFile.exists();
									if (v20 == 0) {
										boolean v21 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
										if (v21 != 0) {
											boolean v22 = this.mOverridesFile.createNewFile();
											PrintWriter v23 = new PrintWriter(this.mOverridesFile);
											XmlWriter v25 = new XmlWriter(v23);
											XmlWriter.write(v25, v9);
											v23.close();
											boolean v29 = this.mBackupOverridesFile.delete();
											ChangeIdStateCache.invalidate();
											boolean v2 = v3;
											int v45 = UserHandle.getAppId(v35);
											long v47 = Binder.clearCallingIdentity();
											IActivityManager v48 = ActivityManager.getService();
											if (v48 == 0) {
												v48.killUid(v45, -1, "PlatformCompat overrides");
												Binder.restoreCallingIdentity(v47);
												return v2;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean clearOverride(long p1, String p2){
	boolean v3 = CompatConfig.removeOverrideUnsafe(p1, p2);
	if (v3 == 0) {
		CompatConfig.saveOverrides();
		CompatConfig.invalidateCache();
		boolean v2 = v3;
		int v19 = UserHandle.getAppId(v9);
		PlatformCompat.killUid(v19);
		return v2;
	}
}


This is path 3 for the API with depth 0:
public boolean clearOverride(long p1, String p2){
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	p0.killPackage(p2);
	return v2;
}

and the following sink code:
['Long v4 = CompatConfig.getVersionCodeOrNull(p2);\nObject v6 = this.mChanges.get(v5);\nboolean v7 = CompatConfig.removeOverrideUnsafe(v6, p2, v4);\nIActivityManager v48 = ActivityManager.getService();\nv48.killUid(v45, -1, "PlatformCompat overrides");', 'boolean v3 = CompatConfig.removeOverrideUnsafe(p1, p2);\nPlatformCompat.killUid(v19);', 'boolean v2 = this.mCompatConfig.removeOverride(p1, p2);\np0.killPackage(p2);']

The method clearOverride has the following similar APIs:

- API Name: clearOverrides(Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.9391558170318604, Code:
this.mCompatConfig.removePackageOverrides(p1);
p0.killPackage(p1);
  - Similarity: 0.8724058270454407, Code:
Long v3 = CompatConfig.getVersionCodeOrNull(p1);
Collection v4 = this.mChanges.values();
Iterator v5 = v4.iterator();
Object v7 = v5.next();
boolean v8 = CompatConfig.removeOverrideUnsafe(v7, p1, v3);
CompatConfig.saveOverrides();
CompatConfig.invalidateCache();
int v25 = UserHandle.getAppId(v15);
PlatformCompat.killUid(v25);
  - Access Control Level: SYS_OR_SIG

- API Name: clearOverrideForTest(JLjava/lang/String;)Z in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8708714246749878, Code:
boolean v3 = CompatConfig.removeOverrideUnsafe(p1, p2);
CompatConfig.saveOverrides();
CompatConfig.invalidateCache();
  - Similarity: 0.8532505631446838, Code:
boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: clearOverridesForTest(Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.869753897190094, Code:
this.mCompatConfig.removePackageOverrides(p1);
  - Similarity: 0.8444578647613525, Code:
Long v3 = CompatConfig.getVersionCodeOrNull(p1);
boolean v8 = CompatConfig.removeOverrideUnsafe(v7, p1, v3);
CompatConfig.saveOverrides();
CompatConfig.invalidateCache();
  - Access Control Level: SYS_OR_SIG

- API Name: removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8357581496238708, Code:
p0.checkAllCompatOverridesAreOverridable(CompatibilityOverridesToRemoveConfig.changeIds);
this.mCompatConfig.removePackageOverrides(p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.83022540807724, Code:
this.mCompatConfig.addPackageOverrides(p1, p2, 1);
  - Access Control Level: SYS_OR_SIG

