The method isChangeEnabledByPackageName in the following class Lcom.android.server.compat.PlatformCompat has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	Object v4 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v3 = v4;
	int v5 = Process.myUid();
	ApplicationInfo v6 = v3.getApplicationInfo(p2, 0, v5, p3);
	ApplicationInfo v2 = v6;
	if (v2 != 0) {
		Long v8 = Long.valueOf(p1);
		Object v9 = this.mChanges.get(v8);
		if (v9 != 0) {
			if (p2 != 0) {
				Object v11 = this.mRawOverrides.get(p2);
				if (v11 == 0) {
					int v12 = v11.evaluateForAllVersions();
					if (v12 == 0) {
						if (v12 == 1) {
							if (v12 == 2) {
								boolean v13 = CompatChange.defaultValue();
								boolean v10 = v13;
								boolean v7 = v10;
								return v7;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	Object v3 = LocalServices.getService(PackageManagerInterna.class);
	int v4 = Process.myUid();
	ApplicationInfo v5 = v3.getApplicationInfo(p2, 0, v4, p3);
	ApplicationInfo v2 = v5;
	if (v2 != 0) {
		Long v7 = Long.valueOf(p1);
		Object v8 = this.mChanges.get(v7);
		if (v8 != 0) {
			boolean v9 = v8.willBeEnabled(p2);
			boolean v6 = v9;
			return v6;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	if (v2 != 0) {
		boolean v3 = this.mCompatConfig.willChangeBeEnabled(p1, p2);
		return v3;
	}
}

and the following sink code:
['ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);\nboolean v3 = this.mCompatConfig.willChangeBeEnabled(p1, p2);\nreturn v3;', 'Object v3 = LocalServices.getService(PackageManagerInterna.class);\nint v4 = Process.myUid();\nApplicationInfo v5 = v3.getApplicationInfo(p2, 0, v4, p3);\nLong v7 = Long.valueOf(p1);\nObject v8 = this.mChanges.get(v7);\nboolean v9 = v8.willBeEnabled(p2);\nreturn v6;', 'Object v4 = this.sLocalServiceObjects.get(PackageManagerInterna.class);\nint v5 = Process.myUid();\nApplicationInfo v6 = v3.getApplicationInfo(p2, 0, v5, p3);\nLong v8 = Long.valueOf(p1);\nObject v9 = this.mChanges.get(v8);\nboolean v13 = CompatChange.defaultValue();\nreturn v7;']

The method isChangeEnabledByPackageName has the following similar APIs:

- API Name: isChangeEnabledByUid(JI)Z in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.9022951722145081, Code:
boolean v1 = this.mPlatformCompat.isChangeEnabledByUid(p1, p2);
  - Similarity: 0.8845993280410767, Code:
String v4 = v3.getPackagesForUid(p2);
ApplicationInfo v8 = PlatformCompat.getApplicationInfo(v4[0], v5);
boolean v9 = this.mCompatConfig.willChangeBeEnabled(p1, v4[0]);
  - Similarity: 0.8577123880386353, Code:
String v4 = v3.getPackagesForUid(p2);
boolean v6 = PlatformCompat.isChangeEnabledByPackageName(p1, v4[0], v5);
  - Similarity: 0.826515793800354, Code:
String v3 = v2.getPackagesForUid(p2);
int v4 = UserHandle.getUserId(p2);
ApplicationInfo v10 = v8.getApplicationInfo(v3[0], 0, v9, v4);
Long v12 = Long.valueOf(p1);
Object v13 = this.mChanges.get(v12);
boolean v14 = v13.willBeEnabled(v3[0]);
return (1 & v5);
  - Similarity: 0.7764885425567627, Code:
String v3 = v2.getPackagesForUid(p2);
int v4 = UserHandle.getUserId(p2);
ApplicationInfo v7 = PlatformCompat.getApplicationInfo(v3[0], v4);
boolean v8 = this.mCompatConfig.willChangeBeEnabled(p1, v3[0]);
return (1 & v5);
  - Access Control Level: SYS_OR_SIG

- API Name: reportChangeByPackageName(JLjava/lang/String;I)V in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.8602358102798462, Code:
this.mPlatformCompat.reportChangeByPackageName(p1, p2, p3);
  - Similarity: 0.8195090889930725, Code:
ApplicationInfo v3 = PlatformCompat.getApplicationInfo(p2, p3);
if (v3 == 0) {
PlatformCompat.reportChangeInternal(p1, ApplicationInfo.uid, 3);
  - Access Control Level: SYS_OR_SIG

- API Name: getPackageScreenCompatMode(Ljava/lang/String;)I in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.817402720451355, Code:
ApplicationInfo v8 = v7.getApplicationInfo(p1, 0, 0);
int v9 = CompatModePackages.computeCompatModeLocked(v8);
int v6 = v9;
return v6;
  - Similarity: 0.7789050936698914, Code:
ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0);
CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(v10);
boolean v13 = v12.alwaysSupportsScreen();
boolean v14 = v12.neverSupportsScreen();
boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(v10);
int v11 = v15;
int v7 = v11;
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: isChangeEnabled(JLandroid/content/pm/ApplicationInfo;)Z in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.800609290599823, Code:
boolean v4 = this.mCompatConfig.isChangeEnabled(p1, p2);
if (p2 == 0) {
if (v3 == 0) {
this.mChangeReporter.reportChange(ApplicationInfo.uid, p1, 1);
return v2;
  - Similarity: 0.7859482169151306, Code:
boolean v3 = PlatformCompat.isChangeEnabledInternalNoLogging(p1, p2);
if (p2 == 0) {
if (v3 == 0) {
PlatformCompat.reportChangeInternal(p1, ApplicationInfo.uid, 1);
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: setFrontActivityScreenCompatMode(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7710369229316711, Code:
CompatibilityInfo v10 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
boolean v11 = v10.alwaysSupportsScreen();
if (v11 == 0) {
boolean v12 = v10.neverSupportsScreen();
  - Access Control Level: SYS_OR_SIG

