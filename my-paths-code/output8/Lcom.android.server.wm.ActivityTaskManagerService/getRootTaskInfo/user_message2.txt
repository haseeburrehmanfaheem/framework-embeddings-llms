The method getRootTaskInfo in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ((v8 + -1) < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt((v8 + -1));
		Task v10 = v9.getRootTask(p1, p2);
		if (v10 == 0) {
			if (((v8 + -1) + -1) < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt(((v8 + -1) + -1));
				Task v12 = v11.getRootTask(p1, p2);
				if (v12 == 0) {
					Task v7 = v12;
					if (v7 == 0) {
						ActivityTaskManager$RootTaskInfo v14 = new ActivityTaskManager$RootTaskInfo();
						v7.fillTaskInfo(v14);
						DisplayContent v17 = v7.getDisplayContent();
						if (v17 != 0) {
							[I v18 = new [I(1);
							[Z v19 = new [Z(1);
							RootWindowContainer$$ExternalSyntheticLambda21 v20 = new RootWindowContainer$$ExternalSyntheticLambda21(v7,v19,v18);
							boolean v22 = v17.forAllRootTasks(v20, 0);
							if (v19[0] == 0) {
								ActivityTaskManager$RootTaskInfo.position = -1;
								boolean v23 = v7.shouldBeVisible(0);
								ActivityTaskManager$RootTaskInfo.visible = v23;
								v7.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
								int v25 = v7.getDescendantTaskCount();
								[I v26 = new [I(v25);
								ActivityTaskManager$RootTaskInfo.childTaskIds = v26;
								String v27 = new String(v25);
								ActivityTaskManager$RootTaskInfo.childTaskNames = v27;
								Rect v28 = new Rect(v25);
								ActivityTaskManager$RootTaskInfo.childTaskBounds = v28;
								[I v29 = new [I(v25);
								ActivityTaskManager$RootTaskInfo.childTaskUserIds = v29;
								[I v30 = new [I(1);
								RootWindowContainer$$ExternalSyntheticLambda22 v31 = new RootWindowContainer$$ExternalSyntheticLambda22();
								ArgumentPlaceholder v33 = PooledLambda.__(Tas.class);
								PooledConsumer v34 = PooledLambda.obtainConsumer(v31, v33, v14, v30);
								v7.forAllLeafTasks(v34, 0);
								v34.recycle();
								ActivityRecord v37 = v7.topRunningActivity();
								if (v37 == 0) {
									ComponentName v38 = ActivityRecord.intent.getComponent();
									ActivityTaskManager$RootTaskInfo.topActivity = 0;
									ActivityTaskManager$RootTaskInfo v13 = v14;
									ActivityTaskManager$RootTaskInfo v6 = v13;
									Binder.restoreCallingIdentity(v2);
									return v6;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v6 = RootWindowContainer.getRootTask(p1, p2);
	if (v6 == 0) {
		ActivityTaskManager$RootTaskInfo v7 = RootWindowContainer.getRootTaskInfo(v6);
		ActivityTaskManager$RootTaskInfo v5 = v7;
		this.sThreadPriorityBooster.reset();
		Binder.restoreCallingIdentity(v2);
		return v5;
	}
}


This is path 3 for the API with depth 0:
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}

and the following sink code:
['Task v10 = v9.getRootTask(p1, p2);\nActivityTaskManager$RootTaskInfo v14 = new ActivityTaskManager$RootTaskInfo();\nv7.fillTaskInfo(v14);\nreturn v6;', 'Task v6 = RootWindowContainer.getRootTask(p1, p2);\nActivityTaskManager$RootTaskInfo v7 = RootWindowContainer.getRootTaskInfo(v6);\nreturn v5;', 'ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);\nreturn v4;']

The method getRootTaskInfo has the following similar APIs:

- API Name: getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.9889705181121826, Code:
ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
return v4;
  - Access Control Level: SYS_OR_SIG

- API Name: getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8956268429756165, Code:
ActivityTaskManager$RootTaskInfo v21 = new ActivityTaskManager$RootTaskInfo();
v14.fillTaskInfo(v21);
DisplayContent v24 = v14.getDisplayContent();
return v20;
  - Access Control Level: SYS_OR_SIG

- API Name: getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8636813163757324, Code:
Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
if (v3 == 0) {
ActivityManager$TaskDescription v4 = v3.getTaskDescription();
return v4;
  - Similarity: 0.8604809045791626, Code:
Task v5 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
if (v4 == 0) {
ActivityManager$TaskDescription v6 = this.mTaskDescription;
return v6;
  - Access Control Level: SYS_OR_SIG

- API Name: setFocusedRootTask(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8618428111076355, Code:
Task v7 = this.mRootWindowContainer.getRootTask(p1);
ActivityRecord v8 = v7.topRunningActivity();
  - Similarity: 0.8204934597015381, Code:
WindowContainer v12 = RootWindowContainer.getChildAt((v11 + -1));
Task v13 = v12.getRootTask(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.835581362247467, Code:
Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
return v6;
  - Access Control Level: SYS_OR_SIG

