The method moveRootTaskToDisplay has the following code snippet:

This is path 1 for the API with depth 2:
public void moveRootTaskToDisplay(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
		Object v6 = new Object(2);
		Long v7 = Long.valueOf(p1);
		Long v8 = Long.valueOf(p2);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v11 = new ProtoLogImpl(v12,1048576,v14);
			File v12 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v14 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v11;
			ProtoLogImpl v10 = this.sServiceInstance;
			boolean v18 = ProtoLogGroup.WM_DEBUG_TASKS.isLogToProto();
			if (v18 == 0) {
				BaseProtoLogImpl.logToProto(-1419762046, 5, v6);
				boolean v20 = ProtoLogGroup.WM_DEBUG_TASKS.isLogToLogcat();
				if (v20 == 0) {
					String v21 = ProtoLogGroup.WM_DEBUG_TASKS.getTag();
					BaseProtoLogImpl.logToLogcat(v21, BaseProtoLogImpl$LogLevel.DEBUG, -1419762046, 0, v6);
					DisplayContent v25 = RootWindowContainer.getDisplayContent(p2);
					if (v25 == 0) {
						if (this.mDisplayManager != 0) {
							Display v26 = this.mDisplayManager.getDisplay(p2);
							if (v26 != 0) {
								DisplayContent v27 = new DisplayContent(v26,RootWindowContainer);
								RootWindowContainer.addChild(v27, -2147483648);
								DisplayContent v24 = v27;
								if (v24 == 0) {
									TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
									TaskDisplayArea v30 = v31;
									Task v33 = RootWindowContainer.getRootTask(p1);
									if (v33 == 0) {
										TaskDisplayArea v34 = v33.getDisplayArea();
										if (v34 == 0) {
											if (v30 == 0) {
												if (v34 == v30) {
													v33.reparent(v30, 1);
													v33.resumeNextFocusAfterReparent();
													Binder.restoreCallingIdentity(v5);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void moveRootTaskToDisplay(int p1, int p2){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
		Object v5 = new Object(2);
		Long v6 = Long.valueOf(p1);
		Long v7 = Long.valueOf(p2);
		ProtoLogImpl v9 = ProtoLogImpl.getSingleInstance();
		v9.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v5);
		DisplayContent v12 = RootWindowContainer.getDisplayContentOrCreate(p2);
		if (v12 == 0) {
			TaskDisplayArea v13 = v12.getDefaultTaskDisplayArea();
			RootWindowContainer.moveRootTaskToTaskDisplayArea(p1, v13, 1);
			Binder.restoreCallingIdentity(v4);
			this.sThreadPriorityBooster.reset();
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
		Object v4 = new Object(2);
		Long v5 = Long.valueOf(p1);
		Long v6 = Long.valueOf(p2);
		ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v4);
		this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
		Binder.restoreCallingIdentity(v3);
		WindowManagerService.resetPriorityAfterLockedSection();
		return;
	}
}

and the following sink code:
['Display v26 = this.mDisplayManager.getDisplay(p2);\nDisplayContent v27 = new DisplayContent(v26,RootWindowContainer);\nRootWindowContainer.addChild(v27, -2147483648);', 'Task v33 = RootWindowContainer.getRootTask(p1);\nv33.reparent(v30, 1);\nv33.resumeNextFocusAfterReparent();', 'DisplayContent v12 = RootWindowContainer.getDisplayContentOrCreate(p2);\nRootWindowContainer.moveRootTaskToTaskDisplayArea(p1, v13, 1);', 'this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);']

The method moveRootTaskToDisplay has the following similar APIs:

- API Name: setFocusedRootTask(I)V with Similarity Score: 0.8131540417671204
  - Access Control Level: SYS_OR_SIG and the following code:
WindowContainer v12 = RootWindowContainer.getChildAt((v11 + -1));
Task v13 = v12.getRootTask(p1);

- API Name: getTaskBounds(I)Landroid/graphics/Rect; with Similarity Score: 0.8108700513839722
  - Access Control Level: SYS_OR_SIG and the following code:
Task v8 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
Rect v10 = v7.getBounds();
v3.set(v10);
return v3;

