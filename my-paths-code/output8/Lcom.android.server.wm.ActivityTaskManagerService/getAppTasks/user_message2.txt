The method getAppTasks in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public List getAppTasks(String p1){
	if (v3 == 0) {
		int v4 = Binder.getCallingUid();
		long v6 = Binder.clearCallingIdentity();
		this.sThreadPriorityBooster.boost();
		ArrayList v10 = new ArrayList();
		int v12 = this.mTasks.size();
		if (0 >= v12) {
			Object v13 = this.mTasks.get(0);
			if (Task.effectiveUid == v4) {
				Intent v14 = v13.getBaseIntent();
				if (v14 == 0) {
					ComponentName v15 = v14.getComponent();
					String v16 = v15.getPackageName();
					boolean v17 = p1.equals(v16);
					if (v17 != 0) {
						if ((0 + 1) >= v12) {
							ArrayList v9 = v10;
							this.sThreadPriorityBooster.reset();
							Binder.restoreCallingIdentity(v6);
							List v5 = v9;
							return v5;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getAppTasks(String p1){
	if (v3 == 0) {
		int v4 = Binder.getCallingUid();
		long v6 = Binder.clearCallingIdentity();
		WindowManagerService.boostPriorityForLockedSection();
		ArrayList v8 = this.mRecentTasks.getAppTasksList(v4, p1);
		WindowManagerService.resetPriorityAfterLockedSection();
		Binder.restoreCallingIdentity(v6);
		List v5 = v8;
		return v5;
	}
}


This is path 3 for the API with depth 0:
public List getAppTasks(String p1){
	p0.assertPackageMatchesCallingUid(p1);
	int v2 = Binder.getCallingUid();
	List v3 = p0.getAppTasks(p1, v2);
	return v3;
}

and the following sink code:
['ArrayList v8 = this.mRecentTasks.getAppTasksList(v4, p1);\nList v5 = v8;\nreturn v5;', 'List v3 = p0.getAppTasks(p1, v2);\nreturn v3;']

The method getAppTasks has the following similar APIs:

- API Name: addAppTask(Landroid/os/IBinder;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;Landroid/graphics/Bitmap;)I in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8485564589500427, Code:
boolean v27 = this.mRecentTasks.addToBottom(v26);
v14.removeChild(v26, "addAppTask");
  - Access Control Level: NONE

- API Name: removeAllVisibleRecentTasks()V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7993953824043274, Code:
RecentTasks v6 = p0.getRecentTasks();
int v7 = this.mAmInternal.getCurrentUserId();
ArraySet v10 = new ArraySet();
Object v29 = this.mTasks.remove((v16 - 1));
this.mTaskNotificationController.notifyTaskListUpdated();
  - Similarity: 0.7817624807357788, Code:
RecentTasks v4 = p0.getRecentTasks();
int v5 = this.mAmInternal.getCurrentUserId();
v4.removeAllVisibleTasks(v5);
  - Access Control Level: SYS_OR_SIG

- API Name: getRecentTasks(III)Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.780194103717804, Code:
int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);
ArrayList v24 = RecentTasks.getRecentTasksImpl(p1, p2, v6, v3, v1);
ParceledListSlice v23 = new ParceledListSlice(v24);
return v22;
  - Similarity: 0.7800655961036682, Code:
int v3 = p0.handleIncomingUser(v2, v1, p3, "getRecentTasks");
ParceledListSlice v7 = this.mRecentTasks.getRecentTasks(p1, p2, v5, v3, v1);
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: getAllRootTaskInfosOnDisplay(I)Ljava/util/List; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7568207383155823, Code:
ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
return v4;
  - Access Control Level: SYS_OR_SIG

- API Name: getAllRootTaskInfos()Ljava/util/List; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7314012050628662, Code:
ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
return v4;
  - Access Control Level: SYS_OR_SIG

