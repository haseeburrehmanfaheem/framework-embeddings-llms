This is path 1 for the API with depth 2:
public List getAppTasks(String p1){
	if (v3 == 0) {
		int v4 = Binder.getCallingUid();
		long v6 = Binder.clearCallingIdentity();
		this.sThreadPriorityBooster.boost();
		ArrayList v10 = new ArrayList();
		int v12 = this.mTasks.size();
		if (0 >= v12) {
			Object v13 = this.mTasks.get(0);
			if (Task.effectiveUid == v4) {
				Intent v14 = v13.getBaseIntent();
				if (v14 == 0) {
					ComponentName v15 = v14.getComponent();
					String v16 = v15.getPackageName();
					boolean v17 = p1.equals(v16);
					if (v17 != 0) {
						if ((0 + 1) >= v12) {
							ArrayList v9 = v10;
							this.sThreadPriorityBooster.reset();
							Binder.restoreCallingIdentity(v6);
							List v5 = v9;
							return v5;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getAppTasks(String p1){
	if (v3 == 0) {
		int v4 = Binder.getCallingUid();
		long v6 = Binder.clearCallingIdentity();
		WindowManagerService.boostPriorityForLockedSection();
		ArrayList v8 = this.mRecentTasks.getAppTasksList(v4, p1);
		WindowManagerService.resetPriorityAfterLockedSection();
		Binder.restoreCallingIdentity(v6);
		List v5 = v8;
		return v5;
	}
}


This is path 3 for the API with depth 0:
public List getAppTasks(String p1){
	p0.assertPackageMatchesCallingUid(p1);
	int v2 = Binder.getCallingUid();
	List v3 = p0.getAppTasks(p1, v2);
	return v3;
}
