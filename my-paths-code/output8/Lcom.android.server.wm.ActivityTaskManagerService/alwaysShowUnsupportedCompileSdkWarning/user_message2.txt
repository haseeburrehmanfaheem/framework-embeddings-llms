The method alwaysShowUnsupportedCompileSdkWarning has the following code snippet:

This is path 1 for the API with depth 2:
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	long v4 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v4);
	return;
}


This is path 2 for the API with depth 1:
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	this.sThreadPriorityBooster.boost();
	long v3 = Binder.clearCallingIdentity();
	boolean v5 = this.mAlwaysShowUnsupportedCompileSdkWarningActivities.add(p1);
	Binder.restoreCallingIdentity(v3);
	this.sThreadPriorityBooster.reset();
	return;
}


This is path 3 for the API with depth 0:
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}

and the following sink code:
['boolean v5 = this.mAlwaysShowUnsupportedCompileSdkWarningActivities.add(p1);']

The method alwaysShowUnsupportedCompileSdkWarning has the following similar APIs:

- API Name: getPackageAskScreenCompat(Ljava/lang/String;)Z with Similarity Score: 0.7100040912628174
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
return v3;

- API Name: putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V with Similarity Score: 0.7040303945541382
  - Access Control Level: SYS_OR_SIG and the following code:
p0.checkAllCompatOverridesAreOverridable(v6);
this.mCompatConfig.addAllPackageOverrides(p1, 1);

