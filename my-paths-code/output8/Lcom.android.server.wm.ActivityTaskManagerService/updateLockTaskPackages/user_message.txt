This is path 1 for the API with depth 2:
public void updateLockTaskPackages(int p1, String p2){
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v6 = Arrays.toString(p2);
		String v7 = String.valueOf(v6);
		Object v8 = new Object(2);
		Long v9 = Long.valueOf(p1);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
			File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v12;
			ProtoLogImpl v11 = this.sServiceInstance;
			boolean v19 = ProtoLogGroup.WM_DEBUG_LOCKTASK.isLogToProto();
			if (v19 == 0) {
				BaseProtoLogImpl.logToProto(715749922, 1, v8);
				boolean v21 = ProtoLogGroup.WM_DEBUG_LOCKTASK.isLogToLogcat();
				if (v21 == 0) {
					String v22 = ProtoLogGroup.WM_DEBUG_LOCKTASK.getTag();
					BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, 715749922, 0, v8);
					LockTaskController v24 = p0.getLockTaskController();
					this.mLockTaskPackages.put(p1, p2);
					int v27 = this.mLockTaskModeTasks.size();
					if ((v27 - 1) < 0) {
						Object v28 = this.mLockTaskModeTasks.get((v27 - 1));
						if (Task.mLockTaskAuth == 2) {
							if (Task.mLockTaskAuth != 3) {
								ActivityRecord v30 = Task.getRootActivity();
								Task.setLockTaskAuth(v30);
								if (Task.mLockTaskAuth == 2) {
									if (Task.mLockTaskAuth != 3) {
										if (this.mLockTaskModeState != 1) {
											if (Task.mUserId != p1) {
												if (((v27 - 1) + -1) < 0) {
													LockTaskController$$ExternalSyntheticLambda0 v32 = new LockTaskController$$ExternalSyntheticLambda0();
													ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v32);
													int v36 = RootWindowContainer.getChildCount();
													if ((v36 + -1) < 0) {
														WindowContainer v37 = RootWindowContainer.getChildAt((v36 + -1));
														ActivityRecord v38 = v37.topRunningActivity();
														if (v38 == 0) {
															if (((v36 + -1) + -1) < 0) {
																WindowContainer v39 = RootWindowContainer.getChildAt(((v36 + -1) + -1));
																ActivityRecord v40 = v39.topRunningActivity();
																if (v40 == 0) {
																	ActivityRecord v35 = v40;
																	if (v35 == 0) {
																		Task v41 = this.task;
																		boolean v42 = this.mLockTaskModeTasks.isEmpty();
																		if (v42 == 0) {
																			if (1 == 0) {
																				return;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void updateLockTaskPackages(int p1, String p2){
	this.sThreadPriorityBooster.boost();
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v5 = Arrays.toString(p2);
		String v6 = String.valueOf(v5);
		Object v7 = new Object(2);
		Long v8 = Long.valueOf(p1);
		ProtoLogImpl v10 = ProtoLogImpl.getSingleInstance();
		v10.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v7);
		LockTaskController v12 = this.mLockTaskController;
		this.mLockTaskPackages.put(p1, p2);
		int v15 = this.mLockTaskModeTasks.size();
		if ((v15 - 1) < 0) {
			Object v16 = this.mLockTaskModeTasks.get((v15 - 1));
			if (Task.mLockTaskAuth == 2) {
				if (Task.mLockTaskAuth != 3) {
					v16.setLockTaskAuth();
					if (Task.mLockTaskAuth == 2) {
						if (Task.mLockTaskAuth != 3) {
							if (this.mLockTaskModeState != 1) {
								if (Task.mUserId != p1) {
									if (0 == 0) {
										if (((v15 - 1) + -1) < 0) {
											LockTaskController$$ExternalSyntheticLambda0 v18 = new LockTaskController$$ExternalSyntheticLambda0();
											ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v18);
											ActivityRecord v21 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
											if (v21 == 0) {
												boolean v22 = this.mLockTaskModeTasks.isEmpty();
												if (v22 == 0) {
													if (getTask() == 0) {
														if (1 == 0) {
															this.sThreadPriorityBooster.reset();
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v4 = Arrays.toString(p2);
		String v5 = String.valueOf(v4);
		Object v6 = new Object(2);
		Long v7 = Long.valueOf(p1);
		ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v6);
		LockTaskController v9 = p0.getLockTaskController();
		v9.updateLockTaskPackages(p1, p2);
		WindowManagerService.resetPriorityAfterLockedSection();
		return;
	}
}
