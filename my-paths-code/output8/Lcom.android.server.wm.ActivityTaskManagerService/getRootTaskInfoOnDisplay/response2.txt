To determine the access control level for the `getRootTaskInfoOnDisplay` method, let's analyze the provided information:

1. **Code Snippets**: The method has three different code paths (depths 0, 1, and 2) that ultimately lead to retrieving task information related to the display. All paths involve interactions with system-level components such as `RootWindowContainer`, `DisplayContent`, and `Task`, which are part of the Android system's window and activity management.

2. **Sink Code**: The sink code provided directly calls `getRootTaskInfo` on `mRootWindowContainer`, which is similar to how other paths in `getRootTaskInfoOnDisplay` operate, by interacting with system components to fetch task information.

3. **Similar APIs**:
   - Two similar APIs are mentioned, both named `getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;`, with high similarity scores. Both of these APIs have an access control level of `SYS_OR_SIG`.
   - The reason for this access control level in the similar APIs is likely due to their interaction with sensitive system components and information (e.g., task details, display content), which requires either system or signature-level permissions to access.

Given these points:

- **Interaction with System Components**: All paths of `getRootTaskInfoOnDisplay` interact closely with system-level components like `RootWindowContainer`, indicating that the method deals with sensitive system information.
  
- **Similarity with Other APIs**: The high similarity scores and identical access control levels (`SYS_OR_SIG`) of the provided similar APIs suggest that `getRootTaskInfoOnDisplay` likely requires a comparable level of access control due to its similar functionality and interaction with system components.

Therefore, considering the method's interaction with sensitive system information and its similarity to other APIs with a `SYS_OR_SIG` access control level, it is reasonable to conclude that `getRootTaskInfoOnDisplay` should also have an access control level of `SYS_OR_SIG`.

```json
{
  "access_control_level": "SYS_OR_SIG"
}
```