Based on the provided information and similar APIs with their ground truth access control levels, I will make an informed decision to assign an access control level to the `getRootTaskInfoOnDisplay` API.

The `getRootTaskInfoOnDisplay` API is used to retrieve information about a root task on a specific display. The API has three different paths with varying depths, but all of them ultimately call the `getRootTaskInfo` method on the `RootWindowContainer` object.

Looking at the similar APIs provided, we can see that:

* `getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;` has an access control level of `SYS_OR_SIG`.
* `getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;` has an access control level of `SYS_OR_SIG`.
* `getAllRootTaskInfosOnDisplay(I)Ljava/util/List;` has an access control level of `SYS_OR_SIG`.
* `setFocusedRootTask(I)V` has an access control level of `SYS_OR_SIG`.
* `getAllRootTaskInfos()Ljava/util/List;` has an access control level of `SYS_OR_SIG`.

All of these similar APIs have an access control level of `SYS_OR_SIG`, which suggests that they require a system or signature-level permission to access the task information.

Given this information, it is reasonable to conclude that the `getRootTaskInfoOnDisplay` API should also have an access control level of `SYS_OR_SIG`, as it provides similar functionality and interacts with the same sinks as the other APIs.

Therefore, the final access control level for the `getRootTaskInfoOnDisplay` API is:

```json
{
  "access_control_level": "SYS_OR_SIG"
}
```