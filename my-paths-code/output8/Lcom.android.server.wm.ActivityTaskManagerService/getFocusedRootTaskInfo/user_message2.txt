The method getFocusedRootTaskInfo in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ((v8 + -1) < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt((v8 + -1));
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			if (((v8 + -1) + -1) < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt(((v8 + -1) + -1));
				Task v12 = v11.getFocusedRootTask();
				if (v12 == 0) {
					Task v7 = v12;
					Task v6 = v7;
					if (v6 == 0) {
						int v15 = RootWindowContainer.getChildCount();
						if ((v15 + -1) < 0) {
							WindowContainer v16 = RootWindowContainer.getChildAt((v15 + -1));
							Task v17 = v16.getRootTask(Task.mTaskId);
							if (v17 == 0) {
								if (((v15 + -1) + -1) < 0) {
									WindowContainer v18 = RootWindowContainer.getChildAt(((v15 + -1) + -1));
									Task v19 = v18.getRootTask(Task.mTaskId);
									if (v19 == 0) {
										Task v14 = v19;
										if (v14 == 0) {
											ActivityTaskManager$RootTaskInfo v21 = new ActivityTaskManager$RootTaskInfo();
											v14.fillTaskInfo(v21);
											DisplayContent v24 = v14.getDisplayContent();
											if (v24 != 0) {
												[I v25 = new [I(1);
												[Z v26 = new [Z(1);
												RootWindowContainer$$ExternalSyntheticLambda21 v27 = new RootWindowContainer$$ExternalSyntheticLambda21(v14,v26,v25);
												boolean v29 = v24.forAllRootTasks(v27, 0);
												if (v26[0] == 0) {
													ActivityTaskManager$RootTaskInfo.position = -1;
													boolean v30 = v14.shouldBeVisible(0);
													ActivityTaskManager$RootTaskInfo.visible = v30;
													v14.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
													int v32 = v14.getDescendantTaskCount();
													[I v33 = new [I(v32);
													ActivityTaskManager$RootTaskInfo.childTaskIds = v33;
													String v34 = new String(v32);
													ActivityTaskManager$RootTaskInfo.childTaskNames = v34;
													Rect v35 = new Rect(v32);
													ActivityTaskManager$RootTaskInfo.childTaskBounds = v35;
													[I v36 = new [I(v32);
													ActivityTaskManager$RootTaskInfo.childTaskUserIds = v36;
													[I v37 = new [I(1);
													RootWindowContainer$$ExternalSyntheticLambda22 v38 = new RootWindowContainer$$ExternalSyntheticLambda22();
													ArgumentPlaceholder v40 = PooledLambda.__(Tas.class);
													PooledConsumer v41 = PooledLambda.obtainConsumer(v38, v40, v21, v37);
													v14.forAllLeafTasks(v41, 0);
													v41.recycle();
													ActivityRecord v44 = v14.topRunningActivity();
													if (v44 == 0) {
														ComponentName v45 = ActivityRecord.intent.getComponent();
														ActivityTaskManager$RootTaskInfo.topActivity = 0;
														ActivityTaskManager$RootTaskInfo v20 = v21;
														ActivityTaskManager$RootTaskInfo v13 = v20;
														Binder.restoreCallingIdentity(v2);
														return 0;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v5 = v6;
	if (v5 == 0) {
		Task v8 = RootWindowContainer.getRootTask(Task.mTaskId);
		if (v8 == 0) {
			ActivityTaskManager$RootTaskInfo v9 = RootWindowContainer.getRootTaskInfo(v8);
			ActivityTaskManager$RootTaskInfo v7 = v9;
			this.sThreadPriorityBooster.reset();
			Binder.restoreCallingIdentity(v2);
			return 0;
		}
	}
}


This is path 3 for the API with depth 0:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	if (v4 == 0) {
		ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
		WindowManagerService.resetPriorityAfterLockedSection();
		Binder.restoreCallingIdentity(v2);
		return 0;
	}
}

and the following sink code:
['ActivityTaskManager$RootTaskInfo v21 = new ActivityTaskManager$RootTaskInfo();\nv14.fillTaskInfo(v21);\nDisplayContent v24 = v14.getDisplayContent();\nreturn v20;', 'Task v10 = v9.getFocusedRootTask();\nTask v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();', '[I v25 = new [I(1);\n[Z v26 = new [Z(1);']

The method getFocusedRootTaskInfo has the following similar APIs:

- API Name: getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8956268429756165, Code:
Task v10 = v9.getRootTask(p1, p2);
ActivityTaskManager$RootTaskInfo v14 = new ActivityTaskManager$RootTaskInfo();
v7.fillTaskInfo(v14);
return v6;
  - Access Control Level: SYS_OR_SIG

- API Name: setFocusedTask(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8768120408058167, Code:
Task v10 = this.mRootWindowContainer.anyTaskForId(p1, 0);
boolean v12 = v11.moveFocusableActivityToTop("setFocusedTask");
DisplayContent v16 = 0.getDisplayContent();
boolean v17 = v16.setFocusedApp(0);
boolean v18 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
  - Similarity: 0.8288218975067139, Code:
Task v14 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
ActivityRecord v19 = Task.getActivity(v17);
boolean v21 = ActivityRecord.isFocusable();
WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord);
ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: getFrontActivityScreenCompatMode()I in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8641135692596436, Code:
Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
ActivityRecord v9 = TaskFragment.topRunningActivity(0);
CompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
boolean v12 = v11.alwaysSupportsScreen();
  - Access Control Level: SYS_OR_SIG

- API Name: getDisableFlags(Landroid/os/IBinder;I)[I in the following Class: Lcom.android.server.statusbar.StatusBarManagerService with the following sink code entries:
  - Similarity: 0.8397992849349976, Code:
[I v3 = new [I(2);
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: setFocusedRootTask(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8384896516799927, Code:
Task v7 = this.mRootWindowContainer.getRootTask(p1);
ActivityRecord v8 = v7.topRunningActivity();
  - Access Control Level: SYS_OR_SIG

