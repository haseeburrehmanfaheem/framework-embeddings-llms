The method isAssistDataAllowedOnCurrentActivity in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isAssistDataAllowedOnCurrentActivity(){
	int v6 = RootWindowContainer.getChildCount();
	if ((v6 + -1) < 0) {
		WindowContainer v7 = RootWindowContainer.getChildAt((v6 + -1));
		Task v8 = v7.getFocusedRootTask();
		if (v8 == 0) {
			if (((v6 + -1) + -1) < 0) {
				WindowContainer v9 = RootWindowContainer.getChildAt(((v6 + -1) + -1));
				Task v10 = v9.getFocusedRootTask();
				if (v10 == 0) {
					Task v5 = v10;
					Task v4 = v5;
					if (v4 == 0) {
						boolean v11 = v4.isActivityTypeAssistant();
						if (v11 == 0) {
							ActivityRecord v14 = TaskFragment.getTopNonFinishingActivity(1, 1);
							ActivityRecord v13 = v14;
							ActivityRecord v12 = v13;
							if (v12 != 0) {
								Object v20 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
								Object v19 = v20;
								if (v19 == 0) {
									DevicePolicyCache$EmptyDevicePolicyCache v21 = this.INSTANCE;
									DevicePolicyCache v18 = getDevicePolicyCache();
									boolean v22 = v18.isScreenCaptureAllowed(ActivityRecord.mUserId);
									return v22;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isAssistDataAllowedOnCurrentActivity(){
	this.sThreadPriorityBooster.boost();
	Task v4 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v3 = v4;
	if (v3 == 0) {
		boolean v5 = v3.isActivityTypeAssistant();
		if (v5 == 0) {
			ActivityRecord v7 = TaskFragment.getTopNonFinishingActivity(1);
			ActivityRecord v6 = v7;
			if (v6 != 0) {
				this.sThreadPriorityBooster.reset();
				Object v11 = LocalServices.getService(DevicePolicyManagerInterna.class);
				if (v11 == 0) {
					DevicePolicyCache v12 = v11.getDevicePolicyCache();
					DevicePolicyCache v10 = v12;
					boolean v13 = v10.isScreenCaptureAllowed(ActivityRecord.mUserId);
					return v13;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	if (v2 == 0) {
		boolean v3 = v2.isActivityTypeAssistant();
		if (v3 == 0) {
			ActivityRecord v4 = v2.getTopNonFinishingActivity();
			if (v4 != 0) {
				WindowManagerService.resetPriorityAfterLockedSection();
				DevicePolicyCache v6 = DevicePolicyCache.getInstance();
				boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
				return v7;
			}
		}
	}
}

and the following sink code:
['boolean v22 = v18.isScreenCaptureAllowed(ActivityRecord.mUserId);\nreturn v22;', 'boolean v13 = v10.isScreenCaptureAllowed(ActivityRecord.mUserId);\nreturn v13;', 'boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);\nreturn v7;']

The method isAssistDataAllowedOnCurrentActivity has the following similar APIs:

- API Name: setContentRecordingSession(Landroid/view/ContentRecordingSession;Landroid/media/projection/IMediaProjection;)V in the following Class: Lcom.android.server.media.projection.MediaProjectionManagerService$BinderService with the following sink code entries:
  - Similarity: 0.771361768245697, Code:
boolean v3 = p0.isValidMediaProjection(p2);
boolean v5 = v4.setContentRecordingSession(p1);
v7.stop();
  - Access Control Level: NONE

- API Name: getSystemAudioMode()Z in the following Class: Lcom.android.server.hdmi.HdmiControlService$BinderService with the following sink code entries:
  - Similarity: 0.7296831011772156, Code:
boolean v10 = HdmiCecLocalDevice.mService.isSystemAudioActivated();
boolean v9 = v10;
if (v9 == 0) {
return 1;
  - Access Control Level: SYS_OR_SIG

- API Name: isParentalControlsEnabled(I)Z in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7195958495140076, Code:
boolean v8 = v7.isParentalControlsEnabled();
return v8;
  - Access Control Level: NONE

- API Name: isPlaybackActive(Landroid/media/IMediaRouterClient;)Z in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7180216908454895, Code:
boolean v4 = this.mAudioPlayerStateMonitor.isPlaybackActive(MediaRouterService$ClientRecord.mUid);
return v4;
  - Access Control Level: NONE

- API Name: shouldAlwaysRespectAppRequestedMode()Z in the following Class: Lcom.android.server.display.DisplayManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7147634029388428, Code:
boolean v5 = this.mAlwaysRespectAppRequest;
boolean v4 = v5;
return v4;
  - Access Control Level: SYS_OR_SIG

