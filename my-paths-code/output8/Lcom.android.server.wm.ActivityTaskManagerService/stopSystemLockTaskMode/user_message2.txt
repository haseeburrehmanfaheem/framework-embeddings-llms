The method stopSystemLockTaskMode in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void stopSystemLockTaskMode(){
	int v3 = Binder.getCallingUid();
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	if (0 == 0) {
		if (0 != 0) {
			Object v8 = ActivityRecord$Token.mActivityRef.get();
			if (v8 == 0) {
				Task v9 = v8.getRootTask();
				if (v9 != 0) {
					ActivityRecord v7 = 0;
					if (v7 != 0) {
						Task v10 = this.task;
						LockTaskController v11 = this.mLockTaskController;
						if (this.mLockTaskModeState != 0) {
							if (1 == 0) {
								if (0 == 0) {
									if (v3 == Task.mLockTaskUid) {
										if (Task.mLockTaskUid != 0) {
											if (v3 != Task.effectiveUid) {
												LockTaskController.clearLockedTask(0);
												this.sThreadPriorityBooster.reset();
												Object v16 = this.mContext.getSystemService("telecom");
												if (v16 == 0) {
													ITelecomService v18 = TelecomManager.getTelecomService();
													if (v18 == 0) {
														String v19 = this.mContext.getOpPackageName();
														String v20 = this.mContext.getAttributionTag();
														v18.showInCallScreen(0, v19, v20);
														Binder.restoreCallingIdentity(v4);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void stopSystemLockTaskMode(){
	int v3 = Binder.getCallingUid();
	long v4 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	if (0 == 0) {
		ActivityRecord v6 = ActivityRecord.forTokenLocked(0);
		if (v6 != 0) {
			Task v7 = v6.getTask();
			LockTaskController v8 = ActivityTaskManagerService.getLockTaskController();
			v8.stopLockTaskMode(0, 1, v3);
			WindowManagerService.resetPriorityAfterLockedSection();
			Object v11 = this.mContext.getSystemService("telecom");
			if (v11 == 0) {
				v11.showInCallScreen(0);
				Binder.restoreCallingIdentity(v4);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void stopSystemLockTaskMode(){
	p0.stopLockTaskModeInternal(0, 1);
	return;
}

and the following sink code:
['LockTaskController v8 = ActivityTaskManagerService.getLockTaskController();\nv8.stopLockTaskMode(0, 1, v3);', 'p0.stopLockTaskModeInternal(0, 1);', 'LockTaskController.clearLockedTask(0);']

The method stopSystemLockTaskMode has the following similar APIs:

- API Name: isInLockTaskMode()Z in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8559691905975342, Code:
LockTaskController v2 = ActivityTaskManagerService.getLockTaskController();
int v3 = v2.getLockTaskModeState();
if (v1 == 0) {
return 1;
  - Similarity: 0.7951837778091431, Code:
int v1 = p0.getLockTaskModeState();
if (v1 == 0) {
return 1;
  - Similarity: 0.7455599308013916, Code:
int v3 = this.mLockTaskModeState;
if (v1 == 0) {
return 1;
  - Access Control Level: NONE

- API Name: startSystemLockTaskMode(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7871179580688477, Code:
Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
p0.startLockTaskMode(v4, 1);
  - Similarity: 0.7631796598434448, Code:
Task v6 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
v22.startLockTaskMode(v5, 1, v18);
  - Access Control Level: SYS_OR_SIG

- API Name: getLockTaskModeState()I in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7406769394874573, Code:
int v2 = this.mLockTaskModeState;
return v2;
  - Similarity: 0.7384070754051208, Code:
int v2 = v1.getLockTaskModeState();
return v2;
  - Access Control Level: NONE

- API Name: removeTask(I)Z in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7302597761154175, Code:
Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(v5);
v5.removeActivities("remove-task", 0);
LockTaskController v17 = this.mService.getLockTaskController();
v17.clearLockedTask(v5);
  - Access Control Level: SYS_OR_SIG

- API Name: moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7221002578735352, Code:
p0.moveTaskToFrontLocked(p1, p2, p3, p4, v6);
  - Access Control Level: SYS_OR_SIG

