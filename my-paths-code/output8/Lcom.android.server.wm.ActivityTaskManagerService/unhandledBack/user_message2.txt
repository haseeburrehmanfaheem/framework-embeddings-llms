The method unhandledBack in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ((v8 + -1) < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt((v8 + -1));
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			if (((v8 + -1) + -1) < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt(((v8 + -1) + -1));
				Task v12 = v11.getFocusedRootTask();
				if (v12 == 0) {
					Task v7 = v12;
					Task v6 = v7;
					if (v6 == 0) {
						WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
						ActivityRecord v17 = WindowContainer.getActivity(v15, 1);
						ActivityRecord v14 = v17;
						if (v14 == 0) {
							int v19 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
							int v18 = v19;
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void unhandledBack(){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v5 = v6;
	if (v5 == 0) {
		ActivityRecord v8 = Task.getTopMostActivity();
		if (v8 == 0) {
			int v9 = v8.finishIfPossible("unhandled-back", 1);
			Binder.restoreCallingIdentity(v4);
			this.sThreadPriorityBooster.reset();
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	if (v4 == 0) {
		v4.unhandledBackLocked();
		Binder.restoreCallingIdentity(v3);
		WindowManagerService.resetPriorityAfterLockedSection();
		return;
	}
}

and the following sink code:
['Task v4 = p0.getTopDisplayFocusedRootTask();\nif (v4 == 0) {\nv4.unhandledBackLocked();']

The method unhandledBack has the following similar APIs:

- API Name: isTopActivityImmersive()Z in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8011313080787659, Code:
Task v3 = p0.getTopDisplayFocusedRootTask();
ActivityRecord v4 = v3.topRunningActivity();
if (v4 == 0) { if (ActivityRecord.immersive == 0) { return 0; } }
  - Similarity: 0.7616440057754517, Code:
Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
ActivityRecord v9 = TaskFragment.topRunningActivity(0);
if (v8 == 0) { if (ActivityRecord.immersive == 0) { return 0; } }
  - Access Control Level: SYS_OR_SIG

- API Name: getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7803403735160828, Code:
Task v10 = v9.getFocusedRootTask();
Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
  - Access Control Level: SYS_OR_SIG

- API Name: getFrontActivityScreenCompatMode()I in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7666656970977783, Code:
Task v3 = p0.getTopDisplayFocusedRootTask();
ActivityRecord v4 = v3.topRunningActivity();
int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
  - Access Control Level: SYS_OR_SIG

- API Name: setFocusedTask(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.743914008140564, Code:
Task v10 = this.mRootWindowContainer.anyTaskForId(p1, 0);
boolean v12 = v11.moveFocusableActivityToTop("setFocusedTask");
DisplayContent v16 = 0.getDisplayContent();
boolean v17 = v16.setFocusedApp(0);
boolean v18 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: moveRootTaskToDisplay(II)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.7350577116012573, Code:
Task v33 = RootWindowContainer.getRootTask(p1);
v33.reparent(v30, 1);
v33.resumeNextFocusAfterReparent();
  - Access Control Level: SYS_OR_SIG

