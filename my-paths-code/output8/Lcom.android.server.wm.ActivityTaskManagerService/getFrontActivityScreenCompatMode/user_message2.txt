The method getFrontActivityScreenCompatMode in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public int getFrontActivityScreenCompatMode(){
	if (v3 != 0) {
		int v9 = RootWindowContainer.getChildCount();
		if ((v9 + -1) < 0) {
			WindowContainer v10 = RootWindowContainer.getChildAt((v9 + -1));
			Task v11 = v10.getFocusedRootTask();
			if (v11 == 0) {
				if (((v9 + -1) + -1) < 0) {
					WindowContainer v12 = RootWindowContainer.getChildAt(((v9 + -1) + -1));
					Task v13 = v12.getFocusedRootTask();
					if (v13 == 0) {
						Task v8 = v13;
						Task v7 = v8;
						if (v7 == 0) {
							ActivityRecord v16 = TaskFragment.topRunningActivity(0, 1);
							ActivityRecord v15 = v16;
							ActivityRecord v14 = v15;
							if (v14 != 0) {
								boolean v19 = CompatModePackages.getPackageCompatModeEnabledLocked(ActivityInfo.applicationInfo);
								float v20 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
								Configuration v21 = this.mService.getGlobalConfiguration();
								CompatibilityInfo v22 = new CompatibilityInfo(ActivityInfo.applicationInfo,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v19,v20);
								CompatibilityInfo v18 = v22;
								boolean v24 = v18.alwaysSupportsScreen();
								if (v24 == 0) {
									boolean v25 = v18.neverSupportsScreen();
									if (v25 == 0) {
										int v27 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
										if ((v27 & 2) == 0) {
											boolean v26 = 1;
											int v17 = v26;
											return v17;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int getFrontActivityScreenCompatMode(){
	if (v3 != 0) {
		this.sThreadPriorityBooster.boost();
		Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
		Task v6 = v7;
		if (v6 == 0) {
			ActivityRecord v9 = TaskFragment.topRunningActivity(0);
			ActivityRecord v8 = v9;
			if (v8 != 0) {
				CompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
				boolean v12 = v11.alwaysSupportsScreen();
				if (v12 == 0) {
					boolean v13 = v11.neverSupportsScreen();
					if (v13 == 0) {
						boolean v14 = CompatModePackages.getPackageCompatModeEnabledLocked(ActivityInfo.applicationInfo);
						int v10 = v14;
						this.sThreadPriorityBooster.reset();
						return v10;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller("getFrontActivityScreenCompatMode");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	if (v3 == 0) {
		ActivityRecord v4 = v3.topRunningActivity();
		if (v4 != 0) {
			int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
			WindowManagerService.resetPriorityAfterLockedSection();
			return v5;
		}
	}
}

and the following sink code:
['Task v11 = v10.getFocusedRootTask();\nActivityRecord v16 = TaskFragment.topRunningActivity(0, 1);\nCompatibilityInfo v22 = new CompatibilityInfo(ActivityInfo.applicationInfo,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v19,v20);\nboolean v24 = v18.alwaysSupportsScreen();', 'Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();\nActivityRecord v9 = TaskFragment.topRunningActivity(0);\nCompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);\nboolean v12 = v11.alwaysSupportsScreen();', 'Task v3 = p0.getTopDisplayFocusedRootTask();\nActivityRecord v4 = v3.topRunningActivity();\nint v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);']

The method getFrontActivityScreenCompatMode has the following similar APIs:

- API Name: isTopActivityImmersive()Z in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.9026342630386353, Code:
Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
ActivityRecord v9 = TaskFragment.topRunningActivity(0);
if (v8 == 0) { if (ActivityRecord.immersive == 0) { return 0; } }
  - Similarity: 0.8633214235305786, Code:
int v9 = RootWindowContainer.getChildCount();
WindowContainer v10 = RootWindowContainer.getChildAt((v9 + -1));
Task v11 = v10.getFocusedRootTask();
ActivityRecord v16 = TaskFragment.topRunningActivity(0, 1);
if (v14 == 0) { if (ActivityRecord.immersive == 0) { return 0; } }
  - Similarity: 0.8584774136543274, Code:
Task v3 = p0.getTopDisplayFocusedRootTask();
ActivityRecord v4 = v3.topRunningActivity();
if (v4 == 0) { if (ActivityRecord.immersive == 0) { return 0; } }
  - Access Control Level: SYS_OR_SIG

- API Name: setFocusedRootTask(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8873233199119568, Code:
Task v7 = this.mRootWindowContainer.getRootTask(p1);
ActivityRecord v8 = v7.topRunningActivity();
  - Access Control Level: SYS_OR_SIG

- API Name: getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo; in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8641135692596436, Code:
Task v10 = v9.getFocusedRootTask();
Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
  - Access Control Level: SYS_OR_SIG

- API Name: setFocusedTask(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8460352420806885, Code:
Task v14 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
ActivityRecord v19 = Task.getActivity(v17);
boolean v21 = ActivityRecord.isFocusable();
WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord);
ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
  - Similarity: 0.8387619256973267, Code:
Task v10 = this.mRootWindowContainer.anyTaskForId(p1, 0);
boolean v12 = v11.moveFocusableActivityToTop("setFocusedTask");
DisplayContent v16 = 0.getDisplayContent();
boolean v17 = v16.setFocusedApp(0);
boolean v18 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8116543292999268, Code:
WindowProcessController v18 = ActivityTaskManagerService.getProcessController(p1);
ActivityStartController v19 = ActivityTaskManagerService.getActivityStartController();
ActivityStarter v20 = v19.obtainStarter(0, "moveTaskToFront");
Task v23 = this.mRootWindowContainer.anyTaskForId(p3);
v23.moveTaskToFront(p4, v26, "moveTaskToFront", 0);
  - Access Control Level: SYS_OR_SIG

