The method setPackageAskScreenCompat has the following code snippet:

This is path 1 for the API with depth 2:
public void setPackageAskScreenCompat(String p1, boolean p2){
	int v7 = CompatModePackages.getPackageFlags(p1);
	if (p2 == 0) {
		if (v7 == ((~1) & v7)) {
			if (((~1) & v7) == 0) {
				Integer v8 = Integer.valueOf(((~1) & v7));
				Object v9 = this.mPackages.put(p1, v8);
				CompatModePackages.scheduleWrite();
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setPackageAskScreenCompat(String p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	CompatModePackages.setPackageFlagLocked(p1, 1, p2);
	this.sThreadPriorityBooster.reset();
	return;
}


This is path 3 for the API with depth 0:
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}

and the following sink code:
['CompatModePackages.setPackageFlagLocked(p1, 1, p2);\nthis.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);', 'int v7 = CompatModePackages.getPackageFlags(p1);\nInteger v8 = Integer.valueOf(((~1) & v7));\nObject v9 = this.mPackages.put(p1, v8);']

The method setPackageAskScreenCompat has the following similar APIs:

- API Name: setPackageScreenCompatMode(Ljava/lang/String;I)V with Similarity Score: 0.8981776237487793
  - Access Control Level: SYS_OR_SIG and the following code:
this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);

- API Name: getPackageAskScreenCompat(Ljava/lang/String;)Z with Similarity Score: 0.8915705680847168
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
return v3;

