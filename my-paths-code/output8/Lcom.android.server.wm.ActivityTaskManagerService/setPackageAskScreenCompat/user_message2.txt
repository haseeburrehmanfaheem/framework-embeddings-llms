The method setPackageAskScreenCompat in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void setPackageAskScreenCompat(String p1, boolean p2){
	int v7 = CompatModePackages.getPackageFlags(p1);
	if (p2 == 0) {
		if (v7 == ((~1) & v7)) {
			if (((~1) & v7) == 0) {
				Integer v8 = Integer.valueOf(((~1) & v7));
				Object v9 = this.mPackages.put(p1, v8);
				CompatModePackages.scheduleWrite();
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setPackageAskScreenCompat(String p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	CompatModePackages.setPackageFlagLocked(p1, 1, p2);
	this.sThreadPriorityBooster.reset();
	return;
}


This is path 3 for the API with depth 0:
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}

and the following sink code:
['CompatModePackages.setPackageFlagLocked(p1, 1, p2);\nthis.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);', 'int v7 = CompatModePackages.getPackageFlags(p1);\nInteger v8 = Integer.valueOf(((~1) & v7));\nObject v9 = this.mPackages.put(p1, v8);']

The method setPackageAskScreenCompat has the following similar APIs:

- API Name: setPackageScreenCompatMode(Ljava/lang/String;I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8981777429580688, Code:
this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
  - Similarity: 0.8604403138160706, Code:
CompatModePackages.setPackageScreenCompatModeLocked(v6, p2);
  - Similarity: 0.8056577444076538, Code:
ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);
int v10 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
Integer v14 = Integer.valueOf((v10 | 2));
this.mPackages.put(ApplicationInfo.packageName, v14);
  - Access Control Level: SYS_OR_SIG

- API Name: getPackageAskScreenCompat(Ljava/lang/String;)Z in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8915706276893616, Code:
boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: setFrontActivityScreenCompatMode(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8831889629364014, Code:
int v9 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
if ((v9 & 2) != 0) {
Integer v13 = Integer.valueOf((v9 | 2));
Object v14 = this.mPackages.put(ApplicationInfo.packageName, v13);
  - Similarity: 0.8545972108840942, Code:
this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
  - Access Control Level: SYS_OR_SIG

- API Name: getPackageScreenCompatMode(Ljava/lang/String;)I in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8454223275184631, Code:
int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: disableTargetSdkChanges(Ljava/lang/String;I)I in the following Class: Lcom.android.server.compat.PlatformCompat with the following sink code entries:
  - Similarity: 0.7734949588775635, Code:
int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
p0.killPackage(p1);
  - Access Control Level: SYS_OR_SIG

