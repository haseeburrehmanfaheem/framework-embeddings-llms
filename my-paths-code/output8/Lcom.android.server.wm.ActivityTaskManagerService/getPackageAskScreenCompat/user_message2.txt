The method getPackageAskScreenCompat has the following code snippet:

This is path 1 for the API with depth 2:
public boolean getPackageAskScreenCompat(String p1){
	if (v3 != 0) {
		Object v9 = this.mPackages.get(p1);
		if (v9 == 0) {
			int v10 = v9.intValue();
			int v8 = v10;
			if ((v8 & 1) != 0) {
				boolean v7 = 1;
				return v7;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean getPackageAskScreenCompat(String p1){
	if (v3 != 0) {
		this.sThreadPriorityBooster.boost();
		int v7 = CompatModePackages.getPackageFlags(p1);
		if ((v7 & 1) != 0) {
			boolean v6 = 1;
			this.sThreadPriorityBooster.reset();
			return v6;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean getPackageAskScreenCompat(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller("getPackageAskScreenCompat");
	WindowManagerService.boostPriorityForLockedSection();
	boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}

and the following sink code:
['int v7 = CompatModePackages.getPackageFlags(p1);\nif ((v7 & 1) != 0) {\nboolean v6 = 1;\nthis.sThreadPriorityBooster.reset();\nreturn v6;', 'boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);\nreturn v3;']

The method getPackageAskScreenCompat has the following similar APIs:

- API Name: getPackageScreenCompatMode(Ljava/lang/String;)I with Similarity Score: 0.9193087816238403
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
return v3;

- API Name: setPackageAskScreenCompat(Ljava/lang/String;Z)V with Similarity Score: 0.8915705680847168
  - Access Control Level: SYS_OR_SIG and the following code:
CompatModePackages.setPackageFlagLocked(p1, 1, p2);
this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);

