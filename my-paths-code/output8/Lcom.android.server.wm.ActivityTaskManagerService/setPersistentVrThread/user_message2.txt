The method setPersistentVrThread in the following class Lcom.android.server.wm.ActivityTaskManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void setPersistentVrThread(int p1){
	if (v1 != 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
		if (v4 == 0) {
			int v8 = Binder.getCallingPid();
			WindowProcessController v9 = this.mProcessMap.getProcess(v8);
			if ((this.mVrState & 2) == 0) {
				boolean v11 = 1;
				if (v11 != 0) {
					if (v9 != 0) {
						if (p1 == 0) {
							boolean v13 = Process.isThreadInProcess(v8, p1);
							if (v13 == 0) {
								boolean v15 = VrController.hasPersistentVrFlagSet();
								if (v15 != 0) {
									if (0 != 0) {
										int v14 = this.mVrRenderThreadTid;
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setPersistentVrThread(int p1){
	if (v1 != 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
		if (v4 == 0) {
			this.sThreadPriorityBooster.boost();
			int v7 = Binder.getCallingPid();
			Object v9 = this.mPidMap.get(v7);
			WindowProcessController v8 = v9;
			boolean v11 = VrController.hasPersistentVrFlagSet();
			if (v11 != 0) {
				if (v8 != 0) {
					if (p1 == 0) {
						VrController.enforceThreadInProcess(p1, v7);
						int v13 = VrController.setPersistentVrRenderThreadLocked(p1, 0);
						this.sThreadPriorityBooster.reset();
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setPersistentVrThread(int p1){
	if (v1 != 0) {
		p0.enforceSystemHasVrFeature();
		WindowManagerService.boostPriorityForLockedSection();
		int v4 = Binder.getCallingPid();
		WindowProcessController v5 = this.mProcessMap.getProcess(v4);
		this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);
		WindowManagerService.resetPriorityAfterLockedSection();
		return;
	}
}

and the following sink code:
['VrController.enforceThreadInProcess(p1, v7);\nint v13 = VrController.setPersistentVrRenderThreadLocked(p1, 0);', 'this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);']

The method setPersistentVrThread has the following similar APIs:

- API Name: setVrThread(I)V in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.946834921836853, Code:
this.mVrController.setVrThreadLocked(p1, v3, v4);
  - Similarity: 0.9406705498695374, Code:
VrController.enforceThreadInProcess(p1, v6);
int v14 = VrController.setVrRenderThreadLocked(p1, v13, 0);
WindowProcessController.mVrThreadTid = p1;
  - Access Control Level: NONE

- API Name: getCpuUsages(Ljava/lang/String;)[Landroid/os/CpuUsageInfo; in the following Class: Lcom.android.server.HardwarePropertiesManagerService with the following sink code entries:
  - Similarity: 0.700498104095459, Code:
boolean v10 = v6.isCurrentVrListener(p1, v5);
  - Access Control Level: SYS_OR_SIG

- API Name: registerRemoteSessionCallback(Landroid/media/IRemoteSessionCallback;)V in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.7002347707748413, Code:
boolean v6 = MediaSessionService.mRemoteVolumeControllers.register(p1);
  - Access Control Level: NONE

