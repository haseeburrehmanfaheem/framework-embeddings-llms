The method getDeviceConfigurationInfo has the following code snippet:

This is path 1 for the API with depth 2:
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	int v7 = Binder.getCallingPid();
	if (v7 == WindowManagerService.MY_PID) {
		if (v7 >= 0) {
			WindowManagerService.boostPriorityForLockedSection();
			WindowProcessController v10 = this.mProcessMap.getProcess(v7);
			if (v10 == 0) {
				Configuration v11 = v10.getConfiguration();
				WindowManagerService.resetPriorityAfterLockedSection();
				Configuration v8 = v11;
				Configuration v6 = v8;
				ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
				ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
				ConfigurationInfo.reqNavigation = Configuration.navigation;
				if (Configuration.navigation == 2) {
					if (Configuration.navigation != 3) {
						ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
						if (Configuration.keyboard == 0) {
							if (Configuration.keyboard == 1) {
								ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
								ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
								return v1;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	this.sThreadPriorityBooster.boost();
	int v6 = Binder.getCallingPid();
	Configuration v7 = ActivityTaskManagerService.getGlobalConfigurationForPid(v6);
	Configuration v5 = v7;
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	if (Configuration.navigation == 2) {
		if (Configuration.navigation != 3) {
			ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
			if (Configuration.keyboard == 0) {
				if (Configuration.keyboard == 1) {
					ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
					ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
					this.sThreadPriorityBooster.reset();
					return v1;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v4 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	if (Configuration.navigation == 2) {
		if (Configuration.navigation != 3) {
			ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
			if (Configuration.keyboard == 0) {
				if (Configuration.keyboard == 1) {
					ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
					ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
					WindowManagerService.resetPriorityAfterLockedSection();
					return v1;
				}
			}
		}
	}
}

and the following sink code:
['ConfigurationInfo v1 = new ConfigurationInfo();\nint v7 = Binder.getCallingPid();\nWindowProcessController v10 = this.mProcessMap.getProcess(v7);\nConfiguration v11 = v10.getConfiguration();\nConfigurationInfo.reqTouchScreen = Configuration.touchscreen;\nConfigurationInfo.reqKeyboardType = Configuration.keyboard;\nConfigurationInfo.reqNavigation = Configuration.navigation;\nif (Configuration.navigation == 2) { ... }\nreturn v1;', 'this.sThreadPriorityBooster.boost();\nint v6 = Binder.getCallingPid();\nConfiguration v7 = ActivityTaskManagerService.getGlobalConfigurationForPid(v6);\nConfigurationInfo.reqTouchScreen = Configuration.touchscreen;\nConfigurationInfo.reqKeyboardType = Configuration.keyboard;\nConfigurationInfo.reqNavigation = Configuration.navigation;\nif (Configuration.navigation == 2) { ... }\nreturn v1;', 'WindowManagerService.boostPriorityForLockedSection();\nConfiguration v4 = p0.getGlobalConfigurationForCallingPid();\nConfigurationInfo.reqTouchScreen = Configuration.touchscreen;\nConfigurationInfo.reqKeyboardType = Configuration.keyboard;\nConfigurationInfo.reqNavigation = Configuration.navigation;\nif (Configuration.navigation == 2) { ... }\nreturn v1;']

The method getDeviceConfigurationInfo has the following similar APIs:

- API Name: releaseSomeActivities(Landroid/app/IApplicationThread;)V with Similarity Score: 0.810566782951355
  - Access Control Level: NONE and the following code:
this.sThreadPriorityBooster.boost();
long v3 = Binder.clearCallingIdentity();
IBinder v5 = p1.asBinder();
ArrayMap v6 = this.mProcessNames.getMap();

- API Name: releaseSomeActivities(Landroid/app/IApplicationThread;)V with Similarity Score: 0.7775266170501709
  - Access Control Level: NONE and the following code:
WindowManagerService.boostPriorityForLockedSection();
long v2 = Binder.clearCallingIdentity();
WindowProcessController v3 = p0.getProcessController(p1);
v3.releaseSomeActivities("low-mem");

