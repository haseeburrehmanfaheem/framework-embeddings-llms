This is path 1 for the API with depth 2:
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	if (this.mRunningVoice == 0) {
		IBinder v4 = this.mRunningVoice.asBinder();
		IBinder v5 = p1.asBinder();
		if (v4 != v5) {
			if (p2 == 0) {
				this.mVoiceWakeLock.acquire();
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	if (this.mRunningVoice == 0) {
		IBinder v3 = this.mRunningVoice.asBinder();
		IBinder v4 = p1.asBinder();
		if (v3 != v4) {
			if (p2 == 0) {
				this.mVoiceWakeLock.acquire();
				this.sThreadPriorityBooster.reset();
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	if (this.mRunningVoice == 0) {
		IBinder v2 = this.mRunningVoice.asBinder();
		IBinder v3 = p1.asBinder();
		if (v2 != v3) {
			if (p2 == 0) {
				this.mVoiceWakeLock.acquire();
				WindowManagerService.resetPriorityAfterLockedSection();
				return;
			}
		}
	}
}
