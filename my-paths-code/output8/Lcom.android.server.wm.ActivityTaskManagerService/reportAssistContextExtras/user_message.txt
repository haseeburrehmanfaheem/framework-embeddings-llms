This is path 1 for the API with depth 2:
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	if (p5 == 0) {
		ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable("android.intent.extra.REFERRER", p5);
		WindowContainer v3 = this.mParent;
		if (v3 == 0) {
			boolean v4 = v3.isAttached();
			WindowContainer v5 = WindowContainer.getParent();
			if (v5 == 0) {
				boolean v6 = v5.isAttached();
				if (v6 == 0) {
					boolean v2 = 1;
					if (v6 == 0) {
						return 1;
						if (isAttached() != 0) {
							if (p3 == 0) {
								Task v7 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
								p3.setTaskId(Task.mTaskId);
								p3.setActivityComponent(ActivityRecord.mActivityComponent);
								p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
								ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
								p1.notifyAll();
								if (ActivityTaskManagerService$PendingAssistExtras.intent != 0) {
									if (ActivityTaskManagerService$PendingAssistExtras.receiver != 0) {
										p0.buildAssistBundleLocked(p1, p2);
										boolean v16 = this.mPendingAssistExtras.remove(p1);
										this.mUiHandler.removeCallbacks(p1);
										if (v16 != 0) {
											if (ActivityTaskManagerService$PendingAssistExtras.receiver == 0) {
												if (ActivityTaskManagerService$PendingAssistExtras.receiver == 0) {
													ActivityTaskManagerService$PendingAssistExtras.receiver.onHandleAssistData(0);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	if (p5 == 0) {
		ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable("android.intent.extra.REFERRER", p5);
		WindowContainer v3 = WindowContainer.getParent();
		if (v3 == 0) {
			boolean v4 = v3.isAttached();
			if (v4 == 0) {
				boolean v2 = 1;
				if (v2 != 0) {
					if (p3 == 0) {
						Task v5 = this.task;
						this.mTaskId = Task.mTaskId;
						this.mActivityComponent = ActivityRecord.mActivityComponent;
						this.mIsHomeActivity = ActivityTaskManagerService$PendingAssistExtras.isHome;
						ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
						p1.notifyAll();
						if (ActivityTaskManagerService$PendingAssistExtras.intent != 0) {
							if (ActivityTaskManagerService$PendingAssistExtras.receiver != 0) {
								this.sThreadPriorityBooster.boost();
								if (p2 == 0) {
									ActivityTaskManagerService$PendingAssistExtras.extras.putBundle("android.intent.extra.ASSIST_CONTEXT", p2);
									if (ActivityTaskManagerService$PendingAssistExtras.hint == 0) {
										ActivityTaskManagerService$PendingAssistExtras.extras.putBoolean(ActivityTaskManagerService$PendingAssistExtras.hint, 1);
										boolean v15 = this.mPendingAssistExtras.remove(p1);
										this.mUiHandler.removeCallbacks(p1);
										if (v15 != 0) {
											if (ActivityTaskManagerService$PendingAssistExtras.receiver == 0) {
												this.sThreadPriorityBooster.reset();
												if (ActivityTaskManagerService$PendingAssistExtras.receiver == 0) {
													ActivityTaskManagerService$PendingAssistExtras.receiver.onHandleAssistData(0);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	if (p5 == 0) {
		ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable("android.intent.extra.REFERRER", p5);
		boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
		if (v2 != 0) {
			if (p3 == 0) {
				Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
				p3.setTaskId(Task.mTaskId);
				p3.setActivityComponent(ActivityRecord.mActivityComponent);
				p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
				ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
				p1.notifyAll();
				if (ActivityTaskManagerService$PendingAssistExtras.intent != 0) {
					if (ActivityTaskManagerService$PendingAssistExtras.receiver != 0) {
						WindowManagerService.boostPriorityForLockedSection();
						p0.buildAssistBundleLocked(p1, p2);
						boolean v10 = this.mPendingAssistExtras.remove(p1);
						this.mUiHandler.removeCallbacks(p1);
						if (v10 != 0) {
							if (ActivityTaskManagerService$PendingAssistExtras.receiver == 0) {
								WindowManagerService.resetPriorityAfterLockedSection();
								if (ActivityTaskManagerService$PendingAssistExtras.receiver == 0) {
									ActivityTaskManagerService$PendingAssistExtras.receiver.onHandleAssistData(0);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
