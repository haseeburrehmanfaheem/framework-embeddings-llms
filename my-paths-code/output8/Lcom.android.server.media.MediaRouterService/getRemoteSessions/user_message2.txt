The method getRemoteSessions in the following class Lcom.android.server.media.MediaRouterService has the following code snippet:

This is path 1 for the API with depth 2:
public List getRemoteSessions(IMediaRouter2Manager p1){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	long v3 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	Object v6 = this.mAllManagerRecords.get(v5);
	if (v6 != 0) {
		ArrayList v7 = new ArrayList();
		ArrayList v9 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmRouteProviders(MediaRouter2ServiceImpl$UserRecord.mHandler);
		Iterator v10 = v9.iterator();
		boolean v11 = v10.hasNext();
		if (v11 == 0) {
			Object v12 = v10.next();
			if (MediaRoute2Provider.mIsSystemRouteProvider != 0) {
				List v13 = v12.getSessionInfos();
				boolean v14 = v7.addAll(v13);
				boolean v15 = v10.hasNext();
				if (v15 == 0) {
					List v4 = v7;
					Binder.restoreCallingIdentity(v3);
					List v1 = v4;
					return v1;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getRemoteSessions(IMediaRouter2Manager p1){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	long v3 = Binder.clearCallingIdentity();
	List v4 = MediaRouter2ServiceImpl.getRemoteSessionsLocked(p1);
	Binder.restoreCallingIdentity(v3);
	List v1 = v4;
	return v1;
}


This is path 3 for the API with depth 0:
public List getRemoteSessions(IMediaRouter2Manager p1){
	List v1 = this.mService2.getRemoteSessions(p1);
	return v1;
}

and the following sink code:
['ArrayList v7 = new ArrayList();\nList v13 = v12.getSessionInfos();\nboolean v14 = v7.addAll(v13);\nreturn v1;', 'List v4 = MediaRouter2ServiceImpl.getRemoteSessionsLocked(p1);\nreturn v1;', 'List v1 = this.mService2.getRemoteSessions(p1);\nreturn v1;']

The method getRemoteSessions has the following similar APIs:

- API Name: getSessions(Landroid/content/ComponentName;I)Ljava/util/List; in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.7932296395301819, Code:
int v4 = p0.verifySessionsRequest(p1, p2, v1, v2);
List v8 = MediaSessionService.-$$Nest$mgetActiveSessionsLocked(this.this$0, v4);
  - Similarity: 0.7639853358268738, Code:
int v7 = MediaSessionService$SessionManagerImpl.handleIncomingUser(v1, v2, p2, v5);
List v13 = this.this$0.getActiveSessionsLocked(v4);
  - Access Control Level: SYS_OR_SIG

- API Name: requestCreateSessionWithManager(Landroid/media/IMediaRouter2Manager;ILandroid/media/RoutingSessionInfo;Landroid/media/MediaRoute2Info;)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7810484766960144, Code:
MediaRouter2ServiceImpl.requestCreateSessionWithManagerLocked(p2, p1, p3, p4);
  - Access Control Level: NONE

- API Name: requestCreateSessionWithRouter2(Landroid/media/IMediaRouter2;IJLandroid/media/RoutingSessionInfo;Landroid/media/MediaRoute2Info;Landroid/os/Bundle;)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7588597536087036, Code:
MediaRouter2ServiceImpl.requestCreateSessionWithRouter2Locked(p2, p3, p1, p4, p5, p6);
  - Access Control Level: NONE

- API Name: getSessionPolicies(Landroid/media/session/MediaSession$Token;)I in the following Class: Lcom.android.server.media.MediaSessionService$SessionManagerImpl with the following sink code entries:
  - Similarity: 0.7467337250709534, Code:
MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p1);
if (v2 == 0) {
    int v3 = v2.getSessionPolicies();
    return v3;
  - Access Control Level: NONE

- API Name: getUsers(ZZZ)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7385088205337524, Code:
ArrayList v3 = new ArrayList(v4);
int v4 = this.mUsers.size();
UserInfo v12 = new UserInfo(UserManagerService$UserData.info);
boolean v14 = v3.add(v9);
List v2 = v3; return v2;
  - Access Control Level: SYS_OR_SIG

