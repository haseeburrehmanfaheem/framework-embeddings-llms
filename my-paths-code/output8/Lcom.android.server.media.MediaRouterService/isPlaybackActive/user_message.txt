This is path 1 for the API with depth 1:
public boolean isPlaybackActive(IMediaRouterClient p1){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v2 = p1.asBinder();
		Object v3 = this.mAllClientRecords.get(v2);
		if (v3 == 0) {
			Integer v5 = Integer.valueOf(MediaRouterService$ClientRecord.mUid);
			boolean v6 = this.mActiveAudioUids.contains(v5);
			boolean v4 = v6;
			Binder.restoreCallingIdentity(v1);
			return v4;
		}
	}
}


This is path 2 for the API with depth 0:
public boolean isPlaybackActive(IMediaRouterClient p1){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v2 = p1.asBinder();
		Object v3 = this.mAllClientRecords.get(v2);
		if (v3 == 0) {
			boolean v4 = this.mAudioPlayerStateMonitor.isPlaybackActive(MediaRouterService$ClientRecord.mUid);
			Binder.restoreCallingIdentity(v1);
			return v4;
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isPlaybackActive(IMediaRouterClient p1){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v2 = p1.asBinder();
		Object v3 = this.mAllClientRecords.get(v2);
		if (v3 == 0) {
			Binder.restoreCallingIdentity(v1);
			return 0;
		}
	}
}
