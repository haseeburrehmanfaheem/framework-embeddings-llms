The method unregisterRouter2 in the following class Lcom.android.server.media.MediaRouterService has the following code snippet:

This is path 1 for the API with depth 2:
public void unregisterRouter2(IMediaRouter2 p1){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	long v3 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	Object v6 = this.mAllRouterRecords.remove(v5);
	if (v6 != 0) {
		boolean v7 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.remove(v6);
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda15 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda15();
		Message v10 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, 0);
		boolean v11 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v10);
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda16 v12 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda16();
		Message v14 = PooledLambda.obtainMessage(v12, MediaRouter2ServiceImpl$UserRecord.mHandler);
		boolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);
		v6.dispose();
		MediaRouter2ServiceImpl.disposeUserIfNeededLocked(MediaRouter2ServiceImpl$RouterRecord.mUserRecord);
		Binder.restoreCallingIdentity(v3);
		return;
	}
}


This is path 2 for the API with depth 1:
public void unregisterRouter2(IMediaRouter2 p1){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	long v3 = Binder.clearCallingIdentity();
	MediaRouter2ServiceImpl.unregisterRouter2Locked(p1, 0);
	Binder.restoreCallingIdentity(v3);
	return;
}


This is path 3 for the API with depth 0:
public void unregisterRouter2(IMediaRouter2 p1){
	this.mService2.unregisterRouter2(p1);
	return;
}

and the following sink code:
['Object v2 = Objects.requireNonNull(p1, "router must not be null");\nIBinder v5 = p1.asBinder();\nObject v6 = this.mAllRouterRecords.remove(v5);\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda15 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda15();\nMessage v10 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, 0);\nboolean v11 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v10);\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda16 v12 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda16();\nMessage v14 = PooledLambda.obtainMessage(v12, MediaRouter2ServiceImpl$UserRecord.mHandler);\nboolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);\nv6.dispose();\nMediaRouter2ServiceImpl.disposeUserIfNeededLocked(MediaRouter2ServiceImpl$RouterRecord.mUserRecord);', 'MediaRouter2ServiceImpl.unregisterRouter2Locked(p1, 0);', 'this.mService2.unregisterRouter2(p1);']

The method unregisterRouter2 has the following similar APIs:

- API Name: unregisterManager(Landroid/media/IMediaRouter2Manager;)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.9293285608291626, Code:
MediaRouter2ServiceImpl.unregisterManagerLocked(p1, 0);
  - Access Control Level: NONE

- API Name: registerRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.9277785420417786, Code:
this.mService2.registerRouter2(p1, p2);
  - Similarity: 0.9273350238800049, Code:
MediaRouter2ServiceImpl.registerRouter2Locked(p1, v10, v11, p2, v13, 1, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: setRouteVolumeWithRouter2(Landroid/media/IMediaRouter2;Landroid/media/MediaRoute2Info;I)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.8860583901405334, Code:
IBinder v6 = p1.asBinder();
Object v7 = this.mAllRouterRecords.get(v6);
MediaRouter2ServiceImpl$$ExternalSyntheticLambda5 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda5();
Integer v11 = Integer.valueOf(p3);
Message v12 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, v10, p2, v11);
boolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);
  - Access Control Level: NONE

- API Name: deselectRouteWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;Landroid/media/MediaRoute2Info;)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.883737325668335, Code:
MediaRouter2ServiceImpl.deselectRouteWithRouter2Locked(p1, p2, p3);
  - Access Control Level: NONE

- API Name: releaseSessionWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.8602712750434875, Code:
this.mService2.releaseSessionWithRouter2(p1, p2);
  - Access Control Level: NONE

