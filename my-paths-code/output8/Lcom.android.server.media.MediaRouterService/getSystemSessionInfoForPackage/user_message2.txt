The method getSystemSessionInfoForPackage in the following class Lcom.android.server.media.MediaRouterService has the following code snippet:

This is path 1 for the API with depth 2:
public RoutingSessionInfo getSystemSessionInfoForPackage(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	Object v4 = this.mUserRecords.get(v3);
	if (v4 == 0) {
		Iterator v5 = MediaRouterService$UserRecord.mClientRecords.iterator();
		boolean v6 = v5.hasNext();
		if (v6 == 0) {
			Object v7 = v5.next();
			boolean v8 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
			if (v8 == 0) {
				boolean v9 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v9 == 0) {
					boolean v10 = v5.hasNext();
					if (v10 == 0) {
						Object v11 = v5.next();
						boolean v12 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
						if (v12 == 0) {
							boolean v13 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
							if (v13 == 0) {
								if (v18 != 0) {
									long v19 = Binder.clearCallingIdentity();
									MediaRouter2ServiceImpl$$ExternalSyntheticLambda3 v26 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda3();
									Message v28 = PooledLambda.obtainMessage(v26, MediaRouter2ServiceImpl$UserRecord.mHandler);
									boolean v29 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v28);
									MediaRouter2ServiceImpl$UserRecord v20 = v21;
									if (1 == 0) {
										if (1 == 0) {
											SystemMediaRoute2Provider v30 = this.mSystemProvider;
											boolean v32 = MediaRoute2Provider.mSessionInfos.isEmpty();
											if (v32 == 0) {
												RoutingSessionInfo$Builder v33 = new RoutingSessionInfo$Builder("SYSTEM_SESSION",p2);
												RoutingSessionInfo$Builder v35 = v33.setSystemSession(1);
												String v36 = this.mDeviceRoute.getId();
												RoutingSessionInfo$Builder v37 = v35.addSelectedRoute(v36);
												if (this.mBtRouteProvider == 0) {
													List v38 = this.mBtRouteProvider.getAllBluetoothRoutes();
													Iterator v39 = v38.iterator();
													boolean v40 = v39.hasNext();
													if (v40 == 0) {
														Object v41 = v39.next();
														String v42 = v41.getId();
														RoutingSessionInfo$Builder v43 = v35.addTransferableRoute(v42);
														boolean v44 = v39.hasNext();
														if (v44 == 0) {
															RoutingSessionInfo$Builder v45 = v35.setProviderId(MediaRoute2Provider.mUniqueId);
															RoutingSessionInfo v46 = v45.build();
															RoutingSessionInfo v31 = v46;
															Binder.restoreCallingIdentity(v19);
															RoutingSessionInfo v14 = v31;
															return v14;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public RoutingSessionInfo getSystemSessionInfoForPackage(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	Object v4 = this.mUserRecords.get(v3);
	if (v4 == 0) {
		Iterator v5 = MediaRouterService$UserRecord.mClientRecords.iterator();
		boolean v6 = v5.hasNext();
		if (v6 == 0) {
			Object v7 = v5.next();
			boolean v8 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
			if (v8 == 0) {
				boolean v9 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v9 == 0) {
					boolean v10 = v5.hasNext();
					if (v10 == 0) {
						Object v11 = v5.next();
						boolean v12 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
						if (v12 == 0) {
							boolean v13 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
							if (v13 == 0) {
								if (v18 != 0) {
									long v19 = Binder.clearCallingIdentity();
									MediaRouter2ServiceImpl$UserRecord v20 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v17);
									if (1 == 0) {
										if (1 == 0) {
											SystemMediaRoute2Provider v21 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
											List v22 = v21.getSessionInfos();
											if (v22 == 0) {
												boolean v23 = v22.isEmpty();
												if (v23 != 0) {
													RoutingSessionInfo$Builder v24 = new RoutingSessionInfo$Builder(v25);
													Object v25 = v22.get(0);
													RoutingSessionInfo$Builder v27 = v24.setClientPackageName(p2);
													RoutingSessionInfo v28 = v27.build();
													Binder.restoreCallingIdentity(v19);
													RoutingSessionInfo v14 = generateDeviceRouteSelectedSessionInfo();
													return v14;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public RoutingSessionInfo getSystemSessionInfoForPackage(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	Object v4 = this.mUserRecords.get(v3);
	if (v4 == 0) {
		Iterator v5 = MediaRouterService$UserRecord.mClientRecords.iterator();
		boolean v6 = v5.hasNext();
		if (v6 == 0) {
			Object v7 = v5.next();
			boolean v8 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
			if (v8 == 0) {
				boolean v9 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v9 == 0) {
					boolean v10 = v5.hasNext();
					if (v10 == 0) {
						Object v11 = v5.next();
						boolean v12 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
						if (v12 == 0) {
							boolean v13 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
							if (v13 == 0) {
								RoutingSessionInfo v14 = this.mService2.getSystemSessionInfo(p2, 1);
								return v14;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['RoutingSessionInfo$Builder v33 = new RoutingSessionInfo$Builder("SYSTEM_SESSION",p2);\nRoutingSessionInfo$Builder v35 = v33.setSystemSession(1);\nString v36 = this.mDeviceRoute.getId();\nRoutingSessionInfo$Builder v37 = v35.addSelectedRoute(v36);\nList v38 = this.mBtRouteProvider.getAllBluetoothRoutes();\nIterator v39 = v38.iterator();\nObject v41 = v39.next();\nString v42 = v41.getId();\nRoutingSessionInfo$Builder v43 = v35.addTransferableRoute(v42);\nRoutingSessionInfo$Builder v45 = v35.setProviderId(MediaRoute2Provider.mUniqueId);\nRoutingSessionInfo v46 = v45.build();\nreturn v14;', 'SystemMediaRoute2Provider v21 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);\nList v22 = v21.getSessionInfos();\nObject v25 = v22.get(0);\nRoutingSessionInfo$Builder v24 = new RoutingSessionInfo$Builder(v25);\nRoutingSessionInfo$Builder v27 = v24.setClientPackageName(p2);\nRoutingSessionInfo v28 = v27.build();', 'RoutingSessionInfo v14 = this.mService2.getSystemSessionInfo(p2, 1);\nreturn v14;']

The method getSystemSessionInfoForPackage has the following similar APIs:

- API Name: getSystemSessionInfo()Landroid/media/RoutingSessionInfo; in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.9645836353302002, Code:
RoutingSessionInfo v1 = this.mService2.getSystemSessionInfo(0, 0);
return v1;
  - Similarity: 0.9294508695602417, Code:
RoutingSessionInfo$Builder v20 = new RoutingSessionInfo$Builder("SYSTEM_SESSION",0);
RoutingSessionInfo$Builder v22 = v20.setSystemSession(1);
String v23 = this.mDeviceRoute.getId();
RoutingSessionInfo$Builder v24 = v22.addSelectedRoute(v23);
...
RoutingSessionInfo v33 = v32.build();
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: getSystemRoutes()Ljava/util/List; in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.8554904460906982, Code:
MediaRouter2ServiceImpl$UserRecord v7 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v4);
SystemMediaRoute2Provider v8 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
MediaRoute2ProviderInfo v9 = v8.getProviderInfo();
Collection v10 = v9.getRoutes();
ArrayList v11 = new ArrayList(v10);
List v1 = v11;
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: setSelectedRoute(Landroid/media/IMediaRouterClient;Ljava/lang/String;Z)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7728040218353271, Code:
MediaRouterService$ClientRecord.mSelectedRouteId = p2;
Message v10 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, mSelectedRouteId);
v10.sendToTarget();
Message v12 = MediaRouterService$UserRecord.mHandler.obtainMessage(4, p2);
v12.sendToTarget();
  - Similarity: 0.7463921308517456, Code:
MediaRouterService$ClientRecord.mSelectedRouteId = p2;
Message v21 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, mSelectedRouteId);
v21.sendToTarget();
  - Access Control Level: NONE

- API Name: registerClientAsUser(Landroid/media/IMediaRouterClient;Ljava/lang/String;I)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.741686224937439, Code:
MediaRouterService$UserRecord v11 = new MediaRouterService$UserRecord(MediaRouterService,v4);
MediaRouterService$ClientRecord v13 = new MediaRouterService$ClientRecord(MediaRouterService,v11,p1,v1,v3,p2,1);
v8.linkToDeath(v13, 0);
MediaRouterService.initializeUserLocked(v11);
boolean v18 = MediaRouterService$UserRecord.mClientRecords.add(v13);
Object v19 = this.mAllClientRecords.put(v8, v13);
MediaRouterService.initializeClientLocked(v13);
  - Access Control Level: SYS_OR_SIG

- API Name: setDiscoveryRequest(Landroid/media/IMediaRouterClient;IZ)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7295628786087036, Code:
MediaRouterService$ClientRecord.mRouteTypes = p2;
MediaRouterService$ClientRecord.mActiveScan = p3;
  - Access Control Level: NONE

