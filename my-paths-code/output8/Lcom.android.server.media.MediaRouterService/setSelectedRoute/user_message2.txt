The method setSelectedRoute in the following class Lcom.android.server.media.MediaRouterService has the following code snippet:

This is path 1 for the API with depth 2:
public void setSelectedRoute(IMediaRouterClient p1, String p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v3 = p1.asBinder();
		Object v4 = this.mAllClientRecords.get(v3);
		if (v4 == 0) {
			boolean v5 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
			if (v5 != 0) {
				boolean v6 = this.mBluetoothA2dpRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v6 == 0) {
					MediaRouterService$ClientRecord.mSelectedRouteId = p2;
					boolean v7 = this.mDefaultAudioRouteId.equals(p2);
					if (v7 != 0) {
						boolean v8 = this.mBluetoothA2dpRouteId.equals(p2);
						if (v8 == 0) {
							boolean v9 = Objects.equals(p2, mSelectedRouteId);
							if (v9 != 0) {
								if (this.DEBUG == 0) {
									if (p3 == 0) {
										if (MediaRouterService$ClientRecord.mTrusted == 0) {
											if (mSelectedRouteId == 0) {
												Message v10 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, mSelectedRouteId);
												v10.sendToTarget();
												if (p2 == 0) {
													Message v12 = MediaRouterService$UserRecord.mHandler.obtainMessage(4, p2);
													v12.sendToTarget();
													if (MediaRouterService$ClientRecord.mGroupId == 0) {
														ArrayMap v14 = this.mClientGroupMap;
														Object v15 = v14.get(MediaRouterService$ClientRecord.mGroupId);
														if (v15 == 0) {
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setSelectedRoute(IMediaRouterClient p1, String p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v3 = p1.asBinder();
		Object v4 = this.mAllClientRecords.get(v3);
		if (v4 == 0) {
			boolean v5 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
			if (v5 != 0) {
				boolean v6 = this.mBluetoothA2dpRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v6 == 0) {
					MediaRouterService$ClientRecord.mSelectedRouteId = p2;
					boolean v7 = this.mDefaultAudioRouteId.equals(p2);
					if (v7 != 0) {
						boolean v8 = this.mBluetoothA2dpRouteId.equals(p2);
						if (v8 == 0) {
							boolean v9 = Objects.equals(p2, mSelectedRouteId);
							if (v9 != 0) {
								if (this.DEBUG == 0) {
									if (p3 == 0) {
										if (MediaRouterService$ClientRecord.mTrusted == 0) {
											if (mSelectedRouteId == 0) {
												Message v21 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, mSelectedRouteId);
												v21.sendToTarget();
												if (p2 == 0) {
													if (MediaRouterService$ClientRecord.mGroupId == 0) {
														Binder.restoreCallingIdentity(v1);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setSelectedRoute(IMediaRouterClient p1, String p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		p0.setSelectedRouteLocked(p1, p2, p3);
		Binder.restoreCallingIdentity(v1);
		return;
	}
}

and the following sink code:
['MediaRouterService$ClientRecord.mSelectedRouteId = p2;\nMessage v10 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, mSelectedRouteId);\nv10.sendToTarget();\nMessage v12 = MediaRouterService$UserRecord.mHandler.obtainMessage(4, p2);\nv12.sendToTarget();', 'MediaRouterService$ClientRecord.mSelectedRouteId = p2;\nMessage v21 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, mSelectedRouteId);\nv21.sendToTarget();', 'p0.setSelectedRouteLocked(p1, p2, p3);']

The method setSelectedRoute has the following similar APIs:

- API Name: requestSetVolume(Landroid/media/IMediaRouterClient;Ljava/lang/String;I)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.8627201914787292, Code:
Message v5 = MediaRouterService$UserRecord.mHandler.obtainMessage(6, p3, 0, p2);
v5.sendToTarget();
  - Access Control Level: NONE

- API Name: requestUpdateVolume(Landroid/media/IMediaRouterClient;Ljava/lang/String;I)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.860639214515686, Code:
Message v5 = MediaRouterService$UserRecord.mHandler.obtainMessage(7, p3, 0, p2);
v5.sendToTarget();
  - Access Control Level: NONE

- API Name: deselectRouteWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;Landroid/media/MediaRoute2Info;)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.8112722635269165, Code:
MediaRouter2ServiceImpl.deselectRouteWithRouter2Locked(p1, p2, p3);
  - Access Control Level: NONE

- API Name: setDiscoveryRequest(Landroid/media/IMediaRouterClient;IZ)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7909712791442871, Code:
MediaRouterService$ClientRecord.mRouteTypes = p2;
MediaRouterService$ClientRecord.mActiveScan = p3;
  - Access Control Level: NONE

- API Name: getSystemRoutes()Ljava/util/List; in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7903757095336914, Code:
MediaRouter2ServiceImpl$UserRecord v7 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v4);
SystemMediaRoute2Provider v8 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
MediaRoute2ProviderInfo v9 = v8.getProviderInfo();
Collection v10 = v9.getRoutes();
ArrayList v11 = new ArrayList(v10);
List v1 = v11;
return v1;
  - Access Control Level: SYS_OR_SIG

