The method setRouteVolumeWithRouter2 has the following code snippet:

This is path 1 for the API with depth 2:
public void setRouteVolumeWithRouter2(IMediaRouter2 p1, MediaRoute2Info p2, int p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p2, "route must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	Object v7 = this.mAllRouterRecords.get(v6);
	if (v7 == 0) {
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda5 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda5();
		Long v10 = Long.valueOf(-1);
		Integer v11 = Integer.valueOf(p3);
		Message v12 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, v10, p2, v11);
		boolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}


This is path 2 for the API with depth 1:
public void setRouteVolumeWithRouter2(IMediaRouter2 p1, MediaRoute2Info p2, int p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p2, "route must not be null");
	long v4 = Binder.clearCallingIdentity();
	MediaRouter2ServiceImpl.setRouteVolumeWithRouter2Locked(p1, p2, p3);
	Binder.restoreCallingIdentity(v4);
	return;
}


This is path 3 for the API with depth 0:
public void setRouteVolumeWithRouter2(IMediaRouter2 p1, MediaRoute2Info p2, int p3){
	this.mService2.setRouteVolumeWithRouter2(p1, p2, p3);
	return;
}

and the following sink code:
['IBinder v6 = p1.asBinder();\nObject v7 = this.mAllRouterRecords.get(v6);\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda5 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda5();\nInteger v11 = Integer.valueOf(p3);\nMessage v12 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, v10, p2, v11);\nboolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);', 'MediaRouter2ServiceImpl.setRouteVolumeWithRouter2Locked(p1, p2, p3);']

The method setRouteVolumeWithRouter2 has the following similar APIs:

- API Name: setSessionVolumeWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;I)V with Similarity Score: 0.9342541098594666
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl.setSessionVolumeWithRouter2Locked(p1, p2, p3);

- API Name: unregisterRouter2(Landroid/media/IMediaRouter2;)V with Similarity Score: 0.8860583901405334
  - Access Control Level: NONE and the following code:
Object v2 = Objects.requireNonNull(p1, "router must not be null");
IBinder v5 = p1.asBinder();
Object v6 = this.mAllRouterRecords.remove(v5);
MediaRouter2ServiceImpl$$ExternalSyntheticLambda15 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda15();
Message v10 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, 0);
boolean v11 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v10);
MediaRouter2ServiceImpl$$ExternalSyntheticLambda16 v12 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda16();
Message v14 = PooledLambda.obtainMessage(v12, MediaRouter2ServiceImpl$UserRecord.mHandler);
boolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);
v6.dispose();
MediaRouter2ServiceImpl.disposeUserIfNeededLocked(MediaRouter2ServiceImpl$RouterRecord.mUserRecord);

