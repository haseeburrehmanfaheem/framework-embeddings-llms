The method setOemUnlockEnabled in the following class Lcom.android.server.PersistentDataBlockService$1 has the following code snippet:

This is path 1 for the API with depth 2:
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	if (v1 == 0) {
		int v5 = UserHandle.getCallingUserId();
		UserManager v6 = UserManager.get(this.mContext);
		boolean v7 = v6.isUserAdmin(v5);
		if (v7 == 0) {
			if (p1 == 0) {
				Object v16 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
				FileChannel v19 = PersistentDataBlockService.getBlockOutputChannel();
				long v20 = PersistentDataBlockService.getBlockDeviceSize();
				FileChannel v21 = v19.position((v20 - 1));
				ByteBuffer v22 = ByteBuffer.allocate(1);
				if (p1 == 0) {
					ByteBuffer v23 = v22.put(1);
					Buffer v24 = v22.flip();
					int v25 = v19.write(v22);
					v19.force(1);
					if (p1 == 0) {
						SystemProperties.set("sys.oem_unlock_allowed", "1");
						byte[] v30 = PersistentDataBlockService.computeDigestLocked(0);
						if (v30 == 0) {
							FileChannel v31 = PersistentDataBlockService.getBlockOutputChannel();
							ByteBuffer v32 = ByteBuffer.allocate(32);
							ByteBuffer v33 = v32.put(v30);
							Buffer v34 = v32.flip();
							int v35 = v31.write(v32);
							v31.force(1);
							boolean v29 = 1;
							boolean v28 = v29;
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	if (v1 == 0) {
		this.this$0.enforceIsAdmin();
		if (p1 == 0) {
			this.this$0.enforceUserRestriction("no_oem_unlock");
			this.this$0.enforceUserRestriction("no_factory_reset");
			Object v9 = this.mLock;
			this.this$0.doSetOemUnlockEnabledLocked(p1);
			boolean v13 = this.this$0.computeAndWriteDigestLocked();
			boolean v12 = v13;
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void setOemUnlockEnabled(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	if (v1 == 0) {
		return;
	}
}

and the following sink code:
['int v5 = UserHandle.getCallingUserId();\nboolean v7 = v6.isUserAdmin(v5);\nFileChannel v19 = PersistentDataBlockService.getBlockOutputChannel();\nByteBuffer v22 = ByteBuffer.allocate(1);\nv23 = v22.put(1);\nBuffer v24 = v22.flip();\nint v25 = v19.write(v22);\nSystemProperties.set("sys.oem_unlock_allowed", "1");\nbyte[] v30 = PersistentDataBlockService.computeDigestLocked(0);', 'this.this$0.enforceIsAdmin();\nif (p1 == 0) { ... }\nthis.this$0.doSetOemUnlockEnabledLocked(p1);\nboolean v13 = this.this$0.computeAndWriteDigestLocked();']

The method setOemUnlockEnabled has the following similar APIs:

- API Name: getOemUnlockEnabled()Z in the following Class: Lcom.android.server.PersistentDataBlockService$1 with the following sink code entries:
  - Similarity: 0.7475458979606628, Code:
boolean v3 = this.this$0.doGetOemUnlockEnabled();
return v2;
  - Access Control Level: SYS_OR_SIG

- API Name: provideContextImage(IILandroid/os/Bundle;)V in the following Class: Lcom.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub with the following sink code entries:
  - Similarity: 0.7170129418373108, Code:
int v1 = UserHandle.getCallingUserId();
boolean v6 = AbstractMasterSystemService.mServiceNameResolver.isTemporary(v1);
TaskSnapshot v11 = v10.getTaskSnapshotBlocking(p2, 0);
HardwareBuffer v12 = v11.getHardwareBuffer();
ColorSpace v13 = v11.getColorSpace();
  - Access Control Level: SYS_OR_SIG

- API Name: addAccount(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZLandroid/os/Bundle;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7140997648239136, Code:
int v17 = Binder.getCallingUid();
int v25 = UserHandle.getUserId(v24);
Object v28 = LocalServices.getService(DevicePolicyManagerInterna.class);
boolean v29 = v28.isActiveProfileOwner(v24);
  - Access Control Level: SYS_OR_SIG

- API Name: getServiceSettingsActivity(Lcom/android/internal/os/IResultReceiver;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.711193859577179, Code:
int v5 = UserHandle.getCallingUserId();
AbstractPerUserSystemService v8 = this.this$0.getServiceForUserLocked(v5);
String v10 = this.mInfo.getSettingsActivity();
ComponentName v12 = new ComponentName(ServiceInfo.packageName,v10);
Bundle v15 = new Bundle();
v15.putParcelable("EXTRA", v9);
p1.send(0, v14);
  - Access Control Level: NONE

- API Name: createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.703654408454895, Code:
int v4 = UserManagerService.scanNextAvailableIdLocked();
long v16 = UserManagerService.logUserJourneyBegin(4, v3, p2, p3);
Object v18 = this.mUserTypes.get(p2);
boolean v21 = UserManagerService.checkUserTypeConsistency((p3 | v20));
UserInfo v31 = UserManagerService.convertPreCreatedUserIfPossible(v19, (p3 | v20), p1, 0);
  - Access Control Level: SYS_OR_SIG

