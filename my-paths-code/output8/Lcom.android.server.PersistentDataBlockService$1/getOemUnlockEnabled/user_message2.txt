The method getOemUnlockEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public boolean getOemUnlockEnabled(){
	DataInputStream v4 = new DataInputStream(v5);
	FileInputStream v5 = new FileInputStream(v6);
	File v6 = new File(this.mDataBlockFile);
	long v10 = PersistentDataBlockService.getBlockDeviceSize();
	long v11 = v4.skip((v10 - 1));
	byte v12 = v4.readByte();
	if (v12 == 0) {
		IoUtils.closeQuietly(v4);
		boolean v3 = 1;
		boolean v2 = v3;
		return v2;
	}
}


This is path 2 for the API with depth 1:
public boolean getOemUnlockEnabled(){
	boolean v3 = this.this$0.doGetOemUnlockEnabled();
	boolean v2 = v3;
	return v2;
}


This is path 3 for the API with depth 0:
public boolean getOemUnlockEnabled(){
	boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);
	return v2;
}

and the following sink code:
['boolean v3 = this.this$0.doGetOemUnlockEnabled();\nreturn v2;', 'boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);\nreturn v2;', 'long v10 = PersistentDataBlockService.getBlockDeviceSize();\nbyte v12 = v4.readByte();\nif (v12 == 0) {\n    IoUtils.closeQuietly(v4);\n    boolean v3 = 1;\n    boolean v2 = v3;\n    return v2;']

The method getOemUnlockEnabled has the following similar APIs:

- API Name: getMaximumDataBlockSize()J with Similarity Score: 0.8973588943481445
  - Access Control Level: NONE and the following code:
long v6 = PersistentDataBlockService.getBlockDeviceSize();
if (((((((v6 - 8) - 32) - 10000) - 1000) - 1) < 102400) > 0) {
long v5 = (((((v6 - 8) - 32) - 10000) - 1000) - 1);
long v4 = v5;
return v4;

- API Name: isOemUnlockAllowedByUser()Z with Similarity Score: 0.8531753420829773
  - Access Control Level: SYS_OR_SIG and the following code:
OemLock v3 = this.mOemLock;
boolean v4 = v3.isOemUnlockAllowedByDevice();
return v4;

