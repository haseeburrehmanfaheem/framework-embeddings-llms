The method abort has the following code snippet:

This is path 1 for the API with depth 2:
public boolean abort(){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		if (v2 != 0) {
			IGsiService v3 = 0;
			IGsiService v1 = v3;
			boolean v4 = v1.cancelGsiInstall();
			return v4;
		}
	}
}


This is path 2 for the API with depth 1:
public boolean abort(){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		IGsiService v3 = IGsiService$Stub.asInterface(v2);
		IGsiService v1 = v3;
		boolean v4 = v1.cancelGsiInstall();
		return v4;
	}
}


This is path 3 for the API with depth 0:
public boolean abort(){
	IGsiService v1 = p0.getGsiService();
	boolean v2 = v1.cancelGsiInstall();
	return v2;
}

and the following sink code:
['IGsiService v3 = IGsiService$Stub.asInterface(v2);\nIGsiService v1 = v3;\nboolean v4 = v1.cancelGsiInstall();', 'IGsiService v1 = p0.getGsiService();\nboolean v2 = v1.cancelGsiInstall();']

The method abort has the following similar APIs:

- API Name: finishInstallation()Z with Similarity Score: 0.9025013446807861
  - Access Control Level: NONE and the following code:
IGsiService v1 = p0.getGsiService();
int v2 = v1.closeInstall();

- API Name: startInstallation(Ljava/lang/String;)Z with Similarity Score: 0.8648539781570435
  - Access Control Level: NONE and the following code:
IGsiService v1 = p0.getGsiService();
this.mGsiService = v1;
int v24 = v1.openInstall(v2);

