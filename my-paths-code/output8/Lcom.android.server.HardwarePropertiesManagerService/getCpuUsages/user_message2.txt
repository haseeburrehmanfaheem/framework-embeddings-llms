The method getCpuUsages has the following code snippet:

This is path 1 for the API with depth 1:
public CpuUsageInfo getCpuUsages(String p1){
	if (v9 == 0) {
		if (v6 == 0) {
			boolean v10 = v6.isCurrentVrListener(p1, v5);
			if (v10 == 0) {
				CpuUsageInfo v11 = HardwarePropertiesManagerService.nativeGetCpuUsages();
				return v11;
			}
		}
	}
}


This is path 2 for the API with depth 0:
public CpuUsageInfo getCpuUsages(String p1){
	p0.enforceHardwarePropertiesRetrievalAllowed(p1);
	CpuUsageInfo v2 = HardwarePropertiesManagerService.nativeGetCpuUsages();
	return v2;
}

and the following sink code:
['CpuUsageInfo v11 = HardwarePropertiesManagerService.nativeGetCpuUsages();\nreturn v11;', 'CpuUsageInfo v2 = HardwarePropertiesManagerService.nativeGetCpuUsages();\nreturn v2;', 'boolean v10 = v6.isCurrentVrListener(p1, v5);']

The method getCpuUsages has the following similar APIs:

- API Name: isTrusted(Ljava/lang/String;II)Z with Similarity Score: 0.8260577321052551
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v15 = v13.hasEnabledNotificationListener(p1, v14);
return 0;

- API Name: isTrusted(Ljava/lang/String;II)Z with Similarity Score: 0.7650507688522339
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v6 = p0.hasEnabledNotificationListener(v3, p1, p3);

