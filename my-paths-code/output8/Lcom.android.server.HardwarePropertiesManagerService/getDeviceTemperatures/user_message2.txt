The method getDeviceTemperatures has the following code snippet:

This is path 1 for the API with depth 1:
public [F getDeviceTemperatures(String p1, int p2, int p3){
	if (v9 == 0) {
		if (v6 == 0) {
			boolean v10 = v6.isCurrentVrListener(p1, v5);
			if (v10 == 0) {
				[F v11 = HardwarePropertiesManagerService.nativeGetDeviceTemperatures(p2, p3);
				return v11;
			}
		}
	}
}


This is path 2 for the API with depth 0:
public [F getDeviceTemperatures(String p1, int p2, int p3){
	p0.enforceHardwarePropertiesRetrievalAllowed(p1);
	[F v2 = HardwarePropertiesManagerService.nativeGetDeviceTemperatures(p2, p3);
	return v2;
}

and the following sink code:
['p0.enforceHardwarePropertiesRetrievalAllowed(p1);\n[F v2 = HardwarePropertiesManagerService.nativeGetDeviceTemperatures(p2, p3);\nreturn v2;', 'boolean v10 = v6.isCurrentVrListener(p1, v5);\n[F v11 = HardwarePropertiesManagerService.nativeGetDeviceTemperatures(p2, p3);\nreturn v11;']

The method getDeviceTemperatures has the following similar APIs:

- API Name: getCpuUsages(Ljava/lang/String;)[Landroid/os/CpuUsageInfo; with Similarity Score: 0.742050051689148
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v10 = v6.isCurrentVrListener(p1, v5);

- API Name: getFanSpeeds(Ljava/lang/String;)[F with Similarity Score: 0.7404705286026001
  - Access Control Level: SYS_OR_SIG and the following code:
[F v11 = HardwarePropertiesManagerService.nativeGetFanSpeeds();
return v11;

