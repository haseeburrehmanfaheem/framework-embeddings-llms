The method generateChallenge in the following class Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper has the following code snippet:

This is path 1 for the API with depth 2:
public void generateChallenge(IBinder p1, int p2, int p3, IFingerprintServiceReceiver p4, String p5){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			boolean v9 = v5.hasNext();
			if (v9 == 0) {
				Object v10 = v5.next();
				boolean v11 = v10.containsSensor(p2);
				if (v11 == 0) {
					ServiceProvider v4 = v10;
					ServiceProvider v3 = v4;
					if (v3 != 0) {
						v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
						return;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void generateChallenge(IBinder p1, int p2, int p3, IFingerprintServiceReceiver p4, String p5){
	ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
	ServiceProvider v3 = v4;
	if (v3 != 0) {
		v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
		return;
	}
}


This is path 3 for the API with depth 0:
public void generateChallenge(IBinder p1, int p2, int p3, IFingerprintServiceReceiver p4, String p5){
	ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	if (v3 != 0) {
		v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
		return;
	}
}

and the following sink code:
['ServiceProvider v4 = this.this$0.getProviderForSensor(p2);\nServiceProvider v3 = v4;\nif (v3 != 0) {\nv3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);\nreturn;']

The method generateChallenge has the following similar APIs:

- API Name: generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V in the following Class: Lcom.android.server.biometrics.sensors.face.FaceService$FaceServiceWrapper with the following sink code entries:
  - Similarity: 0.9801104068756104, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
  - Similarity: 0.9264253377914429, Code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
  - Similarity: 0.8849547505378723, Code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v10;
v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
  - Access Control Level: NORMAL

- API Name: revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8995612263679504, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
v3.scheduleRevokeChallenge(p2, p3, p1, p4, p5);
  - Similarity: 0.8697634339332581, Code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
v3.scheduleRevokeChallenge(p2, p3, p1, p4, p5);
  - Similarity: 0.8310685753822327, Code:
ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
v3.scheduleRevokeChallenge(p2, p3, p1, p4, p5);
  - Access Control Level: NORMAL

- API Name: resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8598565459251404, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
ServiceProvider v3 = v4;
v3.scheduleResetLockout(p2, p3, p4);
  - Similarity: 0.8391103148460388, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
if (v3 != 0) { v3.scheduleResetLockout(p2, p3, p4); return; }
  - Similarity: 0.7954414486885071, Code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
v3.scheduleResetLockout(p2, p3, p4);
  - Access Control Level: NORMAL

- API Name: prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V in the following Class: Lcom.android.server.biometrics.sensors.face.FaceService$FaceServiceWrapper with the following sink code entries:
  - Similarity: 0.8065288066864014, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
ClientMonitorCallbackConverter v5 = new ClientMonitorCallbackConverter(p6);
v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v5, p7, p8, 1, 2, p10, 0);
  - Access Control Level: NORMAL

- API Name: prepareForAuthentication(ILandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8030756711959839, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
ClientMonitorCallbackConverter v5 = new ClientMonitorCallbackConverter(p5);
v3.scheduleAuthenticate(p1, p2, p3, p4, p8, v5, p6, p7, 1, 2, p9);
  - Access Control Level: NORMAL

