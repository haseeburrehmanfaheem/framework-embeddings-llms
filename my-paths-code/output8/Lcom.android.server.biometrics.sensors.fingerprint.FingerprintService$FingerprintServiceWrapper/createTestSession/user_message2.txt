The method createTestSession in the following class Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper has the following code snippet:

This is path 1 for the API with depth 2:
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p1);
		if (v8 == 0) {
			boolean v9 = v5.hasNext();
			if (v9 == 0) {
				Object v10 = v5.next();
				boolean v11 = v10.containsSensor(p1);
				if (v11 == 0) {
					ServiceProvider v4 = v10;
					ServiceProvider v3 = v4;
					if (v3 != 0) {
						ITestSession v12 = v3.createTestSession(p1, p2, p3);
						return v12;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
	ServiceProvider v3 = v4;
	if (v3 != 0) {
		ITestSession v5 = v3.createTestSession(p1, p2, p3);
		return v5;
	}
}


This is path 3 for the API with depth 0:
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	if (v3 != 0) {
		ITestSession v4 = v3.createTestSession(p1, p2, p3);
		return v4;
	}
}

and the following sink code:
['ServiceProvider v4 = this.this$0.getProviderForSensor(p1);\nServiceProvider v3 = v4;\nif (v3 != 0) {\nITestSession v5 = v3.createTestSession(p1, p2, p3);\nreturn v5;', 'ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);\nif (v3 != 0) {\nITestSession v4 = v3.createTestSession(p1, p2, p3);\nreturn v4;']

The method createTestSession has the following similar APIs:

- API Name: openTuner(ILandroid/hardware/radio/RadioManager$BandConfig;ZLandroid/hardware/radio/ITunerCallback;)Landroid/hardware/radio/ITuner; in the following Class: Lcom.android.server.broadcastradio.BroadcastRadioService$ServiceImpl with the following sink code entries:
  - Similarity: 0.7193917632102966, Code:
ITuner v12 = v11.openSession(p1, p2, p3, p4);
return v12;
  - Access Control Level: SYS_OR_SIG

- API Name: hasFeatures(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;[Ljava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7132514715194702, Code:
AccountManagerService$TestFeaturesSession v47 = new AccountManagerService$TestFeaturesSession(p0,v29,p1,p2,p3);
AccountManagerService$TestFeaturesSession v29 = new AccountManagerService$TestFeaturesSession(p0,v27,p1,p2,p3);
AccountManagerService$TestFeaturesSession v27 = new AccountManagerService$TestFeaturesSession(p0,v26,p1,p2,p3);
  - Access Control Level: SYS_OR_SIG

- API Name: startOneTimePermissionSession(Ljava/lang/String;IJJII)V in the following Class: Lcom.android.server.pm.permission.PermissionManagerService with the following sink code entries:
  - Similarity: 0.7036841511726379, Code:
v4.startPackageOneTimeSession(p1, p3, p4, p5, p6);
  - Access Control Level: SYS_OR_SIG

