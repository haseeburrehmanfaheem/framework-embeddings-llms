The method getLockoutModeForUser in the following class Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper has the following code snippet:

This is path 1 for the API with depth 2:
public int getLockoutModeForUser(int p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p1);
		if (v8 == 0) {
			boolean v9 = v5.hasNext();
			if (v9 == 0) {
				Object v10 = v5.next();
				boolean v11 = v10.containsSensor(p1);
				if (v11 == 0) {
					ServiceProvider v4 = v10;
					ServiceProvider v3 = v4;
					if (v3 != 0) {
						int v12 = v3.getLockoutModeForUser(p1, p2);
						return v12;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
	ServiceProvider v3 = v4;
	if (v3 != 0) {
		int v5 = v3.getLockoutModeForUser(p1, p2);
		return v5;
	}
}


This is path 3 for the API with depth 0:
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	if (v3 != 0) {
		int v4 = v3.getLockoutModeForUser(p1, p2);
		return v4;
	}
}

and the following sink code:
['Iterator v5 = this.mServiceProviders.iterator();\nObject v7 = v5.next();\nboolean v8 = v7.containsSensor(p1);\nObject v10 = v5.next();\nboolean v11 = v10.containsSensor(p1);\nServiceProvider v4 = v10;\nServiceProvider v3 = v4;\nint v12 = v3.getLockoutModeForUser(p1, p2);\nreturn v12;', 'ServiceProvider v4 = this.this$0.getProviderForSensor(p1);\nServiceProvider v3 = v4;\nint v5 = v3.getLockoutModeForUser(p1, p2);\nreturn v5;', 'ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);\nint v4 = v3.getLockoutModeForUser(p1, p2);\nreturn v4;']

The method getLockoutModeForUser has the following similar APIs:

- API Name: resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.873020589351654, Code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
v3.scheduleResetLockout(p2, p3, p4);
  - Similarity: 0.8556392192840576, Code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v10;
if (v3 != 0) { v3.scheduleResetLockout(p2, p3, p4); return; }
  - Similarity: 0.8434714674949646, Code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v10;
ServiceProvider v3 = v4;
v3.scheduleResetLockout(p2, p3, p4);
  - Similarity: 0.8204473257064819, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
ServiceProvider v3 = v4;
v3.scheduleResetLockout(p2, p3, p4);
  - Similarity: 0.8188905715942383, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
if (v3 != 0) { v3.scheduleResetLockout(p2, p3, p4); return; }
  - Access Control Level: NORMAL

- API Name: getAuthenticatorId(II)J in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.857492208480835, Code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
if (v3 != 0) {
long v4 = v3.getAuthenticatorId(p1, p2);
return v4;
  - Similarity: 0.8444047570228577, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
ServiceProvider v3 = v4;
long v5 = v3.getAuthenticatorId(p1, p2);
return v5;
  - Similarity: 0.8413811326026917, Code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
ServiceProvider v3 = v4;
if (v3 != 0) {
long v5 = v3.getAuthenticatorId(p1, p2);
return v5;
  - Similarity: 0.8344560265541077, Code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p1);
Object v10 = v5.next();
boolean v11 = v10.containsSensor(p1);
ServiceProvider v4 = v10;
ServiceProvider v3 = v4;
long v12 = v3.getAuthenticatorId(p1, p2);
return v12;
  - Access Control Level: NORMAL

- API Name: cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8355559706687927, Code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
v3.cancelAuthentication(p1, p2, p4);
  - Similarity: 0.8189128637313843, Code:
Iterator v11 = this.mServiceProviders.iterator();
Object v13 = v11.next();
boolean v14 = v13.containsSensor(p1);
ServiceProvider v10 = v16;
v9.cancelAuthentication(p1, p2, p4);
  - Access Control Level: NORMAL

- API Name: getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal; in the following Class: Lcom.android.server.biometrics.sensors.face.FaceService$FaceServiceWrapper with the following sink code entries:
  - Similarity: 0.8257226943969727, Code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
if (v3 != 0) {
FaceSensorPropertiesInternal v4 = v3.getSensorProperties(p1);
return v4;
  - Access Control Level: NORMAL

- API Name: isHardwareDetected(ILjava/lang/String;)Z in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8122258186340332, Code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p1);
ServiceProvider v4 = v10;
ServiceProvider v3 = v4;
if (v3 != 0) { boolean v12 = v3.isHardwareDetected(p1); return v12; }
  - Access Control Level: NORMAL

