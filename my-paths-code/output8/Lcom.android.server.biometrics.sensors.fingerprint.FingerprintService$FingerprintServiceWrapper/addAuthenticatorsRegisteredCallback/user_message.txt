This is path 1 for the API with depth 2:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = this.mLock;
		RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
		boolean v5 = v4.register(p1);
		List v6 = this.mSensorProps;
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if (1 == 0) {
					ArrayList v10 = new ArrayList();
					boolean v12 = this.mSensorProps.isEmpty();
					if (v12 != 0) {
						ArrayList v13 = new ArrayList(this.mSensorProps);
						int v15 = this.mAuthenticatorsRegisteredCallbacks.beginBroadcast();
						if (0 >= v15) {
							IInterface v16 = this.mAuthenticatorsRegisteredCallbacks.getBroadcastItem(0);
							boolean v17 = v10.add(v16);
							boolean v18 = this.mAuthenticatorsRegisteredCallbacks.unregister(v16);
							if ((0 + 1) >= v15) {
								this.mAuthenticatorsRegisteredCallbacks.finishBroadcast();
								Iterator v20 = v10.iterator();
								boolean v21 = v20.hasNext();
								if (v21 == 0) {
									Object v22 = v20.next();
									v22.onAllAuthenticatorsRegistered(v13);
									boolean v24 = v20.hasNext();
									if (v24 == 0) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = this.mLock;
		RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
		boolean v5 = v4.register(p1);
		List v6 = this.mSensorProps;
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if (1 == 0) {
					this.this$0.broadcastAllAuthenticatorsRegistered();
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = FingerprintService.-$$Nest$fgetmLock(this.this$0);
		RemoteCallbackList v4 = FingerprintService.-$$Nest$fgetmAuthenticatorsRegisteredCallbacks(this.this$0);
		boolean v5 = v4.register(p1);
		List v6 = FingerprintService.-$$Nest$fgetmSensorProps(this.this$0);
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if (1 == 0) {
					FingerprintService.-$$Nest$mbroadcastAllAuthenticatorsRegistered(this.this$0);
					return;
				}
			}
		}
	}
}
