The method addAuthenticatorsRegisteredCallback in the following class Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper has the following code snippet:

This is path 1 for the API with depth 2:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = this.mLock;
		RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
		boolean v5 = v4.register(p1);
		List v6 = this.mSensorProps;
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if (1 == 0) {
					ArrayList v10 = new ArrayList();
					boolean v12 = this.mSensorProps.isEmpty();
					if (v12 != 0) {
						ArrayList v13 = new ArrayList(this.mSensorProps);
						int v15 = this.mAuthenticatorsRegisteredCallbacks.beginBroadcast();
						if (0 >= v15) {
							IInterface v16 = this.mAuthenticatorsRegisteredCallbacks.getBroadcastItem(0);
							boolean v17 = v10.add(v16);
							boolean v18 = this.mAuthenticatorsRegisteredCallbacks.unregister(v16);
							if ((0 + 1) >= v15) {
								this.mAuthenticatorsRegisteredCallbacks.finishBroadcast();
								Iterator v20 = v10.iterator();
								boolean v21 = v20.hasNext();
								if (v21 == 0) {
									Object v22 = v20.next();
									v22.onAllAuthenticatorsRegistered(v13);
									boolean v24 = v20.hasNext();
									if (v24 == 0) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = this.mLock;
		RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
		boolean v5 = v4.register(p1);
		List v6 = this.mSensorProps;
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if (1 == 0) {
					this.this$0.broadcastAllAuthenticatorsRegistered();
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = FingerprintService.-$$Nest$fgetmLock(this.this$0);
		RemoteCallbackList v4 = FingerprintService.-$$Nest$fgetmAuthenticatorsRegisteredCallbacks(this.this$0);
		boolean v5 = v4.register(p1);
		List v6 = FingerprintService.-$$Nest$fgetmSensorProps(this.this$0);
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if (1 == 0) {
					FingerprintService.-$$Nest$mbroadcastAllAuthenticatorsRegistered(this.this$0);
					return;
				}
			}
		}
	}
}

and the following sink code:
['RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;\nboolean v5 = v4.register(p1);']

The method addAuthenticatorsRegisteredCallback has the following similar APIs:

- API Name: registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8458021879196167, Code:
RemoteCallbackList v9 = this.mCallbacks;
boolean v10 = v9.register(p1);
  - Similarity: 0.7922016382217407, Code:
RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
boolean v15 = v14.register(p1);
  - Similarity: 0.7906746864318848, Code:
RemoteCallbackList v7 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
boolean v8 = v7.register(p1);
  - Access Control Level: NONE

- API Name: unregisterCallback(Landroid/media/tv/interactive/ITvInteractiveAppManagerCallback;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.8302510976791382, Code:
RemoteCallbackList v9 = this.mCallbacks;
boolean v10 = v9.unregister(p1);
  - Similarity: 0.8024963736534119, Code:
RemoteCallbackList v14 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
boolean v15 = v14.unregister(p1);
  - Similarity: 0.7927576899528503, Code:
RemoteCallbackList v7 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
boolean v8 = v7.unregister(p1);
  - Access Control Level: NONE

- API Name: registerCallback(Landroid/media/tv/interactive/ITvInteractiveAppManagerCallback;I)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7745798826217651, Code:
int v3 = TvInteractiveAppManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "registerCallback");
TvInteractiveAppManagerService$UserState v6 = TvInteractiveAppManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
RemoteCallbackList v7 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
boolean v8 = v7.register(p1);
  - Access Control Level: NONE

- API Name: registerContentCaptureOptionsCallback(Ljava/lang/String;Landroid/view/contentcapture/IContentCaptureOptionsCallback;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.7470381855964661, Code:
RemoteCallbackList v13 = ContentCaptureManagerService.-$$Nest$fgetmCallbacks(this.this$0);
boolean v14 = v13.register(p2, p1);
ContentCaptureOptions v29 = new ContentCaptureOptions(ContentCaptureManagerService.mDevCfgLoggingLevel,ContentCaptureManagerService.mDevCfgMaxBufferSize,ContentCaptureManagerService.mDevCfgIdleFlushingFrequencyMs,ContentCaptureManagerService.mDevCfgTextChangeFlushingFrequencyMs,ContentCaptureManagerService.mDevCfgLogHistorySize,v20);
p2.setContentCaptureOptions(v16);
  - Access Control Level: NONE

- API Name: addOnAssociationsChangedListener(Landroid/companion/IOnAssociationsChangedListener;I)V in the following Class: Lcom.android.server.companion.CompanionDeviceManagerService$CompanionDeviceManagerImpl with the following sink code entries:
  - Similarity: 0.7413796186447144, Code:
RemoteCallbackList v9 = CompanionDeviceManagerService.-$$Nest$fgetmListeners(this.this$0);
Integer v10 = Integer.valueOf(p2);
boolean v11 = v9.register(p1, v10);
  - Access Control Level: SYS_OR_SIG

