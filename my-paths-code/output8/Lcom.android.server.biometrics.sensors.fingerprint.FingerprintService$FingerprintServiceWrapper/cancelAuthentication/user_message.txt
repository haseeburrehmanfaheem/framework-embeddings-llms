This is path 1 for the API with depth 2:
public void cancelAuthentication(IBinder p1, String p2, String p3, long p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = UserHandle.getCallingUserId();
	boolean v5 = 1;
	boolean v4 = v5;
	if (v4 != 0) {
		List v13 = FingerprintService.getSensorProperties();
		boolean v14 = v13.isEmpty();
		if (v14 == 0) {
			Object v15 = v13.get(0);
			Iterator v16 = this.mServiceProviders.iterator();
			boolean v17 = v16.hasNext();
			if (v17 == 0) {
				Object v18 = v16.next();
				boolean v19 = v18.containsSensor(FingerprintSensorPropertiesInternal.sensorId);
				if (v19 == 0) {
					boolean v20 = v16.hasNext();
					if (v20 == 0) {
						Object v21 = v16.next();
						boolean v22 = v21.containsSensor(FingerprintSensorPropertiesInternal.sensorId);
						if (v22 == 0) {
							Pair v23 = new Pair(v24,v21);
							Integer v24 = Integer.valueOf(FingerprintSensorPropertiesInternal.sensorId);
							Pair v12 = v23;
							Pair v11 = v12;
							if (v11 != 0) {
								int v26 = Pair.first.intValue();
								Pair.second.cancelAuthentication(v26, p1, p4);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void cancelAuthentication(IBinder p1, String p2, String p3, long p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = UserHandle.getCallingUserId();
	boolean v5 = this.this$0.canUseFingerprint(p2, p3, 1, v1, v2, v3);
	boolean v4 = v5;
	if (v4 != 0) {
		Pair v7 = this.this$0.getSingleProvider();
		Pair v6 = v7;
		if (v6 != 0) {
			int v8 = Pair.first.intValue();
			Pair.second.cancelAuthentication(v8, p1, p4);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void cancelAuthentication(IBinder p1, String p2, String p3, long p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = UserHandle.getCallingUserId();
	boolean v4 = FingerprintService.-$$Nest$mcanUseFingerprint(this.this$0, p2, p3, 1, v1, v2, v3);
	if (v4 != 0) {
		Pair v5 = FingerprintService.-$$Nest$mgetSingleProvider(this.this$0);
		if (v5 != 0) {
			int v6 = Pair.first.intValue();
			Pair.second.cancelAuthentication(v6, p1, p4);
			return;
		}
	}
}
