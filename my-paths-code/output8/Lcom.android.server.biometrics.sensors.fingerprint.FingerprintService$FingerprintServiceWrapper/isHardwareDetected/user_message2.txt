The method isHardwareDetected has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p1);
		if (v8 == 0) {
			boolean v9 = v5.hasNext();
			if (v9 == 0) {
				Object v10 = v5.next();
				boolean v11 = v10.containsSensor(p1);
				if (v11 == 0) {
					ServiceProvider v4 = v10;
					ServiceProvider v3 = v4;
					if (v3 != 0) {
						boolean v12 = v3.isHardwareDetected(p1);
						return v12;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isHardwareDetected(int p1, String p2){
	ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
	ServiceProvider v3 = v4;
	if (v3 != 0) {
		boolean v5 = v3.isHardwareDetected(p1);
		return v5;
	}
}


This is path 3 for the API with depth 0:
public boolean isHardwareDetected(int p1, String p2){
	ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	if (v3 != 0) {
		boolean v4 = v3.isHardwareDetected(p1);
		return v4;
	}
}

and the following sink code:
['Iterator v5 = this.mServiceProviders.iterator();\nObject v7 = v5.next();\nboolean v8 = v7.containsSensor(p1);\nServiceProvider v4 = v10;\nServiceProvider v3 = v4;\nif (v3 != 0) { boolean v12 = v3.isHardwareDetected(p1); return v12; }', 'ServiceProvider v4 = this.this$0.getProviderForSensor(p1);\nServiceProvider v3 = v4;\nif (v3 != 0) { boolean v5 = v3.isHardwareDetected(p1); return v5; }', 'ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);\nif (v3 != 0) { boolean v4 = v3.isHardwareDetected(p1); return v4; }']

The method isHardwareDetected has the following similar APIs:

- API Name: isHardwareDetected(ILjava/lang/String;)Z with Similarity Score: 0.7993171215057373
  - Access Control Level: NORMAL and the following code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p1);
ServiceProvider v4 = v10;
ServiceProvider v3 = v4;
if (v3 != 0) { boolean v12 = v3.isHardwareDetected(p1); return v12; }

- API Name: releaseTvInputHardware(ILandroid/media/tv/ITvInputHardware;I)V with Similarity Score: 0.7856307029724121
  - Access Control Level: SYS_OR_SIG and the following code:
long v3 = Binder.clearCallingIdentity();
int v4 = Binder.getCallingUid();
int v5 = Binder.getCallingPid();
int v6 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v5, v4, p3, "releaseTvInputHardware");
TvInputHardwareManager v7 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
v7.releaseHardware(p1, p2, v4, v6);

