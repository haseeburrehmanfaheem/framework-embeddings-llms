The method onUiReady in the following class Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper has the following code snippet:

This is path 1 for the API with depth 2:
public void onUiReady(long p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			boolean v9 = v5.hasNext();
			if (v9 == 0) {
				Object v10 = v5.next();
				boolean v11 = v10.containsSensor(p2);
				if (v11 == 0) {
					ServiceProvider v4 = v10;
					ServiceProvider v3 = v4;
					if (v3 != 0) {
						v3.onUiReady(p1, p2);
						return;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void onUiReady(long p1, int p2){
	ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
	ServiceProvider v3 = v4;
	if (v3 != 0) {
		v3.onUiReady(p1, p2);
		return;
	}
}


This is path 3 for the API with depth 0:
public void onUiReady(long p1, int p2){
	ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	if (v3 != 0) {
		v3.onUiReady(p1, p2);
		return;
	}
}

and the following sink code:
['ServiceProvider v4 = this.this$0.getProviderForSensor(p2);\nServiceProvider v3 = v4;\nif (v3 != 0) {\nv3.onUiReady(p1, p2);', 'Iterator v5 = this.mServiceProviders.iterator();\nboolean v6 = v5.hasNext();\nObject v7 = v5.next();\nboolean v8 = v7.containsSensor(p2);\nif (v8 == 0) { ... }\nServiceProvider v4 = v10;\nServiceProvider v3 = v4;\nif (v3 != 0) {\nv3.onUiReady(p1, p2);', 'ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p2);\nif (v3 != 0) {\nv3.onUiReady(p1, p2);']

The method onUiReady has the following similar APIs:

- API Name: startPreparedClient(II)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8784570693969727, Code:
ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
v3.startPreparedClient(p1, p2);
  - Access Control Level: NORMAL

- API Name: onPointerDown(JIIIFF)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8509575128555298, Code:
ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
v3.onPointerDown(p1, p2, p3, p4, p5, p6);
  - Access Control Level: NORMAL

- API Name: resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.838764488697052, Code:
ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
if (v3 != 0) { v3.scheduleResetLockout(p2, p3, p4); return; }
  - Access Control Level: NORMAL

- API Name: isHardwareDetected(ILjava/lang/String;)Z in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.8309686183929443, Code:
ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
if (v3 != 0) { boolean v4 = v3.isHardwareDetected(p1); return v4; }
  - Access Control Level: NORMAL

- API Name: getSensorProperties(ILjava/lang/String;)Landroid/hardware/fingerprint/FingerprintSensorPropertiesInternal; in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.824390172958374, Code:
ServiceProvider v3 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
if (v3 != 0) {
FingerprintSensorPropertiesInternal v4 = v3.getSensorProperties(p1);
return v4;
  - Access Control Level: NORMAL

