This is path 1 for the API with depth 2:
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	List v5 = FaceService.getSensorProperties();
	int v6 = v5.size();
	if (v6 == 1) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				boolean v12 = v8.hasNext();
				if (v12 == 0) {
					Object v13 = v8.next();
					boolean v14 = v13.containsSensor(FaceSensorPropertiesInternal.sensorId);
					if (v14 == 0) {
						Pair v15 = new Pair(v16,v13);
						Integer v16 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
						Pair v4 = v15;
						Pair v3 = v4;
						if (v3 != 0) {
							int v18 = Pair.first.intValue();
							Pair.second.scheduleSetFeature(v18, p1, p2, p3, p4, p5, p6, p7);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v4 = this.this$0.getSingleProvider();
	Pair v3 = v4;
	if (v3 != 0) {
		int v5 = Pair.first.intValue();
		Pair.second.scheduleSetFeature(v5, p1, p2, p3, p4, p5, p6, p7);
		return;
	}
}


This is path 3 for the API with depth 0:
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	if (v3 != 0) {
		int v4 = Pair.first.intValue();
		Pair.second.scheduleSetFeature(v4, p1, p2, p3, p4, p5, p6, p7);
		return;
	}
}
