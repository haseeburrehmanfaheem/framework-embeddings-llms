The method resetLockout has the following code snippet:

This is path 1 for the API with depth 2:
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			boolean v9 = v5.hasNext();
			if (v9 == 0) {
				Object v10 = v5.next();
				boolean v11 = v10.containsSensor(p2);
				if (v11 == 0) {
					ServiceProvider v4 = v10;
					ServiceProvider v3 = v4;
					if (v3 != 0) {
						v3.scheduleResetLockout(p2, p3, p4);
						return;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
	ServiceProvider v3 = v4;
	if (v3 != 0) {
		v3.scheduleResetLockout(p2, p3, p4);
		return;
	}
}


This is path 3 for the API with depth 0:
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	if (v3 != 0) {
		v3.scheduleResetLockout(p2, p3, p4);
		return;
	}
}

and the following sink code:
['Iterator v5 = this.mServiceProviders.iterator();\nObject v7 = v5.next();\nboolean v8 = v7.containsSensor(p2);\nServiceProvider v4 = v10;\nServiceProvider v3 = v4;\nv3.scheduleResetLockout(p2, p3, p4);', 'ServiceProvider v4 = this.this$0.getProviderForSensor(p2);\nServiceProvider v3 = v4;\nv3.scheduleResetLockout(p2, p3, p4);', 'ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);\nv3.scheduleResetLockout(p2, p3, p4);']

The method resetLockout has the following similar APIs:

- API Name: resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V with Similarity Score: 0.9833288192749023
  - Access Control Level: NORMAL and the following code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v10;
if (v3 != 0) { v3.scheduleResetLockout(p2, p3, p4); return; }

- API Name: resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V with Similarity Score: 0.9786196351051331
  - Access Control Level: NORMAL and the following code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p2);
if (v3 != 0) { v3.scheduleResetLockout(p2, p3, p4); return; }

