The method getFeature has the following code snippet:

This is path 1 for the API with depth 2:
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	List v5 = FaceService.getSensorProperties();
	int v6 = v5.size();
	if (v6 == 1) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				boolean v12 = v8.hasNext();
				if (v12 == 0) {
					Object v13 = v8.next();
					boolean v14 = v13.containsSensor(FaceSensorPropertiesInternal.sensorId);
					if (v14 == 0) {
						Pair v15 = new Pair(v16,v13);
						Integer v16 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
						Pair v4 = v15;
						Pair v3 = v4;
						if (v3 != 0) {
							int v18 = Pair.first.intValue();
							ClientMonitorCallbackConverter v19 = new ClientMonitorCallbackConverter(p4);
							Pair.second.scheduleGetFeature(v18, p1, p2, p3, v19, p5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v4 = this.this$0.getSingleProvider();
	Pair v3 = v4;
	if (v3 != 0) {
		int v5 = Pair.first.intValue();
		ClientMonitorCallbackConverter v6 = new ClientMonitorCallbackConverter(p4);
		Pair.second.scheduleGetFeature(v5, p1, p2, p3, v6, p5);
		return;
	}
}


This is path 3 for the API with depth 0:
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	if (v3 != 0) {
		int v4 = Pair.first.intValue();
		ClientMonitorCallbackConverter v5 = new ClientMonitorCallbackConverter(p4);
		Pair.second.scheduleGetFeature(v4, p1, p2, p3, v5, p5);
		return;
	}
}

and the following sink code:
['List v5 = FaceService.getSensorProperties();\nObject v7 = v5.get(0);\nPair v15 = new Pair(v16,v13);\nInteger v16 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);\nClientMonitorCallbackConverter v19 = new ClientMonitorCallbackConverter(p4);\nPair.second.scheduleGetFeature(v18, p1, p2, p3, v19, p5);', 'Pair v4 = this.this$0.getSingleProvider();\nint v5 = Pair.first.intValue();\nClientMonitorCallbackConverter v6 = new ClientMonitorCallbackConverter(p4);\nPair.second.scheduleGetFeature(v5, p1, p2, p3, v6, p5);', 'Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);\nint v4 = Pair.first.intValue();\nClientMonitorCallbackConverter v5 = new ClientMonitorCallbackConverter(p4);\nPair.second.scheduleGetFeature(v4, p1, p2, p3, v5, p5);']

The method getFeature has the following similar APIs:

- API Name: setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V with Similarity Score: 0.901924192905426
  - Access Control Level: NORMAL and the following code:
List v5 = FaceService.getSensorProperties();
Iterator v8 = this.mServiceProviders.iterator();
Object v10 = v8.next();
boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
Pair v15 = new Pair(v16,v13);
Integer v16 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
int v18 = Pair.first.intValue();
Pair.second.scheduleSetFeature(v18, p1, p2, p3, p4, p5, p6, p7);

- API Name: setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V with Similarity Score: 0.8892786502838135
  - Access Control Level: NORMAL and the following code:
Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
int v4 = Pair.first.intValue();
Pair.second.scheduleSetFeature(v4, p1, p2, p3, p4, p5, p6, p7);

