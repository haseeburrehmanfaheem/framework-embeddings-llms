The method isHardwareDetected in the following class Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	Iterator v6 = this.mServiceProviders.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		boolean v9 = v8.containsSensor(p1);
		if (v9 == 0) {
			boolean v10 = v6.hasNext();
			if (v10 == 0) {
				Object v11 = v6.next();
				boolean v12 = v11.containsSensor(p1);
				if (v12 == 0) {
					ServiceProvider v5 = v11;
					ServiceProvider v4 = v5;
					if (v4 != 0) {
						boolean v13 = v4.isHardwareDetected(p1);
						Binder.restoreCallingIdentity(v3);
						return v13;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v5 = this.this$0.getProviderForSensor(p1);
	ServiceProvider v4 = v5;
	if (v4 != 0) {
		boolean v6 = v4.isHardwareDetected(p1);
		Binder.restoreCallingIdentity(v3);
		return v6;
	}
}


This is path 3 for the API with depth 0:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	if (v4 != 0) {
		boolean v5 = v4.isHardwareDetected(p1);
		Binder.restoreCallingIdentity(v3);
		return v5;
	}
}

and the following sink code:
['long v3 = Binder.clearCallingIdentity();\nServiceProvider v5 = this.this$0.getProviderForSensor(p1);\nboolean v6 = v4.isHardwareDetected(p1);\nBinder.restoreCallingIdentity(v3);', 'long v3 = Binder.clearCallingIdentity();\nIterator v6 = this.mServiceProviders.iterator();\nObject v8 = v6.next();\nboolean v9 = v8.containsSensor(p1);\nServiceProvider v5 = v11;\nboolean v13 = v4.isHardwareDetected(p1);\nBinder.restoreCallingIdentity(v3);', 'long v3 = Binder.clearCallingIdentity();\nServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);\nboolean v5 = v4.isHardwareDetected(p1);\nBinder.restoreCallingIdentity(v3);']

The method isHardwareDetected has the following similar APIs:

- API Name: releaseTvInputHardware(ILandroid/media/tv/ITvInputHardware;I)V in the following Class: Lcom.android.server.tv.TvInputManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7856306433677673, Code:
long v3 = Binder.clearCallingIdentity();
int v4 = Binder.getCallingUid();
int v5 = Binder.getCallingPid();
int v6 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v5, v4, p3, "releaseTvInputHardware");
TvInputHardwareManager v7 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
v7.releaseHardware(p1, p2, v4, v6);
  - Access Control Level: SYS_OR_SIG

- API Name: updateScores([Landroid/net/ScoredNetwork;)Z in the following Class: Lcom.android.server.NetworkScoreService with the following sink code entries:
  - Similarity: 0.7786812782287598, Code:
boolean v2 = p0.isCallerActiveScorer(v1);
long v3 = Binder.clearCallingIdentity();
  - Access Control Level: NONE

- API Name: getAuthenticatorId(II)J in the following Class: Lcom.android.server.biometrics.sensors.fingerprint.FingerprintService$FingerprintServiceWrapper with the following sink code entries:
  - Similarity: 0.7773655652999878, Code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p1);
Object v10 = v5.next();
boolean v11 = v10.containsSensor(p1);
ServiceProvider v4 = v10;
ServiceProvider v3 = v4;
long v12 = v3.getAuthenticatorId(p1, p2);
return v12;
  - Access Control Level: NORMAL

- API Name: resumeWifiDisplay()V in the following Class: Lcom.android.server.display.DisplayManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7680180072784424, Code:
long v3 = Binder.clearCallingIdentity();
this.this$0.resumeWifiDisplayInternal();
Binder.restoreCallingIdentity(v3);
  - Access Control Level: SYS_OR_SIG

- API Name: setBluetoothA2dpOn(Landroid/media/IMediaRouterClient;Z)V in the following Class: Lcom.android.server.media.MediaRouterService with the following sink code entries:
  - Similarity: 0.7622697353363037, Code:
long v1 = Binder.clearCallingIdentity();
this.mAudioService.setBluetoothA2dpOn(p2);
Binder.restoreCallingIdentity(v1);
  - Access Control Level: NONE

