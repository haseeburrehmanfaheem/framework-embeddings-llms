This is path 1 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	Iterator v6 = this.mServiceProviders.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		boolean v9 = v8.containsSensor(p1);
		if (v9 == 0) {
			boolean v10 = v6.hasNext();
			if (v10 == 0) {
				Object v11 = v6.next();
				boolean v12 = v11.containsSensor(p1);
				if (v12 == 0) {
					ServiceProvider v5 = v11;
					ServiceProvider v4 = v5;
					if (v4 != 0) {
						boolean v13 = v4.isHardwareDetected(p1);
						Binder.restoreCallingIdentity(v3);
						return v13;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v5 = this.this$0.getProviderForSensor(p1);
	ServiceProvider v4 = v5;
	if (v4 != 0) {
		boolean v6 = v4.isHardwareDetected(p1);
		Binder.restoreCallingIdentity(v3);
		return v6;
	}
}


This is path 3 for the API with depth 0:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	if (v4 != 0) {
		boolean v5 = v4.isHardwareDetected(p1);
		Binder.restoreCallingIdentity(v3);
		return v5;
	}
}
