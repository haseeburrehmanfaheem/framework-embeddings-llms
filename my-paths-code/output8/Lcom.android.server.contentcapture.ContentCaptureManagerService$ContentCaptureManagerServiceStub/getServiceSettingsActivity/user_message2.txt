The method getServiceSettingsActivity in the following class Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub has the following code snippet:

This is path 1 for the API with depth 2:
public void getServiceSettingsActivity(IResultReceiver p1){
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2(p0);
	v1.run();
	String v6 = caughtException.getMessage();
	Bundle v7 = SyncResultReceiver.bundleFor(v6);
	p1.send(-1, v7);
	boolean v4 = 1;
	boolean v3 = v4;
	if (v3 == 0) {
		int v9 = UserHandle.getCallingUserId();
		Object v10 = ContentCaptureManagerService.access$1200(this.this$0);
		AbstractPerUserSystemService v11 = ContentCaptureManagerService.access$1300(this.this$0, v9);
		if (v11 != 0) {
			if (this.mInfo != 0) {
				String v13 = this.mSettingsActivity;
				if (v13 != 0) {
					ServiceInfo v14 = this.mServiceInfo;
					ComponentName v15 = new ComponentName(ServiceInfo.packageName,v13);
					ComponentName v12 = v15;
					Bundle v17 = SyncResultReceiver.bundleFor(v12);
					p1.send(0, v17);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void getServiceSettingsActivity(IResultReceiver p1){
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2(p0);
	boolean v4 = this.this$0.throwsSecurityException(p1, v1);
	boolean v3 = v4;
	if (v3 == 0) {
		int v5 = UserHandle.getCallingUserId();
		Object v6 = AbstractMasterSystemService.mLock;
		AbstractPerUserSystemService v8 = this.this$0.getServiceForUserLocked(v5);
		AbstractPerUserSystemService v7 = v8;
		if (v7 != 0) {
			if (this.mInfo != 0) {
				String v10 = this.mInfo.getSettingsActivity();
				if (v10 != 0) {
					ServiceInfo v11 = this.mInfo.getServiceInfo();
					ComponentName v12 = new ComponentName(ServiceInfo.packageName,v10);
					ComponentName v9 = v12;
					Bundle v15 = new Bundle();
					v15.putParcelable("EXTRA", v9);
					Bundle v14 = v15;
					p1.send(0, v14);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void getServiceSettingsActivity(IResultReceiver p1){
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2(p0);
	boolean v3 = ContentCaptureManagerService.-$$Nest$mthrowsSecurityException(this.this$0, p1, v1);
	if (v3 == 0) {
		int v4 = UserHandle.getCallingUserId();
		Object v5 = ContentCaptureManagerService.access$1200(this.this$0);
		AbstractPerUserSystemService v6 = ContentCaptureManagerService.access$1300(this.this$0, v4);
		if (v6 != 0) {
			ComponentName v7 = v6.getServiceSettingsActivityLocked();
			Bundle v8 = SyncResultReceiver.bundleFor(v7);
			p1.send(0, v8);
			return;
		}
	}
}

and the following sink code:
['ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2(p0);\nv1.run();\nboolean v4 = this.this$0.throwsSecurityException(p1, v1);', 'int v5 = UserHandle.getCallingUserId();\nAbstractPerUserSystemService v8 = this.this$0.getServiceForUserLocked(v5);\nString v10 = this.mInfo.getSettingsActivity();\nComponentName v12 = new ComponentName(ServiceInfo.packageName,v10);\nBundle v15 = new Bundle();\nv15.putParcelable("EXTRA", v9);\np1.send(0, v14);', 'int v4 = UserHandle.getCallingUserId();\nAbstractPerUserSystemService v6 = ContentCaptureManagerService.access$1300(this.this$0, v4);\nComponentName v7 = v6.getServiceSettingsActivityLocked();\nBundle v8 = SyncResultReceiver.bundleFor(v7);\np1.send(0, v8);']

The method getServiceSettingsActivity has the following similar APIs:

- API Name: isContentCaptureFeatureEnabled(Lcom/android/internal/os/IResultReceiver;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.9641405940055847, Code:
ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);
v2.run();
  - Access Control Level: NONE

- API Name: getServiceComponentName(Lcom/android/internal/os/IResultReceiver;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.8905724287033081, Code:
AbstractPerUserSystemService v3 = ContentCaptureManagerService.access$500(this.this$0, v1);
ComponentName v4 = v3.getServiceComponentName();
Bundle v5 = SyncResultReceiver.bundleFor(v4);
p1.send(0, v5);
  - Similarity: 0.8434829711914062, Code:
AbstractPerUserSystemService v4 = this.this$0.getServiceForUserLocked(v1);
ComponentName v5 = v3.getServiceComponentName();
Bundle v7 = new Bundle();
v7.putParcelable("EXTRA", v5);
p1.send(0, v6);
  - Access Control Level: NONE

- API Name: shareData(Landroid/view/contentcapture/DataShareRequest;Landroid/view/contentcapture/IDataShareWriteAdapter;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.8526557683944702, Code:
UserHandle.getCallingUserId();
AbstractPerUserSystemService v18 = ContentCaptureManagerService.access$900(this.this$0, v16);
  - Access Control Level: NONE

- API Name: getServiceSettingsActivity(Lcom/android/internal/os/IResultReceiver;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.8349305987358093, Code:
AbstractPerUserSystemService v2 = TranslationManagerService.access$1700(this.this$0, p2);
ComponentName v3 = v2.getServiceSettingsActivityLocked();
Intent v5 = new Intent();
Intent v7 = v5.setComponent(v3);
PendingIntent v12 = PendingIntent.getActivityAsUser(v9, 0, v5, 67108864, 0, v10);
Bundle v13 = SyncResultReceiver.bundleFor(v12);
p1.send(1, v13);
  - Similarity: 0.8267769813537598, Code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
ComponentName v7 = new ComponentName(ServiceInfo.packageName,v5);
PendingIntent v17 = PendingIntent.getActivityAsUser(v14, 0, v10, 67108864, 0, v15);
Bundle v18 = SyncResultReceiver.bundleFor(v17);
p1.send(1, v18);
  - Access Control Level: NONE

- API Name: disableOwnedAutofillServices(I)V in the following Class: Lcom.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub with the following sink code entries:
  - Similarity: 0.8305228352546692, Code:
AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p1);
int v4 = Binder.getCallingUid();
if (this.mInfo != 0) {
ServiceInfo v14 = this.mServiceInfo;
long v15 = Binder.clearCallingIdentity();
String v17 = AbstractMasterSystemService.mServiceNameResolver.getServiceName(this.mUserId);
ComponentName v18 = v14.getComponentName();
ComponentName v19 = ComponentName.unflattenFromString(v16);
boolean v20 = v18.equals(v19);
if (v20 == 0) {
String v21 = v18.getPackageName();
this.mMetricsLogger.action(1135, v21);
Context v24 = this.mMaster.getContext();
ContentResolver v25 = v23.getContentResolver();
boolean v26 = Settings$Secure.putStringForUser(v25, "autofill_service", 0, AbstractPerUserSystemService.mUserId);
  - Access Control Level: NONE

