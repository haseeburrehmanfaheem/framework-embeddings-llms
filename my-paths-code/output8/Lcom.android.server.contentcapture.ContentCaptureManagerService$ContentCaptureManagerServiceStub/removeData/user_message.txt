This is path 1 for the API with depth 2:
public void removeData(DataRemovalRequest p1){
	Object v1 = Objects.requireNonNull(p1);
	String v2 = this.mPackageName;
	Context v9 = this.mContext;
	PackageManager v10 = v9.getPackageManager();
	int v11 = this.mOwnerUid;
	String v12 = v10.getPackagesForUid(v11);
	if (v12 == 0) {
		if (0 >= v12.length) {
			boolean v13 = v2.equals(v12[0]);
			if (v13 == 0) {
				if ((0 + 1) >= v12.length) {
					boolean v14 = v2.equals(v12[(0 + 1)]);
					if (v14 == 0) {
						int v15 = UserHandle.getCallingUserId();
						Object v16 = ContentCaptureManagerService.access$600(this.this$0);
						AbstractPerUserSystemService v17 = ContentCaptureManagerService.access$700(this.this$0, v15);
						boolean v19 = ContentCapturePerUserService.isEnabledLocked();
						if (v19 != 0) {
							String v20 = this.mPackageName;
							if (1 != 0) {
								RemoteContentCaptureService$$ExternalSyntheticLambda2 v34 = new RemoteContentCaptureService$$ExternalSyntheticLambda2(p1);
								RemoteContentCaptureService.scheduleAsyncRequest(v34);
								ContentCaptureMetricsLogger.writeServiceEvent(5, AbstractMultiplePendingRequestsRemoteService.mComponentName);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void removeData(DataRemovalRequest p1){
	Object v1 = Objects.requireNonNull(p1);
	String v2 = this.mPackageName;
	Context v9 = ContentCaptureManagerService.getContext();
	PackageManager v10 = v9.getPackageManager();
	int v11 = v7.getOwnerUid();
	String v12 = v10.getPackagesForUid(v11);
	if (v12 == 0) {
		if (0 >= v12.length) {
			boolean v13 = v2.equals(v12[0]);
			if (v13 == 0) {
				if ((0 + 1) >= v12.length) {
					boolean v14 = v2.equals(v12[(0 + 1)]);
					if (v14 == 0) {
						int v15 = UserHandle.getCallingUserId();
						Object v16 = AbstractMasterSystemService.mLock;
						AbstractPerUserSystemService v18 = this.this$0.getServiceForUserLocked(v15);
						AbstractPerUserSystemService v17 = v18;
						boolean v20 = ContentCapturePerUserService.isEnabledLocked();
						if (v20 != 0) {
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void removeData(DataRemovalRequest p1){
	Object v1 = Objects.requireNonNull(p1);
	String v2 = p1.getPackageName();
	this.this$0.assertCalledByPackageOwner(v2);
	int v4 = UserHandle.getCallingUserId();
	Object v5 = ContentCaptureManagerService.access$600(this.this$0);
	AbstractPerUserSystemService v6 = ContentCaptureManagerService.access$700(this.this$0, v4);
	v6.removeDataLocked(p1);
	return;
}
