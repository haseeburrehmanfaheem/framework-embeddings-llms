The method isContentCaptureFeatureEnabled in the following class Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub has the following code snippet:

This is path 1 for the API with depth 2:
public void isContentCaptureFeatureEnabled(IResultReceiver p1){
	Object v1 = AbstractMasterSystemService.mLock;
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);
	v2.run();
	String v7 = caughtException.getMessage();
	Bundle v8 = SyncResultReceiver.bundleFor(v7);
	p1.send(-1, v8);
	boolean v5 = 1;
	boolean v4 = v5;
	if (v4 == 0) {
		int v10 = UserHandle.getCallingUserId();
		boolean v11 = ContentCaptureManagerService.-$$Nest$fgetmDisabledByDeviceConfig(this.this$0);
		if (v11 != 0) {
			if (this.mDisabledBySettings == 0) {
				boolean v14 = this.mDisabledBySettings.get(v10);
				if (v14 == 0) {
					boolean v13 = 1;
					boolean v12 = v13;
					if (v12 != 0) {
						if (1 == 0) {
							p1.send(1, 0);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void isContentCaptureFeatureEnabled(IResultReceiver p1){
	Object v1 = AbstractMasterSystemService.mLock;
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);
	boolean v5 = this.this$0.throwsSecurityException(p1, v2);
	boolean v4 = v5;
	if (v4 == 0) {
		int v6 = UserHandle.getCallingUserId();
		boolean v7 = this.mDisabledByDeviceConfig;
		if (v7 != 0) {
			boolean v9 = this.this$0.isDisabledBySettingsLocked(v6);
			boolean v8 = v9;
			if (v8 != 0) {
				if (1 == 0) {
					p1.send(1, 0);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void isContentCaptureFeatureEnabled(IResultReceiver p1){
	Object v1 = ContentCaptureManagerService.access$1100(this.this$0);
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);
	boolean v4 = ContentCaptureManagerService.-$$Nest$mthrowsSecurityException(this.this$0, p1, v2);
	if (v4 == 0) {
		int v5 = UserHandle.getCallingUserId();
		boolean v6 = ContentCaptureManagerService.-$$Nest$fgetmDisabledByDeviceConfig(this.this$0);
		if (v6 != 0) {
			boolean v7 = ContentCaptureManagerService.-$$Nest$misDisabledBySettingsLocked(this.this$0, v5);
			if (v7 != 0) {
				if (1 == 0) {
					p1.send(1, 0);
					return;
				}
			}
		}
	}
}

and the following sink code:
['ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);\nv2.run();', 'String v7 = caughtException.getMessage();\nBundle v8 = SyncResultReceiver.bundleFor(v7);\np1.send(-1, v8);']

The method isContentCaptureFeatureEnabled has the following similar APIs:

- API Name: getServiceSettingsActivity(Lcom/android/internal/os/IResultReceiver;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.9641405940055847, Code:
ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda2(p0);
v1.run();
boolean v4 = this.this$0.throwsSecurityException(p1, v1);
  - Access Control Level: NONE

- API Name: removeData(Landroid/view/contentcapture/DataRemovalRequest;)V in the following Class: Lcom.android.server.contentcapture.ContentCaptureManagerService$ContentCaptureManagerServiceStub with the following sink code entries:
  - Similarity: 0.8137650489807129, Code:
Object v1 = Objects.requireNonNull(p1);
RemoteContentCaptureService$$ExternalSyntheticLambda2 v34 = new RemoteContentCaptureService$$ExternalSyntheticLambda2(p1);
RemoteContentCaptureService.scheduleAsyncRequest(v34);
  - Access Control Level: NONE

- API Name: unregisterPredictionUpdates(Landroid/app/prediction/AppPredictionSessionId;Landroid/app/prediction/IPredictionCallback;)V in the following Class: Lcom.android.server.appprediction.AppPredictionManagerService$PredictionManagerServiceStub with the following sink code entries:
  - Similarity: 0.7867112159729004, Code:
AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda0 v1 = new AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda0(p1,p2);
v1.accept(v19);
  - Access Control Level: SYS_OR_SIG

- API Name: returnResults(Landroid/os/IBinder;Ljava/lang/String;Landroid/app/cloudsearch/SearchResponse;)V in the following Class: Lcom.android.server.cloudsearch.CloudSearchManagerService$CloudSearchManagerStub with the following sink code entries:
  - Similarity: 0.7816565036773682, Code:
CloudSearchManagerService$CloudSearchManagerStub$$ExternalSyntheticLambda1 v1 = new CloudSearchManagerService$CloudSearchManagerStub$$ExternalSyntheticLambda1(p1,p2,p3);
v1.accept(v22);
  - Access Control Level: SYS_OR_SIG

- API Name: registerPredictionUpdates(Landroid/app/prediction/AppPredictionSessionId;Landroid/app/prediction/IPredictionCallback;)V in the following Class: Lcom.android.server.appprediction.AppPredictionManagerService$PredictionManagerServiceStub with the following sink code entries:
  - Similarity: 0.7812230587005615, Code:
AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda4 v1 = new AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda4(p1,p2);
v1.accept(v19);
  - Access Control Level: SYS_OR_SIG

