The method getPendingJob in the following class Lcom.android.server.job.JobSchedulerService$JobSchedulerStub has the following code snippet:

This is path 1 for the API with depth 2:
public JobInfo getPendingJob(int p1){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	List v5 = this.mJobSet.getJobsByUid(v1);
	List v4 = v5;
	int v6 = v4.size();
	if ((v6 + -1) < 0) {
		Object v7 = v4.get((v6 + -1));
		int v9 = this.job.getId();
		int v8 = v9;
		if (v8 != p1) {
			if (((v6 + -1) + -1) < 0) {
				Object v10 = v4.get(((v6 + -1) + -1));
				int v12 = this.job.getId();
				int v11 = v12;
				if (v11 != p1) {
					JobInfo v13 = this.job;
					JobInfo v3 = v13;
					Binder.restoreCallingIdentity(v2);
					return v3;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public JobInfo getPendingJob(int p1){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	List v4 = this.mJobs.getJobsByUid(v1);
	int v5 = v4.size();
	if ((v5 + -1) < 0) {
		Object v6 = v4.get((v5 + -1));
		int v7 = v6.getJobId();
		if (v7 != p1) {
			if (((v5 + -1) + -1) < 0) {
				Object v8 = v4.get(((v5 + -1) + -1));
				int v9 = v8.getJobId();
				if (v9 != p1) {
					JobInfo v10 = v8.getJob();
					JobInfo v3 = v10;
					Binder.restoreCallingIdentity(v2);
					return v3;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public JobInfo getPendingJob(int p1){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	JobInfo v3 = this.this$0.getPendingJob(v1, p1);
	Binder.restoreCallingIdentity(v2);
	return v3;
}

and the following sink code:
['List v5 = this.mJobSet.getJobsByUid(v1);\nint v9 = this.job.getId();\nif (v8 != p1) { ... }\nJobInfo v13 = this.job;\nreturn v3;', 'List v4 = this.mJobs.getJobsByUid(v1);\nint v7 = v6.getJobId();\nif (v7 != p1) { ... }\nJobInfo v10 = v8.getJob();\nreturn v3;', 'this.this$0.getPendingJob(v1, p1);\nreturn v3;']

The method getPendingJob has the following similar APIs:

- API Name: getAllPendingJobs()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.8556382060050964, Code:
List v5 = this.mJobs.getJobsByUid(v1);
ArrayList v6 = new ArrayList(v7);
ParceledListSlice v3 = new ParceledListSlice(v4);
return v3;
  - Similarity: 0.8464822173118591, Code:
List v6 = this.mJobSet.getJobsByUid(v1);
ArrayList v7 = new ArrayList(v8);
ParceledListSlice v3 = new ParceledListSlice(v4);
return v3;
  - Similarity: 0.7487726211547852, Code:
List v4 = this.this$0.getPendingJobs(v1);
ParceledListSlice v3 = new ParceledListSlice(v4);
return v3;
  - Access Control Level: NONE

- API Name: cancel(I)V in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.793445885181427, Code:
boolean v4 = this.this$0.cancelJob(v1, p1, v1, 1);
  - Similarity: 0.7835609912872314, Code:
JobStatus v5 = this.mJobs.getJobByUidAndJobId(v1, p1);
JobSchedulerService.cancelJobImplLocked(v5, 0, 1, 0, v14);
  - Access Control Level: NONE

- API Name: getStartedJobs()Ljava/util/List; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7687846422195435, Code:
ArraySet v2 = JobSchedulerService.mConcurrencyManager.getRunningJobsLocked();
int v4 = v2.size();
ArrayList v3 = new ArrayList(v4);
Object v7 = v2.valueAt((v6 + -1));
JobInfo v8 = v7.getJob();
boolean v9 = v3.add(v8);
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: cancelAll()V in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7686996459960938, Code:
int v1 = Binder.getCallingUid();
List v9 = this.mJobs.getJobsByUid(v1);
JobSchedulerService.cancelJobImplLocked(v11, 0, 1, 0, v7);
  - Similarity: 0.7532347440719604, Code:
int v1 = Binder.getCallingUid();
List v10 = this.mJobSet.getJobsByUid(v1);
v12.unprepareLocked();
boolean v22 = JobSchedulerService.stopTrackingJobLocked(v12, 0, 1);
boolean v23 = this.mPendingJobQueue.remove(v12);
boolean v26 = this.mConcurrencyManager.stopJobOnServiceContextLocked(v12, 1, 0, v7);
  - Access Control Level: SYS_OR_SIG

- API Name: getAllJobSnapshots()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7186858654022217, Code:
ArrayList v2 = new ArrayList(v3);
JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v9 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
JobSchedulerService.mJobs.forEachJob(v9);
ParceledListSlice v12 = new ParceledListSlice(v2);
return v12;
  - Access Control Level: SYS_OR_SIG

