The method cancel in the following class Lcom.android.server.job.JobSchedulerService$JobSchedulerStub has the following code snippet:

This is path 1 for the API with depth 2:
public void cancel(int p1){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	JobStatus v5 = this.mJobs.getJobByUidAndJobId(v1, p1);
	if (v5 == 0) {
		StringBuilder v6 = new StringBuilder();
		StringBuilder v8 = v6.append("cancel() called by app, callingUid=");
		StringBuilder v9 = v6.append(v1);
		StringBuilder v10 = v6.append(" uid=");
		StringBuilder v11 = v6.append(v1);
		StringBuilder v12 = v6.append(" jobId=");
		StringBuilder v13 = v6.append(p1);
		String v14 = v6.toString();
		JobSchedulerService.cancelJobImplLocked(v5, 0, 1, 0, v14);
		if (v5 == 0) {
			boolean v4 = 1;
			boolean v3 = v4;
			Binder.restoreCallingIdentity(v2);
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void cancel(int p1){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	boolean v4 = this.this$0.cancelJob(v1, p1, v1, 1);
	boolean v3 = v4;
	Binder.restoreCallingIdentity(v2);
	return;
}


This is path 3 for the API with depth 0:
public void cancel(int p1){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = JobSchedulerService.-$$Nest$mcancelJob(this.this$0, v1, p1, v1, 1);
	Binder.restoreCallingIdentity(v2);
	return;
}

and the following sink code:
['JobStatus v5 = this.mJobs.getJobByUidAndJobId(v1, p1);\nJobSchedulerService.cancelJobImplLocked(v5, 0, 1, 0, v14);', 'boolean v4 = this.this$0.cancelJob(v1, p1, v1, 1);', 'boolean v3 = JobSchedulerService.-$$Nest$mcancelJob(this.this$0, v1, p1, v1, 1);']

The method cancel has the following similar APIs:

- API Name: cancelAll()V in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.8997910618782043, Code:
int v1 = Binder.getCallingUid();
List v9 = this.mJobs.getJobsByUid(v1);
JobSchedulerService.cancelJobImplLocked(v11, 0, 1, 0, v7);
  - Similarity: 0.7493380904197693, Code:
int v1 = Binder.getCallingUid();
boolean v8 = this.this$0.cancelJobsForUid(v1, 1, 0, v7);
  - Similarity: 0.7328401803970337, Code:
int v1 = Binder.getCallingUid();
List v10 = this.mJobSet.getJobsByUid(v1);
v12.unprepareLocked();
boolean v22 = JobSchedulerService.stopTrackingJobLocked(v12, 0, 1);
boolean v23 = this.mPendingJobQueue.remove(v12);
boolean v26 = this.mConcurrencyManager.stopJobOnServiceContextLocked(v12, 1, 0, v7);
  - Access Control Level: SYS_OR_SIG

- API Name: getPendingJob(I)Landroid/app/job/JobInfo; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.793445885181427, Code:
this.this$0.getPendingJob(v1, p1);
return v3;
  - Similarity: 0.7835609912872314, Code:
List v4 = this.mJobs.getJobsByUid(v1);
int v7 = v6.getJobId();
if (v7 != p1) { ... }
JobInfo v10 = v8.getJob();
return v3;
  - Similarity: 0.7157895565032959, Code:
List v5 = this.mJobSet.getJobsByUid(v1);
int v9 = this.job.getId();
if (v8 != p1) { ... }
JobInfo v13 = this.job;
return v3;
  - Access Control Level: NONE

- API Name: getAllPendingJobs()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7355362176895142, Code:
List v5 = this.mJobs.getJobsByUid(v1);
ArrayList v6 = new ArrayList(v7);
ParceledListSlice v3 = new ParceledListSlice(v4);
return v3;
  - Similarity: 0.7326896786689758, Code:
List v6 = this.mJobSet.getJobsByUid(v1);
ArrayList v7 = new ArrayList(v8);
ParceledListSlice v3 = new ParceledListSlice(v4);
return v3;
  - Access Control Level: NONE

