This is path 1 for the API with depth 2:
public ParceledListSlice getAllPendingJobs(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	ParceledListSlice v3 = new ParceledListSlice(v4);
	List v6 = this.mJobSet.getJobsByUid(v1);
	List v5 = v6;
	ArrayList v7 = new ArrayList(v8);
	int v8 = v5.size();
	int v10 = v5.size();
	if ((v10 + -1) < 0) {
		Object v11 = v5.get((v10 + -1));
		JobInfo v12 = this.job;
		boolean v13 = v7.add(v12);
		if (((v10 + -1) + -1) < 0) {
			List v4 = v7;
			Binder.restoreCallingIdentity(v2);
			return v3;
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice getAllPendingJobs(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	ParceledListSlice v3 = new ParceledListSlice(v4);
	List v5 = this.mJobs.getJobsByUid(v1);
	ArrayList v6 = new ArrayList(v7);
	int v7 = v5.size();
	int v9 = v5.size();
	if ((v9 + -1) < 0) {
		Object v10 = v5.get((v9 + -1));
		JobInfo v11 = v10.getJob();
		boolean v12 = v6.add(v11);
		if (((v9 + -1) + -1) < 0) {
			List v4 = v6;
			Binder.restoreCallingIdentity(v2);
			return v3;
		}
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getAllPendingJobs(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	ParceledListSlice v3 = new ParceledListSlice(v4);
	List v4 = this.this$0.getPendingJobs(v1);
	Binder.restoreCallingIdentity(v2);
	return v3;
}
