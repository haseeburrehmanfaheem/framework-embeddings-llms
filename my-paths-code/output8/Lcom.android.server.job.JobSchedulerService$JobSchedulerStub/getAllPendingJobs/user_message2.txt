The method getAllPendingJobs in the following class Lcom.android.server.job.JobSchedulerService$JobSchedulerStub has the following code snippet:

This is path 1 for the API with depth 2:
public ParceledListSlice getAllPendingJobs(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	ParceledListSlice v3 = new ParceledListSlice(v4);
	List v6 = this.mJobSet.getJobsByUid(v1);
	List v5 = v6;
	ArrayList v7 = new ArrayList(v8);
	int v8 = v5.size();
	int v10 = v5.size();
	if ((v10 + -1) < 0) {
		Object v11 = v5.get((v10 + -1));
		JobInfo v12 = this.job;
		boolean v13 = v7.add(v12);
		if (((v10 + -1) + -1) < 0) {
			List v4 = v7;
			Binder.restoreCallingIdentity(v2);
			return v3;
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice getAllPendingJobs(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	ParceledListSlice v3 = new ParceledListSlice(v4);
	List v5 = this.mJobs.getJobsByUid(v1);
	ArrayList v6 = new ArrayList(v7);
	int v7 = v5.size();
	int v9 = v5.size();
	if ((v9 + -1) < 0) {
		Object v10 = v5.get((v9 + -1));
		JobInfo v11 = v10.getJob();
		boolean v12 = v6.add(v11);
		if (((v9 + -1) + -1) < 0) {
			List v4 = v6;
			Binder.restoreCallingIdentity(v2);
			return v3;
		}
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getAllPendingJobs(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	ParceledListSlice v3 = new ParceledListSlice(v4);
	List v4 = this.this$0.getPendingJobs(v1);
	Binder.restoreCallingIdentity(v2);
	return v3;
}

and the following sink code:
['List v6 = this.mJobSet.getJobsByUid(v1);\nArrayList v7 = new ArrayList(v8);\nParceledListSlice v3 = new ParceledListSlice(v4);\nreturn v3;', 'List v5 = this.mJobs.getJobsByUid(v1);\nArrayList v6 = new ArrayList(v7);\nParceledListSlice v3 = new ParceledListSlice(v4);\nreturn v3;', 'List v4 = this.this$0.getPendingJobs(v1);\nParceledListSlice v3 = new ParceledListSlice(v4);\nreturn v3;']

The method getAllPendingJobs has the following similar APIs:

- API Name: getPendingJob(I)Landroid/app/job/JobInfo; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.8556382060050964, Code:
List v4 = this.mJobs.getJobsByUid(v1);
int v7 = v6.getJobId();
if (v7 != p1) { ... }
JobInfo v10 = v8.getJob();
return v3;
  - Similarity: 0.7798693776130676, Code:
List v5 = this.mJobSet.getJobsByUid(v1);
int v9 = this.job.getId();
if (v8 != p1) { ... }
JobInfo v13 = this.job;
return v3;
  - Similarity: 0.7487726211547852, Code:
this.this$0.getPendingJob(v1, p1);
return v3;
  - Access Control Level: NONE

- API Name: getAllJobSnapshots()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7973566651344299, Code:
ArrayList v2 = new ArrayList(v3);
JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v9 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
JobSchedulerService.mJobs.forEachJob(v9);
ParceledListSlice v12 = new ParceledListSlice(v2);
return v12;
  - Similarity: 0.7951008081436157, Code:
ArrayList v2 = new ArrayList(v3);
JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v5 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
JobSchedulerService.mJobs.forEachJob(v5);
ParceledListSlice v8 = new ParceledListSlice(v2);
return v8;
  - Similarity: 0.7907452583312988, Code:
ArrayList v2 = new ArrayList(v3);
JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v6 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
JobSchedulerService.mJobs.forEachJob(v6);
ParceledListSlice v9 = new ParceledListSlice(v2);
return v9;
  - Access Control Level: SYS_OR_SIG

- API Name: getStartedJobs()Ljava/util/List; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7649596929550171, Code:
ArraySet v2 = JobSchedulerService.mConcurrencyManager.getRunningJobsLocked();
int v4 = v2.size();
ArrayList v3 = new ArrayList(v4);
Object v7 = v2.valueAt((v6 + -1));
JobInfo v8 = v7.getJob();
boolean v9 = v3.add(v8);
return v3;
  - Access Control Level: SYS_OR_SIG

- API Name: cancel(I)V in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7355362176895142, Code:
JobStatus v5 = this.mJobs.getJobByUidAndJobId(v1, p1);
JobSchedulerService.cancelJobImplLocked(v5, 0, 1, 0, v14);
  - Access Control Level: NONE

- API Name: cancelAll()V in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7231476902961731, Code:
int v1 = Binder.getCallingUid();
List v9 = this.mJobs.getJobsByUid(v1);
JobSchedulerService.cancelJobImplLocked(v11, 0, 1, 0, v7);
  - Access Control Level: SYS_OR_SIG

