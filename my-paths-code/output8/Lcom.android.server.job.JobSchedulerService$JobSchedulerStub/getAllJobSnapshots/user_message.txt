This is path 1 for the API with depth 2:
public ParceledListSlice getAllJobSnapshots(){
	ArrayList v2 = new ArrayList(v3);
	int v5 = this.mJobs.size();
	if ((v5 + -1) < 0) {
		Object v6 = this.mJobs.valueAt((v5 + -1));
		int v7 = v6.size();
		if (((v5 + -1) + -1) < 0) {
			int v4 = (0 + v7);
			int v3 = v4;
			JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v9 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
			JobSchedulerService.mJobs.forEachJob(v9);
			ParceledListSlice v12 = new ParceledListSlice(v2);
			return v12;
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice getAllJobSnapshots(){
	ArrayList v2 = new ArrayList(v3);
	int v4 = this.mJobSet.size();
	int v3 = v4;
	JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v6 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
	JobSchedulerService.mJobs.forEachJob(v6);
	ParceledListSlice v9 = new ParceledListSlice(v2);
	return v9;
}


This is path 3 for the API with depth 0:
public ParceledListSlice getAllJobSnapshots(){
	ArrayList v2 = new ArrayList(v3);
	int v3 = JobSchedulerService.mJobs.size();
	JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v5 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
	JobSchedulerService.mJobs.forEachJob(v5);
	ParceledListSlice v8 = new ParceledListSlice(v2);
	return v8;
}
