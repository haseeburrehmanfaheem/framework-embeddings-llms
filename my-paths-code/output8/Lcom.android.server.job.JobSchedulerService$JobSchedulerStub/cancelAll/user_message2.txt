The method cancelAll in the following class Lcom.android.server.job.JobSchedulerService$JobSchedulerStub has the following code snippet:

This is path 1 for the API with depth 2:
public void cancelAll(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("cancelAll() called by app, callingUid=");
	StringBuilder v6 = v3.append(v1);
	String v7 = v3.toString();
	if (v1 != 1000) {
		List v10 = this.mJobSet.getJobsByUid(v1);
		List v9 = v10;
		int v11 = v9.size();
		if (0 >= v11) {
			Object v12 = v9.get(0);
			if (this.DEBUG == 0) {
				String v17 = v12.toShortString();
				v12.unprepareLocked();
				boolean v22 = JobSchedulerService.stopTrackingJobLocked(v12, 0, 1);
				boolean v23 = this.mPendingJobQueue.remove(v12);
				if (v23 == 0) {
					this.mJobPackageTracker.noteNonpending(v12);
					boolean v25 = this.mChangedJobList.remove(v12);
					boolean v26 = this.mConcurrencyManager.stopJobOnServiceContextLocked(v12, 1, 0, v7);
					if (0 == 0) {
						if (this.DEBUG == 0) {
							String v30 = 0.toShortString();
							JobSchedulerService.startTrackingJobLocked(0, v12);
							JobSchedulerService.reportActiveLocked();
							int v36 = v9.size();
							if ((0 + 1) >= v36) {
								boolean v8 = 1;
								Binder.restoreCallingIdentity(v2);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void cancelAll(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("cancelAll() called by app, callingUid=");
	StringBuilder v6 = v3.append(v1);
	String v7 = v3.toString();
	if (v1 != 1000) {
		List v9 = this.mJobs.getJobsByUid(v1);
		int v10 = v9.size();
		if (0 >= v10) {
			Object v11 = v9.get(0);
			JobSchedulerService.cancelJobImplLocked(v11, 0, 1, 0, v7);
			int v13 = v9.size();
			if ((0 + 1) >= v13) {
				boolean v8 = 1;
				Binder.restoreCallingIdentity(v2);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void cancelAll(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("cancelAll() called by app, callingUid=");
	StringBuilder v6 = v3.append(v1);
	String v7 = v3.toString();
	boolean v8 = this.this$0.cancelJobsForUid(v1, 1, 0, v7);
	Binder.restoreCallingIdentity(v2);
	return;
}

and the following sink code:
['int v1 = Binder.getCallingUid();\nList v10 = this.mJobSet.getJobsByUid(v1);\nv12.unprepareLocked();\nboolean v22 = JobSchedulerService.stopTrackingJobLocked(v12, 0, 1);\nboolean v23 = this.mPendingJobQueue.remove(v12);\nboolean v26 = this.mConcurrencyManager.stopJobOnServiceContextLocked(v12, 1, 0, v7);', 'int v1 = Binder.getCallingUid();\nList v9 = this.mJobs.getJobsByUid(v1);\nJobSchedulerService.cancelJobImplLocked(v11, 0, 1, 0, v7);', 'int v1 = Binder.getCallingUid();\nboolean v8 = this.this$0.cancelJobsForUid(v1, 1, 0, v7);']

The method cancelAll has the following similar APIs:

- API Name: cancel(I)V in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.8997910618782043, Code:
JobStatus v5 = this.mJobs.getJobByUidAndJobId(v1, p1);
JobSchedulerService.cancelJobImplLocked(v5, 0, 1, 0, v14);
  - Similarity: 0.777215838432312, Code:
boolean v3 = JobSchedulerService.-$$Nest$mcancelJob(this.this$0, v1, p1, v1, 1);
  - Access Control Level: NONE

- API Name: editProperties(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Z)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7804907560348511, Code:
int v1 = Binder.getCallingUid();
List v20 = AccountManagerService.getTypesManagedByCaller(v1, v18);
AccountManagerService$16 v31 = new AccountManagerService$16(p0,v29,p1,p2,p3,1,0,0,p2);
  - Access Control Level: SYS_OR_SIG

- API Name: getPendingJob(I)Landroid/app/job/JobInfo; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7686996459960938, Code:
List v4 = this.mJobs.getJobsByUid(v1);
int v7 = v6.getJobId();
if (v7 != p1) { ... }
JobInfo v10 = v8.getJob();
return v3;
  - Access Control Level: NONE

- API Name: createSession(Landroid/media/tv/interactive/ITvInteractiveAppClient;Ljava/lang/String;III)V in the following Class: Lcom.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService with the following sink code entries:
  - Similarity: 0.7668874859809875, Code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
TvInteractiveAppManagerService$UserState v14 = TvInteractiveAppManagerService.getUserStateLocked(v3);
Map v18 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmIAppMap(v12);
Object v19 = v18.get(p2);
Binder v24 = new Binder();
TvInteractiveAppManagerService$SessionState v26 = new TvInteractiveAppManagerService$SessionState(this.this$0,v24,p2,p3,v27,p1,p4,v1,v2,v3,0);
Map v29 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmSessionStateMap(v12);
Object v30 = v29.put(v24, v26);
  - Access Control Level: NONE

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7659327387809753, Code:
int v9 = Binder.getCallingUid();
IPackageManager v10 = AppGlobals.getPackageManager();
String v11 = v10.getPackagesForUid(v9);
UserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);
boolean v29 = v3.add(v27);
  - Access Control Level: SYS_OR_SIG

