The method getStartedJobs in the following class Lcom.android.server.job.JobSchedulerService$JobSchedulerStub has the following code snippet:

This is path 1 for the API with depth 1:
public List getStartedJobs(){
	ArraySet v2 = this.mRunningJobs;
	ArrayList v3 = new ArrayList(v4);
	int v4 = v2.size();
	int v6 = v2.size();
	if ((v6 + -1) < 0) {
		Object v7 = v2.valueAt((v6 + -1));
		if (v7 == 0) {
			JobInfo v8 = this.job;
			boolean v9 = v3.add(v8);
			if (((v6 + -1) + -1) < 0) {
				return v3;
			}
		}
	}
}


This is path 2 for the API with depth 0:
public List getStartedJobs(){
	ArraySet v2 = JobSchedulerService.mConcurrencyManager.getRunningJobsLocked();
	ArrayList v3 = new ArrayList(v4);
	int v4 = v2.size();
	int v6 = v2.size();
	if ((v6 + -1) < 0) {
		Object v7 = v2.valueAt((v6 + -1));
		if (v7 == 0) {
			JobInfo v8 = v7.getJob();
			boolean v9 = v3.add(v8);
			if (((v6 + -1) + -1) < 0) {
				return v3;
			}
		}
	}
}

and the following sink code:
['ArraySet v2 = JobSchedulerService.mConcurrencyManager.getRunningJobsLocked();\nint v4 = v2.size();\nArrayList v3 = new ArrayList(v4);\nObject v7 = v2.valueAt((v6 + -1));\nJobInfo v8 = v7.getJob();\nboolean v9 = v3.add(v8);\nreturn v3;']

The method getStartedJobs has the following similar APIs:

- API Name: getPendingJob(I)Landroid/app/job/JobInfo; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7687846422195435, Code:
List v4 = this.mJobs.getJobsByUid(v1);
int v7 = v6.getJobId();
if (v7 != p1) { ... }
JobInfo v10 = v8.getJob();
return v3;
  - Access Control Level: NONE

- API Name: getAllPendingJobs()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7649596929550171, Code:
List v6 = this.mJobSet.getJobsByUid(v1);
ArrayList v7 = new ArrayList(v8);
ParceledListSlice v3 = new ParceledListSlice(v4);
return v3;
  - Similarity: 0.7575656175613403, Code:
List v5 = this.mJobs.getJobsByUid(v1);
ArrayList v6 = new ArrayList(v7);
ParceledListSlice v3 = new ParceledListSlice(v4);
return v3;
  - Access Control Level: NONE

- API Name: cancelAll()V in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7407323122024536, Code:
int v1 = Binder.getCallingUid();
List v10 = this.mJobSet.getJobsByUid(v1);
v12.unprepareLocked();
boolean v22 = JobSchedulerService.stopTrackingJobLocked(v12, 0, 1);
boolean v23 = this.mPendingJobQueue.remove(v12);
boolean v26 = this.mConcurrencyManager.stopJobOnServiceContextLocked(v12, 1, 0, v7);
  - Similarity: 0.726467490196228, Code:
int v1 = Binder.getCallingUid();
List v9 = this.mJobs.getJobsByUid(v1);
JobSchedulerService.cancelJobImplLocked(v11, 0, 1, 0, v7);
  - Access Control Level: SYS_OR_SIG

- API Name: getAllJobSnapshots()Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.job.JobSchedulerService$JobSchedulerStub with the following sink code entries:
  - Similarity: 0.7340481877326965, Code:
ArrayList v2 = new ArrayList(v3);
JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v9 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
JobSchedulerService.mJobs.forEachJob(v9);
ParceledListSlice v12 = new ParceledListSlice(v2);
return v12;
  - Similarity: 0.7230378985404968, Code:
ArrayList v2 = new ArrayList(v3);
JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v5 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
JobSchedulerService.mJobs.forEachJob(v5);
ParceledListSlice v8 = new ParceledListSlice(v2);
return v8;
  - Similarity: 0.7221643924713135, Code:
ArrayList v2 = new ArrayList(v3);
JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0 v6 = new JobSchedulerService$JobSchedulerStub$$ExternalSyntheticLambda0(p0,v2);
JobSchedulerService.mJobs.forEachJob(v6);
ParceledListSlice v9 = new ParceledListSlice(v2);
return v9;
  - Access Control Level: SYS_OR_SIG

