The method getWhitelistedRuleProviders in the following class Lcom.android.server.integrity.AppIntegrityManagerServiceImpl has the following code snippet:

This is path 1 for the API with depth 2:
public List getWhitelistedRuleProviders(){
	Resources v2 = this.mContext.getResources();
	String v3 = v2.getStringArray(17236075);
	List v4 = Arrays.asList(v3);
	ArrayList v5 = new ArrayList();
	Iterator v7 = v4.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		PackageManager v11 = this.mContext.getPackageManager();
		PackageInfo v12 = v11.getPackageInfo(v9, 0);
		if (PackageInfo.applicationInfo == 0) {
			boolean v13 = PackageInfo.applicationInfo.isSystemApp();
			if (v13 == 0) {
				boolean v10 = 0;
				if (v10 == 0) {
					boolean v14 = v5.add(v9);
					boolean v15 = v7.hasNext();
					if (v15 == 0) {
						List v1 = v5;
						return v1;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getWhitelistedRuleProviders(){
	Resources v2 = this.mContext.getResources();
	String v3 = v2.getStringArray(17236075);
	List v4 = Arrays.asList(v3);
	ArrayList v5 = new ArrayList();
	Iterator v7 = v4.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		boolean v10 = AppIntegrityManagerServiceImpl.isSystemApp(v9);
		if (v10 == 0) {
			boolean v11 = v5.add(v9);
			boolean v12 = v7.hasNext();
			if (v12 == 0) {
				List v1 = v5;
				return v1;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getWhitelistedRuleProviders(){
	List v1 = p0.getAllowedRuleProviderSystemApps();
	return v1;
}

and the following sink code:
['int v12 = v11.getPackageInfo(v9, 0);\nboolean v13 = PackageInfo.applicationInfo.isSystemApp();\nArrayList v5 = new ArrayList();\nboolean v14 = v5.add(v9);\nreturn v1;', 'boolean v10 = AppIntegrityManagerServiceImpl.isSystemApp(v9);\nArrayList v5 = new ArrayList();\nboolean v11 = v5.add(v9);\nreturn v1;', 'List v1 = p0.getAllowedRuleProviderSystemApps();\nreturn v1;']

The method getWhitelistedRuleProviders has the following similar APIs:

- API Name: getPackageScreenCompatMode(Ljava/lang/String;)I in the following Class: Lcom.android.server.wm.ActivityTaskManagerService with the following sink code entries:
  - Similarity: 0.8024152517318726, Code:
ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0);
CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(v10);
boolean v13 = v12.alwaysSupportsScreen();
boolean v14 = v12.neverSupportsScreen();
boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(v10);
int v11 = v15;
int v7 = v11;
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: queryStatsForUid(Ljava/lang/String;ILjava/lang/String;)Landroid/app/usage/StorageStats; in the following Class: Lcom.android.server.usage.StorageStatsService with the following sink code entries:
  - Similarity: 0.7933468222618103, Code:
PackageStats v12 = new PackageStats("StorageStatsService");
int v14 = 0;
[J v20 = this.mInstalld.getAppSize(p1, v9, v1, v14, v2, v10, v11);
PackageStats.codeSize = (PackageStats.codeSize + v20[0]);
StorageStats v21 = StorageStatsService.translate(v16);
return v21;
  - Similarity: 0.7888640761375427, Code:
ApplicationInfo v12 = this.mPackage.getApplicationInfoAsUser(v9[0], 8192, v1);
this.mInstaller.getAppSize(p1, v9, v1, v18, v2, v10, v11, v16);
StorageStats v21 = StorageStatsService.translate(v16);
return v21;
  - Access Control Level: SYS_OR_SIG

- API Name: queryStatsForPackage(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Landroid/app/usage/StorageStats; in the following Class: Lcom.android.server.usage.StorageStatsService with the following sink code entries:
  - Similarity: 0.7906129956245422, Code:
PackageStats v21 = new PackageStats("StorageStatsService");
int v23 = this.mInstalld.getAppSize(p1, v18, v10, v23, v11, v19, v20);
PackageStats.codeSize = (PackageStats.codeSize + v23[0]);
StorageStats v95 = new StorageStats();
return v9;
  - Similarity: 0.7880816459655762, Code:
String v7 = this.mPackage.getPackagesForUid(ApplicationInfo.uid);
Object v16 = ArrayUtils.appendElement(Strin.class, v12, v15);
this.mInstaller.getAppSize(p1, v10, p3, 0, v9, v11, v12, v17);
StorageStats v24 = StorageStatsService.translate(v17);
  - Access Control Level: SYS_OR_SIG

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; in the following Class: Lcom.android.server.pm.UserManagerService with the following sink code entries:
  - Similarity: 0.7855077385902405, Code:
int v9 = Binder.getCallingUid();
IPackageManager v10 = AppGlobals.getPackageManager();
String v11 = v10.getPackagesForUid(v9);
UserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);
boolean v29 = v3.add(v27);
  - Access Control Level: SYS_OR_SIG

- API Name: getShortcuts(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice; in the following Class: Lcom.android.server.pm.ShortcutService with the following sink code entries:
  - Similarity: 0.783817708492279, Code:
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p3);
ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p3);
ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p3);
ShortcutPackage v26 = v25.getPackageShortcuts(p1);
ArrayList v22 = new ArrayList();
ShortcutPackage.findAll(v22, v19, 9, 0, 0, 0);
ParceledListSlice v31 = new ParceledListSlice(v32);
  - Access Control Level: SYS_OR_SIG

