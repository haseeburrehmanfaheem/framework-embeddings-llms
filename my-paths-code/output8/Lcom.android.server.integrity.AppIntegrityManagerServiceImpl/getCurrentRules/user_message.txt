This is path 1 for the API with depth 2:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v3 = Collections.emptyList();
	if (0 == 0) {
		ArrayList v5 = new ArrayList();
		String v7 = 0.getPackageName();
		RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7);
		boolean v9 = v5.add(v8);
		List v10 = 0.getAppCertificates();
		Iterator v11 = v10.iterator();
		boolean v12 = v11.hasNext();
		if (v12 == 0) {
			Object v13 = v11.next();
			RuleIndexRange v14 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sAppCertificateBasedIndexes, v13);
			boolean v15 = v5.add(v14);
			boolean v16 = v11.hasNext();
			if (v16 == 0) {
				RuleIndexRange v17 = new RuleIndexRange(v19,v21);
				Object v18 = this.sUnindexedRuleIndexes.get("START_KEY");
				int v19 = v18.intValue();
				Object v20 = this.sUnindexedRuleIndexes.get("END_KEY");
				int v21 = v20.intValue();
				boolean v23 = v5.add(v17);
				List v4 = v5;
				File v24 = new File(this.mRulesDir,"rules");
				RandomAccessObject$RandomAccessFileObject v27 = new RandomAccessObject$RandomAccessFileObject(v24);
				RandomAccessObject v26 = v27;
				List v29 = this.mRuleParser.parse(v26, v3);
				List v2 = v29;
				ParceledListSlice v30 = new ParceledListSlice(v2);
				return v30;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v3 = Collections.emptyList();
	if (0 == 0) {
		List v4 = this.mRuleIndexingController.identifyRulesToEvaluate(0);
		File v5 = new File(this.mRulesDir,"rules");
		RandomAccessObject v7 = RandomAccessObject.ofFile(v5);
		List v8 = this.mRuleParser.parse(v7, v3);
		List v2 = v8;
		ParceledListSlice v9 = new ParceledListSlice(v2);
		return v9;
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v2 = this.mIntegrityFileManager.readRules(0);
	ParceledListSlice v3 = new ParceledListSlice(v2);
	return v3;
}
