The method cancelPrintJob in the following class Lcom.android.server.print.PrintManagerService$PrintManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void cancelPrintJob(PrintJobId p1, int p2, int p3){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(v1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(v1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,v1,this.mLock,0);
				this.mUserStates.put(v1, v9);
				if (0 != 0) {
					v8.increasePriority();
					UserState v6 = v8;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					RemotePrintSpooler.throwIfCalledOnMainThread();
					RemotePrintSpooler.throwIfDestroyedLocked();
					this.mCanUnbind = 0;
					IPrintSpooler v18 = RemotePrintSpooler.getRemoteInstanceLazy();
					PrintJobInfo v19 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v18, p1, v4);
					this.mCanUnbind = 1;
					this.mLock.notifyAll();
					PrintJobInfo v15 = v19;
					if (v15 != 0) {
						RemotePrintSpooler.throwIfCalledOnMainThread();
						RemotePrintSpooler.throwIfDestroyedLocked();
						this.mCanUnbind = 0;
						IPrintSpooler v24 = RemotePrintSpooler.getRemoteInstanceLazy();
						v24.setPrintJobCancelling(p1, 1);
						this.mCanUnbind = 1;
						this.mLock.notifyAll();
						int v27 = this.mState;
						if (v27 == 6) {
							PrinterId v28 = this.mPrinterId;
							if (v28 == 0) {
								ComponentName v29 = this.mServiceName;
								Object v30 = this.mActiveServices.get(v29);
								if (v30 != 0) {
									Handler v32 = Handler.getMain();
									RemotePrintService$$ExternalSyntheticLambda2 v33 = new RemotePrintService$$ExternalSyntheticLambda2();
									Message v35 = PooledLambda.obtainMessage(v33, RemotePrintService, v15);
									boolean v36 = v32.sendMessage(v35);
									Binder.restoreCallingIdentity(v13);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void cancelPrintJob(PrintJobId p1, int p2, int p3){
	UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
	UserState v5 = v6;
	long v7 = Binder.clearCallingIdentity();
	PrintJobInfo v9 = this.mSpooler.getPrintJobInfo(p1, v4);
	if (v9 != 0) {
		this.mSpooler.setPrintJobCancelling(p1, 1);
		int v11 = v9.getState();
		if (v11 == 6) {
			PrinterId v12 = v9.getPrinterId();
			if (v12 == 0) {
				ComponentName v13 = v12.getServiceName();
				Object v14 = this.mActiveServices.get(v13);
				if (v14 != 0) {
					v14.onRequestCancelPrintJob(v9);
					Binder.restoreCallingIdentity(v7);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void cancelPrintJob(PrintJobId p1, int p2, int p3){
	return;
}

and the following sink code:
['PrintJobInfo v19 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v18, p1, v4);\nv24.setPrintJobCancelling(p1, 1);', 'PrintJobInfo v9 = this.mSpooler.getPrintJobInfo(p1, v4);\nthis.mSpooler.setPrintJobCancelling(p1, 1);']

The method cancelPrintJob has the following similar APIs:

- API Name: getPrintJobInfo(Landroid/print/PrintJobId;II)Landroid/print/PrintJobInfo; in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8522511720657349, Code:
PrintJobInfo v9 = this.mPrintJobForAppCache.getPrintJob(p1, v4);
if (v9 != 0) {
PrintJobInfo v10 = this.mSpooler.getPrintJobInfo(p1, v4);
if (v9 == 0) {
v9.setTag(0);
v9.setAdvancedOptions(0);
}
return v8;
  - Similarity: 0.7941412925720215, Code:
IPrintSpooler v28 = RemotePrintSpooler.getRemoteInstanceLazy();
PrintJobInfo v29 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v28, p1, v4);
this.mCanUnbind = 1;
this.mLock.notifyAll();
return v14;
  - Similarity: 0.7387150526046753, Code:
UserState v5 = p0.getOrCreateUserStateLocked(v1, 0);
long v6 = Binder.clearCallingIdentity();
PrintJobInfo v7 = v5.getPrintJobInfo(p1, v4);
Binder.restoreCallingIdentity(v6);
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: restartPrintJob(Landroid/print/PrintJobId;II)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8066176176071167, Code:
UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
long v8 = Binder.clearCallingIdentity();
PrintJobInfo v10 = UserState.getPrintJobInfo(p1, v5);
boolean v12 = this.mSpooler.setPrintJobState(p1, 2, 0);
  - Similarity: 0.7720631957054138, Code:
UserState v6 = p0.getOrCreateUserStateLocked(v2, 0);
long v7 = Binder.clearCallingIdentity();
v6.restartPrintJob(p1, v5);
  - Access Control Level: SYS_OR_SIG

- API Name: getPrintJobInfos(II)Ljava/util/List; in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.7774207592010498, Code:
UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
List v9 = this.mPrintJobForAppCache.getPrintJobs(v4);
ArrayMap v10 = new ArrayMap();
int v12 = v9.size();
if (0 >= v12) { Object v13 = v9.get(0); }
List v18 = this.mSpooler.getPrintJobInfos(0, -1, v4);
ArrayList v25 = new ArrayList(v26);
List v8 = v25;
  - Access Control Level: SYS_OR_SIG

- API Name: removePrintJobStateChangeListener(Landroid/print/IPrintJobStateChangeListener;I)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.7546812295913696, Code:
UserState v5 = p0.getOrCreateUserStateLocked(v2, 0);
v5.removePrintJobStateChangeListener(p1);
  - Access Control Level: NONE

- API Name: print(Ljava/lang/String;Landroid/print/IPrintDocumentAdapter;Landroid/print/PrintAttributes;Ljava/lang/String;II)Landroid/os/Bundle; in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.7274897694587708, Code:
UserState v16 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v5, 0, 1);
PrintJobInfo v19 = new PrintJobInfo();
v19.setId(v21);
v19.setAppId(v8);
v19.setLabel(v3);
v19.setAttributes(p3);
Intent v34 = new Intent("android.print.PRINT_DIALOG");
Bundle v48 = new Bundle();
v48.putParcelable("android.print.intent.extra.EXTRA_PRINT_JOB", v19);
return v48;
  - Access Control Level: SYS_OR_SIG

