The method startPrinterStateTracking has the following code snippet:

This is path 1 for the API with depth 2:
public void startPrinterStateTracking(PrinterId p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(v2);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(v2);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,v2,this.mLock,0);
				this.mUserStates.put(v2, v9);
				if (0 != 0) {
					v8.increasePriority();
					UserState v6 = v8;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						boolean v16 = this.mActiveServices.isEmpty();
						if (v16 == 0) {
							if (this.mPrinterDiscoverySession != 0) {
								if (this.mIsDestroyed == 0) {
									boolean v18 = this.mStartedPrinterDiscoveryTokens.isEmpty();
									if (v18 == 0) {
										boolean v19 = this.mStateTrackedPrinters.contains(p1);
										boolean v20 = this.mStateTrackedPrinters.add(p1);
										if (v19 == 0) {
											ArrayMap v21 = UserState.-$$Nest$fgetmActiveServices(this.this$0);
											ComponentName v22 = p1.getServiceName();
											Object v23 = v21.get(v22);
											if (v23 != 0) {
												Handler v24 = Handler.getMain();
												UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda10 v25 = new UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda10();
												Message v27 = PooledLambda.obtainMessage(v25, UserState$PrinterDiscoverySessionMediator, v23, p1);
												boolean v28 = v24.sendMessage(v27);
												Binder.restoreCallingIdentity(v13);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void startPrinterStateTracking(PrinterId p1, int p2){
	UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
	UserState v5 = v6;
	long v7 = Binder.clearCallingIdentity();
	UserState.throwIfDestroyedLocked();
	boolean v10 = this.mActiveServices.isEmpty();
	if (v10 == 0) {
		if (this.mPrinterDiscoverySession != 0) {
			this.mPrinterDiscoverySession.startPrinterStateTrackingLocked(p1);
			Binder.restoreCallingIdentity(v7);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void startPrinterStateTracking(PrinterId p1, int p2){
	return;
}

and the following sink code:
['UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);\nthis.mPrinterDiscoverySession.startPrinterStateTrackingLocked(p1);', 'UserState v9 = new UserState(this.mContext,v2,this.mLock,0);\nthis.mUserStates.put(v2, v9);\nMessage v27 = PooledLambda.obtainMessage(v25, UserState$PrinterDiscoverySessionMediator, v23, p1);']

The method startPrinterStateTracking has the following similar APIs:

- API Name: stopPrinterStateTracking(Landroid/print/PrinterId;I)V with Similarity Score: 0.9853869676589966
  - Access Control Level: NONE and the following code:
UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
this.mPrinterDiscoverySession.stopPrinterStateTrackingLocked(p1);

- API Name: stopPrinterDiscovery(Landroid/print/IPrinterDiscoveryObserver;I)V with Similarity Score: 0.9611562490463257
  - Access Control Level: NONE and the following code:
UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
this.mPrinterDiscoverySession.stopPrinterDiscoveryLocked(p1);

