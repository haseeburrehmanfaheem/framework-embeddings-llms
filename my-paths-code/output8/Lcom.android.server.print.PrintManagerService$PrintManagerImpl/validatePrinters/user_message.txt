This is path 1 for the API with depth 2:
public void validatePrinters(List p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(v2);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(v2);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,v2,this.mLock,0);
				this.mUserStates.put(v2, v9);
				if (0 != 0) {
					v8.increasePriority();
					UserState v6 = v8;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						boolean v16 = this.mActiveServices.isEmpty();
						if (v16 == 0) {
							if (this.mPrinterDiscoverySession != 0) {
								if (this.mIsDestroyed == 0) {
									ArrayList v18 = new ArrayList(v1);
									boolean v20 = v18.isEmpty();
									if (v20 != 0) {
										Iterator v21 = v18.iterator();
										ArrayList v22 = new ArrayList();
										boolean v24 = v21.hasNext();
										if (v24 == 0) {
											Object v25 = v21.next();
											if (v25 == 0) {
												boolean v26 = v22.isEmpty();
												if (v26 == 0) {
													ComponentName v27 = v25.getServiceName();
													boolean v28 = v27.equals(getServiceName());
													if (v28 == 0) {
														boolean v29 = v22.add(v25);
														v21.remove();
														boolean v31 = v21.hasNext();
														if (v31 == 0) {
															ArrayMap v32 = UserState.-$$Nest$fgetmActiveServices(this.this$0);
															Object v33 = v32.get(getServiceName());
															if (v33 == 0) {
																Handler v34 = Handler.getMain();
																UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda0 v35 = new UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda0();
																Message v37 = PooledLambda.obtainMessage(v35, UserState$PrinterDiscoverySessionMediator, v33, v22);
																boolean v38 = v34.sendMessage(v37);
																boolean v39 = v18.isEmpty();
																if (v39 != 0) {
																	Binder.restoreCallingIdentity(v13);
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void validatePrinters(List p1, int p2){
	UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
	UserState v5 = v6;
	long v7 = Binder.clearCallingIdentity();
	UserState.throwIfDestroyedLocked();
	boolean v10 = this.mActiveServices.isEmpty();
	if (v10 == 0) {
		if (this.mPrinterDiscoverySession != 0) {
			this.mPrinterDiscoverySession.validatePrintersLocked(v1);
			Binder.restoreCallingIdentity(v7);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void validatePrinters(List p1, int p2){
	return;
}
