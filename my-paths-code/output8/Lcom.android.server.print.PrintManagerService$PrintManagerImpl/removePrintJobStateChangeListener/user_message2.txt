The method removePrintJobStateChangeListener in the following class Lcom.android.server.print.PrintManagerService$PrintManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(v2);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(v2);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,v2,this.mLock,0);
				this.mUserStates.put(v2, v9);
				if (0 != 0) {
					v8.increasePriority();
					UserState v6 = v8;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintJobStateChangeListenerRecords != 0) {
							int v16 = this.mPrintJobStateChangeListenerRecords.size();
							if (0 >= v16) {
								Object v17 = this.mPrintJobStateChangeListenerRecords.get(0);
								IBinder v18 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
								IBinder v19 = p1.asBinder();
								boolean v20 = v18.equals(v19);
								if (v20 == 0) {
									if ((0 + 1) >= v16) {
										Object v21 = this.mPrintJobStateChangeListenerRecords.get((0 + 1));
										IBinder v22 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
										IBinder v23 = p1.asBinder();
										boolean v24 = v22.equals(v23);
										if (v24 == 0) {
											v21.destroy();
											Object v26 = this.mPrintJobStateChangeListenerRecords.remove((0 + 1));
											boolean v27 = this.mPrintJobStateChangeListenerRecords.isEmpty();
											if (v27 == 0) {
												this.mPrintJobStateChangeListenerRecords = 0;
												Binder.restoreCallingIdentity(v13);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
	UserState v5 = v6;
	long v7 = Binder.clearCallingIdentity();
	UserState.throwIfDestroyedLocked();
	if (this.mPrintJobStateChangeListenerRecords != 0) {
		int v10 = this.mPrintJobStateChangeListenerRecords.size();
		if (0 >= v10) {
			Object v11 = this.mPrintJobStateChangeListenerRecords.get(0);
			IBinder v12 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
			IBinder v13 = p1.asBinder();
			boolean v14 = v12.equals(v13);
			if (v14 == 0) {
				if ((0 + 1) >= v10) {
					Object v15 = this.mPrintJobStateChangeListenerRecords.get((0 + 1));
					IBinder v16 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
					IBinder v17 = p1.asBinder();
					boolean v18 = v16.equals(v17);
					if (v18 == 0) {
						v15.destroy();
						Object v20 = this.mPrintJobStateChangeListenerRecords.remove((0 + 1));
						boolean v21 = this.mPrintJobStateChangeListenerRecords.isEmpty();
						if (v21 == 0) {
							this.mPrintJobStateChangeListenerRecords = 0;
							Binder.restoreCallingIdentity(v7);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	UserState v5 = p0.getOrCreateUserStateLocked(v2, 0);
	long v6 = Binder.clearCallingIdentity();
	v5.removePrintJobStateChangeListener(p1);
	Binder.restoreCallingIdentity(v6);
	return;
}

and the following sink code:
['UserState v5 = p0.getOrCreateUserStateLocked(v2, 0);\nv5.removePrintJobStateChangeListener(p1);']

The method removePrintJobStateChangeListener has the following similar APIs:

- API Name: addPrintJobStateChangeListener(Landroid/print/IPrintJobStateChangeListener;II)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8987495303153992, Code:
UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
UserState$2 v13 = new UserState$2(UserState,p1,v5);
boolean v15 = this.mPrintJobStateChangeListenerRecords.add(v13);
  - Access Control Level: SYS_OR_SIG

- API Name: removePrintServicesChangeListener(Landroid/print/IPrintServicesChangeListener;I)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8957398533821106, Code:
UserState v6 = p0.getOrCreateUserStateLocked(v3, 0);
v6.removePrintServicesChangeListener(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: restartPrintJob(Landroid/print/PrintJobId;II)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8666536211967468, Code:
UserState v6 = p0.getOrCreateUserStateLocked(v2, 0);
long v7 = Binder.clearCallingIdentity();
v6.restartPrintJob(p1, v5);
  - Similarity: 0.8232574462890625, Code:
UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
long v8 = Binder.clearCallingIdentity();
PrintJobInfo v10 = UserState.getPrintJobInfo(p1, v5);
boolean v12 = this.mSpooler.setPrintJobState(p1, 2, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: setPrintServiceEnabled(Landroid/content/ComponentName;ZI)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8345696926116943, Code:
UserState v11 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
v10.setPrintServiceEnabled(p1, p2);
  - Similarity: 0.8324242234230042, Code:
UserState v10 = p0.getOrCreateUserStateLocked(v1, 0);
v10.setPrintServiceEnabled(p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: getPrintJobInfos(II)Ljava/util/List; in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.827088475227356, Code:
UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
List v9 = this.mPrintJobForAppCache.getPrintJobs(v4);
ArrayMap v10 = new ArrayMap();
int v12 = v9.size();
if (0 >= v12) { Object v13 = v9.get(0); }
List v18 = this.mSpooler.getPrintJobInfos(0, -1, v4);
ArrayList v25 = new ArrayList(v26);
List v8 = v25;
  - Access Control Level: SYS_OR_SIG

