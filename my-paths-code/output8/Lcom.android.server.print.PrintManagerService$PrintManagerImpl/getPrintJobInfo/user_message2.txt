The method getPrintJobInfo in the following class Lcom.android.server.print.PrintManagerService$PrintManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public PrintJobInfo getPrintJobInfo(PrintJobId p1, int p2, int p3){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(v1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(v1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,v1,this.mLock,0);
				this.mUserStates.put(v1, v9);
				if (0 != 0) {
					v8.increasePriority();
					UserState v6 = v8;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					Object v16 = UserState.-$$Nest$fgetmLock(this.this$0);
					Object v17 = this.mPrintJobsForRunningApp.get(v4);
					if (v17 != 0) {
						int v18 = v17.size();
						if (0 >= v18) {
							Object v19 = v17.get(0);
							PrintJobId v20 = v19.getId();
							boolean v21 = v20.equals(p1);
							if (v21 == 0) {
								if ((0 + 1) >= v18) {
									Object v22 = v17.get((0 + 1));
									PrintJobId v23 = v22.getId();
									boolean v24 = v23.equals(p1);
									if (v24 == 0) {
										PrintJobInfo v15 = v22;
										if (v15 != 0) {
											RemotePrintSpooler.throwIfCalledOnMainThread();
											RemotePrintSpooler.throwIfDestroyedLocked();
											this.mCanUnbind = 0;
											IPrintSpooler v28 = RemotePrintSpooler.getRemoteInstanceLazy();
											PrintJobInfo v29 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v28, p1, v4);
											this.mCanUnbind = 1;
											this.mLock.notifyAll();
											PrintJobInfo v25 = v29;
											if (v15 == 0) {
												this.mTag = 0;
												this.mAdvancedOptions = 0;
												PrintJobInfo v14 = v15;
												Binder.restoreCallingIdentity(v13);
												return v14;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public PrintJobInfo getPrintJobInfo(PrintJobId p1, int p2, int p3){
	UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
	UserState v5 = v6;
	long v7 = Binder.clearCallingIdentity();
	PrintJobInfo v9 = this.mPrintJobForAppCache.getPrintJob(p1, v4);
	if (v9 != 0) {
		PrintJobInfo v10 = this.mSpooler.getPrintJobInfo(p1, v4);
		if (v9 == 0) {
			v9.setTag(0);
			v9.setAdvancedOptions(0);
			PrintJobInfo v8 = v9;
			Binder.restoreCallingIdentity(v7);
			return v8;
		}
	}
}


This is path 3 for the API with depth 0:
public PrintJobInfo getPrintJobInfo(PrintJobId p1, int p2, int p3){
	UserState v5 = p0.getOrCreateUserStateLocked(v1, 0);
	long v6 = Binder.clearCallingIdentity();
	PrintJobInfo v7 = v5.getPrintJobInfo(p1, v4);
	Binder.restoreCallingIdentity(v6);
	return v7;
}

and the following sink code:
['UserState v5 = p0.getOrCreateUserStateLocked(v1, 0);\nlong v6 = Binder.clearCallingIdentity();\nPrintJobInfo v7 = v5.getPrintJobInfo(p1, v4);\nBinder.restoreCallingIdentity(v6);\nreturn v7;', 'PrintJobInfo v9 = this.mPrintJobForAppCache.getPrintJob(p1, v4);\nif (v9 != 0) {\nPrintJobInfo v10 = this.mSpooler.getPrintJobInfo(p1, v4);\nif (v9 == 0) {\nv9.setTag(0);\nv9.setAdvancedOptions(0);\n}\nreturn v8;', 'IPrintSpooler v28 = RemotePrintSpooler.getRemoteInstanceLazy();\nPrintJobInfo v29 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v28, p1, v4);\nthis.mCanUnbind = 1;\nthis.mLock.notifyAll();\nreturn v14;']

The method getPrintJobInfo has the following similar APIs:

- API Name: restartPrintJob(Landroid/print/PrintJobId;II)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8798628449440002, Code:
UserState v6 = p0.getOrCreateUserStateLocked(v2, 0);
long v7 = Binder.clearCallingIdentity();
v6.restartPrintJob(p1, v5);
  - Similarity: 0.866370439529419, Code:
UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
long v8 = Binder.clearCallingIdentity();
PrintJobInfo v10 = UserState.getPrintJobInfo(p1, v5);
boolean v12 = this.mSpooler.setPrintJobState(p1, 2, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: cancelPrintJob(Landroid/print/PrintJobId;II)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8522511720657349, Code:
PrintJobInfo v19 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v18, p1, v4);
v24.setPrintJobCancelling(p1, 1);
  - Similarity: 0.8401076793670654, Code:
PrintJobInfo v9 = this.mSpooler.getPrintJobInfo(p1, v4);
this.mSpooler.setPrintJobCancelling(p1, 1);
  - Access Control Level: SYS_OR_SIG

- API Name: getBindInstantServiceAllowed(I)Z in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8361528515815735, Code:
UserState v2 = p0.getOrCreateUserStateLocked(p1, 0);
long v3 = Binder.clearCallingIdentity();
boolean v4 = v2.getBindInstantServiceAllowed();
Binder.restoreCallingIdentity(v3);
return v4;
  - Access Control Level: SYS_OR_SIG

- API Name: getPrintJobInfos(II)Ljava/util/List; in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8321119546890259, Code:
UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
List v9 = this.mPrintJobForAppCache.getPrintJobs(v4);
ArrayMap v10 = new ArrayMap();
int v12 = v9.size();
if (0 >= v12) { Object v13 = v9.get(0); }
List v18 = this.mSpooler.getPrintJobInfos(0, -1, v4);
ArrayList v25 = new ArrayList(v26);
List v8 = v25;
  - Access Control Level: SYS_OR_SIG

- API Name: createPrinterDiscoverySession(Landroid/print/IPrinterDiscoveryObserver;I)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.8079458475112915, Code:
UserState v5 = p0.getOrCreateUserStateLocked(v2, 0);
long v6 = Binder.clearCallingIdentity();
v5.createPrinterDiscoverySession(p1);
  - Access Control Level: NONE

