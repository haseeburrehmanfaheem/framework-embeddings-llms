The method getPrintServices in the following class Lcom.android.server.print.PrintManagerService$PrintManagerImpl has the following code snippet:

This is path 1 for the API with depth 2:
public List getPrintServices(int p1, int p2){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(v3);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(v3);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,v3,this.mLock,0);
				this.mUserStates.put(v3, v10);
				if (0 != 0) {
					v9.increasePriority();
					UserState v7 = v9;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					int v16 = this.mInstalledServices.size();
					if (0 >= v16) {
						Object v17 = this.mInstalledServices.get(0);
						ComponentName v18 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
						ResolveInfo v19 = this.mResolveInfo;
						ResolveInfo v20 = this.mResolveInfo;
						boolean v22 = this.mActiveServices.containsKey(v18);
						this.mIsEnabled = v22;
						boolean v24 = this.mIsEnabled;
						if (v24 == 0) {
							if ((p1 & 1) != 0) {
								if (0 != 0) {
									ArrayList v25 = new ArrayList();
									boolean v27 = 0.add(v17);
									if ((0 + 1) >= v16) {
										List v15 = 0;
										Binder.restoreCallingIdentity(v14);
										return v15;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getPrintServices(int p1, int p2){
	UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v3, 0, 1);
	UserState v6 = v7;
	long v8 = Binder.clearCallingIdentity();
	int v10 = this.mInstalledServices.size();
	if (0 >= v10) {
		Object v11 = this.mInstalledServices.get(0);
		ComponentName v12 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
		ResolveInfo v13 = v11.getResolveInfo();
		ResolveInfo v14 = v11.getResolveInfo();
		boolean v16 = this.mActiveServices.containsKey(v12);
		v11.setIsEnabled(v16);
		boolean v18 = v11.isEnabled();
		if (v18 == 0) {
			if ((p1 & 1) != 0) {
				if (0 != 0) {
					ArrayList v19 = new ArrayList();
					boolean v21 = 0.add(v11);
					if ((0 + 1) >= v10) {
						List v9 = 0;
						Binder.restoreCallingIdentity(v8);
						return v9;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getPrintServices(int p1, int p2){
	return 0;
}

and the following sink code:
['UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v3, 0, 1);\nlong v8 = Binder.clearCallingIdentity();\nint v10 = this.mInstalledServices.size();\nObject v11 = this.mInstalledServices.get(0);\nComponentName v12 = new ComponentName(ServiceInfo.packageName, ServiceInfo.name);\nResolveInfo v13 = v11.getResolveInfo();\nboolean v16 = this.mActiveServices.containsKey(v12);\nv11.setIsEnabled(v16);']

The method getPrintServices has the following similar APIs:

- API Name: isPrintServiceEnabled(Landroid/content/ComponentName;I)Z in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.811063826084137, Code:
UserState v12 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v8, 0, 1);
boolean v14 = this.mDisabledServices.contains(p1);
  - Similarity: 0.7472224235534668, Code:
UserState v15 = new UserState(this.mContext,v8,this.mLock,0);
this.mUserStates.put(v8, v15);
boolean v19 = v11.isPrintServiceEnabled(p1);
return v19;
  - Access Control Level: NONE

- API Name: setPrintServiceEnabled(Landroid/content/ComponentName;ZI)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.7701675295829773, Code:
int v14 = this.mInstalledServices.size();
Object v15 = this.mInstalledServices.get(0);
ComponentName v16 = v15.getComponentName();
boolean v17 = v16.equals(p1);
boolean v21 = this.mDisabledServices.add(p1);
  - Similarity: 0.7456181049346924, Code:
UserState v10 = p0.getOrCreateUserStateLocked(v1, 0);
v10.setPrintServiceEnabled(p1, p2);
  - Similarity: 0.7390233874320984, Code:
UserState v11 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
v10.setPrintServiceEnabled(p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: addPrintServicesChangeListener(Landroid/print/IPrintServicesChangeListener;I)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.7464210987091064, Code:
UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v3, 0, 1);
UserState$3 v13 = new UserState$3(UserState,p1);
boolean v15 = this.mPrintServicesChangeListenerRecords.add(v13);
  - Access Control Level: SYS_OR_SIG

- API Name: restartPrintJob(Landroid/print/PrintJobId;II)V in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.7351755499839783, Code:
UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
long v8 = Binder.clearCallingIdentity();
PrintJobInfo v10 = UserState.getPrintJobInfo(p1, v5);
boolean v12 = this.mSpooler.setPrintJobState(p1, 2, 0);
  - Access Control Level: SYS_OR_SIG

- API Name: print(Ljava/lang/String;Landroid/print/IPrintDocumentAdapter;Landroid/print/PrintAttributes;Ljava/lang/String;II)Landroid/os/Bundle; in the following Class: Lcom.android.server.print.PrintManagerService$PrintManagerImpl with the following sink code entries:
  - Similarity: 0.7304661273956299, Code:
PackageManager v10 = this.mContext.getPackageManager();
int v11 = Binder.getCallingUid();
String v12 = v10.getPackagesForUid(v11);
UserState v19 = new UserState(this.mContext,v5,this.mLock,0);
  - Access Control Level: SYS_OR_SIG

