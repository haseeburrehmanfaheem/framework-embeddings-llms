The method removePrintServicesChangeListener has the following code snippet:

This is path 1 for the API with depth 2:
public void removePrintServicesChangeListener(IPrintServicesChangeListener p1, int p2){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(v3);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(v3);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,v3,this.mLock,0);
				this.mUserStates.put(v3, v10);
				if (0 != 0) {
					v9.increasePriority();
					UserState v7 = v9;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintServicesChangeListenerRecords != 0) {
							int v17 = this.mPrintServicesChangeListenerRecords.size();
							if (0 >= v17) {
								Object v18 = this.mPrintServicesChangeListenerRecords.get(0);
								IBinder v19 = UserState$ListenerRecord.listener.asBinder();
								IBinder v20 = p1.asBinder();
								boolean v21 = v19.equals(v20);
								if (v21 == 0) {
									if ((0 + 1) >= v17) {
										Object v22 = this.mPrintServicesChangeListenerRecords.get((0 + 1));
										IBinder v23 = UserState$ListenerRecord.listener.asBinder();
										IBinder v24 = p1.asBinder();
										boolean v25 = v23.equals(v24);
										if (v25 == 0) {
											v22.destroy();
											Object v27 = this.mPrintServicesChangeListenerRecords.remove((0 + 1));
											boolean v28 = this.mPrintServicesChangeListenerRecords.isEmpty();
											if (v28 == 0) {
												this.mPrintServicesChangeListenerRecords = 0;
												Binder.restoreCallingIdentity(v14);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void removePrintServicesChangeListener(IPrintServicesChangeListener p1, int p2){
	UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v3, 0, 1);
	UserState v6 = v7;
	long v8 = Binder.clearCallingIdentity();
	UserState.throwIfDestroyedLocked();
	if (this.mPrintServicesChangeListenerRecords != 0) {
		int v11 = this.mPrintServicesChangeListenerRecords.size();
		if (0 >= v11) {
			Object v12 = this.mPrintServicesChangeListenerRecords.get(0);
			IBinder v13 = UserState$ListenerRecord.listener.asBinder();
			IBinder v14 = p1.asBinder();
			boolean v15 = v13.equals(v14);
			if (v15 == 0) {
				if ((0 + 1) >= v11) {
					Object v16 = this.mPrintServicesChangeListenerRecords.get((0 + 1));
					IBinder v17 = UserState$ListenerRecord.listener.asBinder();
					IBinder v18 = p1.asBinder();
					boolean v19 = v17.equals(v18);
					if (v19 == 0) {
						v16.destroy();
						Object v21 = this.mPrintServicesChangeListenerRecords.remove((0 + 1));
						boolean v22 = this.mPrintServicesChangeListenerRecords.isEmpty();
						if (v22 == 0) {
							this.mPrintServicesChangeListenerRecords = 0;
							Binder.restoreCallingIdentity(v8);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void removePrintServicesChangeListener(IPrintServicesChangeListener p1, int p2){
	UserState v6 = p0.getOrCreateUserStateLocked(v3, 0);
	long v7 = Binder.clearCallingIdentity();
	v6.removePrintServicesChangeListener(p1);
	Binder.restoreCallingIdentity(v7);
	return;
}

and the following sink code:
['UserState v6 = p0.getOrCreateUserStateLocked(v3, 0);\nv6.removePrintServicesChangeListener(p1);']

The method removePrintServicesChangeListener has the following similar APIs:

- API Name: setPrintServiceEnabled(Landroid/content/ComponentName;ZI)V with Similarity Score: 0.9054905772209167
  - Access Control Level: SYS_OR_SIG and the following code:
UserState v10 = p0.getOrCreateUserStateLocked(v1, 0);
v10.setPrintServiceEnabled(p1, p2);

- API Name: removePrintJobStateChangeListener(Landroid/print/IPrintJobStateChangeListener;I)V with Similarity Score: 0.8957399725914001
  - Access Control Level: NONE and the following code:
UserState v5 = p0.getOrCreateUserStateLocked(v2, 0);
v5.removePrintJobStateChangeListener(p1);

