This is path 1 for the API with depth 2:
public Icon getCustomPrinterIcon(PrinterId p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(v2);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(v2);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,v2,this.mLock,0);
				this.mUserStates.put(v2, v9);
				if (0 != 0) {
					v8.increasePriority();
					UserState v6 = v8;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					RemotePrintSpooler.throwIfCalledOnMainThread();
					RemotePrintSpooler.throwIfDestroyedLocked();
					this.mCanUnbind = 0;
					IPrintSpooler v18 = RemotePrintSpooler.getRemoteInstanceLazy();
					Icon v19 = this.mGetCustomPrinterIconCaller.getCustomPrinterIcon(v18, p1);
					this.mCanUnbind = 1;
					this.mLock.notifyAll();
					Icon v15 = v19;
					if (v15 != 0) {
						ComponentName v21 = this.mServiceName;
						Object v22 = this.mActiveServices.get(v21);
						if (v22 == 0) {
							Handler v24 = Handler.getMain();
							RemotePrintService$$ExternalSyntheticLambda1 v25 = new RemotePrintService$$ExternalSyntheticLambda1();
							Message v27 = PooledLambda.obtainMessage(v25, RemotePrintService, p1);
							boolean v28 = v24.sendMessage(v27);
							Icon v14 = v15;
							Binder.restoreCallingIdentity(v13);
							return v14;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public Icon getCustomPrinterIcon(PrinterId p1, int p2){
	UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
	UserState v5 = v6;
	long v7 = Binder.clearCallingIdentity();
	Icon v9 = this.mSpooler.getCustomPrinterIcon(p1);
	if (v9 != 0) {
		ComponentName v10 = p1.getServiceName();
		Object v11 = this.mActiveServices.get(v10);
		if (v11 == 0) {
			v11.requestCustomPrinterIcon(p1);
			Icon v8 = v9;
			Binder.restoreCallingIdentity(v7);
			return v8;
		}
	}
}


This is path 3 for the API with depth 0:
public Icon getCustomPrinterIcon(PrinterId p1, int p2){
	return 0;
}
