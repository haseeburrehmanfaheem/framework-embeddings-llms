This is path 1 for the API with depth 2:
public void addPrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2, int p3){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(v2);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(v2);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,v2,this.mLock,0);
				this.mUserStates.put(v2, v10);
				if (0 != 0) {
					v9.increasePriority();
					UserState v7 = v9;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintJobStateChangeListenerRecords != 0) {
							ArrayList v17 = new ArrayList();
							this.mPrintJobStateChangeListenerRecords = v17;
							UserState$2 v19 = new UserState$2(UserState,p1,v5);
							boolean v21 = this.mPrintJobStateChangeListenerRecords.add(v19);
							Binder.restoreCallingIdentity(v14);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void addPrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2, int p3){
	UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
	UserState v6 = v7;
	long v8 = Binder.clearCallingIdentity();
	UserState.throwIfDestroyedLocked();
	if (this.mPrintJobStateChangeListenerRecords != 0) {
		ArrayList v11 = new ArrayList();
		this.mPrintJobStateChangeListenerRecords = v11;
		UserState$2 v13 = new UserState$2(UserState,p1,v5);
		boolean v15 = this.mPrintJobStateChangeListenerRecords.add(v13);
		Binder.restoreCallingIdentity(v8);
		return;
	}
}


This is path 3 for the API with depth 0:
public void addPrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2, int p3){
	return;
}
