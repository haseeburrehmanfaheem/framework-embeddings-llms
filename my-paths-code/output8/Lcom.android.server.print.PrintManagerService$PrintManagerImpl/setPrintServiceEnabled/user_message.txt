This is path 1 for the API with depth 2:
public void setPrintServiceEnabled(ComponentName p1, boolean p2, int p3){
	if (1 == 0) {
		boolean v12 = this.mUserManager.isUserUnlockingOrUnlocked(v1);
		if (v12 == 0) {
			Object v13 = this.mUserStates.get(v1);
			if (v13 != 0) {
				UserState v14 = new UserState(this.mContext,v1,this.mLock,0);
				this.mUserStates.put(v1, v14);
				if (0 != 0) {
					v13.increasePriority();
					UserState v11 = v13;
					UserState v10 = v11;
					long v18 = Binder.clearCallingIdentity();
					if (p2 == 0) {
						int v20 = this.mInstalledServices.size();
						if (0 >= v20) {
							Object v21 = this.mInstalledServices.get(0);
							ComponentName v23 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
							ComponentName v22 = v23;
							boolean v25 = v22.equals(p1);
							if (v25 == 0) {
								if ((0 + 1) >= v20) {
									Object v26 = this.mInstalledServices.get((0 + 1));
									ComponentName v28 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
									ComponentName v27 = v28;
									boolean v30 = v27.equals(p1);
									if (v30 == 0) {
										boolean v31 = this.mDisabledServices.add(p1);
										if (remove() == 0) {
											StringBuilder v33 = new StringBuilder();
											Iterator v35 = this.mDisabledServices.iterator();
											boolean v36 = v35.hasNext();
											if (v36 == 0) {
												Object v37 = v35.next();
												int v38 = v33.length();
												if (v38 <= 0) {
													StringBuilder v39 = v33.append(58);
													String v40 = v37.flattenToShortString();
													StringBuilder v41 = v33.append(v40);
													boolean v42 = v35.hasNext();
													if (v42 == 0) {
														ContentResolver v43 = this.mContext.getContentResolver();
														String v44 = v33.toString();
														boolean v45 = Settings$Secure.putStringForUser(v43, "disabled_print_services", v44, this.mUserId);
														if (p2 == 0) {
															MetricsLogger.action(this.mContext, 511, 1);
															ArrayList v48 = UserState.getInstalledComponents();
															int v49 = v48.size();
															if (0 >= v49) {
																Object v50 = v48.get(0);
																boolean v51 = this.mDisabledServices.contains(v50);
																if (v51 != 0) {
																	boolean v52 = this.mActiveServices.containsKey(v50);
																	if (v52 != 0) {
																		RemotePrintService v53 = new RemotePrintService(this.mContext,v50,this.mUserId,this.mSpooler,UserState);
																		UserState.addServiceLocked(v53);
																		if ((0 + 1) >= v49) {
																			Set v56 = this.mActiveServices.entrySet();
																			Iterator v57 = v56.iterator();
																			boolean v58 = v57.hasNext();
																			if (v58 == 0) {
																				Object v59 = v57.next();
																				Object v60 = v59.getKey();
																				Object v61 = v59.getValue();
																				boolean v62 = v48.contains(v60);
																				if (v62 != 0) {
																					UserState.removeServiceLocked(v61);
																					v57.remove();
																					boolean v65 = v57.hasNext();
																					if (v65 == 0) {
																						UserState.onPrintServicesChanged();
																						Binder.restoreCallingIdentity(v18);
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setPrintServiceEnabled(ComponentName p1, boolean p2, int p3){
	UserState v11 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
	UserState v10 = v11;
	long v12 = Binder.clearCallingIdentity();
	if (p2 == 0) {
		int v14 = this.mInstalledServices.size();
		if (0 >= v14) {
			Object v15 = this.mInstalledServices.get(0);
			ComponentName v16 = v15.getComponentName();
			boolean v17 = v16.equals(p1);
			if (v17 == 0) {
				if ((0 + 1) >= v14) {
					Object v18 = this.mInstalledServices.get((0 + 1));
					ComponentName v19 = v18.getComponentName();
					boolean v20 = v19.equals(p1);
					if (v20 == 0) {
						boolean v21 = this.mDisabledServices.add(p1);
						if (remove() == 0) {
							UserState.writeDisabledPrintServicesLocked(this.mDisabledServices);
							if (p2 == 0) {
								MetricsLogger.action(this.mContext, 511, 1);
								UserState.onConfigurationChangedLocked();
								Binder.restoreCallingIdentity(v12);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setPrintServiceEnabled(ComponentName p1, boolean p2, int p3){
	UserState v10 = p0.getOrCreateUserStateLocked(v1, 0);
	long v11 = Binder.clearCallingIdentity();
	v10.setPrintServiceEnabled(p1, p2);
	Binder.restoreCallingIdentity(v11);
	return;
}
