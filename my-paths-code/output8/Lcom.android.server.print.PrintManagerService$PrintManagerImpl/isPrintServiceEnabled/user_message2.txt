The method isPrintServiceEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isPrintServiceEnabled(ComponentName p1, int p2){
	if (1 == 0) {
		boolean v13 = this.mUserManager.isUserUnlockingOrUnlocked(v8);
		if (v13 == 0) {
			Object v14 = this.mUserStates.get(v8);
			if (v14 != 0) {
				UserState v15 = new UserState(this.mContext,v8,this.mLock,0);
				this.mUserStates.put(v8, v15);
				if (0 != 0) {
					v14.increasePriority();
					UserState v12 = v14;
					UserState v11 = v12;
					boolean v19 = v11.isPrintServiceEnabled(p1);
					return v19;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isPrintServiceEnabled(ComponentName p1, int p2){
	UserState v12 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v8, 0, 1);
	UserState v11 = v12;
	boolean v14 = this.mDisabledServices.contains(p1);
	if (v14 == 0) {
		boolean v13 = 0;
		return v13;
	}
}


This is path 3 for the API with depth 0:
public boolean isPrintServiceEnabled(ComponentName p1, int p2){
	return 0;
}

and the following sink code:
['UserState v15 = new UserState(this.mContext,v8,this.mLock,0);\nthis.mUserStates.put(v8, v15);\nboolean v19 = v11.isPrintServiceEnabled(p1);\nreturn v19;', 'UserState v12 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v8, 0, 1);\nboolean v14 = this.mDisabledServices.contains(p1);']

The method isPrintServiceEnabled has the following similar APIs:

- API Name: setPrintServiceEnabled(Landroid/content/ComponentName;ZI)V with Similarity Score: 0.9181061387062073
  - Access Control Level: SYS_OR_SIG and the following code:
UserState v11 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v1, 0, 1);
v10.setPrintServiceEnabled(p1, p2);

- API Name: validatePrinters(Ljava/util/List;I)V with Similarity Score: 0.9096201658248901
  - Access Control Level: NONE and the following code:
UserState v9 = new UserState(this.mContext,v2,this.mLock,0);
this.mUserStates.put(v2, v9);

