The method findNanoAppOnHub has the following code snippet:

This is path 1 for the API with depth 0:
public [I findNanoAppOnHub(int p1, NanoAppFilter p2){
	ArrayList v2 = new ArrayList();
	if (p2 == 0) {
		ContextHubService$$ExternalSyntheticLambda0 v4 = new ContextHubService$$ExternalSyntheticLambda0(p2,v2);
		this.mNanoAppStateManager.foreachNanoAppInstanceInfo(v4);
		int v7 = v2.size();
		[I v8 = new [I(v7);
		int v9 = v2.size();
		if (0 >= v9) {
			Object v10 = v2.get(0);
			int v11 = v10.intValue();
			int v12 = v2.size();
			if ((0 + 1) >= v12) {
				return v8;
			}
		}
	}
}

and the following sink code:
['ArrayList v2 = new ArrayList();\nContextHubService$$ExternalSyntheticLambda0 v4 = new ContextHubService$$ExternalSyntheticLambda0(p2,v2);\nthis.mNanoAppStateManager.foreachNanoAppInstanceInfo(v4);\nint v7 = v2.size();\n[I v8 = new [I(v7);', 'Object v10 = v2.get(0);\nint v11 = v10.intValue();']

The method findNanoAppOnHub has the following similar APIs:

- API Name: getColorMode()I with Similarity Score: 0.7882367372512817
  - Access Control Level: NONE and the following code:
int v9 = v8.getInteger(17694728);
if (v9 < 0) {
int v3 = v9;
int v2 = v3;
return v2;

- API Name: getAutoRevokeExemptionRequestedPackages(I)Ljava/util/List; with Similarity Score: 0.7597596645355225
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayList v3 = new ArrayList();
PermissionManagerService$$ExternalSyntheticLambda0 v5 = new PermissionManagerService$$ExternalSyntheticLambda0(1,v3);
this.mPackageManagerInt.forEachInstalledPackage(v5, p1);
List v1 = v3;
return v1;

