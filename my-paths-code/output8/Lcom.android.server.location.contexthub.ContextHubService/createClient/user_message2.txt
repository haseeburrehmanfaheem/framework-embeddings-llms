The method createClient in the following class Lcom.android.server.location.contexthub.ContextHubService has the following code snippet:

This is path 1 for the API with depth 2:
public IContextHubClient createClient(int p1, IContextHubClientCallback p2, String p3, String p4){
	Integer v3 = Integer.valueOf(p1);
	boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
	boolean v2 = v4;
	if (v2 == 0) {
		if (p2 == 0) {
			Integer v5 = Integer.valueOf(p1);
			Object v6 = this.mContextHubIdToInfoMap.get(v5);
			int v9 = this.mHostEndPointIdToClientMap.size();
			if (v9 == 32768) {
				if (0 > 32767) {
					Short v10 = Short.valueOf(this.mNextHostEndPointId);
					boolean v11 = this.mHostEndPointIdToClientMap.containsKey(v10);
					if (v11 != 0) {
						if (this.mNextHostEndPointId != 32767) {
							if ((0 + 1) > 32767) {
								Short v12 = Short.valueOf(0);
								boolean v13 = this.mHostEndPointIdToClientMap.containsKey(v12);
								if (v13 != 0) {
									if (0 != 32767) {
										this.mNextHostEndPointId = 0;
										short v8 = 0;
										ContextHubClientBroker v14 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);
										Short v16 = Short.valueOf(v8);
										Object v17 = this.mHostEndPointIdToClientMap.put(v16, v14);
										ContextHubClientManager$RegistrationRecord v18 = new ContextHubClientManager$RegistrationRecord(ContextHubClientManager,v19,0);
										StringBuilder v20 = new StringBuilder();
										StringBuilder v22 = v20.append("[ContextHubClient ");
										StringBuilder v23 = v20.append("endpointID: ");
										short v24 = ContextHubClientBroker.getHostEndPointId();
										StringBuilder v25 = v20.append(v24);
										StringBuilder v26 = v20.append(", ");
										String v27 = v20.toString();
										StringBuilder v28 = new StringBuilder();
										StringBuilder v30 = v28.append(v27);
										StringBuilder v31 = v28.append("contextHub: ");
										int v32 = ContextHubClientBroker.getAttachedContextHubId();
										StringBuilder v33 = v28.append(v32);
										StringBuilder v34 = v28.append(", ");
										String v35 = v28.toString();
										if (this.mAttributionTag == 0) {
											StringBuilder v36 = new StringBuilder();
											StringBuilder v38 = v36.append(v35);
											StringBuilder v39 = v36.append("attributionTag: ");
											String v40 = ContextHubClientBroker.getAttributionTag();
											StringBuilder v41 = v36.append(v40);
											StringBuilder v42 = v36.append(", ");
											String v43 = v36.toString();
											boolean v44 = this.mPendingIntentRequest.isValid();
											if (v44 == 0) {
												StringBuilder v45 = new StringBuilder();
												StringBuilder v47 = v45.append(v35);
												StringBuilder v48 = v45.append("package: ");
												StringBuilder v49 = v45.append(this.mPackage);
												String v50 = v45.toString();
												int v51 = this.mMessageChannelNanoappIdMap.size();
												if (v51 <= 0) {
													StringBuilder v52 = new StringBuilder();
													StringBuilder v54 = v52.append(toString());
													StringBuilder v55 = v52.append("]");
													String v56 = v52.toString();
													String v19 = v56;
													boolean v58 = this.mRegistrationRecordDeque.add(v18);
													if (this.mCallbackInterface == 0) {
														IBinder v60 = this.mCallbackInterface.asBinder();
														v60.linkToDeath(ContextHubClientBroker, 0);
														short v65 = this.mHostEndPointId;
														if (v14 != 0) {
															IInterface v70 = v14.queryLocalInterface("android.hardware.location.IContextHubClient");
															if (v70 == 0) {
																if (v70 instanceof IContextHubClient == 0) {
																	IContextHubClient$Stub$Proxy v71 = new IContextHubClient$Stub$Proxy(v14);
																	IContextHubClient v69 = v71;
																	IContextHubClient v7 = v69;
																	return v7;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public IContextHubClient createClient(int p1, IContextHubClientCallback p2, String p3, String p4){
	Integer v3 = Integer.valueOf(p1);
	boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
	boolean v2 = v4;
	if (v2 == 0) {
		if (p2 == 0) {
			Integer v5 = Integer.valueOf(p1);
			Object v6 = this.mContextHubIdToInfoMap.get(v5);
			short v8 = ContextHubClientManager.getHostEndPointId();
			ContextHubClientBroker v9 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);
			Short v11 = Short.valueOf(v8);
			Object v12 = this.mHostEndPointIdToClientMap.put(v11, v9);
			ContextHubClientManager$RegistrationRecord v13 = new ContextHubClientManager$RegistrationRecord(ContextHubClientManager,v14,0);
			String v14 = v9.toString();
			boolean v16 = this.mRegistrationRecordDeque.add(v13);
			v9.attachDeathRecipient();
			short v21 = v9.getHostEndPointId();
			IContextHubClient v25 = IContextHubClient$Stub.asInterface(v9);
			IContextHubClient v7 = v25;
			return v7;
		}
	}
}


This is path 3 for the API with depth 0:
public IContextHubClient createClient(int p1, IContextHubClientCallback p2, String p3, String p4){
	boolean v2 = p0.isValidContextHubId(p1);
	if (v2 == 0) {
		if (p2 == 0) {
			Integer v3 = Integer.valueOf(p1);
			Object v4 = this.mContextHubIdToInfoMap.get(v3);
			IContextHubClient v5 = this.mClientManager.registerClient(v4, p2, p3, this.mTransactionManager, p4);
			return v5;
		}
	}
}

and the following sink code:
['Integer v3 = Integer.valueOf(p1);\nboolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);\nObject v6 = this.mContextHubIdToInfoMap.get(v5);\nContextHubClientBroker v14 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);\nIContextHubClient v7 = IContextHubClient$Stub.asInterface(v9);\nreturn v7;', 'Integer v5 = Integer.valueOf(p1);\nObject v6 = this.mContextHubIdToInfoMap.get(v5);\nshort v8 = ContextHubClientManager.getHostEndPointId();\nContextHubClientBroker v9 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);\nIContextHubClient v25 = IContextHubClient$Stub.asInterface(v9);\nreturn v25;', 'Integer v3 = Integer.valueOf(p1);\nObject v4 = this.mContextHubIdToInfoMap.get(v3);\nIContextHubClient v5 = this.mClientManager.registerClient(v4, p2, p3, this.mTransactionManager, p4);\nreturn v5;']

The method createClient has the following similar APIs:

- API Name: createPendingIntentClient(ILandroid/app/PendingIntent;JLjava/lang/String;)Landroid/hardware/location/IContextHubClient; in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.979229748249054, Code:
Integer v5 = Integer.valueOf(p1);
Object v6 = this.mContextHubIdToInfoMap.get(v5);
int v8 = v6.getId();
ContextHubClientBroker v9 = ContextHubClientManager.getClientBroker(v8, p2, p3);
short v10 = ContextHubClientManager.getHostEndPointId();
ContextHubClientBroker v11 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v10,p2,p3,p4,this.mTransactionManager);
IContextHubClient v27 = IContextHubClient$Stub.asInterface(v11);
return v7;
  - Similarity: 0.9566811323165894, Code:
boolean v2 = p0.isValidContextHubId(p1);
Integer v3 = Integer.valueOf(p1);
Object v4 = this.mContextHubIdToInfoMap.get(v3);
IContextHubClient v5 = this.mClientManager.registerClient(v4, p2, p3, p4, this.mTransactionManager);
return v5;
  - Similarity: 0.9465434551239014, Code:
Integer v3 = Integer.valueOf(p1);
boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
ContextHubClientBroker v26 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v20,p2,p3,p4,this.mTransactionManager);
IInterface v80 = v26.queryLocalInterface("android.hardware.location.IContextHubClient");
IContextHubClient$Stub$Proxy v81 = new IContextHubClient$Stub$Proxy(v26);
IContextHubClient v7 = v79;
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: loadNanoAppOnHub(ILandroid/hardware/location/IContextHubTransactionCallback;Landroid/hardware/location/NanoAppBinary;)V in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.8300579786300659, Code:
Integer v4 = Integer.valueOf(p1);
boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
ContextHubTransactionManager$1 v8 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v9,0,v10,v6,p1,p3,p2);
  - Similarity: 0.717986524105072, Code:
p2.onTransactionComplete(8);
ContextHubTransactionManager$1 v9 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v10,0,v11,v4,p1,p3,p2);
  - Access Control Level: SYS_OR_SIG

- API Name: sendMessage(IILandroid/hardware/location/ContextHubMessage;)I in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.8214289546012878, Code:
Integer v5 = Integer.valueOf(p1);
boolean v6 = this.mContextHubIdToInfoMap.containsKey(v5);
ContextHubService$9 v10 = new ContextHubService$9(ContextHubService, p1);
PackageManager v13 = this.mContext.getPackageManager();
int v14 = Binder.getCallingUid();
String v15 = v13.getNameForUid(v14);
ContextHubTransactionManager$5 v17 = new ContextHubTransactionManager$5(ContextHubTransactionManager, v18, 4, v12, p1, v9);
  - Access Control Level: SYS_OR_SIG

- API Name: getContextHubInfo(I)Landroid/hardware/location/ContextHubInfo; in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.7673901319503784, Code:
Integer v2 = Integer.valueOf(p1);
boolean v3 = this.mContextHubIdToInfoMap.containsKey(v2);
Object v5 = this.mContextHubIdToInfoMap.get(v4);
return v5;
  - Access Control Level: SYS_OR_SIG

- API Name: unloadNanoApp(I)I in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.7508636713027954, Code:
Integer v3 = Integer.valueOf(p1);
Object v4 = this.mNanoAppHash.get(v3);
ContextHubService$8 v8 = new ContextHubService$8(ContextHubService,v5);
ContextHubTransactionManager$2 v15 = new ContextHubTransactionManager$2(ContextHubTransactionManager,v16,1,v6,v10,v5,v6,v7);
  - Access Control Level: SYS_OR_SIG

