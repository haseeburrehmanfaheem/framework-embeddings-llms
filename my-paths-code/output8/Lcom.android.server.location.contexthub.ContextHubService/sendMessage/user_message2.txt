The method sendMessage in the following class Lcom.android.server.location.contexthub.ContextHubService has the following code snippet:

This is path 1 for the API with depth 2:
public int sendMessage(int p1, int p2, ContextHubMessage p3){
	if (this.mContextHubWrapper != 0) {
		if (p3 != 0) {
			byte[] v3 = Arrays.copyOf(this.mData, this.mData.length);
			byte[] v2 = v3;
			if (v2 != 0) {
				Integer v5 = Integer.valueOf(p1);
				boolean v6 = this.mContextHubIdToInfoMap.containsKey(v5);
				boolean v4 = v6;
				if (v4 != 0) {
					if (p2 != -1) {
						int v7 = this.mType;
						if (v7 != 5) {
							if (this.mContextHubWrapper != 0) {
								ContextHubService$9 v10 = new ContextHubService$9(ContextHubService,p1);
								IContextHubTransactionCallback v9 = v10;
								PackageManager v13 = this.mContext.getPackageManager();
								int v14 = Binder.getCallingUid();
								String v15 = v13.getNameForUid(v14);
								String v12 = v15;
								ContextHubTransactionManager$5 v17 = new ContextHubTransactionManager$5(ContextHubTransactionManager,v18,4,v12,p1,v9);
								int v18 = this.mNextAvailableId.getAndIncrement();
								ContextHubServiceTransaction v16 = v17;
								int v21 = this.mTransactionQueue.size();
								if (v21 == 10000) {
									boolean v22 = this.mTransactionQueue.add(v16);
									ContextHubTransactionManager$TransactionRecord v23 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v24);
									String v24 = v16.toString();
									boolean v26 = this.mTransactionRecordDeque.add(v23);
									int v27 = this.mTransactionQueue.size();
									if (v27 != 1) {
										ContextHubTransactionManager.startNextTransaction();
										boolean v8 = 1;
										if (v8 == 0) {
											return -1;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int sendMessage(int p1, int p2, ContextHubMessage p3){
	if (this.mContextHubWrapper != 0) {
		if (p3 != 0) {
			byte[] v3 = Arrays.copyOf(this.mData, this.mData.length);
			byte[] v2 = v3;
			if (v2 != 0) {
				Integer v5 = Integer.valueOf(p1);
				boolean v6 = this.mContextHubIdToInfoMap.containsKey(v5);
				boolean v4 = v6;
				if (v4 != 0) {
					if (p2 != -1) {
						NanoAppInstanceInfo v9 = this.mNanoAppStateManager.getNanoAppInstanceInfo(p2);
						NanoAppInstanceInfo v7 = v9;
						if (v7 == 0) {
							long v10 = this.mAppId;
							int v11 = this.mType;
							byte[] v13 = Arrays.copyOf(this.mData, this.mData.length);
							byte[] v12 = v13;
							NanoAppMessage v15 = new NanoAppMessage(v10,v11,v12,0);
							NanoAppMessage v14 = v15;
							Integer v17 = Integer.valueOf(p1);
							Object v18 = this.mDefaultClientMap.get(v17);
							int v19 = v18.sendMessageToNanoApp(v14);
							if (v19 != 0) {
								if (queryNanoAppsInternal() == 0) {
									return -1;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public int sendMessage(int p1, int p2, ContextHubMessage p3){
	if (this.mContextHubWrapper != 0) {
		if (p3 != 0) {
			byte[] v2 = p3.getData();
			if (v2 != 0) {
				boolean v3 = p0.isValidContextHubId(p1);
				if (v3 != 0) {
					if (p2 != -1) {
						NanoAppInstanceInfo v4 = p0.getNanoAppInstanceInfo(p2);
						if (v4 == 0) {
							long v5 = v4.getAppId();
							int v6 = p3.getMsgType();
							byte[] v7 = p3.getData();
							NanoAppMessage v8 = NanoAppMessage.createMessageToNanoApp(v5, v6, v7);
							Integer v9 = Integer.valueOf(p1);
							Object v10 = this.mDefaultClientMap.get(v9);
							int v11 = v10.sendMessageToNanoApp(v8);
							if (v11 != 0) {
								if (queryNanoAppsInternal() == 0) {
									return -1;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Integer v5 = Integer.valueOf(p1);\nboolean v6 = this.mContextHubIdToInfoMap.containsKey(v5);\nContextHubService$9 v10 = new ContextHubService$9(ContextHubService, p1);\nPackageManager v13 = this.mContext.getPackageManager();\nint v14 = Binder.getCallingUid();\nString v15 = v13.getNameForUid(v14);\nContextHubTransactionManager$5 v17 = new ContextHubTransactionManager$5(ContextHubTransactionManager, v18, 4, v12, p1, v9);', 'Integer v5 = Integer.valueOf(p1);\nboolean v6 = this.mContextHubIdToInfoMap.containsKey(v5);\nNanoAppInstanceInfo v9 = this.mNanoAppStateManager.getNanoAppInstanceInfo(p2);\nNanoAppMessage v15 = new NanoAppMessage(v10, v11, v12, 0);\nInteger v17 = Integer.valueOf(p1);\nObject v18 = this.mDefaultClientMap.get(v17);\nint v19 = v18.sendMessageToNanoApp(v14);', 'boolean v3 = p0.isValidContextHubId(p1);\nNanoAppInstanceInfo v4 = p0.getNanoAppInstanceInfo(p2);\nNanoAppMessage v8 = NanoAppMessage.createMessageToNanoApp(v5, v6, v7);\nInteger v9 = Integer.valueOf(p1);\nObject v10 = this.mDefaultClientMap.get(v9);\nint v11 = v10.sendMessageToNanoApp(v8);']

The method sendMessage has the following similar APIs:

- API Name: loadNanoAppOnHub(ILandroid/hardware/location/IContextHubTransactionCallback;Landroid/hardware/location/NanoAppBinary;)V in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.8955714106559753, Code:
Integer v4 = Integer.valueOf(p1);
boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
ContextHubTransactionManager$1 v8 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v9,0,v10,v6,p1,p3,p2);
  - Access Control Level: SYS_OR_SIG

- API Name: unloadNanoApp(I)I in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.8486130237579346, Code:
Integer v3 = Integer.valueOf(p1);
Object v4 = this.mNanoAppHash.get(v3);
ContextHubService$8 v8 = new ContextHubService$8(ContextHubService,v5);
ContextHubTransactionManager$2 v15 = new ContextHubTransactionManager$2(ContextHubTransactionManager,v16,1,v6,v10,v5,v6,v7);
  - Access Control Level: SYS_OR_SIG

- API Name: createPendingIntentClient(ILandroid/app/PendingIntent;JLjava/lang/String;)Landroid/hardware/location/IContextHubClient; in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.8356910943984985, Code:
Integer v3 = Integer.valueOf(p1);
boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
ContextHubClientBroker v26 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v20,p2,p3,p4,this.mTransactionManager);
IInterface v80 = v26.queryLocalInterface("android.hardware.location.IContextHubClient");
IContextHubClient$Stub$Proxy v81 = new IContextHubClient$Stub$Proxy(v26);
IContextHubClient v7 = v79;
return v7;
  - Similarity: 0.8061811923980713, Code:
Integer v5 = Integer.valueOf(p1);
Object v6 = this.mContextHubIdToInfoMap.get(v5);
int v8 = v6.getId();
ContextHubClientBroker v9 = ContextHubClientManager.getClientBroker(v8, p2, p3);
short v10 = ContextHubClientManager.getHostEndPointId();
ContextHubClientBroker v11 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v10,p2,p3,p4,this.mTransactionManager);
IContextHubClient v27 = IContextHubClient$Stub.asInterface(v11);
return v7;
  - Access Control Level: SYS_OR_SIG

- API Name: createClient(ILandroid/hardware/location/IContextHubClientCallback;Ljava/lang/String;Ljava/lang/String;)Landroid/hardware/location/IContextHubClient; in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.8214289546012878, Code:
Integer v3 = Integer.valueOf(p1);
boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
Object v6 = this.mContextHubIdToInfoMap.get(v5);
ContextHubClientBroker v14 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);
IContextHubClient v7 = IContextHubClient$Stub.asInterface(v9);
return v7;
  - Similarity: 0.8182474374771118, Code:
Integer v5 = Integer.valueOf(p1);
Object v6 = this.mContextHubIdToInfoMap.get(v5);
short v8 = ContextHubClientManager.getHostEndPointId();
ContextHubClientBroker v9 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);
IContextHubClient v25 = IContextHubClient$Stub.asInterface(v9);
return v25;
  - Access Control Level: SYS_OR_SIG

- API Name: queryNanoApps(ILandroid/hardware/location/IContextHubTransactionCallback;)V in the following Class: Lcom.android.server.location.contexthub.ContextHubService with the following sink code entries:
  - Similarity: 0.7576568722724915, Code:
p2.onTransactionComplete(8);
PackageManager v5 = this.mContext.getPackageManager();
int v6 = Binder.getCallingUid();
String v7 = v5.getNameForUid(v6);
ContextHubTransactionManager$5 v9 = new ContextHubTransactionManager$5(ContextHubTransactionManager,v10,4,v4,p1,p2);
this.mTransactionQueue.add(v8);
  - Access Control Level: SYS_OR_SIG

