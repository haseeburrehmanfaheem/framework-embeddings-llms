The method retrieveSystemUpdateInfo in the following class Lcom.android.server.SystemUpdateManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public Bundle retrieveSystemUpdateInfo(){
	if (v2 == -1) {
		FileInputStream v4 = this.mFile.openRead();
		TypedXmlPullParser v5 = Xml.resolvePullParser(v4);
		if (v4 == 0) {
			v4.close();
			caughtException.addSuppressed(caughtException);
			File v11 = this.mFile.getBaseFile();
			if (readInfoFileLocked() != 0) {
				boolean v16 = this.mFile.exists();
				if (v16 == 0) {
					this.mFile.delete();
					this.mLastStatus = 0;
					this.mLastUid = -1;
					Bundle v19 = new Bundle();
					v19.putInt("status", 0);
					Bundle v15 = v19;
					Bundle v3 = v15;
					return v3;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public Bundle retrieveSystemUpdateInfo(){
	if (v2 == -1) {
		FileInputStream v4 = this.mFile.openRead();
		TypedXmlPullParser v5 = Xml.resolvePullParser(v4);
		if (v4 == 0) {
			v4.close();
			caughtException.addSuppressed(caughtException);
			File v11 = this.mFile.getBaseFile();
			if (readInfoFileLocked() != 0) {
				Bundle v15 = SystemUpdateManagerService.removeInfoFileAndGetDefaultInfoBundleLocked();
				Bundle v3 = v15;
				return v3;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public Bundle retrieveSystemUpdateInfo(){
	if (v2 == -1) {
		Bundle v3 = p0.loadSystemUpdateInfoLocked();
		return v3;
	}
}

and the following sink code:
['Bundle v19 = new Bundle();\nv19.putInt("status", 0);\nBundle v15 = v19;\nBundle v3 = v15;\nreturn v3;', 'FileInputStream v4 = this.mFile.openRead();\nTypedXmlPullParser v5 = Xml.resolvePullParser(v4);\nif (v4 == 0) {\nv4.close();', 'this.mLastStatus = 0;\nthis.mLastUid = -1;', 'Bundle v15 = SystemUpdateManagerService.removeInfoFileAndGetDefaultInfoBundleLocked();\nBundle v3 = v15;\nreturn v3;', 'Bundle v3 = p0.loadSystemUpdateInfoLocked();\nreturn v3;']

The method retrieveSystemUpdateInfo has the following similar APIs:

- API Name: registerUiTranslationStateCallback(Landroid/os/IRemoteCallback;I)V in the following Class: Lcom.android.server.translation.TranslationManagerService$TranslationManagerServiceStub with the following sink code entries:
  - Similarity: 0.7665155529975891, Code:
Bundle v27 = new Bundle();
v27.putInt("state", 0);
p1.sendResult(v26);
  - Access Control Level: NONE

- API Name: applyRestore([BI)V in the following Class: Lcom.android.server.slice.SliceManagerService with the following sink code entries:
  - Similarity: 0.7592589259147644, Code:
ByteArrayInputStream v2 = new ByteArrayInputStream(p1);
XmlPullParserFactory v4 = XmlPullParserFactory.newInstance();
XmlPullParser v5 = v4.newPullParser();
String v6 = Xml$Encoding.UTF_8.name();
v5.setInput(v2, v6);
this.mPermissions.readRestore(v5);
  - Access Control Level: SYS_OR_SIG

- API Name: getWatchlistConfigHash()[B in the following Class: Lcom.android.server.net.watchlist.NetworkWatchlistService with the following sink code entries:
  - Similarity: 0.743859589099884, Code:
FileInputStream v4 = new FileInputStream(this.mXmlFile);
byte[] v6 = DigestUtils.getSha256Hash(v4);
v4.close();
byte[] v3 = v6;
byte[] v1 = v3;
return v1;
  - Access Control Level: NONE

- API Name: confirmCredentialsAsUser(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Landroid/os/Bundle;ZI)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7189366817474365, Code:
Bundle v1 = Bundle.setDefusable(p3, 1);
AccountManagerService$UserAccounts v24 = AccountManagerService.getUserAccountsNotChecked(p5);
AccountManagerService$12 v25 = new AccountManagerService$12(p0,v23,p1,Account.type,p4,1,Account.name,1,1,p2,p3);
  - Access Control Level: SYS_OR_SIG

- API Name: addAccountAsUser(Landroid/accounts/IAccountManagerResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZLandroid/os/Bundle;I)V in the following Class: Lcom.android.server.accounts.AccountManagerService with the following sink code entries:
  - Similarity: 0.7014652490615845, Code:
Bundle v1 = Bundle.setDefusable(p6, 1);
int v2 = Binder.getCallingUid();
AccountManagerService$UserAccounts v61 = AccountManagerService.getUserAccountsNotChecked(p7);
AccountManagerService$9 v64 = new AccountManagerService$9(AccountManagerService,v60,p1,p2,p5,1,0,0,1,p3,p4,v55,p2);
  - Access Control Level: SYS_OR_SIG

