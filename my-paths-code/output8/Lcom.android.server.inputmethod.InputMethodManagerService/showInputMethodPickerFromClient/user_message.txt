This is path 1 for the API with depth 2:
public void showInputMethodPickerFromClient(IInputMethodClient p1, int p2){
	if (v5 != 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			int v7 = Binder.getCallingUid();
			if (this.mCurFocusedWindowClient == 0) {
				if (p1 == 0) {
					IBinder v8 = InputMethodManagerService$ClientState.client.asBinder();
					IBinder v9 = p1.asBinder();
					if (v8 != v9) {
						Intent v11 = this.mBindingController.getCurIntent();
						Intent v10 = v11;
						if (v10 == 0) {
							Intent v13 = this.mBindingController.getCurIntent();
							Intent v12 = v13;
							ComponentName v14 = v12.getComponent();
							String v15 = v14.getPackageName();
							boolean v16 = 0;
							if (v16 == 0) {
								boolean v6 = 1;
								if (v6 != 0) {
									if (this.mCurClient == 0) {
										Message v18 = this.mHandler.obtainMessage(1, p2, InputMethodManagerService$ClientState.selfReportedDisplayId);
										v18.sendToTarget();
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void showInputMethodPickerFromClient(IInputMethodClient p1, int p2){
	if (v5 != 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			int v7 = Binder.getCallingUid();
			if (this.mCurFocusedWindowClient == 0) {
				if (p1 == 0) {
					IBinder v8 = InputMethodManagerService$ClientState.client.asBinder();
					IBinder v9 = p1.asBinder();
					if (v8 != v9) {
						Intent v10 = InputMethodManagerService.getCurIntentLocked();
						if (v10 == 0) {
							Intent v11 = InputMethodManagerService.getCurIntentLocked();
							ComponentName v12 = v11.getComponent();
							String v13 = v12.getPackageName();
							boolean v14 = InputMethodUtils.checkIfPackageBelongsToUid(this.mAppOpsManager, v7, v13);
							if (v14 == 0) {
								boolean v6 = 1;
								if (v6 != 0) {
									if (this.mCurClient == 0) {
										Message v15 = this.mHandler.obtainMessage(1, p2, InputMethodManagerService$ClientState.selfReportedDisplayId);
										v15.sendToTarget();
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void showInputMethodPickerFromClient(IInputMethodClient p1, int p2){
	boolean v1 = p0.calledFromValidUserLocked();
	if (v1 != 0) {
		boolean v2 = p0.canShowInputMethodPickerLocked(p1);
		if (v2 != 0) {
			if (this.mCurClient == 0) {
				Message v3 = this.mHandler.obtainMessage(1, p2, InputMethodManagerService$ClientState.selfReportedDisplayId);
				v3.sendToTarget();
				return;
			}
		}
	}
}
