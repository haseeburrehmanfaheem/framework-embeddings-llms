This is path 1 for the API with depth 2:
public void startStylusHandwriting(IInputMethodClient p1){
	Trace.traceBegin(32, "IMMS.startStylusHandwriting");
	if (this.sInstance != 0) {
		boolean v4 = ActivityThread.isSystem();
		boolean v3 = v4;
		if (v3 == 0) {
			ImeTracingServerImpl v5 = new ImeTracingServerImpl();
			this.sInstance = v5;
			ImeTracing v2 = this.sInstance;
			v2.triggerManagerServiceDump("InputMethodManagerService#startStylusHandwriting");
			int v8 = Binder.getCallingUid();
			boolean v9 = p0.calledFromValidUserLocked();
			if (v9 != 0) {
				long v10 = Binder.clearCallingIdentity();
				if (this.mCurClient == 0) {
					if (p1 == 0) {
						IBinder v12 = InputMethodManagerService$ClientState.client.asBinder();
						IBinder v13 = p1.asBinder();
						if (v12 == v13) {
							IBinder v14 = p1.asBinder();
							Object v15 = this.mClients.get(v14);
							if (v15 == 0) {
								int v17 = this.mWindowManagerInternal.hasInputMethodClientFocus(this.mCurFocusedWindow, InputMethodManagerService$ClientState.uid, InputMethodManagerService$ClientState.pid, InputMethodManagerService$ClientState.selfReportedDisplayId);
								if (v17 != 0) {
									boolean v16 = 1;
									if (v16 != 0) {
										boolean v11 = 1;
										if (v11 != 0) {
											boolean v18 = this.mBindingController.supportsStylusHandwriting();
											if (v18 != 0) {
												OptionalInt v19 = this.mHwController.getCurrentRequestId();
												boolean v20 = v19.isPresent();
												if (v20 != 0) {
													boolean v21 = this.mHwController.isStylusGestureOngoing();
													if (v21 != 0) {
														IInputMethodInvoker v23 = this.mCurMethod;
														IInputMethodInvoker v22 = v23;
														if (v22 == 0) {
															int v24 = v19.getAsInt();
															this.mTarget.canStartStylusHandwriting(v24);
															if (caughtException instanceof DeadObjectException != 0) {
																Binder.restoreCallingIdentity(v10);
																Trace.traceEnd(32);
																return;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void startStylusHandwriting(IInputMethodClient p1){
	Trace.traceBegin(32, "IMMS.startStylusHandwriting");
	if (this.sInstance != 0) {
		boolean v3 = ImeTracing.isSystemProcess();
		if (v3 == 0) {
			ImeTracingServerImpl v4 = new ImeTracingServerImpl();
			this.sInstance = v4;
			ImeTracing v2 = this.sInstance;
			v2.triggerManagerServiceDump("InputMethodManagerService#startStylusHandwriting");
			int v7 = Binder.getCallingUid();
			if (v12 != 0) {
				boolean v8 = 1;
				if (v8 != 0) {
					long v13 = Binder.clearCallingIdentity();
					if (this.mCurClient == 0) {
						if (p1 == 0) {
							IBinder v15 = InputMethodManagerService$ClientState.client.asBinder();
							IBinder v16 = p1.asBinder();
							if (v15 == v16) {
								IBinder v17 = p1.asBinder();
								Object v18 = this.mClients.get(v17);
								if (v18 == 0) {
									boolean v19 = InputMethodManagerService.isImeClientFocused(this.mCurFocusedWindow, v18);
									if (v19 != 0) {
										boolean v14 = 1;
										if (v14 != 0) {
											boolean v20 = this.mSupportsStylusHw;
											if (v20 != 0) {
												if (this.mHandwritingSurface != 0) {
													OptionalInt v22 = OptionalInt.of(this.mCurrentRequestId);
													OptionalInt v21 = v22;
													boolean v23 = v21.isPresent();
													if (v23 != 0) {
														boolean v24 = this.mRecordingGesture;
														if (v24 != 0) {
															IInputMethodInvoker v26 = this.mBindingController.getCurMethod();
															IInputMethodInvoker v25 = v26;
															if (v25 == 0) {
																int v27 = v21.getAsInt();
																this.mTarget.canStartStylusHandwriting(v27);
																IInputMethodInvoker.logRemoteException(caughtException);
																Binder.restoreCallingIdentity(v13);
																Trace.traceEnd(32);
																return;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void startStylusHandwriting(IInputMethodClient p1){
	Trace.traceBegin(32, "IMMS.startStylusHandwriting");
	ImeTracing v2 = ImeTracing.getInstance();
	v2.triggerManagerServiceDump("InputMethodManagerService#startStylusHandwriting");
	int v4 = Binder.getCallingUid();
	boolean v5 = p0.calledFromValidUserLocked();
	if (v5 != 0) {
		long v6 = Binder.clearCallingIdentity();
		boolean v7 = p0.canInteractWithImeLocked(v4, p1, "startStylusHandwriting");
		if (v7 != 0) {
			boolean v8 = this.mBindingController.supportsStylusHandwriting();
			if (v8 != 0) {
				OptionalInt v9 = this.mHwController.getCurrentRequestId();
				boolean v10 = v9.isPresent();
				if (v10 != 0) {
					boolean v11 = this.mHwController.isStylusGestureOngoing();
					if (v11 != 0) {
						IInputMethodInvoker v12 = p0.getCurMethodLocked();
						if (v12 == 0) {
							int v13 = v9.getAsInt();
							v12.canStartStylusHandwriting(v13);
							Binder.restoreCallingIdentity(v6);
							Trace.traceEnd(32);
							return;
						}
					}
				}
			}
		}
	}
}
