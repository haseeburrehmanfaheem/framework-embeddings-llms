The method startProtoDump in the following class Lcom.android.server.inputmethod.InputMethodManagerService has the following code snippet:

This is path 1 for the API with depth 2:
public void startProtoDump(byte[] p1, int p2, String p3){
	if (p1 != 0) {
		if (p2 == 2) {
			if (this.sInstance != 0) {
				boolean v3 = ActivityThread.isSystem();
				boolean v2 = v3;
				if (v2 == 0) {
					ImeTracingServerImpl v4 = new ImeTracingServerImpl();
					this.sInstance = v4;
					ImeTracing v1 = this.sInstance;
					boolean v6 = v1.isAvailable();
					if (v6 == 0) {
						boolean v7 = v1.isEnabled();
						if (v7 != 0) {
							ProtoOutputStream v8 = new ProtoOutputStream();
							if (p2 == 0) {
								if (p2 == 1) {
									if (p2 == 2) {
										long v10 = v8.start(2246267895810);
										long v11 = SystemClock.elapsedRealtimeNanos();
										v8.write(1125281431553, v11);
										v8.write(1138166333442, p3);
										p0.dumpDebug(v8, 1146756268035);
										v8.end(v10);
										v1.addToBuffer(v8, p2);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void startProtoDump(byte[] p1, int p2, String p3){
	if (p1 != 0) {
		if (p2 == 2) {
			if (this.sInstance != 0) {
				boolean v2 = ImeTracing.isSystemProcess();
				if (v2 == 0) {
					ImeTracingServerImpl v3 = new ImeTracingServerImpl();
					this.sInstance = v3;
					ImeTracing v1 = this.sInstance;
					if (this.mService == 0) {
						boolean v5 = 1;
						if (v5 == 0) {
							boolean v6 = this.sEnabled;
							if (v6 != 0) {
								ProtoOutputStream v7 = new ProtoOutputStream();
								if (p2 == 0) {
									if (p2 == 1) {
										if (p2 == 2) {
											long v9 = v7.start(2246267895810);
											long v10 = SystemClock.elapsedRealtimeNanos();
											v7.write(1125281431553, v10);
											v7.write(1138166333442, p3);
											p0.dumpDebug(v7, 1146756268035);
											v7.end(v9);
											v1.addToBuffer(v7, p2);
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void startProtoDump(byte[] p1, int p2, String p3){
	if (p1 != 0) {
		if (p2 == 2) {
			ImeTracing v1 = ImeTracing.getInstance();
			boolean v2 = v1.isAvailable();
			if (v2 == 0) {
				boolean v3 = v1.isEnabled();
				if (v3 != 0) {
					ProtoOutputStream v4 = new ProtoOutputStream();
					if (p2 == 0) {
						if (p2 == 1) {
							if (p2 == 2) {
								long v6 = v4.start(2246267895810);
								long v7 = SystemClock.elapsedRealtimeNanos();
								v4.write(1125281431553, v7);
								v4.write(1138166333442, p3);
								p0.dumpDebug(v4, 1146756268035);
								v4.end(v6);
								v1.addToBuffer(v4, p2);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ImeTracingServerImpl v4 = new ImeTracingServerImpl();\nProtoOutputStream v8 = new ProtoOutputStream();\nlong v10 = v8.start(2246267895810);\nv8.write(1125281431553, SystemClock.elapsedRealtimeNanos());\nv8.write(1138166333442, p3);\np0.dumpDebug(v8, 1146756268035);\nv8.end(v10);\nv1.addToBuffer(v8, p2);', 'ImeTracing v1 = ImeTracing.getInstance();\nProtoOutputStream v4 = new ProtoOutputStream();\nlong v6 = v4.start(2246267895810);\nv4.write(1125281431553, SystemClock.elapsedRealtimeNanos());\nv4.write(1138166333442, p3);\np0.dumpDebug(v4, 1146756268035);\nv4.end(v6);\nv1.addToBuffer(v4, p2);']

The method startProtoDump has the following similar APIs:

- API Name: startImeTrace()V in the following Class: Lcom.android.server.inputmethod.InputMethodManagerService with the following sink code entries:
  - Similarity: 0.8390883207321167, Code:
ImeTracingServerImpl v4 = new ImeTracingServerImpl();
this.sInstance = v4;
v1.startTrace(0);
  - Similarity: 0.7512752413749695, Code:
ImeTracing v1 = ImeTracing.getInstance();
v1.startTrace(0);
  - Access Control Level: NONE

- API Name: stopImeTrace()V in the following Class: Lcom.android.server.inputmethod.InputMethodManagerService with the following sink code entries:
  - Similarity: 0.8240562081336975, Code:
ImeTracingServerImpl v4 = new ImeTracingServerImpl();
this.sInstance = v4;
v1.stopTrace(0);
  - Similarity: 0.7341907620429993, Code:
ImeTracing v1 = ImeTracing.getInstance();
v1.stopTrace(0);
  - Access Control Level: NONE

- API Name: isImeTraceEnabled()Z in the following Class: Lcom.android.server.inputmethod.InputMethodManagerService with the following sink code entries:
  - Similarity: 0.7884937524795532, Code:
ImeTracingServerImpl v4 = new ImeTracingServerImpl();
this.sInstance = v4;
ImeTracing v1 = this.sInstance;
boolean v6 = v1.isEnabled();
return v6;
  - Similarity: 0.7675043344497681, Code:
ImeTracingServerImpl v3 = new ImeTracingServerImpl();
this.sInstance = v3;
ImeTracing v1 = this.sInstance;
boolean v5 = this.sEnabled;
return v5;
  - Similarity: 0.7067577838897705, Code:
ImeTracing v1 = ImeTracing.getInstance();
boolean v2 = v1.isEnabled();
return v2;
  - Access Control Level: NONE

