The method startInputOrWindowGainedFocus has the following code snippet:

This is path 1 for the API with depth 2:
public InputBindResult startInputOrWindowGainedFocus(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, ImeOnBackInvokedDispatcher p11){
	int v8 = EditorInfo.targetInputMethodUser.getIdentifier();
	boolean v9 = this.mUserManagerInternal.isUserRunning(v8);
	if (v9 != 0) {
		long v10 = Binder.clearCallingIdentity();
		IBinder v12 = p2.asBinder();
		Object v13 = this.mClients.get(v12);
		if (v13 == 0) {
			int v14 = this.mWindowManagerInternal.hasInputMethodClientFocus(p3, InputMethodManagerService$ClientState.uid, InputMethodManagerService$ClientState.pid, InputMethodManagerService$ClientState.selfReportedDisplayId);
			if (v14 == -3) {
				if (v14 == -2) {
					if (v14 == -1) {
						if (this.mUserSwitchHandlerTask == 0) {
							if (v5 != InputMethodManagerService$UserSwitchHandlerTask.mToUserId) {
								[I v15 = this.mUserManager.getProfileIdsWithDisabled(InputMethodManagerService$UserSwitchHandlerTask.mToUserId);
								if (0 >= v15.length) {
									if (v15[0] != v5) {
										if ((0 + 1) >= v15.length) {
											if (v15[(0 + 1)] != v5) {
												InputMethodManagerService.scheduleSwitchUserTaskLocked(v5, InputMethodManagerService$ClientState.client);
												InputBindResult v11 = InputBindResult.USER_SWITCHING;
												Binder.restoreCallingIdentity(v10);
												if (v11 != 0) {
													StringBuilder v22 = new StringBuilder();
													StringBuilder v24 = v22.append("Unknown=");
													StringBuilder v25 = v24.append(p1);
													String v26 = v25.toString();
													String v21 = v26;
													String v29 = Integer.toHexString(p6);
													Trace.traceEnd(32);
													InputBindResult v1 = InputBindResult.NULL;
													return v1;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public InputBindResult startInputOrWindowGainedFocus(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, ImeOnBackInvokedDispatcher p11){
	int v8 = EditorInfo.targetInputMethodUser.getIdentifier();
	boolean v9 = this.mUserManagerInternal.isUserRunning(v8);
	if (v9 != 0) {
		long v10 = Binder.clearCallingIdentity();
		InputBindResult v11 = InputMethodManagerService.startInputOrWindowGainedFocusInternalLocked(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, v5, p11);
		Binder.restoreCallingIdentity(v10);
		if (v11 != 0) {
			String v16 = InputMethodDebug.startInputReasonToString(p1);
			String v19 = Integer.toHexString(p6);
			Trace.traceEnd(32);
			InputBindResult v1 = InputBindResult.NULL;
			return v1;
		}
	}
}


This is path 3 for the API with depth 0:
public InputBindResult startInputOrWindowGainedFocus(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, ImeOnBackInvokedDispatcher p11){
	InputBindResult v1 = p0.startInputOrWindowGainedFocusInternal(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
	return v1;
}

and the following sink code:
['int v8 = EditorInfo.targetInputMethodUser.getIdentifier();\nboolean v9 = this.mUserManagerInternal.isUserRunning(v8);\nInputBindResult v11 = InputBindResult.USER_SWITCHING;\nreturn v1;', 'InputBindResult v11 = InputMethodManagerService.startInputOrWindowGainedFocusInternalLocked(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, v5, p11);\nreturn v1;', 'InputBindResult v1 = p0.startInputOrWindowGainedFocusInternal(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);\nreturn v1;']

The method startInputOrWindowGainedFocus has the following similar APIs:

- API Name: getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List; with Similarity Score: 0.8027586936950684
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = UserHandle.getCallingUserId();
String v13 = InputMethodManagerService.getSelectedMethodIdLocked();
Object v14 = this.mMethodMap.get(v13);
List v15 = this.mSettings.getEnabledInputMethodSubtypeListLocked(this.mContext, v14, p2);
return v11;

- API Name: getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List; with Similarity Score: 0.7832841873168945
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = UserHandle.getCallingUserId();
Object v5 = this.sLocalServiceObjects.get(UserManagerInterna.class);
List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v13);
Resources v17 = this.mContext.getResources();
ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, v13);
List v19 = InputMethodSubtype.sort(this.mContext, 0, v13, v15);
return v9;

