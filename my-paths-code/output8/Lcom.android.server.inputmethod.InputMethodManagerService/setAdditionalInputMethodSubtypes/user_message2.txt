The method setAdditionalInputMethodSubtypes has the following code snippet:

This is path 1 for the API with depth 1:
public void setAdditionalInputMethodSubtypes(String p1, InputMethodSubtype p2){
	boolean v1 = TextUtils.isEmpty(p1);
	if (v1 != 0) {
		if (p2 != 0) {
			ArrayList v2 = new ArrayList();
			if (0 >= p2.length) {
				boolean v4 = v2.contains(p2[0]);
				if (v4 != 0) {
					boolean v5 = v2.add(p2[0]);
					if ((0 + 1) >= p2.length) {
						if (v10 != 0) {
							boolean v6 = 1;
							if (v6 != 0) {
								if (this.mSystemReady != 0) {
									Object v11 = this.mMethodMap.get(p1);
									if (v11 != 0) {
										int v12 = Binder.getCallingUid();
										String v13 = this.mIPackageManager.getPackagesForUid(v12);
										if (v13 == 0) {
											if (0 >= v13.length) {
												String v14 = v11.getPackageName();
												boolean v15 = v13[0].equals(v14);
												if (v15 == 0) {
													if ((0 + 1) >= v13.length) {
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void setAdditionalInputMethodSubtypes(String p1, InputMethodSubtype p2){
	boolean v1 = TextUtils.isEmpty(p1);
	if (v1 != 0) {
		if (p2 != 0) {
			ArrayList v2 = new ArrayList();
			if (0 >= p2.length) {
				boolean v4 = v2.contains(p2[0]);
				if (v4 != 0) {
					boolean v5 = v2.add(p2[0]);
					if ((0 + 1) >= p2.length) {
						boolean v6 = p0.calledFromValidUserLocked();
						if (v6 != 0) {
							if (this.mSystemReady != 0) {
								Object v7 = this.mMethodMap.get(p1);
								if (v7 != 0) {
									int v8 = Binder.getCallingUid();
									String v9 = this.mIPackageManager.getPackagesForUid(v8);
									if (v9 == 0) {
										if (0 >= v9.length) {
											String v10 = v7.getPackageName();
											boolean v11 = v9[0].equals(v10);
											if (v11 == 0) {
												if ((0 + 1) >= v9.length) {
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 1:
public void setAdditionalInputMethodSubtypes(String p1, InputMethodSubtype p2){
	boolean v1 = TextUtils.isEmpty(p1);
	if (v1 != 0) {
		if (p2 != 0) {
			ArrayList v2 = new ArrayList();
			if (0 >= p2.length) {
				boolean v4 = v2.contains(p2[0]);
				if (v4 != 0) {
					boolean v5 = v2.add(p2[0]);
					if ((0 + 1) >= p2.length) {
						boolean v6 = 1;
						if (v6 != 0) {
							if (this.mSystemReady != 0) {
								Object v10 = this.mMethodMap.get(p1);
								if (v10 != 0) {
									int v11 = Binder.getCallingUid();
									String v12 = this.mIPackageManager.getPackagesForUid(v11);
									if (v12 == 0) {
										if (0 >= v12.length) {
											String v13 = v10.getPackageName();
											boolean v14 = v12[0].equals(v13);
											if (v14 == 0) {
												if ((0 + 1) >= v12.length) {
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v1 = TextUtils.isEmpty(p1);\nif (v1 != 0) {\nif (p2 != 0) {\nArrayList v2 = new ArrayList();\nif (0 >= p2.length) {\nboolean v4 = v2.contains(p2[0]);\nif (v4 != 0) {\nboolean v5 = v2.add(p2[0]);', 'if ((0 + 1) >= p2.length) {\nboolean v6 = 1;\nif (v6 != 0) {\nif (this.mSystemReady != 0) {\nObject v10 = this.mMethodMap.get(p1);\nint v11 = Binder.getCallingUid();\nString v12 = this.mIPackageManager.getPackagesForUid(v11);']

The method setAdditionalInputMethodSubtypes has the following similar APIs:

- API Name: openDevice(Landroid/os/IBinder;Landroid/media/midi/MidiDeviceInfo;Landroid/media/midi/IMidiDeviceOpenCallback;)V with Similarity Score: 0.7611871957778931
  - Access Control Level: NONE and the following code:
int v20 = Binder.getCallingUid();
boolean v22 = this.mIsPrivate;
if (v22 == 0) { ... }

- API Name: getServiceDeviceInfo(Ljava/lang/String;Ljava/lang/String;)Landroid/media/midi/MidiDeviceInfo; with Similarity Score: 0.7487639784812927
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingUid();
boolean v14 = v10.isUidAllowed(v1);

