The method removeWeakEscrowToken has the following code snippet:

This is path 1 for the API with depth 2:
public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		long v8 = LockSettingsService.getLong("sp-handle", 0, p2);
		long v7 = v8;
		if ((p1 < v7) != 0) {
			Integer v10 = Integer.valueOf(p2);
			boolean v11 = this.tokenMap.containsKey(v10);
			if (v11 != 0) {
				Integer v12 = Integer.valueOf(p2);
				Object v13 = this.tokenMap.get(v12);
				Long v14 = Long.valueOf(p1);
				Object v15 = v13.remove(v14);
				if (v15 == 0) {
					boolean v9 = 0;
					if (v9 == 0) {
						boolean v17 = SyntheticPasswordManager.hasState("spblob", p1, p2);
						boolean v16 = v17;
						if (v16 == 0) {
							byte[] v19 = SyntheticPasswordManager.loadState("spblob", p1, p2);
							SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);
							SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
							SyntheticPasswordManager.destroyState("secdis", p1, p2);
							if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 2) {
								SyntheticPasswordManager.notifyWeakEscrowTokenRemovedListeners(p1, p2);
								boolean v6 = 1;
								Binder.restoreCallingIdentity(v5);
								return v6;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		long v7 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
		if ((p1 < v7) != 0) {
			boolean v8 = this.mSpManager.removePendingToken(p1, p2);
			if (v8 == 0) {
				boolean v9 = this.mSpManager.existsHandle(p1, p2);
				if (v9 == 0) {
					this.mSpManager.destroyTokenBasedSyntheticPassword(p1, p2);
					boolean v6 = 1;
					Binder.restoreCallingIdentity(v5);
					return v6;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean removeWeakEscrowToken(long p1, int p2){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = p0.removeEscrowToken(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return v3;
}

and the following sink code:
['long v8 = LockSettingsService.getLong("sp-handle", 0, p2);\nInteger v10 = Integer.valueOf(p2);\nboolean v11 = this.tokenMap.containsKey(v10);\nObject v13 = this.tokenMap.get(v12);\nLong v14 = Long.valueOf(p1);\nObject v15 = v13.remove(v14);\nbyte[] v19 = SyntheticPasswordManager.loadState("spblob", p1, p2);\nSyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);\nSyntheticPasswordManager.destroySyntheticPassword(p1, p2);\nSyntheticPasswordManager.destroyState("secdis", p1, p2);', 'long v7 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);\nboolean v8 = this.mSpManager.removePendingToken(p1, p2);\nboolean v9 = this.mSpManager.existsHandle(p1, p2);\nthis.mSpManager.destroyTokenBasedSyntheticPassword(p1, p2);', 'boolean v3 = p0.removeEscrowToken(p1, p2);']

The method removeWeakEscrowToken has the following similar APIs:

- API Name: addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J with Similarity Score: 0.8893845677375793
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = p0.addEscrowToken(p1, 1, p2, v3);

- API Name: addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J with Similarity Score: 0.8686937093734741
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v10 = LockSettingsService.isUserSecure(p2);
long v12 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
LockscreenCredential v14 = LockscreenCredential.createNone();
SyntheticPasswordManager$AuthenticationResult v15 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v13, v12, v14, p2, 0);

