The method generateKeyWithMetadata in the following class Lcom.android.server.locksettings.LockSettingsService has the following code snippet:

This is path 1 for the API with depth 2:
public String generateKeyWithMetadata(String p1, byte[] p2){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	PlatformKeyManager.init(v5);
	PlatformDecryptionKey v8 = PlatformKeyManager.getDecryptKeyInternal(v5);
	PlatformEncryptionKey v9 = PlatformKeyManager.getEncryptKeyInternal(v5);
	Integer v11 = Integer.valueOf(v5);
	PlatformKeyManager.regenerate(v5);
	PlatformEncryptionKey v15 = PlatformKeyManager.getEncryptKeyInternal(v5);
	PlatformEncryptionKey v6 = v15;
	this.mKeyGenerator.init(256);
	SecretKey v18 = this.mKeyGenerator.generateKey();
	WrappedKey v19 = WrappedKey.fromSecretKey(v6, v18, p2);
	long v20 = this.mDatabase.insertKey(v5, v4, p1, v19);
	if ((v20 < -1) == 0) {
		long v21 = this.mDatabase.setShouldCreateSnapshot(v5, v4, 1);
		if ((v21 < 0) >= 0) {
			byte[] v22 = v18.getEncoded();
			byte[] v16 = v22;
			Integer v25 = Integer.valueOf(v5);
			Integer v26 = Integer.valueOf(v4);
			Integer v27 = Integer.valueOf(v16.length);
			String v30 = ApplicationKeyStorage.getInternalAlias(v5, v4, p1);
			KeyStore$SecretKeyEntry v31 = new KeyStore$SecretKeyEntry(v32);
			SecretKeySpec v32 = new SecretKeySpec(v16,"AES");
			KeyProtection$Builder v35 = new KeyProtection$Builder(3);
			String v37 = new String(1);
			KeyProtection$Builder v38 = v35.setBlockModes(v37);
			String v39 = new String(1);
			KeyProtection$Builder v40 = v38.setEncryptionPaddings(v39);
			KeyProtection v41 = v40.build();
			this.mKeyStore.setEntry(v30, v31, v41);
			String v44 = this.mApplicationKeyStorage.getGrantAlias(v5, v4, p1);
			String v43 = v44;
			String v1 = v43;
			return v1;
		}
	}
}


This is path 2 for the API with depth 1:
public String generateKeyWithMetadata(String p1, byte[] p2){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	PlatformEncryptionKey v6 = this.mPlatformKeyManager.getEncryptKey(v5);
	byte[] v7 = this.mRecoverableKeyGenerator.generateAndStoreKey(v6, v5, v4, p1, p2);
	this.mApplicationKeyStorage.setSymmetricKeyEntry(v5, v4, p1, v7);
	String v9 = RecoverableKeyStoreManager.getAlias(v5, v4, p1);
	String v1 = v9;
	return v1;
}


This is path 3 for the API with depth 0:
public String generateKeyWithMetadata(String p1, byte[] p2){
	String v1 = this.mRecoverableKeyStoreManager.generateKeyWithMetadata(p1, p2);
	return v1;
}

and the following sink code:
['this.mKeyGenerator.init(256);\nSecretKey v18 = this.mKeyGenerator.generateKey();\nWrappedKey v19 = WrappedKey.fromSecretKey(v6, v18, p2);\nlong v20 = this.mDatabase.insertKey(v5, v4, p1, v19);\nreturn v1;', 'PlatformEncryptionKey v6 = this.mPlatformKeyManager.getEncryptKey(v5);\nbyte[] v7 = this.mRecoverableKeyGenerator.generateAndStoreKey(v6, v5, v4, p1, p2);\nthis.mApplicationKeyStorage.setSymmetricKeyEntry(v5, v4, p1, v7);\nreturn v1;', 'String v1 = this.mRecoverableKeyStoreManager.generateKeyWithMetadata(p1, p2);\nreturn v1;']

The method generateKeyWithMetadata has the following similar APIs:

- API Name: generateKey(Ljava/lang/String;)Ljava/lang/String; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.9507254958152771, Code:
String v2 = RecoverableKeyStoreManager.generateKeyWithMetadata(p1, 0);
return v1;
  - Similarity: 0.9285420775413513, Code:
String v1 = this.mRecoverableKeyStoreManager.generateKey(p1);
return v1;
  - Similarity: 0.8100546002388, Code:
byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0);
this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8);
String v10 = RecoverableKeyStoreManager.getAlias(v6, v5, p1);
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.9065778851509094, Code:
String v1 = this.mRecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, p3);
return v1;
  - Similarity: 0.8678629398345947, Code:
int v5 = Binder.getCallingUid();
PlatformEncryptionKey v7 = this.mPlatformKeyManager.getEncryptKey(v6);
this.mRecoverableKeyGenerator.importKey(v7, v6, v5, p1, p2, p3);
this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, p2);
  - Similarity: 0.8127403259277344, Code:
Object v3 = Objects.requireNonNull(p1, "alias is null");
Object v4 = Objects.requireNonNull(p2, "keyBytes is null");
SecretKeySpec v18 = new SecretKeySpec(p2,"AES");
WrappedKey v20 = WrappedKey.fromSecretKey(v7, v18, p3);
long v21 = this.mDatabase.insertKey(v6, v5, p1, v20);
  - Access Control Level: SYS_OR_SIG

- API Name: getKey(Ljava/lang/String;)Ljava/lang/String; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.9010836482048035, Code:
String v1 = this.mRecoverableKeyStoreManager.getKey(p1);
return v1;
  - Similarity: 0.7844902276992798, Code:
String v6 = RecoverableKeyStoreManager.getAlias(v5, v4, p1);
String v1 = v6;
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: importKey(Ljava/lang/String;[B)Ljava/lang/String; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.890521764755249, Code:
String v1 = this.mRecoverableKeyStoreManager.importKey(p1, p2);
return v1;
  - Similarity: 0.8681516647338867, Code:
String v2 = RecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, 0);
return v2;
  - Similarity: 0.7836668491363525, Code:
Object v4 = Objects.requireNonNull(p1, "alias is null");
Object v5 = Objects.requireNonNull(p2, "keyBytes is null");
if (p2.length != 32) {
int v6 = Binder.getCallingUid();
int v7 = UserHandle.getCallingUserId();
PlatformEncryptionKey v8 = this.mPlatformKeyManager.getEncryptKey(v7);
this.mRecoverableKeyGenerator.importKey(v8, v7, v6, p1, p2, 0);
this.mApplicationKeyStorage.setSymmetricKeyEntry(v7, v6, p1, p2);
String v11 = RecoverableKeyStoreManager.getAlias(v7, v6, p1);
return v11;
  - Access Control Level: SYS_OR_SIG

- API Name: removeKey(Ljava/lang/String;)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.7409043908119202, Code:
this.mRecoverableKeyStoreManager.removeKey(p1);
  - Access Control Level: SYS_OR_SIG

