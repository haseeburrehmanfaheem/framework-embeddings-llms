The method setSeparateProfileChallengeEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(1, "Credential is already zeroized");
				int v2 = this.mType;
				if (v2 != -1) {
					if (p3 == 0) {
						boolean v8 = "lock_pattern_autolock".equals("lockscreen.profilechallenge");
						if (v8 == 0) {
							int v9 = LockSettingsService.getCredentialTypeInternal(p1);
							if (v9 != 1) {
								boolean v6 = 1;
								this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
								if (p2 == 0) {
									String v14 = LockSettingsStorage.getChildProfileLockFile(p1);
									LockSettingsStorage.deleteFile(v14);
									caughtException.printStackTrace();
									StringBuilder v24 = new StringBuilder();
									StringBuilder v26 = v24.append("profile_key_name_encrypt_");
									StringBuilder v27 = v24.append(p1);
									String v28 = v24.toString();
									this.mJavaKeyStore.deleteEntry(v28);
									StringBuilder v30 = new StringBuilder();
									StringBuilder v32 = v30.append("profile_key_name_decrypt_");
									StringBuilder v33 = v30.append(p1);
									String v34 = v30.toString();
									this.mJavaKeyStore.deleteEntry(v34);
									p0.notifySeparateProfileChallengeChanged(p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			LockscreenCredential.ensureNotZeroized();
			int v2 = this.mType;
			if (v2 != -1) {
				if (p3 == 0) {
					LockscreenCredential v5 = new LockscreenCredential(-1,v6);
					[B v6 = new [B(0);
					LockscreenCredential v4 = v5;
					boolean v9 = LockSettingsService.getBoolean("lockscreen.profilechallenge", 0, p1);
					LockSettingsService.setBoolean("lockscreen.profilechallenge", p2, p1);
					if (p2 == 0) {
						this.mStorage.removeChildProfileLock(p1);
						LockSettingsService.removeKeystoreProfileKey(p1);
						LockSettingsService$$ExternalSyntheticLambda1 v14 = new LockSettingsService$$ExternalSyntheticLambda1(p1);
						boolean v16 = this.mHandler.post(v14);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			int v2 = p3.getType();
			if (v2 != -1) {
				if (p3 == 0) {
					p0.setSeparateProfileChallengeEnabledLocked(p1, p2, p3);
					p0.notifySeparateProfileChallengeChanged(p1);
					return;
				}
			}
		}
	}
}

and the following sink code:
['if (this.mHasSecureLockScreen != 0) {\nthis.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);\nString v14 = LockSettingsStorage.getChildProfileLockFile(p1);\nLockSettingsStorage.deleteFile(v14);\nthis.mJavaKeyStore.deleteEntry(v28);\nthis.mJavaKeyStore.deleteEntry(v34);\np0.notifySeparateProfileChallengeChanged(p1);', 'if (this.mHasSecureLockScreen != 0) {\nLockscreenCredential v5 = new LockscreenCredential(-1,v6);\nboolean v9 = LockSettingsService.getBoolean("lockscreen.profilechallenge", 0, p1);\nLockSettingsService.setBoolean("lockscreen.profilechallenge", p2, p1);\nthis.mStorage.removeChildProfileLock(p1);\nLockSettingsService.removeKeystoreProfileKey(p1);', 'if (this.mHasSecureLockScreen != 0) {\np0.setSeparateProfileChallengeEnabledLocked(p1, p2, p3);\np0.notifySeparateProfileChallengeChanged(p1);']

The method setSeparateProfileChallengeEnabled has the following similar APIs:

- API Name: getSeparateProfileChallengeEnabled(I)Z with Similarity Score: 0.8143839240074158
  - Access Control Level: DANGEROUS and the following code:
boolean v3 = this.mStorage.getBoolean("lockscreen.profilechallenge", 0, p1);
boolean v2 = v3;
return v2;

- API Name: setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z with Similarity Score: 0.8064659237861633
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v40 = LockSettingsService.spBasedSetLockCredentialInternalLocked(p1, p2, p3, 0);
if (v40 != 0) {
LockSettingsService.setBoolean("lockscreen.profilechallenge", 1, p3);

