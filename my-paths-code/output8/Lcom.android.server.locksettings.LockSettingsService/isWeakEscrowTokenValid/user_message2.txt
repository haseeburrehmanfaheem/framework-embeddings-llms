The method isWeakEscrowTokenValid has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		byte[] v8 = SyntheticPasswordManager.loadState("e0", 0, p3);
		boolean v9 = ArrayUtils.isEmpty(v8);
		boolean v7 = (v9 ^ 1);
		if (v7 == 0) {
			byte[] v11 = SyntheticPasswordManager.loadState("p1", 0, p3);
			boolean v12 = ArrayUtils.isEmpty(v11);
			boolean v10 = (v12 ^ 1);
			if (v10 == 0) {
				boolean v6 = 1;
				if (v6 != 0) {
					if (this.mGateKeeperService == 0) {
						IBinder v14 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
						if (v14 == 0) {
							LockSettingsService$GateKeeperDiedRecipient v15 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
							v14.linkToDeath(v15, 0);
							if (v14 != 0) {
								IInterface v19 = v14.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
								if (v19 == 0) {
									if (v19 instanceof IGateKeeperService == 0) {
										IGateKeeperService$Stub$Proxy v20 = new IGateKeeperService$Stub$Proxy(v14);
										IGateKeeperService v18 = v20;
										this.mGateKeeperService = v18;
										IGateKeeperService v13 = v18;
										SyntheticPasswordManager$AuthenticationResult v24 = new SyntheticPasswordManager$AuthenticationResult();
										byte[] v26 = SyntheticPasswordManager.loadSecdiscardable(p1, p3);
										int v27 = SyntheticPasswordManager.loadWeaverSlot(p1, p3);
										if (v27 == -1) {
											boolean v28 = SyntheticPasswordManager.isWeaverAvailable();
											if (v28 != 0) {
												VerifyCredentialResponse v29 = SyntheticPasswordManager.weaverVerify(v27, 0);
												int v30 = v29.getResponseCode();
												if (v30 != 0) {
													byte[] v31 = v29.getGatekeeperHAT();
													if (v31 != 0) {
														byte[] v32 = v29.getGatekeeperHAT();
														byte[] v33 = SyntheticPasswordCrypto.decrypt(v32, this.PERSONALISATION_WEAVER_TOKEN, v26);
														byte[] v34 = SyntheticPasswordManager.transformUnderSecdiscardable(p2, v26);
														SyntheticPasswordManager$AuthenticationToken v35 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p1, 2, v34, 0, p3);
														SyntheticPasswordManager$AuthenticationResult.authToken = v35;
														if (v35 == 0) {
															VerifyCredentialResponse v36 = SyntheticPasswordManager.verifyChallenge(v13, v35, 0, p3);
															SyntheticPasswordManager$AuthenticationResult.gkResponse = v36;
															if (v36 != 0) {
																SyntheticPasswordManager$AuthenticationResult.gkResponse = VerifyCredentialResponse.OK;
																SyntheticPasswordManager$AuthenticationResult v23 = v24;
																SyntheticPasswordManager$AuthenticationResult v22 = v23;
																if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																	Binder.restoreCallingIdentity(v5);
																	return 1;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v7 = SyntheticPasswordManager.hasState("e0", 0, p3);
		if (v7 == 0) {
			boolean v8 = SyntheticPasswordManager.hasState("p1", 0, p3);
			if (v8 == 0) {
				boolean v6 = 1;
				if (v6 != 0) {
					if (this.mGateKeeperService == 0) {
						IBinder v10 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
						if (v10 == 0) {
							LockSettingsService$GateKeeperDiedRecipient v11 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
							v10.linkToDeath(v11, 0);
							IGateKeeperService v14 = IGateKeeperService$Stub.asInterface(v10);
							this.mGateKeeperService = v14;
							IGateKeeperService v9 = v14;
							SyntheticPasswordManager$AuthenticationResult v16 = SyntheticPasswordManager.unwrapTokenBasedSyntheticPasswordInternal(v9, p1, 2, p2, p3);
							SyntheticPasswordManager$AuthenticationResult v15 = v16;
							if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
								Binder.restoreCallingIdentity(v5);
								return 1;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = this.mSpManager.hasEscrowData(p3);
	if (v3 != 0) {
		IGateKeeperService v4 = p0.getGateKeeperService();
		SyntheticPasswordManager$AuthenticationResult v5 = this.mSpManager.unwrapWeakTokenBasedSyntheticPassword(v4, p1, p2, p3);
		if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
			Binder.restoreCallingIdentity(v2);
			return 1;
		}
	}
}

and the following sink code:
['SyntheticPasswordManager.loadState("e0", 0, p3);\nbyte[] v11 = SyntheticPasswordManager.loadState("p1", 0, p3);\nIGateKeeperService$Stub$Proxy v20 = new IGateKeeperService$Stub$Proxy(v14);\nSyntheticPasswordManager.unwrapSyntheticPasswordBlob(p1, 2, v34, 0, p3);', 'SyntheticPasswordManager.hasState("e0", 0, p3);\nboolean v8 = SyntheticPasswordManager.hasState("p1", 0, p3);\nIGateKeeperService v14 = IGateKeeperService$Stub.asInterface(v10);\nSyntheticPasswordManager.unwrapTokenBasedSyntheticPasswordInternal(v9, p1, 2, p2, p3);', 'this.mSpManager.hasEscrowData(p3);\nSyntheticPasswordManager$AuthenticationResult v5 = this.mSpManager.unwrapWeakTokenBasedSyntheticPassword(v4, p1, p2, p3);']

The method isWeakEscrowTokenValid has the following similar APIs:

- API Name: addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J with Similarity Score: 0.8300011157989502
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v10 = LockSettingsService.isUserSecure(p2);
long v12 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
LockscreenCredential v14 = LockscreenCredential.createNone();
SyntheticPasswordManager$AuthenticationResult v15 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v13, v12, v14, p2, 0);

- API Name: removeWeakEscrowToken(JI)Z with Similarity Score: 0.8146835565567017
  - Access Control Level: SYS_OR_SIG and the following code:
long v7 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
boolean v8 = this.mSpManager.removePendingToken(p1, p2);
boolean v9 = this.mSpManager.existsHandle(p1, p2);
this.mSpManager.destroyTokenBasedSyntheticPassword(p1, p2);

