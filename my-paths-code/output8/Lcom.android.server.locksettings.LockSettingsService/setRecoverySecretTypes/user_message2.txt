The method setRecoverySecretTypes in the following class Lcom.android.server.locksettings.LockSettingsService has the following code snippet:

This is path 1 for the API with depth 2:
public void setRecoverySecretTypes([I p1){
	Object v3 = Objects.requireNonNull(p1, "secretTypes is null");
	int v4 = UserHandle.getCallingUserId();
	int v5 = Binder.getCallingUid();
	SQLiteDatabase v7 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v8 = new String(4);
	String v9 = new String(2);
	String v10 = Integer.toString(v4);
	String v11 = Integer.toString(v5);
	Cursor v12 = v7.query("recovery_service_metadata", v8, "user_id = ? AND uid = ?", v9, 0, 0, 0);
	int v13 = v12.getCount();
	if (v13 != 0) {
		if (v13 <= 1) {
			boolean v14 = v12.moveToFirst();
			int v15 = v12.getColumnIndexOrThrow("secret_types");
			boolean v16 = v12.isNull(v15);
			if (v16 == 0) {
				String v17 = v12.getString(v15);
				boolean v18 = TextUtils.isEmpty(v17);
				if (v18 == 0) {
					String v19 = v17.split(",");
					[I v20 = new [I(v19.length);
					if (0 >= v19.length) {
						int v21 = Integer.parseInt(v19[0]);
						if ((0 + 1) >= v19.length) {
							v12.close();
							[I v6 = v20;
							boolean v29 = Arrays.equals(p1, v6);
							if (v29 == 0) {
								SQLiteDatabase v31 = this.mKeyStoreDbHelper.getWritableDatabase();
								ContentValues v32 = new ContentValues();
								StringJoiner v34 = new StringJoiner(",");
								IntStream v36 = Arrays.stream(p1);
								RecoverableKeyStoreDb$$ExternalSyntheticLambda0 v37 = new RecoverableKeyStoreDb$$ExternalSyntheticLambda0(v34);
								v36.forEach(v37);
								String v40 = v34.toString();
								v32.put("secret_types", v40);
								RecoverableKeyStoreDb.ensureRecoveryServiceMetadataEntryExists(v4, v5);
								String v43 = new String(2);
								String v44 = String.valueOf(v4);
								String v45 = String.valueOf(v5);
								int v46 = v31.update("recovery_service_metadata", v32, "user_id = ? AND uid = ?", v43);
								long v30 = v46;
								if ((v30 < 0) < 0) {
									if (v6.length != 0) {
										Long v49 = RecoverableKeyStoreDb.getLong(v4, v5, "snapshot_version");
										Long v48 = v49;
										if (v48 == 0) {
											if (1 == 0) {
												long v51 = RecoverableKeyStoreDb.setLong(v4, v5, "should_create_snapshot", 1);
												long v50 = v51;
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setRecoverySecretTypes([I p1){
	Object v3 = Objects.requireNonNull(p1, "secretTypes is null");
	int v4 = UserHandle.getCallingUserId();
	int v5 = Binder.getCallingUid();
	[I v6 = this.mDatabase.getRecoverySecretTypes(v4, v5);
	boolean v7 = Arrays.equals(p1, v6);
	if (v7 == 0) {
		long v8 = this.mDatabase.setRecoverySecretTypes(v4, v5, p1);
		if ((v8 < 0) < 0) {
			if (v6.length != 0) {
				Long v10 = this.mDatabase.getSnapshotVersion(v4, v5);
				if (v10 == 0) {
					long v11 = this.mDatabase.setShouldCreateSnapshot(v4, v5, 1);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setRecoverySecretTypes([I p1){
	this.mRecoverableKeyStoreManager.setRecoverySecretTypes(p1);
	return;
}

and the following sink code:
['Object v3 = Objects.requireNonNull(p1, "secretTypes is null");\nboolean v7 = Arrays.equals(p1, v6);\nlong v8 = this.mDatabase.setRecoverySecretTypes(v4, v5, p1);', 'this.mRecoverableKeyStoreManager.setRecoverySecretTypes(p1);', 'int v13 = v12.getCount();\nString v17 = v12.getString(v15);\n[I v20 = new [I(v19.length);\nStringJoiner v34 = new StringJoiner(",");\nContentValues v32 = new ContentValues();\nv32.put("secret_types", v40);\nint v46 = v31.update("recovery_service_metadata", v32, "user_id = ? AND uid = ?", v43);']

The method setRecoverySecretTypes has the following similar APIs:

- API Name: getRecoverySecretTypes()[I in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8515534400939941, Code:
[I v1 = this.mRecoverableKeyStoreManager.getRecoverySecretTypes();
return v1;
  - Similarity: 0.8195356130599976, Code:
[I v5 = this.mDatabase.getRecoverySecretTypes(v3, v4);
[I v1 = v5;
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: setRecoveryStatus(Ljava/lang/String;I)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8508748412132263, Code:
this.mRecoverableKeyStoreManager.setRecoveryStatus(p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8189637660980225, Code:
this.mRecoverableKeyStoreManager.initRecoveryServiceWithSigFile(p1, p2, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: setServerParams([B)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8165416121482849, Code:
this.mRecoverableKeyStoreManager.setServerParams(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: closeSession(Ljava/lang/String;)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.7639741897583008, Code:
this.mRecoverableKeyStoreManager.closeSession(p1);
  - Access Control Level: SYS_OR_SIG

