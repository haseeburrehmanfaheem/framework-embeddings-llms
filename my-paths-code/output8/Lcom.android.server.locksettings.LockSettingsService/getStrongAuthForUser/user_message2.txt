The method getStrongAuthForUser has the following code snippet:

This is path 1 for the API with depth 2:
public int getStrongAuthForUser(int p1){
	int v4 = this.mStrongAuthRequiredForUser.get(p1, this.mDefaultStrongAuthFlags);
	int v3 = v4;
	int v2 = v3;
	return v2;
}


This is path 2 for the API with depth 1:
public int getStrongAuthForUser(int p1){
	int v3 = LockSettingsService$SynchronizedStrongAuthTracker.getStrongAuthForUser(p1);
	int v2 = v3;
	return v2;
}


This is path 3 for the API with depth 0:
public int getStrongAuthForUser(int p1){
	int v2 = this.mStrongAuthTracker.getStrongAuthForUser(p1);
	return v2;
}

and the following sink code:
['int v4 = this.mStrongAuthRequiredForUser.get(p1, this.mDefaultStrongAuthFlags);\nint v3 = v4;\nint v2 = v3;\nreturn v2;', 'int v3 = LockSettingsService$SynchronizedStrongAuthTracker.getStrongAuthForUser(p1);\nint v2 = v3;\nreturn v2;', 'int v2 = this.mStrongAuthTracker.getStrongAuthForUser(p1);\nreturn v2;']

The method getStrongAuthForUser has the following similar APIs:

- API Name: registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V with Similarity Score: 0.7653438448905945
  - Access Control Level: SYS_OR_SIG and the following code:
this.mStrongAuth.registerStrongAuthTracker(p1);

- API Name: requireStrongAuth(II)V with Similarity Score: 0.7552283406257629
  - Access Control Level: SYS_OR_SIG and the following code:
this.mStrongAuth.requireStrongAuth(p1, p2);

