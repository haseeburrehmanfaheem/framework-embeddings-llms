The method removeKey in the following class Lcom.android.server.locksettings.LockSettingsService has the following code snippet:

This is path 1 for the API with depth 2:
public void removeKey(String p1){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	SQLiteDatabase v7 = this.mKeyStoreDbHelper.getWritableDatabase();
	String v8 = new String(2);
	String v9 = Integer.toString(v4);
	int v10 = v7.delete("keys", "uid = ? AND alias = ?", v8);
	if (v10 <= 0) {
		boolean v6 = 0;
		if (v6 == 0) {
			if (1 == 0) {
				long v12 = RecoverableKeyStoreDb.setLong(v5, v4, "should_create_snapshot", 1);
				long v11 = v12;
				Integer v15 = Integer.valueOf(v5);
				Integer v16 = Integer.valueOf(v4);
				String v19 = ApplicationKeyStorage.getInternalAlias(v5, v4, p1);
				this.mKeyStore.deleteEntry(v19);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void removeKey(String p1){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	boolean v6 = this.mDatabase.removeKey(v4, p1);
	if (v6 == 0) {
		long v7 = this.mDatabase.setShouldCreateSnapshot(v5, v4, 1);
		this.mApplicationKeyStorage.deleteEntry(v5, v4, p1);
		return;
	}
}


This is path 3 for the API with depth 0:
public void removeKey(String p1){
	this.mRecoverableKeyStoreManager.removeKey(p1);
	return;
}

and the following sink code:
['SQLiteDatabase v7 = this.mKeyStoreDbHelper.getWritableDatabase();\nint v10 = v7.delete("keys", "uid = ? AND alias = ?", new String[]{Integer.toString(v4), p1});\nString v19 = ApplicationKeyStorage.getInternalAlias(v5, v4, p1);\nthis.mKeyStore.deleteEntry(v19);', 'boolean v6 = this.mDatabase.removeKey(v4, p1);\nthis.mApplicationKeyStorage.deleteEntry(v5, v4, p1);', 'this.mRecoverableKeyStoreManager.removeKey(p1);']

The method removeKey has the following similar APIs:

- API Name: closeSession(Ljava/lang/String;)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8779992461204529, Code:
this.mRecoverableKeyStoreManager.closeSession(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: getKey(Ljava/lang/String;)Ljava/lang/String; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8320255875587463, Code:
String v1 = this.mRecoverableKeyStoreManager.getKey(p1);
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: getRecoveryStatus()Ljava/util/Map; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8094770312309265, Code:
SQLiteDatabase v5 = this.mKeyStoreDbHelper.getReadableDatabase();
Cursor v9 = v5.query("keys", v6, "uid = ?", v7, 0, 0, 0);
Integer v17 = Integer.valueOf(v16);
Object v18 = v10.put(v14, v17);
return v1;
  - Access Control Level: SYS_OR_SIG

- API Name: setRecoveryStatus(Ljava/lang/String;I)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8045738339424133, Code:
SQLiteDatabase v6 = this.mKeyStoreDbHelper.getWritableDatabase();
ContentValues v7 = new ContentValues();
Integer v9 = Integer.valueOf(p2);
v7.put("recovery_status", v9);
int v13 = v6.update("keys", v7, "uid = ? AND alias = ?", v11);
  - Similarity: 0.7753655314445496, Code:
this.mRecoverableKeyStoreManager.setRecoveryStatus(p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: generateKey(Ljava/lang/String;)Ljava/lang/String; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.801308810710907, Code:
String v1 = this.mRecoverableKeyStoreManager.generateKey(p1);
return v1;
  - Access Control Level: SYS_OR_SIG

