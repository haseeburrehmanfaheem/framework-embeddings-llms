The method setLong has the following code snippet:

This is path 1 for the API with depth 2:
public void setLong(String p1, long p2, int p3){
	String v3 = Long.toString(p2);
	if (p3 == -9999) {
		Preconditions.checkArgument(1, "cannot store lock settings for FRP user");
		LockSettingsStorage.writeKeyValue(p1, v3, p3);
		boolean v7 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v7 == 0) {
			BackupManager.dataChanged("com.android.providers.settings");
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void setLong(String p1, long p2, int p3){
	String v3 = Long.toString(p2);
	LockSettingsStorage.setString(p1, v3, p3);
	return;
}


This is path 3 for the API with depth 0:
public void setLong(String p1, long p2, int p3){
	this.mStorage.setLong(p1, p2, p3);
	return;
}

and the following sink code:
['this.mStorage.setLong(p1, p2, p3);', 'String v3 = Long.toString(p2);\nLockSettingsStorage.setString(p1, v3, p3);', 'String v3 = Long.toString(p2);\nif (p3 == -9999) {\nPreconditions.checkArgument(1, "cannot store lock settings for FRP user");\nLockSettingsStorage.writeKeyValue(p1, v3, p3);']

The method setLong has the following similar APIs:

- API Name: setString(Ljava/lang/String;Ljava/lang/String;I)V with Similarity Score: 0.9128527045249939
  - Access Control Level: SYS_OR_SIG and the following code:
this.mStorage.setString(p1, p2, p3);

- API Name: getLong(Ljava/lang/String;JI)J with Similarity Score: 0.8994301557540894
  - Access Control Level: DANGEROUS and the following code:
String v3 = LockSettingsStorage.getString(p1, 0, p3);
long v2 = p2;
return v2;

