The method getBoolean has the following code snippet:

This is path 1 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p3 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = 0;
						if (v4 == 0) {
							long v7 = this.mStorage.getLong("lockscreen.password_type", 0, p3);
							int v6 = v7;
							if (v6 != 65536) {
								String v9 = LockSettingsStorage.getLockPatternFilename(p3);
								boolean v10 = LockSettingsStorage.hasFile(v9);
								boolean v8 = v10;
								if (v8 == 0) {
									if (v6 < 131072) {
										String v12 = LockSettingsStorage.getLockPasswordFilename(p3);
										boolean v13 = LockSettingsStorage.hasFile(v12);
										boolean v11 = v13;
										if (v11 == 0) {
											boolean v15 = LockPatternUtils.isQualityAlphabeticPassword(v6);
											if (v15 == 0) {
												boolean v16 = LockPatternUtils.isQualityNumericPin(v6);
												if (v16 == 0) {
													int v14 = 3;
													int v3 = v14;
													if (v3 != 1) {
														return 1;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			boolean v4 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p3);
			if (v4 == 0) {
				int v5 = LockSettingsService.getKeyguardStoredQuality(p3);
				if (v5 != 65536) {
					boolean v6 = this.mStorage.hasPattern(p3);
					if (v6 == 0) {
						if (v5 < 131072) {
							boolean v7 = this.mStorage.hasPassword(p3);
							if (v7 == 0) {
								int v8 = LockSettingsService.pinOrPasswordQualityToCredentialType(v5);
								int v3 = v8;
								if (v3 != 1) {
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		int v3 = p0.getCredentialTypeInternal(p3);
		if (v3 != 1) {
			return 1;
		}
	}
}

and the following sink code:
['LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();\nlong v7 = this.mStorage.getLong("lockscreen.password_type", 0, p3);\nString v9 = LockSettingsStorage.getLockPatternFilename(p3);\nboolean v10 = LockSettingsStorage.hasFile(v9);\nString v12 = LockSettingsStorage.getLockPasswordFilename(p3);\nboolean v13 = LockSettingsStorage.hasFile(v12);\nboolean v15 = LockPatternUtils.isQualityAlphabeticPassword(v6);\nboolean v16 = LockPatternUtils.isQualityNumericPin(v6);', 'boolean v4 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p3);\nint v5 = LockSettingsService.getKeyguardStoredQuality(p3);\nboolean v6 = this.mStorage.hasPattern(p3);\nboolean v7 = this.mStorage.hasPassword(p3);\nint v8 = LockSettingsService.pinOrPasswordQualityToCredentialType(v5);', 'int v3 = p0.getCredentialTypeInternal(p3);']

The method getBoolean has the following similar APIs:

- API Name: getCredentialType(I)I with Similarity Score: 0.9484387040138245
  - Access Control Level: DANGEROUS and the following code:
int v2 = p0.getCredentialTypeInternal(p1);
return v2;

- API Name: getCredentialType(I)I with Similarity Score: 0.8892196416854858
  - Access Control Level: DANGEROUS and the following code:
LockSettingsStorage$PersistentData v4 = this.mStorage.readPersistentDataBlock();
long v6 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
int v5 = v6;
if (v5 != 65536) { ... }
return v2;

