The method setString in the following class Lcom.android.server.locksettings.LockSettingsService has the following code snippet:

This is path 1 for the API with depth 2:
public void setString(String p1, String p2, int p3){
	if (p3 == -9999) {
		Preconditions.checkArgument(1, "cannot store lock settings for FRP user");
		SQLiteDatabase v5 = this.mOpenHelper.getWritableDatabase();
		LockSettingsStorage.writeKeyValue(v5, p1, p2, p3);
		boolean v7 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v7 == 0) {
			BackupManager.dataChanged("com.android.providers.settings");
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void setString(String p1, String p2, int p3){
	if (p3 == -9999) {
		Preconditions.checkArgument(1, "cannot store lock settings for FRP user");
		LockSettingsStorage.writeKeyValue(p1, p2, p3);
		boolean v5 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v5 == 0) {
			BackupManager.dataChanged("com.android.providers.settings");
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void setString(String p1, String p2, int p3){
	this.mStorage.setString(p1, p2, p3);
	return;
}

and the following sink code:
['LockSettingsStorage.writeKeyValue(p1, p2, p3);', 'SQLiteDatabase v5 = this.mOpenHelper.getWritableDatabase();\nLockSettingsStorage.writeKeyValue(v5, p1, p2, p3);', 'this.mStorage.setString(p1, p2, p3);']

The method setString has the following similar APIs:

- API Name: setBoolean(Ljava/lang/String;ZI)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.9142772555351257, Code:
LockSettingsStorage.writeKeyValue(p1, "1", p3);
LockSettingsStorage.setString(p1, "1", p3);
  - Similarity: 0.900896430015564, Code:
this.mStorage.setBoolean(p1, p2, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: setLong(Ljava/lang/String;JI)V in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.9128527045249939, Code:
this.mStorage.setLong(p1, p2, p3);
  - Similarity: 0.8495978713035583, Code:
String v3 = Long.toString(p2);
LockSettingsStorage.setString(p1, v3, p3);
  - Similarity: 0.7929901480674744, Code:
String v3 = Long.toString(p2);
if (p3 == -9999) {
Preconditions.checkArgument(1, "cannot store lock settings for FRP user");
LockSettingsStorage.writeKeyValue(p1, v3, p3);
  - Access Control Level: SYS_OR_SIG

- API Name: getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8305172920227051, Code:
String v4 = LockSettingsStorage.readKeyValue(p1, p2, p3);
String v2 = v4;
return v2;
  - Similarity: 0.8196861743927002, Code:
String v2 = this.mStorage.getString(p1, p2, p3);
return v2;
  - Access Control Level: DANGEROUS

- API Name: getLong(Ljava/lang/String;JI)J in the following Class: Lcom.android.server.locksettings.LockSettingsService with the following sink code entries:
  - Similarity: 0.8227023482322693, Code:
String v5 = LockSettingsStorage.readKeyValue(p1, 0, p3);
long v2 = p2;
return v2;
  - Similarity: 0.7757201194763184, Code:
String v3 = LockSettingsStorage.getString(p1, 0, p3);
long v2 = p2;
return v2;
  - Similarity: 0.7539719343185425, Code:
long v2 = this.mStorage.getLong(p1, p2, p3);
return v2;
  - Access Control Level: DANGEROUS

