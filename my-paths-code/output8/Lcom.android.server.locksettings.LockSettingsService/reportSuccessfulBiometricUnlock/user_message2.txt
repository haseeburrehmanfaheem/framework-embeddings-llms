The method reportSuccessfulBiometricUnlock has the following code snippet:

This is path 1 for the API with depth 1:
public void reportSuccessfulBiometricUnlock(boolean p1, int p2){
	if (p1 == 0) {
		Message v3 = this.mHandler.obtainMessage(8, p2, 0);
		v3.sendToTarget();
		return;
	}
}


This is path 2 for the API with depth 0:
public void reportSuccessfulBiometricUnlock(boolean p1, int p2){
	this.mStrongAuth.reportSuccessfulBiometricUnlock(p1, p2);
	return;
}


This is path 3 for the API with depth 1:
public void reportSuccessfulBiometricUnlock(boolean p1, int p2){
	if (p1 == 0) {
		Message v3 = this.mHandler.obtainMessage(7, p2, 0);
		v3.sendToTarget();
		return;
	}
}

and the following sink code:
['this.mStrongAuth.reportSuccessfulBiometricUnlock(p1, p2);', 'Message v3 = this.mHandler.obtainMessage(8, p2, 0);\nv3.sendToTarget();', 'Message v3 = this.mHandler.obtainMessage(7, p2, 0);\nv3.sendToTarget();']

The method reportSuccessfulBiometricUnlock has the following similar APIs:

- API Name: registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V with Similarity Score: 0.9875567555427551
  - Access Control Level: SYS_OR_SIG and the following code:
Message v3 = this.mHandler.obtainMessage(2, p1);
v3.sendToTarget();

- API Name: scheduleNonStrongBiometricIdleTimeout(I)V with Similarity Score: 0.9873375296592712
  - Access Control Level: SYS_OR_SIG and the following code:
Message v3 = this.mHandler.obtainMessage(9, p1, 0);
v3.sendToTarget();

