The method isWeakEscrowTokenActive has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isWeakEscrowTokenActive(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v8 = SyntheticPasswordManager.hasState("spblob", p1, p2);
		boolean v7 = v8;
		boolean v6 = v7;
		Binder.restoreCallingIdentity(v5);
		return v6;
	}
}


This is path 2 for the API with depth 1:
public boolean isWeakEscrowTokenActive(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v7 = this.mSpManager.existsHandle(p1, p2);
		boolean v6 = v7;
		Binder.restoreCallingIdentity(v5);
		return v6;
	}
}


This is path 3 for the API with depth 0:
public boolean isWeakEscrowTokenActive(long p1, int p2){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = p0.isEscrowTokenActive(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return v3;
}

and the following sink code:
['boolean v8 = SyntheticPasswordManager.hasState("spblob", p1, p2);\nboolean v7 = v8;\nboolean v6 = v7;\nreturn v6;', 'boolean v7 = this.mSpManager.existsHandle(p1, p2);\nboolean v6 = v7;\nreturn v6;', 'boolean v3 = p0.isEscrowTokenActive(p1, p2);\nreturn v3;']

The method isWeakEscrowTokenActive has the following similar APIs:

- API Name: removeWeakEscrowToken(JI)Z with Similarity Score: 0.8599551916122437
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = p0.removeEscrowToken(p1, p2);

- API Name: addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J with Similarity Score: 0.8080361485481262
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = p0.addEscrowToken(p1, 1, p2, v3);

