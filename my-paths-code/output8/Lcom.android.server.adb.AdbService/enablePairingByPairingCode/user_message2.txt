The method enablePairingByPairingCode in the following class Lcom.android.server.adb.AdbService has the following code snippet:

This is path 1 for the API with depth 1:
public void enablePairingByPairingCode(){
	if (this.mDebuggingManager == 0) {
		boolean v3 = this.mHandler.sendEmptyMessage(15);
		return;
	}
}


This is path 2 for the API with depth 0:
public void enablePairingByPairingCode(){
	if (this.mDebuggingManager == 0) {
		this.mDebuggingManager.enablePairingByPairingCode();
		return;
	}
}

and the following sink code:
['this.mDebuggingManager.enablePairingByPairingCode();']

The method enablePairingByPairingCode has the following similar APIs:

- API Name: enablePairingByQrCode(Ljava/lang/String;Ljava/lang/String;)V in the following Class: Lcom.android.server.adb.AdbService with the following sink code entries:
  - Similarity: 0.9042631983757019, Code:
this.mDebuggingManager.enablePairingByQrCode(p1, p2);
  - Access Control Level: SYS_OR_SIG

- API Name: disablePairing()V in the following Class: Lcom.android.server.adb.AdbService with the following sink code entries:
  - Similarity: 0.8743084073066711, Code:
if (this.mDebuggingManager == 0) {
this.mDebuggingManager.disablePairing();
  - Access Control Level: SYS_OR_SIG

- API Name: unpairDevice(Ljava/lang/String;)V in the following Class: Lcom.android.server.adb.AdbService with the following sink code entries:
  - Similarity: 0.7469577789306641, Code:
this.mDebuggingManager.unpairDevice(p1);
  - Access Control Level: SYS_OR_SIG

- API Name: allowDebugging(ZLjava/lang/String;)V in the following Class: Lcom.android.server.adb.AdbService with the following sink code entries:
  - Similarity: 0.7207381725311279, Code:
this.mDebuggingManager.allowDebugging(p1, p2);
  - Access Control Level: SYS_OR_SIG

