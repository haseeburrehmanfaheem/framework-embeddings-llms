The method dispatchMediaKeyEventToSessionAsSystemService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean dispatchMediaKeyEventToSessionAsSystemService(String p1, KeyEvent p2, MediaSession$Token p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = p2.getUid();
	UserHandle v8 = UserHandle.getUserHandleForUid(v7);
	int v9 = v8.getIdentifier();
	MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
	if (v10 == 0) {
		MediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
		MediaSessionRecord v12 = v11.getMediaSessionRecord(p2);
		MediaSessionRecord v6 = v12;
		MediaSessionRecord v5 = v6;
		StringBuilder v13 = new StringBuilder();
		StringBuilder v15 = v13.append("dispatchMediaKeyEventToSessionAsSystemService, pkg=");
		StringBuilder v16 = v13.append(p1);
		StringBuilder v17 = v13.append(", pid=");
		StringBuilder v18 = v13.append(v1);
		StringBuilder v19 = v13.append(", uid=");
		StringBuilder v20 = v13.append(v2);
		StringBuilder v21 = v13.append(", sessionToken=");
		StringBuilder v22 = v13.append(p3);
		StringBuilder v23 = v13.append(", event=");
		StringBuilder v24 = v13.append(p2);
		StringBuilder v25 = v13.append(", session=");
		StringBuilder v26 = v13.append(v5);
		String v27 = v13.toString();
		int v28 = Log.d("MediaSessionService", v27);
		if (v5 != 0) {
			int v31 = p5.getKeyCode();
			boolean v32 = KeyEvent.isMediaSessionKey(v31);
			if (v32 == 0) {
				StringBuilder v33 = new StringBuilder();
				StringBuilder v35 = v33.append("action=");
				int v36 = p5.getAction();
				String v37 = KeyEvent.actionToString(v36);
				StringBuilder v38 = v33.append(v37);
				StringBuilder v39 = v33.append(";code=");
				int v40 = p5.getKeyCode();
				String v41 = KeyEvent.keyCodeToString(v40);
				StringBuilder v42 = v33.append(v41);
				String v43 = v33.toString();
				MediaSessionService v44 = MediaSessionRecord.-$$Nest$fgetmService(this.this$0);
				int v45 = this.this$0.getUid();
				String v46 = this.this$0.getPackageName();
				v44.tempAllowlistTargetPkgIfPossible(v45, v46, p2, p3, p1, v43);
				if (p4 == 0) {
					Context v48 = MediaSessionRecord.-$$Nest$fgetmContext(this.this$0);
					String v49 = v48.getPackageName();
					int v50 = Process.myPid();
					Intent v51 = MediaSessionRecord$SessionCb.createMediaButtonIntent(p5);
					this.mCb.onMediaButton(v49, v50, 1000, v51, p6, p7);
					int v53 = Log.e("MediaSessionRecord", "Remote failure in sendMediaRequest.", caughtException);
					boolean v30 = 0;
					boolean v29 = v30;
					Binder.restoreCallingIdentity(v3);
					return v29;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean dispatchMediaKeyEventToSessionAsSystemService(String p1, KeyEvent p2, MediaSession$Token p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = p2.getUid();
	UserHandle v8 = UserHandle.getUserHandleForUid(v7);
	int v9 = v8.getIdentifier();
	MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
	if (v10 == 0) {
		MediaSessionRecord v6 = 0;
		MediaSessionRecord v5 = v6;
		StringBuilder v11 = new StringBuilder();
		StringBuilder v13 = v11.append("dispatchMediaKeyEventToSessionAsSystemService, pkg=");
		StringBuilder v14 = v11.append(p1);
		StringBuilder v15 = v11.append(", pid=");
		StringBuilder v16 = v11.append(v1);
		StringBuilder v17 = v11.append(", uid=");
		StringBuilder v18 = v11.append(v2);
		StringBuilder v19 = v11.append(", sessionToken=");
		StringBuilder v20 = v11.append(p3);
		StringBuilder v21 = v11.append(", event=");
		StringBuilder v22 = v11.append(p2);
		StringBuilder v23 = v11.append(", session=");
		StringBuilder v24 = v11.append(v5);
		String v25 = v11.toString();
		int v26 = Log.d("MediaSessionService", v25);
		if (v5 != 0) {
			int v29 = p5.getKeyCode();
			boolean v30 = KeyEvent.isMediaSessionKey(v29);
			if (v30 == 0) {
				StringBuilder v31 = new StringBuilder();
				StringBuilder v33 = v31.append("action=");
				int v34 = p5.getAction();
				String v35 = KeyEvent.actionToString(v34);
				StringBuilder v36 = v31.append(v35);
				StringBuilder v37 = v31.append(";code=");
				int v38 = p5.getKeyCode();
				String v39 = KeyEvent.keyCodeToString(v38);
				StringBuilder v40 = v31.append(v39);
				String v41 = v31.toString();
				MediaSessionService v42 = MediaSessionRecord.-$$Nest$fgetmService(this.this$0);
				int v43 = this.this$0.getUid();
				String v44 = this.this$0.getPackageName();
				v42.tempAllowlistTargetPkgIfPossible(v43, v44, p2, p3, p1, v41);
				if (p4 == 0) {
					Context v46 = MediaSessionRecord.-$$Nest$fgetmContext(this.this$0);
					String v47 = v46.getPackageName();
					int v48 = Process.myPid();
					Intent v49 = MediaSessionRecord$SessionCb.createMediaButtonIntent(p5);
					this.mCb.onMediaButton(v47, v48, 1000, v49, p6, p7);
					int v51 = Log.e("MediaSessionRecord", "Remote failure in sendMediaRequest.", caughtException);
					boolean v28 = 0;
					boolean v27 = v28;
					Binder.restoreCallingIdentity(v3);
					return v27;
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean dispatchMediaKeyEventToSessionAsSystemService(String p1, KeyEvent p2, MediaSession$Token p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = p2.getUid();
	UserHandle v8 = UserHandle.getUserHandleForUid(v7);
	int v9 = v8.getIdentifier();
	MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
	if (v10 == 0) {
		MediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
		MediaSessionRecord v12 = v11.getMediaSessionRecord(p2);
		MediaSessionRecord v6 = v12;
		MediaSessionRecord v5 = v6;
		StringBuilder v13 = new StringBuilder();
		StringBuilder v15 = v13.append("dispatchMediaKeyEventToSessionAsSystemService, pkg=");
		StringBuilder v16 = v13.append(p1);
		StringBuilder v17 = v13.append(", pid=");
		StringBuilder v18 = v13.append(v1);
		StringBuilder v19 = v13.append(", uid=");
		StringBuilder v20 = v13.append(v2);
		StringBuilder v21 = v13.append(", sessionToken=");
		StringBuilder v22 = v13.append(p3);
		StringBuilder v23 = v13.append(", event=");
		StringBuilder v24 = v13.append(p2);
		StringBuilder v25 = v13.append(", session=");
		StringBuilder v26 = v13.append(v5);
		String v27 = v13.toString();
		int v28 = Log.d("MediaSessionService", v27);
		if (v5 != 0) {
			int v29 = Log.w("MediaSessionService", "Failed to find session to dispatch key event.");
			Binder.restoreCallingIdentity(v3);
			return 0;
		}
	}
}

and the following sink code:
['int v7 = p2.getUid();\nUserHandle v8 = UserHandle.getUserHandleForUid(v7);\nint v9 = v8.getIdentifier();\nMediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);', 'StringBuilder v13 = new StringBuilder();\nStringBuilder v15 = v13.append("dispatchMediaKeyEventToSessionAsSystemService, pkg=");\nStringBuilder v16 = v13.append(p1);\nStringBuilder v17 = v13.append(", pid=");\nStringBuilder v18 = v13.append(v1);\nStringBuilder v19 = v13.append(", uid=");\nStringBuilder v20 = v13.append(v2);\nStringBuilder v21 = v13.append(", sessionToken=");\nStringBuilder v22 = v13.append(p3);\nStringBuilder v23 = v13.append(", event=");\nStringBuilder v24 = v13.append(p2);\nStringBuilder v25 = v13.append(", session=");\nStringBuilder v26 = v13.append(v5);\nString v27 = v13.toString();\nint v28 = Log.d("MediaSessionService", v27);', 'int v29 = p2.getKeyCode();\nboolean v30 = KeyEvent.isMediaSessionKey(v29);\nStringBuilder v31 = new StringBuilder();\nStringBuilder v33 = v31.append("action=");\nint v34 = p5.getAction();\nString v35 = KeyEvent.actionToString(v34);\nStringBuilder v36 = v31.append(v35);\nStringBuilder v37 = v31.append(";code=");\nint v38 = p5.getKeyCode();\nString v39 = KeyEvent.keyCodeToString(v38);\nStringBuilder v40 = v31.append(v39);\nString v41 = v31.toString();', 'MediaSessionService v42 = MediaSessionRecord.-$$Nest$fgetmService(this.this$0);\nint v43 = this.this$0.getUid();\nString v44 = this.this$0.getPackageName();\nv42.tempAllowlistTargetPkgIfPossible(v43, v44, p2, p3, p1, v41);', 'Context v46 = MediaSessionRecord.-$$Nest$fgetmContext(this.this$0);\nString v47 = v46.getPackageName();\nint v48 = Process.myPid();\nIntent v49 = MediaSessionRecord$SessionCb.createMediaButtonIntent(p5);\nthis.mCb.onMediaButton(v47, v48, 1000, v49, p6, p7);']

The method dispatchMediaKeyEventToSessionAsSystemService has the following similar APIs:

- API Name: dispatchVolumeKeyEventToSessionAsSystemService(Ljava/lang/String;Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)V with Similarity Score: 0.9439625144004822
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = p2.getUid();
UserHandle v8 = UserHandle.getUserHandleForUid(v7);
MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
MediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
MediaSessionRecord v12 = v11.getMediaSessionRecord(p2);

- API Name: getSessionPolicies(Landroid/media/session/MediaSession$Token;)I with Similarity Score: 0.9155466556549072
  - Access Control Level: NONE and the following code:
int v4 = p2.getUid();
UserHandle v5 = UserHandle.getUserHandleForUid(v4);
int v6 = v5.getIdentifier();
MediaSessionService$FullUserRecord v7 = MediaSessionService.getFullUserRecordLocked(v6);
if (v7 == 0) {
MediaSessionStack v8 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v7);
MediaSessionRecord v9 = v8.getMediaSessionRecord(p2);
MediaSessionRecord v3 = v9;
MediaSessionRecord v2 = v3;
if (v2 == 0) {
int v10 = v2.getSessionPolicies();
return v10;

