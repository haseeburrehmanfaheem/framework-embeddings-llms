This is path 1 for the API with depth 2:
public void addSessionsListener(IActiveSessionsListener p1, ComponentName p2, int p3){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		long v3 = Binder.clearCallingIdentity();
		if (p2 == 0) {
			String v5 = p2.getPackageName();
			this.this$0.enforcePackageName(v5, p4);
			int v14 = ActivityManager.getCurrentUser();
			int v8 = v14;
			int v4 = v8;
			Object v16 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
			int v19 = this.mSessionsListeners.size();
			if ( < 0) {
				Object v20 = this.mSessionsListeners.get();
				IBinder v21 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
				IBinder v22 = p2.asBinder();
				if (v21 != v22) {
					int v18 = ;
					int v17 = v18;
					if (v17 == -1) {
						MediaSessionService$SessionsListenerRecord v23 = new MediaSessionService$SessionsListenerRecord(this.this$0,p1,p2,v4,v1,v2);
						IBinder v25 = p1.asBinder();
						v25.linkToDeath(v23, 0);
						ArrayList v27 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
						boolean v28 = v27.add(v23);
						Binder.restoreCallingIdentity(v3);
						return;
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void addSessionsListener(IActiveSessionsListener p1, ComponentName p2, int p3){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		long v3 = Binder.clearCallingIdentity();
		if (p2 == 0) {
			String v5 = p2.getPackageName();
			this.this$0.enforcePackageName(v5, p4);
			int v14 = ActivityManager.getCurrentUser();
			int v8 = v14;
			int v4 = v8;
			Object v16 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
			int v19 = this.mSessionsListeners.size();
			if ( < 0) {
				Object v20 = this.mSessionsListeners.get();
				IBinder v21 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
				IBinder v22 = p2.asBinder();
				if (v21 != v22) {
					int v18 = ;
					int v17 = v18;
					if (v17 == -1) {
						MediaSessionService$SessionsListenerRecord v23 = new MediaSessionService$SessionsListenerRecord(this.this$0,p1,p2,v4,v1,v2);
						IBinder v25 = p1.asBinder();
						v25.linkToDeath(v23, 0);
						int v27 = Log.e("MediaSessionService", "ActiveSessionsListener is dead, ignoring it", caughtException);
						Binder.restoreCallingIdentity(v3);
						return;
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void addSessionsListener(IActiveSessionsListener p1, ComponentName p2, int p3){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		long v3 = Binder.clearCallingIdentity();
		if (p2 == 0) {
			String v5 = p2.getPackageName();
			this.this$0.enforcePackageName(v5, p4);
			int v14 = ActivityManager.getCurrentUser();
			int v8 = v14;
			int v4 = v8;
			Object v16 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
			int v19 = this.mSessionsListeners.size();
			if ( < 0) {
				Object v20 = this.mSessionsListeners.get();
				IBinder v21 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
				IBinder v22 = p2.asBinder();
				if (v21 != v22) {
					int v18 = ;
					int v17 = v18;
					if (v17 == -1) {
						MediaSessionService$SessionsListenerRecord v23 = new MediaSessionService$SessionsListenerRecord(this.this$0,p1,p2,v4,v1,v2);
						IBinder v25 = p1.asBinder();
						v25.linkToDeath(v23, 0);
						ArrayList v27 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
						boolean v28 = v27.add(v23);
						Binder.restoreCallingIdentity(v3);
						return;
					}
				}
			}
		}
	}
}
