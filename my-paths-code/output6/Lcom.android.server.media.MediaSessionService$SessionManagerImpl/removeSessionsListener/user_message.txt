This is path 1 for the API with depth 2:
public void removeSessionsListener(IActiveSessionsListener p1){
	Object v1 = this.mLock;
	int v4 = this.mSessionsListeners.size();
	if ( < 0) {
		Object v5 = this.mSessionsListeners.get();
		IBinder v6 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
		IBinder v7 = p2.asBinder();
		if (v6 != v7) {
			int v3 = ;
			int v2 = v3;
			if (v2 == -1) {
				ArrayList v8 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
				Object v9 = v8.remove(v2);
				IBinder v10 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
				boolean v11 = v10.unlinkToDeath(v9, 0);
				return;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void removeSessionsListener(IActiveSessionsListener p1){
	Object v1 = this.mLock;
	int v4 = this.mSessionsListeners.size();
	if ( < 0) {
		Object v5 = this.mSessionsListeners.get();
		IBinder v6 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
		IBinder v7 = p2.asBinder();
		if (v6 != v7) {
			int v3 = ;
			int v2 = v3;
			if (v2 == -1) {
				ArrayList v8 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
				Object v9 = v8.remove(v2);
				IBinder v10 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
				return;
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void removeSessionsListener(IActiveSessionsListener p1){
	Object v1 = this.mLock;
	int v4 = this.mSessionsListeners.size();
	if ( < 0) {
		Object v5 = this.mSessionsListeners.get();
		IBinder v6 = MediaSessionService$SessionsListenerRecord.listener.asBinder();
		IBinder v7 = p2.asBinder();
		if (v6 != v7) {
			int v3 = ;
			int v2 = v3;
			if (v2 == -1) {
				ArrayList v8 = MediaSessionService.-$$Nest$fgetmSessionsListeners(this.this$0);
				Object v9 = v8.remove(v2);
				return;
			}
		}
	}
}
