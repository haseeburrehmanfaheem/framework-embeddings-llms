This is path 1 for the API with depth 2:
public void addOnMediaKeyEventSessionChangedListener(IOnMediaKeyEventSessionChangedListener p1, String p2){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		UserHandle v3 = UserHandle.getUserHandleForUid(v2);
		int v4 = v3.getIdentifier();
		long v5 = Binder.clearCallingIdentity();
		if (v12 == 0) {
			Object v14 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
			int v17 = this.mFullUserIds.get(p2, -1);
			if (v17 >= 0) {
				Object v18 = this.mUserRecords.get(v17);
				MediaSessionService$FullUserRecord v16 = v18;
				MediaSessionService$FullUserRecord v15 = v16;
				if (v15 == 0) {
					StringBuilder v19 = new StringBuilder();
					StringBuilder v21 = v19.append("Only the full user can add the listener, userId=");
					StringBuilder v22 = v19.append(v4);
					String v23 = v19.toString();
					int v24 = Log.w("MediaSessionService", v23);
					Binder.restoreCallingIdentity(v5);
					return;
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void addOnMediaKeyEventSessionChangedListener(IOnMediaKeyEventSessionChangedListener p1, String p2){
	if (p1 != 0) {
		int v1 = Binder.getCallingPid();
		int v2 = Binder.getCallingUid();
		UserHandle v3 = UserHandle.getUserHandleForUid(v2);
		int v4 = v3.getIdentifier();
		long v5 = Binder.clearCallingIdentity();
		if (v12 == 0) {
			Object v14 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
			int v17 = this.mFullUserIds.get(p2, -1);
			if (v17 >= 0) {
				MediaSessionService$FullUserRecord v16 = 0;
				MediaSessionService$FullUserRecord v15 = v16;
				if (v15 == 0) {
					StringBuilder v18 = new StringBuilder();
					StringBuilder v20 = v18.append("Only the full user can add the listener, userId=");
					StringBuilder v21 = v18.append(v4);
					String v22 = v18.toString();
					int v23 = Log.w("MediaSessionService", v22);
					Binder.restoreCallingIdentity(v5);
					return;
				}
			}
		}
	}
}
