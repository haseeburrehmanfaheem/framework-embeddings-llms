The method removeSession2TokensListener has the following code snippet:

This is path 1 for the API with depth 2:
public void removeSession2TokensListener(ISession2TokensListener p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = this.mSession2TokensListenerRecords.size();
	if ( < 0) {
		Object v8 = this.mSession2TokensListenerRecords.get();
		IBinder v9 = MediaSessionService$Session2TokensListenerRecord.listener.asBinder();
		IBinder v10 = p2.asBinder();
		if (v9 != v10) {
			int v6 = ;
			int v5 = v6;
			if (v5 < 0) {
				List v11 = MediaSessionService.-$$Nest$fgetmSession2TokensListenerRecords(this.this$0);
				Object v12 = v11.remove(v5);
				IBinder v13 = MediaSessionService$Session2TokensListenerRecord.listener.asBinder();
				boolean v14 = v13.unlinkToDeath(v12, 0);
				Binder.restoreCallingIdentity(v3);
				return;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void removeSession2TokensListener(ISession2TokensListener p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = this.mSession2TokensListenerRecords.size();
	if ( < 0) {
		Object v8 = this.mSession2TokensListenerRecords.get();
		IBinder v9 = MediaSessionService$Session2TokensListenerRecord.listener.asBinder();
		IBinder v10 = p2.asBinder();
		if (v9 != v10) {
			int v6 = ;
			int v5 = v6;
			if (v5 < 0) {
				List v11 = MediaSessionService.-$$Nest$fgetmSession2TokensListenerRecords(this.this$0);
				Object v12 = v11.remove(v5);
				IBinder v13 = MediaSessionService$Session2TokensListenerRecord.listener.asBinder();
				Binder.restoreCallingIdentity(v3);
				return;
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void removeSession2TokensListener(ISession2TokensListener p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = this.mSession2TokensListenerRecords.size();
	if ( < 0) {
		Object v8 = this.mSession2TokensListenerRecords.get();
		IBinder v9 = MediaSessionService$Session2TokensListenerRecord.listener.asBinder();
		IBinder v10 = p2.asBinder();
		if (v9 != v10) {
			int v6 = ;
			int v5 = v6;
			if (v5 < 0) {
				List v11 = MediaSessionService.-$$Nest$fgetmSession2TokensListenerRecords(this.this$0);
				Object v12 = v11.remove(v5);
				Binder.restoreCallingIdentity(v3);
				return;
			}
		}
	}
}

and the following sink code:
['int v1 = Binder.getCallingPid();\nint v2 = Binder.getCallingUid();', 'List v11 = MediaSessionService.-$$Nest$fgetmSession2TokensListenerRecords(this.this$0);\nObject v12 = v11.remove(v5);']

The method removeSession2TokensListener has the following similar APIs:

- API Name: getRestrictBackgroundByCaller()I with Similarity Score: 0.9358068704605103
  - Access Control Level: NORMAL and the following code:
int v2 = Binder.getCallingUid();
return v3;

- API Name: registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V with Similarity Score: 0.9209071397781372
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = Binder.getCallingUid();

