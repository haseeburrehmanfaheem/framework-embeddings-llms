The method dispatchAdjustVolume has the following code snippet:

This is path 1 for the API with depth 2:
public void dispatchAdjustVolume(String p1, String p2, int p3, int p4, int p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	boolean v7 = this.this$0.isGlobalPriorityActiveLocked();
	boolean v6 = v7;
	if (v6 == 0) {
		MediaSessionRecord v8 = this.mGlobalPrioritySession;
		boolean v9 = MediaSessionService$SessionManagerImpl.isValidLocalStreamType(p3);
		if (v9 == 0) {
			boolean v10 = AudioSystem.isStreamActive(p3, 0);
			if (v10 == 0) {
				if ( == 0) {
					if ( == 0) {
						StringBuilder v11 = new StringBuilder();
						StringBuilder v13 = v11.append("Adjusting suggestedStream=");
						StringBuilder v14 = v11.append(p3);
						StringBuilder v15 = v11.append(" by ");
						StringBuilder v16 = v11.append(p4);
						StringBuilder v17 = v11.append(". flags=");
						StringBuilder v18 = v11.append(p5);
						StringBuilder v19 = v11.append(", preferSuggestedStream=");
						StringBuilder v20 = v11.append();
						StringBuilder v21 = v11.append(", session=");
						StringBuilder v22 = v11.append();
						String v23 = v11.toString();
						int v24 = Log.d("MediaSessionService", v23);
						if (0 == 0) {
							boolean v25 = AudioSystem.isStreamActive(3, 0);
							if (v25 != 0) {
								MediaSessionService$MessageHandler v26 = this.mHandler;
								MediaSessionService$SessionManagerImpl$3 v27 = new MediaSessionService$SessionManagerImpl$3(MediaSessionService$SessionManagerImpl,0,p2,v2,v1,p3,p4,p5,p1);
								boolean v29 = v26.post(v27);
								Binder.restoreCallingIdentity(v3);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void dispatchAdjustVolume(String p1, String p2, int p3, int p4, int p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	boolean v7 = this.this$0.isGlobalPriorityActiveLocked();
	boolean v6 = v7;
	if (v6 == 0) {
		MediaSessionRecord v8 = this.mGlobalPrioritySession;
		boolean v9 = MediaSessionService$SessionManagerImpl.isValidLocalStreamType(p3);
		if (v9 == 0) {
			boolean v10 = AudioSystem.isStreamActive(p3, 0);
			if (v10 == 0) {
				if ( == 0) {
					if ( == 0) {
						StringBuilder v11 = new StringBuilder();
						StringBuilder v13 = v11.append("Adjusting suggestedStream=");
						StringBuilder v14 = v11.append(p3);
						StringBuilder v15 = v11.append(" by ");
						StringBuilder v16 = v11.append(p4);
						StringBuilder v17 = v11.append(". flags=");
						StringBuilder v18 = v11.append(p5);
						StringBuilder v19 = v11.append(", preferSuggestedStream=");
						StringBuilder v20 = v11.append();
						StringBuilder v21 = v11.append(", session=");
						StringBuilder v22 = v11.append();
						String v23 = v11.toString();
						int v24 = Log.d("MediaSessionService", v23);
						if (0 == 0) {
							boolean v25 = AudioSystem.isStreamActive(3, 0);
							if (v25 != 0) {
								StringBuilder v26 = new StringBuilder();
								StringBuilder v28 = v26.append("Nothing is playing on the music stream. Skipping volume event, flags=");
								StringBuilder v29 = v26.append(p5);
								String v30 = v26.toString();
								int v31 = Log.d("MediaSessionService", v30);
								Binder.restoreCallingIdentity(v3);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['MediaSessionService$SessionManagerImpl$3 v27 = new MediaSessionService$SessionManagerImpl$3(MediaSessionService$SessionManagerImpl,0,p2,v2,v1,p3,p4,p5,p1);\nboolean v29 = v26.post(v27);']

The method dispatchAdjustVolume has the following similar APIs:

- API Name: addSessionsListener(Landroid/media/session/IActiveSessionsListener;Landroid/content/ComponentName;I)V with Similarity Score: 0.8028416633605957
  - Access Control Level: SYS_OR_SIG and the following code:
MediaSessionService$SessionsListenerRecord v23 = new MediaSessionService$SessionsListenerRecord(this.this$0,p1,p2,v4,v1,v2);
IBinder v25 = p1.asBinder();
v25.linkToDeath(v23, 0);

- API Name: createSession(Ljava/lang/String;Landroid/media/session/ISessionCallback;Ljava/lang/String;Landroid/os/Bundle;I)Landroid/media/session/ISession; with Similarity Score: 0.7828744649887085
  - Access Control Level: SYS_OR_SIG and the following code:
MediaSessionRecord v19 = new MediaSessionRecord(p2,p3,p4,p5,p6,p7,p8,MediaSessionService,v20,);
ISession v35 = v12.getSessionBinder();
return v35;

