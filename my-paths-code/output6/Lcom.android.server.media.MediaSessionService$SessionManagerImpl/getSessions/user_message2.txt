The method getSessions has the following code snippet:

This is path 1 for the API with depth 2:
public List getSessions(ComponentName p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	if (p1 == 0) {
		String v5 = p1.getPackageName();
		this.this$0.enforcePackageName(v5, p4);
		int v14 = ActivityManager.getCurrentUser();
		int v8 = v14;
		int v4 = v8;
		ArrayList v16 = new ArrayList();
		Object v18 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
		MediaSessionService$FullUserRecord v24 = MediaSessionService.getFullUserRecordLocked(p2);
		if (v24 != 0) {
			StringBuilder v25 = new StringBuilder();
			StringBuilder v27 = v25.append("getSessions failed. Unknown user ");
			StringBuilder v28 = v25.append(p2);
			String v29 = v25.toString();
			int v30 = Log.w("MediaSessionService", v29);
			List v20 = v21;
			List v19 = v20;
			Iterator v31 = v19.iterator();
			boolean v32 = v31.hasNext();
			if (v32 == 0) {
				Binder.restoreCallingIdentity(v3);
				return v16;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getSessions(ComponentName p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	if (p1 == 0) {
		String v5 = p1.getPackageName();
		this.this$0.enforcePackageName(v5, p4);
		int v14 = ActivityManager.getCurrentUser();
		int v8 = v14;
		int v4 = v8;
		ArrayList v16 = new ArrayList();
		Object v18 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
		MediaSessionService$FullUserRecord v24 = MediaSessionService.getFullUserRecordLocked(p2);
		if (v24 != 0) {
			StringBuilder v25 = new StringBuilder();
			StringBuilder v27 = v25.append("getSessions failed. Unknown user ");
			StringBuilder v28 = v25.append(p2);
			String v29 = v25.toString();
			int v30 = Log.w("MediaSessionService", v29);
			List v20 = v21;
			List v19 = v20;
			Iterator v31 = v19.iterator();
			boolean v32 = v31.hasNext();
			if (v32 == 0) {
				Binder.restoreCallingIdentity(v3);
				return v16;
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getSessions(ComponentName p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	if (p1 == 0) {
		String v5 = p1.getPackageName();
		this.this$0.enforcePackageName(v5, p4);
		int v14 = ActivityManager.getCurrentUser();
		int v8 = v14;
		int v4 = v8;
		ArrayList v16 = new ArrayList();
		Object v18 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);
		int v24 = this.mUserRecords.size();
		if ( >= v24) {
			boolean v25 = MediaSessionService.isGlobalPriorityActiveLocked();
			if (v25 == 0) {
				List v20 = v21;
				List v19 = v20;
				Iterator v26 = v19.iterator();
				boolean v27 = v26.hasNext();
				if (v27 == 0) {
					Binder.restoreCallingIdentity(v3);
					return v16;
				}
			}
		}
	}
}

and the following sink code:
['ArrayList v16 = new ArrayList();\nObject v18 = MediaSessionService.-$$Nest$fgetmLock(this.this$0);\nreturn v16;', 'MediaSessionService$FullUserRecord v24 = MediaSessionService.getFullUserRecordLocked(p2);']

The method getSessions has the following similar APIs:

- API Name: dispatchMediaKeyEventToSessionAsSystemService(Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)Z with Similarity Score: 0.8137244582176208
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = p2.getUid();
UserHandle v8 = UserHandle.getUserHandleForUid(v7);
int v9 = v8.getIdentifier();
MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);

- API Name: setSessionPolicies(Landroid/media/session/MediaSession$Token;I)V with Similarity Score: 0.8001483082771301
  - Access Control Level: NONE and the following code:
MediaSessionStack v9 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v8);
MediaSessionRecord v10 = v9.getMediaSessionRecord(p2);

