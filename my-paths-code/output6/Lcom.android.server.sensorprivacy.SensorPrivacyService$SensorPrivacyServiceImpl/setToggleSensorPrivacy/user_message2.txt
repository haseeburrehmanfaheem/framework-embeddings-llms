The method setToggleSensorPrivacy has the following code snippet:

This is path 1 for the API with depth 2:
public void setToggleSensorPrivacy(int p1, int p2, int p3, boolean p4){
	if (p1 != -2) {
		int v2 = this.mCurrentUser;
		if (p3 != 1) {
			SensorPrivacyService$CallStateHelper v4 = this.mCallStateHelper;
			boolean v5 = this.mIsInEmergencyCall;
			if (v5 == 0) {
				Context v8 = SensorPrivacyService.-$$Nest$fgetmContext(this.this$0);
				Resources v9 = v8.getResources();
				boolean v10 = v9.getBoolean(17891749);
				boolean v6 = v10;
				if (v6 == 0) {
					KeyguardManager v11 = this.mKeyguardManager;
					if (v11 == 0) {
						KeyguardManager v12 = this.mKeyguardManager;
						boolean v13 = v12.isDeviceLocked();
						if (v13 == 0) {
							String v14 = this.TAG;
							int v15 = Log.i(v14, "Can't change mic/cam toggle while device is locked");
							boolean v3 = 0;
							if (v3 != 0) {
								p0.setToggleSensorPrivacyUnchecked(1, , p2, p3, p4);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setToggleSensorPrivacy(int p1, int p2, int p3, boolean p4){
	if (p1 != -2) {
		int v2 = this.mCurrentUser;
		if (p3 != 1) {
			SensorPrivacyService$CallStateHelper v4 = this.mCallStateHelper;
			boolean v5 = this.mIsInEmergencyCall;
			if (v5 == 0) {
				Context v8 = SensorPrivacyService.-$$Nest$fgetmContext(this.this$0);
				Resources v9 = v8.getResources();
				boolean v10 = v9.getBoolean(17891749);
				boolean v6 = v10;
				if (v6 == 0) {
					KeyguardManager v11 = this.mKeyguardManager;
					if (v11 == 0) {
						KeyguardManager v12 = this.mKeyguardManager;
						boolean v13 = v12.isDeviceLocked();
						if (v13 == 0) {
							String v14 = this.TAG;
							int v15 = Log.i(v14, "Can't change mic/cam toggle while device is locked");
							boolean v3 = 0;
							if (v3 != 0) {
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void setToggleSensorPrivacy(int p1, int p2, int p3, boolean p4){
	if (p1 != -2) {
		if (p3 != 1) {
			SensorPrivacyService$CallStateHelper v3 = this.mCallStateHelper;
			boolean v4 = this.mIsInEmergencyCall;
			if (v4 == 0) {
				Context v7 = SensorPrivacyService.-$$Nest$fgetmContext(this.this$0);
				Resources v8 = v7.getResources();
				boolean v9 = v8.getBoolean(17891749);
				boolean v5 = v9;
				if (v5 == 0) {
					KeyguardManager v10 = this.mKeyguardManager;
					if (v10 == 0) {
						KeyguardManager v11 = this.mKeyguardManager;
						boolean v12 = v11.isDeviceLocked();
						if (v12 == 0) {
							String v13 = this.TAG;
							int v14 = Log.i(v13, "Can't change mic/cam toggle while device is locked");
							boolean v2 = 0;
							if (v2 != 0) {
								p0.setToggleSensorPrivacyUnchecked(1, , p2, p3, p4);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['p0.setToggleSensorPrivacyUnchecked(1, , p2, p3, p4);']

The method setToggleSensorPrivacy has the following similar APIs:

- API Name: setSensorPrivacy(Z)V with Similarity Score: 0.7436105012893677
  - Access Control Level: NONE and the following code:
this.mSensorPrivacyStateController.setAllSensorState(p1);

