The method supportsSensorToggle has the following code snippet:

This is path 1 for the API with depth 1:
public boolean supportsSensorToggle(int p1, int p2){
	if (p1 != 1) {
		if (p1 != 2) {
			if (p2 != 1) {
				if (p2 != 2) {
					Context v1 = this.mContext;
					Resources v2 = v1.getResources();
					boolean v3 = v2.getBoolean(17891790);
					return v3;
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public boolean supportsSensorToggle(int p1, int p2){
	if (p1 != 1) {
		if (p2 != 1) {
			if (p2 != 2) {
				Context v1 = this.mContext;
				Resources v2 = v1.getResources();
				boolean v3 = v2.getBoolean(17891788);
				return v3;
			}
		}
	}
}

and the following sink code:
['Context v1 = this.mContext;\nResources v2 = v1.getResources();\nboolean v3 = v2.getBoolean(17891790);\nreturn v3;', 'Context v1 = this.mContext;\nResources v2 = v1.getResources();\nboolean v3 = v2.getBoolean(17891788);\nreturn v3;']

The method supportsSensorToggle has the following similar APIs:

- API Name: getWhitelistedRuleProviders()Ljava/util/List; with Similarity Score: 0.8222954869270325
  - Access Control Level: NONE and the following code:
Resources v2 = this.mContext.getResources();
String v3 = v2.getStringArray(17236075);
List v4 = Arrays.asList(v3);
ArrayList v5 = new ArrayList();
Iterator v7 = v4.iterator();
boolean v8 = v7.hasNext();
if (v8 == 0) { List v1 = v5; return v1; }

- API Name: getWhitelistedRuleProviders()Ljava/util/List; with Similarity Score: 0.8188104629516602
  - Access Control Level: NONE and the following code:
Resources v2 = this.mContext.getResources();
String v3 = v2.getStringArray(17236075);
List v4 = Arrays.asList(v3);
ArrayList v5 = new ArrayList();
Iterator v7 = v4.iterator();
boolean v8 = v7.hasNext();
if (v8 == 0) { List v1 = v5; return v1; }

