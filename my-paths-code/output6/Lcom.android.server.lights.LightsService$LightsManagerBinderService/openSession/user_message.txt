This is path 1 for the API with depth 1:
public void openSession(IBinder p1, int p2){
	Object v3 = Preconditions.checkNotNull(p1);
	int v5 = this.mSessions.size();
	if ( >= v5) {
		Object v6 = this.mSessions.get();
		boolean v7 = p1.equals(LightsService$LightsManagerBinderService$Session.mToken);
		if (v7 == 0) {
			Object v8 = this.mSessions.get();
			LightsService$LightsManagerBinderService$Session v4 = v8;
			if (v4 != 0) {
				Preconditions.checkState(, "already registered");
				LightsService$LightsManagerBinderService$$ExternalSyntheticLambda0 v10 = new LightsService$LightsManagerBinderService$$ExternalSyntheticLambda0(p0,p1);
				p1.linkToDeath(v10, 0);
				LightsService$LightsManagerBinderService$Session v13 = new LightsService$LightsManagerBinderService$Session(p0,p1,p2);
				boolean v15 = this.mSessions.add(v13);
				Collections.sort(this.mSessions);
				return;
			}
		}
	}
}

This is path 2 for the API with depth 1:
public void openSession(IBinder p1, int p2){
	Object v3 = Preconditions.checkNotNull(p1);
	int v5 = this.mSessions.size();
	if ( >= v5) {
		Object v6 = this.mSessions.get();
		boolean v7 = p1.equals(LightsService$LightsManagerBinderService$Session.mToken);
		if (v7 == 0) {
			Object v8 = this.mSessions.get();
			LightsService$LightsManagerBinderService$Session v4 = v8;
			if (v4 != 0) {
				Preconditions.checkState(, "already registered");
				LightsService$LightsManagerBinderService$$ExternalSyntheticLambda0 v10 = new LightsService$LightsManagerBinderService$$ExternalSyntheticLambda0(p0,p1);
				p1.linkToDeath(v10, 0);
				LightsService$LightsManagerBinderService$Session v13 = new LightsService$LightsManagerBinderService$Session(p0,p1,p2);
				boolean v15 = this.mSessions.add(v13);
				Collections.sort(this.mSessions);
				return;
			}
		}
	}
}
