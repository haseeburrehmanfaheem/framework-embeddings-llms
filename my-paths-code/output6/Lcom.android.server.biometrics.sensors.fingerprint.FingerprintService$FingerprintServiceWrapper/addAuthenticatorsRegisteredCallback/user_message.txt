This is path 1 for the API with depth 2:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = this.mLock;
		RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
		boolean v5 = v4.register(p1);
		List v6 = this.mSensorProps;
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if ( == 0) {
					ArrayList v10 = new ArrayList();
					boolean v12 = this.mSensorProps.isEmpty();
					if (v12 != 0) {
						ArrayList v13 = new ArrayList(this.mSensorProps);
						int v15 = this.mAuthenticatorsRegisteredCallbacks.beginBroadcast();
						if ( >= v15) {
							this.mAuthenticatorsRegisteredCallbacks.finishBroadcast();
							Iterator v17 = v10.iterator();
							boolean v18 = v17.hasNext();
							if (v18 == 0) {
								return;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = this.mLock;
		RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
		boolean v5 = v4.register(p1);
		List v6 = this.mSensorProps;
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if ( == 0) {
					ArrayList v10 = new ArrayList();
					boolean v12 = this.mSensorProps.isEmpty();
					if (v12 != 0) {
						ArrayList v13 = new ArrayList(this.mSensorProps);
						int v15 = this.mAuthenticatorsRegisteredCallbacks.beginBroadcast();
						if ( >= v15) {
							this.mAuthenticatorsRegisteredCallbacks.finishBroadcast();
							Iterator v17 = v10.iterator();
							boolean v18 = v17.hasNext();
							if (v18 == 0) {
								return;
							}
						}
					}
				}
			}
		}
	}
}
