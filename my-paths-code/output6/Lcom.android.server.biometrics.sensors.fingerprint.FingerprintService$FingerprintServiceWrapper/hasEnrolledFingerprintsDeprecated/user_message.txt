This is path 1 for the API with depth 2:
public boolean hasEnrolledFingerprintsDeprecated(int p1, String p2, String p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = UserHandle.getCallingUserId();
	Context v11 = FingerprintService.getContext();
	boolean v12 = Utils.isKeyguard(v11, p2);
	if (v12 == 0) {
		Context v13 = FingerprintService.getContext();
		boolean v14 = Utils.isCurrentUserOrProfile(v13, p7);
		if (v14 != 0) {
			boolean v15 = FingerprintService.checkAppOps(p5, p2, p3);
			if (v15 != 0) {
				if (p4 == 0) {
					boolean v16 = Utils.isForeground(p5, p6);
					if (v16 != 0) {
						boolean v5 = 0;
						boolean v4 = v5;
						if (v4 != 0) {
							return 0;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public boolean hasEnrolledFingerprintsDeprecated(int p1, String p2, String p3){
	Pair v10 = FingerprintService.getSingleProvider();
	if (v10 != 0) {
		List v17 = Collections.emptyList();
		List v9 = v17;
		List v8 = v9;
		boolean v18 = v8.isEmpty();
		return (v18 ^ 1);
	}
}

This is path 3 for the API with depth 2:
public boolean hasEnrolledFingerprintsDeprecated(int p1, String p2, String p3){
	Pair v10 = FingerprintService.getSingleProvider();
	if (v10 != 0) {
		int v11 = Pair.first.intValue();
		List v12 = Pair.second.getEnrolledFingerprints(v11, p2);
		List v9 = v12;
		List v8 = v9;
		boolean v13 = v8.isEmpty();
		return (v13 ^ 1);
	}
}
