The method isHardwareDetected has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				return 0;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		ServiceProvider v4 = 0;
		ServiceProvider v3 = v4;
		if (v3 != 0) {
			return 0;
		}
	}
}
This is path 3 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				boolean v9 = v3.isHardwareDetected(p1);
				return v9;
			}
		}
	}
}

and the following sink code:
['Object v7 = v5.next();\nboolean v8 = v7.containsSensor(p2);\nServiceProvider v4 = v7;\nServiceProvider v3 = v4;\nif (v3 != 0) {\n    boolean v9 = v3.isHardwareDetected(p1);\n    return v9;']

The method isHardwareDetected has the following similar APIs:

- API Name: isHardwareDetected(ILjava/lang/String;)Z with Similarity Score: 0.9482375383377075
  - Access Control Level: NORMAL and the following code:
Object v8 = v6.next();
boolean v9 = v8.containsSensor(p2);
ServiceProvider v5 = v8;
ServiceProvider v4 = v5;
if (v4 != 0) {
    boolean v10 = v4.isHardwareDetected(p1);
    Binder.restoreCallingIdentity(v3);
    return v10;

- API Name: createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession; with Similarity Score: 0.8458105325698853
  - Access Control Level: NORMAL and the following code:
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;
ServiceProvider v3 = v4;
if (v3 != 0) {
ITestSession v9 = v3.createTestSession(p1, p2, p3);
return v9;

