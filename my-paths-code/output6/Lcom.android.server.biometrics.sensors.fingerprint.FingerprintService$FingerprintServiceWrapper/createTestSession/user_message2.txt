The method createTestSession has the following code snippet:

This is path 1 for the API with depth 2:
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				return 0;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		ServiceProvider v4 = 0;
		ServiceProvider v3 = v4;
		if (v3 != 0) {
			return 0;
		}
	}
}
This is path 3 for the API with depth 2:
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				ITestSession v9 = v3.createTestSession(p1, p2, p3);
				return v9;
			}
		}
	}
}

and the following sink code:
['Iterator v5 = this.mServiceProviders.iterator();\nObject v7 = v5.next();\nboolean v8 = v7.containsSensor(p2);\nServiceProvider v4 = v7;\nServiceProvider v3 = v4;\nITestSession v9 = v3.createTestSession(p1, p2, p3);\nreturn v9;']

The method createTestSession has the following similar APIs:

- API Name: createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession; with Similarity Score: 0.857048749923706
  - Access Control Level: NORMAL and the following code:
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;
ServiceProvider v3 = v4;
if (v3 != 0) {
ITestSession v9 = v3.createTestSession(p1, p2, p3);
return v9;

- API Name: startPreparedClient(II)V with Similarity Score: 0.8492485284805298
  - Access Control Level: NORMAL and the following code:
Iterator v5 = this.mServiceProviders.iterator();
boolean v6 = v5.hasNext();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;

