The method isPrintServiceEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isPrintServiceEnabled(ComponentName p1, int p2){
	if (1 == 0) {
		boolean v11 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v11 == 0) {
			Object v12 = this.mUserStates.get(p1);
			if (v12 != 0) {
				UserState v13 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v13);
				if (p2 != 0) {
					.increasePriority();
					UserState v10 = ;
					UserState v9 = v10;
					boolean v17 = v9.isPrintServiceEnabled(p1);
					return v17;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isPrintServiceEnabled(ComponentName p1, int p2){
	if (1 == 0) {
		boolean v9 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v9 == 0) {
			Object v10 = this.mUserStates.get(p1);
			if (v10 != 0) {
				UserState v11 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v11);
				if (p2 != 0) {
					.increasePriority();
					UserState v8 = ;
					UserState v7 = v8;
					boolean v15 = v7.isPrintServiceEnabled(p1);
					return v15;
				}
			}
		}
	}
}

and the following sink code:
['boolean v11 = this.mUserManager.isUserUnlockingOrUnlocked(p1);\nObject v12 = this.mUserStates.get(p1);\nUserState v13 = new UserState(this.mContext,p1,this.mLock,p2);\nthis.mUserStates.put(p1, v13);\nboolean v17 = v9.isPrintServiceEnabled(p1);']

The method isPrintServiceEnabled has the following similar APIs:

- API Name: validatePrinters(Ljava/util/List;I)V with Similarity Score: 0.9607245922088623
  - Access Control Level: NONE and the following code:
boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v8 = this.mUserStates.get(p1);
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);

- API Name: cancelPrintJob(Landroid/print/PrintJobId;II)V with Similarity Score: 0.9551790952682495
  - Access Control Level: NONE and the following code:
boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v8 = this.mUserStates.get(p1);
UserState v9 = new UserState(this.mContext, p1, this.mLock, p2);
this.mUserStates.put(p1, v9);

