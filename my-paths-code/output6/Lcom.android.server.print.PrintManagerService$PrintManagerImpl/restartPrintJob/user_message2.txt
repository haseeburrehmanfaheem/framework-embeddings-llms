The method restartPrintJob has the following code snippet:

This is path 1 for the API with depth 2:
public void restartPrintJob(PrintJobId p1, int p2, int p3){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(p1);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v10);
				if (p2 != 0) {
					.increasePriority();
					UserState v7 = ;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					PrintJobInfo v17 = this.mPrintJobForAppCache.getPrintJob(p1, p2);
					if (v17 != 0) {
						PrintJobInfo v18 = this.mSpooler.getPrintJobInfo(p1, p2);
						if ( == 0) {
							.setTag(0);
							.setAdvancedOptions(0);
							PrintJobInfo v16 = ;
							if (v16 == 0) {
								int v21 = this.mState;
								if (v21 == 6) {
									RemotePrintSpooler.throwIfCalledOnMainThread();
									RemotePrintSpooler.throwIfDestroyedLocked();
									this.mCanUnbind = 0;
									IPrintSpooler v25 = RemotePrintSpooler.getRemoteInstanceLazy();
									boolean v26 = this.mSetPrintJobStatusCaller.setPrintJobState(v25, p1, 2, 0);
									this.mCanUnbind = 1;
									this.mLock.notifyAll();
									boolean v22 = v26;
									Binder.restoreCallingIdentity(v14);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void restartPrintJob(PrintJobId p1, int p2, int p3){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(p1);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v10);
				if (p2 != 0) {
					.increasePriority();
					UserState v7 = ;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					PrintJobInfo v17 = this.mPrintJobForAppCache.getPrintJob(p1, p2);
					if (v17 != 0) {
						PrintJobInfo v18 = this.mSpooler.getPrintJobInfo(p1, p2);
						if ( == 0) {
							PrintJobInfo v16 = ;
							if (v16 == 0) {
								int v19 = this.mState;
								if (v19 == 6) {
									RemotePrintSpooler.throwIfCalledOnMainThread();
									RemotePrintSpooler.throwIfDestroyedLocked();
									this.mCanUnbind = 0;
									IPrintSpooler v23 = RemotePrintSpooler.getRemoteInstanceLazy();
									boolean v24 = this.mSetPrintJobStatusCaller.setPrintJobState(v23, p1, 2, 0);
									this.mCanUnbind = 1;
									this.mLock.notifyAll();
									boolean v20 = v24;
									Binder.restoreCallingIdentity(v14);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);\nObject v9 = this.mUserStates.get(p1);\nUserState v10 = new UserState(this.mContext, p1, this.mLock, p2);\nthis.mUserStates.put(p1, v10);\nPrintJobInfo v17 = this.mPrintJobForAppCache.getPrintJob(p1, p2);\nPrintJobInfo v18 = this.mSpooler.getPrintJobInfo(p1, p2);\nIPrintSpooler v25 = RemotePrintSpooler.getRemoteInstanceLazy();\nboolean v26 = this.mSetPrintJobStatusCaller.setPrintJobState(v25, p1, 2, 0);']

The method restartPrintJob has the following similar APIs:

- API Name: getPrintJobInfos(II)Ljava/util/List; with Similarity Score: 0.9257810115814209
  - Access Control Level: NONE and the following code:
boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v8 = this.mUserStates.get(p1);
this.mUserStates.put(p1, v9);
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
.increasePriority();
List v29 = this.mGetPrintJobInfosCaller.getPrintJobInfos(v28, 0, -1, p1);
return v14;

- API Name: isPrintServiceEnabled(Landroid/content/ComponentName;I)Z with Similarity Score: 0.8810640573501587
  - Access Control Level: NONE and the following code:
boolean v11 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v12 = this.mUserStates.get(p1);
UserState v13 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v13);
boolean v17 = v9.isPrintServiceEnabled(p1);

