The method removePrintServicesChangeListener has the following code snippet:

This is path 1 for the API with depth 2:
public void removePrintServicesChangeListener(IPrintServicesChangeListener p1, int p2){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(p1);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v10);
				if (p2 != 0) {
					.increasePriority();
					UserState v7 = ;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintServicesChangeListenerRecords != 0) {
							int v17 = this.mPrintServicesChangeListenerRecords.size();
							if ( >= v17) {
								Object v18 = this.mPrintServicesChangeListenerRecords.get();
								IBinder v19 = UserState$ListenerRecord.listener.asBinder();
								IBinder v20 = p1.asBinder();
								boolean v21 = v19.equals(v20);
								if (v21 == 0) {
									v18.destroy();
									Object v23 = this.mPrintServicesChangeListenerRecords.remove();
									boolean v24 = this.mPrintServicesChangeListenerRecords.isEmpty();
									if (v24 == 0) {
										this.mPrintServicesChangeListenerRecords = 0;
										Binder.restoreCallingIdentity(v14);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void removePrintServicesChangeListener(IPrintServicesChangeListener p1, int p2){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(p1);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v10);
				if (p2 != 0) {
					.increasePriority();
					UserState v7 = ;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintServicesChangeListenerRecords != 0) {
							int v17 = this.mPrintServicesChangeListenerRecords.size();
							if ( >= v17) {
								Object v18 = this.mPrintServicesChangeListenerRecords.get();
								IBinder v19 = UserState$ListenerRecord.listener.asBinder();
								IBinder v20 = p1.asBinder();
								boolean v21 = v19.equals(v20);
								if (v21 == 0) {
									v18.destroy();
									Object v23 = this.mPrintServicesChangeListenerRecords.remove();
									boolean v24 = this.mPrintServicesChangeListenerRecords.isEmpty();
									if (v24 == 0) {
										Binder.restoreCallingIdentity(v14);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);\nObject v9 = this.mUserStates.get(p1);\nUserState v10 = new UserState(this.mContext, p1, this.mLock, p2);\nthis.mUserStates.put(p1, v10);', 'int v17 = this.mPrintServicesChangeListenerRecords.size();\nObject v18 = this.mPrintServicesChangeListenerRecords.get();\nv18.destroy();\nObject v23 = this.mPrintServicesChangeListenerRecords.remove();']

The method removePrintServicesChangeListener has the following similar APIs:

- API Name: removePrintServiceRecommendationsChangeListener(Landroid/printservice/recommendation/IRecommendationsChangeListener;I)V with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v9 = this.mUserStates.get(p1);
UserState v10 = new UserState(this.mContext, p1, this.mLock, p2);
this.mUserStates.put(p1, v10);

- API Name: cancelPrintJob(Landroid/print/PrintJobId;II)V with Similarity Score: 0.99554443359375
  - Access Control Level: NONE and the following code:
boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v8 = this.mUserStates.get(p1);
UserState v9 = new UserState(this.mContext, p1, this.mLock, p2);
this.mUserStates.put(p1, v9);

