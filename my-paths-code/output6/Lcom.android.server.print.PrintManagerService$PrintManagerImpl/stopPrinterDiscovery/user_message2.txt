The method stopPrinterDiscovery has the following code snippet:

This is path 1 for the API with depth 2:
public void stopPrinterDiscovery(IPrinterDiscoveryObserver p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrinterDiscoverySession != 0) {
							if (this.mIsDestroyed == 0) {
								IBinder v17 = p1.asBinder();
								boolean v18 = this.mStartedPrinterDiscoveryTokens.remove(v17);
								if (v18 != 0) {
									boolean v19 = this.mStartedPrinterDiscoveryTokens.isEmpty();
									if (v19 != 0) {
										Handler v20 = Handler.getMain();
										UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda7 v21 = new UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda7();
										ArrayList v23 = new ArrayList(v25);
										ArrayMap v24 = UserState.-$$Nest$fgetmActiveServices(this.this$0);
										Collection v25 = v24.values();
										Message v27 = PooledLambda.obtainMessage(v21, UserState$PrinterDiscoverySessionMediator, v23);
										boolean v28 = v20.sendMessage(v27);
										Binder.restoreCallingIdentity(v13);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void stopPrinterDiscovery(IPrinterDiscoveryObserver p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrinterDiscoverySession != 0) {
							if (this.mIsDestroyed == 0) {
								IBinder v17 = p1.asBinder();
								boolean v18 = this.mStartedPrinterDiscoveryTokens.remove(v17);
								if (v18 != 0) {
									boolean v19 = this.mStartedPrinterDiscoveryTokens.isEmpty();
									if (v19 != 0) {
										Binder.restoreCallingIdentity(v13);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);\nthis.mUserStates.put(p1, v9);\nIBinder v17 = p1.asBinder();\nboolean v18 = this.mStartedPrinterDiscoveryTokens.remove(v17);']

The method stopPrinterDiscovery has the following similar APIs:

- API Name: stopPrinterStateTracking(Landroid/print/PrinterId;I)V with Similarity Score: 0.8631172776222229
  - Access Control Level: NONE and the following code:
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);

- API Name: getCustomPrinterIcon(Landroid/print/PrinterId;I)Landroid/graphics/drawable/Icon; with Similarity Score: 0.8598387837409973
  - Access Control Level: NONE and the following code:
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);
long v13 = Binder.clearCallingIdentity();
IPrintSpooler v18 = RemotePrintSpooler.getRemoteInstanceLazy();
Icon v19 = this.mGetCustomPrinterIconCaller.getCustomPrinterIcon(v18, p1);
this.mLock.notifyAll();
Icon v15 = v19;
if (v15 != 0) { ... return v14; }

