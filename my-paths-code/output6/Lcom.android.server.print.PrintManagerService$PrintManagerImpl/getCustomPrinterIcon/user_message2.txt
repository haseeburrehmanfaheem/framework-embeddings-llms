The method getCustomPrinterIcon has the following code snippet:

This is path 1 for the API with depth 2:
public Icon getCustomPrinterIcon(PrinterId p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					RemotePrintSpooler.throwIfCalledOnMainThread();
					RemotePrintSpooler.throwIfDestroyedLocked();
					this.mCanUnbind = 0;
					IPrintSpooler v18 = RemotePrintSpooler.getRemoteInstanceLazy();
					Icon v19 = this.mGetCustomPrinterIconCaller.getCustomPrinterIcon(v18, p1);
					this.mCanUnbind = 1;
					this.mLock.notifyAll();
					Icon v15 = v19;
					if (v15 != 0) {
						ComponentName v21 = this.mServiceName;
						Object v22 = this.mActiveServices.get(v21);
						if (v22 == 0) {
							Handler v24 = Handler.getMain();
							RemotePrintService$$ExternalSyntheticLambda1 v25 = new RemotePrintService$$ExternalSyntheticLambda1();
							Message v27 = PooledLambda.obtainMessage(v25, RemotePrintService, p1);
							boolean v28 = v24.sendMessage(v27);
							Icon v14 = v15;
							Binder.restoreCallingIdentity(v13);
							return v14;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public Icon getCustomPrinterIcon(PrinterId p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					RemotePrintSpooler.throwIfCalledOnMainThread();
					RemotePrintSpooler.throwIfDestroyedLocked();
					this.mCanUnbind = 0;
					IPrintSpooler v18 = RemotePrintSpooler.getRemoteInstanceLazy();
					Icon v19 = this.mGetCustomPrinterIconCaller.getCustomPrinterIcon(v18, p1);
					this.mCanUnbind = 1;
					this.mLock.notifyAll();
					Icon v15 = v19;
					if (v15 != 0) {
						ComponentName v21 = this.mServiceName;
						Object v22 = this.mActiveServices.get(v21);
						if (v22 == 0) {
							Icon v14 = v15;
							Binder.restoreCallingIdentity(v13);
							return v14;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);\nthis.mUserStates.put(p1, v9);\nlong v13 = Binder.clearCallingIdentity();\nIPrintSpooler v18 = RemotePrintSpooler.getRemoteInstanceLazy();\nIcon v19 = this.mGetCustomPrinterIconCaller.getCustomPrinterIcon(v18, p1);\nthis.mLock.notifyAll();\nIcon v15 = v19;\nif (v15 != 0) { ... return v14; }']

The method getCustomPrinterIcon has the following similar APIs:

- API Name: stopPrinterDiscovery(Landroid/print/IPrinterDiscoveryObserver;I)V with Similarity Score: 0.8598387837409973
  - Access Control Level: NONE and the following code:
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);
IBinder v17 = p1.asBinder();
boolean v18 = this.mStartedPrinterDiscoveryTokens.remove(v17);

- API Name: restartPrintJob(Landroid/print/PrintJobId;II)V with Similarity Score: 0.8490695357322693
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v9 = this.mUserStates.get(p1);
UserState v10 = new UserState(this.mContext, p1, this.mLock, p2);
this.mUserStates.put(p1, v10);
PrintJobInfo v17 = this.mPrintJobForAppCache.getPrintJob(p1, p2);
PrintJobInfo v18 = this.mSpooler.getPrintJobInfo(p1, p2);
IPrintSpooler v25 = RemotePrintSpooler.getRemoteInstanceLazy();
boolean v26 = this.mSetPrintJobStatusCaller.setPrintJobState(v25, p1, 2, 0);

