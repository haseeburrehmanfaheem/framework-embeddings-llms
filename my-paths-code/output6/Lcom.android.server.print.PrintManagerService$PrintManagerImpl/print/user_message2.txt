The method print has the following code snippet:

This is path 1 for the API with depth 1:
public Bundle print(String p1, IPrintDocumentAdapter p2, PrintAttributes p3, String p4, int p5, int p6){
	Object v1 = Objects.requireNonNull(p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	boolean v4 = this.mUserManager.hasUserRestriction("no_printing", v3);
	boolean v2 = (v4 ^ 1);
	if (v2 != 0) {
		Object v6 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
		Object v5 = v6;
		int v7 = UserHandle.getCallingUserId();
		long v8 = Binder.clearCallingIdentity();
		CharSequence v9 = v5.getPrintingDisabledReasonForUser(v7);
		if (v9 == 0) {
			Looper v10 = Looper.getMainLooper();
			Toast v11 = Toast.makeText(this.mContext, v10, v9, 1);
			v11.show();
			Binder.restoreCallingIdentity(v8);
			p2.start();
			int v15 = Log.e("PrintManagerService", "Error calling IPrintDocumentAdapter.start()");
			p2.finish();
			int v17 = Log.e("PrintManagerService", "Error calling IPrintDocumentAdapter.finish()");
			return 0;
		}
	}
}
This is path 2 for the API with depth 1:
public Bundle print(String p1, IPrintDocumentAdapter p2, PrintAttributes p3, String p4, int p5, int p6){
	Object v1 = Objects.requireNonNull(p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	boolean v4 = this.mUserManager.hasUserRestriction("no_printing", v3);
	boolean v2 = (v4 ^ 1);
	if (v2 != 0) {
		Object v6 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
		Object v5 = v6;
		int v7 = UserHandle.getCallingUserId();
		long v8 = Binder.clearCallingIdentity();
		CharSequence v9 = v5.getPrintingDisabledReasonForUser(v7);
		if (v9 == 0) {
			Looper v10 = Looper.getMainLooper();
			Toast v11 = Toast.makeText(this.mContext, v10, v9, 1);
			v11.show();
			Binder.restoreCallingIdentity(v8);
			p2.start();
			int v15 = Log.e("PrintManagerService", "Error calling IPrintDocumentAdapter.start()");
			p2.finish();
			return 0;
		}
	}
}

and the following sink code:
['Object v1 = Objects.requireNonNull(p2);\np2.start();\np2.finish()', 'UserHandle v3 = Binder.getCallingUserHandle();\nboolean v4 = this.mUserManager.hasUserRestriction("no_printing", v3);']

The method print has the following similar APIs:

- API Name: getUserUnlockRealtime()J with Similarity Score: 0.7407668232917786
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingUid();
int v2 = UserHandle.getUserId(v1);
Object v4 = this.mUsers.get(v2);
boolean v5 = this.mRemovingUserIds.get(v2);
return UserManagerService$UserData.unlockRealtime;

- API Name: isSettingRestrictedForUser(Ljava/lang/String;ILjava/lang/String;I)Z with Similarity Score: 0.7191710472106934
  - Access Control Level: SYS_OR_SIG and the following code:
UserHandle v7 = UserHandle.of(p2);
boolean v8 = v4.hasUserRestriction(, v7);
boolean v2 = v8;
return v2;

