This is path 1 for the API with depth 1:
public Bundle print(String p1, IPrintDocumentAdapter p2, PrintAttributes p3, String p4, int p5, int p6){
	Object v1 = Objects.requireNonNull(p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	boolean v4 = this.mUserManager.hasUserRestriction("no_printing", v3);
	boolean v2 = (v4 ^ 1);
	if (v2 != 0) {
		Object v6 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
		Object v5 = v6;
		int v7 = UserHandle.getCallingUserId();
		long v8 = Binder.clearCallingIdentity();
		CharSequence v9 = v5.getPrintingDisabledReasonForUser(v7);
		if (v9 == 0) {
			Looper v10 = Looper.getMainLooper();
			Toast v11 = Toast.makeText(this.mContext, v10, v9, 1);
			v11.show();
			Binder.restoreCallingIdentity(v8);
			p2.start();
			int v15 = Log.e("PrintManagerService", "Error calling IPrintDocumentAdapter.start()");
			p2.finish();
			int v17 = Log.e("PrintManagerService", "Error calling IPrintDocumentAdapter.finish()");
			return 0;
		}
	}
}

This is path 2 for the API with depth 1:
public Bundle print(String p1, IPrintDocumentAdapter p2, PrintAttributes p3, String p4, int p5, int p6){
	Object v1 = Objects.requireNonNull(p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	boolean v4 = this.mUserManager.hasUserRestriction("no_printing", v3);
	boolean v2 = (v4 ^ 1);
	if (v2 != 0) {
		Object v6 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
		Object v5 = v6;
		int v7 = UserHandle.getCallingUserId();
		long v8 = Binder.clearCallingIdentity();
		CharSequence v9 = v5.getPrintingDisabledReasonForUser(v7);
		if (v9 == 0) {
			Looper v10 = Looper.getMainLooper();
			Toast v11 = Toast.makeText(this.mContext, v10, v9, 1);
			v11.show();
			Binder.restoreCallingIdentity(v8);
			p2.start();
			int v15 = Log.e("PrintManagerService", "Error calling IPrintDocumentAdapter.start()");
			p2.finish();
			return 0;
		}
	}
}
