This is path 1 for the API with depth 2:
public PrintJobInfo getPrintJobInfo(PrintJobId p1, int p2, int p3){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					Object v16 = UserState.-$$Nest$fgetmLock(this.this$0);
					Object v17 = this.mPrintJobsForRunningApp.get(p2);
					if (v17 != 0) {
						int v18 = v17.size();
						if ( >= v18) {
							Object v19 = v17.get();
							PrintJobId v20 = v19.getId();
							boolean v21 = v20.equals(p1);
							if (v21 == 0) {
								PrintJobInfo v15 = v19;
								if (v15 != 0) {
									RemotePrintSpooler.throwIfCalledOnMainThread();
									RemotePrintSpooler.throwIfDestroyedLocked();
									this.mCanUnbind = 0;
									IPrintSpooler v25 = RemotePrintSpooler.getRemoteInstanceLazy();
									PrintJobInfo v26 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v25, p1, p2);
									this.mCanUnbind = 1;
									this.mLock.notifyAll();
									PrintJobInfo v22 = v26;
									if ( == 0) {
										this.mTag = 0;
										this.mAdvancedOptions = 0;
										PrintJobInfo v14 = ;
										Binder.restoreCallingIdentity(v13);
										return v14;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public PrintJobInfo getPrintJobInfo(PrintJobId p1, int p2, int p3){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					Object v16 = UserState.-$$Nest$fgetmLock(this.this$0);
					Object v17 = this.mPrintJobsForRunningApp.get(p2);
					if (v17 != 0) {
						int v18 = v17.size();
						if ( >= v18) {
							PrintJobInfo v15 = 0;
							if (v15 != 0) {
								RemotePrintSpooler.throwIfCalledOnMainThread();
								RemotePrintSpooler.throwIfDestroyedLocked();
								this.mCanUnbind = 0;
								IPrintSpooler v22 = RemotePrintSpooler.getRemoteInstanceLazy();
								PrintJobInfo v23 = this.mGetPrintJobInfoCaller.getPrintJobInfo(v22, p1, p2);
								this.mCanUnbind = 1;
								this.mLock.notifyAll();
								PrintJobInfo v19 = v23;
								if ( == 0) {
									this.mTag = 0;
									this.mAdvancedOptions = 0;
									PrintJobInfo v14 = ;
									Binder.restoreCallingIdentity(v13);
									return v14;
								}
							}
						}
					}
				}
			}
		}
	}
}
