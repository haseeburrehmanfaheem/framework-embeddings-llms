The method setPrintServiceEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public void setPrintServiceEnabled(ComponentName p1, boolean p2, int p3){
	if (1 == 0) {
		boolean v12 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v12 == 0) {
			Object v13 = this.mUserStates.get(p1);
			if (v13 != 0) {
				UserState v14 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v14);
				if (p2 != 0) {
					.increasePriority();
					UserState v11 = ;
					UserState v10 = v11;
					long v18 = Binder.clearCallingIdentity();
					if (p2 == 0) {
						int v20 = this.mInstalledServices.size();
						if ( >= v20) {
							Object v21 = this.mInstalledServices.get();
							ComponentName v23 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);
							ComponentName v22 = v23;
							boolean v25 = v22.equals(p1);
							if (v25 == 0) {
								boolean v26 = this.mDisabledServices.add(p1);
								if ( == 0) {
									StringBuilder v28 = new StringBuilder();
									Iterator v30 = this.mDisabledServices.iterator();
									boolean v31 = v30.hasNext();
									if (v31 == 0) {
										ContentResolver v32 = this.mContext.getContentResolver();
										String v33 = v28.toString();
										boolean v34 = Settings$Secure.putStringForUser(v32, "disabled_print_services", v33, this.mUserId);
										if (p2 == 0) {
											MetricsLogger.action(this.mContext, 511, );
											ArrayList v37 = UserState.getInstalledComponents();
											int v38 = v37.size();
											if ( >= v38) {
												Set v39 = this.mActiveServices.entrySet();
												Iterator v40 = v39.iterator();
												boolean v41 = v40.hasNext();
												if (v41 == 0) {
													UserState.onPrintServicesChanged();
													Binder.restoreCallingIdentity(v18);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setPrintServiceEnabled(ComponentName p1, boolean p2, int p3){
	if (1 == 0) {
		boolean v12 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v12 == 0) {
			Object v13 = this.mUserStates.get(p1);
			if (v13 != 0) {
				UserState v14 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v14);
				if (p2 != 0) {
					.increasePriority();
					UserState v11 = ;
					UserState v10 = v11;
					long v18 = Binder.clearCallingIdentity();
					if (p2 == 0) {
						int v20 = this.mInstalledServices.size();
						if ( >= v20) {
							if ( == 0) {
								StringBuilder v22 = new StringBuilder();
								Iterator v24 = this.mDisabledServices.iterator();
								boolean v25 = v24.hasNext();
								if (v25 == 0) {
									ContentResolver v26 = this.mContext.getContentResolver();
									String v27 = v22.toString();
									boolean v28 = Settings$Secure.putStringForUser(v26, "disabled_print_services", v27, this.mUserId);
									if (p2 == 0) {
										MetricsLogger.action(this.mContext, 511, );
										ArrayList v31 = UserState.getInstalledComponents();
										int v32 = v31.size();
										if ( >= v32) {
											Set v33 = this.mActiveServices.entrySet();
											Iterator v34 = v33.iterator();
											boolean v35 = v34.hasNext();
											if (v35 == 0) {
												UserState.onPrintServicesChanged();
												Binder.restoreCallingIdentity(v18);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserState v14 = new UserState(this.mContext,p1,this.mLock,p2);\nthis.mUserStates.put(p1, v14);', 'StringBuilder v28 = new StringBuilder();\nIterator v30 = this.mDisabledServices.iterator();\nboolean v31 = v30.hasNext();\nContentResolver v32 = this.mContext.getContentResolver();\nString v33 = v28.toString();\nboolean v34 = Settings$Secure.putStringForUser(v32, "disabled_print_services", v33, this.mUserId);', 'ArrayList v37 = UserState.getInstalledComponents();\nint v38 = v37.size();\nSet v39 = this.mActiveServices.entrySet();\nIterator v40 = v39.iterator();\nboolean v41 = v40.hasNext();\nUserState.onPrintServicesChanged();']

The method setPrintServiceEnabled has the following similar APIs:

- API Name: startPrinterDiscovery(Landroid/print/IPrinterDiscoveryObserver;Ljava/util/List;I)V with Similarity Score: 0.9846744537353516
  - Access Control Level: NONE and the following code:
UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v10);

- API Name: addPrintServicesChangeListener(Landroid/print/IPrintServicesChangeListener;I)V with Similarity Score: 0.9846744537353516
  - Access Control Level: SYS_OR_SIG and the following code:
UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v10);

