The method getCacheSizeBytes has the following code snippet:

This is path 1 for the API with depth 2:
public long getCacheSizeBytes(String p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	UUID v6 = StorageManager.convert(p1);
	String v8 = StorageManager.convert(v6);
	String v9 = this.mContext.getOpPackageName();
	StorageStats v10 = this.mService.queryStatsForUid(v8, p2, v9);
	StorageStats v7 = v10;
	StorageStats v5 = v7;
	long v11 = v5.getCacheBytes();
	Binder.restoreCallingIdentity(v3);
	return v11;
}
This is path 2 for the API with depth 2:
public long getCacheSizeBytes(String p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	Object v3 = this.mContext.getSystemService(StorageStatsManage.class);
	UUID v5 = StorageManager.convert(p1);
	String v7 = StorageManager.convert(v5);
	String v8 = this.mContext.getOpPackageName();
	StorageStats v9 = this.mService.queryStatsForUid(v7, p2, v8);
	StorageStats v6 = v9;
	StorageStats v4 = v6;
	long v10 = v4.getCacheBytes();
	Binder.restoreCallingIdentity(v2);
	return v10;
}

and the following sink code:
['UUID v6 = StorageManager.convert(p1);\nString v8 = StorageManager.convert(v6);\nStorageStats v10 = this.mService.queryStatsForUid(v8, p2, v9);\nlong v11 = v5.getCacheBytes();\nreturn v11;']

The method getCacheSizeBytes has the following similar APIs:

- API Name: allocateBytes(Ljava/lang/String;JILjava/lang/String;)V with Similarity Score: 0.762341320514679
  - Access Control Level: SYS_OR_SIG and the following code:
Object v30 = this.mContext.getSystemService(StorageManage.class);
Object v31 = this.mContext.getSystemService(StorageStatsManage.class);
long v32 = Binder.clearCallingIdentity();
File v33 = v30.findPathForUuid(p1);

- API Name: getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J with Similarity Score: 0.7544020414352417
  - Access Control Level: SYS_OR_SIG and the following code:
Object v15 = this.mContext.getSystemService(StorageManage.class);
File v18 = v15.findPathForUuid(p1);
long v19 = v18.getUsableSpace();
long v20 = v15.getStorageLowBytes(v18);
long v21 = v15.getStorageFullBytes(v18);
return Math.max(0, (( + ) - ));

