The method mountObb has the following code snippet:

This is path 1 for the API with depth 0:
public void mountObb(String p1, String p2, IObbActionListener p3, int p4, ObbInfo p5){
	Object v1 = Objects.requireNonNull(p1, "rawPath cannot be null");
	Object v2 = Objects.requireNonNull(p2, "canonicalPath cannot be null");
	Object v3 = Objects.requireNonNull(p3, "token cannot be null");
	Object v4 = Objects.requireNonNull(p5, "obbIfno cannot be null");
	int v5 = Binder.getCallingUid();
	StorageManagerService$ObbState v6 = new StorageManagerService$ObbState(p0,p1,p2,v5,p3,p4,0);
	StorageManagerService$MountObbAction v8 = new StorageManagerService$MountObbAction(p0,v6,v5,p5);
	Message v10 = this.mObbActionHandler.obtainMessage(1, v8);
	boolean v11 = this.mObbActionHandler.sendMessage(v10);
	return;
}

and the following sink code:
['StorageManagerService$ObbState v6 = new StorageManagerService$ObbState(p0,p1,p2,v5,p3,p4,0);\nStorageManagerService$MountObbAction v8 = new StorageManagerService$MountObbAction(p0,v6,v5,p5);\nMessage v10 = this.mObbActionHandler.obtainMessage(1, v8);\nboolean v11 = this.mObbActionHandler.sendMessage(v10);']

The method mountObb has the following similar APIs:

- API Name: unmountObb(Ljava/lang/String;ZLandroid/os/storage/IObbActionListener;I)V with Similarity Score: 0.9321030378341675
  - Access Control Level: NONE and the following code:
StorageManagerService$ObbState v4 = new StorageManagerService$ObbState(p0,p1,StorageManagerService$ObbState.canonicalPath,v3,p3,p4,StorageManagerService$ObbState.volId);
StorageManagerService$UnmountObbAction v6 = new StorageManagerService$UnmountObbAction(p0,v4,p2);
Message v8 = this.mObbActionHandler.obtainMessage(1, v6);
boolean v9 = this.mObbActionHandler.sendMessage(v8);

- API Name: getMountedObbPath(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.7231091856956482
  - Access Control Level: NONE and the following code:
Object v7 = this.mObbPathToStateMap.get(p1);
Object v9 = this.mVolumes.get(StorageManagerService$ObbState.volId);
VolumeInfo v8 = v9;
File v10 = v8.getPath();
String v11 = v10.getAbsolutePath();
return v11;

