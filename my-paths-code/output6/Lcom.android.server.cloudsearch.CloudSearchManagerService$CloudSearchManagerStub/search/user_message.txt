This is path 1 for the API with depth 2:
public void search(SearchRequest p1, ICloudSearchManagerCallback p2){
	Context v1 = this.mContext;
	PackageManager v2 = v1.getPackageManager();
	int v3 = Binder.getCallingUid();
	String v4 = v2.getNameForUid(v3);
	this.mCallerPackageName = v4;
	CloudSearchManagerService$CloudSearchManagerStub$$ExternalSyntheticLambda0 v6 = new CloudSearchManagerService$CloudSearchManagerStub$$ExternalSyntheticLambda0(p1,p2);
	if (v16 == 0) {
		ServiceNameResolver v17 = AbstractMasterSystemService.mServiceNameResolver;
		boolean v18 = v17.isTemporary(v14);
		if (v18 != 0) {
			ActivityTaskManagerInternal v19 = this.mActivityTaskManagerInternal;
			int v20 = Binder.getCallingUid();
			boolean v21 = v19.isCallerRecents(v20);
			if (v21 == 0) {
				long v22 = Binder.clearCallingIdentity();
				Object v23 = AbstractMasterSystemService.mLock;
				List v25 = this.this$0.getServiceListForUserLocked(v14);
				List v24 = v25;
				int v26 = v24.size();
				if ( >= v26) {
					Binder.restoreCallingIdentity(v22);
					return;
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void search(SearchRequest p1, ICloudSearchManagerCallback p2){
	Context v1 = this.mContext;
	PackageManager v2 = v1.getPackageManager();
	int v3 = Binder.getCallingUid();
	String v4 = v2.getNameForUid(v3);
	this.mCallerPackageName = v4;
	CloudSearchManagerService$CloudSearchManagerStub$$ExternalSyntheticLambda0 v6 = new CloudSearchManagerService$CloudSearchManagerStub$$ExternalSyntheticLambda0(p1,p2);
	if (v16 == 0) {
		ServiceNameResolver v17 = AbstractMasterSystemService.mServiceNameResolver;
		boolean v18 = v17.isTemporary(v14);
		if (v18 != 0) {
			long v19 = Binder.clearCallingIdentity();
			Object v20 = AbstractMasterSystemService.mLock;
			List v22 = this.this$0.getServiceListForUserLocked(v14);
			List v21 = v22;
			int v23 = v21.size();
			if ( >= v23) {
				Binder.restoreCallingIdentity(v19);
				return;
			}
		}
	}
}
