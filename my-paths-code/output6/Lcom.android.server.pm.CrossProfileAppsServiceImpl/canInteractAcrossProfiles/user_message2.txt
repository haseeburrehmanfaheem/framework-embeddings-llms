The method canInteractAcrossProfiles has the following code snippet:

This is path 1 for the API with depth 1:
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	int v6 = this.mInjector.getCallingUserId();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v8 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v6,p1);
	Object v10 = this.mInjector.withCleanCallingIdentity(v8);
	List v7 = v10;
	boolean v11 = v7.isEmpty();
	if (v11 == 0) {
		if (v12 == 0) {
			if (v13 == 0) {
				return ;
			}
		}
	}
}
This is path 2 for the API with depth 1:
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	int v6 = this.mInjector.getCallingUserId();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v8 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v6,p1);
	Object v10 = this.mInjector.withCleanCallingIdentity(v8);
	List v7 = v10;
	boolean v11 = v7.isEmpty();
	if (v11 == 0) {
		if (v12 == 0) {
			return ;
		}
	}
}

and the following sink code:
['CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v8 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v6,p1);']

The method canInteractAcrossProfiles has the following similar APIs:

- API Name: resetInteractAcrossProfilesAppOps(Ljava/util/List;)V with Similarity Score: 0.9590581655502319
  - Access Control Level: NONE and the following code:
CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1 v1 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1(p0);
p1.forEach(v1);

- API Name: startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V with Similarity Score: 0.8779629468917847
  - Access Control Level: SYS_OR_SIG and the following code:
CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6 v19 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6(CrossProfileAppsServiceImpl,v11,v7,p5);
this.mInjector.withCleanCallingIdentity(v19);
ActivityTaskManagerInternal v22 = this.mInjector.getActivityTaskManagerInternal();
int v23 = v22.startActivityAsUser(p1, p2, p3, v11, p6, 0, p7, p5);

