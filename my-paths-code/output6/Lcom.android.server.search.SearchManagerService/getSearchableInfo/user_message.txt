This is path 1 for the API with depth 2:
public SearchableInfo getSearchableInfo(ComponentName p1){
	if (p1 != 0) {
		int v1 = UserHandle.getCallingUserId();
		long v4 = Binder.clearCallingIdentity();
		Object v5 = this.mContext.getSystemService(UserManage.class);
		UserInfo v6 = v5.getUserInfo(p1);
		if (v6 == 0) {
			boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
			if (v7 == 0) {
				Binder.restoreCallingIdentity(v4);
				Object v9 = this.mSearchables.get(p1);
				if (v9 != 0) {
					Searchables v10 = new Searchables(this.mContext,p1);
					v10.updateSearchableList();
					this.mSearchables.append(p1, v10);
					Searchables v3 = ;
					Searchables v2 = v3;
					Object v15 = this.mSearchablesMap.get(p1);
					if (v15 == 0) {
						Object v17 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
						Object v16 = v17;
						int v18 = Binder.getCallingUid();
						ComponentName v19 = v15.getSearchActivity();
						int v20 = UserHandle.getCallingUserId();
						boolean v21 = v16.canAccessComponent(v18, v19, v20);
						if (v21 == 0) {
							SearchableInfo v14 = v15;
							return v14;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public SearchableInfo getSearchableInfo(ComponentName p1){
	if (p1 != 0) {
		int v1 = UserHandle.getCallingUserId();
		long v4 = Binder.clearCallingIdentity();
		Object v5 = this.mContext.getSystemService(UserManage.class);
		UserInfo v6 = v5.getUserInfo(p1);
		if (v6 == 0) {
			boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
			if (v7 == 0) {
				Binder.restoreCallingIdentity(v4);
				Object v9 = this.mSearchables.get(p1);
				if (v9 != 0) {
					Searchables v10 = new Searchables(this.mContext,p1);
					v10.updateSearchableList();
					this.mSearchables.append(p1, v10);
					Searchables v3 = ;
					Searchables v2 = v3;
					Object v15 = this.mSearchablesMap.get(p1);
					if (v15 == 0) {
						Object v17 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
						Object v16 = v17;
						int v18 = Binder.getCallingUid();
						ComponentName v19 = v15.getSearchActivity();
						int v20 = UserHandle.getCallingUserId();
						boolean v21 = v16.canAccessComponent(v18, v19, v20);
						if (v21 == 0) {
							SearchableInfo v14 = 0;
							return v14;
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public SearchableInfo getSearchableInfo(ComponentName p1){
	if (p1 != 0) {
		int v1 = UserHandle.getCallingUserId();
		long v4 = Binder.clearCallingIdentity();
		Object v5 = this.mContext.getSystemService(UserManage.class);
		UserInfo v6 = v5.getUserInfo(p1);
		if (v6 == 0) {
			boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
			if (v7 == 0) {
				Binder.restoreCallingIdentity(v4);
				Object v9 = this.mSearchables.get(p1);
				if (v9 != 0) {
					if (0 == 0) {
						v9.updateSearchableList();
						Searchables v3 = ;
						Searchables v2 = v3;
						Object v12 = this.mSearchablesMap.get(p1);
						if (v12 == 0) {
							Object v14 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
							Object v13 = v14;
							int v15 = Binder.getCallingUid();
							ComponentName v16 = v12.getSearchActivity();
							int v17 = UserHandle.getCallingUserId();
							boolean v18 = v13.canAccessComponent(v15, v16, v17);
							if (v18 == 0) {
								SearchableInfo v11 = v12;
								return v11;
							}
						}
					}
				}
			}
		}
	}
}
