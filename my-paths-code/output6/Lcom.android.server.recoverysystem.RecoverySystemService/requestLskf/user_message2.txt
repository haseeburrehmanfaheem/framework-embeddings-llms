The method requestLskf has the following code snippet:

This is path 1 for the API with depth 2:
public boolean requestLskf(String p1, IntentSender p2){
	if (p1 != 0) {
		boolean v3 = this.mCallerPreparedForReboot.isEmpty();
		if (v3 != 0) {
			boolean v4 = this.mCallerPendingRequest.isEmpty();
			boolean v5 = this.mCallerPendingRequest.containsKey(p1);
			if (v5 == 0) {
				Object v12 = this.mCallerPendingRequest.put(p1, p2);
				if (v4 == 0) {
					int v2 = ;
					PackageManager v15 = this.mContext.getPackageManager();
					int v16 = v15.getPackageUidAsUser(p1, 0);
					int v14 = -1;
					int v23 = this.mCallerPendingRequest.size();
					RecoverySystemService$PreferencesManager v24 = this.mPrefs;
					StringBuilder v25 = new StringBuilder();
					StringBuilder v27 = v25.append(p1);
					StringBuilder v28 = v25.append("_request_lskf_timestamp");
					String v29 = v25.toString();
					long v31 = System.currentTimeMillis();
					long v30 = v31;
					SharedPreferences$Editor v33 = this.mSharedPreferences.edit();
					SharedPreferences$Editor v34 = v33.putLong(v29, v30);
					boolean v35 = v34.commit();
					StringBuilder v36 = new StringBuilder();
					StringBuilder v38 = v36.append(p1);
					StringBuilder v39 = v36.append("_request_lskf_count");
					String v40 = v36.toString();
					int v42 = RecoverySystemService$PreferencesManager.getInt(v40, 0);
					RecoverySystemService$PreferencesManager.putInt(v40, (v42 + 1));
					FrameworkStatsLog.write(339, v14, p2, v23);
					if (v2 == 0) {
						long v46 = Binder.clearCallingIdentity();
						Object v49 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
						Object v48 = v49;
						LockSettingsInternal v47 = v48;
						if (v47 != 0) {
							boolean v50 = v47.prepareRebootEscrow();
							if (v50 != 0) {
								p0.clearRoRPreparationState();
								Binder.restoreCallingIdentity(v46);
								return 0;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean requestLskf(String p1, IntentSender p2){
	if (p1 != 0) {
		boolean v3 = this.mCallerPreparedForReboot.isEmpty();
		if (v3 != 0) {
			boolean v4 = this.mCallerPendingRequest.isEmpty();
			boolean v5 = this.mCallerPendingRequest.containsKey(p1);
			if (v5 == 0) {
				Object v12 = this.mCallerPendingRequest.put(p1, p2);
				if (v4 == 0) {
					int v2 = ;
					PackageManager v15 = this.mContext.getPackageManager();
					int v16 = v15.getPackageUidAsUser(p1, 0);
					int v14 = -1;
					int v23 = this.mCallerPendingRequest.size();
					RecoverySystemService$PreferencesManager v24 = this.mPrefs;
					StringBuilder v25 = new StringBuilder();
					StringBuilder v27 = v25.append(p1);
					StringBuilder v28 = v25.append("_request_lskf_timestamp");
					String v29 = v25.toString();
					long v31 = System.currentTimeMillis();
					long v30 = v31;
					SharedPreferences$Editor v33 = this.mSharedPreferences.edit();
					SharedPreferences$Editor v34 = v33.putLong(v29, v30);
					boolean v35 = v34.commit();
					StringBuilder v36 = new StringBuilder();
					StringBuilder v38 = v36.append(p1);
					StringBuilder v39 = v36.append("_request_lskf_count");
					String v40 = v36.toString();
					int v42 = RecoverySystemService$PreferencesManager.getInt(v40, 0);
					RecoverySystemService$PreferencesManager.putInt(v40, (v42 + 1));
					FrameworkStatsLog.write(339, v14, p2, v23);
					if (v2 == 0) {
						long v46 = Binder.clearCallingIdentity();
						Object v49 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
						Object v48 = v49;
						LockSettingsInternal v47 = v48;
						if (v47 != 0) {
							boolean v50 = v47.prepareRebootEscrow();
							if (v50 != 0) {
								Binder.restoreCallingIdentity(v46);
								return 1;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean requestLskf(String p1, IntentSender p2){
	if (p1 != 0) {
		boolean v3 = this.mCallerPreparedForReboot.isEmpty();
		if (v3 != 0) {
			boolean v4 = this.mCallerPendingRequest.isEmpty();
			boolean v5 = this.mCallerPendingRequest.containsKey(p1);
			if (v5 == 0) {
				Object v12 = this.mCallerPendingRequest.put(p1, p2);
				if (v4 == 0) {
					int v2 = ;
					PackageManager v15 = this.mContext.getPackageManager();
					int v16 = v15.getPackageUidAsUser(p1, 0);
					int v14 = v16;
					int v17 = this.mCallerPendingRequest.size();
					RecoverySystemService$PreferencesManager v18 = this.mPrefs;
					StringBuilder v19 = new StringBuilder();
					StringBuilder v21 = v19.append(p1);
					StringBuilder v22 = v19.append("_request_lskf_timestamp");
					String v23 = v19.toString();
					long v25 = System.currentTimeMillis();
					long v24 = v25;
					SharedPreferences$Editor v27 = this.mSharedPreferences.edit();
					SharedPreferences$Editor v28 = v27.putLong(v23, v24);
					boolean v29 = v28.commit();
					StringBuilder v30 = new StringBuilder();
					StringBuilder v32 = v30.append(p1);
					StringBuilder v33 = v30.append("_request_lskf_count");
					String v34 = v30.toString();
					int v36 = RecoverySystemService$PreferencesManager.getInt(v34, 0);
					RecoverySystemService$PreferencesManager.putInt(v34, (v36 + 1));
					FrameworkStatsLog.write(339, v14, p2, v17);
					if (v2 == 0) {
						long v40 = Binder.clearCallingIdentity();
						Object v43 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
						Object v42 = v43;
						LockSettingsInternal v41 = v42;
						if (v41 != 0) {
							boolean v44 = v41.prepareRebootEscrow();
							if (v44 != 0) {
								p0.clearRoRPreparationState();
								Binder.restoreCallingIdentity(v40);
								return 0;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v12 = this.mCallerPendingRequest.put(p1, p2);\nPackageManager v15 = this.mContext.getPackageManager();\nint v16 = v15.getPackageUidAsUser(p1, 0);\nSharedPreferences$Editor v33 = this.mSharedPreferences.edit();\nSharedPreferences$Editor v34 = v33.putLong(v29, v30);\nboolean v35 = v34.commit();', 'LockSettingsInternal v47 = v48;\nboolean v50 = v47.prepareRebootEscrow();']

The method requestLskf has the following similar APIs:

- API Name: rebootWithLskfAssumeSlotSwitch(Ljava/lang/String;Ljava/lang/String;)I with Similarity Score: 0.8759338855743408
  - Access Control Level: SYS_OR_SIG and the following code:
LockSettingsInternal v7 = this.mInjector.getLockSettingsService();
int v8 = v7.armRebootEscrow();

- API Name: startOneTimePermissionSession(Ljava/lang/String;IJJII)V with Similarity Score: 0.7674211263656616
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v6 = this.mContext.getPackageManager();
int v7 = v6.getPackageUid(p1, 0);

