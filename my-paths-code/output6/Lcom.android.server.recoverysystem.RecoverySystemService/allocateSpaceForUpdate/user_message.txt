This is path 1 for the API with depth 2:
public boolean allocateSpaceForUpdate(String p1){
	String v4 = SystemProperties.get("ro.apex.updatable");
	Boolean v5 = ApexProperties.tryParseBoolean(v4);
	Optional v6 = Optional.ofNullable(v5);
	Optional v3 = v6;
	Object v7 = v3.orElse(Boolean.FALSE);
	boolean v8 = v7.booleanValue();
	boolean v2 = v8;
	if (v2 != 0) {
		long v9 = Binder.clearCallingIdentity();
		CompressedApexInfoList v10 = RecoverySystemService.getCompressedApexInfoList(p1);
		if (v10 != 0) {
			ApexManager v11 = ApexManager.getInstance();
			v11.reserveSpaceForCompressedApex(v10);
			RuntimeException v13 = caughtException.rethrowAsRuntimeException();
			Binder.restoreCallingIdentity(v9);
			return 0;
		}
	}
}

This is path 2 for the API with depth 2:
public boolean allocateSpaceForUpdate(String p1){
	String v4 = SystemProperties.get("ro.apex.updatable");
	Boolean v5 = ApexProperties.tryParseBoolean(v4);
	Optional v6 = Optional.ofNullable(v5);
	Optional v3 = v6;
	Object v7 = v3.orElse(Boolean.FALSE);
	boolean v8 = v7.booleanValue();
	boolean v2 = v8;
	if (v2 != 0) {
		long v9 = Binder.clearCallingIdentity();
		CompressedApexInfoList v10 = RecoverySystemService.getCompressedApexInfoList(p1);
		if (v10 != 0) {
			ApexManager v11 = ApexManager.getInstance();
			v11.reserveSpaceForCompressedApex(v10);
			Binder.restoreCallingIdentity(v9);
			return 1;
		}
	}
}

This is path 3 for the API with depth 2:
public boolean allocateSpaceForUpdate(String p1){
	String v4 = SystemProperties.get("ro.apex.updatable");
	Boolean v5 = ApexProperties.tryParseBoolean(v4);
	Optional v6 = Optional.ofNullable(v5);
	Optional v3 = v6;
	Object v7 = v3.orElse(Boolean.FALSE);
	boolean v8 = v7.booleanValue();
	boolean v2 = v8;
	if (v2 != 0) {
		long v9 = Binder.clearCallingIdentity();
		CompressedApexInfoList v10 = RecoverySystemService.getCompressedApexInfoList(p1);
		RuntimeException v11 = caughtException.rethrowAsRuntimeException();
		Binder.restoreCallingIdentity(v9);
		return 0;
	}
}
