The method isLskfCaptured has the following code snippet:

This is path 1 for the API with depth 0:
public boolean isLskfCaptured(String p1){
	boolean v2 = this.mCallerPreparedForReboot.contains(p1);
	if (v2 != 0) {
		return 0;
	}
}
This is path 2 for the API with depth 0:
public boolean isLskfCaptured(String p1){
	boolean v2 = this.mCallerPreparedForReboot.contains(p1);
	if (v2 != 0) {
		return 1;
	}
}

and the following sink code:
['boolean v2 = this.mCallerPreparedForReboot.contains(p1);\nif (v2 != 0) {\nreturn 0;']

The method isLskfCaptured has the following similar APIs:

- API Name: clearLskf(Ljava/lang/String;)Z with Similarity Score: 0.7872511744499207
  - Access Control Level: NONE and the following code:
boolean v3 = this.mCallerPreparedForReboot.contains(p1);
boolean v4 = this.mCallerPendingRequest.containsKey(p1);
Object v5 = this.mCallerPendingRequest.remove(p1);
boolean v6 = this.mCallerPreparedForReboot.remove(p1);
LockSettingsInternal v10 = (LockSettingsInternal) this.sLocalServiceObjects.get(LockSettingsInternal.class);
boolean v13 = v10.clearRebootEscrow();

- API Name: rebootWithLskf(Ljava/lang/String;Ljava/lang/String;Z)I with Similarity Score: 0.7318030595779419
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v4 = RecoverySystemService.isLskfCaptured(p1);
boolean v5 = RecoverySystemService.verifySlotForNextBoot(p3);
RecoverySystemService$RebootPreparationError v16 = new RecoverySystemService$RebootPreparationError(5000,v8);
this.mInjector.reportRebootEscrowRebootMetrics(v39, v19, v21, v30, p3, v20, , v31);

