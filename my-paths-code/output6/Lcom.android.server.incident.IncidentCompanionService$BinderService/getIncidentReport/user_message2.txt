The method getIncidentReport has the following code snippet:

This is path 1 for the API with depth 2:
public IncidentManager$IncidentReport getIncidentReport(String p1, String p2, String p3){
	if (p1 == 0) {
		if (p2 == 0) {
			if (p3 == 0) {
				int v1 = p1.length();
				if (v1 == 0) {
					int v2 = p2.length();
					if (v2 == 0) {
						int v3 = p3.length();
						if (v3 == 0) {
							long v5 = Binder.clearCallingIdentity();
							IBinder v8 = ServiceManager.getService("incident");
							IIncidentManager v9 = IIncidentManager$Stub.asInterface(v8);
							IIncidentManager v7 = v9;
							IIncidentManager v6 = v7;
							IncidentManager$IncidentReport v10 = v6.getIncidentReport(p1, p2, p3);
							Binder.restoreCallingIdentity(v5);
							return v10;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['IBinder v8 = ServiceManager.getService("incident");\nIIncidentManager v9 = IIncidentManager$Stub.asInterface(v8);\nIIncidentManager v7 = v9;\nIIncidentManager v6 = v7;\nIncidentManager$IncidentReport v10 = v6.getIncidentReport(p1, p2, p3);\nreturn v10;']

The method getIncidentReport has the following similar APIs:

- API Name: deleteIncidentReports(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V with Similarity Score: 0.8826813697814941
  - Access Control Level: NONE and the following code:
IBinder v8 = ServiceManager.getService("incident");
IIncidentManager v9 = IIncidentManager$Stub.asInterface(v8);
IIncidentManager v7 = v9;
IIncidentManager v6 = v7;
v6.deleteIncidentReports(p1, p2, p3);

- API Name: deleteAllIncidentReports(Ljava/lang/String;)V with Similarity Score: 0.8715728521347046
  - Access Control Level: NONE and the following code:
IBinder v6 = ServiceManager.getService("incident");
IIncidentManager v7 = IIncidentManager$Stub.asInterface(v6);
IIncidentManager v5 = v7;
IIncidentManager v4 = v5;
v4.deleteAllIncidentReports(p1);

