This is path 1 for the API with depth 2:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	GrantUri v7 = new GrantUri(p4,p1,128);
	if (v6 == 0) {
		if ((UriPermission.persistableModeFlags & p2) != p2) {
			if (v9 == 0) {
				if ((UriPermission.persistableModeFlags & p2) != p2) {
					if ( != 0) {
						if ( == 0) {
							if ( == 0) {
								if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
									String v14 = Integer.toHexString((p2 & 3));
									String v17 = Integer.toHexString(this.persistableModeFlags);
									boolean v10 = 0;
									if ( == 0) {
										if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
											String v26 = Integer.toHexString((p2 & 3));
											String v29 = Integer.toHexString(this.persistableModeFlags);
											boolean v22 = 0;
											Object v35 = this.mGrantedUriPermissions.get();
											if (v35 != 0) {
												int v36 = v35.size();
												if (v36 >= 512) {
													ArrayList v38 = new ArrayList();
													ArrayList v37 = v38;
													Collection v40 = v35.values();
													Iterator v41 = v40.iterator();
													boolean v42 = v41.hasNext();
													if (v42 == 0) {
														int v43 = v37.size();
														if ((v43 - 512) > 0) {
															UriPermission$PersistedTimeComparator v44 = new UriPermission$PersistedTimeComparator();
															Collections.sort(v37, v44);
															if ( >= (v43 - 512)) {
																boolean v34 = 1;
																if ((v34 | ) == 0) {
																	p0.schedulePersistUriGrants();
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	GrantUri v7 = new GrantUri(p4,p1,128);
	if (v6 == 0) {
		if ((UriPermission.persistableModeFlags & p2) != p2) {
			if (v9 == 0) {
				if ((UriPermission.persistableModeFlags & p2) != p2) {
					if ( != 0) {
						if ( == 0) {
							if ( == 0) {
								if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
									String v14 = Integer.toHexString((p2 & 3));
									String v17 = Integer.toHexString(this.persistableModeFlags);
									boolean v10 = 0;
									if ( == 0) {
										if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
											String v26 = Integer.toHexString((p2 & 3));
											String v29 = Integer.toHexString(this.persistableModeFlags);
											boolean v22 = 0;
											Object v35 = this.mGrantedUriPermissions.get();
											if (v35 != 0) {
												int v36 = v35.size();
												if (v36 >= 512) {
													ArrayList v38 = new ArrayList();
													ArrayList v37 = v38;
													Collection v40 = v35.values();
													Iterator v41 = v40.iterator();
													boolean v42 = v41.hasNext();
													if (v42 == 0) {
														int v43 = v37.size();
														if ((v43 - 512) > 0) {
															UriPermission$PersistedTimeComparator v44 = new UriPermission$PersistedTimeComparator();
															Collections.sort(v37, v44);
															if ( >= (v43 - 512)) {
																boolean v34 = 1;
																if ((v34 | ) == 0) {
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	GrantUri v7 = new GrantUri(p4,p1,128);
	if (v6 == 0) {
		if ((UriPermission.persistableModeFlags & p2) != p2) {
			if (v9 == 0) {
				if ((UriPermission.persistableModeFlags & p2) != p2) {
					if ( != 0) {
						if ( == 0) {
							if ( == 0) {
								if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
									String v14 = Integer.toHexString((p2 & 3));
									String v17 = Integer.toHexString(this.persistableModeFlags);
									boolean v10 = 0;
									if ( == 0) {
										if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
											String v26 = Integer.toHexString((p2 & 3));
											String v29 = Integer.toHexString(this.persistableModeFlags);
											boolean v22 = 0;
											Object v35 = this.mGrantedUriPermissions.get();
											if (v35 != 0) {
												int v36 = v35.size();
												if (v36 >= 512) {
													ArrayList v38 = new ArrayList();
													ArrayList v37 = v38;
													Collection v40 = v35.values();
													Iterator v41 = v40.iterator();
													boolean v42 = v41.hasNext();
													if (v42 == 0) {
														int v43 = v37.size();
														if ((v43 - 512) > 0) {
															boolean v34 = 0;
															if ((v34 | ) == 0) {
																p0.schedulePersistUriGrants();
																return;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
