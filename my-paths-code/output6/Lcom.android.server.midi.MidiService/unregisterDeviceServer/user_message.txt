This is path 1 for the API with depth 2:
public void unregisterDeviceServer(IMidiDeviceServer p1){
	IBinder v1 = p1.asBinder();
	Object v2 = this.mDevicesByServer.get(v1);
	if (v2 == 0) {
		Iterator v4 = this.mDeviceConnections.iterator();
		boolean v5 = v4.hasNext();
		if (v5 == 0) {
			this.mDeviceConnections.clear();
			int v8 = Log.i("MidiService.Device", "setDeviceServer()");
			if (0 == 0) {
				if (this.mServer == 0) {
					IBinder v9 = 0.asBinder();
					v9.linkToDeath(MidiService$Device, 0);
					this.mServer = 0;
					if (this.mServiceInfo != 0) {
						this.this$0.removeDeviceLocked(p0);
						if (this.mBluetoothDevice == 0) {
							HashMap v13 = this.mBluetoothDevices;
							Object v14 = v13.remove(this.mBluetoothDevice);
							return;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void unregisterDeviceServer(IMidiDeviceServer p1){
	IBinder v1 = p1.asBinder();
	Object v2 = this.mDevicesByServer.get(v1);
	if (v2 == 0) {
		Iterator v4 = this.mDeviceConnections.iterator();
		boolean v5 = v4.hasNext();
		if (v5 == 0) {
			this.mDeviceConnections.clear();
			int v8 = Log.i("MidiService.Device", "setDeviceServer()");
			if (0 == 0) {
				if (this.mServer == 0) {
					IBinder v9 = 0.asBinder();
					v9.linkToDeath(MidiService$Device, 0);
					this.mServer = 0;
					if (this.mServiceInfo != 0) {
						MidiDeviceStatus v11 = new MidiDeviceStatus(this.mDeviceInfo);
						this.mDeviceStatus = v11;
						if (this.mBluetoothDevice == 0) {
							HashMap v13 = this.mBluetoothDevices;
							Object v14 = v13.remove(this.mBluetoothDevice);
							return;
						}
					}
				}
			}
		}
	}
}
