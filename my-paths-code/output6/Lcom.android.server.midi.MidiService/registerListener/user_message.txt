This is path 1 for the API with depth 1:
public void registerListener(IBinder p1, IMidiDeviceListener p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		Object v6 = this.mClients.put(p1, v3);
		MidiService$Client v1 = ;
		if (v1 != 0) {
			int v8 = this.mListeners.size();
			if (v8 >= 16) {
				IBinder v9 = p2.asBinder();
				Object v10 = this.mListeners.put(v9, p2);
				int v11 = this.mUid;
				Collection v13 = this.mDevicesByInfo.values();
				Iterator v14 = v13.iterator();
				boolean v15 = v14.hasNext();
				if (v15 == 0) {
					return;
				}
			}
		}
	}
}

This is path 2 for the API with depth 1:
public void registerListener(IBinder p1, IMidiDeviceListener p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		MidiService$Client v1 = 0;
		if (v1 != 0) {
			int v7 = this.mListeners.size();
			if (v7 >= 16) {
				IBinder v8 = p2.asBinder();
				Object v9 = this.mListeners.put(v8, p2);
				int v10 = this.mUid;
				Collection v12 = this.mDevicesByInfo.values();
				Iterator v13 = v12.iterator();
				boolean v14 = v13.hasNext();
				if (v14 == 0) {
					return;
				}
			}
		}
	}
}
