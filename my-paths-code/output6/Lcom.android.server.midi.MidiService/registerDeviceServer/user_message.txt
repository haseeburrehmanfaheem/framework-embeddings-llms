This is path 1 for the API with depth 2:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	Collection v3 = this.mDevicesByInfo.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	if (v5 == 0) {
		if ( >= 16) {
			this.mNextDeviceId = (this.mNextDeviceId + 1);
			MidiDeviceInfo v6 = new MidiDeviceInfo(p7,this.mNextDeviceId,p2,p3,p4,p5,p6,0,p8);
			if (p1 == 0) {
				p1.setDeviceInfo(v6);
				if (p7 != 3) {
					Parcelable v9 = p6.getParcelable("bluetooth_device");
					Object v10 = this.mBluetoothDevices.get(v9);
					if (v10 == 0) {
						this.mDeviceInfo = v6;
						if ( != 0) {
							MidiService$Device v12 = new MidiService$Device(MidiService,p1,v6,0,v1);
							Object v14 = this.mDevicesByInfo.put(v6, );
							if ( == 0) {
								Object v15 = this.mBluetoothDevices.put(, );
								Collection v16 = this.mClients.values();
								Iterator v17 = v16.iterator();
								boolean v18 = v17.hasNext();
								if (v18 == 0) {
									MidiDeviceInfo v2 = v6;
									return v2;
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	Collection v3 = this.mDevicesByInfo.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	if (v5 == 0) {
		if ( >= 16) {
			this.mNextDeviceId = (this.mNextDeviceId + 1);
			MidiDeviceInfo v6 = new MidiDeviceInfo(p7,this.mNextDeviceId,p2,p3,p4,p5,p6,0,p8);
			if (p1 == 0) {
				p1.setDeviceInfo(v6);
				if (p7 != 3) {
					Parcelable v9 = p6.getParcelable("bluetooth_device");
					Object v10 = this.mBluetoothDevices.get(v9);
					if (v10 == 0) {
						this.mDeviceInfo = v6;
						if ( != 0) {
							MidiService$Device v12 = new MidiService$Device(MidiService,p1,v6,0,v1);
							Object v14 = this.mDevicesByInfo.put(v6, );
							if ( == 0) {
								Collection v15 = this.mClients.values();
								Iterator v16 = v15.iterator();
								boolean v17 = v16.hasNext();
								if (v17 == 0) {
									MidiDeviceInfo v2 = v6;
									return v2;
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	Collection v3 = this.mDevicesByInfo.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	if (v5 == 0) {
		if ( >= 16) {
			this.mNextDeviceId = (this.mNextDeviceId + 1);
			MidiDeviceInfo v6 = new MidiDeviceInfo(p7,this.mNextDeviceId,p2,p3,p4,p5,p6,0,p8);
			if (p1 == 0) {
				p1.setDeviceInfo(v6);
				if (p7 != 3) {
					Parcelable v9 = p6.getParcelable("bluetooth_device");
					Object v10 = this.mBluetoothDevices.get(v9);
					if (v10 == 0) {
						this.mDeviceInfo = v6;
						if ( != 0) {
							MidiService$Device v12 = new MidiService$Device(MidiService,p1,v6,0,v1);
							Object v14 = this.mDevicesByInfo.put(v6, );
							if ( == 0) {
								Object v15 = this.mBluetoothDevices.put(, );
								Collection v16 = this.mClients.values();
								Iterator v17 = v16.iterator();
								boolean v18 = v17.hasNext();
								if (v18 == 0) {
									MidiDeviceInfo v2 = v6;
									return v2;
								}
							}
						}
					}
				}
			}
		}
	}
}
