This is path 1 for the API with depth 2:
public void closeDevice(IBinder p1, IBinder p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		Object v6 = this.mClients.put(p1, v3);
		MidiService$Client v1 = ;
		if (v1 != 0) {
			Object v8 = this.mDeviceConnections.remove(p2);
			if (v8 == 0) {
				MidiService$Device v9 = this.mDevice;
				HashMap v11 = MidiService.-$$Nest$fgetmDevicesByInfo(this.this$0);
				boolean v12 = this.mDeviceConnections.remove(v8);
				MidiService$Device v13 = v8.getDevice();
				MidiDeviceInfo v14 = v13.getDeviceInfo();
				int v15 = v14.getType();
				if (v15 != 1) {
					Object v16 = MidiService.-$$Nest$fgetmUsbMidiLock(this.this$0);
					MidiService$Device v17 = v8.getDevice();
					MidiDeviceInfo v18 = v17.getDeviceInfo();
					this.this$0.removeUsbMidiDeviceLocked(v18);
					int v20 = this.mDeviceConnections.size();
					if (v20 != 0) {
						if (this.mServiceConnection == 0) {
							Context v21 = MidiService.-$$Nest$fgetmContext(this.this$0);
							v21.unbindService(this.mServiceConnection);
							this.mServiceConnection = 0;
							if (this.mBluetoothDevice == 0) {
								MidiService$Device.closeLocked();
								int v24 = this.mListeners.size();
								if (v24 != 0) {
									int v25 = this.mDeviceConnections.size();
									if (v25 != 0) {
										HashMap v27 = MidiService.-$$Nest$fgetmClients(this.this$0);
										HashMap v28 = MidiService.-$$Nest$fgetmClients(this.this$0);
										Object v29 = v28.remove(this.mToken);
										boolean v30 = this.mToken.unlinkToDeath(MidiService$Client, 0);
										Collection v31 = this.mDeviceConnections.values();
										Iterator v32 = v31.iterator();
										boolean v33 = v32.hasNext();
										if (v33 == 0) {
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void closeDevice(IBinder p1, IBinder p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		Object v6 = this.mClients.put(p1, v3);
		MidiService$Client v1 = ;
		if (v1 != 0) {
			Object v8 = this.mDeviceConnections.remove(p2);
			if (v8 == 0) {
				MidiService$Device v9 = this.mDevice;
				HashMap v11 = MidiService.-$$Nest$fgetmDevicesByInfo(this.this$0);
				boolean v12 = this.mDeviceConnections.remove(v8);
				MidiService$Device v13 = v8.getDevice();
				MidiDeviceInfo v14 = v13.getDeviceInfo();
				int v15 = v14.getType();
				if (v15 != 1) {
					Object v16 = MidiService.-$$Nest$fgetmUsbMidiLock(this.this$0);
					MidiService$Device v17 = v8.getDevice();
					MidiDeviceInfo v18 = v17.getDeviceInfo();
					this.this$0.removeUsbMidiDeviceLocked(v18);
					int v20 = this.mDeviceConnections.size();
					if (v20 != 0) {
						if (this.mServiceConnection == 0) {
							Context v21 = MidiService.-$$Nest$fgetmContext(this.this$0);
							v21.unbindService(this.mServiceConnection);
							this.mServiceConnection = 0;
							if (this.mBluetoothDevice == 0) {
								MidiService$Device.setDeviceServer(0);
								int v24 = this.mListeners.size();
								if (v24 != 0) {
									int v25 = this.mDeviceConnections.size();
									if (v25 != 0) {
										HashMap v27 = MidiService.-$$Nest$fgetmClients(this.this$0);
										HashMap v28 = MidiService.-$$Nest$fgetmClients(this.this$0);
										Object v29 = v28.remove(this.mToken);
										boolean v30 = this.mToken.unlinkToDeath(MidiService$Client, 0);
										Collection v31 = this.mDeviceConnections.values();
										Iterator v32 = v31.iterator();
										boolean v33 = v32.hasNext();
										if (v33 == 0) {
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void closeDevice(IBinder p1, IBinder p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		MidiService$Client v1 = 0;
		if (v1 != 0) {
			Object v7 = this.mDeviceConnections.remove(p2);
			if (v7 == 0) {
				MidiService$Device v8 = this.mDevice;
				HashMap v10 = MidiService.-$$Nest$fgetmDevicesByInfo(this.this$0);
				boolean v11 = this.mDeviceConnections.remove(v7);
				MidiService$Device v12 = v7.getDevice();
				MidiDeviceInfo v13 = v12.getDeviceInfo();
				int v14 = v13.getType();
				if (v14 != 1) {
					Object v15 = MidiService.-$$Nest$fgetmUsbMidiLock(this.this$0);
					MidiService$Device v16 = v7.getDevice();
					MidiDeviceInfo v17 = v16.getDeviceInfo();
					this.this$0.removeUsbMidiDeviceLocked(v17);
					int v19 = this.mDeviceConnections.size();
					if (v19 != 0) {
						if (this.mServiceConnection == 0) {
							Context v20 = MidiService.-$$Nest$fgetmContext(this.this$0);
							v20.unbindService(this.mServiceConnection);
							this.mServiceConnection = 0;
							if (this.mBluetoothDevice == 0) {
								MidiService$Device.closeLocked();
								int v23 = this.mListeners.size();
								if (v23 != 0) {
									int v24 = this.mDeviceConnections.size();
									if (v24 != 0) {
										HashMap v26 = MidiService.-$$Nest$fgetmClients(this.this$0);
										HashMap v27 = MidiService.-$$Nest$fgetmClients(this.this$0);
										Object v28 = v27.remove(this.mToken);
										boolean v29 = this.mToken.unlinkToDeath(MidiService$Client, 0);
										Collection v30 = this.mDeviceConnections.values();
										Iterator v31 = v30.iterator();
										boolean v32 = v31.hasNext();
										if (v32 == 0) {
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
