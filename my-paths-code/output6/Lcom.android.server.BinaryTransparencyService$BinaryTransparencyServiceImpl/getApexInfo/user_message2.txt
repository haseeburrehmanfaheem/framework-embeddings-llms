The method getApexInfo has the following code snippet:

This is path 1 for the API with depth 2:
public Map getApexInfo(){
	HashMap v1 = new HashMap();
	int v5 = this.mBinaryHashes.size();
	if (v5 != 0) {
		BinaryTransparencyService.doFreshBinaryMeasurements();
		boolean v4 = 1;
		boolean v3 = v4;
		if (v3 != 0) {
			Context v8 = BinaryTransparencyService.-$$Nest$fgetmContext(this.this$0);
			PackageManager v9 = v8.getPackageManager();
			if (v9 != 0) {
				ArrayList v12 = new ArrayList();
				PackageManager v14 = this.mContext.getPackageManager();
				if (v14 != 0) {
					PackageManager$PackageInfoFlags v15 = PackageManager$PackageInfoFlags.of(1073741824);
					List v16 = v14.getInstalledPackages(v15);
					if (v16 != 0) {
						Stream v17 = v16.stream();
						BinaryTransparencyService$$ExternalSyntheticLambda0 v18 = new BinaryTransparencyService$$ExternalSyntheticLambda0();
						Stream v20 = v17.filter(v18);
						Collector v21 = Collectors.toList();
						Object v22 = v20.collect(v21);
						List v11 = v22;
						List v10 = v11;
						Iterator v23 = v10.iterator();
						boolean v24 = v23.hasNext();
						if (v24 == 0) {
							return v1;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public Map getApexInfo(){
	HashMap v1 = new HashMap();
	int v5 = this.mBinaryHashes.size();
	if (v5 != 0) {
		PackageManager v6 = this.mContext.getPackageManager();
		if (v6 != 0) {
			byte[] v7 = PackageUtils.createLargeFileBuffer();
			Set v8 = this.mBinaryLastUpdateTimes.entrySet();
			Iterator v9 = v8.iterator();
			boolean v10 = v9.hasNext();
			if (v10 == 0) {
				boolean v4 = 1;
				boolean v3 = v4;
				if (v3 != 0) {
					Context v11 = BinaryTransparencyService.-$$Nest$fgetmContext(this.this$0);
					PackageManager v12 = v11.getPackageManager();
					if (v12 != 0) {
						ArrayList v15 = new ArrayList();
						PackageManager v17 = this.mContext.getPackageManager();
						if (v17 != 0) {
							PackageManager$PackageInfoFlags v18 = PackageManager$PackageInfoFlags.of(1073741824);
							List v19 = v17.getInstalledPackages(v18);
							if (v19 != 0) {
								Stream v20 = v19.stream();
								BinaryTransparencyService$$ExternalSyntheticLambda0 v21 = new BinaryTransparencyService$$ExternalSyntheticLambda0();
								Stream v23 = v20.filter(v21);
								Collector v24 = Collectors.toList();
								Object v25 = v23.collect(v24);
								List v14 = v25;
								List v13 = v14;
								Iterator v26 = v13.iterator();
								boolean v27 = v26.hasNext();
								if (v27 == 0) {
									return v1;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['']

The method getApexInfo has the following similar APIs:

- API Name: setVrThread(I)V with Similarity Score: 1.0000001192092896
  - Access Control Level: NONE and the following code:


- API Name: setFrontActivityScreenCompatMode(I)V with Similarity Score: 1.0000001192092896
  - Access Control Level: SYS_OR_SIG and the following code:


