The method canAddMoreManagedProfiles has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	Object v4 = this.mUserTypes.get(p1);
	if (v4 == 0) {
		boolean v5 = v4.isEnabled();
		if (v5 != 0) {
			boolean v6 = v4.isManagedProfile();
			if (v6 == 0) {
				PackageManager v7 = this.mContext.getPackageManager();
				boolean v8 = v7.hasSystemFeature("android.software.managed_users");
				if (v8 != 0) {
					UserInfo v9 = UserManagerService.getUserInfoLU(p2);
					if (v9 == 0) {
						boolean v10 = v9.canHaveProfile();
						if (v10 != 0) {
							[I v11 = UserManagerService.getProfileIds(p2, p1, 0);
							if (v11.length <= 0) {
								if (p3 == 0) {
									int v12 = UserManagerService.getAliveUsersExcludingGuestsCountLU();
									int v13 = UserManager.getMaxSupportedUsers();
									if ((v13 - (v12 - )) > 0) {
										if (v6 == 0) {
											if ((v12 - ) != 1) {
												int v14 = UserManagerService.getMaxUsersOfTypePerParent(v4);
												if (v14 == -1) {
													int v15 = Math.min(, (v14 - (v11.length - )));
													if ( > 0) {
														int v2 = 0;
														if (v2 <= 0) {
															boolean v1 = ;
															return v1;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	Object v4 = this.mUserTypes.get(p1);
	if (v4 == 0) {
		boolean v5 = v4.isEnabled();
		if (v5 != 0) {
			boolean v6 = v4.isManagedProfile();
			if (v6 == 0) {
				PackageManager v7 = this.mContext.getPackageManager();
				boolean v8 = v7.hasSystemFeature("android.software.managed_users");
				if (v8 != 0) {
					UserInfo v9 = UserManagerService.getUserInfoLU(p2);
					if (v9 == 0) {
						boolean v10 = v9.canHaveProfile();
						if (v10 != 0) {
							[I v11 = UserManagerService.getProfileIds(p2, p1, 0);
							if (v11.length <= 0) {
								if (p3 == 0) {
									int v12 = UserManagerService.getAliveUsersExcludingGuestsCountLU();
									int v13 = UserManager.getMaxSupportedUsers();
									if ((v13 - (v12 - )) > 0) {
										if (v6 == 0) {
											if ((v12 - ) != 1) {
												int v14 = UserManagerService.getMaxUsersOfTypePerParent(v4);
												if (v14 == -1) {
													int v15 = Math.min(, (v14 - (v11.length - )));
													if ( > 0) {
														int v2 = 0;
														if (v2 <= 0) {
															boolean v1 = ;
															return v1;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v4 = this.mUserTypes.get(p1);\nboolean v5 = v4.isEnabled();\nboolean v6 = v4.isManagedProfile();\nUserInfo v9 = UserManagerService.getUserInfoLU(p2);\nboolean v10 = v9.canHaveProfile();\n[I v11 = UserManagerService.getProfileIds(p2, p1, 0);']

The method canAddMoreManagedProfiles has the following similar APIs:

- API Name: getRemainingCreatableProfileCount(Ljava/lang/String;I)I with Similarity Score: 0.8838231563568115
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUserTypes.get(p1);
PackageManager v7 = this.mContext.getPackageManager();
IntArray v31 = UserManagerService.getProfileIdsLU(p2, p1, 0);
[I v32 = v31.toArray();
int v38 = v3.getMaxAllowedPerParent();

- API Name: canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z with Similarity Score: 0.8511651158332825
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUserTypes.get(p1);
boolean v4 = this.mEnabled;
PackageManager v7 = this.mContext.getPackageManager();
boolean v8 = v7.hasSystemFeature("android.software.managed_users");
IntArray v31 = UserManagerService.getProfileIdsLU(p2, p1, 0);

