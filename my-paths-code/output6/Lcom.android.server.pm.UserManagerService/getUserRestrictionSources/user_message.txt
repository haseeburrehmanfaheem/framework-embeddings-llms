This is path 1 for the API with depth 2:
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v8 = this.USER_RESTRICTIONS.contains(p1);
	if (v8 != 0) {
		int v9 = Binder.getCallingUid();
		IPackageManager v10 = AppGlobals.getPackageManager();
		String v11 = v10.getPackagesForUid(v9);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						boolean v21 = UserRestrictionsUtils.isSystemApp(v9, );
						if (v21 == 0) {
							boolean v7 = 0;
							if (v7 != 0) {
								Object v25 = this.mUserRestrictions.get(p2);
								Bundle v24 = v25;
								if (v24 == 0) {
									boolean v26 = v24.getBoolean(p1, 0);
									if (v26 == 0) {
										boolean v5 = ;
										if (v5 == 0) {
											UserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);
											boolean v29 = v3.add(v27);
											RestrictionsSet v30 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
											List v31 = v30.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
											boolean v32 = v3.addAll(v31);
											List v33 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
											boolean v34 = v3.addAll(v33);
											return v3;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v8 = this.USER_RESTRICTIONS.contains(p1);
	if (v8 != 0) {
		int v9 = Binder.getCallingUid();
		IPackageManager v10 = AppGlobals.getPackageManager();
		String v11 = v10.getPackagesForUid(v9);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						boolean v20 = UserRestrictionsUtils.isSystemApp(v9, );
						if (v20 == 0) {
							boolean v7 = 0;
							if (v7 != 0) {
								Object v24 = this.mUserRestrictions.get(p2);
								Bundle v23 = v24;
								if (v23 == 0) {
									boolean v25 = v23.getBoolean(p1, 0);
									if (v25 == 0) {
										boolean v5 = ;
										if (v5 == 0) {
											UserManager$EnforcingUser v26 = new UserManager$EnforcingUser(-10000,1);
											boolean v28 = v3.add(v26);
											RestrictionsSet v29 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
											List v30 = v29.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
											boolean v31 = v3.addAll(v30);
											List v32 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
											boolean v33 = v3.addAll(v32);
											return v3;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v8 = this.USER_RESTRICTIONS.contains(p1);
	if (v8 != 0) {
		int v9 = Binder.getCallingUid();
		IPackageManager v10 = AppGlobals.getPackageManager();
		String v11 = v10.getPackagesForUid(v9);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						boolean v21 = UserRestrictionsUtils.isSystemApp(v9, );
						if (v21 == 0) {
							boolean v7 = 0;
							if (v7 != 0) {
								Object v25 = this.mUserRestrictions.get(p2);
								Bundle v24 = v25;
								if (v24 == 0) {
									boolean v26 = v24.getBoolean(p1, 0);
									if (v26 == 0) {
										boolean v5 = ;
										if (v5 == 0) {
											RestrictionsSet v27 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
											List v28 = v27.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
											boolean v29 = v3.addAll(v28);
											List v30 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
											boolean v31 = v3.addAll(v30);
											return v3;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
