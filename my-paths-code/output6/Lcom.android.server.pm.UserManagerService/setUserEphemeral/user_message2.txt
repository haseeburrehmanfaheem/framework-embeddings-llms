The method setUserEphemeral has the following code snippet:

This is path 1 for the API with depth 1:
public boolean setUserEphemeral(int p1, boolean p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		if ((UserInfo.flags & 256) == 0) {
			if ((UserInfo.flags & 8192) == 0) {
				if ( == 0) {
					if (p2 != 0) {
						if ( == p2) {
							if (p2 == 0) {
								UserInfo.flags = (UserInfo.flags | 256);
								if ( == 0) {
									AtomicFile v4 = new AtomicFile(v5);
									File v5 = new File(this.mUsersDir,v10);
									StringBuilder v6 = new StringBuilder();
									StringBuilder v8 = v6.append(UserInfo.id);
									StringBuilder v9 = v6.append(".xml");
									String v10 = v6.toString();
									FileOutputStream v13 = v4.startWrite();
									UserManagerService.writeUserLP(, v13);
									v4.finishWrite(v13);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public boolean setUserEphemeral(int p1, boolean p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		if ((UserInfo.flags & 256) == 0) {
			if ((UserInfo.flags & 8192) == 0) {
				if ( == 0) {
					if (p2 != 0) {
						if ( == p2) {
							if (p2 == 0) {
								UserInfo.flags = (UserInfo.flags & -257);
								if ( == 0) {
									AtomicFile v4 = new AtomicFile(v5);
									File v5 = new File(this.mUsersDir,v10);
									StringBuilder v6 = new StringBuilder();
									StringBuilder v8 = v6.append(UserInfo.id);
									StringBuilder v9 = v6.append(".xml");
									String v10 = v6.toString();
									FileOutputStream v13 = v4.startWrite();
									UserManagerService.writeUserLP(, v13);
									v4.finishWrite(v13);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nUserInfo.flags = (UserInfo.flags | 256);\nAtomicFile v4 = new AtomicFile(v5);\nFile v5 = new File(this.mUsersDir,v10);\nStringBuilder v6 = new StringBuilder();\nString v10 = v6.append(UserInfo.id).append(".xml").toString();\nFileOutputStream v13 = v4.startWrite();\nUserManagerService.writeUserLP(/* params */ , v13);', 'Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nUserInfo.flags = (UserInfo.flags & -257);\nAtomicFile v4 = new AtomicFile(v5);\nFile v5 = new File(this.mUsersDir,v10);\nStringBuilder v6 = new StringBuilder();\nString v10 = v6.append(UserInfo.id).append(".xml").toString();\nFileOutputStream v13 = v4.startWrite();\nUserManagerService.writeUserLP(/* params */ , v13);']

The method setUserEphemeral has the following similar APIs:

- API Name: setUserEnabled(I)V with Similarity Score: 0.905701756477356
  - Access Control Level: NONE and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
if ((this.flags & 64) == 64) {
UserInfo.flags = (UserInfo.flags ^ 64);
File v17 = new File(this.mUsersDir,v22);
StringBuilder v18 = new StringBuilder();
StringBuilder v20 = v18.append(UserInfo.id);
StringBuilder v21 = v18.append(".xml");
String v22 = v18.toString();
AtomicFile v16 = new AtomicFile(v17);
FileOutputStream v25 = v16.startWrite();
UserManagerService.writeUserLP(v12, v25);
v16.finishWrite(v25);

- API Name: setUserEnabled(I)V with Similarity Score: 0.9056220054626465
  - Access Control Level: NONE and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
if ((this.flags & 64) == 64) {
UserInfo.flags = (UserInfo.flags ^ 64);
File v17 = new File(this.mUsersDir,v22);
StringBuilder v18 = new StringBuilder();
StringBuilder v20 = v18.append(UserInfo.id);
StringBuilder v21 = v18.append(".xml");
String v22 = v18.toString();
AtomicFile v16 = new AtomicFile(v17);
FileOutputStream v25 = v16.startWrite();
UserManagerService.writeUserLP(v12, v25);
v16.finishWrite(v25);

