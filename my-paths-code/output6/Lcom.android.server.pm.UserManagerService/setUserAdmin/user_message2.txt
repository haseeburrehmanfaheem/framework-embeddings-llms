The method setUserAdmin has the following code snippet:

This is path 1 for the API with depth 1:
public void setUserAdmin(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if ((this.flags & 2) != 2) {
						boolean v11 = ;
						if (v11 == 0) {
							UserInfo.flags = (UserInfo.flags ^ 2);
							Object v13 = this.mUsers.get(UserInfo.id);
							if (v13 == 0) {
								if (UserInfo.partial == 0) {
									boolean v14 = this.mRemovingUserIds.get(UserInfo.id);
									if (v14 != 0) {
										UserManagerService$UserData v12 = 0;
										AtomicFile v16 = new AtomicFile(v17);
										File v17 = new File(this.mUsersDir,v22);
										StringBuilder v18 = new StringBuilder();
										StringBuilder v20 = v18.append(UserInfo.id);
										StringBuilder v21 = v18.append(".xml");
										String v22 = v18.toString();
										FileOutputStream v25 = v16.startWrite();
										UserManagerService.writeUserLP(v12, v25);
										v16.finishWrite(v25);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public void setUserAdmin(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if ((this.flags & 2) != 2) {
						boolean v11 = ;
						if (v11 == 0) {
							UserInfo.flags = (UserInfo.flags ^ 2);
							Object v13 = this.mUsers.get(UserInfo.id);
							if (v13 == 0) {
								if (UserInfo.partial == 0) {
									boolean v14 = this.mRemovingUserIds.get(UserInfo.id);
									if (v14 != 0) {
										UserManagerService$UserData v12 = v13;
										AtomicFile v16 = new AtomicFile(v17);
										File v17 = new File(this.mUsersDir,v22);
										StringBuilder v18 = new StringBuilder();
										StringBuilder v20 = v18.append(UserInfo.id);
										StringBuilder v21 = v18.append(".xml");
										String v22 = v18.toString();
										FileOutputStream v25 = v16.startWrite();
										UserManagerService.writeUserLP(v12, v25);
										v16.finishWrite(v25);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserInfo.flags = (UserInfo.flags ^ 2);\nObject v13 = this.mUsers.get(UserInfo.id);', 'AtomicFile v16 = new AtomicFile(v17);\nFile v17 = new File(this.mUsersDir,v22);\nStringBuilder v18 = new StringBuilder();\nStringBuilder v20 = v18.append(UserInfo.id);\nStringBuilder v21 = v18.append(".xml");\nString v22 = v18.toString();\nFileOutputStream v25 = v16.startWrite();\nUserManagerService.writeUserLP(v12, v25);\nv16.finishWrite(v25);']

The method setUserAdmin has the following similar APIs:

- API Name: setUserAccount(ILjava/lang/String;)V with Similarity Score: 0.8732144236564636
  - Access Control Level: NONE and the following code:
Object v2 = this.mUsers.get(p1);
boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
UserManagerService$UserData.account = p2;
AtomicFile v5 = new AtomicFile(v6);
File v6 = new File(this.mUsersDir,v11);
StringBuilder v7 = new StringBuilder();
StringBuilder v9 = v7.append(UserInfo.id);
StringBuilder v10 = v7.append(".xml");
String v11 = v7.toString();
FileOutputStream v14 = v5.startWrite();
UserManagerService.writeUserLP(, v14);
v5.finishWrite(v14);

- API Name: setUserName(ILjava/lang/String;)V with Similarity Score: 0.8343467116355896
  - Access Control Level: NONE and the following code:
UserInfo.name = p2;
AtomicFile v6 = new AtomicFile(v7);
UserManagerService.writeUserLP(v2, v15);

