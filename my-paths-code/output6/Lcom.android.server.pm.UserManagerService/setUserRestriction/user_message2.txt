The method setUserRestriction has the following code snippet:

This is path 1 for the API with depth 2:
public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						if (v18 == 0) {
							if ( != 0) {
								IPackageManager v19 = AppGlobals.getPackageManager();
								if ( >= .length) {
									int v20 = UserHandle.getUserId(v4);
									ApplicationInfo v21 = v19.getApplicationInfo([], 794624, v20);
									if (v21 == 0) {
										boolean v22 = v21.isSystemApp();
										if (v22 == 0) {
											boolean v17 = 1;
											if (v17 == 0) {
												boolean v2 = 0;
												if (v2 != 0) {
													Bundle v25 = this.mBaseUserRestrictions.getRestrictions(p3);
													Bundle v26 = BundleUtils.clone(v25);
													v26.putBoolean(p1, p2);
													Object v30 = this.mUserRestrictions.get(p2);
													Bundle v29 = v30;
													if (v29 == 0) {
														Bundle v32 = new Bundle();
														Bundle v31 = ;
														if (v26 == 0) {
															Object v35 = this.mUserRestrictions.get(p2);
															Bundle v34 = v35;
															if (v34 == v26) {
																Preconditions.checkState();
																Object v38 = this.mUserRestrictions.get(p2);
																Bundle v37 = v38;
																if (v37 == v26) {
																	Preconditions.checkState();
																	Object v41 = this.mUserRestrictions.get(p2);
																	boolean v42 = UserRestrictionsUtils.areEqual(v41, p1);
																	if ((v42 ^ 1) != 0) {
																		boolean v43 = BundleUtils.isEmpty(p1);
																		if (v43 != 0) {
																			this.mUserRestrictions.put(p2, p1);
																			boolean v40 = 1;
																			if (v40 == 0) {
																				Object v46 = this.mUsers.get(p2);
																				UserManagerService$UserData v45 = v46;
																				boolean v48 = this.mHandler.hasMessages(1, v45);
																				if (v48 != 0) {
																					Message v49 = this.mHandler.obtainMessage(1, v45);
																					boolean v50 = this.mHandler.sendMessageDelayed(v49, 2000);
																					Bundle v52 = this.mBaseUserRestrictions.getRestrictions(p2);
																					Bundle v53 = UserRestrictionsUtils.nonNull(v52);
																					Bundle v54 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
																					RestrictionsSet v55 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
																					boolean v56 = BundleUtils.isEmpty(v54);
																					if (v56 == 0) {
																						boolean v57 = v55.isEmpty();
																						if (v57 == 0) {
																							Bundle v58 = BundleUtils.clone(v53);
																							UserRestrictionsUtils.merge(v58, v54);
																							Bundle v60 = v55.mergeAll();
																							UserRestrictionsUtils.merge(v58, v60);
																							Bundle v51 = v58;
																							Object v63 = this.mUserRestrictions.get(p2);
																							boolean v64 = UserRestrictionsUtils.areEqual(v63, v51);
																							if ((v64 ^ 1) != 0) {
																								boolean v65 = BundleUtils.isEmpty(v51);
																								if (v65 != 0) {
																									this.mUserRestrictions.put(p2, v51);
																									boolean v62 = 1;
																									if (this.mAppOpsService == 0) {
																										UserManagerService$3 v67 = new UserManagerService$3(UserManagerService,v51,p3);
																										boolean v69 = this.mHandler.post(v67);
																										boolean v71 = UserRestrictionsUtils.areEqual(v51, v31);
																										if (v71 == 0) {
																											Bundle v72 = new Bundle(v51);
																											Bundle v74 = new Bundle(v31);
																											UserManagerService$4 v76 = new UserManagerService$4(UserManagerService,p2,v72,v74);
																											boolean v78 = this.mHandler.post(v76);
																											Bundle v79 = new Bundle(v51);
																											Object v82 = this.mUserRestrictions.get(p2);
																											boolean v83 = UserRestrictionsUtils.areEqual(v82, v79);
																											if ((v83 ^ 1) != 0) {
																												boolean v84 = BundleUtils.isEmpty(v79);
																												if (v84 != 0) {
																													this.mUserRestrictions.put(p2, v79);
																													boolean v81 = 1;
																													return;
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						if (v17 == 0) {
							if ( != 0) {
								IPackageManager v18 = AppGlobals.getPackageManager();
								if ( >= .length) {
									int v19 = UserHandle.getUserId(v4);
									ApplicationInfo v20 = v18.getApplicationInfo([], 794624, v19);
									if (v20 == 0) {
										boolean v21 = v20.isSystemApp();
										if (v21 == 0) {
											boolean v16 = 1;
											if (v16 == 0) {
												boolean v2 = 0;
												if (v2 != 0) {
													Bundle v24 = this.mBaseUserRestrictions.getRestrictions(p3);
													Bundle v25 = BundleUtils.clone(v24);
													v25.putBoolean(p1, p2);
													Object v29 = this.mUserRestrictions.get(p2);
													Bundle v28 = v29;
													if (v28 == 0) {
														Bundle v31 = new Bundle();
														Bundle v30 = ;
														if (v25 == 0) {
															Object v34 = this.mUserRestrictions.get(p2);
															Bundle v33 = v34;
															if (v33 == v25) {
																Preconditions.checkState();
																Object v37 = this.mUserRestrictions.get(p2);
																Bundle v36 = v37;
																if (v36 == v25) {
																	Preconditions.checkState();
																	Object v40 = this.mUserRestrictions.get(p2);
																	boolean v41 = UserRestrictionsUtils.areEqual(v40, p1);
																	if ((v41 ^ 1) != 0) {
																		boolean v42 = BundleUtils.isEmpty(p1);
																		if (v42 != 0) {
																			this.mUserRestrictions.put(p2, p1);
																			boolean v39 = 1;
																			if (v39 == 0) {
																				Object v45 = this.mUsers.get(p2);
																				UserManagerService$UserData v44 = v45;
																				boolean v47 = this.mHandler.hasMessages(1, v44);
																				if (v47 != 0) {
																					Message v48 = this.mHandler.obtainMessage(1, v44);
																					boolean v49 = this.mHandler.sendMessageDelayed(v48, 2000);
																					Bundle v51 = this.mBaseUserRestrictions.getRestrictions(p2);
																					Bundle v52 = UserRestrictionsUtils.nonNull(v51);
																					Bundle v53 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
																					RestrictionsSet v54 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
																					boolean v55 = BundleUtils.isEmpty(v53);
																					if (v55 == 0) {
																						boolean v56 = v54.isEmpty();
																						if (v56 == 0) {
																							Bundle v57 = BundleUtils.clone(v52);
																							UserRestrictionsUtils.merge(v57, v53);
																							Bundle v59 = v54.mergeAll();
																							UserRestrictionsUtils.merge(v57, v59);
																							Bundle v50 = v57;
																							Object v62 = this.mUserRestrictions.get(p2);
																							boolean v63 = UserRestrictionsUtils.areEqual(v62, v50);
																							if ((v63 ^ 1) != 0) {
																								boolean v64 = BundleUtils.isEmpty(v50);
																								if (v64 != 0) {
																									this.mUserRestrictions.put(p2, v50);
																									boolean v61 = 1;
																									if (this.mAppOpsService == 0) {
																										UserManagerService$3 v66 = new UserManagerService$3(UserManagerService,v50,p3);
																										boolean v68 = this.mHandler.post(v66);
																										boolean v70 = UserRestrictionsUtils.areEqual(v50, v30);
																										if (v70 == 0) {
																											Bundle v71 = new Bundle(v50);
																											Bundle v73 = new Bundle(v30);
																											UserManagerService$4 v75 = new UserManagerService$4(UserManagerService,p2,v71,v73);
																											boolean v77 = this.mHandler.post(v75);
																											Bundle v78 = new Bundle(v50);
																											Object v81 = this.mUserRestrictions.get(p2);
																											boolean v82 = UserRestrictionsUtils.areEqual(v81, v78);
																											if ((v82 ^ 1) != 0) {
																												boolean v83 = BundleUtils.isEmpty(v78);
																												if (v83 != 0) {
																													this.mUserRestrictions.put(p2, v78);
																													boolean v80 = 1;
																													return;
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void setUserRestriction(String p1, boolean p2, int p3){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						if (v18 == 0) {
							if ( != 0) {
								IPackageManager v19 = AppGlobals.getPackageManager();
								if ( >= .length) {
									int v20 = UserHandle.getUserId(v4);
									ApplicationInfo v21 = v19.getApplicationInfo([], 794624, v20);
									if (v21 == 0) {
										boolean v22 = v21.isSystemApp();
										if (v22 == 0) {
											boolean v17 = 1;
											if (v17 == 0) {
												boolean v2 = 0;
												if (v2 != 0) {
													Bundle v25 = this.mBaseUserRestrictions.getRestrictions(p3);
													Bundle v26 = BundleUtils.clone(v25);
													v26.putBoolean(p1, p2);
													Object v30 = this.mUserRestrictions.get(p2);
													Bundle v29 = v30;
													if (v29 == 0) {
														Bundle v31 = ;
														if (v26 == 0) {
															Object v33 = this.mUserRestrictions.get(p2);
															Bundle v32 = v33;
															if (v32 == v26) {
																Preconditions.checkState();
																Object v36 = this.mUserRestrictions.get(p2);
																Bundle v35 = v36;
																if (v35 == v26) {
																	Preconditions.checkState();
																	Object v39 = this.mUserRestrictions.get(p2);
																	boolean v40 = UserRestrictionsUtils.areEqual(v39, p1);
																	if ((v40 ^ 1) != 0) {
																		boolean v41 = BundleUtils.isEmpty(p1);
																		if (v41 != 0) {
																			this.mUserRestrictions.put(p2, p1);
																			boolean v38 = 1;
																			if (v38 == 0) {
																				Object v44 = this.mUsers.get(p2);
																				UserManagerService$UserData v43 = v44;
																				boolean v46 = this.mHandler.hasMessages(1, v43);
																				if (v46 != 0) {
																					Message v47 = this.mHandler.obtainMessage(1, v43);
																					boolean v48 = this.mHandler.sendMessageDelayed(v47, 2000);
																					Bundle v50 = this.mBaseUserRestrictions.getRestrictions(p2);
																					Bundle v51 = UserRestrictionsUtils.nonNull(v50);
																					Bundle v52 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
																					RestrictionsSet v53 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
																					boolean v54 = BundleUtils.isEmpty(v52);
																					if (v54 == 0) {
																						boolean v55 = v53.isEmpty();
																						if (v55 == 0) {
																							Bundle v56 = BundleUtils.clone(v51);
																							UserRestrictionsUtils.merge(v56, v52);
																							Bundle v58 = v53.mergeAll();
																							UserRestrictionsUtils.merge(v56, v58);
																							Bundle v49 = v56;
																							Object v61 = this.mUserRestrictions.get(p2);
																							boolean v62 = UserRestrictionsUtils.areEqual(v61, v49);
																							if ((v62 ^ 1) != 0) {
																								boolean v63 = BundleUtils.isEmpty(v49);
																								if (v63 != 0) {
																									this.mUserRestrictions.put(p2, v49);
																									boolean v60 = 1;
																									if (this.mAppOpsService == 0) {
																										UserManagerService$3 v65 = new UserManagerService$3(UserManagerService,v49,p3);
																										boolean v67 = this.mHandler.post(v65);
																										boolean v69 = UserRestrictionsUtils.areEqual(v49, v31);
																										if (v69 == 0) {
																											Bundle v70 = new Bundle(v49);
																											Bundle v72 = new Bundle(v31);
																											UserManagerService$4 v74 = new UserManagerService$4(UserManagerService,p2,v70,v72);
																											boolean v76 = this.mHandler.post(v74);
																											Bundle v77 = new Bundle(v49);
																											Object v80 = this.mUserRestrictions.get(p2);
																											boolean v81 = UserRestrictionsUtils.areEqual(v80, v77);
																											if ((v81 ^ 1) != 0) {
																												boolean v82 = BundleUtils.isEmpty(v77);
																												if (v82 != 0) {
																													this.mUserRestrictions.put(p2, v77);
																													boolean v79 = 1;
																													return;
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Bundle v25 = this.mBaseUserRestrictions.getRestrictions(p3);\nBundle v26 = BundleUtils.clone(v25);\nv26.putBoolean(p1, p2);\nObject v30 = this.mUserRestrictions.get(p2);\nthis.mUserRestrictions.put(p2, p1);', 'Bundle v50 = this.mBaseUserRestrictions.getRestrictions(p2);\nBundle v51 = UserRestrictionsUtils.nonNull(v50);\nBundle v52 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();\nUserManagerService$3 v65 = new UserManagerService$3(UserManagerService, v49, p3);\nthis.mHandler.post(v65);', 'Object v44 = this.mUsers.get(p2);\nboolean v46 = this.mHandler.hasMessages(1, v43);\nMessage v47 = this.mHandler.obtainMessage(1, v43);\nthis.mHandler.sendMessageDelayed(v47, 2000);', 'Bundle v56 = BundleUtils.clone(v51);\nUserRestrictionsUtils.merge(v56, v52);\nBundle v58 = v53.mergeAll();\nUserRestrictionsUtils.merge(v56, v58);\nthis.mUserRestrictions.put(p2, v49);']

The method setUserRestriction has the following similar APIs:

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.8664273023605347
  - Access Control Level: SYS_OR_SIG and the following code:
Object v25 = this.mUserRestrictions.get(p2);
Bundle v24 = v25;
boolean v26 = v24.getBoolean(p1, 0);

- API Name: getUserRestrictionSource(Ljava/lang/String;I)I with Similarity Score: 0.86204993724823
  - Access Control Level: SYS_OR_SIG and the following code:
UserManager$EnforcingUser v11 = new UserManager$EnforcingUser(-10000,1);
this.mDevicePolicyLocalUserRestrictions.put(p2, v16);
boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v9 = this.mBaseUserRestrictions.getRestrictions(p2);

