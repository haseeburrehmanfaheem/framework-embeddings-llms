The method setUserEnabled has the following code snippet:

This is path 1 for the API with depth 1:
public void setUserEnabled(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if ((this.flags & 64) == 64) {
						boolean v11 = ;
						if (v11 != 0) {
							UserInfo.flags = (UserInfo.flags ^ 64);
							Object v13 = this.mUsers.get(UserInfo.id);
							if (v13 == 0) {
								if (UserInfo.partial == 0) {
									boolean v14 = this.mRemovingUserIds.get(UserInfo.id);
									if (v14 != 0) {
										UserManagerService$UserData v12 = 0;
										AtomicFile v16 = new AtomicFile(v17);
										File v17 = new File(this.mUsersDir,v22);
										StringBuilder v18 = new StringBuilder();
										StringBuilder v20 = v18.append(UserInfo.id);
										StringBuilder v21 = v18.append(".xml");
										String v22 = v18.toString();
										FileOutputStream v25 = v16.startWrite();
										UserManagerService.writeUserLP(v12, v25);
										v16.finishWrite(v25);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public void setUserEnabled(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if ((this.flags & 64) == 64) {
						boolean v11 = ;
						if (v11 != 0) {
							UserInfo.flags = (UserInfo.flags ^ 64);
							Object v13 = this.mUsers.get(UserInfo.id);
							if (v13 == 0) {
								if (UserInfo.partial == 0) {
									boolean v14 = this.mRemovingUserIds.get(UserInfo.id);
									if (v14 != 0) {
										UserManagerService$UserData v12 = v13;
										AtomicFile v16 = new AtomicFile(v17);
										File v17 = new File(this.mUsersDir,v22);
										StringBuilder v18 = new StringBuilder();
										StringBuilder v20 = v18.append(UserInfo.id);
										StringBuilder v21 = v18.append(".xml");
										String v22 = v18.toString();
										FileOutputStream v25 = v16.startWrite();
										UserManagerService.writeUserLP(v12, v25);
										v16.finishWrite(v25);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mUsers.get(p1);\nboolean v4 = this.mRemovingUserIds.get(p1);\nif ((this.flags & 64) == 64) {\nUserInfo.flags = (UserInfo.flags ^ 64);\nFile v17 = new File(this.mUsersDir,v22);\nStringBuilder v18 = new StringBuilder();\nStringBuilder v20 = v18.append(UserInfo.id);\nStringBuilder v21 = v18.append(".xml");\nString v22 = v18.toString();\nAtomicFile v16 = new AtomicFile(v17);\nFileOutputStream v25 = v16.startWrite();\nUserManagerService.writeUserLP(v12, v25);\nv16.finishWrite(v25);']

The method setUserEnabled has the following similar APIs:

- API Name: setUserEphemeral(IZ)Z with Similarity Score: 0.905701756477356
  - Access Control Level: NONE and the following code:
Object v2 = this.mUsers.get(p1);
if ((UserInfo.flags & 256) == 0) {
if ((UserInfo.flags & 8192) == 0) {
UserInfo.flags = (UserInfo.flags | 256);
AtomicFile v4 = new AtomicFile(v5);
File v5 = new File(this.mUsersDir,v10);
StringBuilder v6 = new StringBuilder();
String v10 = v6.append(UserInfo.id).append(".xml").toString();
FileOutputStream v13 = v4.startWrite();
UserManagerService.writeUserLP(/* params */ , v13);

- API Name: setUserEphemeral(IZ)Z with Similarity Score: 0.9056220054626465
  - Access Control Level: NONE and the following code:
Object v2 = this.mUsers.get(p1);
if ((UserInfo.flags & 256) == 0) {
if ((UserInfo.flags & 8192) == 0) {
UserInfo.flags = (UserInfo.flags & -257);
AtomicFile v4 = new AtomicFile(v5);
File v5 = new File(this.mUsersDir,v10);
StringBuilder v6 = new StringBuilder();
String v10 = v6.append(UserInfo.id).append(".xml").toString();
FileOutputStream v13 = v4.startWrite();
UserManagerService.writeUserLP(/* params */ , v13);

