The method getUserRestrictionSource has the following code snippet:

This is path 1 for the API with depth 2:
public int getUserRestrictionSource(String p1, int p2){
	ArrayList v4 = new ArrayList();
	boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v8 != 0) {
		Bundle v9 = this.mBaseUserRestrictions.getRestrictions(p2);
		if (v9 == 0) {
			boolean v10 = v9.getBoolean(p1, 0);
			if (v10 == 0) {
				boolean v6 = ;
				if (v6 == 0) {
					UserManager$EnforcingUser v11 = new UserManager$EnforcingUser(-10000,1);
					boolean v13 = v4.add(v11);
					Object v15 = this.mDevicePolicyLocalUserRestrictions.get(p2);
					if (v15 != 0) {
						RestrictionsSet v16 = new RestrictionsSet();
						this.mDevicePolicyLocalUserRestrictions.put(p2, v16);
						RestrictionsSet v14 = ;
						ArrayList v20 = new ArrayList();
						int v22 = this.mUserRestrictions.size();
						if ( >= v22) {
							List v19 = v20;
							boolean v23 = v4.addAll(v19);
							ArrayList v25 = new ArrayList();
							int v27 = this.mUserRestrictions.size();
							if ( >= v27) {
								List v24 = v25;
								boolean v28 = v4.addAll(v24);
								List v1 = v4;
								int v29 = v1.size();
								if ( < 0) {
									return ;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getUserRestrictionSource(String p1, int p2){
	ArrayList v4 = new ArrayList();
	boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v8 != 0) {
		Bundle v9 = this.mBaseUserRestrictions.getRestrictions(p2);
		if (v9 == 0) {
			boolean v6 = ;
			if (v6 == 0) {
				UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
				boolean v12 = v4.add(v10);
				Object v14 = this.mDevicePolicyLocalUserRestrictions.get(p2);
				if (v14 != 0) {
					RestrictionsSet v15 = new RestrictionsSet();
					this.mDevicePolicyLocalUserRestrictions.put(p2, v15);
					RestrictionsSet v13 = ;
					ArrayList v19 = new ArrayList();
					int v21 = this.mUserRestrictions.size();
					if ( >= v21) {
						List v18 = v19;
						boolean v22 = v4.addAll(v18);
						ArrayList v24 = new ArrayList();
						int v26 = this.mUserRestrictions.size();
						if ( >= v26) {
							List v23 = v24;
							boolean v27 = v4.addAll(v23);
							List v1 = v4;
							int v28 = v1.size();
							if ( < 0) {
								return ;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserManager$EnforcingUser v11 = new UserManager$EnforcingUser(-10000,1);\nthis.mDevicePolicyLocalUserRestrictions.put(p2, v16);\nboolean v8 = UserRestrictionsUtils.isValidRestriction(p1);\nBundle v9 = this.mBaseUserRestrictions.getRestrictions(p2);', 'ArrayList v4 = new ArrayList();\nboolean v13 = v4.add(v11);\nObject v15 = this.mDevicePolicyLocalUserRestrictions.get(p2);\nRestrictionsSet v16 = new RestrictionsSet();']

The method getUserRestrictionSource has the following similar APIs:

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z with Similarity Score: 0.8644934892654419
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = this.USER_RESTRICTIONS.contains(p1);
if (v2 != 0) {
int v3 = Binder.getCallingUid();
IPackageManager v5 = ActivityThread.getPackageManager();
String v6 = v4.getPackagesForUid(v3);
Bundle v31 = this.mUserRestrictions.get(p1);
if (v31 != 0) {
Bundle v33 = this.mBaseUserRestrictions.getRestrictions(p1);
Bundle v35 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
RestrictionsSet v37 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
if ((v46 ^ 1) != 0) {
this.mUserRestrictions.put(p1, v33);

- API Name: setUserRestriction(Ljava/lang/String;ZI)V with Similarity Score: 0.86204993724823
  - Access Control Level: SYS_OR_SIG and the following code:
Bundle v50 = this.mBaseUserRestrictions.getRestrictions(p2);
Bundle v51 = UserRestrictionsUtils.nonNull(v50);
Bundle v52 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
UserManagerService$3 v65 = new UserManagerService$3(UserManagerService, v49, p3);
this.mHandler.post(v65);

