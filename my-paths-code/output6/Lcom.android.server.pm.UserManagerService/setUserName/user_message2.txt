The method setUserName has the following code snippet:

This is path 1 for the API with depth 1:
public void setUserName(int p1, String p2){
	Object v3 = this.mUsers.get(p1);
	UserManagerService$UserData v2 = v3;
	if (v2 == 0) {
		if (UserInfo.partial == 0) {
			if (p2 == 0) {
				boolean v4 = p2.equals(UserInfo.name);
				if (v4 != 0) {
					UserInfo.name = p2;
					AtomicFile v6 = new AtomicFile(v7);
					File v7 = new File(this.mUsersDir,v12);
					StringBuilder v8 = new StringBuilder();
					StringBuilder v10 = v8.append(UserInfo.id);
					StringBuilder v11 = v8.append(".xml");
					String v12 = v8.toString();
					FileOutputStream v15 = v6.startWrite();
					UserManagerService.writeUserLP(v2, v15);
					v6.finishWrite(v15);
					if ( == 0) {
						long v18 = Binder.clearCallingIdentity();
						Intent v20 = new Intent("android.intent.action.USER_INFO_CHANGED");
						Intent v22 = v20.putExtra("android.intent.extra.user_handle", p1);
						Intent v23 = v20.addFlags(1073741824);
						this.mContext.sendBroadcastAsUser(v20, UserHandle.ALL);
						Binder.restoreCallingIdentity(v18);
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public void setUserName(int p1, String p2){
	Object v3 = this.mUsers.get(p1);
	UserManagerService$UserData v2 = v3;
	if (v2 == 0) {
		if (UserInfo.partial == 0) {
			if (p2 == 0) {
				boolean v4 = p2.equals(UserInfo.name);
				if (v4 != 0) {
					UserInfo.name = p2;
					AtomicFile v6 = new AtomicFile(v7);
					File v7 = new File(this.mUsersDir,v12);
					StringBuilder v8 = new StringBuilder();
					StringBuilder v10 = v8.append(UserInfo.id);
					StringBuilder v11 = v8.append(".xml");
					String v12 = v8.toString();
					FileOutputStream v15 = v6.startWrite();
					UserManagerService.writeUserLP(v2, v15);
					v6.finishWrite(v15);
					if ( == 0) {
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['UserInfo.name = p2;\nAtomicFile v6 = new AtomicFile(v7);\nUserManagerService.writeUserLP(v2, v15);']

The method setUserName has the following similar APIs:

- API Name: clearSeedAccountData(I)V with Similarity Score: 0.8396886587142944
  - Access Control Level: NONE and the following code:
UserManagerService$UserData v2 = v3;
AtomicFile v7 = new AtomicFile(v8);
FileOutputStream v16 = v7.startWrite();
UserManagerService.writeUserLP(v2, v16);
v7.finishWrite(v16);

- API Name: setUserAdmin(I)V with Similarity Score: 0.8343467116355896
  - Access Control Level: NONE and the following code:
AtomicFile v16 = new AtomicFile(v17);
File v17 = new File(this.mUsersDir,v22);
StringBuilder v18 = new StringBuilder();
StringBuilder v20 = v18.append(UserInfo.id);
StringBuilder v21 = v18.append(".xml");
String v22 = v18.toString();
FileOutputStream v25 = v16.startWrite();
UserManagerService.writeUserLP(v12, v25);
v16.finishWrite(v25);

