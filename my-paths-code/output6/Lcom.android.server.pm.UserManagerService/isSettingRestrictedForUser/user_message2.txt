The method isSettingRestrictedForUser has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = p1.startsWith("data_roaming");
	if (v6 == 0) {
		boolean v7 = "0".equals(p3);
		if (v7 == 0) {
			UserHandle v8 = UserHandle.of(p2);
			boolean v9 = v4.hasUserRestriction(, v8);
			boolean v2 = v9;
			return v2;
		}
	}
}
This is path 2 for the API with depth 1:
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = "0".equals(p3);
	if (v6 == 0) {
		UserHandle v7 = UserHandle.of(p2);
		boolean v8 = v4.hasUserRestriction(, v7);
		boolean v2 = v8;
		return v2;
	}
}

and the following sink code:
['UserHandle v7 = UserHandle.of(p2);\nboolean v8 = v4.hasUserRestriction(, v7);\nboolean v2 = v8;\nreturn v2;']

The method isSettingRestrictedForUser has the following similar APIs:

- API Name: print(Ljava/lang/String;Landroid/print/IPrintDocumentAdapter;Landroid/print/PrintAttributes;Ljava/lang/String;II)Landroid/os/Bundle; with Similarity Score: 0.7191710472106934
  - Access Control Level: SYS_OR_SIG and the following code:
UserHandle v3 = Binder.getCallingUserHandle();
boolean v4 = this.mUserManager.hasUserRestriction("no_printing", v3);

- API Name: getLocationFlags(Ljava/lang/String;)I with Similarity Score: 0.7184566259384155
  - Access Control Level: NONE and the following code:
int v2 = UserHandle.getUserId(v1);

