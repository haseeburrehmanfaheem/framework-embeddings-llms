The method isUserRunning has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v3 = this.mUserStates;
	UserManagerService$WatchedUserStates v4 = this.mUserStates;
	int v6 = this.states.indexOfKey(p1);
	if (v6 < 0) {
		int v7 = this.states.get(p1);
		int v5 = ;
		if (v5 < 0) {
			boolean v2 = ;
			return v2;
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v3 = this.mUserStates;
	UserManagerService$WatchedUserStates v4 = this.mUserStates;
	int v6 = this.states.indexOfKey(p1);
	if (v6 < 0) {
		int v7 = this.states.get(p1);
		int v5 = ;
		if (v5 < 0) {
			boolean v2 = ;
			return v2;
		}
	}
}

and the following sink code:
['int v6 = this.states.indexOfKey(p1);\nint v7 = this.states.get(p1);\nboolean v2 = ;\nreturn v2;']

The method isUserRunning has the following similar APIs:

- API Name: isUserUnlocked(I)Z with Similarity Score: 0.9781146049499512
  - Access Control Level: NONE and the following code:
int v6 = this.states.indexOfKey(p1);
if (v6 < 0) {
int v7 = this.states.get(p1);
boolean v2 = ;
return v2;

- API Name: isUserUnlockingOrUnlocked(I)Z with Similarity Score: 0.9697164297103882
  - Access Control Level: NONE and the following code:
int v6 = this.states.indexOfKey(p1);
int v7 = this.states.get(p1);

