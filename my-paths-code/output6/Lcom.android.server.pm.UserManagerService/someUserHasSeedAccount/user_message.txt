This is path 1 for the API with depth 2:
public boolean someUserHasSeedAccount(String p1, String p2){
	int v3 = this.mUsers.size();
	if ( >= v3) {
		Object v4 = this.mUsers.valueAt();
		if ((this.flags & 16) != 16) {
			boolean v5 = ;
			if (v5 == 0) {
				boolean v6 = this.mRemovingUserIds.get(UserInfo.id);
				if (v6 == 0) {
					if (UserManagerService$UserData.seedAccountName == 0) {
						boolean v7 = UserManagerService$UserData.seedAccountName.equals(p1);
						if (v7 != 0) {
							if (UserManagerService$UserData.seedAccountType == 0) {
								boolean v8 = UserManagerService$UserData.seedAccountType.equals(p2);
								if (v8 != 0) {
									boolean v2 = 1;
									return v2;
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public boolean someUserHasSeedAccount(String p1, String p2){
	int v3 = this.mUsers.size();
	if ( >= v3) {
		Object v4 = this.mUsers.valueAt();
		if ((this.flags & 16) != 16) {
			boolean v5 = ;
			if (v5 == 0) {
				boolean v6 = this.mRemovingUserIds.get(UserInfo.id);
				if (v6 == 0) {
					if (UserManagerService$UserData.seedAccountName == 0) {
						boolean v7 = UserManagerService$UserData.seedAccountName.equals(p1);
						if (v7 != 0) {
							if (UserManagerService$UserData.seedAccountType == 0) {
								boolean v8 = UserManagerService$UserData.seedAccountType.equals(p2);
								if (v8 != 0) {
									boolean v2 = 1;
									return v2;
								}
							}
						}
					}
				}
			}
		}
	}
}
