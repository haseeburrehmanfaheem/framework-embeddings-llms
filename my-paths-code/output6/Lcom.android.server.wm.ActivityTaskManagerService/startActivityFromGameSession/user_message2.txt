The method startActivityFromGameSession has the following code snippet:

This is path 1 for the API with depth 2:
public int startActivityFromGameSession(IApplicationThread p1, String p2, String p3, int p4, int p5, Intent p6, int p7, int p8){
	if (v1 != 0) {
		if (v4 == 0) {
			ActivityOptions v6 = new ActivityOptions();
			ActivityOptions v5 = v6;
			this.mLaunchTaskId = p7;
			int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, "startActivityFromGameSession", 0);
			int v9 = v10;
			long v11 = Binder.clearCallingIdentity();
			ActivityStartController v12 = this.mActivityStartController;
			ActivityStarter v14 = this.mFactory.obtain();
			ActivityStarter$Request.intent = p1;
			ActivityStarter v15 = ActivityStarter;
			ActivityStarter$Request.reason = p2;
			ActivityStarter v16 = ActivityStarter;
			ActivityStarter v13 = v16;
			ActivityStarter v17 = v13.setCaller(p1);
			ActivityStarter v18 = v17.setCallingUid(p5);
			ActivityStarter v19 = v18.setCallingPid(p4);
			String v20 = p6.getPackage();
			ActivityStarter v21 = v19.setCallingPackage(v20);
			ActivityStarter v22 = v21.setCallingFeatureId(p3);
			ActivityStarter v23 = v22.setUserId(v9);
			Bundle v24 = v5.toBundle();
			if (p1 == 0) {
				SafeActivityOptions v27 = new SafeActivityOptions(v28);
				ActivityOptions v28 = ActivityOptions.fromBundle(p1);
				SafeActivityOptions v26 = ;
				ActivityStarter$Request.activityOptions = v26;
				ActivityStarter v30 = ActivityStarter;
				ActivityStarter v25 = v30;
				int v31 = Binder.getCallingUid();
				ActivityStarter v32 = v25.setRealCallingUid(v31);
				int v33 = v32.execute();
				Binder.restoreCallingIdentity(v11);
				return v33;
			}
		}
	}
}

and the following sink code:
['ActivityStarter v14 = this.mFactory.obtain();\nActivityStarter$Request.intent = p1;\nActivityStarter v17 = v13.setCaller(p1);\nActivityStarter v18 = v17.setCallingUid(p5);\nint v33 = v32.execute();', 'ActivityOptions v6 = new ActivityOptions();\nthis.mLaunchTaskId = p7;\nint v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, "startActivityFromGameSession", 0);']

The method startActivityFromGameSession has the following similar APIs:

- API Name: startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I with Similarity Score: 0.8989689946174622
  - Access Control Level: SYS_OR_SIG and the following code:
ActivityStarter v7 = this.mFactory.obtain();
ActivityStarter$Request.intent = p1;
ActivityStarter$Request.reason = p2;
ActivityStarter v10 = v6.setCallingUid(p4);
ActivityStarter v11 = v10.setCallingPackage(p1);
ActivityStarter v12 = v11.setCallingFeatureId(p2);
ActivityStarter v13 = v12.setResolvedType(p6);
ActivityStarter v14 = v13.setVoiceSession(p7);
ActivityStarter v15 = v14.setVoiceInteractor(p8);
ActivityStarter v16 = v15.setStartFlags(p9);
ActivityStarter v17 = v16.setProfilerInfo(p10);
SafeActivityOptions v20 = new SafeActivityOptions(v21);
ActivityOptions v21 = ActivityOptions.fromBundle(p1);
ActivityStarter$Request.activityOptions = v19;
ActivityStarter v24 = v18.setUserId(v3);
ActivityStarter v25 = v24.setAllowBackgroundActivityStart(1);
int v26 = v25.execute();

- API Name: startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult; with Similarity Score: 0.7732987999916077
  - Access Control Level: SYS_OR_SIG and the following code:
int v12 = this.mAmInternal.handleIncomingUser(v9, v10, p12, 0, 0, "startActivityAndWait", 0);
int v11 = v12;
ActivityStarter$Request.intent = p4;
ActivityStarter v18 = v14.setCaller(p1);
ActivityStarter v19 = v18.setCallingPackage(p2);
ActivityStarter v20 = v19.setCallingFeatureId(p3);
ActivityStarter v21 = v20.setResolvedType(p5);
ActivityStarter v22 = v21.setResultTo(p6);
ActivityStarter v23 = v22.setResultWho(p7);
ActivityStarter v24 = v23.setRequestCode(p8);
ActivityStarter v25 = v24.setStartFlags(p9);
WaitResult v4 = new WaitResult();
int v35 = v34.execute();
return v4;

