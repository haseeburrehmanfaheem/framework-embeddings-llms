The method cancelTaskWindowTransition has the following code snippet:

This is path 1 for the API with depth 2:
public void cancelTaskWindowTransition(int p1){
	long v2 = Binder.clearCallingIdentity();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
			Integer v11 = Integer.valueOf(p1);
			PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
			Task v13 = RootWindowContainer.getTask(v12);
			v12.recycle();
			if (v13 == 0) {
				if (0 == 0) {
					Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
					if (v15 == 0) {
						Task v16 = v13.getRootTask();
						if (v16 == v15) {
							if (0 == 0) {
								boolean v17 = v13.reparent(v15, 0, , 1, 1, "anyTaskForId");
								Task v7 = v13;
								Task v6 = v7;
								if (v6 != 0) {
									Binder.restoreCallingIdentity(v2);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void cancelTaskWindowTransition(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v9 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v11 = PooledLambda.__(Tas.class);
			Integer v12 = Integer.valueOf(p1);
			PooledPredicate v13 = PooledLambda.obtainPredicate(v9, v11, v12);
			Task v14 = RootWindowContainer.getTask(v13);
			v13.recycle();
			if (v14 == 0) {
				if (0 == 0) {
					Task v16 = RootWindowContainer.getOrCreateRootTask(0, 0, v14, 0);
					if (v16 == 0) {
						Task v17 = v14.getRootTask();
						if (v17 == v16) {
							if (0 == 0) {
								boolean v18 = v14.reparent(v16, 0, , 1, 1, "anyTaskForId");
								Task v8 = v14;
								Task v7 = v8;
								if (v7 != 0) {
									Binder.restoreCallingIdentity(v2);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void cancelTaskWindowTransition(int p1){
	long v2 = Binder.clearCallingIdentity();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
			Integer v11 = Integer.valueOf(p1);
			PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
			Task v13 = RootWindowContainer.getTask(v12);
			v12.recycle();
			if (v13 == 0) {
				if (0 == 0) {
					Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
					if (v15 == 0) {
						Task v16 = v13.getRootTask();
						if (v16 == v15) {
							if (0 == 0) {
								boolean v17 = v13.reparent(v15, 0, , 1, 1, "anyTaskForId");
								Task v7 = v13;
								Task v6 = v7;
								if (v6 != 0) {
									WindowManagerThreadPriorityBooster.reset();
									Binder.restoreCallingIdentity(v2);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();\nInteger v11 = Integer.valueOf(p1);\nPooledPredicate v12 = PooledLambda.obtainPredicate(v8, ArgumentPlaceholder v10, v11);', 'Task v13 = RootWindowContainer.getTask(v12);\nif (v13 == 0) { ... }']

The method cancelTaskWindowTransition has the following similar APIs:

- API Name: getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription; with Similarity Score: 0.9064064621925354
  - Access Control Level: SYS_OR_SIG and the following code:
AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
Integer v10 = Integer.valueOf(p1);
PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
Task v12 = RootWindowContainer.getTask(v11);
ActivityManager$TaskDescription v17 = v5.getTaskDescription();
return v17;

- API Name: getTaskBounds(I)Landroid/graphics/Rect; with Similarity Score: 0.8905086517333984
  - Access Control Level: NONE and the following code:
AppTransition$$ExternalSyntheticLambda2 v10 = new AppTransition$$ExternalSyntheticLambda2();
ArgumentPlaceholder v12 = PooledLambda.__(Tas.class);
Integer v13 = Integer.valueOf(p1);
PooledPredicate v14 = PooledLambda.obtainPredicate(v10, v12, v13);
Task v15 = RootWindowContainer.getTask(v14);

