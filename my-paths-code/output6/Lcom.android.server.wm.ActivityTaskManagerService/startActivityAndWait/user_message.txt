This is path 1 for the API with depth 2:
public WaitResult startActivityAndWait(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	if (v3 == 0) {
		WaitResult v4 = new WaitResult();
		if (v8 != 0) {
			int v9 = Binder.getCallingPid();
			int v10 = Binder.getCallingUid();
			int v12 = this.mAmInternal.handleIncomingUser(v9, v10, p12, 0, 0, "startActivityAndWait", 0);
			int v11 = v12;
			ActivityStartController v13 = this.mActivityStartController;
			ActivityStarter v15 = this.mFactory.obtain();
			ActivityStarter$Request.intent = p1;
			ActivityStarter v16 = ActivityStarter;
			ActivityStarter$Request.reason = p2;
			ActivityStarter v17 = ActivityStarter;
			ActivityStarter v14 = v17;
			ActivityStarter v18 = v14.setCaller(p1);
			ActivityStarter v19 = v18.setCallingPackage(p2);
			ActivityStarter v20 = v19.setCallingFeatureId(p3);
			ActivityStarter v21 = v20.setResolvedType(p5);
			ActivityStarter v22 = v21.setResultTo(p6);
			ActivityStarter v23 = v22.setResultWho(p7);
			ActivityStarter v24 = v23.setRequestCode(p8);
			ActivityStarter v25 = v24.setStartFlags(p9);
			if (p1 == 0) {
				SafeActivityOptions v28 = new SafeActivityOptions(v29);
				ActivityOptions v29 = ActivityOptions.fromBundle(p1);
				SafeActivityOptions v27 = ;
				ActivityStarter$Request.activityOptions = v27;
				ActivityStarter v31 = ActivityStarter;
				ActivityStarter v26 = v31;
				ActivityStarter v32 = v26.setUserId(v11);
				ActivityStarter v33 = v32.setProfilerInfo(p10);
				ActivityStarter v34 = v33.setWaitResult(v4);
				int v35 = v34.execute();
				return v4;
			}
		}
	}
}
