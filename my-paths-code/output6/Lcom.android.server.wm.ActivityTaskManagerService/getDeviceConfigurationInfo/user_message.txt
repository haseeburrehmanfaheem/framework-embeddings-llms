This is path 1 for the API with depth 2:
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	int v7 = Binder.getCallingPid();
	if (v7 == WindowManagerService.MY_PID) {
		if (v7 >= 0) {
			WindowManagerService.boostPriorityForLockedSection();
			WindowProcessController v10 = this.mProcessMap.getProcess(v7);
			if (v10 == 0) {
				Configuration v11 = v10.getConfiguration();
				WindowManagerService.resetPriorityAfterLockedSection();
				Configuration v8 = ;
				Configuration v6 = v8;
				ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
				ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
				ConfigurationInfo.reqNavigation = Configuration.navigation;
				if (Configuration.navigation == 2) {
					if (Configuration.navigation != 3) {
						ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
						if (Configuration.keyboard == 0) {
							if (Configuration.keyboard == 1) {
								ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
								ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
								return v1;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	WindowManagerThreadPriorityBooster.boost();
	int v8 = Binder.getCallingPid();
	if (v8 == WindowManagerService.MY_PID) {
		if (v8 >= 0) {
			WindowManagerService.boostPriorityForLockedSection();
			WindowProcessController v11 = this.mProcessMap.getProcess(v8);
			if (v11 == 0) {
				Configuration v12 = v11.getConfiguration();
				WindowManagerService.resetPriorityAfterLockedSection();
				Configuration v9 = ;
				Configuration v7 = v9;
				ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
				ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
				ConfigurationInfo.reqNavigation = Configuration.navigation;
				if (Configuration.navigation == 2) {
					if (Configuration.navigation != 3) {
						ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
						if (Configuration.keyboard == 0) {
							if (Configuration.keyboard == 1) {
								ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
								ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
								return v1;
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	int v7 = Binder.getCallingPid();
	if (v7 == WindowManagerService.MY_PID) {
		if (v7 >= 0) {
			WindowManagerService.boostPriorityForLockedSection();
			WindowProcessController v10 = this.mProcessMap.getProcess(v7);
			if (v10 == 0) {
				Configuration v11 = v10.getConfiguration();
				WindowManagerService.resetPriorityAfterLockedSection();
				Configuration v8 = ;
				Configuration v6 = v8;
				ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
				ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
				ConfigurationInfo.reqNavigation = Configuration.navigation;
				if (Configuration.navigation == 2) {
					if (Configuration.navigation != 3) {
						ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
						if (Configuration.keyboard == 0) {
							if (Configuration.keyboard == 1) {
								ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
								ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
								WindowManagerThreadPriorityBooster.reset();
								return v1;
							}
						}
					}
				}
			}
		}
	}
}
