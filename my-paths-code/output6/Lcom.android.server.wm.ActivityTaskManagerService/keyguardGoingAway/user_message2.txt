The method keyguardGoingAway has the following code snippet:

This is path 1 for the API with depth 2:
public void keyguardGoingAway(int p1){
	if (v3 != 0) {
		long v4 = Binder.clearCallingIdentity();
		if ((p1 & 16) == 0) {
			if (0 != 0) {
				this.sThreadPriorityBooster.boost();
				if (0 != 0) {
					TaskDisplayArea v13 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
					TaskDisplayArea v12 = v13;
					Task v14 = this.mRootHomeTask;
					if (v14 == 0) {
						ActivityRecord v16 = TaskFragment.topRunningActivity(0);
						ActivityRecord v15 = v16;
						if ( == 0) {
							boolean v17 = .isActivityTypeHome();
							if (v17 == 0) {
								Task v18 = this.task;
								this.mCache.removeRunningEntry(Task.mTaskId);
								this.sThreadPriorityBooster.reset();
								ActivityTaskManagerService$$ExternalSyntheticLambda1 v23 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
								this.mRootWindowContainer.forAllDisplays(v23);
								Binder.restoreCallingIdentity(v4);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void keyguardGoingAway(int p1){
	if (v3 != 0) {
		long v4 = Binder.clearCallingIdentity();
		WindowManagerThreadPriorityBooster.boost();
		if ((p1 & 16) == 0) {
			if (0 != 0) {
				this.sThreadPriorityBooster.boost();
				if (0 != 0) {
					TaskDisplayArea v14 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
					TaskDisplayArea v13 = v14;
					Task v15 = this.mRootHomeTask;
					if (v15 == 0) {
						ActivityRecord v17 = TaskFragment.topRunningActivity(0);
						ActivityRecord v16 = v17;
						if ( == 0) {
							boolean v18 = .isActivityTypeHome();
							if (v18 == 0) {
								Task v19 = this.task;
								this.mCache.removeRunningEntry(Task.mTaskId);
								this.sThreadPriorityBooster.reset();
								ActivityTaskManagerService$$ExternalSyntheticLambda1 v24 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
								this.mRootWindowContainer.forAllDisplays(v24);
								Binder.restoreCallingIdentity(v4);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void keyguardGoingAway(int p1){
	if (v3 != 0) {
		long v4 = Binder.clearCallingIdentity();
		if ((p1 & 16) == 0) {
			if (0 != 0) {
				this.sThreadPriorityBooster.boost();
				if (0 != 0) {
					TaskDisplayArea v13 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
					TaskDisplayArea v12 = v13;
					Task v14 = this.mRootHomeTask;
					if (v14 == 0) {
						ActivityRecord v16 = TaskFragment.topRunningActivity(0);
						ActivityRecord v15 = v16;
						if ( == 0) {
							boolean v17 = .isActivityTypeHome();
							if (v17 == 0) {
								Task v18 = this.task;
								this.mCache.removeRunningEntry(Task.mTaskId);
								this.sThreadPriorityBooster.reset();
								ActivityTaskManagerService$$ExternalSyntheticLambda1 v23 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
								this.mRootWindowContainer.forAllDisplays(v23);
								WindowManagerThreadPriorityBooster.reset();
								Binder.restoreCallingIdentity(v4);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ActivityTaskManagerService$$ExternalSyntheticLambda1 v23 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);\nthis.mRootWindowContainer.forAllDisplays(v23);', 'long v4 = Binder.clearCallingIdentity();\nthis.sThreadPriorityBooster.boost();\nthis.mCache.removeRunningEntry(Task.mTaskId);\nthis.sThreadPriorityBooster.reset();\nBinder.restoreCallingIdentity(v4);']

The method keyguardGoingAway has the following similar APIs:

- API Name: finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V with Similarity Score: 0.8523233532905579
  - Access Control Level: NONE and the following code:
RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
WindowContainer.forAllRootTasks(v6, 1);

- API Name: onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V with Similarity Score: 0.8398277163505554
  - Access Control Level: NONE and the following code:
WindowContainer$$ExternalSyntheticLambda2 v7 = new WindowContainer$$ExternalSyntheticLambda2();
ActivityRecord v10 = WindowContainer.getActivity(v7, 1, 0);

