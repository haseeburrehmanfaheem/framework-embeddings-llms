This is path 1 for the API with depth 2:
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	if (v9 != 0) {
		IPackageManager v11 = ActivityThread.getPackageManager();
		IPackageManager v10 = v11;
		boolean v12 = v10.isUidPrivileged(v1);
		if (v12 == 0) {
			if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
				String v13 = String.valueOf("getRecentTasks");
				Object v14 = new Object(2);
				Long v15 = Long.valueOf(v1);
				ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
				v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
				if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
					String v19 = String.valueOf("getRecentTasks");
					Object v20 = new Object(2);
					Long v21 = Long.valueOf(v1);
					ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
					v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
					boolean v6 = ;
					ParceledListSlice v29 = new ParceledListSlice(v30);
					if ((p2 & 1) == 0) {
						boolean v31 = RecentTasks.isUserRunning(p4, 4);
						if (v31 != 0) {
							RecentTasks.loadUserRecentsLocked(p4);
							Set v33 = RecentTasks.getProfileIds(p4);
							Integer v34 = Integer.valueOf(p4);
							boolean v35 = v33.add(v34);
							ArrayList v36 = new ArrayList();
							int v38 = this.mTasks.size();
							if ( >= v38) {
								ArrayList v30 = v36;
								ParceledListSlice v28 = v29;
								return v28;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	if (v9 != 0) {
		IPackageManager v11 = ActivityThread.getPackageManager();
		IPackageManager v10 = v11;
		boolean v12 = v10.isUidPrivileged(v1);
		if (v12 == 0) {
			if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
				String v13 = String.valueOf("getRecentTasks");
				Object v14 = new Object(2);
				Long v15 = Long.valueOf(v1);
				ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
				v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
				if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
					String v19 = String.valueOf("getRecentTasks");
					Object v20 = new Object(2);
					Long v21 = Long.valueOf(v1);
					ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
					v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
					boolean v6 = ;
					WindowManagerThreadPriorityBooster.boost();
					ParceledListSlice v30 = new ParceledListSlice(v31);
					if ((p2 & 1) == 0) {
						boolean v32 = RecentTasks.isUserRunning(p4, 4);
						if (v32 != 0) {
							RecentTasks.loadUserRecentsLocked(p4);
							Set v34 = RecentTasks.getProfileIds(p4);
							Integer v35 = Integer.valueOf(p4);
							boolean v36 = v34.add(v35);
							ArrayList v37 = new ArrayList();
							int v39 = this.mTasks.size();
							if ( >= v39) {
								ArrayList v31 = v37;
								ParceledListSlice v29 = v30;
								return v29;
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	if (v9 != 0) {
		IPackageManager v11 = ActivityThread.getPackageManager();
		IPackageManager v10 = v11;
		boolean v12 = v10.isUidPrivileged(v1);
		if (v12 == 0) {
			if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
				String v13 = String.valueOf("getRecentTasks");
				Object v14 = new Object(2);
				Long v15 = Long.valueOf(v1);
				ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
				v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
				if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
					String v19 = String.valueOf("getRecentTasks");
					Object v20 = new Object(2);
					Long v21 = Long.valueOf(v1);
					ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
					v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
					boolean v6 = ;
					ParceledListSlice v29 = new ParceledListSlice(v30);
					if ((p2 & 1) == 0) {
						boolean v31 = RecentTasks.isUserRunning(p4, 4);
						if (v31 != 0) {
							RecentTasks.loadUserRecentsLocked(p4);
							Set v33 = RecentTasks.getProfileIds(p4);
							Integer v34 = Integer.valueOf(p4);
							boolean v35 = v33.add(v34);
							ArrayList v36 = new ArrayList();
							int v38 = this.mTasks.size();
							if ( >= v38) {
								ArrayList v30 = v36;
								ParceledListSlice v28 = v29;
								WindowManagerThreadPriorityBooster.reset();
								return v28;
							}
						}
					}
				}
			}
		}
	}
}
