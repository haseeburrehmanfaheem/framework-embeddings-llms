This is path 1 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt();
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			Task v7 = v10;
			Task v6 = v7;
			if (v6 == 0) {
				int v13 = RootWindowContainer.getChildCount();
				if ( < 0) {
					WindowContainer v14 = RootWindowContainer.getChildAt();
					Task v15 = v14.getRootTask(p1);
					if (v15 == 0) {
						Task v12 = v15;
						if (v12 == 0) {
							ActivityTaskManager$RootTaskInfo v17 = new ActivityTaskManager$RootTaskInfo();
							v12.fillTaskInfo(v17);
							DisplayContent v20 = v12.getDisplayContent();
							if (v20 != 0) {
								[I v21 = new [I(1);
								[Z v22 = new [Z(1);
								RootWindowContainer$$ExternalSyntheticLambda21 v23 = new RootWindowContainer$$ExternalSyntheticLambda21(v12,v22,v21);
								boolean v25 = v20.forAllRootTasks(v23, 0);
								if (v22[0] == 0) {
									ActivityTaskManager$RootTaskInfo.position = ;
									boolean v26 = v12.shouldBeVisible(0);
									ActivityTaskManager$RootTaskInfo.visible = v26;
									v12.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
									int v28 = v12.getDescendantTaskCount();
									[I v29 = new [I(v28);
									ActivityTaskManager$RootTaskInfo.childTaskIds = v29;
									String v30 = new String(v28);
									ActivityTaskManager$RootTaskInfo.childTaskNames = v30;
									Rect v31 = new Rect(v28);
									ActivityTaskManager$RootTaskInfo.childTaskBounds = v31;
									[I v32 = new [I(v28);
									ActivityTaskManager$RootTaskInfo.childTaskUserIds = v32;
									[I v33 = new [I(1);
									RootWindowContainer$$ExternalSyntheticLambda22 v34 = new RootWindowContainer$$ExternalSyntheticLambda22();
									ArgumentPlaceholder v36 = PooledLambda.__(Tas.class);
									PooledConsumer v37 = PooledLambda.obtainConsumer(v34, v36, v17, v33);
									v12.forAllLeafTasks(v37, 0);
									v37.recycle();
									ActivityRecord v40 = v12.topRunningActivity();
									if (v40 == 0) {
										ComponentName v41 = ActivityRecord.intent.getComponent();
										ActivityTaskManager$RootTaskInfo.topActivity = ;
										ActivityTaskManager$RootTaskInfo v16 = v17;
										ActivityTaskManager$RootTaskInfo v11 = v16;
										Binder.restoreCallingIdentity(v2);
										return ;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	int v9 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v10 = RootWindowContainer.getChildAt();
		Task v11 = v10.getFocusedRootTask();
		if (v11 == 0) {
			Task v8 = v11;
			Task v7 = v8;
			if (v7 == 0) {
				int v14 = RootWindowContainer.getChildCount();
				if ( < 0) {
					WindowContainer v15 = RootWindowContainer.getChildAt();
					Task v16 = v15.getRootTask(p1);
					if (v16 == 0) {
						Task v13 = v16;
						if (v13 == 0) {
							ActivityTaskManager$RootTaskInfo v18 = new ActivityTaskManager$RootTaskInfo();
							v13.fillTaskInfo(v18);
							DisplayContent v21 = v13.getDisplayContent();
							if (v21 != 0) {
								[I v22 = new [I(1);
								[Z v23 = new [Z(1);
								RootWindowContainer$$ExternalSyntheticLambda21 v24 = new RootWindowContainer$$ExternalSyntheticLambda21(v13,v23,v22);
								boolean v26 = v21.forAllRootTasks(v24, 0);
								if (v23[0] == 0) {
									ActivityTaskManager$RootTaskInfo.position = ;
									boolean v27 = v13.shouldBeVisible(0);
									ActivityTaskManager$RootTaskInfo.visible = v27;
									v13.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
									int v29 = v13.getDescendantTaskCount();
									[I v30 = new [I(v29);
									ActivityTaskManager$RootTaskInfo.childTaskIds = v30;
									String v31 = new String(v29);
									ActivityTaskManager$RootTaskInfo.childTaskNames = v31;
									Rect v32 = new Rect(v29);
									ActivityTaskManager$RootTaskInfo.childTaskBounds = v32;
									[I v33 = new [I(v29);
									ActivityTaskManager$RootTaskInfo.childTaskUserIds = v33;
									[I v34 = new [I(1);
									RootWindowContainer$$ExternalSyntheticLambda22 v35 = new RootWindowContainer$$ExternalSyntheticLambda22();
									ArgumentPlaceholder v37 = PooledLambda.__(Tas.class);
									PooledConsumer v38 = PooledLambda.obtainConsumer(v35, v37, v18, v34);
									v13.forAllLeafTasks(v38, 0);
									v38.recycle();
									ActivityRecord v41 = v13.topRunningActivity();
									if (v41 == 0) {
										ComponentName v42 = ActivityRecord.intent.getComponent();
										ActivityTaskManager$RootTaskInfo.topActivity = ;
										ActivityTaskManager$RootTaskInfo v17 = v18;
										ActivityTaskManager$RootTaskInfo v12 = v17;
										Binder.restoreCallingIdentity(v2);
										return ;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt();
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			Task v7 = v10;
			Task v6 = v7;
			if (v6 == 0) {
				int v13 = RootWindowContainer.getChildCount();
				if ( < 0) {
					WindowContainer v14 = RootWindowContainer.getChildAt();
					Task v15 = v14.getRootTask(p1);
					if (v15 == 0) {
						Task v12 = v15;
						if (v12 == 0) {
							ActivityTaskManager$RootTaskInfo v17 = new ActivityTaskManager$RootTaskInfo();
							v12.fillTaskInfo(v17);
							DisplayContent v20 = v12.getDisplayContent();
							if (v20 != 0) {
								[I v21 = new [I(1);
								[Z v22 = new [Z(1);
								RootWindowContainer$$ExternalSyntheticLambda21 v23 = new RootWindowContainer$$ExternalSyntheticLambda21(v12,v22,v21);
								boolean v25 = v20.forAllRootTasks(v23, 0);
								if (v22[0] == 0) {
									ActivityTaskManager$RootTaskInfo.position = ;
									boolean v26 = v12.shouldBeVisible(0);
									ActivityTaskManager$RootTaskInfo.visible = v26;
									v12.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
									int v28 = v12.getDescendantTaskCount();
									[I v29 = new [I(v28);
									ActivityTaskManager$RootTaskInfo.childTaskIds = v29;
									String v30 = new String(v28);
									ActivityTaskManager$RootTaskInfo.childTaskNames = v30;
									Rect v31 = new Rect(v28);
									ActivityTaskManager$RootTaskInfo.childTaskBounds = v31;
									[I v32 = new [I(v28);
									ActivityTaskManager$RootTaskInfo.childTaskUserIds = v32;
									[I v33 = new [I(1);
									RootWindowContainer$$ExternalSyntheticLambda22 v34 = new RootWindowContainer$$ExternalSyntheticLambda22();
									ArgumentPlaceholder v36 = PooledLambda.__(Tas.class);
									PooledConsumer v37 = PooledLambda.obtainConsumer(v34, v36, v17, v33);
									v12.forAllLeafTasks(v37, 0);
									v37.recycle();
									ActivityRecord v40 = v12.topRunningActivity();
									if (v40 == 0) {
										ComponentName v41 = ActivityRecord.intent.getComponent();
										ActivityTaskManager$RootTaskInfo.topActivity = ;
										ActivityTaskManager$RootTaskInfo v16 = v17;
										ActivityTaskManager$RootTaskInfo v11 = v16;
										WindowManagerThreadPriorityBooster.reset();
										Binder.restoreCallingIdentity(v2);
										return ;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
