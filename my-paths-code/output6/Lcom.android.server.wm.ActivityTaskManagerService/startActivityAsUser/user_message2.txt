The method startActivityAsUser has the following code snippet:

This is path 1 for the API with depth 2:
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	if (p11 == 0) {
		SafeActivityOptions v3 = new SafeActivityOptions(v4);
		ActivityOptions v4 = ActivityOptions.fromBundle(p11);
		SafeActivityOptions v2 = ;
		if (v2 == 0) {
			ActivityOptions v6 = this.mOriginalOptions;
			boolean v7 = this.mTransientLaunch;
			if (v7 == 0) {
				int v8 = Binder.getCallingUid();
				boolean v10 = this.mRecentTasks.isCallerRecents(v8);
				boolean v9 = v10;
				if (v9 == 0) {
					long v11 = Binder.clearCallingIdentity();
					this.sThreadPriorityBooster.boost();
					Trace.traceBegin(32, "startExistingRecents");
					ActivityOptions v15 = this.mOriginalOptions;
					RecentTasks v17 = this.mService.getRecentTasks();
					ComponentName v18 = v17.getRecentsComponent();
					ComponentName v19 = p4.getComponent();
					boolean v20 = v18.equals(v19);
					if (v20 == 0) {
						TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
						Task v22 = v21.getRootTask(0, );
						if (v22 != 0) {
							boolean v16 = 0;
							if (v16 == 0) {
								this.sThreadPriorityBooster.reset();
								Trace.traceEnd(32);
								Binder.restoreCallingIdentity(v11);
								int v1 = 2;
								return v1;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	if (p11 == 0) {
		SafeActivityOptions v3 = new SafeActivityOptions(v4);
		ActivityOptions v4 = ActivityOptions.fromBundle(p11);
		SafeActivityOptions v2 = ;
		if (v2 == 0) {
			ActivityOptions v6 = this.mOriginalOptions;
			boolean v7 = this.mTransientLaunch;
			if (v7 == 0) {
				int v8 = Binder.getCallingUid();
				boolean v10 = this.mRecentTasks.isCallerRecents(v8);
				boolean v9 = v10;
				if (v9 == 0) {
					long v11 = Binder.clearCallingIdentity();
					this.sThreadPriorityBooster.boost();
					Trace.traceBegin(32, "startExistingRecents");
					ActivityOptions v15 = this.mOriginalOptions;
					RecentTasks v17 = this.mService.getRecentTasks();
					ComponentName v18 = v17.getRecentsComponent();
					ComponentName v19 = p4.getComponent();
					boolean v20 = v18.equals(v19);
					if (v20 == 0) {
						TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
						Task v22 = v21.getRootTask(0, );
						if (v22 != 0) {
							ActivityRecord v23 = v22.topRunningActivity();
							if (v23 == 0) {
								if (ActivityRecord.mVisibleRequested != 0) {
									boolean v24 = v23.attachedToProcess();
									if (v24 == 0) {
										ComponentName v25 = p4.getComponent();
										boolean v26 = ActivityRecord.mActivityComponent.equals(v25);
										if (v26 == 0) {
											boolean v27 = WindowContainer.mDisplayContent.isKeyguardLocked();
											if (v27 == 0) {
												boolean v16 = 0;
												if (v16 == 0) {
													this.sThreadPriorityBooster.reset();
													Trace.traceEnd(32);
													Binder.restoreCallingIdentity(v11);
													int v1 = 2;
													return v1;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v8 = Binder.getCallingUid();\nboolean v10 = this.mRecentTasks.isCallerRecents(v8);', 'SafeActivityOptions v3 = new SafeActivityOptions(v4);\nActivityOptions v4 = ActivityOptions.fromBundle(p11);', 'RecentTasks v17 = this.mService.getRecentTasks();\nComponentName v18 = v17.getRecentsComponent();\nComponentName v19 = p4.getComponent();\nboolean v20 = v18.equals(v19);']

The method startActivityAsUser has the following similar APIs:

- API Name: startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z with Similarity Score: 0.8876359462738037
  - Access Control Level: NONE and the following code:
SafeActivityOptions v3 = new SafeActivityOptions(v4);
ActivityOptions v5 = new ActivityOptions(p1);

- API Name: startActivityFromRecents(ILandroid/os/Bundle;)I with Similarity Score: 0.8858731389045715
  - Access Control Level: SYS_OR_SIG and the following code:
SafeActivityOptions v5 = new SafeActivityOptions(v6);
ActivityOptions v7 = new ActivityOptions(p1);

