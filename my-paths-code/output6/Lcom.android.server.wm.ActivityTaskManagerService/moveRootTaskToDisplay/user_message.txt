This is path 1 for the API with depth 2:
public void moveRootTaskToDisplay(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
		Object v6 = new Object(2);
		Long v7 = Long.valueOf(p1);
		Long v8 = Long.valueOf(p2);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v11 = new ProtoLogImpl(v12,1048576,v14);
			File v12 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v14 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v11;
			ProtoLogImpl v10 = this.sServiceInstance;
			boolean v18 = p1.isLogToProto();
			if (v18 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v20 = p1.isLogToLogcat();
				if (v20 == 0) {
					String v21 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v21, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
					DisplayContent v25 = RootWindowContainer.getDisplayContent(p2);
					if (v25 == 0) {
						if (this.mDisplayManager != 0) {
							Display v26 = this.mDisplayManager.getDisplay(p2);
							if (v26 != 0) {
								DisplayContent v27 = new DisplayContent(v26,RootWindowContainer);
								RootWindowContainer.addChild(v27, -2147483648);
								DisplayContent v24 = v27;
								if (v24 == 0) {
									TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
									TaskDisplayArea v30 = v31;
									Task v33 = RootWindowContainer.getRootTask(p1);
									if (v33 == 0) {
										TaskDisplayArea v34 = v33.getDisplayArea();
										if (v34 == 0) {
											if (v30 == 0) {
												if (v34 == v30) {
													v33.reparent(v30, p3);
													v33.resumeNextFocusAfterReparent();
													Binder.restoreCallingIdentity(v5);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
		Object v7 = new Object(2);
		Long v8 = Long.valueOf(p1);
		Long v9 = Long.valueOf(p2);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
			File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v12;
			ProtoLogImpl v11 = this.sServiceInstance;
			boolean v19 = p1.isLogToProto();
			if (v19 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v21 = p1.isLogToLogcat();
				if (v21 == 0) {
					String v22 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
					DisplayContent v26 = RootWindowContainer.getDisplayContent(p2);
					if (v26 == 0) {
						if (this.mDisplayManager != 0) {
							Display v27 = this.mDisplayManager.getDisplay(p2);
							if (v27 != 0) {
								DisplayContent v28 = new DisplayContent(v27,RootWindowContainer);
								RootWindowContainer.addChild(v28, -2147483648);
								DisplayContent v25 = v28;
								if (v25 == 0) {
									TaskDisplayArea v32 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
									TaskDisplayArea v31 = v32;
									Task v34 = RootWindowContainer.getRootTask(p1);
									if (v34 == 0) {
										TaskDisplayArea v35 = v34.getDisplayArea();
										if (v35 == 0) {
											if (v31 == 0) {
												if (v35 == v31) {
													v34.reparent(v31, p3);
													v34.resumeNextFocusAfterReparent();
													Binder.restoreCallingIdentity(v6);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void moveRootTaskToDisplay(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	if (ProtoLogCache.WM_DEBUG_TASKS_enabled == 0) {
		Object v6 = new Object(2);
		Long v7 = Long.valueOf(p1);
		Long v8 = Long.valueOf(p2);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v11 = new ProtoLogImpl(v12,1048576,v14);
			File v12 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v14 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v11;
			ProtoLogImpl v10 = this.sServiceInstance;
			boolean v18 = p1.isLogToProto();
			if (v18 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v20 = p1.isLogToLogcat();
				if (v20 == 0) {
					String v21 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v21, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
					DisplayContent v25 = RootWindowContainer.getDisplayContent(p2);
					if (v25 == 0) {
						if (this.mDisplayManager != 0) {
							Display v26 = this.mDisplayManager.getDisplay(p2);
							if (v26 != 0) {
								DisplayContent v27 = new DisplayContent(v26,RootWindowContainer);
								RootWindowContainer.addChild(v27, -2147483648);
								DisplayContent v24 = v27;
								if (v24 == 0) {
									TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
									TaskDisplayArea v30 = v31;
									Task v33 = RootWindowContainer.getRootTask(p1);
									if (v33 == 0) {
										TaskDisplayArea v34 = v33.getDisplayArea();
										if (v34 == 0) {
											if (v30 == 0) {
												if (v34 == v30) {
													v33.reparent(v30, p3);
													v33.resumeNextFocusAfterReparent();
													Binder.restoreCallingIdentity(v5);
													WindowManagerThreadPriorityBooster.reset();
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
