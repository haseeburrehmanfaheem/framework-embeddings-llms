The method getTargetSdkVersionForPackage has the following code snippet:

This is path 1 for the API with depth 2:
public int getTargetSdkVersionForPackage(String p1){
	boolean v2 = Thread.holdsLock(this.mLock);
	if (v2 == 0) {
		Object v3 = this.sSnapshot.get();
		int v4 = this.sSnapshotPendingVersion.get();
		if (v3 == 0) {
			int v5 = v3.getVersion();
			if (v5 != v4) {
				Object v6 = this.sSnapshot.get();
				int v7 = this.sSnapshotPendingVersion.get();
				if (v6 == 0) {
					int v8 = v6.getVersion();
					if (v8 != v7) {
						int v9 = this.sSnapshotPendingVersion.get();
						long v11 = SystemClock.currentTimeMicro();
						if (v6 != 0) {
							PackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v14 = new ComputerEngine(v12,v9);
							long v16 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v11, v16, );
								Computer v10 = v14;
								this.sSnapshot.set(v10);
								Computer v19 = v10.use();
								Computer v1 = v19;
								int v20 = v1.getTargetSdkVersion(p1);
								if (v20 == -1) {
									return v20;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getTargetSdkVersionForPackage(String p1){
	boolean v2 = Thread.holdsLock(this.mLock);
	if (v2 == 0) {
		Object v3 = this.sSnapshot.get();
		int v4 = this.sSnapshotPendingVersion.get();
		if (v3 == 0) {
			int v5 = v3.getVersion();
			if (v5 != v4) {
				Object v6 = this.sSnapshot.get();
				int v7 = this.sSnapshotPendingVersion.get();
				if (v6 == 0) {
					int v8 = v6.getVersion();
					if (v8 != v7) {
						int v9 = this.sSnapshotPendingVersion.get();
						long v11 = SystemClock.currentTimeMicro();
						if (v6 != 0) {
							int v12 = v6.getUsed();
							PackageManagerService$Snapshot v13 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v15 = new ComputerEngine(v13,v9);
							long v17 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v11, v17, );
								Computer v10 = v15;
								this.sSnapshot.set(v10);
								Computer v20 = v10.use();
								Computer v1 = v20;
								int v21 = v1.getTargetSdkVersion(p1);
								if (v21 == -1) {
									return v21;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.sSnapshot.get();\nint v4 = this.sSnapshotPendingVersion.get();\nif (v3 == 0) {\nint v5 = v3.getVersion();\nif (v5 != v4) {\nPackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);\nComputerEngine v14 = new ComputerEngine(v12,v9);\nthis.sSnapshot.set(v10);\nint v20 = v1.getTargetSdkVersion(p1);\nreturn v20;', 'Object v6 = this.sSnapshot.get();\nint v7 = this.sSnapshotPendingVersion.get();\nif (v6 == 0) {\nint v8 = v6.getVersion();\nif (v8 != v7) {\nPackageManagerService$Snapshot v13 = new PackageManagerService$Snapshot(PackageManagerService,2);\nComputerEngine v15 = new ComputerEngine(v13,v9);\nthis.sSnapshot.set(v10);\nint v21 = v1.getTargetSdkVersion(p1);\nreturn v21;']

The method getTargetSdkVersionForPackage has the following similar APIs:

- API Name: getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.8890200853347778
  - Access Control Level: NONE and the following code:
Object v3 = this.sSnapshot.get();
int v4 = this.sSnapshotPendingVersion.get();
if (v3 == 0) {
int v5 = v3.getVersion();
if (v5 != v4) {
PackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);
ComputerEngine v14 = new ComputerEngine(v12,v9);
this.mSnapshotStatistics.rebuild(v11, v16, );
Computer v10 = v14;
this.sSnapshot.set(v10);
String v20 = v1.getInstallerPackageName(p1);
return v20;

- API Name: getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.881403386592865
  - Access Control Level: NONE and the following code:
Object v3 = this.sSnapshot.get();
int v4 = this.sSnapshotPendingVersion.get();
if (v3 == 0) {
int v5 = v3.getVersion();
if (v5 != v4) {
PackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);
ComputerEngine v14 = new ComputerEngine(v12,v9);
this.mSnapshotStatistics.rebuild(v11, v16, );
Computer v10 = v14;
this.sSnapshot.set(v10);
String v20 = v1.getInstallerPackageName(p1);
return v20;

