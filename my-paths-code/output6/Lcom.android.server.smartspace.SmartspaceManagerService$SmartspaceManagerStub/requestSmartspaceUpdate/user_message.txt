This is path 1 for the API with depth 2:
public void requestSmartspaceUpdate(SmartspaceSessionId p1){
	SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4(p1);
	if (v11 == 0) {
		ServiceNameResolver v12 = AbstractMasterSystemService.mServiceNameResolver;
		boolean v13 = v12.isTemporary(v9);
		if (v13 != 0) {
			ActivityTaskManagerInternal v14 = this.mActivityTaskManagerInternal;
			int v15 = Binder.getCallingUid();
			boolean v16 = v14.isCallerRecents(v15);
			if (v16 == 0) {
				long v17 = Binder.clearCallingIdentity();
				Object v18 = AbstractMasterSystemService.mLock;
				AbstractPerUserSystemService v20 = this.this$0.getServiceForUserLocked(v9);
				AbstractPerUserSystemService v19 = v20;
				v1.accept(v19);
				Binder.restoreCallingIdentity(v17);
				return;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void requestSmartspaceUpdate(SmartspaceSessionId p1){
	SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4 v1 = new SmartspaceManagerService$SmartspaceManagerStub$$ExternalSyntheticLambda4(p1);
	if (v11 == 0) {
		ServiceNameResolver v12 = AbstractMasterSystemService.mServiceNameResolver;
		boolean v13 = v12.isTemporary(v9);
		if (v13 != 0) {
			long v14 = Binder.clearCallingIdentity();
			Object v15 = AbstractMasterSystemService.mLock;
			AbstractPerUserSystemService v17 = this.this$0.getServiceForUserLocked(v9);
			AbstractPerUserSystemService v16 = v17;
			v1.accept(v16);
			Binder.restoreCallingIdentity(v14);
			return;
		}
	}
}
