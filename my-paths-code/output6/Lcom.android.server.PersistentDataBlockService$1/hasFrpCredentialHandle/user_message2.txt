The method hasFrpCredentialHandle has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasFrpCredentialHandle(){
	if (v3 == 0) {
		int v4 = Binder.getCallingUid();
		this.this$0.enforceUid(v4);
		PersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
		byte[] v8 = v7.getFrpCredentialHandle();
		if (v8 == 0) {
			return ;
		}
	}
}
This is path 2 for the API with depth 2:
public boolean hasFrpCredentialHandle(){
	if (v3 == 0) {
		int v4 = Binder.getCallingUid();
		this.this$0.enforceUid(v4);
		PersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
		byte[] v8 = v7.getFrpCredentialHandle();
		if (v8 == 0) {
			return ;
		}
	}
}

and the following sink code:
['int v4 = Binder.getCallingUid();\nthis.this$0.enforceUid(v4);\nPersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);\nbyte[] v8 = v7.getFrpCredentialHandle();']

The method hasFrpCredentialHandle has the following similar APIs:

- API Name: setOemUnlockEnabled(Z)V with Similarity Score: 0.7653573751449585
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = UserHandle.getCallingUserId();
UserManager v6 = UserManager.get(this.mContext);
boolean v7 = v6.isUserAdmin(v5);
Object v16 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
FileChannel v19 = PersistentDataBlockService.getBlockOutputChannel();
long v20 = PersistentDataBlockService.getBlockDeviceSize();
FileChannel v21 = v19.position((v20 - 1));
ByteBuffer v22 = ByteBuffer.allocate(1);
ByteBuffer v23 = v22.put();
Buffer v24 = v22.flip();
int v25 = v19.write(v22);
v19.force(1);

- API Name: setOemUnlockEnabled(Z)V with Similarity Score: 0.7653573751449585
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = UserHandle.getCallingUserId();
UserManager v6 = UserManager.get(this.mContext);
boolean v7 = v6.isUserAdmin(v5);
Object v16 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
FileChannel v19 = PersistentDataBlockService.getBlockOutputChannel();
long v20 = PersistentDataBlockService.getBlockDeviceSize();
FileChannel v21 = v19.position((v20 - 1));
ByteBuffer v22 = ByteBuffer.allocate(1);
ByteBuffer v23 = v22.put();
Buffer v24 = v22.flip();
int v25 = v19.write(v22);
v19.force(1);

