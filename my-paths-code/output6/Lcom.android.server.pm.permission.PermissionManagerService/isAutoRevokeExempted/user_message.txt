This is path 1 for the API with depth 1:
public boolean isAutoRevokeExempted(String p1, int p2){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	boolean v4 = this.mPackageManagerInt.filterAppAccess(p1, v3, p2);
	if (v4 == 0) {
		if (v6 != 0) {
			boolean v7 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
			if ( != 0) {
				if (v7 == 0) {
					boolean v5 = 1;
					if (v5 != 0) {
						int v8 = v2.getUid();
						int v9 = UserHandle.getUid(p2, v8);
						long v10 = Binder.clearCallingIdentity();
						int v11 = this.mAppOpsManager.checkOpNoThrow(97, v9, p1);
						if (v11 != 1) {
							Binder.restoreCallingIdentity(v10);
							return ;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 1:
public boolean isAutoRevokeExempted(String p1, int p2){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	boolean v4 = this.mPackageManagerInt.filterAppAccess(p1, v3, p2);
	if (v4 == 0) {
		if (v6 != 0) {
			boolean v7 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
			if ( != 0) {
				boolean v5 = 1;
				if (v5 != 0) {
					int v8 = v2.getUid();
					int v9 = UserHandle.getUid(p2, v8);
					long v10 = Binder.clearCallingIdentity();
					int v11 = this.mAppOpsManager.checkOpNoThrow(97, v9, p1);
					if (v11 != 1) {
						Binder.restoreCallingIdentity(v10);
						return ;
					}
				}
			}
		}
	}
}
