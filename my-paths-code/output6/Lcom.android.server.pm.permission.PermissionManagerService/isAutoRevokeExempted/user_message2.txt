The method isAutoRevokeExempted has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isAutoRevokeExempted(String p1, int p2){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	boolean v4 = this.mPackageManagerInt.filterAppAccess(p1, v3, p2);
	if (v4 == 0) {
		if (v6 != 0) {
			boolean v7 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
			if ( != 0) {
				if (v7 == 0) {
					boolean v5 = 1;
					if (v5 != 0) {
						int v8 = v2.getUid();
						int v9 = UserHandle.getUid(p2, v8);
						long v10 = Binder.clearCallingIdentity();
						int v11 = this.mAppOpsManager.checkOpNoThrow(97, v9, p1);
						if (v11 != 1) {
							Binder.restoreCallingIdentity(v10);
							return ;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public boolean isAutoRevokeExempted(String p1, int p2){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	boolean v4 = this.mPackageManagerInt.filterAppAccess(p1, v3, p2);
	if (v4 == 0) {
		if (v6 != 0) {
			boolean v7 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
			if ( != 0) {
				boolean v5 = 1;
				if (v5 != 0) {
					int v8 = v2.getUid();
					int v9 = UserHandle.getUid(p2, v8);
					long v10 = Binder.clearCallingIdentity();
					int v11 = this.mAppOpsManager.checkOpNoThrow(97, v9, p1);
					if (v11 != 1) {
						Binder.restoreCallingIdentity(v10);
						return ;
					}
				}
			}
		}
	}
}

and the following sink code:
['AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);\nboolean v4 = this.mPackageManagerInt.filterAppAccess(p1, v3, p2);\nboolean v7 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);\nint v11 = this.mAppOpsManager.checkOpNoThrow(97, v9, p1);']

The method isAutoRevokeExempted has the following similar APIs:

- API Name: setAutoRevokeExempted(Ljava/lang/String;ZI)Z with Similarity Score: 0.8594613075256348
  - Access Control Level: SYS_OR_SIG and the following code:
AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
int v8 = v2.getUid();
String v10 = v2.getPackageName();
int v9 = UserHandle.getUid(p3, v8);
int v11 = this.mAppOpsManager.checkOpNoThrow(98, v9, v10);
this.mAppOpsManager.setMode(97, v9, v13, );

- API Name: checkPhoneNumberAccess(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)I with Similarity Score: 0.7497442364692688
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v4 = this.mContext.getPackageManager();
UserHandle v5 = UserHandle.getUserHandleForUid(p5);
ApplicationInfo v6 = v4.getApplicationInfoAsUser(p1, 0, v5);

