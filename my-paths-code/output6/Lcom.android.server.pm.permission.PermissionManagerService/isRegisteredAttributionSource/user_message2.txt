The method isRegisteredAttributionSource has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isRegisteredAttributionSource(AttributionSourceState p1){
	AttributionSource v1 = new AttributionSource(p1);
	IBinder v4 = AttributionSourceState.token;
	Object v5 = this.mAttributions.get(v4);
	if (v5 == 0) {
		if (AttributionSource != p1) {
			if (p1 == 0) {
				Class v7 = AttributionSource.getClass();
				Class v8 = p1.getClass();
				if (v7 == v8) {
					if (AttributionSourceState.uid != AttributionSourceState.uid) {
						boolean v9 = Objects.equals(AttributionSourceState.packageName, AttributionSourceState.packageName);
						if (v9 == 0) {
							boolean v10 = Objects.equals(AttributionSourceState.attributionTag, AttributionSourceState.attributionTag);
							if (v10 == 0) {
								boolean v11 = Objects.equals(AttributionSourceState.token, AttributionSourceState.token);
								if (v11 == 0) {
									boolean v12 = Arrays.equals(AttributionSourceState.renouncedPermissions, AttributionSourceState.renouncedPermissions);
									if (v12 == 0) {
										AttributionSource v13 = AttributionSource.getNext();
										AttributionSource v14 = p1.getNext();
										boolean v15 = Objects.equals(v13, v14);
										if (v15 == 0) {
											boolean v6 = ;
											boolean v3 = v6;
											return v3;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isRegisteredAttributionSource(AttributionSourceState p1){
	AttributionSource v1 = new AttributionSource(p1);
	IBinder v4 = AttributionSourceState.token;
	Object v5 = this.mAttributions.get(v4);
	if (v5 == 0) {
		if (AttributionSource != p1) {
			if (p1 == 0) {
				Class v7 = AttributionSource.getClass();
				Class v8 = p1.getClass();
				if (v7 == v8) {
					if (AttributionSourceState.uid != AttributionSourceState.uid) {
						boolean v9 = Objects.equals(AttributionSourceState.packageName, AttributionSourceState.packageName);
						if (v9 == 0) {
							boolean v10 = Objects.equals(AttributionSourceState.attributionTag, AttributionSourceState.attributionTag);
							if (v10 == 0) {
								boolean v11 = Objects.equals(AttributionSourceState.token, AttributionSourceState.token);
								if (v11 == 0) {
									boolean v12 = Arrays.equals(AttributionSourceState.renouncedPermissions, AttributionSourceState.renouncedPermissions);
									if (v12 == 0) {
										AttributionSource v13 = AttributionSource.getNext();
										AttributionSource v14 = p1.getNext();
										boolean v15 = Objects.equals(v13, v14);
										if (v15 == 0) {
											boolean v6 = ;
											boolean v3 = v6;
											return v3;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean isRegisteredAttributionSource(AttributionSourceState p1){
	AttributionSource v1 = new AttributionSource(p1);
	IBinder v4 = AttributionSourceState.token;
	Object v5 = this.mAttributions.get(v4);
	if (v5 == 0) {
		boolean v3 = 0;
		return v3;
	}
}

and the following sink code:
['AttributionSource v1 = new AttributionSource(p1);']

The method isRegisteredAttributionSource has the following similar APIs:

- API Name: checkOp(ILandroid/content/AttributionSourceState;Ljava/lang/String;ZZ)I with Similarity Score: 0.9051709175109863
  - Access Control Level: SYS_OR_SIG and the following code:
Object v6 = Objects.requireNonNull(p2);
AttributionSource v8 = new AttributionSource(p2);

- API Name: finishDataDelivery(ILandroid/content/AttributionSourceState;Z)V with Similarity Score: 0.8104354739189148
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = Objects.requireNonNull(p2);
AttributionSource v4 = new AttributionSource(p2);
if (p1 != -1) {
AttributionSource v7 = new AttributionSource(AttributionSourceState.next[0]);
this.mNextCached = v7;
AttributionSource v6 = this.mNextCached;

