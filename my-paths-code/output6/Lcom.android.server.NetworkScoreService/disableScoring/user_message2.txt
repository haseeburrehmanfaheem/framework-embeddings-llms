The method disableScoring has the following code snippet:

This is path 1 for the API with depth 2:
public void disableScoring(){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	if (v3 == 0) {
		if (this.mServiceConnection == 0) {
			NetworkScorerAppData v5 = this.mServiceConnection.getAppData();
			if (NetworkScorerAppData.packageUid != p1) {
				boolean v4 = ;
				if (v4 == 0) {
					return;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void disableScoring(){
	int v1 = INetworkScoreService$Stub.getCallingUid();
	if (v3 == 0) {
		if (this.mServiceConnection == 0) {
			NetworkScorerAppData v5 = this.mServiceConnection.getAppData();
			if (NetworkScorerAppData.packageUid != p1) {
				boolean v4 = ;
				if (v4 == 0) {
					return;
				}
			}
		}
	}
}

and the following sink code:
['int v1 = INetworkScoreService$Stub.getCallingUid();']

The method disableScoring has the following similar APIs:

- API Name: clearScores()Z with Similarity Score: 0.8332279920578003
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = INetworkScoreService$Stub.getCallingUid();
NetworkScorerAppData v5 = this.mServiceConnection.getAppData();
if (NetworkScorerAppData.packageUid != p1) {

- API Name: registerPackageInstallerCallback(Ljava/lang/String;Landroid/content/pm/IPackageInstallerCallback;)V with Similarity Score: 0.8069759607315063
  - Access Control Level: NONE and the following code:
int v3 = ILauncherApps$Stub.getCallingUid();
int v5 = UserHandle.getUserId(v2);

