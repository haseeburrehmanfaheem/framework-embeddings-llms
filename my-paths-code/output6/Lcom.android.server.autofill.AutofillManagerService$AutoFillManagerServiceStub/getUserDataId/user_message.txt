This is path 1 for the API with depth 2:
public void getUserDataId(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getUserData", v5);
		if (v7 == 0) {
			UserData v6 = this.mUserData;
			if ( != 0) {
				String v8 = this.mId;
				Bundle v11 = SyncResultReceiver.bundleFor(p3);
				AutofillManagerService.send(p2, v11);
				return;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void getUserDataId(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getUserData", v5);
		if (v7 == 0) {
			UserData v6 = 0;
			if ( != 0) {
				String v8 = this.mId;
				Bundle v11 = SyncResultReceiver.bundleFor(p3);
				AutofillManagerService.send(p2, v11);
				return;
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void getUserDataId(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getUserData", v5);
		if (v7 == 0) {
			UserData v6 = this.mUserData;
			if ( != 0) {
				Bundle v10 = SyncResultReceiver.bundleFor(p3);
				AutofillManagerService.send(p2, v10);
				return;
			}
		}
	}
}
