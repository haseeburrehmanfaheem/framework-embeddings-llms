This is path 1 for the API with depth 2:
public void updateSession(int p1, AutofillId p2, Rect p3, AutofillValue p4, int p5, int p6, int p7){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p7);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = IAutoFillManager$Stub.getCallingUid();
		Object v6 = this.mSessions.get(p1);
		if (v6 == 0) {
			if (Session.uid == v4) {
				if (this.mDestroyed == 0) {
					if (p6 != 5) {
						Session$SessionFlags.-$$Nest$fputmExpiredResponse(this.mSessionFlags, 1);
						if (Helper.sDebug == 0) {
							this.mPresentationStatsEventLogger.maybeSetNoPresentationEventReason(3);
							this.mPresentationStatsEventLogger.logAndEndEvent();
							boolean v5 = 0;
							return;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void updateSession(int p1, AutofillId p2, Rect p3, AutofillValue p4, int p5, int p6, int p7){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p7);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = IAutoFillManager$Stub.getCallingUid();
		Object v6 = this.mSessions.get(p1);
		if (v6 == 0) {
			if (Session.uid == v4) {
				if (this.mDestroyed == 0) {
					if (p6 != 5) {
						Session$SessionFlags.-$$Nest$fputmExpiredResponse(this.mSessionFlags, 1);
						if (Helper.sDebug == 0) {
							this.mPresentationStatsEventLogger.maybeSetNoPresentationEventReason(3);
							this.mPresentationStatsEventLogger.logAndEndEvent();
							boolean v5 = 0;
							return;
						}
					}
				}
			}
		}
	}
}
