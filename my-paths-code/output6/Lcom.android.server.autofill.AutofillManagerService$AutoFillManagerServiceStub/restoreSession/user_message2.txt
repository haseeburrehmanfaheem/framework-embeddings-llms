The method restoreSession has the following code snippet:

This is path 1 for the API with depth 2:
public void restoreSession(int p1, IBinder p2, IBinder p3, IResultReceiver p4){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = Objects.requireNonNull(p2, "activityToken");
	Object v3 = Objects.requireNonNull(p3, "appCallback");
	Object v4 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v6 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v5 = v6;
	if (v5 == 0) {
		int v7 = IAutoFillManager$Stub.getCallingUid();
		Object v9 = this.mSessions.get(p1);
		if (v9 == 0) {
			if (v7 == Session.uid) {
				if (this.mDestroyed == 0) {
					this.mActivityToken = p3;
					Session.setClientLocked(p4);
					Session.updateTrackedIdsLocked();
					boolean v8 = 1;
					AutofillManagerService.send(p2, p3);
					return;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void restoreSession(int p1, IBinder p2, IBinder p3, IResultReceiver p4){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = Objects.requireNonNull(p2, "activityToken");
	Object v3 = Objects.requireNonNull(p3, "appCallback");
	Object v4 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v6 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v5 = v6;
	if (v5 == 0) {
		if (Helper.sVerbose == 0) {
			AutofillManagerService.send(p2, p3);
			return;
		}
	}
}
This is path 3 for the API with depth 2:
public void restoreSession(int p1, IBinder p2, IBinder p3, IResultReceiver p4){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = Objects.requireNonNull(p2, "activityToken");
	Object v3 = Objects.requireNonNull(p3, "appCallback");
	Object v4 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v6 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v5 = v6;
	if (v5 == 0) {
		if (Helper.sVerbose == 0) {
			AutofillManagerService.send(p2, p3);
			return;
		}
	}
}

and the following sink code:
['if (v5 == 0) {\n    if (v7 == Session.uid) {\n        this.mActivityToken = p3;\n        Session.setClientLocked(p4);\n        Session.updateTrackedIdsLocked();\n        boolean v8 = 1;\n        AutofillManagerService.send(p2, p3);', 'if (Helper.sVerbose == 0) {\n    AutofillManagerService.send(p2, p3);']

The method restoreSession has the following similar APIs:

- API Name: createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V with Similarity Score: 0.760712742805481
  - Access Control Level: NONE and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService.-$$Nest$msendSessionTokenToClientLocked(this.this$0, p1, p2, 0, 0, p4);

- API Name: setAuthenticationResult(Landroid/os/Bundle;III)V with Similarity Score: 0.7361262440681458
  - Access Control Level: NONE and the following code:
int v4 = IAutoFillManager$Stub.getCallingUid();
boolean v6 = AutofillManagerServiceImpl.isEnabledLocked();
Object v7 = this.mSessions.get(p2);
if (v4 != Session.uid) {
if (this.mDestroyed == 0) {
int v9 = AutofillManager.getRequestIdFromAuthenticationId(p3);
if (v9 != 1) {
Object v10 = this.mResponses.get(v9);
if (p1 != 0) {
Parcelable v15 = p1.getParcelable("android.view.autofill.extra.AUTHENTICATION_RESULT");
Bundle v16 = p1.getBundle("android.view.autofill.extra.CLIENT_STATE");
Session.logAuthenticationStatusLocked(v9, 912);
Session.replaceResponseLocked(v10, v15, v16);

