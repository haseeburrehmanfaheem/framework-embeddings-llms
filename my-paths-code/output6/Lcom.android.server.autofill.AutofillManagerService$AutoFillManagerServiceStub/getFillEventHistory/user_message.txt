This is path 1 for the API with depth 2:
public void getFillEventHistory(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		if (this.mEventHistory == 0) {
			boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getFillEventHistory", v5);
			if (v7 == 0) {
				if (this.mAugmentedAutofillEventHistory == 0) {
					RemoteAugmentedAutofillService v9 = AutofillManagerServiceImpl.getRemoteAugmentedAutofillServiceLocked();
					if (v9 != 0) {
						int v10 = AutofillManagerServiceImpl.getAugmentedAutofillServiceUidLocked();
						if (v10 == p1) {
							int v17 = AutofillManagerServiceImpl.getAugmentedAutofillServiceUidLocked();
							int v20 = AutofillManagerServiceImpl.getUserId();
							boolean v8 = 0;
							if (v8 == 0) {
								FillEventHistory v6 = this.mAugmentedAutofillEventHistory;
								Bundle v26 = SyncResultReceiver.bundleFor(p3);
								AutofillManagerService.send(p2, v26);
								return;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void getFillEventHistory(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		int v5 = IAutoFillManager$Stub.getCallingUid();
		if (this.mEventHistory == 0) {
			boolean v7 = AutofillManagerServiceImpl.isCalledByServiceLocked("getFillEventHistory", v5);
			if (v7 == 0) {
				if (this.mAugmentedAutofillEventHistory == 0) {
					RemoteAugmentedAutofillService v9 = AutofillManagerServiceImpl.getRemoteAugmentedAutofillServiceLocked();
					if (v9 != 0) {
						int v10 = AutofillManagerServiceImpl.getAugmentedAutofillServiceUidLocked();
						if (v10 == p1) {
							int v17 = AutofillManagerServiceImpl.getAugmentedAutofillServiceUidLocked();
							int v20 = AutofillManagerServiceImpl.getUserId();
							boolean v8 = 0;
							if (v8 == 0) {
								FillEventHistory v6 = 0;
								Bundle v26 = SyncResultReceiver.bundleFor(p3);
								AutofillManagerService.send(p2, v26);
								return;
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void getFillEventHistory(IResultReceiver p1){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v4 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		if (Helper.sVerbose == 0) {
			Bundle v13 = SyncResultReceiver.bundleFor(p3);
			AutofillManagerService.send(p2, v13);
			return;
		}
	}
}
