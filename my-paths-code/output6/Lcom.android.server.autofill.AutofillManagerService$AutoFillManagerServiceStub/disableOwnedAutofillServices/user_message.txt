This is path 1 for the API with depth 2:
public void disableOwnedAutofillServices(int p1){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p1);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = Binder.getCallingUid();
		if (this.mInfo != 0) {
			ServiceInfo v14 = this.mServiceInfo;
			if (ApplicationInfo.uid == v4) {
				long v15 = Binder.clearCallingIdentity();
				String v17 = AbstractMasterSystemService.mServiceNameResolver.getServiceName(this.mUserId);
				String v16 = v17;
				ComponentName v18 = v14.getComponentName();
				ComponentName v19 = ComponentName.unflattenFromString(v16);
				boolean v20 = v18.equals(v19);
				if (v20 == 0) {
					String v21 = v18.getPackageName();
					this.mMetricsLogger.action(1135, v21);
					Context v24 = this.mMaster.getContext();
					Context v23 = v24;
					ContentResolver v25 = v23.getContentResolver();
					boolean v26 = Settings$Secure.putStringForUser(v25, "autofill_service", 0, AbstractPerUserSystemService.mUserId);
					int v28 = this.mSessions.size();
					if (v28 != 0) {
						if ( < 0) {
							Binder.restoreCallingIdentity(v15);
							return;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void disableOwnedAutofillServices(int p1){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p1);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = Binder.getCallingUid();
		if (this.mInfo != 0) {
			ServiceInfo v14 = this.mServiceInfo;
			if (ApplicationInfo.uid == v4) {
				long v15 = Binder.clearCallingIdentity();
				String v17 = AbstractMasterSystemService.mServiceNameResolver.getServiceName(this.mUserId);
				String v16 = v17;
				ComponentName v18 = v14.getComponentName();
				ComponentName v19 = ComponentName.unflattenFromString(v16);
				boolean v20 = v18.equals(v19);
				if (v20 == 0) {
					String v21 = v18.getPackageName();
					this.mMetricsLogger.action(1135, v21);
					Context v24 = this.mMaster.getContext();
					Context v23 = v24;
					ContentResolver v25 = v23.getContentResolver();
					boolean v26 = Settings$Secure.putStringForUser(v25, "autofill_service", 0, AbstractPerUserSystemService.mUserId);
					int v28 = this.mSessions.size();
					if (v28 != 0) {
						this.mUi.destroyAll(0, 0, 0);
						Binder.restoreCallingIdentity(v15);
						return;
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void disableOwnedAutofillServices(int p1){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.peekServiceForUserLocked(p1);
	AbstractPerUserSystemService v2 = v3;
	if (v2 == 0) {
		int v4 = Binder.getCallingUid();
		if (this.mInfo != 0) {
			ServiceInfo v14 = this.mServiceInfo;
			if (ApplicationInfo.uid == v4) {
				long v15 = Binder.clearCallingIdentity();
				String v17 = AbstractMasterSystemService.mServiceNameResolver.getServiceName(this.mUserId);
				String v16 = v17;
				ComponentName v18 = v14.getComponentName();
				ComponentName v19 = ComponentName.unflattenFromString(v16);
				boolean v20 = v18.equals(v19);
				if (v20 == 0) {
					Binder.restoreCallingIdentity(v15);
					return;
				}
			}
		}
	}
}
