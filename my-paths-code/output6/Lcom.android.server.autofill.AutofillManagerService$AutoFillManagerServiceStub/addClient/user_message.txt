This is path 1 for the API with depth 2:
public void addClient(IAutoFillManagerClient p1, ComponentName p2, int p3, IResultReceiver p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p3);
	AbstractPerUserSystemService v2 = v3;
	if (this.mClients != 0) {
		RemoteCallbackList v5 = new RemoteCallbackList();
		this.mClients = v5;
		boolean v7 = this.mClients.register(p1);
		boolean v8 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v8 == 0) {
			if (p2 == 0) {
				if (AbstractMasterSystemService.verbose == 0) {
					boolean v13 = AutofillManagerServiceImpl.isSetupCompletedLocked();
					boolean v16 = AutofillManagerServiceImpl.isDisabledByUserRestrictionsLocked();
					String v19 = AutofillManagerService.mAugmentedAutofillResolver.getServiceName(AbstractPerUserSystemService.mUserId);
					boolean v23 = AutofillManagerServiceImpl.isSetupCompletedLocked();
					if (v23 == 0) {
						boolean v24 = AutofillManagerServiceImpl.isDisabledByUserRestrictionsLocked();
						if (v24 != 0) {
							String v25 = AutofillManagerService.mAugmentedAutofillResolver.getServiceName(AbstractPerUserSystemService.mUserId);
							if (v25 != 0) {
								boolean v9 = 0;
								if (v9 == 0) {
									boolean v27 = AutofillManagerService.mAugmentedAutofillState.isWhitelisted(AbstractPerUserSystemService.mUserId, p2);
									boolean v26 = v27;
									if (v26 == 0) {
										int v4 = 8;
										if (v4 == 0) {
											if (Helper.sDebug == 0) {
												if (Helper.sVerbose == 0) {
													p2.send(p3, 0);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void addClient(IAutoFillManagerClient p1, ComponentName p2, int p3, IResultReceiver p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p3);
	AbstractPerUserSystemService v2 = v3;
	if (this.mClients != 0) {
		RemoteCallbackList v5 = new RemoteCallbackList();
		this.mClients = v5;
		boolean v7 = this.mClients.register(p1);
		boolean v8 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v8 == 0) {
			if (p2 == 0) {
				if (AbstractMasterSystemService.verbose == 0) {
					boolean v13 = AutofillManagerServiceImpl.isSetupCompletedLocked();
					boolean v16 = AutofillManagerServiceImpl.isDisabledByUserRestrictionsLocked();
					String v19 = AutofillManagerService.mAugmentedAutofillResolver.getServiceName(AbstractPerUserSystemService.mUserId);
					boolean v23 = AutofillManagerServiceImpl.isSetupCompletedLocked();
					if (v23 == 0) {
						boolean v24 = AutofillManagerServiceImpl.isDisabledByUserRestrictionsLocked();
						if (v24 != 0) {
							String v25 = AutofillManagerService.mAugmentedAutofillResolver.getServiceName(AbstractPerUserSystemService.mUserId);
							if (v25 != 0) {
								boolean v9 = 0;
								if (v9 == 0) {
									boolean v27 = AutofillManagerService.mAugmentedAutofillState.isWhitelisted(AbstractPerUserSystemService.mUserId, p2);
									boolean v26 = v27;
									if (v26 == 0) {
										int v4 = 0;
										if (v4 == 0) {
											if (Helper.sDebug == 0) {
												if (Helper.sVerbose == 0) {
													p2.send(p3, 0);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void addClient(IAutoFillManagerClient p1, ComponentName p2, int p3, IResultReceiver p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p3);
	AbstractPerUserSystemService v2 = v3;
	if (this.mClients != 0) {
		RemoteCallbackList v5 = new RemoteCallbackList();
		this.mClients = v5;
		boolean v7 = this.mClients.register(p1);
		boolean v8 = AutofillManagerServiceImpl.isEnabledLocked();
		if (v8 == 0) {
			if (p2 == 0) {
				if (AbstractMasterSystemService.verbose == 0) {
					boolean v13 = AutofillManagerServiceImpl.isSetupCompletedLocked();
					boolean v16 = AutofillManagerServiceImpl.isDisabledByUserRestrictionsLocked();
					String v19 = AutofillManagerService.mAugmentedAutofillResolver.getServiceName(AbstractPerUserSystemService.mUserId);
					boolean v23 = AutofillManagerServiceImpl.isSetupCompletedLocked();
					if (v23 == 0) {
						boolean v24 = AutofillManagerServiceImpl.isDisabledByUserRestrictionsLocked();
						if (v24 != 0) {
							String v25 = AutofillManagerService.mAugmentedAutofillResolver.getServiceName(AbstractPerUserSystemService.mUserId);
							if (v25 != 0) {
								boolean v9 = 0;
								if (v9 == 0) {
									boolean v27 = AutofillManagerService.mAugmentedAutofillState.isWhitelisted(AbstractPerUserSystemService.mUserId, p2);
									boolean v26 = v27;
									if (v26 == 0) {
										int v4 = 8;
										if (v4 == 0) {
											if (Helper.sDebug == 0) {
												if (Helper.sVerbose == 0) {
													p2.send(p3, 0);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
