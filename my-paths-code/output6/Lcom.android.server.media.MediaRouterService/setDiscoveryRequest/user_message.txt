This is path 1 for the API with depth 1:
public void setDiscoveryRequest(IMediaRouterClient p1, int p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v3 = p1.asBinder();
		Object v4 = this.mAllClientRecords.get(v3);
		if (v4 == 0) {
			if (MediaRouterService$ClientRecord.mTrusted != 0) {
				if (MediaRouterService$ClientRecord.mRouteTypes != ) {
					if (this.DEBUG == 0) {
						String v9 = Integer.toHexString();
						MediaRouterService$ClientRecord.mRouteTypes = ;
						MediaRouterService$ClientRecord.mActiveScan = p3;
						boolean v15 = MediaRouterService$UserRecord.mHandler.sendEmptyMessage(3);
						Binder.restoreCallingIdentity(v1);
						return;
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 1:
public void setDiscoveryRequest(IMediaRouterClient p1, int p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v3 = p1.asBinder();
		Object v4 = this.mAllClientRecords.get(v3);
		if (v4 == 0) {
			if (MediaRouterService$ClientRecord.mTrusted != 0) {
				if (MediaRouterService$ClientRecord.mRouteTypes != ) {
					if (this.DEBUG == 0) {
						MediaRouterService$ClientRecord.mRouteTypes = ;
						MediaRouterService$ClientRecord.mActiveScan = p3;
						boolean v5 = MediaRouterService$UserRecord.mHandler.sendEmptyMessage(3);
						Binder.restoreCallingIdentity(v1);
						return;
					}
				}
			}
		}
	}
}
