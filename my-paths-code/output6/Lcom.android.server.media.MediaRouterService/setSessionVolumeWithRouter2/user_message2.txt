The method setSessionVolumeWithRouter2 has the following code snippet:

This is path 1 for the API with depth 2:
public void setSessionVolumeWithRouter2(IMediaRouter2 p1, String p2, int p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p2, "uniqueSessionId must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	Object v7 = this.mAllRouterRecords.get(v6);
	if (v7 != 0) {
		Binder.restoreCallingIdentity(v4);
		return;
	}
}
This is path 2 for the API with depth 2:
public void setSessionVolumeWithRouter2(IMediaRouter2 p1, String p2, int p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p2, "uniqueSessionId must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	Object v7 = this.mAllRouterRecords.get(v6);
	if (v7 != 0) {
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda7 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda7();
		Long v10 = Long.valueOf(-1);
		Integer v11 = Integer.valueOf(p3);
		Message v12 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, v10, p2, v11);
		boolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}

and the following sink code:
['Integer v11 = Integer.valueOf(p3);\nMessage v12 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, v10, p2, v11);\nboolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);']

The method setSessionVolumeWithRouter2 has the following similar APIs:

- API Name: setRouteVolumeWithManager(Landroid/media/IMediaRouter2Manager;ILandroid/media/MediaRoute2Info;I)V with Similarity Score: 0.9767060279846191
  - Access Control Level: NONE and the following code:
Long v11 = Long.valueOf(v8);
Integer v12 = Integer.valueOf(p4);
Message v13 = PooledLambda.obtainMessage(v9, MediaRouter2ServiceImpl$UserRecord.mHandler, v11, p3, v12);
boolean v14 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v13);

- API Name: transferToRouteWithManager(Landroid/media/IMediaRouter2Manager;ILjava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.8902546167373657
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$UserRecord.mHandler.findRouterWithSessionLocked(p3);
Long v13 = Long.valueOf(v10);
Message v14 = PooledLambda.obtainMessage(v11, MediaRouter2ServiceImpl$UserRecord.mHandler, v13, v9, p3, p4);
boolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);

