The method isPlaybackActive has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isPlaybackActive(IMediaRouterClient p1){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v2 = p1.asBinder();
		Object v3 = this.mAllClientRecords.get(v2);
		if (v3 == 0) {
			Integer v5 = Integer.valueOf(MediaRouterService$ClientRecord.mUid);
			boolean v6 = this.mActiveAudioUids.contains(v5);
			boolean v4 = v6;
			Binder.restoreCallingIdentity(v1);
			return v4;
		}
	}
}

and the following sink code:
['Integer v5 = Integer.valueOf(MediaRouterService$ClientRecord.mUid);\nboolean v6 = this.mActiveAudioUids.contains(v5);\nboolean v4 = v6;\nreturn v4;']

The method isPlaybackActive has the following similar APIs:

- API Name: dispatchMediaKeyEventToSessionAsSystemService(Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)Z with Similarity Score: 0.7000882625579834
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = p2.getUid();
UserHandle v8 = UserHandle.getUserHandleForUid(v7);
int v9 = v8.getIdentifier();
MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);

