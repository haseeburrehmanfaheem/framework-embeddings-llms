The method unregisterRouter2 has the following code snippet:

This is path 1 for the API with depth 2:
public void unregisterRouter2(IMediaRouter2 p1){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	long v3 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	Object v6 = this.mAllRouterRecords.remove(v5);
	if (v6 != 0) {
		Binder.restoreCallingIdentity(v3);
		return;
	}
}
This is path 2 for the API with depth 2:
public void unregisterRouter2(IMediaRouter2 p1){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	long v3 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	Object v6 = this.mAllRouterRecords.remove(v5);
	if (v6 != 0) {
		boolean v7 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.remove(v6);
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda15 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda15();
		Message v10 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, 0);
		boolean v11 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v10);
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda16 v12 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda16();
		Message v14 = PooledLambda.obtainMessage(v12, MediaRouter2ServiceImpl$UserRecord.mHandler);
		boolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);
		v6.dispose();
		MediaRouter2ServiceImpl.disposeUserIfNeededLocked(MediaRouter2ServiceImpl$RouterRecord.mUserRecord);
		Binder.restoreCallingIdentity(v3);
		return;
	}
}

and the following sink code:
['long v3 = Binder.clearCallingIdentity();\nIBinder v5 = p1.asBinder();\nObject v6 = this.mAllRouterRecords.remove(v5);', 'boolean v7 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.remove(v6);\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda15 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda15();\nMessage v10 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, 0);\nboolean v11 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v10);', 'MediaRouter2ServiceImpl$$ExternalSyntheticLambda16 v12 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda16();\nMessage v14 = PooledLambda.obtainMessage(v12, MediaRouter2ServiceImpl$UserRecord.mHandler);\nboolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);', 'v6.dispose();\nMediaRouter2ServiceImpl.disposeUserIfNeededLocked(MediaRouter2ServiceImpl$RouterRecord.mUserRecord);']

The method unregisterRouter2 has the following similar APIs:

- API Name: deselectRouteWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.9718608856201172
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl$$ExternalSyntheticLambda9 v9 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda9();
Long v11 = Long.valueOf(-1);
Message v12 = PooledLambda.obtainMessage(v9, MediaRouter2ServiceImpl$UserRecord.mHandler, v11, v8, p2, p3);
boolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);

- API Name: transferToRouteWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.9549134373664856
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl$$ExternalSyntheticLambda18 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda18();
int v17 = MediaRouter2ServiceImpl.toOriginalRequestId(-1);
Integer v18 = Integer.valueOf(v17);
Message v19 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v8, v18);
boolean v20 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v19);

