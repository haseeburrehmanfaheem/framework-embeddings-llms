The method setDiscoveryRequestWithRouter2 has the following code snippet:

This is path 1 for the API with depth 2:
public void setDiscoveryRequestWithRouter2(IMediaRouter2 p1, RouteDiscoveryPreference p2){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p2, "preference must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	Object v6 = this.mAllRouterRecords.get(v5);
	if (v6 != 0) {
		boolean v8 = MediaRouter2ServiceImpl$RouterRecord.mDiscoveryPreference.equals(p2);
		if (v8 == 0) {
			Binder.restoreCallingIdentity(v4);
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void setDiscoveryRequestWithRouter2(IMediaRouter2 p1, RouteDiscoveryPreference p2){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p2, "preference must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	Object v6 = this.mAllRouterRecords.get(v5);
	if (v6 != 0) {
		boolean v8 = MediaRouter2ServiceImpl$RouterRecord.mDiscoveryPreference.equals(p2);
		if (v8 == 0) {
			MediaRouter2ServiceImpl$RouterRecord.mDiscoveryPreference = p2;
			MediaRouter2ServiceImpl$$ExternalSyntheticLambda21 v9 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda21();
			Message v11 = PooledLambda.obtainMessage(v9, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, MediaRouter2ServiceImpl$RouterRecord.mDiscoveryPreference);
			boolean v12 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v11);
			MediaRouter2ServiceImpl$$ExternalSyntheticLambda22 v13 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda22();
			Message v15 = PooledLambda.obtainMessage(v13, MediaRouter2ServiceImpl$UserRecord.mHandler);
			boolean v16 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v15);
			Binder.restoreCallingIdentity(v4);
			return;
		}
	}
}

and the following sink code:
['MediaRouter2ServiceImpl$RouterRecord.mDiscoveryPreference = p2;\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda21 v9 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda21();\nMessage v11 = PooledLambda.obtainMessage(v9, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, MediaRouter2ServiceImpl$RouterRecord.mDiscoveryPreference);\nboolean v12 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v11);\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda22 v13 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda22();\nMessage v15 = PooledLambda.obtainMessage(v13, MediaRouter2ServiceImpl$UserRecord.mHandler);\nboolean v16 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v15);']

The method setDiscoveryRequestWithRouter2 has the following similar APIs:

- API Name: unregisterRouter2(Landroid/media/IMediaRouter2;)V with Similarity Score: 0.8836871385574341
  - Access Control Level: NONE and the following code:
boolean v7 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.remove(v6);
MediaRouter2ServiceImpl$$ExternalSyntheticLambda15 v8 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda15();
Message v10 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$RouterRecord.mPackageName, 0);
boolean v11 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v10);

- API Name: releaseSessionWithManager(Landroid/media/IMediaRouter2Manager;ILjava/lang/String;)V with Similarity Score: 0.8591151237487793
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl$RouterRecord v8 = MediaRouter2ServiceImpl$UserRecord.mHandler.findRouterWithSessionLocked(p3);
long v9 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);
MediaRouter2ServiceImpl$$ExternalSyntheticLambda6 v10 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda6();
Long v12 = Long.valueOf(v9);
Message v13 = PooledLambda.obtainMessage(v10, MediaRouter2ServiceImpl$UserRecord.mHandler, v12, v8, p3);
boolean v14 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v13);

