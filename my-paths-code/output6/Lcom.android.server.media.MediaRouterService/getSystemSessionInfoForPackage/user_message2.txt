The method getSystemSessionInfoForPackage has the following code snippet:

This is path 1 for the API with depth 2:
public RoutingSessionInfo getSystemSessionInfoForPackage(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	Object v4 = this.mUserRecords.get(v3);
	if (v4 == 0) {
		Iterator v5 = .iterator();
		boolean v6 = v5.hasNext();
		if (v6 == 0) {
			Object v7 = v5.next();
			boolean v8 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
			if (v8 == 0) {
				boolean v9 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v9 == 0) {
					if (v14 != 0) {
						long v15 = Binder.clearCallingIdentity();
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda3 v22 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda3();
						Message v24 = PooledLambda.obtainMessage(v22, MediaRouter2ServiceImpl$UserRecord.mHandler);
						boolean v25 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v24);
						MediaRouter2ServiceImpl$UserRecord v16 = ;
						if ( == 0) {
							if ( == 0) {
								SystemMediaRoute2Provider v26 = this.mSystemProvider;
								ArrayList v28 = new ArrayList(this.mSessionInfos);
								List v27 = v28;
								if (v27 == 0) {
									boolean v30 = v27.isEmpty();
									if (v30 != 0) {
										RoutingSessionInfo$Builder v31 = new RoutingSessionInfo$Builder(v32);
										Object v32 = v27.get(0);
										this.mClientPackageName = p1;
										RoutingSessionInfo$Builder v34 = RoutingSessionInfo$Builder;
										boolean v36 = this.mSelectedRoutes.isEmpty();
										if (v36 != 0) {
											RoutingSessionInfo v37 = new RoutingSessionInfo(RoutingSessionInfo$Builder);
											RoutingSessionInfo v35 = v37;
											Binder.restoreCallingIdentity(v15);
											RoutingSessionInfo v10 = ;
											return v10;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public RoutingSessionInfo getSystemSessionInfoForPackage(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	Object v4 = this.mUserRecords.get(v3);
	if (v4 == 0) {
		List v5 = Collections.emptyList();
		Iterator v6 = .iterator();
		boolean v7 = v6.hasNext();
		if (v7 == 0) {
			Object v8 = v6.next();
			boolean v9 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
			if (v9 == 0) {
				boolean v10 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v10 == 0) {
					if (v15 != 0) {
						long v16 = Binder.clearCallingIdentity();
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda3 v23 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda3();
						Message v25 = PooledLambda.obtainMessage(v23, MediaRouter2ServiceImpl$UserRecord.mHandler);
						boolean v26 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v25);
						MediaRouter2ServiceImpl$UserRecord v17 = ;
						if ( == 0) {
							if ( == 0) {
								SystemMediaRoute2Provider v27 = this.mSystemProvider;
								ArrayList v29 = new ArrayList(this.mSessionInfos);
								List v28 = v29;
								if (v28 == 0) {
									boolean v31 = v28.isEmpty();
									if (v31 != 0) {
										RoutingSessionInfo$Builder v32 = new RoutingSessionInfo$Builder(v33);
										Object v33 = v28.get(0);
										this.mClientPackageName = p1;
										RoutingSessionInfo$Builder v35 = RoutingSessionInfo$Builder;
										boolean v37 = this.mSelectedRoutes.isEmpty();
										if (v37 != 0) {
											RoutingSessionInfo v38 = new RoutingSessionInfo(RoutingSessionInfo$Builder);
											RoutingSessionInfo v36 = v38;
											Binder.restoreCallingIdentity(v16);
											RoutingSessionInfo v11 = ;
											return v11;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public RoutingSessionInfo getSystemSessionInfoForPackage(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	int v3 = v2.getIdentifier();
	Object v4 = this.mUserRecords.get(v3);
	if (v4 == 0) {
		Iterator v5 = .iterator();
		boolean v6 = v5.hasNext();
		if (v6 == 0) {
			Object v7 = v5.next();
			boolean v8 = TextUtils.equals(MediaRouterService$ClientRecord.mPackageName, p2);
			if (v8 == 0) {
				boolean v9 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v9 == 0) {
					if (v14 != 0) {
						long v15 = Binder.clearCallingIdentity();
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda3 v22 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda3();
						Message v24 = PooledLambda.obtainMessage(v22, MediaRouter2ServiceImpl$UserRecord.mHandler);
						boolean v25 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v24);
						MediaRouter2ServiceImpl$UserRecord v16 = ;
						if ( == 0) {
							if ( == 0) {
								SystemMediaRoute2Provider v26 = this.mSystemProvider;
								boolean v28 = MediaRoute2Provider.mSessionInfos.isEmpty();
								if (v28 == 0) {
									RoutingSessionInfo$Builder v29 = new RoutingSessionInfo$Builder("SYSTEM_SESSION",p1);
									RoutingSessionInfo$Builder v31 = v29.setSystemSession(1);
									String v32 = this.mDeviceRoute.getId();
									RoutingSessionInfo$Builder v33 = v31.addSelectedRoute(v32);
									if (this.mBtRouteProvider == 0) {
										List v34 = this.mBtRouteProvider.getAllBluetoothRoutes();
										Iterator v35 = v34.iterator();
										boolean v36 = v35.hasNext();
										if (v36 == 0) {
											RoutingSessionInfo$Builder v37 = v31.setProviderId(MediaRoute2Provider.mUniqueId);
											RoutingSessionInfo v38 = v37.build();
											RoutingSessionInfo v27 = v38;
											Binder.restoreCallingIdentity(v15);
											RoutingSessionInfo v10 = ;
											return v10;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v1 = Binder.getCallingUid();\nUserHandle v2 = UserHandle.getUserHandleForUid(v1);\nint v3 = v2.getIdentifier();\nObject v4 = this.mUserRecords.get(v3);', 'RoutingSessionInfo$Builder v29 = new RoutingSessionInfo$Builder("SYSTEM_SESSION",p1);\nRoutingSessionInfo$Builder v31 = v29.setSystemSession(1);\nString v32 = this.mDeviceRoute.getId();\nRoutingSessionInfo$Builder v33 = v31.addSelectedRoute(v32);\nRoutingSessionInfo v38 = v37.build();\nreturn v10;', 'ArrayList v28 = new ArrayList(this.mSessionInfos);\nList v27 = v28;\nif (v27 == 0) {\nboolean v30 = v27.isEmpty();\nif (v30 != 0) {\nRoutingSessionInfo$Builder v31 = new RoutingSessionInfo$Builder(v32);\nObject v32 = v27.get(0);\nthis.mClientPackageName = p1;\nRoutingSessionInfo$Builder v34 = RoutingSessionInfo$Builder;\nboolean v36 = this.mSelectedRoutes.isEmpty();\nif (v36 != 0) {\nRoutingSessionInfo v37 = new RoutingSessionInfo(RoutingSessionInfo$Builder);\nRoutingSessionInfo v35 = v37;\nreturn v11;']

The method getSystemSessionInfoForPackage has the following similar APIs:

- API Name: startVpnProfile(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.784119725227356
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
int v5 = UserHandle.getUserId(v1);
Object v7 = this.mVpns.get(v5);

- API Name: getUserUnlockRealtime()J with Similarity Score: 0.7810848951339722
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingUid();
int v2 = UserHandle.getUserId(v1);
Object v4 = this.mUsers.get(v2);
boolean v5 = this.mRemovingUserIds.get(v2);
return UserManagerService$UserData.unlockRealtime;

