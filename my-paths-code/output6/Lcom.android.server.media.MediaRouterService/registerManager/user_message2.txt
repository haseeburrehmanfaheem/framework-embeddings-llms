The method registerManager has the following code snippet:

This is path 1 for the API with depth 2:
public void registerManager(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			if ( >= v4.length) {
				boolean v5 = v4[].equals(p2);
				if (v5 == 0) {
					boolean v2 = 1;
					if (v2 == 0) {
						Object v7 = Objects.requireNonNull(p1, "manager must not be null");
						boolean v8 = TextUtils.isEmpty(p2);
						if (v8 != 0) {
							int v9 = Binder.getCallingUid();
							int v10 = Binder.getCallingPid();
							UserHandle v11 = UserHandle.getUserHandleForUid(v9);
							int v12 = v11.getIdentifier();
							long v13 = Binder.clearCallingIdentity();
							MediaRouter2ServiceImpl$UserRecord v18 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v12);
							MediaRouter2ServiceImpl$ManagerRecord v19 = new MediaRouter2ServiceImpl$ManagerRecord(MediaRouter2ServiceImpl,v18,p1,v9,v10,p2);
							v15.linkToDeath(v19, 0);
							boolean v22 = MediaRouter2ServiceImpl$UserRecord.mManagerRecords.add(v19);
							Object v23 = this.mAllManagerRecords.put(v15, v19);
							Iterator v24 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.iterator();
							boolean v25 = v24.hasNext();
							if (v25 == 0) {
								MediaRouter2ServiceImpl$$ExternalSyntheticLambda14 v26 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda14();
								Message v28 = PooledLambda.obtainMessage(v26, MediaRouter2ServiceImpl$UserRecord.mHandler, p1);
								boolean v29 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v28);
								Binder.restoreCallingIdentity(v13);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void registerManager(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			if ( >= v4.length) {
				boolean v2 = 0;
				if (v2 == 0) {
					Object v6 = Objects.requireNonNull(p1, "manager must not be null");
					boolean v7 = TextUtils.isEmpty(p2);
					if (v7 != 0) {
						int v8 = Binder.getCallingUid();
						int v9 = Binder.getCallingPid();
						UserHandle v10 = UserHandle.getUserHandleForUid(v8);
						int v11 = v10.getIdentifier();
						long v12 = Binder.clearCallingIdentity();
						MediaRouter2ServiceImpl$UserRecord v17 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v11);
						MediaRouter2ServiceImpl$ManagerRecord v18 = new MediaRouter2ServiceImpl$ManagerRecord(MediaRouter2ServiceImpl,v17,p1,v8,v9,p2);
						v14.linkToDeath(v18, 0);
						boolean v21 = MediaRouter2ServiceImpl$UserRecord.mManagerRecords.add(v18);
						Object v22 = this.mAllManagerRecords.put(v14, v18);
						Iterator v23 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.iterator();
						boolean v24 = v23.hasNext();
						if (v24 == 0) {
							MediaRouter2ServiceImpl$$ExternalSyntheticLambda14 v25 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda14();
							Message v27 = PooledLambda.obtainMessage(v25, MediaRouter2ServiceImpl$UserRecord.mHandler, p1);
							boolean v28 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v27);
							Binder.restoreCallingIdentity(v12);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void registerManager(IMediaRouter2Manager p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			boolean v2 = 0;
			if (v2 == 0) {
				Object v6 = Objects.requireNonNull(p1, "manager must not be null");
				boolean v7 = TextUtils.isEmpty(p2);
				if (v7 != 0) {
					int v8 = Binder.getCallingUid();
					int v9 = Binder.getCallingPid();
					UserHandle v10 = UserHandle.getUserHandleForUid(v8);
					int v11 = v10.getIdentifier();
					long v12 = Binder.clearCallingIdentity();
					MediaRouter2ServiceImpl$UserRecord v17 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v11);
					MediaRouter2ServiceImpl$ManagerRecord v18 = new MediaRouter2ServiceImpl$ManagerRecord(MediaRouter2ServiceImpl,v17,p1,v8,v9,p2);
					v14.linkToDeath(v18, 0);
					boolean v21 = MediaRouter2ServiceImpl$UserRecord.mManagerRecords.add(v18);
					Object v22 = this.mAllManagerRecords.put(v14, v18);
					Iterator v23 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.iterator();
					boolean v24 = v23.hasNext();
					if (v24 == 0) {
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda14 v25 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda14();
						Message v27 = PooledLambda.obtainMessage(v25, MediaRouter2ServiceImpl$UserRecord.mHandler, p1);
						boolean v28 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v27);
						Binder.restoreCallingIdentity(v12);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v7 = Objects.requireNonNull(p1, "manager must not be null");\nint v8 = Binder.getCallingUid();\nint v9 = Binder.getCallingPid();\nUserHandle v10 = UserHandle.getUserHandleForUid(v8);\nint v11 = v10.getIdentifier();\nlong v12 = Binder.clearCallingIdentity();\nMediaRouter2ServiceImpl$UserRecord v17 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v11);\nMediaRouter2ServiceImpl$ManagerRecord v18 = new MediaRouter2ServiceImpl$ManagerRecord(MediaRouter2ServiceImpl,v17,p1,v8,v9,p2);\nv14.linkToDeath(v18, 0);\nboolean v21 = MediaRouter2ServiceImpl$UserRecord.mManagerRecords.add(v18);\nObject v22 = this.mAllManagerRecords.put(v14, v18);']

The method registerManager has the following similar APIs:

- API Name: registerRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;)V with Similarity Score: 0.8229067921638489
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
PackageManager v3 = this.mContext.getPackageManager();
String v4 = v3.getPackagesForUid(v1);
IBinder v17 = p1.asBinder();
MediaRouter2ServiceImpl$UserRecord v19 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v12);
MediaRouter2ServiceImpl$RouterRecord v20 = new MediaRouter2ServiceImpl$RouterRecord(MediaRouter2ServiceImpl,v19,p1,v9,v10,p2,,);
v17.linkToDeath(v20, 0);
boolean v23 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.add(v20);
Object v24 = this.mAllRouterRecords.put(v17, v20);

- API Name: requestCreateSessionWithManager(Landroid/media/IMediaRouter2Manager;ILandroid/media/RoutingSessionInfo;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.8183543682098389
  - Access Control Level: NONE and the following code:
Object v7 = this.mAllManagerRecords.get(v6);
String v8 = p3.getClientPackageName();
MediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$ManagerRecord.mUserRecord.findRouterRecordLocked(v8);
long v10 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);
MediaRouter2ServiceImpl$SessionCreationRequest v11 = new MediaRouter2ServiceImpl$SessionCreationRequest(v9,0,v10,p3,p4);
MediaRouter2ServiceImpl$ManagerRecord.mLastSessionCreationRequest = v11;

