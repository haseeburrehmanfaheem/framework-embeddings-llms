The method setSessionVolumeWithManager has the following code snippet:

This is path 1 for the API with depth 2:
public void setSessionVolumeWithManager(IMediaRouter2Manager p1, int p2, String p3, int p4){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	boolean v3 = TextUtils.isEmpty(p3);
	if (v3 != 0) {
		long v4 = Binder.clearCallingIdentity();
		IBinder v6 = p1.asBinder();
		Object v7 = this.mAllManagerRecords.get(v6);
		if (v7 != 0) {
			Binder.restoreCallingIdentity(v4);
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void setSessionVolumeWithManager(IMediaRouter2Manager p1, int p2, String p3, int p4){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	boolean v3 = TextUtils.isEmpty(p3);
	if (v3 != 0) {
		long v4 = Binder.clearCallingIdentity();
		IBinder v6 = p1.asBinder();
		Object v7 = this.mAllManagerRecords.get(v6);
		if (v7 != 0) {
			long v8 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);
			MediaRouter2ServiceImpl$$ExternalSyntheticLambda12 v9 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda12();
			Long v11 = Long.valueOf(v8);
			Integer v12 = Integer.valueOf(p4);
			Message v13 = PooledLambda.obtainMessage(v9, MediaRouter2ServiceImpl$UserRecord.mHandler, v11, p3, v12);
			boolean v14 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v13);
			Binder.restoreCallingIdentity(v4);
			return;
		}
	}
}

and the following sink code:
['Long v8 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda12 v9 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda12();\nLong v11 = Long.valueOf(v8);\nInteger v12 = Integer.valueOf(p4);\nMessage v13 = PooledLambda.obtainMessage(v9, MediaRouter2ServiceImpl$UserRecord.mHandler, v11, p3, v12);\nboolean v14 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v13);']

The method setSessionVolumeWithManager has the following similar APIs:

- API Name: selectRouteWithManager(Landroid/media/IMediaRouter2Manager;ILjava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.9084412455558777
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$UserRecord.mHandler.findRouterWithSessionLocked(p3);
long v10 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);
Long v13 = Long.valueOf(v10);
MediaRouter2ServiceImpl$$ExternalSyntheticLambda10 v11 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda10();
Message v14 = PooledLambda.obtainMessage(v11, MediaRouter2ServiceImpl$UserRecord.mHandler, v13, v9, p3, p4);
boolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);

- API Name: deselectRouteWithManager(Landroid/media/IMediaRouter2Manager;ILjava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.9075415134429932
  - Access Control Level: NONE and the following code:
Long v13 = Long.valueOf(v10);
MediaRouter2ServiceImpl$$ExternalSyntheticLambda20 v11 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda20();
Message v14 = PooledLambda.obtainMessage(v11, MediaRouter2ServiceImpl$UserRecord.mHandler, v13, v9, p3, p4);
boolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);

