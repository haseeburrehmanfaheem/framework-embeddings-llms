The method transferToRouteWithRouter2 has the following code snippet:

This is path 1 for the API with depth 2:
public void transferToRouteWithRouter2(IMediaRouter2 p1, String p2, MediaRoute2Info p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p3, "route must not be null");
	boolean v4 = TextUtils.isEmpty(p2);
	if (v4 != 0) {
		long v5 = Binder.clearCallingIdentity();
		IBinder v7 = p1.asBinder();
		Object v8 = this.mAllRouterRecords.get(v7);
		if (v8 != 0) {
			SystemMediaRoute2Provider v9 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
			MediaRoute2Info v10 = v9.getDefaultRoute();
			String v11 = v10.getId();
			boolean v12 = p3.isSystemRoute();
			if (v12 == 0) {
				if (MediaRouter2ServiceImpl$RouterRecord.mHasModifyAudioRoutingPermission != 0) {
					String v13 = p3.getId();
					boolean v14 = TextUtils.equals(v13, v11);
					if (v14 != 0) {
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda18 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda18();
						int v17 = MediaRouter2ServiceImpl.toOriginalRequestId(-1);
						Integer v18 = Integer.valueOf(v17);
						Message v19 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v8, v18);
						boolean v20 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v19);
						Binder.restoreCallingIdentity(v5);
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void transferToRouteWithRouter2(IMediaRouter2 p1, String p2, MediaRoute2Info p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p3, "route must not be null");
	boolean v4 = TextUtils.isEmpty(p2);
	if (v4 != 0) {
		long v5 = Binder.clearCallingIdentity();
		IBinder v7 = p1.asBinder();
		Object v8 = this.mAllRouterRecords.get(v7);
		if (v8 != 0) {
			SystemMediaRoute2Provider v9 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
			MediaRoute2Info v10 = v9.getDefaultRoute();
			String v11 = v10.getId();
			boolean v12 = p3.isSystemRoute();
			if (v12 == 0) {
				if (MediaRouter2ServiceImpl$RouterRecord.mHasModifyAudioRoutingPermission != 0) {
					String v13 = p3.getId();
					boolean v14 = TextUtils.equals(v13, v11);
					if (v14 != 0) {
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda19 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda19();
						Long v17 = Long.valueOf(-1);
						Message v18 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v17, v8, p2, p3);
						boolean v19 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v18);
						Binder.restoreCallingIdentity(v5);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = Objects.requireNonNull(p1, "router must not be null");\nObject v3 = Objects.requireNonNull(p3, "route must not be null");\nboolean v4 = TextUtils.isEmpty(p2);\nIBinder v7 = p1.asBinder();\nObject v8 = this.mAllRouterRecords.get(v7);\nMediaRoute2Info v10 = v9.getDefaultRoute();\nString v11 = v10.getId();\nboolean v12 = p3.isSystemRoute();\nif (v14 != 0) {\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda19 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda19();\nLong v17 = Long.valueOf(-1);\nMessage v18 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v17, v8, p2, p3);\nboolean v19 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v18);', 'MediaRouter2ServiceImpl$$ExternalSyntheticLambda18 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda18();\nint v17 = MediaRouter2ServiceImpl.toOriginalRequestId(-1);\nInteger v18 = Integer.valueOf(v17);\nMessage v19 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v8, v18);\nboolean v20 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v19);']

The method transferToRouteWithRouter2 has the following similar APIs:

- API Name: deselectRouteWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.955560564994812
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl$$ExternalSyntheticLambda9 v9 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda9();
Long v11 = Long.valueOf(-1);
Message v12 = PooledLambda.obtainMessage(v9, MediaRouter2ServiceImpl$UserRecord.mHandler, v11, v8, p2, p3);
boolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);

- API Name: unregisterRouter2(Landroid/media/IMediaRouter2;)V with Similarity Score: 0.9549134373664856
  - Access Control Level: NONE and the following code:
MediaRouter2ServiceImpl$$ExternalSyntheticLambda16 v12 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda16();
Message v14 = PooledLambda.obtainMessage(v12, MediaRouter2ServiceImpl$UserRecord.mHandler);
boolean v15 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v14);

