The method registerRouter2 has the following code snippet:

This is path 1 for the API with depth 2:
public void registerRouter2(IMediaRouter2 p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			if ( >= v4.length) {
				boolean v5 = v4[].equals(p2);
				if (v5 == 0) {
					boolean v2 = 1;
					if (v2 == 0) {
						if (v14 != 0) {
							long v15 = Binder.clearCallingIdentity();
							IBinder v17 = p1.asBinder();
							Object v18 = this.mAllRouterRecords.get(v17);
							if (v18 == 0) {
								MediaRouter2ServiceImpl$UserRecord v19 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v12);
								MediaRouter2ServiceImpl$RouterRecord v20 = new MediaRouter2ServiceImpl$RouterRecord(MediaRouter2ServiceImpl,v19,p1,v9,v10,p2,,);
								v17.linkToDeath(v20, 0);
								boolean v23 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.add(v20);
								Object v24 = this.mAllRouterRecords.put(v17, v20);
								MediaRouter2ServiceImpl$$ExternalSyntheticLambda8 v25 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda8();
								Message v27 = PooledLambda.obtainMessage(v25, MediaRouter2ServiceImpl$UserRecord.mHandler, v20);
								boolean v28 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v27);
								Binder.restoreCallingIdentity(v15);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void registerRouter2(IMediaRouter2 p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			if ( >= v4.length) {
				boolean v5 = v4[].equals(p2);
				if (v5 == 0) {
					boolean v2 = 1;
					if (v2 == 0) {
						if (v14 != 0) {
							long v15 = Binder.clearCallingIdentity();
							IBinder v17 = p1.asBinder();
							Object v18 = this.mAllRouterRecords.get(v17);
							if (v18 == 0) {
								MediaRouter2ServiceImpl$UserRecord v19 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v12);
								MediaRouter2ServiceImpl$RouterRecord v20 = new MediaRouter2ServiceImpl$RouterRecord(MediaRouter2ServiceImpl,v19,p1,v9,v10,p2,,);
								v17.linkToDeath(v20, 0);
								boolean v23 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.add(v20);
								Object v24 = this.mAllRouterRecords.put(v17, v20);
								MediaRouter2ServiceImpl$$ExternalSyntheticLambda8 v25 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda8();
								Message v27 = PooledLambda.obtainMessage(v25, MediaRouter2ServiceImpl$UserRecord.mHandler, v20);
								boolean v28 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v27);
								Binder.restoreCallingIdentity(v15);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void registerRouter2(IMediaRouter2 p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			if ( >= v4.length) {
				boolean v2 = 0;
				if (v2 == 0) {
					if (v13 != 0) {
						long v14 = Binder.clearCallingIdentity();
						IBinder v16 = p1.asBinder();
						Object v17 = this.mAllRouterRecords.get(v16);
						if (v17 == 0) {
							MediaRouter2ServiceImpl$UserRecord v18 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v11);
							MediaRouter2ServiceImpl$RouterRecord v19 = new MediaRouter2ServiceImpl$RouterRecord(MediaRouter2ServiceImpl,v18,p1,v8,v9,p2,,);
							v16.linkToDeath(v19, 0);
							boolean v22 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.add(v19);
							Object v23 = this.mAllRouterRecords.put(v16, v19);
							MediaRouter2ServiceImpl$$ExternalSyntheticLambda8 v24 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda8();
							Message v26 = PooledLambda.obtainMessage(v24, MediaRouter2ServiceImpl$UserRecord.mHandler, v19);
							boolean v27 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v26);
							Binder.restoreCallingIdentity(v14);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v1 = Binder.getCallingUid();\nPackageManager v3 = this.mContext.getPackageManager();\nString v4 = v3.getPackagesForUid(v1);\nIBinder v17 = p1.asBinder();\nMediaRouter2ServiceImpl$UserRecord v19 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v12);\nMediaRouter2ServiceImpl$RouterRecord v20 = new MediaRouter2ServiceImpl$RouterRecord(MediaRouter2ServiceImpl,v19,p1,v9,v10,p2,,);\nv17.linkToDeath(v20, 0);\nboolean v23 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.add(v20);\nObject v24 = this.mAllRouterRecords.put(v17, v20);']

The method registerRouter2 has the following similar APIs:

- API Name: registerManager(Landroid/media/IMediaRouter2Manager;Ljava/lang/String;)V with Similarity Score: 0.8229067921638489
  - Access Control Level: NONE and the following code:
Object v7 = Objects.requireNonNull(p1, "manager must not be null");
int v8 = Binder.getCallingUid();
int v9 = Binder.getCallingPid();
UserHandle v10 = UserHandle.getUserHandleForUid(v8);
int v11 = v10.getIdentifier();
long v12 = Binder.clearCallingIdentity();
MediaRouter2ServiceImpl$UserRecord v17 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v11);
MediaRouter2ServiceImpl$ManagerRecord v18 = new MediaRouter2ServiceImpl$ManagerRecord(MediaRouter2ServiceImpl,v17,p1,v8,v9,p2);
v14.linkToDeath(v18, 0);
boolean v21 = MediaRouter2ServiceImpl$UserRecord.mManagerRecords.add(v18);
Object v22 = this.mAllManagerRecords.put(v14, v18);

- API Name: requestCreateSessionWithManager(Landroid/media/IMediaRouter2Manager;ILandroid/media/RoutingSessionInfo;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.8100079894065857
  - Access Control Level: NONE and the following code:
Object v7 = this.mAllManagerRecords.get(v6);
String v8 = p3.getClientPackageName();
MediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$ManagerRecord.mUserRecord.findRouterRecordLocked(v8);
long v10 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);
MediaRouter2ServiceImpl$SessionCreationRequest v11 = new MediaRouter2ServiceImpl$SessionCreationRequest(v9,0,v10,p3,p4);
MediaRouter2ServiceImpl$ManagerRecord.mLastSessionCreationRequest = v11;

