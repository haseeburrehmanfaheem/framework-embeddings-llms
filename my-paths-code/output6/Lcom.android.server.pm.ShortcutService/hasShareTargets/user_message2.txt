The method hasShareTargets has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasShareTargets(String p1, String p2, int p3){
	boolean v5 = this.mUnlockedUsers.get(p1);
	if (v5 == 0) {
		boolean v6 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
		boolean v4 = v6;
		if (v4 == 0) {
			boolean v9 = ShortcutService.isUserUnlockedL(p2);
			if (v9 != 0) {
				if (p2 == this.mLastLockedUser) {
					ShortcutService.wtf("User still locked");
					this.mLastLockedUser = p2;
					Object v11 = this.mUsers.get(p2);
					if (v11 != 0) {
						ShortcutUser v12 = ShortcutService.loadUserLocked(p2);
						if (v12 != 0) {
							ShortcutUser v13 = new ShortcutUser(ShortcutService,p2);
							this.mUsers.put(p2, );
							ShortcutService.checkPackageChanges(p2);
							ShortcutUser v8 = ;
							ShortcutPackage v18 = ShortcutUser.getPackageShortcutsIfExists(p1);
							if (v18 != 0) {
								ShortcutPackage v19 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
								Object v21 = this.mPackages.put(p1, v19);
								ShortcutPackage v17 = ;
								ShortcutPackage v7 = v17;
								boolean v22 = v7.hasShareTargets();
								return v22;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean hasShareTargets(String p1, String p2, int p3){
	boolean v5 = this.mUnlockedUsers.get(p1);
	if (v5 == 0) {
		boolean v4 = 1;
		if (v4 == 0) {
			boolean v8 = ShortcutService.isUserUnlockedL(p2);
			if (v8 != 0) {
				if (p2 == this.mLastLockedUser) {
					ShortcutService.wtf("User still locked");
					this.mLastLockedUser = p2;
					Object v10 = this.mUsers.get(p2);
					if (v10 != 0) {
						ShortcutUser v11 = ShortcutService.loadUserLocked(p2);
						if (v11 != 0) {
							ShortcutUser v12 = new ShortcutUser(ShortcutService,p2);
							this.mUsers.put(p2, );
							ShortcutService.checkPackageChanges(p2);
							ShortcutUser v7 = ;
							ShortcutPackage v17 = ShortcutUser.getPackageShortcutsIfExists(p1);
							if (v17 != 0) {
								ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
								Object v20 = this.mPackages.put(p1, v18);
								ShortcutPackage v16 = ;
								ShortcutPackage v6 = v16;
								boolean v21 = v6.hasShareTargets();
								return v21;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean hasShareTargets(String p1, String p2, int p3){
	boolean v5 = this.mUnlockedUsers.get(p1);
	if (v5 == 0) {
		boolean v6 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
		boolean v4 = v6;
		if (v4 == 0) {
			boolean v9 = ShortcutService.isUserUnlockedL(p2);
			if (v9 != 0) {
				if (p2 == this.mLastLockedUser) {
					ShortcutService.wtf("User still locked");
					this.mLastLockedUser = p2;
					Object v11 = this.mUsers.get(p2);
					if (v11 != 0) {
						ShortcutUser v12 = ShortcutService.loadUserLocked(p2);
						if (v12 != 0) {
							this.mUsers.put(p2, );
							ShortcutService.checkPackageChanges(p2);
							ShortcutUser v8 = ;
							ShortcutPackage v16 = ShortcutUser.getPackageShortcutsIfExists(p1);
							if (v16 != 0) {
								ShortcutPackage v17 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
								Object v19 = this.mPackages.put(p1, v17);
								ShortcutPackage v15 = ;
								ShortcutPackage v7 = v15;
								boolean v20 = v7.hasShareTargets();
								return v20;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ShortcutUser v12 = ShortcutService.loadUserLocked(p2);\nShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);\nObject v21 = this.mPackages.put(p1, v19);\nboolean v22 = v7.hasShareTargets();\nreturn v22;', 'ShortcutService.loadUserLocked(p2);\nShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);\nObject v20 = this.mPackages.put(p1, v18);\nboolean v21 = v6.hasShareTargets();\nreturn v21;', 'ShortcutService.loadUserLocked(p2);\nShortcutPackage v17 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);\nObject v19 = this.mPackages.put(p1, v17);\nboolean v20 = v7.hasShareTargets();\nreturn v20;']

The method hasShareTargets has the following similar APIs:

- API Name: onApplicationActive(Ljava/lang/String;I)V with Similarity Score: 0.8990879058837891
  - Access Control Level: NONE and the following code:
boolean v3 = this.mUnlockedUsers.get(p2);
ShortcutUser v9 = ShortcutService.loadUserLocked(p2);
this.mUsers.put(p2, );
ShortcutPackage v16 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v18 = this.mPackages.put(p1, v16);

- API Name: onApplicationActive(Ljava/lang/String;I)V with Similarity Score: 0.8966668844223022
  - Access Control Level: NONE and the following code:
boolean v3 = this.mUnlockedUsers.get(p2);
ShortcutUser v10 = ShortcutService.loadUserLocked(p2);
this.mUsers.put(p2, );
ShortcutPackage v16 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v19 = this.mPackages.put(p1, v17);

