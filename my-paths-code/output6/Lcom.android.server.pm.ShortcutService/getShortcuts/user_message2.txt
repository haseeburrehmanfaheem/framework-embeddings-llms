The method getShortcuts has the following code snippet:

This is path 1 for the API with depth 2:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		boolean v17 = this.mUnlockedUsers.get(p1);
		if (v17 == 0) {
			boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
			boolean v16 = v18;
			if (v16 == 0) {
				if ((p2 & 2) == 0) {
					if ((p2 & 4) == 0) {
						if ((p2 & 1) == 0) {
							if ((p2 & 8) == 0) {
								if ( == 0) {
									if ( == 0) {
										if ( == 0) {
											ShortcutService$$ExternalSyntheticLambda19 v19 = new ShortcutService$$ExternalSyntheticLambda19(((( | ) | ) | ));
											ArrayList v22 = new ArrayList();
											ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);
											ShortcutPackage v26 = v25.getPackageShortcuts(p1);
											ShortcutUser v27 = v26.getUser();
											v27.onCalledByPublisher(p1);
											ShortcutPackage v24 = v26;
											ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0);
											ParceledListSlice v31 = new ParceledListSlice(v32);
											int v33 = v22.size();
											if ( < 0) {
												List v32 = v22;
												ParceledListSlice v21 = v31;
												return v21;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		boolean v17 = this.mUnlockedUsers.get(p1);
		if (v17 == 0) {
			boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
			boolean v16 = v18;
			if (v16 == 0) {
				if ((p2 & 2) == 0) {
					if ((p2 & 4) == 0) {
						if ((p2 & 1) == 0) {
							if ((p2 & 8) == 0) {
								if ( == 0) {
									if ( == 0) {
										if ( == 0) {
											ShortcutService$$ExternalSyntheticLambda19 v19 = new ShortcutService$$ExternalSyntheticLambda19(((( | ) | ) | ));
											ArrayList v22 = new ArrayList();
											ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);
											ShortcutPackage v26 = v25.getPackageShortcuts(p1);
											ShortcutUser v27 = v26.getUser();
											v27.onCalledByPublisher(p1);
											ShortcutPackage v24 = v26;
											ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0);
											ParceledListSlice v31 = new ParceledListSlice(v32);
											int v33 = v22.size();
											if ( < 0) {
												List v32 = v22;
												ParceledListSlice v21 = v31;
												return v21;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		boolean v17 = this.mUnlockedUsers.get(p1);
		if (v17 == 0) {
			boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
			boolean v16 = v18;
			if (v16 == 0) {
				if ((p2 & 2) == 0) {
					if ((p2 & 4) == 0) {
						if ((p2 & 1) == 0) {
							if ((p2 & 8) == 0) {
								if ( == 0) {
									if ( == 0) {
										if ( == 0) {
											ShortcutService$$ExternalSyntheticLambda19 v19 = new ShortcutService$$ExternalSyntheticLambda19(((( | ) | ) | ));
											ArrayList v22 = new ArrayList();
											ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);
											ShortcutPackage v26 = v25.getPackageShortcuts(p1);
											ShortcutUser v27 = v26.getUser();
											v27.onCalledByPublisher(p1);
											ShortcutPackage v24 = v26;
											ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0);
											ParceledListSlice v31 = new ParceledListSlice(v32);
											int v33 = v22.size();
											if ( < 0) {
												List v32 = v22;
												ParceledListSlice v21 = v31;
												return v21;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['long v7 = ShortcutService.injectClearCallingIdentity();\nint v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);\nShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);\nShortcutPackage v26 = v25.getPackageShortcuts(p1);\nParceledListSlice v31 = new ParceledListSlice(v32);\nreturn v21;']

The method getShortcuts has the following similar APIs:

- API Name: removeAllDynamicShortcuts(Ljava/lang/String;I)V with Similarity Score: 0.9260923266410828
  - Access Control Level: SYS_OR_SIG and the following code:
long v7 = ShortcutService.injectClearCallingIdentity();
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
ShortcutUser v25 = ShortcutService.loadUserLocked(p2);
this.mUsers.put(p2, ...);
ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
this.mPackages.put(p1, v32);

- API Name: getIconMaxDimensions(Ljava/lang/String;I)I with Similarity Score: 0.9124475717544556
  - Access Control Level: SYS_OR_SIG and the following code:
long v7 = ShortcutService.injectClearCallingIdentity();
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
ShortcutService.injectRestoreCallingIdentity(v7);
ApplicationInfo v11 = ShortcutService.getApplicationInfo(p1, p2);

