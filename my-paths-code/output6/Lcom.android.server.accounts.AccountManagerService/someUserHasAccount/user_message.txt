This is path 1 for the API with depth 2:
public boolean someUserHasAccount(Account p1){
	if (v2 == 0) {
		long v3 = Binder.clearCallingIdentity();
		UserManager v5 = AccountManagerService.getUserManager();
		List v6 = v5.getAliveUsers();
		int v7 = v6.size();
		[I v8 = new [I(v7);
		if ( >= v7) {
			ArrayList v10 = Lists.newArrayList();
			if ( >= v8.length) {
				int v11 = v10.size();
				AccountAndUser v12 = new AccountAndUser(v11);
				Object v13 = v10.toArray(v12);
				AccountAndUser v9 = v13;
				AccountAndUser v4 = v9;
				if ( < 0) {
					boolean v14 = AccountAndUser.account.equals(p1);
					if (v14 == 0) {
						Binder.restoreCallingIdentity(v3);
						return 1;
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public boolean someUserHasAccount(Account p1){
	if (v2 == 0) {
		long v3 = Binder.clearCallingIdentity();
		UserManager v5 = AccountManagerService.getUserManager();
		List v6 = v5.getAliveUsers();
		int v7 = v6.size();
		[I v8 = new [I(v7);
		if ( >= v7) {
			ArrayList v10 = Lists.newArrayList();
			if ( >= v8.length) {
				int v11 = v10.size();
				AccountAndUser v12 = new AccountAndUser(v11);
				Object v13 = v10.toArray(v12);
				AccountAndUser v9 = v13;
				AccountAndUser v4 = v9;
				if ( < 0) {
					Binder.restoreCallingIdentity(v3);
					return 0;
				}
			}
		}
	}
}
