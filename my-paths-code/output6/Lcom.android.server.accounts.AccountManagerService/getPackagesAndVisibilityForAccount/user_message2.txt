The method getPackagesAndVisibilityForAccount has the following code snippet:

This is path 1 for the API with depth 2:
public Map getPackagesAndVisibilityForAccount(Account p1){
	Object v1 = Objects.requireNonNull(p1, "account cannot be null");
	int v2 = Binder.getCallingUid();
	int v3 = UserHandle.getCallingUserId();
	if (Account.type != 0) {
		List v6 = AccountManagerService.getTypesForCaller(p2, p3, 0);
		List v5 = v6;
		boolean v7 = v5.contains(Account.type);
		boolean v4 = v7;
		if (v4 != 0) {
			boolean v8 = p0.isSystemUid(v2);
			if (v8 == 0) {
				long v9 = IAccountManager$Stub.clearCallingIdentity();
				AccountManagerService$UserAccounts v10 = p0.getUserAccounts(v3);
				Map v12 = this.visibilityCache;
				Object v13 = v12.get(p1);
				if (v13 != 0) {
					int v14 = Log.d("AccountManagerService", "Visibility was not initialized");
					HashMap v15 = new HashMap();
					Map v17 = this.visibilityCache;
					Object v18 = v17.put(p1, v15);
					AccountManager.invalidateLocalAccountsDataCaches();
					Map v11 = ;
					IAccountManager$Stub.restoreCallingIdentity(v9);
					return v11;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public Map getPackagesAndVisibilityForAccount(Account p1){
	Object v1 = Objects.requireNonNull(p1, "account cannot be null");
	int v2 = Binder.getCallingUid();
	int v3 = UserHandle.getCallingUserId();
	if (Account.type != 0) {
		List v6 = AccountManagerService.getTypesForCaller(p2, p3, 0);
		List v5 = v6;
		boolean v7 = v5.contains(Account.type);
		boolean v4 = v7;
		if (v4 != 0) {
			long v8 = IAccountManager$Stub.clearCallingIdentity();
			AccountManagerService$UserAccounts v9 = p0.getUserAccounts(v3);
			Map v11 = this.visibilityCache;
			Object v12 = v11.get(p1);
			if (v12 != 0) {
				int v13 = Log.d("AccountManagerService", "Visibility was not initialized");
				HashMap v14 = new HashMap();
				Map v16 = this.visibilityCache;
				Object v17 = v16.put(p1, v14);
				AccountManager.invalidateLocalAccountsDataCaches();
				Map v10 = ;
				IAccountManager$Stub.restoreCallingIdentity(v8);
				return v10;
			}
		}
	}
}
This is path 3 for the API with depth 2:
public Map getPackagesAndVisibilityForAccount(Account p1){
	Object v1 = Objects.requireNonNull(p1, "account cannot be null");
	int v2 = Binder.getCallingUid();
	int v3 = UserHandle.getCallingUserId();
	if (Account.type != 0) {
		List v6 = AccountManagerService.getTypesForCaller(p2, p3, 0);
		List v5 = v6;
		boolean v7 = v5.contains(Account.type);
		boolean v4 = v7;
		if (v4 != 0) {
			boolean v8 = p0.isSystemUid(v2);
			if (v8 == 0) {
				long v9 = IAccountManager$Stub.clearCallingIdentity();
				AccountManagerService$UserAccounts v10 = p0.getUserAccounts(v3);
				Map v12 = this.visibilityCache;
				Object v13 = v12.get(p1);
				if (v13 != 0) {
					Map v11 = ;
					IAccountManager$Stub.restoreCallingIdentity(v9);
					return v11;
				}
			}
		}
	}
}

and the following sink code:
['Object v1 = Objects.requireNonNull(p1, "account cannot be null");\nMap v12 = this.visibilityCache;\nObject v13 = v12.get(p1);\nif (v13 != 0) {\nHashMap v15 = new HashMap();\nMap v17 = this.visibilityCache;\nObject v18 = v17.put(p1, v15);\nAccountManager.invalidateLocalAccountsDataCaches();\nreturn v11;', 'Object v1 = Objects.requireNonNull(p1, "account cannot be null");\nMap v11 = this.visibilityCache;\nObject v12 = v11.get(p1);\nif (v12 != 0) {\nHashMap v14 = new HashMap();\nMap v16 = this.visibilityCache;\nObject v17 = v16.put(p1, v14);\nAccountManager.invalidateLocalAccountsDataCaches();\nreturn v10;', 'Object v1 = Objects.requireNonNull(p1, "account cannot be null");\nMap v12 = this.visibilityCache;\nObject v13 = v12.get(p1);\nif (v13 != 0) {\nMap v11 = ;\nreturn v11;']

The method getPackagesAndVisibilityForAccount has the following similar APIs:

- API Name: getAccountVisibility(Landroid/accounts/Account;Ljava/lang/String;)I with Similarity Score: 0.8533729314804077
  - Access Control Level: SYS_OR_SIG and the following code:
Map v16 = AccountManagerService$UserAccounts.-$$Nest$fgetvisibilityCache(p3);
Object v17 = v16.get(p1);
HashMap v19 = new HashMap();
Map v21 = AccountManagerService$UserAccounts.-$$Nest$fgetvisibilityCache(p3);
Object v22 = v21.put(p1, v19);
AccountManager.invalidateLocalAccountsDataCaches();
Map v15 = ;
Object v24 = v15.get(p2);
int v25 = v24.intValue();
return v14;

- API Name: getAccountVisibility(Landroid/accounts/Account;Ljava/lang/String;)I with Similarity Score: 0.8515024781227112
  - Access Control Level: SYS_OR_SIG and the following code:
Map v16 = AccountManagerService$UserAccounts.-$$Nest$fgetvisibilityCache(p3);
Object v17 = v16.get(p1);
HashMap v19 = new HashMap();
Map v21 = AccountManagerService$UserAccounts.-$$Nest$fgetvisibilityCache(p3);
Object v22 = v21.put(p1, v19);
AccountManager.invalidateLocalAccountsDataCaches();
Map v15 = ;
Object v24 = v15.get(p2);
int v25 = v24.intValue();
return v14;

