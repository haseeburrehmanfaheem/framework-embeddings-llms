The method getPassword has the following code snippet:

This is path 1 for the API with depth 2:
public String getPassword(Account p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = Log.isLoggable("AccountManagerService", 2);
	if (v2 == 0) {
		StringBuilder v3 = new StringBuilder();
		StringBuilder v5 = v3.append("getPassword: ");
		StringBuilder v6 = v3.append(p1);
		StringBuilder v7 = v3.append(", caller's uid ");
		int v8 = Binder.getCallingUid();
		StringBuilder v9 = v3.append(v8);
		StringBuilder v10 = v3.append(", pid ");
		int v11 = Binder.getCallingPid();
		StringBuilder v12 = v3.append(v11);
		String v13 = v3.toString();
		int v14 = Log.v("AccountManagerService", v13);
		if (p1 == 0) {
			int v15 = UserHandle.getCallingUserId();
			if (Account.type != 0) {
				List v18 = AccountManagerService.getTypesForCaller(p2, p3, 0);
				List v17 = v18;
				boolean v19 = v17.contains(Account.type);
				boolean v16 = v19;
				if (v16 == 0) {
					long v20 = IAccountManager$Stub.clearCallingIdentity();
					AccountManagerService$UserAccounts v21 = p0.getUserAccounts(v15);
					if (p1 != 0) {
						int v23 = this.userId;
						boolean v25 = this.mLocalUnlockedUsers.get(v23);
						boolean v24 = v25;
						if (v24 != 0) {
							SQLiteDatabase v27 = this.mDeDatabase.getReadableDatabaseUserIsUnlocked();
							String v28 = new String(2);
							String v29 = new String(1);
							Cursor v30 = v27.query("ceDb.accounts", v29, "name=? AND type=?", v28, 0, 0, 0);
							boolean v31 = v30.moveToNext();
							if (v31 == 0) {
								String v32 = v30.getString(0);
								v30.close();
								String v26 = v32;
								String v22 = v26;
								IAccountManager$Stub.restoreCallingIdentity(v20);
								return v22;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public String getPassword(Account p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = Log.isLoggable("AccountManagerService", 2);
	if (v2 == 0) {
		StringBuilder v3 = new StringBuilder();
		StringBuilder v5 = v3.append("getPassword: ");
		StringBuilder v6 = v3.append(p1);
		StringBuilder v7 = v3.append(", caller's uid ");
		int v8 = Binder.getCallingUid();
		StringBuilder v9 = v3.append(v8);
		StringBuilder v10 = v3.append(", pid ");
		int v11 = Binder.getCallingPid();
		StringBuilder v12 = v3.append(v11);
		String v13 = v3.toString();
		int v14 = Log.v("AccountManagerService", v13);
		if (p1 == 0) {
			int v15 = UserHandle.getCallingUserId();
			if (Account.type != 0) {
				List v18 = AccountManagerService.getTypesForCaller(p2, p3, 0);
				List v17 = v18;
				boolean v19 = v17.contains(Account.type);
				boolean v16 = v19;
				if (v16 == 0) {
					long v20 = IAccountManager$Stub.clearCallingIdentity();
					AccountManagerService$UserAccounts v21 = p0.getUserAccounts(v15);
					if (p1 != 0) {
						int v23 = this.userId;
						boolean v25 = this.mLocalUnlockedUsers.get(v23);
						boolean v24 = v25;
						if (v24 != 0) {
							SQLiteDatabase v27 = this.mDeDatabase.getReadableDatabaseUserIsUnlocked();
							String v28 = new String(2);
							String v29 = new String(1);
							Cursor v30 = v27.query("ceDb.accounts", v29, "name=? AND type=?", v28, 0, 0, 0);
							boolean v31 = v30.moveToNext();
							if (v31 == 0) {
								v30.close();
								String v26 = 0;
								String v22 = v26;
								IAccountManager$Stub.restoreCallingIdentity(v20);
								return v22;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public String getPassword(Account p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = Log.isLoggable("AccountManagerService", 2);
	if (v2 == 0) {
		StringBuilder v3 = new StringBuilder();
		StringBuilder v5 = v3.append("getPassword: ");
		StringBuilder v6 = v3.append(p1);
		StringBuilder v7 = v3.append(", caller's uid ");
		int v8 = Binder.getCallingUid();
		StringBuilder v9 = v3.append(v8);
		StringBuilder v10 = v3.append(", pid ");
		int v11 = Binder.getCallingPid();
		StringBuilder v12 = v3.append(v11);
		String v13 = v3.toString();
		int v14 = Log.v("AccountManagerService", v13);
		if (p1 == 0) {
			int v15 = UserHandle.getCallingUserId();
			if (Account.type != 0) {
				List v18 = AccountManagerService.getTypesForCaller(p2, p3, 0);
				List v17 = v18;
				boolean v19 = v17.contains(Account.type);
				boolean v16 = v19;
				if (v16 == 0) {
					long v20 = IAccountManager$Stub.clearCallingIdentity();
					AccountManagerService$UserAccounts v21 = p0.getUserAccounts(v15);
					if (p1 != 0) {
						int v23 = this.userId;
						boolean v25 = this.mLocalUnlockedUsers.get(v23);
						boolean v24 = v25;
						if (v24 != 0) {
							StringBuilder v26 = new StringBuilder();
							StringBuilder v28 = v26.append("Password is not available - user ");
							int v29 = this.userId;
							StringBuilder v30 = v26.append(v29);
							StringBuilder v31 = v26.append(" data is locked");
							String v32 = v26.toString();
							int v33 = Log.w("AccountManagerService", v32);
							String v22 = 0;
							IAccountManager$Stub.restoreCallingIdentity(v20);
							return v22;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['SQLiteDatabase v27 = this.mDeDatabase.getReadableDatabaseUserIsUnlocked();\nString v28 = new String(2);\nString v29 = new String(1);\nCursor v30 = v27.query("ceDb.accounts", v29, "name=? AND type=?", v28, 0, 0, 0);\nboolean v31 = v30.moveToNext();\nif (v31 == 0) {\nString v32 = v30.getString(0);\nv30.close();\nString v26 = v32;\nString v22 = v26;\nIAccountManager$Stub.restoreCallingIdentity(v20);\nreturn v22;']

The method getPassword has the following similar APIs:

- API Name: getUserData(Landroid/accounts/Account;Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.9013240337371826
  - Access Control Level: SYS_OR_SIG and the following code:
HashMap v21 = new HashMap();
SQLiteDatabase v26 = this.mDeDatabase.getReadableDatabaseUserIsUnlocked();
Cursor v30 = v26.query("ceDb.extras", this.COLUMNS_EXTRAS_KEY_AND_VALUE, "accounts_id=(select _id FROM accounts WHERE name=? AND type=?)", v29, 0, 0, 0);
boolean v31 = v30.moveToNext();
Map v25 = v27;
Object v35 = .get(p2);
String v20 = v35;

- API Name: clearPassword(Landroid/accounts/Account;)V with Similarity Score: 0.8801423907279968
  - Access Control Level: SYS_OR_SIG and the following code:
SQLiteDatabase v24 = this.mDeDatabase.getWritableDatabase();
v24.beginTransaction();
Cursor v30 = v27.query("accounts", v28, "name=? AND type=?", v29, 0, 0, 0);
long v32 = v30.getLong(0);
SQLiteDatabase v35 = this.mDeDatabase.getWritableDatabaseUserIsUnlocked();
ContentValues v36 = new ContentValues();
v36.put("password", p3);
int v41 = v35.update("ceDb.accounts", v36, "_id=?", v39);
SQLiteDatabase v43 = this.mDeDatabase.getWritableDatabaseUserIsUnlocked();
int v46 = v43.delete("ceDb.authtokens", "accounts_id=?", v44);

