The method setOemUnlockAllowedByCarrier has the following code snippet:

This is path 1 for the API with depth 2:
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	int v4 = UserHandle.getCallingUserId();
	long v5 = Binder.clearCallingIdentity();
	UserManager v6 = UserManager.get(this.mContext);
	boolean v7 = v6.isUserAdmin(v4);
	if (v7 == 0) {
		Binder.restoreCallingIdentity(v5);
		long v9 = Binder.clearCallingIdentity();
		OemLock v10 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
		v10.setOemUnlockAllowedByCarrier(p1, p2);
		Binder.restoreCallingIdentity(v9);
		return;
	}
}

and the following sink code:
['OemLock v10 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);\nv10.setOemUnlockAllowedByCarrier(p1, p2);']

The method setOemUnlockAllowedByCarrier has the following similar APIs:

- API Name: isOemUnlockAllowed()Z with Similarity Score: 0.8457191586494446
  - Access Control Level: NONE and the following code:
boolean v4 = v3.isOemUnlockAllowedByCarrier();
if (v4 == 0) {
OemLock v5 = this.mOemLock;
boolean v6 = v5.isOemUnlockAllowedByDevice();

- API Name: isOemUnlockAllowedByUser()Z with Similarity Score: 0.8158924579620361
  - Access Control Level: NONE and the following code:
OemLock v3 = this.mOemLock;
boolean v4 = v3.isOemUnlockAllowedByDevice();
return v4;

