The method setAppExclusionList has the following code snippet:

This is path 1 for the API with depth 2:
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v6 = Binder.clearCallingIdentity();
		UserInfo v7 = this.mUserManager.getUserInfo(this.mUserId);
		boolean v8 = v7.isRestricted();
		if (v8 != 0) {
			Binder.restoreCallingIdentity(v6);
			PersistableBundle v11 = PersistableBundleUtils.fromList(p2, PersistableBundleUtils.STRING_SERIALIZER);
			byte[] v12 = PersistableBundleUtils.toDiskStableBytes(v11);
			long v13 = Binder.clearCallingIdentity();
			VpnProfileStore v14 = Vpn.getVpnProfileStore();
			String v15 = Vpn.getVpnAppExcludedForPackage(p1);
			boolean v16 = v14.put(v15, v12);
			Binder.restoreCallingIdentity(v13);
			boolean v10 = 1;
			if (v10 != 0) {
				if (this.mNetworkAgent == 0) {
					boolean v19 = Vpn.isIkev2VpnRunner();
					if (v19 == 0) {
						List v20 = List.copyOf(p2);
						VpnConfig.disallowedApplications = v20;
						NetworkCapabilities$Builder v21 = new NetworkCapabilities$Builder(this.mNetworkCapabilities);
						Set v23 = Vpn.createUserAndRestrictedProfilesRanges(this.mUserId, 0, p2);
						NetworkCapabilities$Builder v24 = v21.setUids(v23);
						NetworkCapabilities v25 = v24.build();
						this.mNetworkCapabilities = v25;
						Vpn.doSendNetworkCapabilities(this.mNetworkAgent, v25);
						boolean v4 = 1;
						return v4;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v6 = Binder.clearCallingIdentity();
		UserInfo v7 = this.mUserManager.getUserInfo(this.mUserId);
		boolean v8 = v7.isRestricted();
		if (v8 != 0) {
			Binder.restoreCallingIdentity(v6);
			PersistableBundle v11 = PersistableBundleUtils.fromList(p2, PersistableBundleUtils.STRING_SERIALIZER);
			byte[] v12 = PersistableBundleUtils.toDiskStableBytes(v11);
			int v13 = Log.e("Vpn", "problem writing into stream", caughtException);
			boolean v10 = 0;
			if (v10 != 0) {
				if (this.mNetworkAgent == 0) {
					boolean v15 = Vpn.isIkev2VpnRunner();
					if (v15 == 0) {
						List v16 = List.copyOf(p2);
						VpnConfig.disallowedApplications = v16;
						NetworkCapabilities$Builder v17 = new NetworkCapabilities$Builder(this.mNetworkCapabilities);
						Set v19 = Vpn.createUserAndRestrictedProfilesRanges(this.mUserId, 0, p2);
						NetworkCapabilities$Builder v20 = v17.setUids(v19);
						NetworkCapabilities v21 = v20.build();
						this.mNetworkCapabilities = v21;
						Vpn.doSendNetworkCapabilities(this.mNetworkAgent, v21);
						boolean v4 = 1;
						return v4;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mVpns.get(p1);\nPersistableBundle v11 = PersistableBundleUtils.fromList(p2, PersistableBundleUtils.STRING_SERIALIZER);\nbyte[] v12 = PersistableBundleUtils.toDiskStableBytes(v11);\nboolean v16 = v14.put(v15, v12);\nList v20 = List.copyOf(p2); VpnConfig.disallowedApplications = v20;', 'NetworkCapabilities$Builder v21 = new NetworkCapabilities$Builder(this.mNetworkCapabilities);\nSet v23 = Vpn.createUserAndRestrictedProfilesRanges(this.mUserId, 0, p2);\nNetworkCapabilities$Builder v24 = v21.setUids(v23);\nNetworkCapabilities v25 = v24.build();\nthis.mNetworkCapabilities = v25;\nVpn.doSendNetworkCapabilities(this.mNetworkAgent, v25);']

The method setAppExclusionList has the following similar APIs:

- API Name: prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z with Similarity Score: 0.7625094056129456
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mVpns.get(p3);
boolean v12 = Vpn.isCurrentPreparedPackage(p1);
boolean v16 = Vpn.isVpnServicePreConsented(this.mContext, p1);
return v4;

- API Name: getAppExclusionList(ILjava/lang/String;)Ljava/util/List; with Similarity Score: 0.7624078392982483
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mVpns.get(p1);
StringBuilder v8 = new StringBuilder();
StringBuilder v10 = v8.append("VPNAPPEXCLUDED_");
StringBuilder v11 = v8.append(this.mUserId);
StringBuilder v12 = v8.append("_");
StringBuilder v13 = v8.append(p1);
String v14 = v8.toString();
byte[] v16 = LegacyVpnProfileStore.get(v7);

