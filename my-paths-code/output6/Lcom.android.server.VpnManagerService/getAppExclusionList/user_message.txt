This is path 1 for the API with depth 2:
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v5 = Binder.clearCallingIdentity();
		VpnProfileStore v6 = this.mVpnProfileStore;
		StringBuilder v8 = new StringBuilder();
		StringBuilder v10 = v8.append("VPNAPPEXCLUDED_");
		StringBuilder v11 = v8.append(this.mUserId);
		StringBuilder v12 = v8.append("_");
		StringBuilder v13 = v8.append(p1);
		String v14 = v8.toString();
		String v7 = v14;
		byte[] v16 = LegacyVpnProfileStore.get(v7);
		byte[] v15 = v16;
		if (v15 == 0) {
			if (v15.length != 0) {
				ArrayList v17 = new ArrayList();
				int v19 = Log.e("Vpn", "problem reading from stream", caughtException);
				Binder.restoreCallingIdentity(v5);
				ArrayList v21 = new ArrayList();
				List v4 = v21;
				return v4;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v5 = Binder.clearCallingIdentity();
		VpnProfileStore v6 = this.mVpnProfileStore;
		StringBuilder v8 = new StringBuilder();
		StringBuilder v10 = v8.append("VPNAPPEXCLUDED_");
		StringBuilder v11 = v8.append(this.mUserId);
		StringBuilder v12 = v8.append("_");
		StringBuilder v13 = v8.append(p1);
		String v14 = v8.toString();
		String v7 = v14;
		byte[] v16 = LegacyVpnProfileStore.get(v7);
		byte[] v15 = v16;
		if (v15 == 0) {
			if (v15.length != 0) {
				ArrayList v17 = new ArrayList;
				int v18 = Log.e("Vpn", "problem reading from stream", caughtException);
				Binder.restoreCallingIdentity(v5);
				ArrayList v20 = new ArrayList();
				List v4 = v20;
				return v4;
			}
		}
	}
}
