The method stopVpnProfile has the following code snippet:

This is path 1 for the API with depth 2:
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, "No package name provided");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	if (v12 != 0) {
		Binder.restoreCallingIdentity(v10);
		boolean v15 = Vpn.isCurrentPreparedPackage(p1);
		if (v15 == 0) {
			boolean v16 = Vpn.isIkev2VpnRunner();
			if (v16 == 0) {
				boolean v14 = ;
				if (v14 == 0) {
					boolean v18 = SdkLevel.isAtLeastT();
					if (v18 == 0) {
						boolean v19 = Vpn.isVpnApp(p1);
						if (v19 == 0) {
							String v20 = Vpn.getSessionKeyLocked();
							VpnProfileState v21 = Vpn.makeVpnProfileStateLocked();
							Intent v22 = Vpn.buildVpnManagerEventIntent("android.net.category.EVENT_DEACTIVATED_BY_USER", -1, -1, p1, v20, v21, 0, 0, 0);
							this.mVpnRunner.exit();
							if ( == 0) {
								boolean v24 = Vpn.isVpnApp(p1);
								if (v24 == 0) {
									Vpn.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, );
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, "No package name provided");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	if (v12 != 0) {
		Binder.restoreCallingIdentity(v10);
		boolean v15 = Vpn.isCurrentPreparedPackage(p1);
		if (v15 == 0) {
			boolean v16 = Vpn.isIkev2VpnRunner();
			if (v16 == 0) {
				boolean v14 = ;
				if (v14 == 0) {
					boolean v18 = SdkLevel.isAtLeastT();
					if (v18 == 0) {
						boolean v19 = Vpn.isVpnApp(p1);
						if (v19 == 0) {
							String v20 = Vpn.getSessionKeyLocked();
							VpnProfileState v21 = Vpn.makeVpnProfileStateLocked();
							Intent v22 = Vpn.buildVpnManagerEventIntent("android.net.category.EVENT_DEACTIVATED_BY_USER", -1, -1, p1, v20, v21, 0, 0, 0);
							this.mVpnRunner.exit();
							if ( == 0) {
								boolean v24 = Vpn.isVpnApp(p1);
								if (v24 == 0) {
									Vpn.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, );
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v15 = Vpn.isCurrentPreparedPackage(p1);\nString v20 = Vpn.getSessionKeyLocked();\nVpnProfileState v21 = Vpn.makeVpnProfileStateLocked();\nIntent v22 = Vpn.buildVpnManagerEventIntent("android.net.category.EVENT_DEACTIVATED_BY_USER", -1, -1, p1, v20, v21, 0, 0, 0);\nthis.mVpnRunner.exit();\nVpn.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, /* missing argument */ );']

The method stopVpnProfile has the following similar APIs:

- API Name: establishVpn(Lcom/android/internal/net/VpnConfig;)Landroid/os/ParcelFileDescriptor; with Similarity Score: 0.7859001755714417
  - Access Control Level: NONE and the following code:
Object v5 = this.mVpns.get(v3);
boolean v9 = Vpn.doesPackageHaveAppop(this.mContext, this.mPackage, "android:activate_vpn");
ParcelFileDescriptor v6 = 0;
return v6;

- API Name: setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z with Similarity Score: 0.7855563759803772
  - Access Control Level: SYS_OR_SIG and the following code:
Intent v43 = Vpn.buildVpnManagerEventIntent("android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED", -1, -1, this.mPackage, 0, , 0, 0, 0);
boolean v44 = Vpn.sendEventToVpnManagerApp(v43, this.mPackage);

