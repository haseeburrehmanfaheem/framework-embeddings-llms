This is path 1 for the API with depth 2:
public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	if (v8 == 0) {
		boolean v7 = ;
		if (v7 != 0) {
			boolean v9 = Vpn.jniAddAddress(this.mInterface, p1, p2);
			LinkProperties v10 = Vpn.makeLinkProperties();
			if (this.mNetworkAgent instanceof Vpn$VpnNetworkAgentWrapper == 0) {
				this.mNetworkAgent.doSendLinkProperties(v10);
				boolean v6 = v9;
				return v6;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	if (v8 == 0) {
		boolean v7 = ;
		if (v7 != 0) {
			boolean v9 = Vpn.jniAddAddress(this.mInterface, p1, p2);
			LinkProperties v10 = Vpn.makeLinkProperties();
			if (this.mNetworkAgent instanceof Vpn$VpnNetworkAgentWrapper == 0) {
				this.mNetworkAgent.sendLinkProperties(v10);
				boolean v6 = v9;
				return v6;
			}
		}
	}
}

This is path 3 for the API with depth 2:
public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	if (v8 == 0) {
		boolean v7 = ;
		if (v7 != 0) {
			boolean v6 = 0;
			return v6;
		}
	}
}
