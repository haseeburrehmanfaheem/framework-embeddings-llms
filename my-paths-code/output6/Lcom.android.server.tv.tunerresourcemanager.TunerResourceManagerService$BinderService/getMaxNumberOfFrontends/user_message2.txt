The method getMaxNumberOfFrontends has the following code snippet:

This is path 1 for the API with depth 2:
public int getMaxNumberOfFrontends(int p1){
	Object v3 = this.mLock;
	int v6 = this.mFrontendExistingNums.get(p2, -1);
	if (v6 != -1) {
		StringBuilder v7 = new StringBuilder();
		StringBuilder v9 = v7.append("existingNum is -1 for ");
		StringBuilder v10 = v7.append(p2);
		String v11 = v7.toString();
		int v12 = Log.e("TunerResourceManagerService", v11);
		int v5 = -1;
		int v4 = v5;
		return v4;
	}
}
This is path 2 for the API with depth 2:
public int getMaxNumberOfFrontends(int p1){
	Object v3 = this.mLock;
	int v6 = this.mFrontendExistingNums.get(p2, -1);
	if (v6 != -1) {
		int v7 = this.mFrontendMaxUsableNums.get(p2, -1);
		if (v7 != -1) {
			int v5 = v6;
			int v4 = v5;
			return v4;
		}
	}
}
This is path 3 for the API with depth 2:
public int getMaxNumberOfFrontends(int p1){
	Object v3 = this.mLock;
	int v6 = this.mFrontendExistingNums.get(p2, -1);
	if (v6 != -1) {
		int v7 = this.mFrontendMaxUsableNums.get(p2, -1);
		if (v7 != -1) {
			int v5 = v7;
			int v4 = v5;
			return v4;
		}
	}
}

and the following sink code:
['int v6 = this.mFrontendExistingNums.get(p2, -1);\nint v7 = this.mFrontendMaxUsableNums.get(p2, -1);\nint v5 = v7;\nint v4 = v5;\nreturn v4;', 'int v6 = this.mFrontendExistingNums.get(p2, -1);\nint v7 = this.mFrontendMaxUsableNums.get(p2, -1);\nint v5 = v6;\nint v4 = v5;\nreturn v4;']

The method getMaxNumberOfFrontends has the following similar APIs:

- API Name: setMaxNumberOfFrontends(II)Z with Similarity Score: 0.8855115175247192
  - Access Control Level: NONE and the following code:
int v6 = this.mFrontendUsedNums.get(p2, -1);
this.mFrontendMaxUsableNums.put(p2, p1);

- API Name: setMaxNumberOfFrontends(II)Z with Similarity Score: 0.8838128447532654
  - Access Control Level: NONE and the following code:
int v6 = this.mFrontendUsedNums.get(p2, -1);
this.mFrontendMaxUsableNums.put(p2, p1);

