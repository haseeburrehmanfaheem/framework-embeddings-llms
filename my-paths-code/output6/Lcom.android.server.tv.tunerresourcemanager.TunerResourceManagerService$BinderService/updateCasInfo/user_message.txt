This is path 1 for the API with depth 2:
public void updateCasInfo(int p1, int p2){
	Object v2 = this.mLock;
	if (this.DEBUG == 0) {
		if (p2 != 0) {
			Integer v14 = Integer.valueOf(p1);
			Object v15 = this.mCasResources.get(v14);
			CasResource v13 = v15;
			Integer v17 = Integer.valueOf(p1);
			Object v18 = this.mCiCamResources.get(v17);
			CiCamResource v16 = v18;
			if (v13 == 0) {
				CasResource$Builder v19 = new CasResource$Builder(p1);
				this.mMaxSessionNum = p2;
				CasResource$Builder v21 = CasResource$Builder;
				CasResource v23 = new CasResource(CasResource$Builder);
				CasResource v22 = v23;
				CiCamResource$Builder v25 = new CiCamResource$Builder(p1);
				CasResource$Builder.mMaxSessionNum = p2;
				CiCamResource$Builder v27 = CiCamResource$Builder;
				CiCamResource v29 = new CiCamResource(CiCamResource$Builder,0);
				CiCamResource v28 = v29;
				int v32 = v22.getSystemId();
				Integer v33 = Integer.valueOf(v32);
				Object v34 = this.mCasResources.put(v33, v22);
				int v36 = v28.getCiCamId();
				Integer v37 = Integer.valueOf(v36);
				Object v38 = this.mCiCamResources.put(v37, v28);
				return;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void updateCasInfo(int p1, int p2){
	Object v2 = this.mLock;
	if (this.DEBUG == 0) {
		if (p2 != 0) {
			Integer v14 = Integer.valueOf(p1);
			Object v15 = this.mCasResources.get(v14);
			CasResource v13 = v15;
			Integer v17 = Integer.valueOf(p1);
			Object v18 = this.mCiCamResources.get(v17);
			CiCamResource v16 = v18;
			if (v13 == 0) {
				int v19 = (this.mMaxSessionNum - this.mAvailableSessionNum);
				if (v19 <= p2) {
					int v20 = (this.mMaxSessionNum - this.mAvailableSessionNum);
					int v22 = Math.max(0, (this.mAvailableSessionNum + (p2 - this.mMaxSessionNum)));
					this.mAvailableSessionNum = v22;
					this.mMaxSessionNum = p2;
					if (v16 == 0) {
						int v24 = Math.max(0, (this.mAvailableSessionNum + (p2 - this.mMaxSessionNum)));
						this.mAvailableSessionNum = v24;
						this.mMaxSessionNum = p2;
						return;
					}
				}
			}
		}
	}
}
