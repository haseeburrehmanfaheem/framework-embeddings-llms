This is path 1 for the API with depth 2:
public boolean isLowestPriority(int p1, int p2){
	Object v2 = this.mLock;
	Set v4 = this.mClientProfiles.keySet();
	Integer v5 = Integer.valueOf(p1);
	boolean v6 = v4.contains(v5);
	boolean v3 = v6;
	if (v3 == 0) {
		Integer v9 = Integer.valueOf(p1);
		Object v10 = this.mClientProfiles.get(v9);
		ClientProfile v8 = v10;
		if (v8 != 0) {
			boolean v12 = v8.isPriorityOverwritten();
			if (v12 == 0) {
				int v13 = v8.getProcessId();
				boolean v14 = TunerResourceManagerService.checkIsForeground(v13);
				int v15 = v8.getUseCase();
				int v16 = TunerResourceManagerService.getClientPriority(v15, v14);
				v8.setPriority(v16);
				int v18 = (this.mPriority - this.mNiceValue);
				Map v19 = this.mFrontendResources;
				Collection v20 = v19.values();
				Iterator v21 = v20.iterator();
				boolean v22 = v21.hasNext();
				if (v22 == 0) {
					Object v23 = v21.next();
					int v24 = this.mType;
					if (v24 != p2) {
						boolean v25 = this.mIsInUse;
						if (v25 == 0) {
							int v26 = this.mOwnerClientId;
							ClientProfile v28 = TunerResourceManagerService.getClientProfile(v26);
							TunerResourceManagerService.clientPriorityUpdateOnRequest(v28);
							int v30 = v28.getPriority();
							int v27 = v30;
							if (v18 <= v27) {
								boolean v7 = 0;
								return v7;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public boolean isLowestPriority(int p1, int p2){
	Object v2 = this.mLock;
	Set v4 = this.mClientProfiles.keySet();
	Integer v5 = Integer.valueOf(p1);
	boolean v6 = v4.contains(v5);
	boolean v3 = v6;
	if (v3 == 0) {
		Integer v9 = Integer.valueOf(p1);
		Object v10 = this.mClientProfiles.get(v9);
		ClientProfile v8 = v10;
		if (v8 != 0) {
			boolean v12 = v8.isPriorityOverwritten();
			if (v12 == 0) {
				int v13 = (this.mPriority - this.mNiceValue);
				Map v14 = this.mFrontendResources;
				Collection v15 = v14.values();
				Iterator v16 = v15.iterator();
				boolean v17 = v16.hasNext();
				if (v17 == 0) {
					Object v18 = v16.next();
					int v19 = this.mType;
					if (v19 != p2) {
						boolean v20 = this.mIsInUse;
						if (v20 == 0) {
							int v21 = this.mOwnerClientId;
							ClientProfile v23 = TunerResourceManagerService.getClientProfile(v21);
							TunerResourceManagerService.clientPriorityUpdateOnRequest(v23);
							int v25 = v23.getPriority();
							int v22 = v25;
							if (v13 <= v22) {
								boolean v7 = 0;
								return v7;
							}
						}
					}
				}
			}
		}
	}
}
