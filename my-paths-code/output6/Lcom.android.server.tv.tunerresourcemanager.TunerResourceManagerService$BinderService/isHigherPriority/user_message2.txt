The method isHigherPriority has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isHigherPriority(ResourceClientProfile p1, ResourceClientProfile p2){
	if (p1 == 0) {
		if (p2 == 0) {
			Object v2 = this.mLock;
			if (this.DEBUG == 0) {
				if (this.mTvInputManager != 0) {
					if (ResourceClientProfile.tvInputSessionId != 0) {
						int v13 = Binder.getCallingPid();
						if (ResourceClientProfile.tvInputSessionId != 0) {
							int v15 = TvInputManager.getClientPidInternal(ResourceClientProfile.tvInputSessionId);
							int v14 = v15;
							Iterator v18 = v17.iterator();
							boolean v19 = v18.hasNext();
							if (v19 == 0) {
								Object v20 = v18.next();
								if (ActivityManager$RunningAppProcessInfo.pid != ) {
									if (ActivityManager$RunningAppProcessInfo.importance != 100) {
										boolean v16 = 1;
										if (this.DEBUG == 0) {
											if (v16 == 0) {
												int v31 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);
												int v21 = v31;
												Iterator v34 = v33.iterator();
												boolean v35 = v34.hasNext();
												if (v35 == 0) {
													Object v36 = v34.next();
													if (ActivityManager$RunningAppProcessInfo.pid != ) {
														if (ActivityManager$RunningAppProcessInfo.importance != 100) {
															boolean v32 = 1;
															if (this.DEBUG == 0) {
																if (v32 == 0) {
																	int v47 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);
																	int v37 = v47;
																	if (v21 <= v37) {
																		boolean v3 = ;
																		return v3;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isHigherPriority(ResourceClientProfile p1, ResourceClientProfile p2){
	if (p1 == 0) {
		if (p2 == 0) {
			Object v2 = this.mLock;
			if (this.DEBUG == 0) {
				if (this.mTvInputManager != 0) {
					if (ResourceClientProfile.tvInputSessionId != 0) {
						int v13 = Binder.getCallingPid();
						if (ResourceClientProfile.tvInputSessionId != 0) {
							int v15 = TvInputManager.getClientPidInternal(ResourceClientProfile.tvInputSessionId);
							int v14 = v15;
							Iterator v18 = v17.iterator();
							boolean v19 = v18.hasNext();
							if (v19 == 0) {
								Object v20 = v18.next();
								if (ActivityManager$RunningAppProcessInfo.pid != ) {
									if (ActivityManager$RunningAppProcessInfo.importance != 100) {
										boolean v16 = 1;
										if (this.DEBUG == 0) {
											if (v16 == 0) {
												int v31 = this.mPriorityCongfig.getBackgroundPriority(ResourceClientProfile.useCase);
												int v21 = v31;
												Iterator v34 = v33.iterator();
												boolean v35 = v34.hasNext();
												if (v35 == 0) {
													Object v36 = v34.next();
													if (ActivityManager$RunningAppProcessInfo.pid != ) {
														if (ActivityManager$RunningAppProcessInfo.importance != 100) {
															boolean v32 = 1;
															if (this.DEBUG == 0) {
																if (v32 == 0) {
																	int v47 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);
																	int v37 = v47;
																	if (v21 <= v37) {
																		boolean v3 = ;
																		return v3;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v13 = Binder.getCallingPid();\nint v15 = TvInputManager.getClientPidInternal(ResourceClientProfile.tvInputSessionId);', 'int v31 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);\nint v47 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);']

The method isHigherPriority has the following similar APIs:

- API Name: isParentalControlsEnabled(I)Z with Similarity Score: 0.7664570808410645
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingPid();
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v11);
PersistentDataStore v14 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8);
boolean v15 = this.mParentalControlsEnabled;
return v15;

- API Name: isParentalControlsEnabled(I)Z with Similarity Score: 0.7648454308509827
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingPid();
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
PersistentDataStore v11 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8);
boolean v12 = this.mParentalControlsEnabled;
return v12;

