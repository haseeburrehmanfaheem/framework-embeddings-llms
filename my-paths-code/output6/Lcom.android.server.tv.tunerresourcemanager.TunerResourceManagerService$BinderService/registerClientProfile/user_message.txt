This is path 1 for the API with depth 2:
public void registerClientProfile(ResourceClientProfile p1, IResourcesReclaimListener p2, [I p3){
	if (p1 == 0) {
		if (p3 == 0) {
			if (p2 == 0) {
				UseCasePriorityHints v3 = this.mPriorityCongfig;
				Integer v5 = Integer.valueOf(ResourceClientProfile.useCase);
				boolean v6 = this.mVendorDefinedUseCase.contains(v5);
				if (v6 != 0) {
					boolean v7 = UseCasePriorityHints.isPredefinedUseCase(ResourceClientProfile.useCase);
					if (v7 == 0) {
						boolean v4 = ;
						if (v4 == 0) {
							Object v8 = this.mLock;
							if (this.DEBUG == 0) {
								if (this.mTvInputManager != 0) {
									this.mNextUnusedClientId = (this.mNextUnusedClientId + 1);
									if (ResourceClientProfile.tvInputSessionId != 0) {
										int v18 = TvInputManager.getClientPidInternal(ResourceClientProfile.tvInputSessionId);
										int v17 = v18;
										if (ResourceClientProfile.tvInputSessionId == 0) {
											if (this.mMediaResourceManager == 0) {
												int v19 = Binder.getCallingPid();
												this.mMediaResourceManager.overridePid(v19, );
												ClientProfile$Builder v21 = new ClientProfile$Builder(p3[0]);
												this.mTvInputSessionId = ResourceClientProfile.tvInputSessionId;
												ClientProfile$Builder v23 = ClientProfile$Builder;
												this.mUseCase = ResourceClientProfile.useCase;
												ClientProfile$Builder v24 = ClientProfile$Builder;
												this.mProcessId = ;
												ClientProfile$Builder v25 = ClientProfile$Builder;
												ClientProfile v27 = new ClientProfile(ClientProfile$Builder,0);
												ClientProfile v26 = v27;
												Iterator v31 = v30.iterator();
												boolean v32 = v31.hasNext();
												if (v32 == 0) {
													Object v33 = v31.next();
													if (ActivityManager$RunningAppProcessInfo.pid != ) {
														if (ActivityManager$RunningAppProcessInfo.importance != 100) {
															boolean v29 = 1;
															if (this.DEBUG == 0) {
																if (v29 == 0) {
																	int v44 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);
																	int v34 = v44;
																	if (v34 >= 0) {
																		this.mPriority = v34;
																		Integer v47 = Integer.valueOf(p3[0]);
																		Object v48 = this.mClientProfiles.put(v47, v26);
																		TunerResourceManagerService.addResourcesReclaimListener(p3[0], p2);
																		return;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void registerClientProfile(ResourceClientProfile p1, IResourcesReclaimListener p2, [I p3){
	if (p1 == 0) {
		if (p3 == 0) {
			if (p2 == 0) {
				UseCasePriorityHints v3 = this.mPriorityCongfig;
				Integer v5 = Integer.valueOf(ResourceClientProfile.useCase);
				boolean v6 = this.mVendorDefinedUseCase.contains(v5);
				if (v6 != 0) {
					boolean v7 = UseCasePriorityHints.isPredefinedUseCase(ResourceClientProfile.useCase);
					if (v7 == 0) {
						boolean v4 = ;
						if (v4 == 0) {
							Object v8 = this.mLock;
							if (this.DEBUG == 0) {
								if (this.mTvInputManager != 0) {
									this.mNextUnusedClientId = (this.mNextUnusedClientId + 1);
									if (ResourceClientProfile.tvInputSessionId != 0) {
										int v18 = TvInputManager.getClientPidInternal(ResourceClientProfile.tvInputSessionId);
										int v17 = v18;
										if (ResourceClientProfile.tvInputSessionId == 0) {
											if (this.mMediaResourceManager == 0) {
												int v19 = Binder.getCallingPid();
												this.mMediaResourceManager.overridePid(v19, );
												ClientProfile$Builder v21 = new ClientProfile$Builder(p3[0]);
												this.mTvInputSessionId = ResourceClientProfile.tvInputSessionId;
												ClientProfile$Builder v23 = ClientProfile$Builder;
												this.mUseCase = ResourceClientProfile.useCase;
												ClientProfile$Builder v24 = ClientProfile$Builder;
												this.mProcessId = ;
												ClientProfile$Builder v25 = ClientProfile$Builder;
												ClientProfile v27 = new ClientProfile(ClientProfile$Builder,0);
												ClientProfile v26 = v27;
												Iterator v31 = v30.iterator();
												boolean v32 = v31.hasNext();
												if (v32 == 0) {
													Object v33 = v31.next();
													if (ActivityManager$RunningAppProcessInfo.pid != ) {
														if (ActivityManager$RunningAppProcessInfo.importance != 100) {
															boolean v29 = 1;
															if (this.DEBUG == 0) {
																if (v29 == 0) {
																	int v44 = this.mPriorityCongfig.getForegroundPriority(ResourceClientProfile.useCase);
																	int v34 = v44;
																	if (v34 >= 0) {
																		this.mPriority = v34;
																		Integer v47 = Integer.valueOf(p3[0]);
																		Object v48 = this.mClientProfiles.put(v47, v26);
																		TunerResourceManagerService.addResourcesReclaimListener(p3[0], p2);
																		return;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void registerClientProfile(ResourceClientProfile p1, IResourcesReclaimListener p2, [I p3){
	if (p1 == 0) {
		if (p3 == 0) {
			if (p2 == 0) {
				UseCasePriorityHints v3 = this.mPriorityCongfig;
				Integer v5 = Integer.valueOf(ResourceClientProfile.useCase);
				boolean v6 = this.mVendorDefinedUseCase.contains(v5);
				if (v6 != 0) {
					boolean v7 = UseCasePriorityHints.isPredefinedUseCase(ResourceClientProfile.useCase);
					if (v7 == 0) {
						boolean v4 = ;
						if (v4 == 0) {
							Object v8 = this.mLock;
							if (this.DEBUG == 0) {
								if (this.mTvInputManager != 0) {
									this.mNextUnusedClientId = (this.mNextUnusedClientId + 1);
									if (ResourceClientProfile.tvInputSessionId != 0) {
										int v18 = TvInputManager.getClientPidInternal(ResourceClientProfile.tvInputSessionId);
										int v17 = v18;
										if (ResourceClientProfile.tvInputSessionId == 0) {
											if (this.mMediaResourceManager == 0) {
												int v19 = Binder.getCallingPid();
												this.mMediaResourceManager.overridePid(v19, );
												ClientProfile$Builder v21 = new ClientProfile$Builder(p3[0]);
												this.mTvInputSessionId = ResourceClientProfile.tvInputSessionId;
												ClientProfile$Builder v23 = ClientProfile$Builder;
												this.mUseCase = ResourceClientProfile.useCase;
												ClientProfile$Builder v24 = ClientProfile$Builder;
												this.mProcessId = ;
												ClientProfile$Builder v25 = ClientProfile$Builder;
												ClientProfile v27 = new ClientProfile(ClientProfile$Builder,0);
												ClientProfile v26 = v27;
												Iterator v31 = v30.iterator();
												boolean v32 = v31.hasNext();
												if (v32 == 0) {
													Object v33 = v31.next();
													if (ActivityManager$RunningAppProcessInfo.pid != ) {
														if (ActivityManager$RunningAppProcessInfo.importance != 100) {
															boolean v29 = 1;
															if (this.DEBUG == 0) {
																if (v29 == 0) {
																	int v44 = this.mPriorityCongfig.getBackgroundPriority(ResourceClientProfile.useCase);
																	int v34 = v44;
																	if (v34 >= 0) {
																		this.mPriority = v34;
																		Integer v47 = Integer.valueOf(p3[0]);
																		Object v48 = this.mClientProfiles.put(v47, v26);
																		TunerResourceManagerService.addResourcesReclaimListener(p3[0], p2);
																		return;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
