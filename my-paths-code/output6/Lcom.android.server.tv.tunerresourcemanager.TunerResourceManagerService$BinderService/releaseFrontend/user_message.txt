This is path 1 for the API with depth 2:
public void releaseFrontend(int p1, int p2){
	if (p3 == -1) {
		if (((-16777216 & p3) >> 24) == p2) {
			boolean v4 = 0;
			boolean v3 = v4;
			if (v3 == 0) {
				Object v5 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
				boolean v6 = this.this$0.checkClientExists(p2);
				if (v6 == 0) {
					FrontendResource v7 = this.this$0.getFrontendResource(p1);
					if (v7 == 0) {
						int v8 = v7.getOwnerClientId();
						ClientProfile v9 = this.this$0.getClientProfile(v8);
						if (v8 == p2) {
							if (v9 == 0) {
								Set v10 = v9.getShareFeClientIds();
								Integer v11 = Integer.valueOf(p2);
								boolean v12 = v10.contains(v11);
								if (v12 == 0) {
									if (this.DEBUG == 0) {
										int v17 = this.mHandle;
										int v24 = this.mOwnerClientId;
										if (p2 != v24) {
											int v25 = this.mOwnerClientId;
											Integer v27 = Integer.valueOf(v25);
											Object v28 = this.mClientProfiles.get(v27);
											ClientProfile v26 = v28;
											if (v26 == 0) {
												Set v29 = this.mShareFeClientIds;
												Iterator v30 = v29.iterator();
												boolean v31 = v30.hasNext();
												if (v31 == 0) {
													Integer v33 = Integer.valueOf(p2);
													Object v34 = this.mClientProfiles.get(v33);
													ClientProfile v32 = v34;
													if (v32 != 0) {
														Set v36 = v32.getInUseFrontendHandles();
														Iterator v37 = v36.iterator();
														boolean v38 = v37.hasNext();
														if (v38 == 0) {
															int v39 = v32.getPrimaryFrontend();
															if (v39 == -1) {
																FrontendResource v40 = TunerResourceManagerService.getFrontendResource(v39);
																if (v40 == 0) {
																	int v41 = v40.getType();
																	TunerResourceManagerService.decreFrontendNum(this.mFrontendUsedNums, v41);
																	v32.releaseFrontend();
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void releaseFrontend(int p1, int p2){
	if (p3 == -1) {
		if (((-16777216 & p3) >> 24) == p2) {
			boolean v4 = 0;
			boolean v3 = v4;
			if (v3 == 0) {
				Object v5 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
				boolean v6 = this.this$0.checkClientExists(p2);
				if (v6 == 0) {
					FrontendResource v7 = this.this$0.getFrontendResource(p1);
					if (v7 == 0) {
						int v8 = v7.getOwnerClientId();
						ClientProfile v9 = this.this$0.getClientProfile(v8);
						if (v8 == p2) {
							if (v9 == 0) {
								Set v10 = v9.getShareFeClientIds();
								Integer v11 = Integer.valueOf(p2);
								boolean v12 = v10.contains(v11);
								if (v12 == 0) {
									if (this.DEBUG == 0) {
										int v17 = this.mHandle;
										int v24 = this.mOwnerClientId;
										if (p2 != v24) {
											int v25 = this.mOwnerClientId;
											Integer v27 = Integer.valueOf(v25);
											Object v28 = this.mClientProfiles.get(v27);
											ClientProfile v26 = v28;
											if (v26 == 0) {
												Set v29 = this.mShareFeClientIds;
												Iterator v30 = v29.iterator();
												boolean v31 = v30.hasNext();
												if (v31 == 0) {
													Integer v33 = Integer.valueOf(p2);
													Object v34 = this.mClientProfiles.get(v33);
													ClientProfile v32 = v34;
													if (v32 != 0) {
														Set v36 = v32.getInUseFrontendHandles();
														Iterator v37 = v36.iterator();
														boolean v38 = v37.hasNext();
														if (v38 == 0) {
															int v39 = v32.getPrimaryFrontend();
															if (v39 == -1) {
																FrontendResource v40 = TunerResourceManagerService.getFrontendResource(v39);
																if (v40 == 0) {
																	v32.releaseFrontend();
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void releaseFrontend(int p1, int p2){
	if (p3 == -1) {
		if (((-16777216 & p3) >> 24) == p2) {
			boolean v4 = 0;
			boolean v3 = v4;
			if (v3 == 0) {
				Object v5 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
				boolean v6 = this.this$0.checkClientExists(p2);
				if (v6 == 0) {
					FrontendResource v7 = this.this$0.getFrontendResource(p1);
					if (v7 == 0) {
						int v8 = v7.getOwnerClientId();
						ClientProfile v9 = this.this$0.getClientProfile(v8);
						if (v8 == p2) {
							if (v9 == 0) {
								if (this.DEBUG == 0) {
									int v14 = this.mHandle;
									int v21 = this.mOwnerClientId;
									if (p2 != v21) {
										int v22 = this.mOwnerClientId;
										Integer v24 = Integer.valueOf(v22);
										Object v25 = this.mClientProfiles.get(v24);
										ClientProfile v23 = v25;
										if (v23 == 0) {
											Set v26 = this.mShareFeClientIds;
											Iterator v27 = v26.iterator();
											boolean v28 = v27.hasNext();
											if (v28 == 0) {
												Integer v30 = Integer.valueOf(p2);
												Object v31 = this.mClientProfiles.get(v30);
												ClientProfile v29 = v31;
												if (v29 != 0) {
													Set v33 = v29.getInUseFrontendHandles();
													Iterator v34 = v33.iterator();
													boolean v35 = v34.hasNext();
													if (v35 == 0) {
														int v36 = v29.getPrimaryFrontend();
														if (v36 == -1) {
															FrontendResource v37 = TunerResourceManagerService.getFrontendResource(v36);
															if (v37 == 0) {
																int v38 = v37.getType();
																TunerResourceManagerService.decreFrontendNum(this.mFrontendUsedNums, v38);
																v29.releaseFrontend();
																return;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
