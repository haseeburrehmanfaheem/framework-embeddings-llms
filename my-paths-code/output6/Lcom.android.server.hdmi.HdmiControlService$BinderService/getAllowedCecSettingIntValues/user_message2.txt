The method getAllowedCecSettingIntValues has the following code snippet:

This is path 1 for the API with depth 2:
public [I getAllowedCecSettingIntValues(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
			String v13 = v12.getStringValue();
			if (v13 == 0) {
				String v11 = ;
				boolean v14 = v11.equals("int");
				if (v14 == 0) {
					ArrayList v15 = new ArrayList();
					List v17 = this.mAllowedValues;
					Iterator v18 = v17.iterator();
					boolean v19 = v18.hasNext();
					if (v19 == 0) {
						List v7 = v15;
						Stream v20 = v7.stream();
						HdmiControlService$BinderService$$ExternalSyntheticLambda0 v21 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();
						IntStream v23 = v20.mapToInt(v21);
						[I v24 = v23.toArray();
						Binder.restoreCallingIdentity(v5);
						return v24;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public [I getAllowedCecSettingIntValues(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
			String v13 = v12.getStringValue();
			if (v13 == 0) {
				String v11 = ;
				boolean v14 = v11.equals("int");
				if (v14 == 0) {
					ArrayList v15 = new ArrayList();
					List v17 = this.mAllowedValues;
					Iterator v18 = v17.iterator();
					boolean v19 = v18.hasNext();
					if (v19 == 0) {
						List v7 = v15;
						Stream v20 = v7.stream();
						HdmiControlService$BinderService$$ExternalSyntheticLambda0 v21 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();
						IntStream v23 = v20.mapToInt(v21);
						[I v24 = v23.toArray();
						Binder.restoreCallingIdentity(v5);
						return v24;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public [I getAllowedCecSettingIntValues(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v11 = HdmiCecConfig$Setting.getDefaultValue();
			String v12 = v11.getStringValue();
			if (v12 == 0) {
				String v10 = ;
				boolean v13 = v10.equals("int");
				if (v13 == 0) {
					ArrayList v14 = new ArrayList();
					List v16 = this.mAllowedValues;
					Iterator v17 = v16.iterator();
					boolean v18 = v17.hasNext();
					if (v18 == 0) {
						List v7 = v14;
						Stream v19 = v7.stream();
						HdmiControlService$BinderService$$ExternalSyntheticLambda0 v20 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();
						IntStream v22 = v19.mapToInt(v20);
						[I v23 = v22.toArray();
						Binder.restoreCallingIdentity(v5);
						return v23;
					}
				}
			}
		}
	}
}

and the following sink code:
['List v17 = this.mAllowedValues;\nIterator v18 = v17.iterator();\nboolean v19 = v18.hasNext();\nif (v19 == 0) {\nArrayList v15 = new ArrayList();\nList v7 = v15;\nStream v20 = v7.stream();\nHdmiControlService$BinderService$$ExternalSyntheticLambda0 v21 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();\nIntStream v23 = v20.mapToInt(v21);\n[I v24 = v23.toArray();\nreturn v24;']

The method getAllowedCecSettingIntValues has the following similar APIs:

- API Name: getAllowedCecSettingStringValues(Ljava/lang/String;)Ljava/util/List; with Similarity Score: 0.8671354055404663
  - Access Control Level: NONE and the following code:
ArrayList v15 = new ArrayList();
List v17 = this.mAllowedValues;
Iterator v18 = v17.iterator();
boolean v19 = v18.hasNext();
if (v19 == 0) { List v7 = v15; return v7; }

