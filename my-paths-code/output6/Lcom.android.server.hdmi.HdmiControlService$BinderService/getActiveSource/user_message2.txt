The method getActiveSource has the following code snippet:

This is path 1 for the API with depth 2:
public HdmiDeviceInfo getActiveSource(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4);
	HdmiCecLocalDevicePlayback v6 = v7;
	if (v6 == 0) {
		HdmiCecLocalDevice v9 = this.mHdmiCecNetwork.getLocalDevice(4);
		HdmiCecLocalDevicePlayback v8 = v9;
		boolean v10 = v8.isActiveSource();
		if (v10 == 0) {
			HdmiCecLocalDevice$ActiveSource v11 = this.mActiveSource;
			boolean v13 = HdmiUtils.isValidAddress(this.logicalAddress);
			boolean v12 = v13;
			if (v12 == 0) {
				HdmiCecLocalDevice v15 = this.mHdmiCecNetwork.getLocalDevice(0);
				HdmiCecLocalDeviceTv v14 = v15;
				if (v14 == 0) {
					HdmiCecLocalDevice v17 = this.mHdmiCecNetwork.getLocalDevice(0);
					HdmiCecLocalDeviceTv v16 = v17;
					int v18 = v16.getActivePath();
					if (v18 == 65535) {
						Iterator v20 = this.mSafeAllDeviceInfos.iterator();
						boolean v21 = v20.hasNext();
						if (v21 == 0) {
							HdmiDeviceInfo v19 = 0;
							if (v19 == 0) {
								HdmiCecLocalDevice v23 = this.mHdmiCecNetwork.getLocalDevice(0);
								HdmiCecLocalDeviceTv v22 = v23;
								int v24 = v22.getActivePortId();
								HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0);
								HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18);
								HdmiDeviceInfo$Builder v29 = v28.setPortId(v24);
								HdmiDeviceInfo$Builder v30 = v29.setVendorId(0);
								StringBuilder v31 = new StringBuilder();
								StringBuilder v33 = v31.append("HDMI");
								StringBuilder v34 = v33.append(v24);
								String v35 = v34.toString();
								HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35);
								HdmiDeviceInfo v37 = v36.build();
								HdmiDeviceInfo v25 = v37;
								HdmiDeviceInfo v5 = ;
								return v5;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public HdmiDeviceInfo getActiveSource(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4);
	HdmiCecLocalDevicePlayback v6 = v7;
	if (v6 == 0) {
		HdmiCecLocalDevice v9 = this.mHdmiCecNetwork.getLocalDevice(4);
		HdmiCecLocalDevicePlayback v8 = v9;
		boolean v10 = v8.isActiveSource();
		if (v10 == 0) {
			HdmiCecLocalDevice$ActiveSource v11 = this.mActiveSource;
			boolean v13 = HdmiUtils.isValidAddress(this.logicalAddress);
			boolean v12 = v13;
			if (v12 == 0) {
				Iterator v15 = this.mSafeAllDeviceInfos.iterator();
				boolean v16 = v15.hasNext();
				if (v16 == 0) {
					HdmiDeviceInfo v14 = 0;
					if (v14 == 0) {
						int v18 = this.mHdmiCecNetwork.physicalAddressToPortId(HdmiCecLocalDevice$ActiveSource.physicalAddress);
						int v17 = v18;
						HdmiDeviceInfo$Builder v20 = new HdmiDeviceInfo$Builder(2,0);
						HdmiDeviceInfo$Builder v22 = v20.setPhysicalAddress(HdmiCecLocalDevice$ActiveSource.physicalAddress);
						HdmiDeviceInfo$Builder v23 = v22.setPortId(v17);
						HdmiDeviceInfo$Builder v24 = v23.setVendorId(0);
						StringBuilder v25 = new StringBuilder();
						StringBuilder v27 = v25.append("HDMI");
						StringBuilder v28 = v27.append(v17);
						String v29 = v28.toString();
						HdmiDeviceInfo$Builder v30 = v24.setDisplayName(v29);
						HdmiDeviceInfo v31 = v30.build();
						HdmiDeviceInfo v19 = v31;
						HdmiDeviceInfo v5 = v19;
						return v5;
					}
				}
			}
		}
	}
}

and the following sink code:
['HdmiCecLocalDevice v15 = this.mHdmiCecNetwork.getLocalDevice(0);\nHdmiCecLocalDeviceTv v14 = v15;\nint v18 = v16.getActivePath();\nHdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0);\nHdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18);\nHdmiDeviceInfo$Builder v29 = v28.setPortId(v24);\nHdmiDeviceInfo$Builder v30 = v29.setVendorId(0);\nStringBuilder v31 = new StringBuilder();\nStringBuilder v33 = v31.append("HDMI");\nStringBuilder v34 = v33.append(v24);\nString v35 = v34.toString();\nHdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35);\nHdmiDeviceInfo v37 = v36.build();', 'int v18 = this.mHdmiCecNetwork.physicalAddressToPortId(HdmiCecLocalDevice$ActiveSource.physicalAddress);\nHdmiDeviceInfo$Builder v20 = new HdmiDeviceInfo$Builder(2,0);\nHdmiDeviceInfo$Builder v22 = v20.setPhysicalAddress(HdmiCecLocalDevice$ActiveSource.physicalAddress);\nHdmiDeviceInfo$Builder v23 = v22.setPortId(v17);\nHdmiDeviceInfo$Builder v24 = v23.setVendorId(0);\nStringBuilder v25 = new StringBuilder();\nStringBuilder v27 = v25.append("HDMI");\nStringBuilder v28 = v27.append(v17);\nString v29 = v28.toString();\nHdmiDeviceInfo$Builder v30 = v24.setDisplayName(v29);\nHdmiDeviceInfo v31 = v30.build();']

The method getActiveSource has the following similar APIs:

- API Name: getSystemAudioMode()Z with Similarity Score: 0.8251484036445618
  - Access Control Level: NONE and the following code:
HdmiControlService.setWorkSourceUidToCallingUid();
Object v7 = this.mLocalDevices.get(0);
HdmiCecLocalDevice v6 = v7;
HdmiCecLocalDeviceTv v5 = v6;

- API Name: getSystemAudioMode()Z with Similarity Score: 0.7915666699409485
  - Access Control Level: NONE and the following code:
HdmiControlService.setWorkSourceUidToCallingUid();
Object v7 = this.mLocalDevices.get(0);
HdmiCecLocalDevice v6 = v7;
HdmiCecLocalDeviceTv v5 = v6;

