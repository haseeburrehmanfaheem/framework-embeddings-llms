The method setCecSettingStringValue has the following code snippet:

This is path 1 for the API with depth 2:
public void setCecSettingStringValue(String p1, String p2){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			boolean v11 = this.mUserConfigurable;
			if (v11 == 0) {
				HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue();
				String v14 = v13.getStringValue();
				if (v14 == 0) {
					String v12 = ;
					boolean v15 = v12.equals("string");
					if (v15 == 0) {
						HdmiCecConfig$Setting v17 = HdmiCecConfig.getSetting(p1);
						if (v17 == 0) {
							String v18 = v17.getValueType();
							boolean v19 = v18.equals("string");
							if (v19 == 0) {
								ArrayList v20 = new ArrayList();
								List v22 = v17.getAllowedValues();
								Iterator v23 = v22.iterator();
								boolean v24 = v23.hasNext();
								if (v24 == 0) {
									List v16 = v20;
									boolean v25 = v16.contains(p2);
									if (v25 == 0) {
										StringBuilder v26 = new StringBuilder();
										StringBuilder v28 = v26.append("Updating CEC setting '");
										StringBuilder v29 = v26.append(p1);
										StringBuilder v30 = v26.append("' to '");
										StringBuilder v31 = v26.append(p2);
										StringBuilder v32 = v26.append("'.");
										String v33 = v26.toString();
										Object v34 = new Object(0);
										HdmiLogger v36 = HdmiLogger.getLogger();
										String v37 = HdmiLogger.toLogString(v33, v34);
										v36.debugInternal(v37);
										int v40 = HdmiCecConfig.getStorage(v8);
										String v41 = HdmiCecConfig.getStorageKey(v8);
										if (v40 != 0) {
											if (v40 != 1) {
												if (v40 != 2) {
													StringBuilder v42 = new StringBuilder();
													StringBuilder v44 = v42.append("Setting '");
													StringBuilder v45 = v42.append(v41);
													StringBuilder v46 = v42.append("' shared pref.");
													String v47 = v42.toString();
													Object v48 = new Object(0);
													HdmiLogger.debug(v47, v48);
													this.mStorageAdapter.storeSharedPref(v41, p2);
													HdmiCecConfig.notifySettingChanged(v8);
													Binder.restoreCallingIdentity(v5);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setCecSettingStringValue(String p1, String p2){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			boolean v11 = this.mUserConfigurable;
			if (v11 == 0) {
				HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue();
				String v14 = v13.getStringValue();
				if (v14 == 0) {
					String v12 = ;
					boolean v15 = v12.equals("string");
					if (v15 == 0) {
						HdmiCecConfig$Setting v17 = HdmiCecConfig.getSetting(p1);
						if (v17 == 0) {
							String v18 = v17.getValueType();
							boolean v19 = v18.equals("string");
							if (v19 == 0) {
								ArrayList v20 = new ArrayList();
								List v22 = v17.getAllowedValues();
								Iterator v23 = v22.iterator();
								boolean v24 = v23.hasNext();
								if (v24 == 0) {
									List v16 = v20;
									boolean v25 = v16.contains(p2);
									if (v25 == 0) {
										StringBuilder v26 = new StringBuilder();
										StringBuilder v28 = v26.append("Updating CEC setting '");
										StringBuilder v29 = v26.append(p1);
										StringBuilder v30 = v26.append("' to '");
										StringBuilder v31 = v26.append(p2);
										StringBuilder v32 = v26.append("'.");
										String v33 = v26.toString();
										Object v34 = new Object(0);
										HdmiLogger v36 = HdmiLogger.getLogger();
										String v37 = HdmiLogger.toLogString(v33, v34);
										v36.debugInternal(v37);
										int v40 = HdmiCecConfig.getStorage(v8);
										String v41 = HdmiCecConfig.getStorageKey(v8);
										if (v40 != 0) {
											if (v40 != 1) {
												StringBuilder v42 = new StringBuilder();
												StringBuilder v44 = v42.append("Setting '");
												StringBuilder v45 = v42.append(v41);
												StringBuilder v46 = v42.append("' global setting.");
												String v47 = v42.toString();
												Object v48 = new Object(0);
												HdmiLogger.debug(v47, v48);
												this.mStorageAdapter.storeGlobalSetting(v41, p2);
												Binder.restoreCallingIdentity(v5);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['HdmiCecConfig$Setting v8 = ;\nString v14 = v13.getStringValue();\nint v40 = HdmiCecConfig.getStorage(v8);\nString v41 = HdmiCecConfig.getStorageKey(v8);\nthis.mStorageAdapter.storeSharedPref(v41, p2);', 'HdmiCecConfig$Setting v17 = HdmiCecConfig.getSetting(p1);\nString v18 = v17.getValueType();\nList v22 = v17.getAllowedValues();\nArrayList v20 = new ArrayList();\nthis.mStorageAdapter.storeGlobalSetting(v41, p2);']

The method setCecSettingStringValue has the following similar APIs:

- API Name: setCecSettingIntValue(Ljava/lang/String;I)V with Similarity Score: 0.9260272979736328
  - Access Control Level: NONE and the following code:
String v40 = Integer.toString(p2);
int v42 = HdmiCecConfig.getStorage(v8);
String v43 = HdmiCecConfig.getStorageKey(v8);
this.mStorageAdapter.storeGlobalSetting(v43, v40);

- API Name: setCecSettingIntValue(Ljava/lang/String;I)V with Similarity Score: 0.9206733703613281
  - Access Control Level: NONE and the following code:
String v40 = Integer.toString(p2);
int v42 = HdmiCecConfig.getStorage(v8);
String v43 = HdmiCecConfig.getStorageKey(v8);
this.mStorageAdapter.storeSharedPref(v43, v40);

