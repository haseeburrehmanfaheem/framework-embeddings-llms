The method getSystemAudioMode has the following code snippet:

This is path 1 for the API with depth 2:
public boolean getSystemAudioMode(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	Object v7 = this.mLocalDevices.get(0);
	HdmiCecLocalDevice v6 = v7;
	HdmiCecLocalDeviceTv v5 = v6;
	Object v10 = this.mLocalDevices.get(5);
	HdmiCecLocalDevice v9 = v10;
	HdmiCecLocalDeviceAudioSystem v8 = v9;
	if (v5 == 0) {
		HdmiDeviceInfo v13 = HdmiCecLocalDeviceTv.getSafeAvrDeviceInfo();
		if (v13 == 0) {
			boolean v12 = ;
			if (v12 != 0) {
				boolean v14 = this.mSystemAudioActivated;
				boolean v11 = v14;
				if (v11 != 0) {
					if (v8 == 0) {
						boolean v16 = this.mSystemAudioActivated;
						boolean v15 = v16;
						if (v15 == 0) {
							return ;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean getSystemAudioMode(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	Object v7 = this.mLocalDevices.get(0);
	HdmiCecLocalDevice v6 = v7;
	HdmiCecLocalDeviceTv v5 = v6;
	Object v10 = this.mLocalDevices.get(5);
	HdmiCecLocalDevice v9 = v10;
	HdmiCecLocalDeviceAudioSystem v8 = v9;
	if (v5 == 0) {
		HdmiDeviceInfo v13 = HdmiCecLocalDeviceTv.getSafeAvrDeviceInfo();
		if (v13 == 0) {
			boolean v12 = ;
			if (v12 != 0) {
				boolean v14 = this.mSystemAudioActivated;
				boolean v11 = v14;
				if (v11 != 0) {
					if (v8 == 0) {
						boolean v16 = this.mSystemAudioActivated;
						boolean v15 = v16;
						if (v15 == 0) {
							return ;
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean getSystemAudioMode(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	Object v7 = this.mLocalDevices.get(0);
	HdmiCecLocalDevice v6 = v7;
	HdmiCecLocalDeviceTv v5 = v6;
	Object v10 = this.mLocalDevices.get(5);
	HdmiCecLocalDevice v9 = v10;
	HdmiCecLocalDeviceAudioSystem v8 = v9;
	if (v5 == 0) {
		HdmiDeviceInfo v13 = HdmiCecLocalDeviceTv.getSafeAvrDeviceInfo();
		if (v13 == 0) {
			boolean v12 = ;
			if (v12 != 0) {
				boolean v14 = this.mSystemAudioActivated;
				boolean v11 = v14;
				if (v11 != 0) {
					if (v8 == 0) {
						boolean v16 = this.mSystemAudioActivated;
						boolean v15 = v16;
						if (v15 == 0) {
							return ;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v14 = this.mSystemAudioActivated;\nboolean v11 = v14;\nif (v11 != 0) {', 'if (v5 == 0) {\nHdmiDeviceInfo v13 = HdmiCecLocalDeviceTv.getSafeAvrDeviceInfo();', 'HdmiControlService.setWorkSourceUidToCallingUid();\nObject v7 = this.mLocalDevices.get(0);\nHdmiCecLocalDevice v6 = v7;\nHdmiCecLocalDeviceTv v5 = v6;']

The method getSystemAudioMode has the following similar APIs:

- API Name: getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo; with Similarity Score: 0.8251484036445618
  - Access Control Level: NONE and the following code:
HdmiCecLocalDevice v15 = this.mHdmiCecNetwork.getLocalDevice(0);
HdmiCecLocalDeviceTv v14 = v15;
int v18 = v16.getActivePath();
HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0);
HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18);
HdmiDeviceInfo$Builder v29 = v28.setPortId(v24);
HdmiDeviceInfo$Builder v30 = v29.setVendorId(0);
StringBuilder v31 = new StringBuilder();
StringBuilder v33 = v31.append("HDMI");
StringBuilder v34 = v33.append(v24);
String v35 = v34.toString();
HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35);
HdmiDeviceInfo v37 = v36.build();

- API Name: setProhibitMode(Z)V with Similarity Score: 0.8175085783004761
  - Access Control Level: NONE and the following code:
HdmiControlService.setWorkSourceUidToCallingUid();

