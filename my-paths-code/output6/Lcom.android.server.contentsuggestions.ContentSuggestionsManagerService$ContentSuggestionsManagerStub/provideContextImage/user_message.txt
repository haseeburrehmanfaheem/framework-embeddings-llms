This is path 1 for the API with depth 2:
public void provideContextImage(int p1, int p2, Bundle p3){
	if (p3 == 0) {
		int v1 = UserHandle.getCallingUserId();
		if (v5 == 0) {
			boolean v6 = AbstractMasterSystemService.mServiceNameResolver.isTemporary(p2);
			if (v6 != 0) {
				int v7 = Binder.getCallingUid();
				boolean v8 = this.mActivityTaskManagerInternal.isCallerRecents(v7);
				if (v8 == 0) {
					boolean v9 = p3.containsKey("android.contentsuggestions.extra.BITMAP");
					if (v9 != 0) {
						ActivityTaskManagerInternal v10 = ContentSuggestionsManagerService.-$$Nest$fgetmActivityTaskManagerInternal(this.this$0);
						TaskSnapshot v11 = v10.getTaskSnapshotBlocking(p2, 0);
						if (v11 == 0) {
							HardwareBuffer v12 = v11.getHardwareBuffer();
							ColorSpace v13 = v11.getColorSpace();
							if (v13 == 0) {
								int v14 = v13.getId();
								Object v15 = ContentSuggestionsManagerService.access$200(this.this$0);
								AbstractPerUserSystemService v16 = ContentSuggestionsManagerService.access$300(this.this$0, p1);
								if (v16 == 0) {
									v16.provideContextImageLocked(p2, , , p3);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void provideContextImage(int p1, int p2, Bundle p3){
	if (p3 == 0) {
		int v1 = UserHandle.getCallingUserId();
		if (v5 == 0) {
			boolean v6 = AbstractMasterSystemService.mServiceNameResolver.isTemporary(p2);
			if (v6 != 0) {
				int v7 = Binder.getCallingUid();
				boolean v8 = this.mActivityTaskManagerInternal.isCallerRecents(v7);
				if (v8 == 0) {
					boolean v9 = p3.containsKey("android.contentsuggestions.extra.BITMAP");
					if (v9 != 0) {
						ActivityTaskManagerInternal v10 = ContentSuggestionsManagerService.-$$Nest$fgetmActivityTaskManagerInternal(this.this$0);
						TaskSnapshot v11 = v10.getTaskSnapshotBlocking(p2, 0);
						if (v11 == 0) {
							HardwareBuffer v12 = v11.getHardwareBuffer();
							ColorSpace v13 = v11.getColorSpace();
							if (v13 == 0) {
								int v14 = v13.getId();
								Object v15 = ContentSuggestionsManagerService.access$200(this.this$0);
								AbstractPerUserSystemService v16 = ContentSuggestionsManagerService.access$300(this.this$0, p1);
								if (v16 == 0) {
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void provideContextImage(int p1, int p2, Bundle p3){
	if (p3 == 0) {
		int v1 = UserHandle.getCallingUserId();
		if (v5 == 0) {
			boolean v6 = AbstractMasterSystemService.mServiceNameResolver.isTemporary(p2);
			if (v6 != 0) {
				int v7 = Binder.getCallingUid();
				boolean v8 = this.mActivityTaskManagerInternal.isCallerRecents(v7);
				if (v8 == 0) {
					boolean v9 = p3.containsKey("android.contentsuggestions.extra.BITMAP");
					if (v9 != 0) {
						ActivityTaskManagerInternal v10 = ContentSuggestionsManagerService.-$$Nest$fgetmActivityTaskManagerInternal(this.this$0);
						TaskSnapshot v11 = v10.getTaskSnapshotBlocking(p2, 0);
						if (v11 == 0) {
							HardwareBuffer v12 = v11.getHardwareBuffer();
							ColorSpace v13 = v11.getColorSpace();
							if (v13 == 0) {
								Object v14 = ContentSuggestionsManagerService.access$200(this.this$0);
								AbstractPerUserSystemService v15 = ContentSuggestionsManagerService.access$300(this.this$0, p1);
								if (v15 == 0) {
									v15.provideContextImageLocked(p2, , , p3);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
