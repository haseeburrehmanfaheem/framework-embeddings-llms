The method getAvailableRollbacks has the following code snippet:

This is path 1 for the API with depth 2:
public ParceledListSlice getAvailableRollbacks(){
	Handler v2 = this.mHandler;
	Looper v3 = v2.getLooper();
	boolean v4 = v3.isCurrentThread();
	Preconditions.checkState((v4 ^ 1));
	p0.enforceManageRollbacks("getAvailableRollbacks");
	RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0);
	Handler v11 = RollbackManagerServiceImpl.getHandler();
	Looper v12 = v11.getLooper();
	boolean v13 = v12.isCurrentThread();
	Preconditions.checkState((v13 ^ 1));
	CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor);
	Object v16 = v15.get();
	Object v9 = v16;
	return v9;
}

and the following sink code:
['RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0);\nCompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor);\nObject v16 = v15.get();\nreturn v9;']

The method getAvailableRollbacks has the following similar APIs:

- API Name: getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice; with Similarity Score: 0.9968241453170776
  - Access Control Level: SYS_OR_SIG and the following code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0);
CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor);
Object v16 = v15.get();
return v9;

- API Name: notifyStagedSession(I)I with Similarity Score: 0.9698778986930847
  - Access Control Level: SYS_OR_SIG and the following code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1);
CompletableFuture v11 = CompletableFuture.supplyAsync(v3, this.mExecutor);
Object v12 = v11.get();
int v13 = v5.intValue();
return v13;

