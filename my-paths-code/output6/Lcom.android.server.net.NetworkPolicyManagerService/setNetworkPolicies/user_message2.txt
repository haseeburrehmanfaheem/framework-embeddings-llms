The method setNetworkPolicies has the following code snippet:

This is path 1 for the API with depth 2:
public void setNetworkPolicies(NetworkPolicy p1){
	long v2 = Binder.clearCallingIdentity();
	this.mNetworkPolicy.clear();
	if ( >= p1.length) {
		if (0 == 0) {
			String v7 = this.mContext.getOpPackageName();
			NetworkPolicy v8 = NetworkPolicyManagerService.getNetworkPolicies(v7);
			NetworkPolicyManagerService.normalizePoliciesNL(v8);
			if (this.LOGV == 0) {
				Trace.traceBegin(2097152, "updateNetworkEnabledNL");
				long v13 = this.mStatLogger.getTime();
				int v14 = this.mNetworkPolicy.size();
				if ( < 0) {
					long v15 = this.mStatLogger.logDurationStat(0, v13);
					Trace.traceEnd(2097152);
					NetworkPolicyManagerService.updateNetworkRulesNL();
					NetworkPolicyManagerService.updateNotificationsNL();
					if (this.LOGV == 0) {
						FileOutputStream v21 = this.mPolicyFile.startWrite();
						TypedXmlSerializer v22 = Xml.resolveSerializer(v21);
						if ( == 0) {
							this.mPolicyFile.failWrite();
							Binder.restoreCallingIdentity(v2);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setNetworkPolicies(NetworkPolicy p1){
	long v2 = Binder.clearCallingIdentity();
	this.mNetworkPolicy.clear();
	if ( >= p1.length) {
		if (0 == 0) {
			String v7 = this.mContext.getOpPackageName();
			NetworkPolicy v8 = NetworkPolicyManagerService.getNetworkPolicies(v7);
			NetworkPolicyManagerService.normalizePoliciesNL(v8);
			if (this.LOGV == 0) {
				Trace.traceBegin(2097152, "updateNetworkEnabledNL");
				long v12 = this.mStatLogger.getTime();
				int v13 = this.mNetworkPolicy.size();
				if ( < 0) {
					long v14 = this.mStatLogger.logDurationStat(0, v12);
					Trace.traceEnd(2097152);
					NetworkPolicyManagerService.updateNetworkRulesNL();
					NetworkPolicyManagerService.updateNotificationsNL();
					if (this.LOGV == 0) {
						FileOutputStream v20 = this.mPolicyFile.startWrite();
						TypedXmlSerializer v21 = Xml.resolveSerializer(v20);
						if ( == 0) {
							this.mPolicyFile.failWrite();
							Binder.restoreCallingIdentity(v2);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['this.mNetworkPolicy.clear();\nString v7 = this.mContext.getOpPackageName();\nNetworkPolicy v8 = NetworkPolicyManagerService.getNetworkPolicies(v7);\nNetworkPolicyManagerService.normalizePoliciesNL(v8);', 'long v2 = Binder.clearCallingIdentity();\nthis.mNetworkPolicy.clear();\nNetworkPolicyManagerService.updateNetworkRulesNL();\nNetworkPolicyManagerService.updateNotificationsNL();', 'FileOutputStream v21 = this.mPolicyFile.startWrite();\nTypedXmlSerializer v22 = Xml.resolveSerializer(v21);']

The method setNetworkPolicies has the following similar APIs:

- API Name: setRestrictBackground(Z)V with Similarity Score: 0.9881182909011841
  - Access Control Level: SYS_OR_SIG and the following code:
FileOutputStream v38 = this.mPolicyFile.startWrite();
TypedXmlSerializer v39 = Xml.resolveSerializer(v38);

- API Name: getNetworkPolicies(Ljava/lang/String;)[Landroid/net/NetworkPolicy; with Similarity Score: 0.761337399482727
  - Access Control Level: SYS_OR_SIG and the following code:
int v6 = this.mNetworkPolicy.size();
NetworkPolicy v7 = new NetworkPolicy(v6);
if ( >= v6) { return v7; }

