The method getNetworkPolicies has the following code snippet:

This is path 1 for the API with depth 0:
public NetworkPolicy getNetworkPolicies(String p1){
	if (v5 == 0) {
		NetworkPolicy v6 = new NetworkPolicy(0);
		return v6;
	}
}
This is path 2 for the API with depth 0:
public NetworkPolicy getNetworkPolicies(String p1){
	if (v5 == 0) {
		int v6 = this.mNetworkPolicy.size();
		NetworkPolicy v7 = new NetworkPolicy(v6);
		if ( >= v6) {
			return v7;
		}
	}
}
This is path 3 for the API with depth 0:
public NetworkPolicy getNetworkPolicies(String p1){
	int v3 = this.mNetworkPolicy.size();
	NetworkPolicy v4 = new NetworkPolicy(v3);
	if ( >= v3) {
		return v4;
	}
}

and the following sink code:
['NetworkPolicy v6 = new NetworkPolicy(0);\nreturn v6;', 'int v6 = this.mNetworkPolicy.size();\nNetworkPolicy v7 = new NetworkPolicy(v6);\nif ( >= v6) { return v7; }', 'int v3 = this.mNetworkPolicy.size();\nNetworkPolicy v4 = new NetworkPolicy(v3);\nif ( >= v3) { return v4; }']

The method getNetworkPolicies has the following similar APIs:

- API Name: setNetworkPolicies([Landroid/net/NetworkPolicy;)V with Similarity Score: 0.761337399482727
  - Access Control Level: SYS_OR_SIG and the following code:
long v2 = Binder.clearCallingIdentity();
this.mNetworkPolicy.clear();
NetworkPolicyManagerService.updateNetworkRulesNL();
NetworkPolicyManagerService.updateNotificationsNL();

- API Name: setNetworkPolicies([Landroid/net/NetworkPolicy;)V with Similarity Score: 0.7588430643081665
  - Access Control Level: SYS_OR_SIG and the following code:
this.mNetworkPolicy.clear();
String v7 = this.mContext.getOpPackageName();
NetworkPolicy v8 = NetworkPolicyManagerService.getNetworkPolicies(v7);
NetworkPolicyManagerService.normalizePoliciesNL(v8);

