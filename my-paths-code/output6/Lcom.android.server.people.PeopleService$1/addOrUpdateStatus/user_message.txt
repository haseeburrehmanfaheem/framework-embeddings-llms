This is path 1 for the API with depth 2:
public void addOrUpdateStatus(String p1, int p2, String p3, ConversationStatus p4){
	IActivityManager v3 = ActivityManager.getService();
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = v3.handleIncomingUser(v4, v5, p2, 1, 1, "", 0);
	int v2 = p2;
	int v1 = v2;
	long v12 = p4.getStartTimeMillis();
	long v13 = System.currentTimeMillis();
	if ((v12 < v13) > 0) {
		DataManager v14 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
		PackageData v17 = DataManager.getPackage(p1, p2);
		if (v17 == 0) {
			ConversationStore v18 = v17.getConversationStore();
			if (v18 == 0) {
				ConversationStore v16 = v18;
				ConversationInfo v20 = v16.getConversation(p3);
				if (v20 == 0) {
					ConversationInfo v19 = v20;
					ConversationInfo$Builder v21 = new ConversationInfo$Builder(v19);
					String v24 = p4.getId();
					Object v25 = this.mCurrStatuses.put(v24, p4);
					ConversationInfo$Builder v23 = ConversationInfo$Builder;
					Object v27 = Objects.requireNonNull(this.mShortcutId);
					ConversationInfo v28 = new ConversationInfo(ConversationInfo$Builder,0);
					ConversationInfo v26 = v28;
					v16.addOrUpdate(v26);
					String v32 = v26.getShortcutId();
					ConversationChannel v33 = DataManager.getConversationChannel(p1, p2, v32, v26);
					if (v33 == 0) {
						ConversationChannel v34 = new ConversationChannel(1);
						List v35 = Arrays.asList(v34);
						DataManager.notifyConversationsListeners(v35);
						long v37 = this.mEndTimeMs;
						if ((v37 < 0) < 0) {
							long v39 = Binder.clearCallingIdentity();
							Intent v40 = new Intent("ConversationStatusExpiration");
							Intent v42 = v40.setPackage("android");
							Uri$Builder v43 = new Uri$Builder();
							Uri$Builder v45 = v43.scheme("expStatus");
							String v46 = ConversationStatusExpirationBroadcastReceiver.getKey(p2, p1, p3, p4);
							Uri$Builder v47 = v45.appendPath(v46);
							Uri v48 = v47.build();
							Intent v49 = v42.setData(v48);
							Intent v50 = v49.addFlags(268435456);
							Intent v51 = v50.putExtra("userId", p2);
							PendingIntent v52 = PendingIntent.getBroadcast(this.mContext, 10, v51, 201326592);
							Object v53 = this.mContext.getSystemService(AlarmManage.class);
							long v54 = p4.getEndTimeMillis();
							v53.setExactAndAllowWhileIdle(0, v54, v52);
							Binder.restoreCallingIdentity(v39);
							return;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void addOrUpdateStatus(String p1, int p2, String p3, ConversationStatus p4){
	IActivityManager v3 = ActivityManager.getService();
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = v3.handleIncomingUser(v4, v5, p2, 1, 1, "", 0);
	int v2 = v6;
	int v1 = v2;
	long v12 = p4.getStartTimeMillis();
	long v13 = System.currentTimeMillis();
	if ((v12 < v13) > 0) {
		DataManager v14 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
		PackageData v17 = DataManager.getPackage(p1, p2);
		if (v17 == 0) {
			ConversationStore v18 = v17.getConversationStore();
			if (v18 == 0) {
				ConversationStore v16 = v18;
				ConversationInfo v20 = v16.getConversation(p3);
				if (v20 == 0) {
					ConversationInfo v19 = v20;
					ConversationInfo$Builder v21 = new ConversationInfo$Builder(v19);
					String v24 = p4.getId();
					Object v25 = this.mCurrStatuses.put(v24, p4);
					ConversationInfo$Builder v23 = ConversationInfo$Builder;
					Object v27 = Objects.requireNonNull(this.mShortcutId);
					ConversationInfo v28 = new ConversationInfo(ConversationInfo$Builder,0);
					ConversationInfo v26 = v28;
					v16.addOrUpdate(v26);
					String v32 = v26.getShortcutId();
					ConversationChannel v33 = DataManager.getConversationChannel(p1, p2, v32, v26);
					if (v33 == 0) {
						ConversationChannel v34 = new ConversationChannel(1);
						List v35 = Arrays.asList(v34);
						DataManager.notifyConversationsListeners(v35);
						long v37 = this.mEndTimeMs;
						if ((v37 < 0) < 0) {
							long v39 = Binder.clearCallingIdentity();
							Intent v40 = new Intent("ConversationStatusExpiration");
							Intent v42 = v40.setPackage("android");
							Uri$Builder v43 = new Uri$Builder();
							Uri$Builder v45 = v43.scheme("expStatus");
							String v46 = ConversationStatusExpirationBroadcastReceiver.getKey(p2, p1, p3, p4);
							Uri$Builder v47 = v45.appendPath(v46);
							Uri v48 = v47.build();
							Intent v49 = v42.setData(v48);
							Intent v50 = v49.addFlags(268435456);
							Intent v51 = v50.putExtra("userId", p2);
							PendingIntent v52 = PendingIntent.getBroadcast(this.mContext, 10, v51, 201326592);
							Object v53 = this.mContext.getSystemService(AlarmManage.class);
							long v54 = p4.getEndTimeMillis();
							v53.setExactAndAllowWhileIdle(0, v54, v52);
							Binder.restoreCallingIdentity(v39);
							return;
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void addOrUpdateStatus(String p1, int p2, String p3, ConversationStatus p4){
	IActivityManager v3 = ActivityManager.getService();
	int v2 = p2;
	int v1 = v2;
	long v9 = p4.getStartTimeMillis();
	long v10 = System.currentTimeMillis();
	if ((v9 < v10) > 0) {
		DataManager v11 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
		PackageData v14 = DataManager.getPackage(p1, p2);
		if (v14 == 0) {
			ConversationStore v15 = v14.getConversationStore();
			if (v15 == 0) {
				ConversationStore v13 = v15;
				ConversationInfo v17 = v13.getConversation(p3);
				if (v17 == 0) {
					ConversationInfo v16 = v17;
					ConversationInfo$Builder v18 = new ConversationInfo$Builder(v16);
					String v21 = p4.getId();
					Object v22 = this.mCurrStatuses.put(v21, p4);
					ConversationInfo$Builder v20 = ConversationInfo$Builder;
					Object v24 = Objects.requireNonNull(this.mShortcutId);
					ConversationInfo v25 = new ConversationInfo(ConversationInfo$Builder,0);
					ConversationInfo v23 = v25;
					v13.addOrUpdate(v23);
					String v29 = v23.getShortcutId();
					ConversationChannel v30 = DataManager.getConversationChannel(p1, p2, v29, v23);
					if (v30 == 0) {
						ConversationChannel v31 = new ConversationChannel(1);
						List v32 = Arrays.asList(v31);
						DataManager.notifyConversationsListeners(v32);
						long v34 = this.mEndTimeMs;
						if ((v34 < 0) < 0) {
							long v36 = Binder.clearCallingIdentity();
							Intent v37 = new Intent("ConversationStatusExpiration");
							Intent v39 = v37.setPackage("android");
							Uri$Builder v40 = new Uri$Builder();
							Uri$Builder v42 = v40.scheme("expStatus");
							String v43 = ConversationStatusExpirationBroadcastReceiver.getKey(p2, p1, p3, p4);
							Uri$Builder v44 = v42.appendPath(v43);
							Uri v45 = v44.build();
							Intent v46 = v39.setData(v45);
							Intent v47 = v46.addFlags(268435456);
							Intent v48 = v47.putExtra("userId", p2);
							PendingIntent v49 = PendingIntent.getBroadcast(this.mContext, 10, v48, 201326592);
							Object v50 = this.mContext.getSystemService(AlarmManage.class);
							long v51 = p4.getEndTimeMillis();
							v50.setExactAndAllowWhileIdle(0, v51, v49);
							Binder.restoreCallingIdentity(v36);
							return;
						}
					}
				}
			}
		}
	}
}
