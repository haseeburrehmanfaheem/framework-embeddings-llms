This is path 1 for the API with depth 2:
public void clearStatuses(String p1, int p2, String p3){
	IActivityManager v3 = ActivityManager.getService();
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = v3.handleIncomingUser(v4, v5, p2, 1, 1, "", 0);
	int v2 = p2;
	int v1 = v2;
	DataManager v12 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
	PackageData v15 = DataManager.getPackage(p1, p2);
	if (v15 == 0) {
		ConversationStore v16 = v15.getConversationStore();
		if (v16 == 0) {
			ConversationStore v14 = v16;
			ConversationInfo v18 = v14.getConversation(p3);
			if (v18 == 0) {
				ConversationInfo v17 = v18;
				ConversationInfo$Builder v19 = new ConversationInfo$Builder(v17);
				this.mCurrStatuses.clear();
				if (0 == 0) {
					Iterator v23 = 0.iterator();
					boolean v24 = v23.hasNext();
					if (v24 == 0) {
						ConversationInfo$Builder v21 = ConversationInfo$Builder;
						Object v26 = Objects.requireNonNull(this.mShortcutId);
						ConversationInfo v27 = new ConversationInfo(ConversationInfo$Builder,0);
						ConversationInfo v25 = v27;
						v14.addOrUpdate(v25);
						String v31 = v25.getShortcutId();
						ConversationChannel v32 = DataManager.getConversationChannel(p1, p2, v31, v25);
						if (v32 == 0) {
							ConversationChannel v33 = new ConversationChannel(1);
							List v34 = Arrays.asList(v33);
							DataManager.notifyConversationsListeners(v34);
							return;
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void clearStatuses(String p1, int p2, String p3){
	IActivityManager v3 = ActivityManager.getService();
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = v3.handleIncomingUser(v4, v5, p2, 1, 1, "", 0);
	int v2 = v6;
	int v1 = v2;
	DataManager v12 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
	PackageData v15 = DataManager.getPackage(p1, p2);
	if (v15 == 0) {
		ConversationStore v16 = v15.getConversationStore();
		if (v16 == 0) {
			ConversationStore v14 = v16;
			ConversationInfo v18 = v14.getConversation(p3);
			if (v18 == 0) {
				ConversationInfo v17 = v18;
				ConversationInfo$Builder v19 = new ConversationInfo$Builder(v17);
				this.mCurrStatuses.clear();
				if (0 == 0) {
					Iterator v23 = 0.iterator();
					boolean v24 = v23.hasNext();
					if (v24 == 0) {
						ConversationInfo$Builder v21 = ConversationInfo$Builder;
						Object v26 = Objects.requireNonNull(this.mShortcutId);
						ConversationInfo v27 = new ConversationInfo(ConversationInfo$Builder,0);
						ConversationInfo v25 = v27;
						v14.addOrUpdate(v25);
						String v31 = v25.getShortcutId();
						ConversationChannel v32 = DataManager.getConversationChannel(p1, p2, v31, v25);
						if (v32 == 0) {
							ConversationChannel v33 = new ConversationChannel(1);
							List v34 = Arrays.asList(v33);
							DataManager.notifyConversationsListeners(v34);
							return;
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void clearStatuses(String p1, int p2, String p3){
	IActivityManager v3 = ActivityManager.getService();
	int v2 = p2;
	int v1 = v2;
	DataManager v9 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
	PackageData v12 = DataManager.getPackage(p1, p2);
	if (v12 == 0) {
		ConversationStore v13 = v12.getConversationStore();
		if (v13 == 0) {
			ConversationStore v11 = v13;
			ConversationInfo v15 = v11.getConversation(p3);
			if (v15 == 0) {
				ConversationInfo v14 = v15;
				ConversationInfo$Builder v16 = new ConversationInfo$Builder(v14);
				this.mCurrStatuses.clear();
				if (0 == 0) {
					Iterator v20 = 0.iterator();
					boolean v21 = v20.hasNext();
					if (v21 == 0) {
						ConversationInfo$Builder v18 = ConversationInfo$Builder;
						Object v23 = Objects.requireNonNull(this.mShortcutId);
						ConversationInfo v24 = new ConversationInfo(ConversationInfo$Builder,0);
						ConversationInfo v22 = v24;
						v11.addOrUpdate(v22);
						String v28 = v22.getShortcutId();
						ConversationChannel v29 = DataManager.getConversationChannel(p1, p2, v28, v22);
						if (v29 == 0) {
							ConversationChannel v30 = new ConversationChannel(1);
							List v31 = Arrays.asList(v30);
							DataManager.notifyConversationsListeners(v31);
							return;
						}
					}
				}
			}
		}
	}
}
