The method getCurrentRules has the following code snippet:

This is path 1 for the API with depth 2:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v3 = Collections.emptyList();
	if (0 == 0) {
		ArrayList v5 = new ArrayList();
		String v7 = p1.getPackageName();
		RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7);
		boolean v9 = v5.add(v8);
		List v10 = p1.getAppCertificates();
		Iterator v11 = v10.iterator();
		boolean v12 = v11.hasNext();
		if (v12 == 0) {
			RuleIndexRange v13 = new RuleIndexRange(v15,v17);
			Object v14 = this.sUnindexedRuleIndexes.get("START_KEY");
			int v15 = v14.intValue();
			Object v16 = this.sUnindexedRuleIndexes.get("END_KEY");
			int v17 = v16.intValue();
			boolean v19 = v5.add(v13);
			List v4 = v5;
			File v21 = new File(this.mRulesDir,"rules");
			RandomAccessObject$RandomAccessFileObject v24 = new RandomAccessObject$RandomAccessFileObject(v21);
			RandomAccessObject v23 = v24;
			List v26 = this.mRuleParser.parse(v23, );
			List v2 = v26;
			ParceledListSlice v27 = new ParceledListSlice();
			return v27;
		}
	}
}
This is path 2 for the API with depth 2:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v3 = Collections.emptyList();
	if (0 == 0) {
		ArrayList v5 = new ArrayList();
		String v7 = p1.getPackageName();
		RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7);
		boolean v9 = v5.add(v8);
		List v10 = p1.getAppCertificates();
		Iterator v11 = v10.iterator();
		boolean v12 = v11.hasNext();
		if (v12 == 0) {
			RuleIndexRange v13 = new RuleIndexRange(v15,v17);
			Object v14 = this.sUnindexedRuleIndexes.get("START_KEY");
			int v15 = v14.intValue();
			Object v16 = this.sUnindexedRuleIndexes.get("END_KEY");
			int v17 = v16.intValue();
			boolean v19 = v5.add(v13);
			List v4 = v5;
			File v20 = new File(this.mRulesDir,"rules");
			RandomAccessObject$RandomAccessFileObject v23 = new RandomAccessObject$RandomAccessFileObject(v20);
			RandomAccessObject v22 = v23;
			List v25 = this.mRuleParser.parse(v22, );
			List v2 = v25;
			ParceledListSlice v26 = new ParceledListSlice();
			return v26;
		}
	}
}

and the following sink code:
['String v7 = p1.getPackageName();\nRuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7);\nboolean v9 = v5.add(v8);', 'Object v14 = this.sUnindexedRuleIndexes.get("START_KEY");\nint v15 = v14.intValue();\nObject v16 = this.sUnindexedRuleIndexes.get("END_KEY");\nint v17 = v16.intValue();\nRuleIndexRange v13 = new RuleIndexRange(v15,v17);\nboolean v19 = v5.add(v13);', 'ParceledListSlice v27 = new ParceledListSlice();\nreturn v27;']

The method getCurrentRules has the following similar APIs:

- API Name: getAllPermissionGroups(I)Landroid/content/pm/ParceledListSlice; with Similarity Score: 0.9497115612030029
  - Access Control Level: NONE and the following code:
ParceledListSlice v1 = new ParceledListSlice(v2);
return v1;

- API Name: queryPermissionsByGroup(Ljava/lang/String;I)Landroid/content/pm/ParceledListSlice; with Similarity Score: 0.9496293663978577
  - Access Control Level: NONE and the following code:
ParceledListSlice v2 = new ParceledListSlice(v1);
return v2;

