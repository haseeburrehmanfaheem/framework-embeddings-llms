The method isDisplayWhiteBalanceEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isDisplayWhiteBalanceEnabled(){
	long v1 = Binder.clearCallingIdentity();
	if (this.mCurrentUser != -10000) {
		Context v4 = ColorDisplayService.getContext();
		ContentResolver v5 = v4.getContentResolver();
		Context v6 = ColorDisplayService.getContext();
		Resources v7 = v6.getResources();
		boolean v8 = v7.getBoolean(17891606);
		int v9 = Settings$Secure.getIntForUser(v5, "display_white_balance_enabled", v8, this.mCurrentUser);
		if (v9 != 1) {
			boolean v3 = ;
			boolean v2 = v3;
			Binder.restoreCallingIdentity(v1);
			return v2;
		}
	}
}

and the following sink code:
['int v9 = Settings$Secure.getIntForUser(v5, "display_white_balance_enabled", v8, this.mCurrentUser);\nif (v9 != 1) {\nreturn v2;']

The method isDisplayWhiteBalanceEnabled has the following similar APIs:

- API Name: setDisplayWhiteBalanceEnabled(Z)Z with Similarity Score: 0.9355540871620178
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v8 = Settings$Secure.putIntForUser(v7, "display_white_balance_enabled", p1, this.mCurrentUser);
return v4;

- API Name: setReduceBrightColorsActivated(Z)Z with Similarity Score: 0.7867102026939392
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v8 = Settings$Secure.putIntForUser(v7, "reduce_bright_colors_activated", p1, this.mCurrentUser);
return v4;

