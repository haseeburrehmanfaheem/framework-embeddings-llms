This is path 1 for the API with depth 2:
public boolean setNightDisplayActivated(boolean p1){
	long v3 = Binder.clearCallingIdentity();
	ColorDisplayService$NightDisplayTintController v4 = this.mNightDisplayTintController;
	Boolean v5 = Boolean.valueOf(p1);
	LocalDateTime v7 = LocalDateTime.now();
	if (p1 != 0) {
		boolean v9 = p1.booleanValue();
		boolean v10 = ColorDisplayService$NightDisplayTintController.isActivated();
		if (v9 == v10) {
			boolean v11 = ColorDisplayService$NightDisplayTintController.isActivatedStateNotSet();
			if (v11 != 0) {
				if ( == 0) {
					Context v12 = this.this$0.getContext();
					ContentResolver v13 = v12.getContentResolver();
					String v14 = v7.toString();
					int v15 = ColorDisplayService.-$$Nest$fgetmCurrentUser(this.this$0);
					boolean v16 = Settings$Secure.putStringForUser(v13, "night_display_last_activated_time", v14, v15);
					boolean v17 = ColorDisplayService$NightDisplayTintController.isActivatedStateNotSet();
					if (v17 != 0) {
						if ( == 0) {
							ColorDisplayService$NightDisplayTintController.setActivated(p1);
							boolean v19 = ColorDisplayService$NightDisplayTintController.isActivatedSetting();
							boolean v20 = p1.booleanValue();
							if (v19 == v20) {
								Context v21 = this.this$0.getContext();
								ContentResolver v22 = v21.getContentResolver();
								boolean v23 = p1.booleanValue();
								int v24 = ColorDisplayService.-$$Nest$fgetmCurrentUser(this.this$0);
								boolean v25 = Settings$Secure.putIntForUser(v22, "night_display_activated", v23, v24);
								boolean v26 = p1.booleanValue();
								ColorDisplayService$NightDisplayTintController.onActivated(v26);
								Binder.restoreCallingIdentity(v3);
								return 1;
							}
						}
					}
				}
			}
		}
	}
}
