The method setSaturationLevel has the following code snippet:

This is path 1 for the API with depth 1:
public boolean setSaturationLevel(int p1){
	if (v4 != 0) {
		if ( != 0) {
			if ( == 0) {
				long v5 = Binder.clearCallingIdentity();
				Message v7 = this.mHandler.obtainMessage(4);
				Message.arg1 = p1;
				boolean v8 = this.mHandler.sendMessage(v7);
				Binder.restoreCallingIdentity(v5);
				return 1;
			}
		}
	}
}
This is path 2 for the API with depth 1:
public boolean setSaturationLevel(int p1){
	if (v4 != 0) {
		if ( != 0) {
			if ( == 0) {
				long v5 = Binder.clearCallingIdentity();
				Message v7 = this.mHandler.obtainMessage(4);
				Message.arg1 = p1;
				boolean v8 = this.mHandler.sendMessage(v7);
				Binder.restoreCallingIdentity(v5);
				return 1;
			}
		}
	}
}

and the following sink code:
['Message v7 = this.mHandler.obtainMessage(4);\nMessage.arg1 = p1;\nboolean v8 = this.mHandler.sendMessage(v7);']

The method setSaturationLevel has the following similar APIs:

- API Name: allowDebugging(ZLjava/lang/String;)V with Similarity Score: 0.9466365575790405
  - Access Control Level: SYS_OR_SIG and the following code:
Message v4 = this.mHandler.obtainMessage(3);
Message.arg1 = p1;
Message.obj = p2;
boolean v5 = this.mHandler.sendMessage(v4);

- API Name: allowWirelessDebugging(ZLjava/lang/String;)V with Similarity Score: 0.9437894225120544
  - Access Control Level: SYS_OR_SIG and the following code:
Message v4 = this.mHandler.obtainMessage(18);
v4.arg1 = p1;
v4.obj = p2;
boolean v5 = this.mHandler.sendMessage(v4);

