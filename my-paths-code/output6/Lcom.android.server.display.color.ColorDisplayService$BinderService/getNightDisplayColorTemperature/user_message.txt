This is path 1 for the API with depth 2:
public int getNightDisplayColorTemperature(){
	long v1 = Binder.clearCallingIdentity();
	ColorDisplayService$NightDisplayTintController v2 = this.mNightDisplayTintController;
	if (this.mColorTemp == 0) {
		int v4 = this.mColorTemp.intValue();
		if (v4 != -1) {
			Context v6 = this.this$0.getContext();
			Resources v7 = v6.getResources();
			int v8 = v7.getInteger(17694897);
			Context v9 = this.this$0.getContext();
			int v10 = ColorDisplayManager.getMinimumColorTemperature(v9);
			Context v11 = this.this$0.getContext();
			int v12 = ColorDisplayManager.getMaximumColorTemperature(v11);
			if ( >= v10) {
				int v5 = ;
				int v3 = ;
				Binder.restoreCallingIdentity(v1);
				return v3;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public int getNightDisplayColorTemperature(){
	long v1 = Binder.clearCallingIdentity();
	ColorDisplayService$NightDisplayTintController v2 = this.mNightDisplayTintController;
	if (this.mColorTemp == 0) {
		int v4 = this.mColorTemp.intValue();
		if (v4 != -1) {
			Context v6 = this.this$0.getContext();
			Resources v7 = v6.getResources();
			int v8 = v7.getInteger(17694897);
			Context v9 = this.this$0.getContext();
			int v10 = ColorDisplayManager.getMinimumColorTemperature(v9);
			Context v11 = this.this$0.getContext();
			int v12 = ColorDisplayManager.getMaximumColorTemperature(v11);
			if ( >= v10) {
				if ( <= v12) {
					int v5 = ;
					int v3 = ;
					Binder.restoreCallingIdentity(v1);
					return v3;
				}
			}
		}
	}
}
