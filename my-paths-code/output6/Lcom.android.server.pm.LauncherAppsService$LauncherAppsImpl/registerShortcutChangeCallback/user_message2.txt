The method registerShortcutChangeCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void registerShortcutChangeCallback(String p1, ShortcutQueryWrapper p2, IShortcutChangeCallback p3){
	List v2 = this.mShortcutIds;
	if (v2 == 0) {
		String v3 = this.mPackage;
		if (v3 == 0) {
			List v4 = this.mLocusIds;
			if (v4 == 0) {
				String v5 = this.mPackage;
				if (v5 == 0) {
					int v8 = ILauncherApps$Stub.getCallingUid();
					int v7 = v8;
					int v9 = UserHandle.getUserId(v7);
					int v6 = v9;
					UserHandle v10 = UserHandle.of(v6);
					int v11 = p0.injectBinderCallingPid();
					int v12 = p0.injectBinderCallingUid();
					if (v13 == 0) {
						this.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, );
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void registerShortcutChangeCallback(String p1, ShortcutQueryWrapper p2, IShortcutChangeCallback p3){
	List v2 = this.mShortcutIds;
	if (v2 == 0) {
		String v3 = this.mPackage;
		if (v3 == 0) {
			List v4 = this.mLocusIds;
			if (v4 == 0) {
				int v7 = ILauncherApps$Stub.getCallingUid();
				int v6 = v7;
				int v8 = UserHandle.getUserId(v6);
				int v5 = v8;
				UserHandle v9 = UserHandle.of(v5);
				int v10 = p0.injectBinderCallingPid();
				int v11 = p0.injectBinderCallingUid();
				if (v12 == 0) {
					this.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, );
					return;
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void registerShortcutChangeCallback(String p1, ShortcutQueryWrapper p2, IShortcutChangeCallback p3){
	List v2 = this.mShortcutIds;
	if (v2 == 0) {
		List v3 = this.mLocusIds;
		if (v3 == 0) {
			String v4 = this.mPackage;
			if (v4 == 0) {
				int v7 = ILauncherApps$Stub.getCallingUid();
				int v6 = v7;
				int v8 = UserHandle.getUserId(v6);
				int v5 = v8;
				UserHandle v9 = UserHandle.of(v5);
				int v10 = p0.injectBinderCallingPid();
				int v11 = p0.injectBinderCallingUid();
				if (v12 == 0) {
					this.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, );
					return;
				}
			}
		}
	}
}

and the following sink code:
['int v7 = ILauncherApps$Stub.getCallingUid();\nint v6 = v7;\nint v8 = UserHandle.getUserId(v6);\nUserHandle v9 = UserHandle.of(v5);\nthis.mShortcutChangeHandler.addShortcutChangeCallback(p3, p2, );']

The method registerShortcutChangeCallback has the following similar APIs:

- API Name: resetThrottling()V with Similarity Score: 0.783126950263977
  - Access Control Level: SYS_OR_SIG and the following code:
int v6 = ShortcutService.injectBinderCallingUid();
boolean v13 = this.mUnlockedUsers.get(p1);
ShortcutUser v20 = new ShortcutUser(ShortcutService,p1);
this.mUsers.put(p1, );

- API Name: getShortcutIconUri(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.7761302590370178
  - Access Control Level: NONE and the following code:
int v28 = UserHandle.getUserId(v29);
AndroidFuture v26 = new AndroidFuture();
this.mShortcutServiceInternal.getShortcutIconUriAsync(v28, p1, p2, p3, p4, v26);
Object v33 = v26.get();
return v33;

