The method hasShortcutHostPermission has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasShortcutHostPermission(String p1){
	int v3 = ILauncherApps$Stub.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	int v6 = this.mIPM.getPackageUid(p1, 794624, v5);
	if ( >= 0) {
		StringBuilder v7 = new StringBuilder();
		StringBuilder v9 = v7.append("Package not found: ");
		StringBuilder v10 = v7.append(p1);
		String v11 = v7.toString();
		int v12 = Log.e("LauncherAppsService", v11);
		if ( != v2) {
			int v15 = ILauncherApps$Stub.getCallingUid();
			int v14 = v15;
			int v16 = UserHandle.getUserId(v14);
			int v13 = v16;
			int v17 = p0.injectBinderCallingPid();
			int v18 = p0.injectBinderCallingUid();
			return v19;
		}
	}
}

and the following sink code:
['int v3 = ILauncherApps$Stub.getCallingUid();\nint v2 = v3;\nint v5 = UserHandle.getUserId(v2);\nint v6 = this.mIPM.getPackageUid(p1, 794624, v5);']

The method hasShortcutHostPermission has the following similar APIs:

- API Name: registerPackageInstallerCallback(Ljava/lang/String;Landroid/content/pm/IPackageInstallerCallback;)V with Similarity Score: 0.8978569507598877
  - Access Control Level: NONE and the following code:
int v3 = ILauncherApps$Stub.getCallingUid();
int v5 = UserHandle.getUserId(v2);

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z with Similarity Score: 0.8293681144714355
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = Binder.getCallingUid();
IPackageManager v5 = ActivityThread.getPackageManager();
String v6 = v4.getPackagesForUid(v3);
ApplicationInfo v20 = v18.getApplicationInfo([], 794624, v19);

