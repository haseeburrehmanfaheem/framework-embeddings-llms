The method registerCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	if (v10 != 0) {
		TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v11);
		TvInputManagerService$UserState v9 = ;
		TvInputManagerService$UserState v8 = v9;
		RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v15 = v14.register(p1);
		if (v15 != 0) {
			Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
			Integer v17 = Integer.valueOf(v1);
			Integer v18 = Integer.valueOf(v2);
			Pair v19 = Pair.create(v17, v18);
			Object v20 = v16.put(p1, v19);
			Binder.restoreCallingIdentity(v6);
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	if (v10 != 0) {
		TvInputManagerService$UserState v9 = ;
		TvInputManagerService$UserState v8 = v9;
		RemoteCallbackList v11 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v12 = v11.register(p1);
		if (v12 != 0) {
			Map v13 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
			Integer v14 = Integer.valueOf(v1);
			Integer v15 = Integer.valueOf(v2);
			Pair v16 = Pair.create(v14, v15);
			Object v17 = v13.put(p1, v16);
			Binder.restoreCallingIdentity(v6);
			return;
		}
	}
}

and the following sink code:
['TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);\nthis.mUserStates.put(p2, v11);\nRemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);\nboolean v15 = v14.register(p1);\nMap v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);\nInteger v17 = Integer.valueOf(v1);\nInteger v18 = Integer.valueOf(v2);\nPair v19 = Pair.create(v17, v18);\nObject v20 = v16.put(p1, v19);', 'RemoteCallbackList v11 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);\nboolean v12 = v11.register(p1);\nMap v13 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);\nInteger v14 = Integer.valueOf(v1);\nInteger v15 = Integer.valueOf(v2);\nPair v16 = Pair.create(v14, v15);\nObject v17 = v13.put(p1, v16);']

The method registerCallback has the following similar APIs:

- API Name: tune(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V with Similarity Score: 0.9119514226913452
  - Access Control Level: SYS_OR_SIG and the following code:
TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v16);
Map v21 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p4);
Object v22 = v21.get(p2);

- API Name: getTvInputList(I)Ljava/util/List; with Similarity Score: 0.9079252481460571
  - Access Control Level: NONE and the following code:
TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v11);
ArrayList v14 = new ArrayList();
Map v16 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8);

