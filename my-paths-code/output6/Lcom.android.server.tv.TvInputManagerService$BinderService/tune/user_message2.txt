The method tune has the following code snippet:

This is path 1 for the API with depth 2:
public void tune(IBinder p1, Uri p2, Bundle p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);
	ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
	ITvInputSession v9 = v11;
	ITvInputSession v8 = v9;
	v8.tune(p2, p3);
	TvInputManagerService$UserState v15 = TvInputManagerService.getUserStateLocked(p2);
	if (v15 != 0) {
		TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v16);
		TvInputManagerService$UserState v14 = ;
		TvInputManagerService$UserState v13 = v14;
		Map v21 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p4);
		Object v22 = v21.get(p2);
		if (v22 == 0) {
			if (p3 == 1000) {
				int v23 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v22);
				if (p3 != v23) {
					TvInputManagerService$SessionState v20 = v22;
					TvInputManagerService$SessionState v19 = v20;
					boolean v24 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v19);
					if (v24 == 0) {
						Uri v25 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v19);
						boolean v26 = Objects.equals(v25, p2);
						if (v26 != 0) {
							TvInputManagerService$SessionState.-$$Nest$fputisCurrent(v19, 1);
							TvInputManagerService$SessionState.-$$Nest$fputcurrentChannel(v19, p2);
							RemoteCallbackList v31 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);
							int v32 = v31.beginBroadcast();
							if ( >= v32) {
								RemoteCallbackList v33 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);
								v33.finishBroadcast();
								if (p1 == 0) {
									String v37 = p1.getScheme();
									boolean v38 = "content".equals(v37);
									if (v38 == 0) {
										String v39 = p1.getAuthority();
										boolean v40 = "android.media.tv".equals(v39);
										if (v40 == 0) {
											boolean v36 = ;
											if (v36 == 0) {
												List v42 = p1.getPathSegments();
												int v43 = v42.size();
												if (v43 != 2) {
													Object v44 = v42.get(0);
													boolean v45 = "passthrough".equals(v44);
													if (v45 == 0) {
														boolean v41 = ;
														if (v41 == 0) {
															boolean v35 = ;
															if (v35 == 0) {
																boolean v46 = TvInputManagerService$SessionState.-$$Nest$fgetisRecordingSession(v19);
																if (v46 == 0) {
																	Binder.restoreCallingIdentity(v6);
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void tune(IBinder p1, Uri p2, Bundle p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);
	ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
	ITvInputSession v9 = v11;
	ITvInputSession v8 = v9;
	v8.tune(p2, p3);
	TvInputManagerService$UserState v15 = TvInputManagerService.getUserStateLocked(p2);
	if (v15 != 0) {
		TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v16);
		TvInputManagerService$UserState v14 = ;
		TvInputManagerService$UserState v13 = v14;
		Map v21 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p4);
		Object v22 = v21.get(p2);
		if (v22 == 0) {
			if (p3 == 1000) {
				int v23 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v22);
				if (p3 != v23) {
					TvInputManagerService$SessionState v20 = v22;
					TvInputManagerService$SessionState v19 = v20;
					boolean v24 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v19);
					if (v24 == 0) {
						Uri v25 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v19);
						boolean v26 = Objects.equals(v25, p2);
						if (v26 != 0) {
							TvInputManagerService$SessionState.-$$Nest$fputisCurrent(v19, 1);
							TvInputManagerService$SessionState.-$$Nest$fputcurrentChannel(v19, p2);
							RemoteCallbackList v31 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);
							int v32 = v31.beginBroadcast();
							if ( >= v32) {
								RemoteCallbackList v33 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);
								v33.finishBroadcast();
								if (p1 == 0) {
									String v37 = p1.getScheme();
									boolean v38 = "content".equals(v37);
									if (v38 == 0) {
										String v39 = p1.getAuthority();
										boolean v40 = "android.media.tv".equals(v39);
										if (v40 == 0) {
											boolean v36 = ;
											if (v36 == 0) {
												List v42 = p1.getPathSegments();
												int v43 = v42.size();
												if (v43 != 2) {
													Object v44 = v42.get(0);
													boolean v45 = "passthrough".equals(v44);
													if (v45 == 0) {
														boolean v41 = ;
														if (v41 == 0) {
															boolean v35 = ;
															if (v35 == 0) {
																boolean v46 = TvInputManagerService$SessionState.-$$Nest$fgetisRecordingSession(v19);
																if (v46 == 0) {
																	Binder.restoreCallingIdentity(v6);
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void tune(IBinder p1, Uri p2, Bundle p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);
	ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
	ITvInputSession v9 = v11;
	ITvInputSession v8 = v9;
	v8.tune(p2, p3);
	TvInputManagerService$UserState v15 = TvInputManagerService.getUserStateLocked(p2);
	if (v15 != 0) {
		TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v16);
		TvInputManagerService$UserState v14 = ;
		TvInputManagerService$UserState v13 = v14;
		Map v21 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p4);
		Object v22 = v21.get(p2);
		if (v22 == 0) {
			if (p3 == 1000) {
				int v23 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v22);
				if (p3 != v23) {
					TvInputManagerService$SessionState v20 = v22;
					TvInputManagerService$SessionState v19 = v20;
					boolean v24 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v19);
					if (v24 == 0) {
						Uri v25 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v19);
						boolean v26 = Objects.equals(v25, p2);
						if (v26 != 0) {
							TvInputManagerService$SessionState.-$$Nest$fputisCurrent(v19, 1);
							TvInputManagerService$SessionState.-$$Nest$fputcurrentChannel(v19, p2);
							RemoteCallbackList v31 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);
							int v32 = v31.beginBroadcast();
							if ( >= v32) {
								RemoteCallbackList v33 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);
								v33.finishBroadcast();
								if (p1 == 0) {
									String v37 = p1.getScheme();
									boolean v38 = "content".equals(v37);
									if (v38 == 0) {
										String v39 = p1.getAuthority();
										boolean v40 = "android.media.tv".equals(v39);
										if (v40 == 0) {
											boolean v36 = ;
											if (v36 == 0) {
												List v42 = p1.getPathSegments();
												int v43 = v42.size();
												if (v43 != 2) {
													Object v44 = v42.get(0);
													boolean v45 = "passthrough".equals(v44);
													if (v45 == 0) {
														boolean v41 = ;
														if (v41 == 0) {
															boolean v35 = ;
															if (v35 == 0) {
																Binder.restoreCallingIdentity(v6);
																return;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);\nTvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);\nITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);\nv8.tune(p2, p3);', 'TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0);\nthis.mUserStates.put(p2, v16);\nMap v21 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p4);\nObject v22 = v21.get(p2);', 'TvInputManagerService$SessionState v20 = v22;\nTvInputManagerService$SessionState v19 = v20;\nboolean v24 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v19);\nUri v25 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v19);\nTvInputManagerService$SessionState.-$$Nest$fputisCurrent(v19, 1);\nTvInputManagerService$SessionState.-$$Nest$fputcurrentChannel(v19, p2);', 'RemoteCallbackList v31 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);\nint v32 = v31.beginBroadcast();\nv33.finishBroadcast();']

The method tune has the following similar APIs:

- API Name: sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V with Similarity Score: 0.9520741701126099
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);
ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
v8.appPrivateCommand(p2, p3);

- API Name: getTvInputList(I)Ljava/util/List; with Similarity Score: 0.9496330618858337
  - Access Control Level: NONE and the following code:
TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v11);
ArrayList v14 = new ArrayList();
Map v16 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8);

