The method getExtensionInterface has the following code snippet:

This is path 1 for the API with depth 2:
public IBinder getExtensionInterface(String p1, String p2, int p3){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingPid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v16 = v15.get(p1);
		if (v16 == 0) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v9);
			TvInputInfo v18 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v16);
			ComponentName v19 = v18.getComponent();
			Object v20 = v17.get(v19);
			if (v20 == 0) {
				boolean v21 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v20);
				if (v21 == 0) {
					ITvInputService v22 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
					if (v22 == 0) {
						ITvInputService v23 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
						if ( == 0) {
							String v24 = .getExtensionInterfacePermission(p2);
							if (v24 == 0) {
								IBinder v25 = .getExtensionInterface(p2);
								Binder.restoreCallingIdentity(v7);
								return v25;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public IBinder getExtensionInterface(String p1, String p2, int p3){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingPid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v16 = v15.get(p1);
		if (v16 == 0) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v9);
			TvInputInfo v18 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v16);
			ComponentName v19 = v18.getComponent();
			Object v20 = v17.get(v19);
			if (v20 == 0) {
				boolean v21 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v20);
				if (v21 == 0) {
					ITvInputService v22 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
					if (v22 == 0) {
						ITvInputService v23 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
						if ( == 0) {
							Binder.restoreCallingIdentity(v7);
							return 0;
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public IBinder getExtensionInterface(String p1, String p2, int p3){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingPid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v12 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v13 = v12.get(p1);
		if (v13 == 0) {
			Map v14 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v9);
			TvInputInfo v15 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v13);
			ComponentName v16 = v15.getComponent();
			Object v17 = v14.get(v16);
			if (v17 == 0) {
				boolean v18 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v17);
				if (v18 == 0) {
					ITvInputService v19 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v17);
					if (v19 == 0) {
						ITvInputService v20 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v17);
						if ( == 0) {
							String v21 = .getExtensionInterfacePermission(p2);
							if (v21 == 0) {
								IBinder v22 = .getExtensionInterface(p2);
								Binder.restoreCallingIdentity(v7);
								return v22;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v2 = Binder.getCallingUid();\nint v3 = Binder.getCallingPid();\nlong v7 = Binder.clearCallingIdentity();\nObject v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);\nTvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);\nMap v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);\nObject v16 = v15.get(p1);\nString v24 = .getExtensionInterfacePermission(p2);\nIBinder v25 = .getExtensionInterface(p2);\nBinder.restoreCallingIdentity(v7);\nreturn v25;', 'int v2 = Binder.getCallingUid();\nint v3 = Binder.getCallingPid();\nlong v7 = Binder.clearCallingIdentity();\nObject v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);\nTvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);\nMap v12 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);\nObject v13 = v12.get(p1);\nString v21 = .getExtensionInterfacePermission(p2);\nIBinder v22 = .getExtensionInterface(p2);\nBinder.restoreCallingIdentity(v7);\nreturn v22;', 'int v2 = Binder.getCallingUid();\nint v3 = Binder.getCallingPid();\nlong v7 = Binder.clearCallingIdentity();\nObject v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);\nTvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);\nMap v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);\nObject v16 = v15.get(p1);\nBinder.restoreCallingIdentity(v7);\nreturn 0;']

The method getExtensionInterface has the following similar APIs:

- API Name: getDisplayIds()[I with Similarity Score: 0.8819127678871155
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingUid();
long v2 = Binder.clearCallingIdentity();
Binder.restoreCallingIdentity(v2);

- API Name: registerRemoteSessionCallback(Landroid/media/IRemoteSessionCallback;)V with Similarity Score: 0.8781587481498718
  - Access Control Level: NONE and the following code:
int v2 = Binder.getCallingUid();
long v3 = Binder.clearCallingIdentity();
Binder.restoreCallingIdentity(v3);

