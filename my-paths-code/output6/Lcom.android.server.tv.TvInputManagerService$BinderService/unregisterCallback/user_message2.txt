The method unregisterCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void unregisterCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	if (v10 != 0) {
		TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v11);
		TvInputManagerService$UserState v9 = ;
		TvInputManagerService$UserState v8 = v9;
		RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v15 = v14.unregister(p1);
		Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
		Object v17 = v16.remove(p1);
		Binder.restoreCallingIdentity(v6);
		return;
	}
}
This is path 2 for the API with depth 2:
public void unregisterCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	if (v10 != 0) {
		TvInputManagerService$UserState v9 = ;
		TvInputManagerService$UserState v8 = v9;
		RemoteCallbackList v11 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v12 = v11.unregister(p1);
		Map v13 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
		Object v14 = v13.remove(p1);
		Binder.restoreCallingIdentity(v6);
		return;
	}
}

and the following sink code:
['int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);\nTvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);\nTvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext, p2, 0);\nthis.mUserStates.put(p2, v11);\nRemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);\nboolean v15 = v14.unregister(p1);\nMap v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);\nObject v17 = v16.remove(p1);']

The method unregisterCallback has the following similar APIs:

- API Name: getTvInputState(Ljava/lang/String;I)I with Similarity Score: 0.9447855949401855
  - Access Control Level: NONE and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
Map v14 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8);
Object v15 = v14.get(p1);
int v16 = TvInputManagerService$TvInputState.-$$Nest$fgetstate(v15);
return ;

- API Name: unregisterCallback(Landroid/media/tv/interactive/ITvInteractiveAppManagerCallback;I)V with Similarity Score: 0.9412153363227844
  - Access Control Level: NONE and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInteractiveAppManagerService$UserState v10 = TvInteractiveAppManagerService.getUserStateLocked(p2);
RemoteCallbackList v11 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
boolean v12 = v11.unregister(p1);

