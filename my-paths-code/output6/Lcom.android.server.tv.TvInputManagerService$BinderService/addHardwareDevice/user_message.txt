This is path 1 for the API with depth 2:
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v1 = new TvInputHardwareInfo$Builder();
	Integer v4 = Integer.valueOf(p1);
	this.mDeviceId = v4;
	TvInputHardwareInfo$Builder v3 = TvInputHardwareInfo$Builder;
	Integer v6 = Integer.valueOf(9);
	this.mType = v6;
	TvInputHardwareInfo$Builder v5 = TvInputHardwareInfo$Builder;
	this.mAudioType = 0;
	TvInputHardwareInfo$Builder v7 = TvInputHardwareInfo$Builder;
	this.mAudioAddress = "0";
	TvInputHardwareInfo$Builder v8 = TvInputHardwareInfo$Builder;
	Integer v10 = Integer.valueOf(0);
	this.mHdmiPortId = v10;
	TvInputHardwareInfo$Builder v9 = TvInputHardwareInfo$Builder;
	if (this.mDeviceId == 0) {
		if (this.mType == 0) {
			int v12 = this.mType.intValue();
			if (v12 != 9) {
				if (this.mHdmiPortId == 0) {
					int v13 = this.mType.intValue();
					if (v13 == 9) {
						if (this.mHdmiPortId != 0) {
							TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
							int v16 = this.mDeviceId.intValue();
							this.mDeviceId = v16;
							int v18 = this.mType.intValue();
							this.mType = v18;
							this.mAudioType = this.mAudioType;
							int v21 = this.mAudioType;
							if (v21 == 0) {
								this.mAudioAddress = this.mAudioAddress;
								if (this.mHdmiPortId == 0) {
									int v23 = this.mHdmiPortId.intValue();
									this.mHdmiPortId = v23;
									int v25 = this.mCableConnectionStatus.intValue();
									this.mCableConnectionStatus = v25;
									TvInputHardwareInfo v11 = v14;
									TvInputHardwareManager v27 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
									TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);
									this.mConfigs = p2;
									int v32 = this.mCableConnectionStatus;
									if (v32 != 0) {
										if (this.mIsCableConnectionStatusUpdated == 0) {
											this.mIsCableConnectionStatusUpdated = 1;
											TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder();
											TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32);
											TvInputHardwareInfo v36 = v35.build();
											this.mHardwareInfo = v36;
											boolean v33 = this.mIsCableConnectionStatusUpdated;
											int v37 = this.mDeviceId;
											this.mConnections.put(v37, v29);
											this.mHardwareList.clear();
											int v41 = this.mConnections.size();
											if ( >= v41) {
												Message v42 = this.mHandler.obtainMessage(2, 0, 0, v11);
												v42.sendToTarget();
												int v44 = this.mType;
												if (v44 != 9) {
													Iterator v46 = this.mPendingHdmiDeviceEvents.iterator();
													boolean v47 = v46.hasNext();
													if (v47 == 0) {
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v1 = new TvInputHardwareInfo$Builder();
	Integer v4 = Integer.valueOf(p1);
	this.mDeviceId = v4;
	TvInputHardwareInfo$Builder v3 = TvInputHardwareInfo$Builder;
	Integer v6 = Integer.valueOf(9);
	this.mType = v6;
	TvInputHardwareInfo$Builder v5 = TvInputHardwareInfo$Builder;
	this.mAudioType = 0;
	TvInputHardwareInfo$Builder v7 = TvInputHardwareInfo$Builder;
	this.mAudioAddress = "0";
	TvInputHardwareInfo$Builder v8 = TvInputHardwareInfo$Builder;
	Integer v10 = Integer.valueOf(0);
	this.mHdmiPortId = v10;
	TvInputHardwareInfo$Builder v9 = TvInputHardwareInfo$Builder;
	if (this.mDeviceId == 0) {
		if (this.mType == 0) {
			int v12 = this.mType.intValue();
			if (v12 != 9) {
				if (this.mHdmiPortId == 0) {
					int v13 = this.mType.intValue();
					if (v13 == 9) {
						if (this.mHdmiPortId != 0) {
							TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
							int v16 = this.mDeviceId.intValue();
							this.mDeviceId = v16;
							int v18 = this.mType.intValue();
							this.mType = v18;
							this.mAudioType = this.mAudioType;
							int v21 = this.mAudioType;
							if (v21 == 0) {
								this.mAudioAddress = this.mAudioAddress;
								if (this.mHdmiPortId == 0) {
									int v23 = this.mHdmiPortId.intValue();
									this.mHdmiPortId = v23;
									int v25 = this.mCableConnectionStatus.intValue();
									this.mCableConnectionStatus = v25;
									TvInputHardwareInfo v11 = v14;
									TvInputHardwareManager v27 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
									TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);
									this.mConfigs = p2;
									int v32 = this.mCableConnectionStatus;
									if (v32 != 0) {
										this.mIsCableConnectionStatusUpdated = 1;
										TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder();
										TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32);
										TvInputHardwareInfo v36 = v35.build();
										this.mHardwareInfo = v36;
										boolean v33 = this.mIsCableConnectionStatusUpdated;
										int v37 = this.mDeviceId;
										this.mConnections.put(v37, v29);
										this.mHardwareList.clear();
										int v41 = this.mConnections.size();
										if ( >= v41) {
											Message v42 = this.mHandler.obtainMessage(2, 0, 0, v11);
											v42.sendToTarget();
											int v44 = this.mType;
											if (v44 != 9) {
												Iterator v46 = this.mPendingHdmiDeviceEvents.iterator();
												boolean v47 = v46.hasNext();
												if (v47 == 0) {
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v1 = new TvInputHardwareInfo$Builder();
	Integer v4 = Integer.valueOf(p1);
	this.mDeviceId = v4;
	TvInputHardwareInfo$Builder v3 = TvInputHardwareInfo$Builder;
	Integer v6 = Integer.valueOf(9);
	this.mType = v6;
	TvInputHardwareInfo$Builder v5 = TvInputHardwareInfo$Builder;
	this.mAudioType = 0;
	TvInputHardwareInfo$Builder v7 = TvInputHardwareInfo$Builder;
	this.mAudioAddress = "0";
	TvInputHardwareInfo$Builder v8 = TvInputHardwareInfo$Builder;
	Integer v10 = Integer.valueOf(0);
	this.mHdmiPortId = v10;
	TvInputHardwareInfo$Builder v9 = TvInputHardwareInfo$Builder;
	if (this.mDeviceId == 0) {
		if (this.mType == 0) {
			int v12 = this.mType.intValue();
			if (v12 != 9) {
				if (this.mHdmiPortId == 0) {
					int v13 = this.mType.intValue();
					if (v13 == 9) {
						TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
						int v16 = this.mDeviceId.intValue();
						this.mDeviceId = v16;
						int v18 = this.mType.intValue();
						this.mType = v18;
						this.mAudioType = this.mAudioType;
						int v21 = this.mAudioType;
						if (v21 == 0) {
							this.mAudioAddress = this.mAudioAddress;
							if (this.mHdmiPortId == 0) {
								int v23 = this.mHdmiPortId.intValue();
								this.mHdmiPortId = v23;
								int v25 = this.mCableConnectionStatus.intValue();
								this.mCableConnectionStatus = v25;
								TvInputHardwareInfo v11 = v14;
								TvInputHardwareManager v27 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
								TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);
								this.mConfigs = p2;
								int v32 = this.mCableConnectionStatus;
								if (v32 != 0) {
									if (this.mIsCableConnectionStatusUpdated == 0) {
										this.mIsCableConnectionStatusUpdated = 1;
										TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder();
										TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32);
										TvInputHardwareInfo v36 = v35.build();
										this.mHardwareInfo = v36;
										boolean v33 = this.mIsCableConnectionStatusUpdated;
										int v37 = this.mDeviceId;
										this.mConnections.put(v37, v29);
										this.mHardwareList.clear();
										int v41 = this.mConnections.size();
										if ( >= v41) {
											Message v42 = this.mHandler.obtainMessage(2, 0, 0, v11);
											v42.sendToTarget();
											int v44 = this.mType;
											if (v44 != 9) {
												Iterator v46 = this.mPendingHdmiDeviceEvents.iterator();
												boolean v47 = v46.hasNext();
												if (v47 == 0) {
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
