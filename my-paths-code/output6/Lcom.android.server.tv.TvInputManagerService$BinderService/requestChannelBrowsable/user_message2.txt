The method requestChannelBrowsable has the following code snippet:

This is path 1 for the API with depth 2:
public void requestChannelBrowsable(Uri p1, int p2){
	Context v2 = this.mContext;
	PackageManager v3 = v2.getPackageManager();
	int v4 = Binder.getCallingUid();
	String v5 = v3.getPackagesForUid(v4);
	if (v5 == 0) {
		if (v5.length <= 0) {
			String v1 = v5[0];
			int v6 = Binder.getCallingPid();
			int v7 = Binder.getCallingUid();
			int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
			int v9 = v10;
			int v8 = v9;
			long v11 = Binder.clearCallingIdentity();
			Intent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
			Context v14 = this.this$0.getContext();
			PackageManager v15 = v14.getPackageManager();
			List v16 = v15.queryBroadcastReceivers(v12, 0);
			if (v16 == 0) {
				Iterator v17 = v16.iterator();
				boolean v18 = v17.hasNext();
				if (v18 == 0) {
					Binder.restoreCallingIdentity(v11);
					return;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void requestChannelBrowsable(Uri p1, int p2){
	Context v2 = this.mContext;
	PackageManager v3 = v2.getPackageManager();
	int v4 = Binder.getCallingUid();
	String v5 = v3.getPackagesForUid(v4);
	if (v5 == 0) {
		if (v5.length <= 0) {
			String v1 = "unknown";
			int v6 = Binder.getCallingPid();
			int v7 = Binder.getCallingUid();
			int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
			int v9 = v10;
			int v8 = v9;
			long v11 = Binder.clearCallingIdentity();
			Intent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
			Context v14 = this.this$0.getContext();
			PackageManager v15 = v14.getPackageManager();
			List v16 = v15.queryBroadcastReceivers(v12, 0);
			if (v16 == 0) {
				Iterator v17 = v16.iterator();
				boolean v18 = v17.hasNext();
				if (v18 == 0) {
					Binder.restoreCallingIdentity(v11);
					return;
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void requestChannelBrowsable(Uri p1, int p2){
	Context v2 = this.mContext;
	PackageManager v3 = v2.getPackageManager();
	int v4 = Binder.getCallingUid();
	String v5 = v3.getPackagesForUid(v4);
	if (v5 == 0) {
		if (v5.length <= 0) {
			String v1 = v5[0];
			int v6 = Binder.getCallingPid();
			int v7 = Binder.getCallingUid();
			int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
			int v9 = v10;
			int v8 = v9;
			long v11 = Binder.clearCallingIdentity();
			Intent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
			Context v14 = this.this$0.getContext();
			PackageManager v15 = v14.getPackageManager();
			List v16 = v15.queryBroadcastReceivers(v12, 0);
			if (v16 == 0) {
				Binder.restoreCallingIdentity(v11);
				return;
			}
		}
	}
}

and the following sink code:
['PackageManager v3 = v2.getPackageManager();\nint v4 = Binder.getCallingUid();\nString v5 = v3.getPackagesForUid(v4);\nIntent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");']

The method requestChannelBrowsable has the following similar APIs:

- API Name: notifyResourceGranted(II)V with Similarity Score: 0.7625359892845154
  - Access Control Level: NONE and the following code:
Intent v20 = new Intent("android.intent.action.MEDIA_RESOURCE_GRANTED");
Intent v22 = v20.putExtra("android.intent.extra.PACKAGES", v12);
Intent v23 = v20.putExtra("android.intent.extra.MEDIA_RESOURCE_TYPE", p2);

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z with Similarity Score: 0.7320951223373413
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = Binder.getCallingUid();
IPackageManager v5 = ActivityThread.getPackageManager();
String v6 = v4.getPackagesForUid(v3);
ApplicationInfo v20 = v18.getApplicationInfo([], 794624, v19);

