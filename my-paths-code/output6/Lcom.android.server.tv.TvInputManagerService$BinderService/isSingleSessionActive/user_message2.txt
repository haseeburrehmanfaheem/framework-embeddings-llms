The method isSingleSessionActive has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isSingleSessionActive(int p1){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v6 = v7;
	int v5 = v6;
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
		int v16 = v15.size();
		if (v16 != 1) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
			int v18 = v17.size();
			if (v18 != 2) {
				Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
				Collection v20 = v19.values();
				TvInputManagerService$SessionState v21 = new TvInputManagerService$SessionState(2);
				Object v22 = v20.toArray(v21);
				IBinder v23 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v22[0]);
				if (v23 != 0) {
					IBinder v24 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v22[1]);
					if (v24 == 0) {
						Binder.restoreCallingIdentity(v2);
						return ;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isSingleSessionActive(int p1){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v6 = v7;
	int v5 = v6;
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
		int v16 = v15.size();
		if (v16 != 1) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
			int v18 = v17.size();
			if (v18 != 2) {
				Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
				Collection v20 = v19.values();
				TvInputManagerService$SessionState v21 = new TvInputManagerService$SessionState(2);
				Object v22 = v20.toArray(v21);
				IBinder v23 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v22[0]);
				if (v23 != 0) {
					IBinder v24 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v22[1]);
					if (v24 == 0) {
						Binder.restoreCallingIdentity(v2);
						return ;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean isSingleSessionActive(int p1){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v6 = v7;
	int v5 = v6;
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
		int v16 = v15.size();
		if (v16 != 1) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
			int v18 = v17.size();
			if (v18 != 2) {
				Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
				Collection v20 = v19.values();
				TvInputManagerService$SessionState v21 = new TvInputManagerService$SessionState(2);
				Object v22 = v20.toArray(v21);
				IBinder v23 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v22[0]);
				if (v23 != 0) {
					Binder.restoreCallingIdentity(v2);
					return ;
				}
			}
		}
	}
}

and the following sink code:
['TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);\nTvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);']

The method isSingleSessionActive has the following similar APIs:

- API Name: getBlockedRatings(I)Ljava/util/List; with Similarity Score: 0.9294853806495667
  - Access Control Level: NONE and the following code:
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
this.mUserStates.put(p2, v11);
TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext, p2, 0);

- API Name: removeBlockedRating(Ljava/lang/String;I)V with Similarity Score: 0.9052976369857788
  - Access Control Level: NONE and the following code:
TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v12);

