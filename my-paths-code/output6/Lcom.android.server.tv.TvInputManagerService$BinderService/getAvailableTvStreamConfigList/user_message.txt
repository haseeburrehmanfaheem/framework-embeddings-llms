This is path 1 for the API with depth 2:
public List getAvailableTvStreamConfigList(String p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v6 = v7;
	int v5 = v6;
	TvInputHardwareManager v8 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	ArrayList v10 = new ArrayList();
	int v13 = this.mConnections.size();
	if ( >= v13) {
		Object v14 = this.mConnections.get();
		TvInputInfo v15 = v14.getInfoLocked();
		String v16 = v15.getId();
		boolean v17 = v16.equals(p1);
		if (v17 == 0) {
			int v12 = ;
			if (v12 >= 0) {
				Object v18 = this.mConnections.get(v12);
				TvStreamConfig v19 = this.mConfigs;
				if ( >= v19.length) {
					List v9 = v10;
					Binder.restoreCallingIdentity(v2);
					return v9;
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public List getAvailableTvStreamConfigList(String p1, int p2){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v6 = v7;
	int v5 = v6;
	TvInputHardwareManager v8 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	ArrayList v10 = new ArrayList();
	int v13 = this.mConnections.size();
	if ( >= v13) {
		int v12 = -1;
		if (v12 >= 0) {
			Object v14 = this.mConnections.get(v12);
			TvStreamConfig v15 = this.mConfigs;
			if ( >= v15.length) {
				List v9 = v10;
				Binder.restoreCallingIdentity(v2);
				return v9;
			}
		}
	}
}
