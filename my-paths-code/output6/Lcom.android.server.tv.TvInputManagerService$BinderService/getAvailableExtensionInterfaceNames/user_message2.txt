The method getAvailableExtensionInterfaceNames has the following code snippet:

This is path 1 for the API with depth 2:
public List getAvailableExtensionInterfaceNames(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingPid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v16 = v15.get(p1);
		if (v16 == 0) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v9);
			TvInputInfo v18 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v16);
			ComponentName v19 = v18.getComponent();
			Object v20 = v17.get(v19);
			if (v20 == 0) {
				boolean v21 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v20);
				if (v21 == 0) {
					ITvInputService v22 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
					if (v22 == 0) {
						ITvInputService v23 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
						if ( == 0) {
							ArrayList v24 = new ArrayList();
							List v26 = .getAvailableExtensionInterfaceNames();
							List v27 = CollectionUtils.emptyIfNull(v26);
							Iterator v28 = v27.iterator();
							boolean v29 = v28.hasNext();
							if (v29 == 0) {
								Binder.restoreCallingIdentity(v7);
								return v24;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getAvailableExtensionInterfaceNames(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingPid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v16 = v15.get(p1);
		if (v16 == 0) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v9);
			TvInputInfo v18 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v16);
			ComponentName v19 = v18.getComponent();
			Object v20 = v17.get(v19);
			if (v20 == 0) {
				boolean v21 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v20);
				if (v21 == 0) {
					ITvInputService v22 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
					if (v22 == 0) {
						if ( == 0) {
							ArrayList v23 = new ArrayList();
							List v25 = .getAvailableExtensionInterfaceNames();
							List v26 = CollectionUtils.emptyIfNull(v25);
							Iterator v27 = v26.iterator();
							boolean v28 = v27.hasNext();
							if (v28 == 0) {
								Binder.restoreCallingIdentity(v7);
								return v23;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getAvailableExtensionInterfaceNames(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingPid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v16 = v15.get(p1);
		if (v16 == 0) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v9);
			TvInputInfo v18 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v16);
			ComponentName v19 = v18.getComponent();
			Object v20 = v17.get(v19);
			if (v20 == 0) {
				boolean v21 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v20);
				if (v21 == 0) {
					if ( == 0) {
						ArrayList v22 = new ArrayList();
						List v24 = .getAvailableExtensionInterfaceNames();
						List v25 = CollectionUtils.emptyIfNull(v24);
						Iterator v26 = v25.iterator();
						boolean v27 = v26.hasNext();
						if (v27 == 0) {
							Binder.restoreCallingIdentity(v7);
							return v22;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);\nMap v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);\nObject v16 = v15.get(p1);', 'ArrayList v24 = new ArrayList();\nList v26 = .getAvailableExtensionInterfaceNames();\nreturn v24;']

The method getAvailableExtensionInterfaceNames has the following similar APIs:

- API Name: captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z with Similarity Score: 0.9484491944313049
  - Access Control Level: NONE and the following code:
Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
Map v12 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
Object v13 = v12.get(p1);

- API Name: getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo; with Similarity Score: 0.9039726257324219
  - Access Control Level: NONE and the following code:
Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
Map v14 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8);
Object v15 = v14.get(p1);
if (v15 != 0) {
TvInputInfo v16 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v15);
return ;

