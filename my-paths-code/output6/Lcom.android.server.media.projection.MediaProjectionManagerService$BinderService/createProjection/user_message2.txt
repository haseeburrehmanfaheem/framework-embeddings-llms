The method createProjection has the following code snippet:

This is path 1 for the API with depth 1:
public IMediaProjection createProjection(int p1, String p2, int p3, boolean p4){
	if (v2 != 0) {
		if (p2 == 0) {
			boolean v3 = p2.isEmpty();
			if (v3 != 0) {
				UserHandle v4 = Binder.getCallingUserHandle();
				long v5 = Binder.clearCallingIdentity();
				PackageManager v6 = this.mPackageManager;
				ApplicationInfo v7 = v6.getApplicationInfoAsUser(p2, 0, v4);
				MediaProjectionManagerService$MediaProjection v8 = new MediaProjectionManagerService$MediaProjection(this.this$0,p3,p1,p2,ApplicationInfo.targetSdkVersion,v9);
				boolean v9 = v7.isPrivilegedApp();
				if (p4 == 0) {
					AppOpsManager v11 = this.mAppOps;
					v11.setMode(46, MediaProjectionManagerService$MediaProjection.uid, MediaProjectionManagerService$MediaProjection.packageName, 0);
					Binder.restoreCallingIdentity(v5);
					return v8;
				}
			}
		}
	}
}

and the following sink code:
['ApplicationInfo v7 = v6.getApplicationInfoAsUser(p2, 0, v4);\nboolean v9 = v7.isPrivilegedApp();\nMediaProjectionManagerService$MediaProjection v8 = new MediaProjectionManagerService$MediaProjection(this.this$0,p3,p1,p2,ApplicationInfo.targetSdkVersion,v9);\nreturn v8;']

The method createProjection has the following similar APIs:

- API Name: getActiveProjectionInfo()Landroid/media/projection/MediaProjectionInfo; with Similarity Score: 0.7644792199134827
  - Access Control Level: SYS_OR_SIG and the following code:
MediaProjectionInfo v6 = this.mProjectionGrant.getProjectionInfo();
MediaProjectionInfo v5 = v6;
MediaProjectionInfo v4 = v5;
return v4;

- API Name: stopActiveProjection()V with Similarity Score: 0.7506479024887085
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v10 = this.this$0.isValidMediaProjection(v8);
int v13 = v12.unsafeCheckOpRawNoThrow(24, this.uid, this.packageName);
v14.setMode(24, this.uid, this.packageName, 3);

