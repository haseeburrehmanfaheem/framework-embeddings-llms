The method addCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void addCallback(IMediaProjectionWatcherCallback p1){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionManagerService$2 v6 = new MediaProjectionManagerService$2(MediaProjectionManagerService,p2);
		this.mCallbackDelegate.add(p2);
		MediaProjectionManagerService.linkDeathRecipientLocked(p2, v6);
		Binder.restoreCallingIdentity(v3);
		return;
	}
}

and the following sink code:
['MediaProjectionManagerService$2 v6 = new MediaProjectionManagerService$2(MediaProjectionManagerService,p2);\nthis.mCallbackDelegate.add(p2);\nMediaProjectionManagerService.linkDeathRecipientLocked(p2, v6);']

The method addCallback has the following similar APIs:

- API Name: removeCallback(Landroid/media/projection/IMediaProjectionWatcherCallback;)V with Similarity Score: 0.8392744064331055
  - Access Control Level: SYS_OR_SIG and the following code:
MediaProjectionManagerService.unlinkDeathRecipientLocked(p2);
this.mCallbackDelegate.remove(p2);

- API Name: setContentRecordingSession(Landroid/view/ContentRecordingSession;Landroid/media/projection/IMediaProjection;)V with Similarity Score: 0.700146496295929
  - Access Control Level: NONE and the following code:
this.this$0.stopProjectionLocked(p0);
boolean v22 = this.mToken.unlinkToDeath(this.mDeathEater, 0);
this.mToken = 0;

