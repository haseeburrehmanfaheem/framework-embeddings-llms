The method isHibernatingForUser has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isHibernatingForUser(String p1, int p2){
	int v10 = Binder.getCallingUid();
	int v11 = Binder.getCallingPid();
	int v12 = this.mIActivityManager.handleIncomingUser(v11, v10, p2, 0, 1, "isHibernatingForUser", 0);
	int v9 = v12;
	boolean v14 = this.mUserManager.isUserUnlockingOrUnlocked(v9);
	if (v14 != 0) {
		boolean v15 = this.mUserStates.contains(v9);
		if (v15 != 0) {
			if (0 == 0) {
				boolean v13 = 0;
				if (v13 != 0) {
					Object v19 = this.mUserStates.get(v9);
					Object v20 = v19.get(p1);
					if (v20 == 0) {
						int v21 = Binder.getCallingUid();
						boolean v22 = this.mPackageManagerInternal.canQueryPackage(v21, p1);
						if (v22 != 0) {
							boolean v1 = 0;
							return v1;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isHibernatingForUser(String p1, int p2){
	int v10 = Binder.getCallingUid();
	int v11 = Binder.getCallingPid();
	int v12 = this.mIActivityManager.handleIncomingUser(v11, v10, p2, 0, 1, "isHibernatingForUser", 0);
	int v9 = v12;
	boolean v14 = this.mUserManager.isUserUnlockingOrUnlocked(v9);
	if (v14 != 0) {
		boolean v15 = this.mUserStates.contains(v9);
		if (v15 != 0) {
			if (0 == 0) {
				boolean v13 = 0;
				if (v13 != 0) {
					Object v19 = this.mUserStates.get(v9);
					Object v20 = v19.get(p1);
					if (v20 == 0) {
						int v21 = Binder.getCallingUid();
						boolean v22 = this.mPackageManagerInternal.canQueryPackage(v21, p1);
						if (v22 != 0) {
							boolean v1 = UserLevelState.hibernated;
							return v1;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v12 = this.mIActivityManager.handleIncomingUser(v11, v10, p2, 0, 1, "isHibernatingForUser", 0);\nboolean v14 = this.mUserManager.isUserUnlockingOrUnlocked(v9);\nboolean v15 = this.mUserStates.contains(v9);\nObject v19 = this.mUserStates.get(v9);\nObject v20 = v19.get(p1);\nboolean v22 = this.mPackageManagerInternal.canQueryPackage(v21, p1);\nreturn v1;']

The method isHibernatingForUser has the following similar APIs:

- API Name: setHibernatingForUser(Ljava/lang/String;IZ)V with Similarity Score: 0.8352745771408081
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = this.mIActivityManager.handleIncomingUser(v6, v5, p2, 0, 1, "setHibernatingForUser", 0);
boolean v9 = this.mUserManager.isUserUnlockingOrUnlocked(v4);
boolean v10 = this.mUserStates.contains(v4);
Object v14 = this.mUserStates.get(v4);
Object v15 = v14.get(p1);
boolean v17 = this.mPackageManagerInternal.canQueryPackage(v16, p1);
if (UserLevelState.hibernated != p3) { UserLevelState.hibernated = p3; ... }

- API Name: isPrintServiceEnabled(Landroid/content/ComponentName;I)Z with Similarity Score: 0.8311359882354736
  - Access Control Level: NONE and the following code:
boolean v11 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
Object v12 = this.mUserStates.get(p1);
UserState v13 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v13);
boolean v17 = v9.isPrintServiceEnabled(p1);

