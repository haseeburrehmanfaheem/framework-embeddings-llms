The method isWeakEscrowTokenActive has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isWeakEscrowTokenActive(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v8 = SyntheticPasswordManager.hasState("spblob", p1, p2);
		boolean v7 = v8;
		boolean v6 = v7;
		Binder.restoreCallingIdentity(v5);
		return v6;
	}
}

and the following sink code:
['boolean v8 = SyntheticPasswordManager.hasState("spblob", p1, p2);\nboolean v7 = v8;\nboolean v6 = v7;\nreturn v6;']

The method isWeakEscrowTokenActive has the following similar APIs:

- API Name: removeWeakEscrowToken(JI)Z with Similarity Score: 0.8566054701805115
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v17 = SyntheticPasswordManager.hasState("spblob", p1, p2);
byte[] v19 = SyntheticPasswordManager.loadState("spblob", p1, p2);
SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);
SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
SyntheticPasswordManager.destroyState("secdis", p1, p2);

- API Name: getCredentialType(I)I with Similarity Score: 0.7862014770507812
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);

