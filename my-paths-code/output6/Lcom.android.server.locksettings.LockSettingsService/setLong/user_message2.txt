The method setLong has the following code snippet:

This is path 1 for the API with depth 2:
public void setLong(String p1, long p2, int p3){
	String v3 = Long.toString(p2);
	if (p3 == -9999) {
		Preconditions.checkArgument(, "cannot store lock settings for FRP user");
		LockSettingsStorage.writeKeyValue(p1, v3, p3);
		boolean v7 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v7 == 0) {
			BackupManager.dataChanged("com.android.providers.settings");
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void setLong(String p1, long p2, int p3){
	String v3 = Long.toString(p2);
	if (p3 == -9999) {
		Preconditions.checkArgument(, "cannot store lock settings for FRP user");
		LockSettingsStorage.writeKeyValue(p1, v3, p3);
		boolean v7 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v7 == 0) {
			return;
		}
	}
}
This is path 3 for the API with depth 2:
public void setLong(String p1, long p2, int p3){
	String v3 = Long.toString(p2);
	if (p3 == -9999) {
		Preconditions.checkArgument(, "cannot store lock settings for FRP user");
		LockSettingsStorage.writeKeyValue(p1, v3, p3);
		boolean v7 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v7 == 0) {
			BackupManager.dataChanged("com.android.providers.settings");
			return;
		}
	}
}

and the following sink code:
['String v3 = Long.toString(p2);\nLockSettingsStorage.writeKeyValue(p1, v3, p3);']

The method setLong has the following similar APIs:

- API Name: setBoolean(Ljava/lang/String;ZI)V with Similarity Score: 0.9195499420166016
  - Access Control Level: NONE and the following code:
LockSettingsStorage.writeKeyValue(p1, , p3);

- API Name: getLong(Ljava/lang/String;JI)J with Similarity Score: 0.8946880102157593
  - Access Control Level: NONE and the following code:
String v5 = LockSettingsStorage.readKeyValue(, 0, p3);
long v7 = Long.parseLong(v3);
return v2;

