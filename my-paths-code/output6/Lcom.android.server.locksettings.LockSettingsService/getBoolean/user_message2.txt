The method getBoolean has the following code snippet:

This is path 1 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p1 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = ;
						if (v4 == 0) {
							long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
							long v6 = v7;
							byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);
							if (v9 != 0) {
								int v8 = -1;
								if (v8 == 2) {
									long v17 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
									int v16 = v17;
									boolean v19 = LockPatternUtils.isQualityAlphabeticPassword(v16);
									if (v19 == 0) {
										boolean v20 = LockPatternUtils.isQualityNumericPin(v16);
										if (v20 == 0) {
											int v18 = 3;
											int v3 = v18;
											if (v3 != 1) {
												return ;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p1 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					boolean v4 = ;
					if (v4 == 0) {
						long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
						long v6 = v7;
						byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);
						if (v9 != 0) {
							int v8 = -1;
							if (v8 == 2) {
								long v17 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
								int v16 = v17;
								boolean v19 = LockPatternUtils.isQualityAlphabeticPassword(v16);
								if (v19 == 0) {
									boolean v20 = LockPatternUtils.isQualityNumericPin(v16);
									if (v20 == 0) {
										int v18 = 3;
										int v3 = v18;
										if (v3 != 1) {
											return ;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p1 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = ;
						if (v4 == 0) {
							long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
							long v6 = v7;
							byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);
							if (v9 != 0) {
								int v8 = -1;
								if (v8 == 2) {
									long v17 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
									int v16 = v17;
									boolean v19 = LockPatternUtils.isQualityAlphabeticPassword(v16);
									if (v19 == 0) {
										boolean v20 = LockPatternUtils.isQualityNumericPin(v16);
										if (v20 == 0) {
											int v18 = 3;
											int v3 = v18;
											if (v3 != 1) {
												return ;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();\nlong v7 = LockSettingsService.getLong("sp-handle", 0, p1);\nbyte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);', 'boolean v19 = LockPatternUtils.isQualityAlphabeticPassword(v16);\nboolean v20 = LockPatternUtils.isQualityNumericPin(v16);']

The method getBoolean has the following similar APIs:

- API Name: getCredentialType(I)I with Similarity Score: 0.845582902431488
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);

- API Name: getLong(Ljava/lang/String;JI)J with Similarity Score: 0.7942473292350769
  - Access Control Level: NONE and the following code:
String v5 = LockSettingsStorage.readKeyValue(, 0, p3);
long v7 = Long.parseLong(v3);
return v2;

