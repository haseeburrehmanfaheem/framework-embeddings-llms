The method setSnapshotCreatedPendingIntent has the following code snippet:

This is path 1 for the API with depth 2:
public void setSnapshotCreatedPendingIntent(PendingIntent p1){
	int v3 = Binder.getCallingUid();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append("Registered listener for agent with uid ");
	StringBuilder v8 = v5.append(v3);
	String v9 = v5.toString();
	int v10 = Log.i("RecoverySnapshotLstnrs", v9);
	this.mAgentIntents.put(v3, p1);
	Integer v12 = Integer.valueOf(v3);
	boolean v13 = this.mAgentsWithPendingSnapshots.contains(v12);
	if (v13 == 0) {
		int v14 = Log.i("RecoverySnapshotLstnrs", "Snapshot already created for agent. Immediately triggering intent.");
		RecoverySnapshotListenersStorage.tryToSendIntent(v3, p1);
		return;
	}
}
This is path 2 for the API with depth 2:
public void setSnapshotCreatedPendingIntent(PendingIntent p1){
	int v3 = Binder.getCallingUid();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append("Registered listener for agent with uid ");
	StringBuilder v8 = v5.append(v3);
	String v9 = v5.toString();
	int v10 = Log.i("RecoverySnapshotLstnrs", v9);
	this.mAgentIntents.put(v3, p1);
	Integer v12 = Integer.valueOf(v3);
	boolean v13 = this.mAgentsWithPendingSnapshots.contains(v12);
	if (v13 == 0) {
		return;
	}
}

and the following sink code:
['int v3 = Binder.getCallingUid();\nthis.mAgentIntents.put(v3, p1);\nInteger v12 = Integer.valueOf(v3);\nboolean v13 = this.mAgentsWithPendingSnapshots.contains(v12);\nRecoverySnapshotListenersStorage.tryToSendIntent(v3, p1);', 'int v3 = Binder.getCallingUid();\nthis.mAgentIntents.put(v3, p1);\nInteger v12 = Integer.valueOf(v3);\nboolean v13 = this.mAgentsWithPendingSnapshots.contains(v12);']

The method setSnapshotCreatedPendingIntent has the following similar APIs:

- API Name: releaseSession(Landroid/os/IBinder;I)V with Similarity Score: 0.7197484970092773
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInteractiveAppManagerService$SessionState v10 = TvInteractiveAppManagerService.getSessionStateLocked(p2, p3, p4);
ITvInteractiveAppSession v12 = TvInteractiveAppManagerService$SessionState.-$$Nest$fgetmSession(v10);
if (v12 == 0) { ... }
v16.release();

- API Name: createBiInteractiveApp(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V with Similarity Score: 0.714620053768158
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInteractiveAppManagerService$UserState v10 = TvInteractiveAppManagerService.getOrCreateUserStateLocked(p4);
TvInteractiveAppManagerService$SessionState v11 = TvInteractiveAppManagerService.getSessionStateLocked(p2, p3, v10);
ITvInteractiveAppSession v12 = TvInteractiveAppManagerService$SessionState.-$$Nest$fgetmSession(p2);
v12.createBiInteractiveApp(p2, p3);

