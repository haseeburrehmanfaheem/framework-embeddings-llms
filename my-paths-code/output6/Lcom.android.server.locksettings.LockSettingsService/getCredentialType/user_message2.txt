The method getCredentialType has the following code snippet:

This is path 1 for the API with depth 2:
public int getCredentialType(int p1){
	if (p1 != -9999) {
		if (p1 != -9999) {
			LockSettingsStorage$PersistentData v4 = this.mStorage.readPersistentDataBlock();
			if (LockSettingsStorage$PersistentData.type == 1) {
				if (LockSettingsStorage$PersistentData.type != 2) {
					boolean v3 = ;
					if (v3 == 0) {
						long v6 = LockSettingsService.getLong("sp-handle", 0, p1);
						long v5 = v6;
						byte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);
						if (v8 != 0) {
							int v7 = -1;
							if (v7 == 2) {
								long v16 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
								int v15 = v16;
								boolean v18 = LockPatternUtils.isQualityAlphabeticPassword(v15);
								if (v18 == 0) {
									boolean v19 = LockPatternUtils.isQualityNumericPin(v15);
									if (v19 == 0) {
										int v17 = 3;
										int v2 = v17;
										return v2;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getCredentialType(int p1){
	if (p1 != -9999) {
		if (p1 != -9999) {
			LockSettingsStorage$PersistentData v4 = this.mStorage.readPersistentDataBlock();
			if (LockSettingsStorage$PersistentData.type == 1) {
				boolean v3 = ;
				if (v3 == 0) {
					long v6 = LockSettingsService.getLong("sp-handle", 0, p1);
					long v5 = v6;
					byte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);
					if (v8 != 0) {
						int v7 = -1;
						if (v7 == 2) {
							long v16 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
							int v15 = v16;
							boolean v18 = LockPatternUtils.isQualityAlphabeticPassword(v15);
							if (v18 == 0) {
								boolean v19 = LockPatternUtils.isQualityNumericPin(v15);
								if (v19 == 0) {
									int v17 = 3;
									int v2 = v17;
									return v2;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['long v6 = LockSettingsService.getLong("sp-handle", 0, p1);\nbyte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);']

The method getCredentialType has the following similar APIs:

- API Name: getBoolean(Ljava/lang/String;ZI)Z with Similarity Score: 0.845582902431488
  - Access Control Level: SYS_OR_SIG and the following code:
LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);

- API Name: verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse; with Similarity Score: 0.8011121153831482
  - Access Control Level: NONE and the following code:
boolean v19 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
long v20 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
IGateKeeperService v21 = LockSettingsService.getGateKeeperService();
SyntheticPasswordManager$AuthenticationResult v22 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v21, v20, p1, p2, p3);

