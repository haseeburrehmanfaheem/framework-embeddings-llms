The method deleteStoredMessage has the following code snippet:

This is path 1 for the API with depth 2:
public boolean deleteStoredMessage(String p1, Uri p2){
	if (v3 == 0) {
		IMms v6 = MmsServiceBroker.getOrConnectService();
		if (v6 == 0) {
			IMms v5 = v6;
			IMms v4 = v5;
			boolean v7 = v4.deleteStoredMessage(p1, p2);
			return v7;
		}
	}
}
This is path 2 for the API with depth 2:
public boolean deleteStoredMessage(String p1, Uri p2){
	if (v3 == 0) {
		IMms v6 = MmsServiceBroker.getOrConnectService();
		if (v6 == 0) {
			IMms v5 = this.mServiceStubForFailure;
			IMms v4 = v5;
			boolean v7 = v4.deleteStoredMessage(p1, p2);
			return v7;
		}
	}
}

and the following sink code:
['IMms v6 = MmsServiceBroker.getOrConnectService();\nIMms v4 = v5;\nboolean v7 = v4.deleteStoredMessage(p1, p2);\nreturn v7;']

The method deleteStoredMessage has the following similar APIs:

- API Name: deleteStoredConversation(Ljava/lang/String;J)Z with Similarity Score: 0.9111037254333496
  - Access Control Level: SYS_OR_SIG and the following code:
IMms v6 = MmsServiceBroker.getOrConnectService();
IMms v5 = v6;
IMms v4 = v5;
boolean v7 = v4.deleteStoredConversation(p1, p2);
return v7;

- API Name: sendStoredMessage(ILjava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;)V with Similarity Score: 0.8914412260055542
  - Access Control Level: SYS_OR_SIG and the following code:
IMms v6 = MmsServiceBroker.getOrConnectService();
if (v6 == 0) {
IMms v5 = v6;
IMms v4 = v5;
v4.sendStoredMessage(p1, p2, p3, p4, p5);

