This is path 1 for the API with depth 2:
public GameModeInfo getGameModeInfo(String p1, int p2){
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			Integer v8 = Integer.valueOf(v3);
			boolean v9 = this.mSettings.containsKey(v8);
			if (v9 != 0) {
				Integer v10 = Integer.valueOf(v3);
				Object v11 = this.mSettings.get(v10);
				boolean v13 = this.mGameModes.containsKey(p1);
				if (v13 == 0) {
					Object v14 = this.mGameModes.get(p1);
					int v15 = v14.intValue();
					int v12 = v15;
					int v7 = v12;
					Object v17 = this.mOverrideConfigs.get(p1);
					if (v17 != 0) {
						Object v18 = this.mConfigs.get(p1);
						if ( != 0) {
							int v20 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
							int v21 = Integer.bitCount(v20);
							[I v22 = new [I(v21);
							int v23 = Integer.highestOneBit(v20);
							int v24 = Integer.numberOfTrailingZeros(v23);
							if ( > v24) {
								[I v19 = v22;
								[I v16 = v19;
								GameModeInfo v25 = new GameModeInfo(v7,v16);
								return v25;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public GameModeInfo getGameModeInfo(String p1, int p2){
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	boolean v5 = ;
	if (v5 != 0) {
		Integer v8 = Integer.valueOf(v3);
		boolean v9 = this.mSettings.containsKey(v8);
		if (v9 != 0) {
			Integer v10 = Integer.valueOf(v3);
			Object v11 = this.mSettings.get(v10);
			boolean v13 = this.mGameModes.containsKey(p1);
			if (v13 == 0) {
				Object v14 = this.mGameModes.get(p1);
				int v15 = v14.intValue();
				int v12 = v15;
				int v7 = v12;
				Object v17 = this.mOverrideConfigs.get(p1);
				if (v17 != 0) {
					Object v18 = this.mConfigs.get(p1);
					if ( != 0) {
						int v20 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
						int v21 = Integer.bitCount(v20);
						[I v22 = new [I(v21);
						int v23 = Integer.highestOneBit(v20);
						int v24 = Integer.numberOfTrailingZeros(v23);
						if ( > v24) {
							[I v19 = v22;
							[I v16 = v19;
							GameModeInfo v25 = new GameModeInfo(v7,v16);
							return v25;
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public GameModeInfo getGameModeInfo(String p1, int p2){
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			Integer v8 = Integer.valueOf(v3);
			boolean v9 = this.mSettings.containsKey(v8);
			if (v9 != 0) {
				Integer v10 = Integer.valueOf(v3);
				Object v11 = this.mSettings.get(v10);
				boolean v13 = this.mGameModes.containsKey(p1);
				if (v13 == 0) {
					int v12 = 0;
					int v7 = v12;
					Object v15 = this.mOverrideConfigs.get(p1);
					if (v15 != 0) {
						Object v16 = this.mConfigs.get(p1);
						if ( != 0) {
							int v18 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
							int v19 = Integer.bitCount(v18);
							[I v20 = new [I(v19);
							int v21 = Integer.highestOneBit(v18);
							int v22 = Integer.numberOfTrailingZeros(v21);
							if ( > v22) {
								[I v17 = v20;
								[I v14 = v17;
								GameModeInfo v23 = new GameModeInfo(v7,v14);
								return v23;
							}
						}
					}
				}
			}
		}
	}
}
