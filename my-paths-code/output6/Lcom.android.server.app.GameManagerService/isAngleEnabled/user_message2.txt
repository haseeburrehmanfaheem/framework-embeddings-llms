The method isAngleEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isAngleEnabled(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = ActivityManager.handleIncomingUser(v2, v3, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			boolean v7 = ;
			if (v7 == 0) {
				Integer v11 = Integer.valueOf(v4);
				boolean v12 = this.mSettings.containsKey(v11);
				if (v12 != 0) {
					int v10 = 0;
					int v1 = v10;
					if (v1 != 0) {
						Object v22 = this.mConfigs.get(p1);
						if (v22 != 0) {
							GameManagerService$GamePackageConfiguration$GameModeConfiguration v23 = v22.getGameModeConfiguration(v1);
							if (v23 != 0) {
								boolean v24 = v23.getUseAngle();
								return v24;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isAngleEnabled(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = ActivityManager.handleIncomingUser(v2, v3, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			boolean v7 = ;
			if (v7 == 0) {
				Integer v11 = Integer.valueOf(v4);
				boolean v12 = this.mSettings.containsKey(v11);
				if (v12 != 0) {
					int v10 = 0;
					int v1 = v10;
					if (v1 != 0) {
						Object v22 = this.mConfigs.get(p1);
						if (v22 != 0) {
							GameManagerService$GamePackageConfiguration$GameModeConfiguration v23 = v22.getGameModeConfiguration(v1);
							if (v23 != 0) {
								return 0;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean isAngleEnabled(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = ActivityManager.handleIncomingUser(v2, v3, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			int v8 = this.mPackageManager.getPackageUidAsUser(p1, v4);
			boolean v7 = ;
			if (v7 == 0) {
				Integer v10 = Integer.valueOf(v4);
				boolean v11 = this.mSettings.containsKey(v10);
				if (v11 != 0) {
					int v9 = 0;
					int v1 = v9;
					if (v1 != 0) {
						Object v21 = this.mConfigs.get(p1);
						if (v21 != 0) {
							GameManagerService$GamePackageConfiguration$GameModeConfiguration v22 = v21.getGameModeConfiguration(v1);
							if (v22 != 0) {
								boolean v23 = v22.getUseAngle();
								return v23;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);\nObject v22 = this.mConfigs.get(p1);\nGameManagerService$GamePackageConfiguration$GameModeConfiguration v23 = v22.getGameModeConfiguration(v1);\nboolean v24 = v23.getUseAngle();\nreturn v24;', 'ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);\nObject v21 = this.mConfigs.get(p1);\nGameManagerService$GamePackageConfiguration$GameModeConfiguration v22 = v21.getGameModeConfiguration(v1);\nboolean v23 = v22.getUseAngle();\nreturn v23;']

The method isAngleEnabled has the following similar APIs:

- API Name: getGameModeInfo(Ljava/lang/String;I)Landroid/app/GameModeInfo; with Similarity Score: 0.9042191505432129
  - Access Control Level: SYS_OR_SIG and the following code:
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
Integer v8 = Integer.valueOf(v3);
boolean v9 = this.mSettings.containsKey(v8);
Object v11 = this.mSettings.get(v10);
int v20 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
[I v22 = new [I(v21);
GameModeInfo v25 = new GameModeInfo(v7,v16);
return v25;

- API Name: getGameModeInfo(Ljava/lang/String;I)Landroid/app/GameModeInfo; with Similarity Score: 0.9029505848884583
  - Access Control Level: SYS_OR_SIG and the following code:
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
Integer v8 = Integer.valueOf(v3);
boolean v9 = this.mSettings.containsKey(v8);
Object v11 = this.mSettings.get(v10);
int v20 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
[I v22 = new [I(v21);
GameModeInfo v25 = new GameModeInfo(v7,v16);
return v25;

