This is path 1 for the API with depth 2:
public void loadNanoAppOnHub(int p1, IContextHubTransactionCallback p2, NanoAppBinary p3){
	if (this.mContextHubWrapper != 0) {
		Integer v4 = Integer.valueOf(p1);
		boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
		boolean v3 = v5;
		if (v3 != 0) {
			StringBuilder v6 = new StringBuilder();
			StringBuilder v8 = v6.append("Cannot start ");
			if (0 == 0) {
				String v9 = ;
				StringBuilder v10 = v6.append(v9);
				StringBuilder v11 = v6.append(" transaction for invalid hub ID ");
				StringBuilder v12 = v6.append(p1);
				String v13 = v6.toString();
				int v14 = Log.e("ContextHubService", v13);
				p2.onTransactionComplete(2);
				int v16 = Log.e("ContextHubService", "RemoteException while calling onTransactionComplete", caughtException);
				boolean v2 = 0;
				if (v2 != 0) {
					if (p3 != 0) {
						String v17 = p0.getCallingPackageName();
						ContextHubTransactionManager$1 v19 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v20,0,v21,v17,p1,p3,p2);
						int v20 = this.mNextAvailableId.getAndIncrement();
						long v21 = this.mNanoAppId;
						ContextHubServiceTransaction v18 = v19;
						int v24 = this.mTransactionQueue.size();
						if (v24 == 10000) {
							boolean v25 = this.mTransactionQueue.add(v18);
							ContextHubTransactionManager$TransactionRecord v26 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v27);
							String v27 = v18.toString();
							boolean v29 = this.mTransactionRecordDeque.add(v26);
							int v30 = this.mTransactionQueue.size();
							if (v30 != 1) {
								if ( == 0) {
									boolean v32 = this.mTransactionQueue.isEmpty();
									if (v32 != 0) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void loadNanoAppOnHub(int p1, IContextHubTransactionCallback p2, NanoAppBinary p3){
	if (this.mContextHubWrapper != 0) {
		Integer v4 = Integer.valueOf(p1);
		boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
		boolean v3 = v5;
		if (v3 != 0) {
			StringBuilder v6 = new StringBuilder();
			StringBuilder v8 = v6.append("Cannot start ");
			if (0 == 0) {
				String v9 = ;
				StringBuilder v10 = v6.append(v9);
				StringBuilder v11 = v6.append(" transaction for invalid hub ID ");
				StringBuilder v12 = v6.append(p1);
				String v13 = v6.toString();
				int v14 = Log.e("ContextHubService", v13);
				p2.onTransactionComplete(2);
				boolean v2 = 0;
				if (v2 != 0) {
					if (p3 != 0) {
						String v16 = p0.getCallingPackageName();
						ContextHubTransactionManager$1 v18 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v19,0,v20,v16,p1,p3,p2);
						int v19 = this.mNextAvailableId.getAndIncrement();
						long v20 = this.mNanoAppId;
						ContextHubServiceTransaction v17 = v18;
						int v23 = this.mTransactionQueue.size();
						if (v23 == 10000) {
							boolean v24 = this.mTransactionQueue.add(v17);
							ContextHubTransactionManager$TransactionRecord v25 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v26);
							String v26 = v17.toString();
							boolean v28 = this.mTransactionRecordDeque.add(v25);
							int v29 = this.mTransactionQueue.size();
							if (v29 != 1) {
								if ( == 0) {
									boolean v31 = this.mTransactionQueue.isEmpty();
									if (v31 != 0) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void loadNanoAppOnHub(int p1, IContextHubTransactionCallback p2, NanoAppBinary p3){
	if (this.mContextHubWrapper != 0) {
		Integer v4 = Integer.valueOf(p1);
		boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
		boolean v3 = v5;
		if (v3 != 0) {
			StringBuilder v6 = new StringBuilder();
			StringBuilder v8 = v6.append("Cannot start ");
			if (0 == 0) {
				String v9 = ;
				StringBuilder v10 = v6.append(v9);
				StringBuilder v11 = v6.append(" transaction for invalid hub ID ");
				StringBuilder v12 = v6.append(p1);
				String v13 = v6.toString();
				int v14 = Log.e("ContextHubService", v13);
				p2.onTransactionComplete(2);
				int v16 = Log.e("ContextHubService", "RemoteException while calling onTransactionComplete", caughtException);
				boolean v2 = 0;
				if (v2 != 0) {
					if (p3 != 0) {
						String v17 = p0.getCallingPackageName();
						ContextHubTransactionManager$1 v19 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v20,0,v21,v17,p1,p3,p2);
						int v20 = this.mNextAvailableId.getAndIncrement();
						long v21 = this.mNanoAppId;
						ContextHubServiceTransaction v18 = v19;
						int v24 = this.mTransactionQueue.size();
						if (v24 == 10000) {
							boolean v25 = this.mTransactionQueue.add(v18);
							ContextHubTransactionManager$TransactionRecord v26 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v27);
							String v27 = v18.toString();
							boolean v29 = this.mTransactionRecordDeque.add(v26);
							int v30 = this.mTransactionQueue.size();
							if (v30 != 1) {
								if ( == 0) {
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
