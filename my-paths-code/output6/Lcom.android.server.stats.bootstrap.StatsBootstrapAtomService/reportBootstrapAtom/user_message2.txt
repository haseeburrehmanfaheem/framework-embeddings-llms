The method reportBootstrapAtom has the following code snippet:

This is path 1 for the API with depth 0:
public void reportBootstrapAtom(StatsBootstrapAtom p1){
	if (StatsBootstrapAtom.atomId < 1) {
		if (StatsBootstrapAtom.atomId < 10000) {
			StatsEvent$Builder v1 = StatsEvent.newBuilder();
			StatsEvent$Builder v2 = v1.setAtomId(StatsBootstrapAtom.atomId);
			if ( >= StatsBootstrapAtom.values.length) {
				StatsEvent$Builder v3 = v2.usePooledBuffer();
				StatsEvent v4 = v3.build();
				StatsLog.write(v4);
				return;
			}
		}
	}
}

and the following sink code:
['StatsEvent$Builder v1 = StatsEvent.newBuilder();\nStatsEvent$Builder v2 = v1.setAtomId(StatsBootstrapAtom.atomId);\nif ( >= StatsBootstrapAtom.values.length) {\n  StatsEvent$Builder v3 = v2.usePooledBuffer();\n  StatsEvent v4 = v3.build();\n  StatsLog.write(v4);']

The method reportBootstrapAtom has the following similar APIs:

- API Name: shareData(Landroid/view/contentcapture/DataShareRequest;Landroid/view/contentcapture/IDataShareWriteAdapter;)V with Similarity Score: 0.8141064047813416
  - Access Control Level: NONE and the following code:
StatsEvent$Builder v27 = StatsEvent.newBuilder();
StatsEvent$Builder v28 = v27.setAtomId(207);
StatsEvent$Builder v29 = v27.writeInt(p1);
if (80 != 207) {
StatsEvent$Builder v30 = v27.addBooleanAnnotation(1, 1);
StatsEvent$Builder v31 = v27.writeString(p2);
StatsEvent v36 = v27.build();
StatsLog.write(v36);

- API Name: startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V with Similarity Score: 0.7903985977172852
  - Access Control Level: SYS_OR_SIG and the following code:
StatsEvent$Builder v18 = StatsEvent.newBuilder();
StatsEvent$Builder v19 = v18.setAtomId(103);
StatsEvent$Builder v20 = v18.writeInt(this.mEventId);
StatsEvent$Builder v21 = v18.writeString(this.mAdminPackageName);
StatsEvent v27 = v18.build();
StatsLog.write(v27);

