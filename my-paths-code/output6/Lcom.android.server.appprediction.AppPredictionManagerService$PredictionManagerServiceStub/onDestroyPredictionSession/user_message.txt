This is path 1 for the API with depth 2:
public void onDestroyPredictionSession(AppPredictionSessionId p1){
	AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda6 v1 = new AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda6(p1);
	if (v10 == 0) {
		ServiceNameResolver v11 = AbstractMasterSystemService.mServiceNameResolver;
		boolean v12 = v11.isTemporary(v8);
		if (v12 != 0) {
			ActivityTaskManagerInternal v13 = this.mActivityTaskManagerInternal;
			int v14 = Binder.getCallingUid();
			boolean v15 = v13.isCallerRecents(v14);
			if (v15 != 0) {
				long v16 = Binder.clearCallingIdentity();
				Object v17 = AbstractMasterSystemService.mLock;
				AbstractPerUserSystemService v19 = this.this$0.getServiceForUserLocked(v8);
				AbstractPerUserSystemService v18 = v19;
				v1.accept(v18);
				Binder.restoreCallingIdentity(v16);
				return;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void onDestroyPredictionSession(AppPredictionSessionId p1){
	AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda6 v1 = new AppPredictionManagerService$PredictionManagerServiceStub$$ExternalSyntheticLambda6(p1);
	long v17 = Binder.clearCallingIdentity();
	Object v18 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v20 = this.this$0.getServiceForUserLocked(v8);
	AbstractPerUserSystemService v19 = v20;
	v1.accept(v19);
	Binder.restoreCallingIdentity(v17);
	return;
}
