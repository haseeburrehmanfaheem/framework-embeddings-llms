The method unregisterVcnStatusCallback has the following code snippet:

This is path 1 for the API with depth 0:
public void unregisterVcnStatusCallback(IVcnStatusCallback p1){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = Objects.requireNonNull(p1, "callback must not be null");
	IBinder v3 = p1.asBinder();
	Object v4 = this.mRegisteredStatusCallbacks.remove(v3);
	if (v4 == 0) {
		boolean v5 = v3.unlinkToDeath(v4, 0);
		Binder.restoreCallingIdentity(v1);
		return;
	}
}
This is path 2 for the API with depth 0:
public void unregisterVcnStatusCallback(IVcnStatusCallback p1){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = Objects.requireNonNull(p1, "callback must not be null");
	IBinder v3 = p1.asBinder();
	Object v4 = this.mRegisteredStatusCallbacks.remove(v3);
	if (v4 == 0) {
		Binder.restoreCallingIdentity(v1);
		return;
	}
}

and the following sink code:
['IBinder v3 = p1.asBinder();\nObject v4 = this.mRegisteredStatusCallbacks.remove(v3);']

The method unregisterVcnStatusCallback has the following similar APIs:

- API Name: unregisterListener(Landroid/os/storage/IStorageEventListener;)V with Similarity Score: 0.7029603719711304
  - Access Control Level: NONE and the following code:
boolean v2 = this.mCallbacks.unregister(p1);
return;

