The method registerVcnStatusCallback has the following code snippet:

This is path 1 for the API with depth 1:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	if (v12 != 0) {
		Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
		Object v14 = this.mConfigs.get(p1);
		Object v15 = this.mVcns.get(p1);
		if (v15 != 0) {
			if (v14 == 0) {
				if (v16 != 0) {
					if (v15 != 0) {
						if ( == 2) {
							if ( != 3) {
								VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged();
								Binder.restoreCallingIdentity(v2);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	if (v12 != 0) {
		Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
		Object v14 = this.mConfigs.get(p1);
		Object v15 = this.mVcns.get(p1);
		if (v15 != 0) {
			if (v14 == 0) {
				if (v16 != 0) {
					if (v15 != 0) {
						VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged();
						Binder.restoreCallingIdentity(v2);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);\nv8.linkToDeath(v9, 0);\nObject v13 = this.mRegisteredStatusCallbacks.put(v8, v9);', 'VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged();']

The method registerVcnStatusCallback has the following similar APIs:

- API Name: registerCallbackWithEventMask(Landroid/hardware/display/IDisplayManagerCallback;J)V with Similarity Score: 0.7491801977157593
  - Access Control Level: NONE and the following code:
DisplayManagerService$CallbackRecord v7 = new DisplayManagerService$CallbackRecord(DisplayManagerService,p3,p4,p2,p5);
IBinder v9 = p2.asBinder();
v9.linkToDeath(v7, 0);
this.mCallbacks.put(p3, v7);

