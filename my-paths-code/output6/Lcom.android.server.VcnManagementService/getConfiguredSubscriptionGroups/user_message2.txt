The method getConfiguredSubscriptionGroups has the following code snippet:

This is path 1 for the API with depth 2:
public List getConfiguredSubscriptionGroups(String p1){
	int v7 = Binder.getCallingUid();
	int v6 = v7;
	if (v6 == 1000) {
		UserHandle v8 = UserHandle.getUserHandleForUid(v6);
		boolean v9 = v8.isSystem();
		if (v9 == 0) {
			ArrayList v10 = new ArrayList();
			Set v12 = this.mConfigs.keySet();
			Iterator v13 = v12.iterator();
			boolean v14 = v13.hasNext();
			if (v14 == 0) {
				return v10;
			}
		}
	}
}

and the following sink code:
['int v7 = Binder.getCallingUid();\nUserHandle v8 = UserHandle.getUserHandleForUid(v6);\nboolean v9 = v8.isSystem();\nArrayList v10 = new ArrayList();\nSet v12 = this.mConfigs.keySet();']

The method getConfiguredSubscriptionGroups has the following similar APIs:

- API Name: setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V with Similarity Score: 0.7778492569923401
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = Binder.getCallingPid();
int v5 = Binder.getCallingUid();
if (this.mThread == 0) {
IApplicationThread v21 = this.mThread;
IBinder v22 = v21.asBinder();

- API Name: clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V with Similarity Score: 0.7669388055801392
  - Access Control Level: NONE and the following code:
int v14 = this.mDeps.getBinderCallingUid();
UserHandle v15 = UserHandle.getUserHandleForUid(v14);
boolean v16 = v15.isSystem();
Object v19 = this.mConfigs.get(p1);
String v20 = v19.getProvisioningPackageName();
boolean v21 = p2.equals(v20);
VcnManagementService$$ExternalSyntheticLambda11 v28 = new VcnManagementService$$ExternalSyntheticLambda11(v26, v25, p1);
int v39 = v36.checkCarrierPrivilegesForPackage(p2);

