The method releaseVirtualDisplay has the following code snippet:

This is path 1 for the API with depth 2:
public void releaseVirtualDisplay(IVirtualDisplayCallback p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v2 = p1.asBinder();
	if (this.mVirtualDisplayAdapter != 0) {
		DisplayDevice v5 = this.mVirtualDisplayAdapter.releaseVirtualDisplayLocked(p2);
		if (v5 == 0) {
			this.mDisplayDeviceRepo.onDisplayDeviceEvent(v5, 3);
			Binder.restoreCallingIdentity(v1);
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void releaseVirtualDisplay(IVirtualDisplayCallback p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v2 = p1.asBinder();
	if (this.mVirtualDisplayAdapter != 0) {
		DisplayDevice v5 = this.mVirtualDisplayAdapter.releaseVirtualDisplayLocked(p2);
		if (v5 == 0) {
			Binder.restoreCallingIdentity(v1);
			return;
		}
	}
}

and the following sink code:
['DisplayDevice v5 = this.mVirtualDisplayAdapter.releaseVirtualDisplayLocked(p2);\nif (v5 == 0) {']

The method releaseVirtualDisplay has the following similar APIs:

- API Name: setVirtualDisplayState(Landroid/hardware/display/IVirtualDisplayCallback;Z)V with Similarity Score: 0.8643079996109009
  - Access Control Level: NONE and the following code:
if (this.mVirtualDisplayAdapter != 0) {
this.mVirtualDisplayAdapter.setVirtualDisplayStateLocked(p2, p3);

- API Name: resizeVirtualDisplay(Landroid/hardware/display/IVirtualDisplayCallback;III)V with Similarity Score: 0.813305675983429
  - Access Control Level: NONE and the following code:
if (this.mVirtualDisplayAdapter != 0) {
this.mVirtualDisplayAdapter.resizeVirtualDisplayLocked(p2, p3, p4, p5);

