This is path 1 for the API with depth 2:
public void setUserDisabledHdrTypes([I p1){
	long v3 = Binder.clearCallingIdentity();
	if (p2 != 0) {
		boolean v6 = DisplayManagerService.isSubsetOf(Display$HdrCapabilities.HDR_TYPES, p2);
		if (v6 != 0) {
			Arrays.sort(p2);
			boolean v8 = Arrays.equals(this.mUserDisabledHdrTypes, p2);
			if (v8 == 0) {
				Binder.restoreCallingIdentity(v3);
				return;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void setUserDisabledHdrTypes([I p1){
	long v3 = Binder.clearCallingIdentity();
	if (p2 != 0) {
		boolean v6 = DisplayManagerService.isSubsetOf(Display$HdrCapabilities.HDR_TYPES, p2);
		if (v6 != 0) {
			Arrays.sort(p2);
			boolean v8 = Arrays.equals(this.mUserDisabledHdrTypes, p2);
			if (v8 == 0) {
				if (p2.length == 0) {
					IntStream v9 = Arrays.stream(p2);
					Stream v10 = v9.boxed();
					Object v11 = v10.toArray();
					String v12 = TextUtils.join(",", v11);
					ContentResolver v13 = this.mContext.getContentResolver();
					boolean v14 = Settings$Global.putString(v13, "user_disabled_hdr_formats", );
					this.mUserDisabledHdrTypes = p2;
					if (this.mAreUserDisabledHdrTypesAllowed != 0) {
						DisplayManagerService$$ExternalSyntheticLambda5 v15 = new DisplayManagerService$$ExternalSyntheticLambda5(DisplayManagerService,p2);
						this.mLogicalDisplayMapper.forEachLocked(v15);
						Binder.restoreCallingIdentity(v3);
						return;
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void setUserDisabledHdrTypes([I p1){
	long v3 = Binder.clearCallingIdentity();
	if (p2 != 0) {
		boolean v6 = DisplayManagerService.isSubsetOf(Display$HdrCapabilities.HDR_TYPES, p2);
		if (v6 != 0) {
			Arrays.sort(p2);
			boolean v8 = Arrays.equals(this.mUserDisabledHdrTypes, p2);
			if (v8 == 0) {
				if (p2.length == 0) {
					ContentResolver v9 = this.mContext.getContentResolver();
					boolean v10 = Settings$Global.putString(v9, "user_disabled_hdr_formats", );
					this.mUserDisabledHdrTypes = p2;
					if (this.mAreUserDisabledHdrTypesAllowed != 0) {
						DisplayManagerService$$ExternalSyntheticLambda5 v11 = new DisplayManagerService$$ExternalSyntheticLambda5(DisplayManagerService,p2);
						this.mLogicalDisplayMapper.forEachLocked(v11);
						Binder.restoreCallingIdentity(v3);
						return;
					}
				}
			}
		}
	}
}
