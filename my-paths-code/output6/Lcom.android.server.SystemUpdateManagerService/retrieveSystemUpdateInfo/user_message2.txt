The method retrieveSystemUpdateInfo has the following code snippet:

This is path 1 for the API with depth 2:
public Bundle retrieveSystemUpdateInfo(){
	if (v2 == -1) {
		File v7 = this.mFile.getBaseFile();
		if ( != 0) {
			int v11 = .getInt("version", -1);
			if (v11 != -1) {
				int v12 = .getInt("uid", -1);
				if (v12 != -1) {
					int v13 = .getInt("boot-count", -1);
					if (v13 == -1) {
						ContentResolver v15 = this.mContext.getContentResolver();
						int v16 = Settings$Global.getInt(v15, "boot_count", 0);
						int v14 = v16;
						if (v13 == v14) {
							PersistableBundle v17 = .getPersistableBundle("info-bundle");
							if (v17 != 0) {
								int v18 = v17.getInt("status", 0);
								if (v18 != 0) {
									boolean v21 = this.mFile.exists();
									if (v21 == 0) {
										this.mFile.delete();
										this.mLastStatus = 0;
										this.mLastUid = -1;
										Bundle v24 = new Bundle();
										v24.putInt("status", 0);
										Bundle v20 = v24;
										Bundle v3 = v20;
										return v3;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public Bundle retrieveSystemUpdateInfo(){
	if (v2 == -1) {
		File v7 = this.mFile.getBaseFile();
		if ( != 0) {
			int v11 = .getInt("version", -1);
			if (v11 != -1) {
				int v12 = .getInt("uid", -1);
				if (v12 != -1) {
					int v13 = .getInt("boot-count", -1);
					if (v13 == -1) {
						ContentResolver v15 = this.mContext.getContentResolver();
						int v16 = Settings$Global.getInt(v15, "boot_count", 0);
						int v14 = v16;
						if (v13 == v14) {
							PersistableBundle v17 = .getPersistableBundle("info-bundle");
							if (v17 != 0) {
								boolean v20 = this.mFile.exists();
								if (v20 == 0) {
									this.mFile.delete();
									this.mLastStatus = 0;
									this.mLastUid = -1;
									Bundle v23 = new Bundle();
									v23.putInt("status", 0);
									Bundle v19 = v23;
									Bundle v3 = v19;
									return v3;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public Bundle retrieveSystemUpdateInfo(){
	if (v1 != -1) {
		File v6 = this.mFile.getBaseFile();
		if ( != 0) {
			int v10 = .getInt("version", -1);
			if (v10 != -1) {
				int v11 = .getInt("uid", -1);
				if (v11 != -1) {
					int v12 = .getInt("boot-count", -1);
					if (v12 == -1) {
						ContentResolver v14 = this.mContext.getContentResolver();
						int v15 = Settings$Global.getInt(v14, "boot_count", 0);
						int v13 = v15;
						if (v12 == v13) {
							PersistableBundle v16 = .getPersistableBundle("info-bundle");
							if (v16 != 0) {
								int v17 = v16.getInt("status", 0);
								if (v17 != 0) {
									boolean v20 = this.mFile.exists();
									if (v20 == 0) {
										this.mFile.delete();
										this.mLastStatus = 0;
										this.mLastUid = -1;
										Bundle v23 = new Bundle();
										v23.putInt("status", 0);
										Bundle v19 = v23;
										Bundle v2 = v19;
										return v2;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Bundle v24 = new Bundle();\nv24.putInt("status", 0);\nreturn v3;', 'this.mLastStatus = 0;\nthis.mLastUid = -1;']

The method retrieveSystemUpdateInfo has the following similar APIs:

- API Name: removeUser(I)Z with Similarity Score: 0.8274980783462524
  - Access Control Level: SYS_OR_SIG and the following code:
Bundle v28 = new Bundle();
boolean v30 = v21.getBoolean(v8, 0);

- API Name: removeUserWhenPossible(IZ)I with Similarity Score: 0.7967941761016846
  - Access Control Level: SYS_OR_SIG and the following code:
Bundle v22 = new Bundle(v17);

