This is path 1 for the API with depth 0:
public void onTcpSocketStatsEvent([I p1, [I p2, [I p3, [I p4, [I p5){
	if (p1.length != p2.length) {
		if (p1.length != p3.length) {
			if (p1.length != p4.length) {
				if (p1.length == p5.length) {
					int v1 = Log.e(this.TAG, "Mismatched lengths of TCP socket stats data arrays");
					return;
				}
			}
		}
	}
}

This is path 2 for the API with depth 0:
public void onTcpSocketStatsEvent([I p1, [I p2, [I p3, [I p4, [I p5){
	if (p1.length != p2.length) {
		if (p1.length != p3.length) {
			if (p1.length != p4.length) {
				if (p1.length == p5.length) {
					long v1 = System.currentTimeMillis();
					if ( >= p1.length) {
						return;
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 0:
public void onTcpSocketStatsEvent([I p1, [I p2, [I p3, [I p4, [I p5){
	if (p1.length != p2.length) {
		if (p1.length != p3.length) {
			if (p1.length != p4.length) {
				int v1 = Log.e(this.TAG, "Mismatched lengths of TCP socket stats data arrays");
				return;
			}
		}
	}
}

This is path 4 for the API with depth 0:
public void onTcpSocketStatsEvent([I p1, [I p2, [I p3, [I p4, [I p5){
	if (p1.length != p2.length) {
		if (p1.length != p3.length) {
			int v1 = Log.e(this.TAG, "Mismatched lengths of TCP socket stats data arrays");
			return;
		}
	}
}

This is path 5 for the API with depth 0:
public void onTcpSocketStatsEvent([I p1, [I p2, [I p3, [I p4, [I p5){
	if (p1.length != p2.length) {
		int v1 = Log.e(this.TAG, "Mismatched lengths of TCP socket stats data arrays");
		return;
	}
}
