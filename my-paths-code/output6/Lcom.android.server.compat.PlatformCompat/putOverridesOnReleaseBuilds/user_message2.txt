The method putOverridesOnReleaseBuilds has the following code snippet:

This is path 1 for the API with depth 2:
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v4 = v2.iterator();
	boolean v5 = v4.hasNext();
	if (v5 == 0) {
		Set v8 = CompatibilityOverrideConfig.overrides.keySet();
		Iterator v9 = v8.iterator();
		boolean v10 = v9.hasNext();
		if (v10 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v12 = new Overrides();
					List v14 = v12.getChangeOverrides();
					Collection v15 = this.mChanges.values();
					Iterator v16 = v15.iterator();
					boolean v17 = v16.hasNext();
					if (v17 == 0) {
						boolean v18 = this.mOverridesFile.exists();
						if (v18 == 0) {
							boolean v19 = this.mBackupOverridesFile.exists();
							if (v19 == 0) {
								boolean v20 = this.mOverridesFile.delete();
								boolean v21 = this.mOverridesFile.createNewFile();
								PrintWriter v22 = new PrintWriter(this.mOverridesFile);
								XmlWriter v24 = new XmlWriter(v22);
								XmlWriter.write(v24, v12);
								v22.close();
								boolean v28 = this.mBackupOverridesFile.delete();
								ChangeIdStateCache.invalidate();
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v4 = v2.iterator();
	boolean v5 = v4.hasNext();
	if (v5 == 0) {
		Set v8 = CompatibilityOverrideConfig.overrides.keySet();
		Iterator v9 = v8.iterator();
		boolean v10 = v9.hasNext();
		if (v10 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v12 = new Overrides();
					List v14 = v12.getChangeOverrides();
					Collection v15 = this.mChanges.values();
					Iterator v16 = v15.iterator();
					boolean v17 = v16.hasNext();
					if (v17 == 0) {
						boolean v18 = this.mOverridesFile.exists();
						if (v18 == 0) {
							boolean v19 = this.mBackupOverridesFile.exists();
							if (v19 == 0) {
								boolean v20 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
								if (v20 != 0) {
									boolean v21 = this.mOverridesFile.createNewFile();
									PrintWriter v22 = new PrintWriter(this.mOverridesFile);
									XmlWriter v24 = new XmlWriter(v22);
									XmlWriter.write(v24, v12);
									v22.close();
									boolean v28 = this.mBackupOverridesFile.delete();
									ChangeIdStateCache.invalidate();
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v4 = v2.iterator();
	boolean v5 = v4.hasNext();
	if (v5 == 0) {
		Set v8 = CompatibilityOverrideConfig.overrides.keySet();
		Iterator v9 = v8.iterator();
		boolean v10 = v9.hasNext();
		if (v10 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v12 = new Overrides();
					List v14 = v12.getChangeOverrides();
					Collection v15 = this.mChanges.values();
					Iterator v16 = v15.iterator();
					boolean v17 = v16.hasNext();
					if (v17 == 0) {
						boolean v18 = this.mOverridesFile.exists();
						if (v18 == 0) {
							boolean v19 = this.mOverridesFile.createNewFile();
							PrintWriter v20 = new PrintWriter(this.mOverridesFile);
							XmlWriter v22 = new XmlWriter(v20);
							XmlWriter.write(v22, v12);
							v20.close();
							boolean v26 = this.mBackupOverridesFile.delete();
							ChangeIdStateCache.invalidate();
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Overrides v12 = new Overrides();\nList v14 = v12.getChangeOverrides();\nPrintWriter v22 = new PrintWriter(this.mOverridesFile);\nXmlWriter v24 = new XmlWriter(v22);\nXmlWriter.write(v24, v12);', 'boolean v20 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);\nboolean v21 = this.mOverridesFile.createNewFile();', 'Set v2 = CompatibilityOverrideConfig.overrides.keySet();\nIterator v4 = v2.iterator();']

The method putOverridesOnReleaseBuilds has the following similar APIs:

- API Name: clearOverrideForTest(JLjava/lang/String;)Z with Similarity Score: 0.9812352061271667
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v17 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
boolean v18 = this.mOverridesFile.createNewFile();

- API Name: clearOverrideForTest(JLjava/lang/String;)Z with Similarity Score: 0.9789665937423706
  - Access Control Level: SYS_OR_SIG and the following code:
Overrides v9 = new Overrides();
List v11 = v9.getChangeOverrides();
PrintWriter v19 = new PrintWriter(this.mOverridesFile);
XmlWriter v21 = new XmlWriter(v19);
XmlWriter.write(v21, v9);

