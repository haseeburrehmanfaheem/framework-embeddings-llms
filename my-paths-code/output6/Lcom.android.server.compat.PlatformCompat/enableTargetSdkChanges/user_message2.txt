The method enableTargetSdkChanges has the following code snippet:

This is path 1 for the API with depth 2:
public int enableTargetSdkChanges(String p1, int p2){
	LongArray v4 = new LongArray();
	Collection v6 = this.mChanges.values();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		[J v9 = v4.toArray();
		[J v3 = v9;
		if ( >= v3.length) {
			if ( == 0) {
				if (this.mOverridesFile == 0) {
					if (this.mBackupOverridesFile != 0) {
						Overrides v11 = new Overrides();
						List v13 = v11.getChangeOverrides();
						Collection v14 = this.mChanges.values();
						Iterator v15 = v14.iterator();
						boolean v16 = v15.hasNext();
						if (v16 == 0) {
							boolean v17 = this.mOverridesFile.exists();
							if (v17 == 0) {
								boolean v18 = this.mBackupOverridesFile.exists();
								if (v18 == 0) {
									boolean v19 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
									if (v19 != 0) {
										boolean v20 = this.mOverridesFile.createNewFile();
										PrintWriter v21 = new PrintWriter(this.mOverridesFile);
										XmlWriter v23 = new XmlWriter(v21);
										XmlWriter.write(v23, v11);
										v21.close();
										boolean v27 = this.mBackupOverridesFile.delete();
										ChangeIdStateCache.invalidate();
										int v2 = v3.length;
										int v43 = UserHandle.getAppId(v33);
										long v45 = Binder.clearCallingIdentity();
										IActivityManager v46 = ActivityManager.getService();
										if (v46 == 0) {
											v46.killUid(v43, -1, "PlatformCompat overrides");
											Binder.restoreCallingIdentity(v45);
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int enableTargetSdkChanges(String p1, int p2){
	LongArray v4 = new LongArray();
	Collection v6 = this.mChanges.values();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		[J v9 = v4.toArray();
		[J v3 = v9;
		if ( >= v3.length) {
			if ( == 0) {
				if (this.mOverridesFile == 0) {
					if (this.mBackupOverridesFile != 0) {
						Overrides v11 = new Overrides();
						List v13 = v11.getChangeOverrides();
						Collection v14 = this.mChanges.values();
						Iterator v15 = v14.iterator();
						boolean v16 = v15.hasNext();
						if (v16 == 0) {
							boolean v17 = this.mOverridesFile.exists();
							if (v17 == 0) {
								boolean v18 = this.mBackupOverridesFile.exists();
								if (v18 == 0) {
									boolean v19 = this.mOverridesFile.delete();
									boolean v20 = this.mOverridesFile.createNewFile();
									PrintWriter v21 = new PrintWriter(this.mOverridesFile);
									XmlWriter v23 = new XmlWriter(v21);
									XmlWriter.write(v23, v11);
									v21.close();
									boolean v27 = this.mBackupOverridesFile.delete();
									ChangeIdStateCache.invalidate();
									int v2 = v3.length;
									int v43 = UserHandle.getAppId(v33);
									long v45 = Binder.clearCallingIdentity();
									IActivityManager v46 = ActivityManager.getService();
									if (v46 == 0) {
										v46.killUid(v43, -1, "PlatformCompat overrides");
										Binder.restoreCallingIdentity(v45);
										return v2;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int enableTargetSdkChanges(String p1, int p2){
	LongArray v4 = new LongArray();
	Collection v6 = this.mChanges.values();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		[J v9 = v4.toArray();
		[J v3 = v9;
		if ( >= v3.length) {
			if ( == 0) {
				if (this.mOverridesFile == 0) {
					if (this.mBackupOverridesFile != 0) {
						Overrides v11 = new Overrides();
						List v13 = v11.getChangeOverrides();
						Collection v14 = this.mChanges.values();
						Iterator v15 = v14.iterator();
						boolean v16 = v15.hasNext();
						if (v16 == 0) {
							boolean v17 = this.mOverridesFile.exists();
							if (v17 == 0) {
								boolean v18 = this.mBackupOverridesFile.exists();
								if (v18 == 0) {
									boolean v19 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
									if (v19 != 0) {
										boolean v20 = this.mOverridesFile.createNewFile();
										PrintWriter v21 = new PrintWriter(this.mOverridesFile);
										XmlWriter v23 = new XmlWriter(v21);
										XmlWriter.write(v23, v11);
										v21.close();
										boolean v27 = this.mBackupOverridesFile.delete();
										ChangeIdStateCache.invalidate();
										int v2 = v3.length;
										int v43 = UserHandle.getAppId(v33);
										long v45 = Binder.clearCallingIdentity();
										IActivityManager v46 = ActivityManager.getService();
										if (v46 == 0) {
											v46.killUid(v43, -1, "PlatformCompat overrides");
											Binder.restoreCallingIdentity(v45);
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['LongArray v4 = new LongArray();\nCollection v6 = this.mChanges.values();\nOverrides v11 = new Overrides();\nList v13 = v11.getChangeOverrides();\nint v43 = UserHandle.getAppId(v33);\nIActivityManager v46 = ActivityManager.getService();\nv46.killUid(v43, -1, "PlatformCompat overrides");', 'this.mOverridesFile.createNewFile();\nPrintWriter v21 = new PrintWriter(this.mOverridesFile);\nXmlWriter v23 = new XmlWriter(v21);\nXmlWriter.write(v23, v11);\nv21.close();']

The method enableTargetSdkChanges has the following similar APIs:

- API Name: removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V with Similarity Score: 0.9432028532028198
  - Access Control Level: NONE and the following code:
boolean v18 = this.mOverridesFile.delete();
boolean v19 = this.mOverridesFile.createNewFile();
PrintWriter v20 = new PrintWriter(this.mOverridesFile);
XmlWriter v22 = new XmlWriter(v20);
XmlWriter.write(v22, v10);

- API Name: disableTargetSdkChanges(Ljava/lang/String;I)I with Similarity Score: 0.9367824196815491
  - Access Control Level: SYS_OR_SIG and the following code:
PrintWriter v21 = new PrintWriter(this.mOverridesFile);
XmlWriter v23 = new XmlWriter(v21);
XmlWriter.write(v23, v11);
v21.close();

