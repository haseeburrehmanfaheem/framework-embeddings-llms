The method clearOverridesForTest has the following code snippet:

This is path 1 for the API with depth 2:
public void clearOverridesForTest(String p1){
	PackageManager v4 = this.mContext.getPackageManager();
	ApplicationInfo v5 = v4.getApplicationInfo(p1, 4194304);
	Long v6 = Long.valueOf(ApplicationInfo.longVersionCode);
	Long v3 = v6;
	Collection v7 = this.mChanges.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		if ( == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v11 = new Overrides();
					List v13 = v11.getChangeOverrides();
					Collection v14 = this.mChanges.values();
					Iterator v15 = v14.iterator();
					boolean v16 = v15.hasNext();
					if (v16 == 0) {
						boolean v17 = this.mOverridesFile.exists();
						if (v17 == 0) {
							boolean v18 = this.mBackupOverridesFile.exists();
							if (v18 == 0) {
								boolean v19 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
								if (v19 != 0) {
									boolean v20 = this.mOverridesFile.createNewFile();
									PrintWriter v21 = new PrintWriter(this.mOverridesFile);
									XmlWriter v23 = new XmlWriter(v21);
									XmlWriter.write(v23, v11);
									v21.close();
									boolean v27 = this.mBackupOverridesFile.delete();
									ChangeIdStateCache.invalidate();
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void clearOverridesForTest(String p1){
	PackageManager v4 = this.mContext.getPackageManager();
	ApplicationInfo v5 = v4.getApplicationInfo(p1, 4194304);
	Long v6 = Long.valueOf(ApplicationInfo.longVersionCode);
	Long v3 = v6;
	Collection v7 = this.mChanges.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		if ( == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v11 = new Overrides();
					List v13 = v11.getChangeOverrides();
					Collection v14 = this.mChanges.values();
					Iterator v15 = v14.iterator();
					boolean v16 = v15.hasNext();
					if (v16 == 0) {
						boolean v17 = this.mOverridesFile.exists();
						if (v17 == 0) {
							boolean v18 = this.mBackupOverridesFile.exists();
							if (v18 == 0) {
								boolean v19 = this.mOverridesFile.delete();
								boolean v20 = this.mOverridesFile.createNewFile();
								PrintWriter v21 = new PrintWriter(this.mOverridesFile);
								XmlWriter v23 = new XmlWriter(v21);
								XmlWriter.write(v23, v11);
								v21.close();
								boolean v27 = this.mBackupOverridesFile.delete();
								ChangeIdStateCache.invalidate();
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['PackageManager v4 = this.mContext.getPackageManager();\nApplicationInfo v5 = v4.getApplicationInfo(p1, 4194304);\nOverrides v11 = new Overrides();\nList v13 = v11.getChangeOverrides();\nPrintWriter v21 = new PrintWriter(this.mOverridesFile);\nXmlWriter v23 = new XmlWriter(v21);\nXmlWriter.write(v23, v11);']

The method clearOverridesForTest has the following similar APIs:

- API Name: putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V with Similarity Score: 0.8718903064727783
  - Access Control Level: NONE and the following code:
Overrides v12 = new Overrides();
List v14 = v12.getChangeOverrides();
PrintWriter v22 = new PrintWriter(this.mOverridesFile);
XmlWriter v24 = new XmlWriter(v22);
XmlWriter.write(v24, v12);

- API Name: putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V with Similarity Score: 0.8644720911979675
  - Access Control Level: NONE and the following code:
Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
Overrides v10 = new Overrides();
List v12 = v10.getChangeOverrides();
Collection v13 = this.mChanges.values();
PrintWriter v20 = new PrintWriter(this.mOverridesFile);
XmlWriter v22 = new XmlWriter(v20);
XmlWriter.write(v22, v10);

