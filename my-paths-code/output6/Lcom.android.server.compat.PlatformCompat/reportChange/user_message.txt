This is path 1 for the API with depth 2:
public void reportChange(long p1, ApplicationInfo p2){
	boolean v4 = ChangeReporter.shouldWriteToStatsLog(p2, p1, p3);
	if (v4 == 0) {
		FrameworkStatsLog.write(228, p2, p1, p3, this.mSource);
		boolean v6 = ChangeReporter.shouldWriteToDebug(p2, p1, p3);
		if (v6 == 0) {
			ChangeReporter.debugLog(p2, p1, p3);
			ChangeReporter$ChangeReport v8 = new ChangeReporter$ChangeReport(p1,p3);
			ChangeReporter.markAsReported(p2, v8);
			return;
		}
	}
}

This is path 2 for the API with depth 2:
public void reportChange(long p1, ApplicationInfo p2){
	boolean v4 = ChangeReporter.shouldWriteToStatsLog(p2, p1, p3);
	if (v4 == 0) {
		FrameworkStatsLog.write(228, p2, p1, p3, this.mSource);
		boolean v6 = ChangeReporter.shouldWriteToDebug(p2, p1, p3);
		if (v6 == 0) {
			ChangeReporter$ChangeReport v7 = new ChangeReporter$ChangeReport(p1,p3);
			ChangeReporter.markAsReported(p2, v7);
			return;
		}
	}
}

This is path 3 for the API with depth 2:
public void reportChange(long p1, ApplicationInfo p2){
	boolean v4 = ChangeReporter.shouldWriteToStatsLog(p2, p1, p3);
	if (v4 == 0) {
		boolean v5 = ChangeReporter.shouldWriteToDebug(p2, p1, p3);
		if (v5 == 0) {
			ChangeReporter.debugLog(p2, p1, p3);
			ChangeReporter$ChangeReport v7 = new ChangeReporter$ChangeReport(p1,p3);
			ChangeReporter.markAsReported(p2, v7);
			return;
		}
	}
}
