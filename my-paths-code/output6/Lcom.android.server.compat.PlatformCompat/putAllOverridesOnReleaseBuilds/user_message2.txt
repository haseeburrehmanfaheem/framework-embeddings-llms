The method putAllOverridesOnReleaseBuilds has the following code snippet:

This is path 1 for the API with depth 2:
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	if (v4 == 0) {
		Set v6 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
		Iterator v7 = v6.iterator();
		boolean v8 = v7.hasNext();
		if (v8 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v10 = new Overrides();
					List v12 = v10.getChangeOverrides();
					Collection v13 = this.mChanges.values();
					Iterator v14 = v13.iterator();
					boolean v15 = v14.hasNext();
					if (v15 == 0) {
						boolean v16 = this.mOverridesFile.exists();
						if (v16 == 0) {
							boolean v17 = this.mBackupOverridesFile.exists();
							if (v17 == 0) {
								boolean v18 = this.mOverridesFile.delete();
								boolean v19 = this.mOverridesFile.createNewFile();
								PrintWriter v20 = new PrintWriter(this.mOverridesFile);
								XmlWriter v22 = new XmlWriter(v20);
								XmlWriter.write(v22, v10);
								v20.close();
								boolean v26 = this.mBackupOverridesFile.delete();
								ChangeIdStateCache.invalidate();
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	if (v4 == 0) {
		Set v6 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
		Iterator v7 = v6.iterator();
		boolean v8 = v7.hasNext();
		if (v8 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v10 = new Overrides();
					List v12 = v10.getChangeOverrides();
					Collection v13 = this.mChanges.values();
					Iterator v14 = v13.iterator();
					boolean v15 = v14.hasNext();
					if (v15 == 0) {
						boolean v16 = this.mOverridesFile.exists();
						if (v16 == 0) {
							boolean v17 = this.mBackupOverridesFile.exists();
							if (v17 == 0) {
								boolean v18 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
								if (v18 != 0) {
									boolean v19 = this.mOverridesFile.createNewFile();
									PrintWriter v20 = new PrintWriter(this.mOverridesFile);
									XmlWriter v22 = new XmlWriter(v20);
									XmlWriter.write(v22, v10);
									v20.close();
									boolean v26 = this.mBackupOverridesFile.delete();
									ChangeIdStateCache.invalidate();
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	if (v4 == 0) {
		Set v6 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
		Iterator v7 = v6.iterator();
		boolean v8 = v7.hasNext();
		if (v8 == 0) {
			if (this.mOverridesFile == 0) {
				if (this.mBackupOverridesFile != 0) {
					Overrides v10 = new Overrides();
					List v12 = v10.getChangeOverrides();
					Collection v13 = this.mChanges.values();
					Iterator v14 = v13.iterator();
					boolean v15 = v14.hasNext();
					if (v15 == 0) {
						boolean v16 = this.mOverridesFile.exists();
						if (v16 == 0) {
							boolean v17 = this.mOverridesFile.createNewFile();
							PrintWriter v18 = new PrintWriter(this.mOverridesFile);
							XmlWriter v20 = new XmlWriter(v18);
							XmlWriter.write(v20, v10);
							v18.close();
							boolean v24 = this.mBackupOverridesFile.delete();
							ChangeIdStateCache.invalidate();
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();\nOverrides v10 = new Overrides();\nList v12 = v10.getChangeOverrides();\nCollection v13 = this.mChanges.values();\nPrintWriter v20 = new PrintWriter(this.mOverridesFile);\nXmlWriter v22 = new XmlWriter(v20);\nXmlWriter.write(v22, v10);']

The method putAllOverridesOnReleaseBuilds has the following similar APIs:

- API Name: removeAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V with Similarity Score: 0.9293258190155029
  - Access Control Level: NONE and the following code:
Overrides v10 = new Overrides();
List v12 = v10.getChangeOverrides();
Collection v13 = this.mChanges.values();
PrintWriter v20 = new PrintWriter(this.mOverridesFile);
XmlWriter v22 = new XmlWriter(v20);
XmlWriter.write(v22, v10);

- API Name: removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V with Similarity Score: 0.9138728380203247
  - Access Control Level: NONE and the following code:
Overrides v10 = new Overrides();
List v12 = v10.getChangeOverrides();
Collection v13 = this.mChanges.values();
boolean v18 = this.mOverridesFile.renameTo(this.mBackupOverridesFile);
PrintWriter v20 = new PrintWriter(this.mOverridesFile);
XmlWriter v22 = new XmlWriter(v20);
XmlWriter.write(v22, v10);

