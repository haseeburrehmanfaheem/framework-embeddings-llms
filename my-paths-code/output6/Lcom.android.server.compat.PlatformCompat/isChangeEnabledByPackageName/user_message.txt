This is path 1 for the API with depth 2:
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	Object v4 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v3 = v4;
	int v5 = Process.myUid();
	ApplicationInfo v6 = v3.getApplicationInfo(p2, 0, v5, p3);
	ApplicationInfo v2 = v6;
	if (v2 != 0) {
		Long v8 = Long.valueOf(p1);
		Object v9 = this.mChanges.get(v8);
		if (v9 != 0) {
			if (p2 != 0) {
				Object v11 = this.mRawOverrides.get(p2);
				if (v11 == 0) {
					int v12 = v11.evaluateForAllVersions();
					if (v12 == 0) {
						if (v12 == 1) {
							if (v12 == 2) {
								boolean v13 = CompatChange.defaultValue();
								boolean v10 = v13;
								boolean v7 = v10;
								return v7;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	Object v4 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v3 = v4;
	int v5 = Process.myUid();
	ApplicationInfo v6 = v3.getApplicationInfo(p2, 0, v5, p3);
	ApplicationInfo v2 = v6;
	if (v2 != 0) {
		boolean v9 = this.mCompatConfig.isChangeEnabled(p1, p2);
		boolean v8 = v9;
		if (v2 == 0) {
			if (v8 == 0) {
				this.mChangeReporter.reportChange(ApplicationInfo.uid, p1, );
				boolean v7 = v8;
				return v7;
			}
		}
	}
}

This is path 3 for the API with depth 2:
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	Object v4 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
	Object v3 = v4;
	int v5 = Process.myUid();
	ApplicationInfo v6 = v3.getApplicationInfo(p2, 0, v5, p3);
	ApplicationInfo v2 = v6;
	if (v2 != 0) {
		boolean v9 = this.mCompatConfig.isChangeEnabled(p1, p2);
		boolean v8 = v9;
		if (v2 == 0) {
			if (v8 == 0) {
				this.mChangeReporter.reportChange(ApplicationInfo.uid, p1, );
				boolean v7 = v8;
				return v7;
			}
		}
	}
}
