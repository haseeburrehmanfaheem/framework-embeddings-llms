This is path 1 for the API with depth 2:
public PendingIntent requestNotificationAccess(ComponentName p1, int p2){
	String v1 = p1.getPackageName();
	Context v6 = this.this$0.getContext();
	PackageInfo v8 = PackageUtils.getPackageInfo(v6, v3, p1);
	if (PackageInfo.reqFeatures == 0) {
		if ( >= PackageInfo.reqFeatures.length) {
			boolean v9 = "android.software.companion_device_setup".equals(FeatureInfo.name);
			if (v9 == 0) {
				AssociationStoreImpl v10 = this.mAssociationStore;
				List v12 = AssociationStoreImpl.getAssociationsForUser(v3);
				AssociationStoreImpl$$ExternalSyntheticLambda0 v13 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
				List v15 = CollectionUtils.filter(v12, v13);
				List v16 = Collections.unmodifiableList(v15);
				List v11 = v16;
				boolean v17 = ArrayUtils.isEmpty(v11);
				Preconditions.checkState((v17 ^ 1), "App must have an association before calling this API");
				long v19 = Binder.clearCallingIdentity();
				Context v20 = this.this$0.getContext();
				Context v21 = this.this$0.getContext();
				Intent v22 = NotificationAccessConfirmationActivityContract.launcherIntent(v21, p2, p1);
				UserHandle v23 = new UserHandle(p2);
				PendingIntent v25 = PendingIntent.getActivityAsUser(v20, 0, v22, 1409286144, 0, v23);
				Binder.restoreCallingIdentity(v19);
				return v25;
			}
		}
	}
}
