The method getAllAssociationsForUser has the following code snippet:

This is path 1 for the API with depth 2:
public List getAllAssociationsForUser(int p1){
	Context v1 = this.this$0.getContext();
	Context v7 = this.this$0.getContext();
	PermissionsUtils.enforceCallerCanManageCompanionDevice(v7, "getAllAssociationsForUser");
	AssociationStoreImpl v9 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
	Object v12 = this.mCachedPerUser.get(p1);
	if (v12 == 0) {
		ArrayList v13 = new ArrayList();
		Collection v15 = this.mIdMap.values();
		Iterator v16 = v15.iterator();
		boolean v17 = v16.hasNext();
		if (v17 == 0) {
			List v18 = Collections.unmodifiableList(v13);
			this.mCachedPerUser.set(p1, v18);
			List v11 = v18;
			List v10 = v11;
			return v10;
		}
	}
}
This is path 2 for the API with depth 2:
public List getAllAssociationsForUser(int p1){
	Context v1 = this.this$0.getContext();
	Context v7 = this.this$0.getContext();
	PermissionsUtils.enforceCallerCanManageCompanionDevice(v7, "getAllAssociationsForUser");
	AssociationStoreImpl v9 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
	Object v12 = this.mCachedPerUser.get(p1);
	if (v12 == 0) {
		List v11 = v12;
		List v10 = v11;
		return v10;
	}
}

and the following sink code:
['Object v12 = this.mCachedPerUser.get(p1);\nif (v12 == 0) {\nArrayList v13 = new ArrayList();\nCollection v15 = this.mIdMap.values();\nIterator v16 = v15.iterator();\nboolean v17 = v16.hasNext();\nif (v17 == 0) {\nList v18 = Collections.unmodifiableList(v13);\nthis.mCachedPerUser.set(p1, v18);\nList v11 = v18;\nList v10 = v11;\nreturn v10;']

The method getAllAssociationsForUser has the following similar APIs:

- API Name: notifyDeviceAppeared(I)V with Similarity Score: 0.7856826782226562
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v37 = Integer.valueOf(v29);
Object v38 = this.mIdMap.put(v37, v14);
int v39 = this.mUserId;
this.mCachedPerUser.delete(v39);

- API Name: notifyDeviceAppeared(I)V with Similarity Score: 0.7030108571052551
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v3 = Integer.valueOf(p1);
Object v4 = this.mIdMap.get(v3);
AssociationInfo v2 = v4;
int v7 = v2.getUserId();
String v8 = v2.getPackageName();
boolean v9 = PermissionsUtils.checkCallerCanManageAssociationsForPackage(v5, v7, v8);

