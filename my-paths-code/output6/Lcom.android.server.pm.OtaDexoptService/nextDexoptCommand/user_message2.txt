The method nextDexoptCommand has the following code snippet:

This is path 1 for the API with depth 2:
public String nextDexoptCommand(){
	if (this.mDexoptCommands == 0) {
		boolean v1 = this.mDexoptCommands.isEmpty();
		if (v1 == 0) {
			Object v2 = this.mDexoptCommands.remove(0);
			File v5 = Environment.getDataDirectory();
			StorageManager v6 = StorageManager.from(this.mContext);
			long v7 = v6.getStorageLowBytes(v5);
			if ((v7 < 0) == 0) {
				long v4 = v7;
				File v8 = Environment.getDataDirectory();
				long v9 = v8.getUsableSpace();
				long v3 = (v9 - v4);
				if ((v3 < 0) <= 0) {
					StringBuilder v10 = new StringBuilder();
					StringBuilder v12 = v10.append("Not enough space for OTA dexopt, stopping with ");
					int v13 = this.mDexoptCommands.size();
					StringBuilder v14 = v10.append((v13 + 1));
					StringBuilder v15 = v10.append(" commands left.");
					String v16 = v10.toString();
					int v17 = Log.w("OTADexopt", v16);
					this.mDexoptCommands.clear();
					return "(no free space)";
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public String nextDexoptCommand(){
	if (this.mDexoptCommands == 0) {
		boolean v1 = this.mDexoptCommands.isEmpty();
		if (v1 == 0) {
			Object v2 = this.mDexoptCommands.remove(0);
			File v5 = Environment.getDataDirectory();
			StorageManager v6 = StorageManager.from(this.mContext);
			long v7 = v6.getStorageLowBytes(v5);
			if ((v7 < 0) == 0) {
				long v4 = v7;
				File v8 = Environment.getDataDirectory();
				long v9 = v8.getUsableSpace();
				long v3 = (v9 - v4);
				if ((v3 < 0) <= 0) {
					this.dexoptCommandCountExecuted = (this.dexoptCommandCountExecuted + 1);
					StringBuilder v10 = new StringBuilder();
					StringBuilder v12 = v10.append("Next command: ");
					StringBuilder v13 = v10.append(v2);
					String v14 = v10.toString();
					int v15 = Log.d("OTADexopt", v14);
					return v2;
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mDexoptCommands.remove(0);\nthis.dexoptCommandCountExecuted = (this.dexoptCommandCountExecuted + 1);\nreturn v2;', 'Object v2 = this.mDexoptCommands.remove(0);\nthis.mDexoptCommands.clear();\nreturn "(no free space)";']

The method nextDexoptCommand has the following similar APIs:

- API Name: getProgress()F with Similarity Score: 0.7680233120918274
  - Access Control Level: NONE and the following code:
if (this.completeSize != 0) {
int v1 = this.mDexoptCommands.size();
return ((this.completeSize - v1) / this.completeSize);

- API Name: getProgress()F with Similarity Score: 0.7276549935340881
  - Access Control Level: NONE and the following code:
if (this.completeSize != 0) {
int v1 = this.mDexoptCommands.size();
return ((this.completeSize - v1) / this.completeSize);

