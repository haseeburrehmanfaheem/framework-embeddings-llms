The method requestBufferForProcess has the following code snippet:

This is path 1 for the API with depth 2:
public ParcelFileDescriptor requestBufferForProcess(String p1, IGraphicsStatsCallback p2){
	PackageManager v5 = this.mContext.getPackageManager();
	int v6 = UserHandle.getUserId(v1);
	PackageInfo v7 = v5.getPackageInfoAsUser(p1, 0, v6);
	long v8 = v7.getLongVersionCode();
	int v11 = this.mActive.size();
	long v12 = System.currentTimeMillis();
	Calendar v13 = GraphicsStatsService.normalizeDate(v12);
	long v14 = v13.getTimeInMillis();
	if ( >= v11) {
		Object v15 = this.mActive.get();
		if (GraphicsStatsService$ActiveBuffer.mPid != p3) {
			if (GraphicsStatsService$ActiveBuffer.mUid != p2) {
				if ((GraphicsStatsService$BufferInfo.mStartTime < v14) >= 0) {
					v15.binderDied();
					GraphicsStatsService$ActiveBuffer v17 = new GraphicsStatsService$ActiveBuffer(GraphicsStatsService,p1,p2,p3,p4,p5);
					boolean v19 = this.mActive.add(v17);
					GraphicsStatsService$ActiveBuffer v10 = v17;
					if (this.mRotateIsScheduled == 0) {
						this.mRotateIsScheduled = 1;
						long v21 = System.currentTimeMillis();
						Calendar v22 = GraphicsStatsService.normalizeDate(v21);
						v22.add(5, 1);
						long v24 = v22.getTimeInMillis();
						GraphicsStatsService$$ExternalSyntheticLambda0 v25 = new GraphicsStatsService$$ExternalSyntheticLambda0(GraphicsStatsService);
						this.mAlarmManager.setExact(1, v24, "GraphicsStatsService", v25, this.mWriteOutHandler);
						ParcelFileDescriptor v29 = this.mProcessBuffer.getFdDup();
						ParcelFileDescriptor v28 = v29;
						ParcelFileDescriptor v9 = v28;
						Binder.restoreCallingIdentity(v3);
						return v9;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public ParcelFileDescriptor requestBufferForProcess(String p1, IGraphicsStatsCallback p2){
	PackageManager v5 = this.mContext.getPackageManager();
	int v6 = UserHandle.getUserId(v1);
	PackageInfo v7 = v5.getPackageInfoAsUser(p1, 0, v6);
	long v8 = v7.getLongVersionCode();
	int v11 = this.mActive.size();
	long v12 = System.currentTimeMillis();
	Calendar v13 = GraphicsStatsService.normalizeDate(v12);
	long v14 = v13.getTimeInMillis();
	if ( >= v11) {
		Object v15 = this.mActive.get();
		if (GraphicsStatsService$ActiveBuffer.mPid != p3) {
			if (GraphicsStatsService$ActiveBuffer.mUid != p2) {
				if ((GraphicsStatsService$BufferInfo.mStartTime < v14) >= 0) {
					GraphicsStatsService$ActiveBuffer v10 = v15;
					if (this.mRotateIsScheduled == 0) {
						this.mRotateIsScheduled = 1;
						long v17 = System.currentTimeMillis();
						Calendar v18 = GraphicsStatsService.normalizeDate(v17);
						v18.add(5, 1);
						long v20 = v18.getTimeInMillis();
						GraphicsStatsService$$ExternalSyntheticLambda0 v21 = new GraphicsStatsService$$ExternalSyntheticLambda0(GraphicsStatsService);
						this.mAlarmManager.setExact(1, v20, "GraphicsStatsService", v21, this.mWriteOutHandler);
						ParcelFileDescriptor v25 = this.mProcessBuffer.getFdDup();
						ParcelFileDescriptor v24 = v25;
						ParcelFileDescriptor v9 = v24;
						Binder.restoreCallingIdentity(v3);
						return v9;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public ParcelFileDescriptor requestBufferForProcess(String p1, IGraphicsStatsCallback p2){
	PackageManager v5 = this.mContext.getPackageManager();
	int v6 = UserHandle.getUserId(v1);
	PackageInfo v7 = v5.getPackageInfoAsUser(p1, 0, v6);
	long v8 = v7.getLongVersionCode();
	int v11 = this.mActive.size();
	long v12 = System.currentTimeMillis();
	Calendar v13 = GraphicsStatsService.normalizeDate(v12);
	long v14 = v13.getTimeInMillis();
	if ( >= v11) {
		GraphicsStatsService$ActiveBuffer v15 = new GraphicsStatsService$ActiveBuffer(GraphicsStatsService,p1,p2,p3,p4,p5);
		boolean v17 = this.mActive.add(v15);
		GraphicsStatsService$ActiveBuffer v10 = v15;
		if (this.mRotateIsScheduled == 0) {
			this.mRotateIsScheduled = 1;
			long v19 = System.currentTimeMillis();
			Calendar v20 = GraphicsStatsService.normalizeDate(v19);
			v20.add(5, 1);
			long v22 = v20.getTimeInMillis();
			GraphicsStatsService$$ExternalSyntheticLambda0 v23 = new GraphicsStatsService$$ExternalSyntheticLambda0(GraphicsStatsService);
			this.mAlarmManager.setExact(1, v22, "GraphicsStatsService", v23, this.mWriteOutHandler);
			ParcelFileDescriptor v27 = this.mProcessBuffer.getFdDup();
			ParcelFileDescriptor v26 = v27;
			ParcelFileDescriptor v9 = v26;
			Binder.restoreCallingIdentity(v3);
			return v9;
		}
	}
}

and the following sink code:
['GraphicsStatsService$ActiveBuffer v15 = new GraphicsStatsService$ActiveBuffer(GraphicsStatsService,p1,p2,p3,p4,p5);\nboolean v17 = this.mActive.add(v15);\nParcelFileDescriptor v27 = this.mProcessBuffer.getFdDup();\nreturn v9;', 'PackageManager v5 = this.mContext.getPackageManager();\nint v6 = UserHandle.getUserId(v1);\nPackageInfo v7 = v5.getPackageInfoAsUser(p1, 0, v6);\nParcelFileDescriptor v25 = this.mProcessBuffer.getFdDup();\nreturn v9;', 'PackageManager v5 = this.mContext.getPackageManager();\nint v6 = UserHandle.getUserId(v1);\nPackageInfo v7 = v5.getPackageInfoAsUser(p1, 0, v6);\nGraphicsStatsService$ActiveBuffer v17 = new GraphicsStatsService$ActiveBuffer(GraphicsStatsService,p1,p2,p3,p4,p5);\nboolean v19 = this.mActive.add(v17);\nParcelFileDescriptor v29 = this.mProcessBuffer.getFdDup();\nreturn v9;']

The method requestBufferForProcess has the following similar APIs:

- API Name: fixupAppDir(Ljava/lang/String;)V with Similarity Score: 0.830650269985199
  - Access Control Level: NONE and the following code:
PackageManager v7 = this.mContext.getPackageManager();
int v8 = v7.getPackageUidAsUser(v6, v5);

- API Name: startSession(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/view/autofill/AutofillId;Landroid/graphics/Rect;Landroid/view/autofill/AutofillValue;IZILandroid/content/ComponentName;ZLcom/android/internal/os/IResultReceiver;)V with Similarity Score: 0.8239873051643372
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v11 = v10.getPackageManager();
PackageInfo v12 = v11.getPackageInfoAsUser(v5, 0, p6);
ActivityManagerInternal v13 = this.mAm;
int v14 = v13.getTaskIdForActivity(p1, 0);

