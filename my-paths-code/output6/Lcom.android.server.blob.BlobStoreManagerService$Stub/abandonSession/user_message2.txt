The method abandonSession has the following code snippet:

This is path 1 for the API with depth 2:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);
	v15.open();
	v15.abandon();
	if (BlobStoreConfig.LOGV == 0) {
		BlobStoreManagerService.writeBlobSessionsAsync();
		return;
	}
}
This is path 2 for the API with depth 2:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);
	v15.open();
	v15.abandon();
	if (BlobStoreConfig.LOGV == 0) {
		BlobStoreManagerService.writeBlobSessionsAsync();
		return;
	}
}

and the following sink code:
['BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);\nv15.abandon();', 'BlobStoreManagerService.writeBlobSessionsAsync();']

The method abandonSession has the following similar APIs:

- API Name: deleteBlob(J)V with Similarity Score: 0.8953877091407776
  - Access Control Level: SYS_OR_SIG and the following code:
BlobStoreManagerService.writeBlobsInfoAsync();

- API Name: openSession(JLjava/lang/String;)Landroid/app/blob/IBlobStoreSession; with Similarity Score: 0.782183825969696
  - Access Control Level: SYS_OR_SIG and the following code:
BlobStoreSession v14 = v17;
BlobStoreSession v13 = v14;
return v13;

