The method getRemainingLeaseQuotaBytes has the following code snippet:

This is path 1 for the API with depth 2:
public long getRemainingLeaseQuotaBytes(String p1){
	int v1 = Binder.getCallingUid();
	long v8 = BlobStoreConfig.getAppDataBytesLimit();
	long v9 = BlobStoreManagerService.getTotalUsageBytesLocked(p2, p3);
	if (((v8 - v9) < 0) <= 0) {
		long v7 = ;
		long v6 = v7;
		return v6;
	}
}
This is path 2 for the API with depth 2:
public long getRemainingLeaseQuotaBytes(String p1){
	int v1 = Binder.getCallingUid();
	long v8 = BlobStoreConfig.getAppDataBytesLimit();
	long v9 = BlobStoreManagerService.getTotalUsageBytesLocked(p2, p3);
	if (((v8 - v9) < 0) <= 0) {
		long v7 = ;
		long v6 = v7;
		return v6;
	}
}

and the following sink code:
['long v8 = BlobStoreConfig.getAppDataBytesLimit();\nlong v9 = BlobStoreManagerService.getTotalUsageBytesLocked(p2, p3);\nif (((v8 - v9) < 0) <= 0) {\n  long v7 = ;\n  long v6 = v7;\n  return v6;']

The method getRemainingLeaseQuotaBytes has the following similar APIs:

- API Name: getCacheQuotaBytes(Ljava/lang/String;I)J with Similarity Score: 0.7524653673171997
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = this.mService.getCacheQuotaBytes(p1, p2, v5);
long v4 = v6;
return v4;

- API Name: getDataBlockSize()I with Similarity Score: 0.7272739410400391
  - Access Control Level: SYS_OR_SIG and the following code:
int v15 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v7);
return v15;

