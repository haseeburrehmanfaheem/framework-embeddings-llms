The method getDeviceTemperatures has the following code snippet:

This is path 1 for the API with depth 2:
public [F getDeviceTemperatures(String p1, int p2, int p3){
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v4);
	Object v7 = this.sLocalServiceObjects.get(VrManagerInterna.class);
	Object v6 = v7;
	Object v8 = this.mContext.getSystemService(DevicePolicyManage.class);
	boolean v9 = v8.isDeviceOwnerApp(p1);
	if (v9 != 0) {
		[F v10 = HardwarePropertiesManagerService.nativeGetDeviceTemperatures(p2, p3);
		return v10;
	}
}

and the following sink code:
['int v10 = HardwarePropertiesManagerService.nativeGetDeviceTemperatures(p2, p3);\nreturn v10;']

The method getDeviceTemperatures has the following similar APIs:

- API Name: getCpuUsages(Ljava/lang/String;)[Landroid/os/CpuUsageInfo; with Similarity Score: 0.758773922920227
  - Access Control Level: SYS_OR_SIG and the following code:
CpuUsageInfo v10 = HardwarePropertiesManagerService.nativeGetCpuUsages();
return v10;

- API Name: getFanSpeeds(Ljava/lang/String;)[F with Similarity Score: 0.701897919178009
  - Access Control Level: SYS_OR_SIG and the following code:
int v9 = v8.isDeviceOwnerApp(p1);
if (v9 != 0) {
[F v10 = HardwarePropertiesManagerService.nativeGetFanSpeeds();
return v10;

