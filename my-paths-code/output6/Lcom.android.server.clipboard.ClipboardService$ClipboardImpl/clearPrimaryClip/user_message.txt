This is path 1 for the API with depth 2:
public void clearPrimaryClip(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	boolean v10 = ClipboardService.clipboardAccessAllowed(p2, p3, p4, p5, p6, 1);
	boolean v9 = v10;
	boolean v8 = v9;
	if (v8 != 0) {
		Object v11 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
		Integer v12 = Integer.valueOf(p3);
		this.mClipboardClearHandler.removeEqualMessages(101, v12);
		this.mEmulatorClipboardMonitor.accept(p2);
		int v17 = UserHandle.getUserId(p3);
		ClipboardService$PerUserClipboard v18 = ClipboardService.getClipboardLocked(v17);
		ClipboardService.setPrimaryClipInternalLocked(v18, p2, p3, p4);
		List v20 = ClipboardService.getRelatedProfiles(v17);
		if (v20 == 0) {
			int v21 = v20.size();
			if (v21 <= 1) {
				boolean v22 = ClipboardService.hasRestriction("no_cross_profile_copy_paste", v17);
				if ((v22 ^ 1) != 0) {
					if (p2 != 0) {
						ClipData v23 = new ClipData(p2);
						int v25 = v23.getItemCount();
						if ( < 0) {
							v23.fixUrisLight(v17);
							if ( >= v21) {
								return;
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void clearPrimaryClip(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	boolean v10 = ClipboardService.clipboardAccessAllowed(p2, p3, p4, p5, p6, 1);
	boolean v9 = v10;
	boolean v8 = v9;
	if (v8 != 0) {
		Object v11 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
		Integer v12 = Integer.valueOf(p3);
		this.mClipboardClearHandler.removeEqualMessages(101, v12);
		this.mEmulatorClipboardMonitor.accept(p2);
		int v17 = UserHandle.getUserId(p3);
		ClipboardService$PerUserClipboard v18 = ClipboardService.getClipboardLocked(v17);
		ClipboardService.setPrimaryClipInternalLocked(v18, p2, p3, p4);
		List v20 = ClipboardService.getRelatedProfiles(v17);
		if (v20 == 0) {
			int v21 = v20.size();
			if (v21 <= 1) {
				boolean v22 = ClipboardService.hasRestriction("no_cross_profile_copy_paste", v17);
				if ((v22 ^ 1) != 0) {
					if ( >= v21) {
						return;
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void clearPrimaryClip(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	boolean v10 = ClipboardService.clipboardAccessAllowed(p2, p3, p4, p5, p6, 1);
	boolean v9 = v10;
	boolean v8 = v9;
	if (v8 != 0) {
		Object v11 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
		Integer v12 = Integer.valueOf(p3);
		this.mClipboardClearHandler.removeEqualMessages(101, v12);
		this.mEmulatorClipboardMonitor.accept(p2);
		int v17 = UserHandle.getUserId(p3);
		ClipboardService$PerUserClipboard v18 = ClipboardService.getClipboardLocked(v17);
		ClipboardService.setPrimaryClipInternalLocked(v18, p2, p3, p4);
		List v20 = ClipboardService.getRelatedProfiles(v17);
		if (v20 == 0) {
			int v21 = v20.size();
			if (v21 <= 1) {
				return;
			}
		}
	}
}
