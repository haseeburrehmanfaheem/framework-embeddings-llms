The method hasClipboardText has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasClipboardText(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	if ( != 0) {
		boolean v9 = ;
		boolean v8 = v9;
		if (v8 == 0) {
			long v20 = Binder.clearCallingIdentity();
			Context v21 = ClipboardService.getContext();
			Object v22 = v21.getSystemService(KeyguardManage.class);
			if (v22 == 0) {
				boolean v23 = v22.isDeviceLocked(p2);
				if (v23 == 0) {
					Binder.restoreCallingIdentity(v20);
					boolean v19 = ;
					boolean v18 = v19;
					if (v18 == 0) {
						Object v25 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v28 = this.mClipboards.get(p2);
						if (v28 != 0) {
							ClipboardService$PerUserClipboard v29 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v29);
							ClipboardService$PerUserClipboard v27 = ;
							ClipboardService$PerUserClipboard v26 = v27;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								ClipData$Item v32 = ClipboardService$PerUserClipboard.primaryClip.getItemAt(0);
								CharSequence v33 = v32.getText();
								if (v33 == 0) {
									int v34 = v33.length();
									if (v34 <= 0) {
										return ;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean hasClipboardText(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	if ( != 0) {
		boolean v9 = ;
		boolean v8 = v9;
		if (v8 == 0) {
			long v20 = Binder.clearCallingIdentity();
			Context v21 = ClipboardService.getContext();
			Object v22 = v21.getSystemService(KeyguardManage.class);
			if (v22 == 0) {
				boolean v23 = v22.isDeviceLocked(p2);
				if (v23 == 0) {
					Binder.restoreCallingIdentity(v20);
					boolean v19 = ;
					boolean v18 = v19;
					if (v18 == 0) {
						Object v25 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v28 = this.mClipboards.get(p2);
						if (v28 != 0) {
							ClipboardService$PerUserClipboard v29 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v29);
							ClipboardService$PerUserClipboard v27 = ;
							ClipboardService$PerUserClipboard v26 = v27;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								ClipData$Item v32 = ClipboardService$PerUserClipboard.primaryClip.getItemAt(0);
								CharSequence v33 = v32.getText();
								if (v33 == 0) {
									int v34 = v33.length();
									if (v34 <= 0) {
										return ;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean hasClipboardText(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	if ( != 0) {
		boolean v9 = ;
		boolean v8 = v9;
		if (v8 == 0) {
			long v20 = Binder.clearCallingIdentity();
			Context v21 = ClipboardService.getContext();
			Object v22 = v21.getSystemService(KeyguardManage.class);
			if (v22 == 0) {
				boolean v23 = v22.isDeviceLocked(p2);
				if (v23 == 0) {
					Binder.restoreCallingIdentity(v20);
					boolean v19 = ;
					boolean v18 = v19;
					if (v18 == 0) {
						Object v25 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v28 = this.mClipboards.get(p2);
						if (v28 != 0) {
							ClipboardService$PerUserClipboard v29 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v29);
							ClipboardService$PerUserClipboard v27 = ;
							ClipboardService$PerUserClipboard v26 = v27;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								ClipData$Item v32 = ClipboardService$PerUserClipboard.primaryClip.getItemAt(0);
								CharSequence v33 = v32.getText();
								if (v33 == 0) {
									return ;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v3 = ClipboardService.getIntendingUserId(p2, p3);\nint v4 = Binder.getCallingUid();\nint v5 = UserHandle.getAppId(v4);\nint v6 = UserHandle.getUid(v3, v5);', 'Object v25 = ClipboardService.-$$Nest$fgetmLock(this.this$0);\nObject v28 = this.mClipboards.get(p2);\nClipboardService$PerUserClipboard v29 = new ClipboardService$PerUserClipboard(ClipboardService,p2);\nthis.mClipboards.put(p2, v29);', 'ClipData$Item v32 = ClipboardService$PerUserClipboard.primaryClip.getItemAt(0);\nCharSequence v33 = v32.getText();']

The method hasClipboardText has the following similar APIs:

- API Name: getPrimaryClipDescription(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ClipDescription; with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
Object v25 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
Object v28 = this.mClipboards.get(p2);
ClipboardService$PerUserClipboard v29 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
this.mClipboards.put(p2, v29);

- API Name: getPrimaryClipDescription(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ClipDescription; with Similarity Score: 0.9999999403953552
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = ClipboardService.getIntendingUserId(p2, p3);
int v4 = Binder.getCallingUid();
int v5 = UserHandle.getAppId(v4);
int v6 = UserHandle.getUid(v3, v5);

