The method removePrimaryClipChangedListener has the following code snippet:

This is path 1 for the API with depth 2:
public void removePrimaryClipChangedListener(IOnPrimaryClipChangedListener p1, String p2, String p3, int p4){
	int v6 = Binder.getCallingPid();
	int v7 = Binder.getCallingUid();
	int v8 = this.mAmInternal.handleIncomingUser(v6, v7, p3, 0, 2, "checkClipboardServiceCallingUser", p2);
	int v2 = v8;
	int v1 = v2;
	Object v9 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
	Object v12 = this.mClipboards.get(p2);
	if (v12 != 0) {
		ClipboardService$PerUserClipboard v13 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
		this.mClipboards.put(p2, v13);
		ClipboardService$PerUserClipboard v11 = ;
		ClipboardService$PerUserClipboard v10 = v11;
		boolean v16 = ClipboardService$PerUserClipboard.primaryClipListeners.unregister(p1);
		return;
	}
}
This is path 2 for the API with depth 2:
public void removePrimaryClipChangedListener(IOnPrimaryClipChangedListener p1, String p2, String p3, int p4){
	int v6 = Binder.getCallingPid();
	int v7 = Binder.getCallingUid();
	int v8 = this.mAmInternal.handleIncomingUser(v6, v7, p3, 0, 2, "checkClipboardServiceCallingUser", p2);
	int v2 = v8;
	int v1 = v2;
	Object v9 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
	Object v12 = this.mClipboards.get(p2);
	if (v12 != 0) {
		ClipboardService$PerUserClipboard v11 = ;
		ClipboardService$PerUserClipboard v10 = v11;
		boolean v13 = ClipboardService$PerUserClipboard.primaryClipListeners.unregister(p1);
		return;
	}
}
This is path 3 for the API with depth 2:
public void removePrimaryClipChangedListener(IOnPrimaryClipChangedListener p1, String p2, String p3, int p4){
	int v3 = Binder.getCallingUid();
	int v4 = UserHandle.getUserId(v3);
	boolean v5 = UserManager.supportsMultipleUsers();
	if (v5 == 0) {
		int v2 = v4;
		int v1 = v2;
		Object v6 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
		Object v9 = this.mClipboards.get(p2);
		if (v9 != 0) {
			ClipboardService$PerUserClipboard v10 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
			this.mClipboards.put(p2, v10);
			ClipboardService$PerUserClipboard v8 = ;
			ClipboardService$PerUserClipboard v7 = v8;
			boolean v13 = ClipboardService$PerUserClipboard.primaryClipListeners.unregister(p1);
			return;
		}
	}
}

and the following sink code:
['int v8 = this.mAmInternal.handleIncomingUser(v6, v7, p3, 0, 2, "checkClipboardServiceCallingUser", p2);\nObject v12 = this.mClipboards.get(p2);\nif (v12 != 0) {\n    ClipboardService$PerUserClipboard v13 = new ClipboardService$PerUserClipboard(ClipboardService,p2);\n    this.mClipboards.put(p2, v13);\n    boolean v16 = ClipboardService$PerUserClipboard.primaryClipListeners.unregister(p1);', 'int v3 = Binder.getCallingUid();\nint v4 = UserHandle.getUserId(v3);\nboolean v5 = UserManager.supportsMultipleUsers();\nif (v5 == 0) {\n    Object v9 = this.mClipboards.get(p2);\n    if (v9 != 0) {\n        ClipboardService$PerUserClipboard v10 = new ClipboardService$PerUserClipboard(ClipboardService,p2);\n        this.mClipboards.put(p2, v10);\n        boolean v13 = ClipboardService$PerUserClipboard.primaryClipListeners.unregister(p1);']

The method removePrimaryClipChangedListener has the following similar APIs:

- API Name: getPrimaryClip(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ClipData; with Similarity Score: 0.9244533777236938
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = ClipboardService.getIntendingUserId(p2, p3);
ClipboardService$PerUserClipboard v28 = ClipboardService.getClipboardLocked(v27);
if (ClipboardService$PerUserClipboard.primaryClip == 0) { ... }
Object v34 = this.mClipboards.get(p2);
ClipboardService$PerUserClipboard v35 = new ClipboardService$PerUserClipboard(ClipboardService,p2);

- API Name: getPrimaryClipSource(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.9008262157440186
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ClipboardService.getIntendingUserId(p2, p3);
int v6 = Binder.getCallingUid();
int v7 = UserHandle.getAppId(v6);
int v8 = UserHandle.getUid(v5, v7);
Object v24 = v23.getSystemService(KeyguardManage.class);
boolean v25 = v24.isDeviceLocked(p2);
ClipboardService$PerUserClipboard v31 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
this.mClipboards.put(p2, v31);
return ClipboardService$PerUserClipboard.mPrimaryClipPackage;

