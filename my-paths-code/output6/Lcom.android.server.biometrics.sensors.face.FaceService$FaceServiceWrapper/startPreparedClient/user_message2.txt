The method startPreparedClient has the following code snippet:

This is path 1 for the API with depth 2:
public void startPreparedClient(int p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				return;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void startPreparedClient(int p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				v3.startPreparedClient(p1, p2);
				return;
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void startPreparedClient(int p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		ServiceProvider v4 = 0;
		ServiceProvider v3 = v4;
		if (v3 != 0) {
			return;
		}
	}
}

and the following sink code:
['Object v7 = v5.next();\nboolean v8 = v7.containsSensor(p2);\nv3.startPreparedClient(p1, p2);']

The method startPreparedClient has the following similar APIs:

- API Name: onPointerDown(JIIIFF)V with Similarity Score: 0.8552761077880859
  - Access Control Level: NORMAL and the following code:
Iterator v5 = this.mServiceProviders.iterator();
boolean v6 = v5.hasNext();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;
ServiceProvider v3 = v4;
v3.onPointerDown(p1, p2, p3, p4, p5, p6);

- API Name: createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession; with Similarity Score: 0.8492485284805298
  - Access Control Level: NORMAL and the following code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;
ServiceProvider v3 = v4;
ITestSession v9 = v3.createTestSession(p1, p2, p3);
return v9;

