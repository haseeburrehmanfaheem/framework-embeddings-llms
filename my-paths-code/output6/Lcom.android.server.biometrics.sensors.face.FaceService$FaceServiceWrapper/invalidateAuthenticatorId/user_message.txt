This is path 1 for the API with depth 2:
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				return;
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);
				return;
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		ServiceProvider v4 = 0;
		ServiceProvider v3 = v4;
		if (v3 != 0) {
			return;
		}
	}
}
