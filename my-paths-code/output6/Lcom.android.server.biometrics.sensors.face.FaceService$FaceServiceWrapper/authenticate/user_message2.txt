The method authenticate has the following code snippet:

This is path 1 for the API with depth 2:
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	Resources v6 = v3.getResources();
	String v7 = v6.getString(17039993);
	ComponentName v8 = ComponentName.unflattenFromString(v7);
	if (v8 == 0) {
		String v9 = v8.getPackageName();
		if (v5 == 0) {
			if ( == 0) {
				boolean v10 = .equals(p5);
				if (v10 == 0) {
					boolean v4 = ;
					Context v11 = this.this$0.getContext();
					Resources v14 = v11.getResources();
					String v15 = v14.getString(17039993);
					ComponentName v16 = ComponentName.unflattenFromString(v15);
					if (v16 == 0) {
						String v17 = v16.getPackageName();
						if (v13 == 0) {
							if ( == 0) {
								boolean v18 = .equals(p5);
								if (v18 == 0) {
									boolean v12 = ;
									List v21 = FaceService.getSensorProperties();
									int v22 = v21.size();
									if (v22 == 1) {
										Object v23 = v21.get(0);
										Iterator v24 = this.mServiceProviders.iterator();
										boolean v25 = v24.hasNext();
										if (v25 == 0) {
											Object v26 = v24.next();
											boolean v27 = v26.containsSensor(FaceSensorPropertiesInternal.sensorId);
											if (v27 == 0) {
												Pair v28 = new Pair(v29,v26);
												Integer v29 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
												Pair v20 = v28;
												Pair v19 = v20;
												if (v19 != 0) {
													int v31 = Pair.first.intValue();
													ClientMonitorCallbackConverter v32 = new ClientMonitorCallbackConverter(p4);
													long v34 = Pair.second.scheduleAuthenticate(v31, p1, p2, p3, 0, v32, p5, 0, v4, v12, p6);
													return v34;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	Resources v6 = v3.getResources();
	String v7 = v6.getString(17039993);
	ComponentName v8 = ComponentName.unflattenFromString(v7);
	if (v8 == 0) {
		String v9 = v8.getPackageName();
		if (v5 == 0) {
			if ( == 0) {
				boolean v10 = .equals(p5);
				if (v10 == 0) {
					boolean v4 = ;
					Context v11 = this.this$0.getContext();
					Resources v14 = v11.getResources();
					String v15 = v14.getString(17039993);
					ComponentName v16 = ComponentName.unflattenFromString(v15);
					if (v16 == 0) {
						String v17 = v16.getPackageName();
						if (v13 == 0) {
							if ( == 0) {
								boolean v18 = .equals(p5);
								if (v18 == 0) {
									boolean v12 = ;
									List v21 = FaceService.getSensorProperties();
									int v22 = v21.size();
									if (v22 == 1) {
										Object v23 = v21.get(0);
										Iterator v24 = this.mServiceProviders.iterator();
										boolean v25 = v24.hasNext();
										if (v25 == 0) {
											Object v26 = v24.next();
											boolean v27 = v26.containsSensor(FaceSensorPropertiesInternal.sensorId);
											if (v27 == 0) {
												Pair v28 = new Pair(v29,v26);
												Integer v29 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
												Pair v20 = v28;
												Pair v19 = v20;
												if (v19 != 0) {
													return -1;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['List v21 = FaceService.getSensorProperties();\nint v22 = v21.size();\nObject v23 = v21.get(0);\nIterator v24 = this.mServiceProviders.iterator();\nboolean v25 = v24.hasNext();\nObject v26 = v24.next();\nPair v28 = new Pair(v29,v26);\nInteger v29 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);\nlong v34 = Pair.second.scheduleAuthenticate(v31, p1, p2, p3, 0, v32, p5, 0, v4, v12, p6);', 'ClientMonitorCallbackConverter v32 = new ClientMonitorCallbackConverter(p4);\nlong v34 = Pair.second.scheduleAuthenticate(v31, p1, p2, p3, 0, v32, p5, 0, v4, v12, p6);']

The method authenticate has the following similar APIs:

- API Name: prepareForAuthentication(ILandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V with Similarity Score: 0.9636134505271912
  - Access Control Level: NORMAL and the following code:
ClientMonitorCallbackConverter v7 = new ClientMonitorCallbackConverter(p5);
v3.scheduleAuthenticate(p1, p2, p3, p4, p8, v7, p6, p7, 1, 2, p9);

- API Name: prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V with Similarity Score: 0.9609115123748779
  - Access Control Level: NORMAL and the following code:
ClientMonitorCallbackConverter v9 = new ClientMonitorCallbackConverter(p6);
v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v9, p7, p8, 1, 2, p10, 0);

