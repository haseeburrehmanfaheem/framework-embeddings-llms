The method enroll has the following code snippet:

This is path 1 for the API with depth 2:
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	List v5 = FaceService.getSensorProperties();
	int v6 = v5.size();
	if (v6 == 1) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				Pair v12 = new Pair(v13,v10);
				Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
				Pair v4 = v12;
				Pair v3 = v4;
				if (v3 != 0) {
					int v15 = Pair.first.intValue();
					long v16 = Pair.second.scheduleEnroll(v15, p2, p3, p1, p4, p5, p6, p7, p8);
					return v16;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	List v5 = FaceService.getSensorProperties();
	int v6 = v5.size();
	if (v6 == 1) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				Pair v12 = new Pair(v13,v10);
				Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
				Pair v4 = v12;
				Pair v3 = v4;
				if (v3 != 0) {
					return -1;
				}
			}
		}
	}
}

and the following sink code:
['List v5 = FaceService.getSensorProperties();\nint v6 = v5.size();\nObject v7 = v5.get(0);\nIterator v8 = this.mServiceProviders.iterator();\nboolean v9 = v8.hasNext();\nif (v9 == 0) {\n    Object v10 = v8.next();\n    boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);\n    if (v11 == 0) {\n        Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);\n        Pair v12 = new Pair(v13,v10);\n        Pair v4 = v12;\n        Pair v3 = v4;\n        if (v3 != 0) {\n            int v15 = Pair.first.intValue();\n            long v16 = Pair.second.scheduleEnroll(v15, p2, p3, p1, p4, p5, p6, p7, p8);\n            return v16;']

The method enroll has the following similar APIs:

- API Name: enroll(Landroid/os/IBinder;[BILandroid/hardware/fingerprint/IFingerprintServiceReceiver;Ljava/lang/String;I)J with Similarity Score: 0.8352742195129395
  - Access Control Level: NORMAL and the following code:
List v5 = FingerprintService.getSensorProperties();
Object v7 = v5.get(0);
Iterator v8 = this.mServiceProviders.iterator();
Pair v12 = new Pair(v13,v10);
long v16 = Pair.second.scheduleEnroll(v15, p1, p2, p3, p4, p5, p6);
return v16;

- API Name: authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J with Similarity Score: 0.8316609859466553
  - Access Control Level: NORMAL and the following code:
List v21 = FaceService.getSensorProperties();
int v22 = v21.size();
Object v23 = v21.get(0);
Iterator v24 = this.mServiceProviders.iterator();
boolean v25 = v24.hasNext();
Object v26 = v24.next();
Pair v28 = new Pair(v29,v26);
Integer v29 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
long v34 = Pair.second.scheduleAuthenticate(v31, p1, p2, p3, 0, v32, p5, 0, v4, v12, p6);

