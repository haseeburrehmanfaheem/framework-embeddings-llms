The method getFeature has the following code snippet:

This is path 1 for the API with depth 2:
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	List v5 = FaceService.getSensorProperties();
	int v6 = v5.size();
	if (v6 == 1) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				Pair v12 = new Pair(v13,v10);
				Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
				Pair v4 = v12;
				Pair v3 = v4;
				if (v3 != 0) {
					int v15 = Pair.first.intValue();
					ClientMonitorCallbackConverter v16 = new ClientMonitorCallbackConverter(p4);
					Pair.second.scheduleGetFeature(v15, p1, p2, p3, v16, p5);
					return;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	List v5 = FaceService.getSensorProperties();
	int v6 = v5.size();
	if (v6 == 1) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				Pair v12 = new Pair(v13,v10);
				Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
				Pair v4 = v12;
				Pair v3 = v4;
				if (v3 != 0) {
					return;
				}
			}
		}
	}
}

and the following sink code:
['List v5 = FaceService.getSensorProperties();\nint v6 = v5.size();\nObject v7 = v5.get(0);\nIterator v8 = this.mServiceProviders.iterator();\nboolean v9 = v8.hasNext();\nif (v9 == 0) {\nObject v10 = v8.next();\nboolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);\nif (v11 == 0) {\nPair v12 = new Pair(v13,v10);\nInteger v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);\nClientMonitorCallbackConverter v16 = new ClientMonitorCallbackConverter(p4);\nPair.second.scheduleGetFeature(v15, p1, p2, p3, v16, p5);']

The method getFeature has the following similar APIs:

- API Name: authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J with Similarity Score: 0.8176257014274597
  - Access Control Level: NORMAL and the following code:
List v21 = FaceService.getSensorProperties();
int v22 = v21.size();
Object v23 = v21.get(0);
Iterator v24 = this.mServiceProviders.iterator();
boolean v25 = v24.hasNext();
Object v26 = v24.next();
Pair v28 = new Pair(v29,v26);
Integer v29 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
long v34 = Pair.second.scheduleAuthenticate(v31, p1, p2, p3, 0, v32, p5, 0, v4, v12, p6);

- API Name: cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V with Similarity Score: 0.8061469197273254
  - Access Control Level: NORMAL and the following code:
List v13 = FaceService.getSensorProperties();
Iterator v16 = this.mServiceProviders.iterator();
Object v18 = v16.next();
Integer v21 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
Pair v20 = new Pair(v21,v18);
int v23 = Pair.first.intValue();
Pair.second.cancelFaceDetect(v23, p1, p3);

