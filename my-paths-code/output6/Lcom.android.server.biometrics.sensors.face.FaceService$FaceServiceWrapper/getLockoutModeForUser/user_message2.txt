The method getLockoutModeForUser has the following code snippet:

This is path 1 for the API with depth 2:
public int getLockoutModeForUser(int p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				return 0;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getLockoutModeForUser(int p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		Object v7 = v5.next();
		boolean v8 = v7.containsSensor(p2);
		if (v8 == 0) {
			ServiceProvider v4 = v7;
			ServiceProvider v3 = v4;
			if (v3 != 0) {
				int v9 = v3.getLockoutModeForUser(p1, p2);
				return v9;
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int getLockoutModeForUser(int p1, int p2){
	Iterator v5 = this.mServiceProviders.iterator();
	boolean v6 = v5.hasNext();
	if (v6 == 0) {
		ServiceProvider v4 = 0;
		ServiceProvider v3 = v4;
		if (v3 != 0) {
			return 0;
		}
	}
}

and the following sink code:
['int v9 = v3.getLockoutModeForUser(p1, p2);\nreturn v9;']

The method getLockoutModeForUser has the following similar APIs:

- API Name: startPreparedClient(II)V with Similarity Score: 0.8426074981689453
  - Access Control Level: NORMAL and the following code:
Iterator v5 = this.mServiceProviders.iterator();
boolean v6 = v5.hasNext();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;

- API Name: cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V with Similarity Score: 0.8379178047180176
  - Access Control Level: NORMAL and the following code:
Iterator v11 = this.mServiceProviders.iterator();
boolean v12 = v11.hasNext();
if (v12 == 0) {
Object v13 = v11.next();
boolean v14 = v13.containsSensor(p2);
if (v14 == 0) {
ServiceProvider v10 = v13;
ServiceProvider v9 = v10;
if (v9 != 0) {
v9.cancelAuthentication(p1, p2, p4);
return;

