This is path 1 for the API with depth 2:
public boolean isRatingBlocked(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
	this.mUserStates.put(p2, v11);
	TvInputManagerService$UserState v9 = phiInstruction;
	TvInputManagerService$UserState v8 = v9;
	PersistentDataStore v14 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8);
	TvContentRating v15 = TvContentRating.unflattenFromString(p1);
	PersistentDataStore.load();
	this.mLoaded = 1;
	Iterator v19 = this.mBlockedRatings.iterator();
	boolean v20 = v19.hasNext();
	Object v21 = v19.next();
	Object v23 = Preconditions.checkNotNull(v21);
	String v24 = v21.getMainRating();
	boolean v25 = v24.equals(this.mRating);
	String v26 = v21.getDomain();
	boolean v27 = v26.equals(this.mDomain);
	String v28 = v21.getRatingSystem();
	boolean v29 = v28.equals(this.mRatingSystem);
	String v30 = v21.getMainRating();
	boolean v31 = v30.equals(this.mRating);
	List v32 = TvContentRating.getSubRatings();
	List v33 = v21.getSubRatings();
	boolean v34 = v32.containsAll(v33);
	boolean v22 = v34;
	boolean v16 = 1;
	Binder.restoreCallingIdentity(v6);
	return v16;
}

This is path 2 for the API with depth 2:
public boolean isRatingBlocked(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v9 = phiInstruction;
	TvInputManagerService$UserState v8 = v9;
	PersistentDataStore v11 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8);
	TvContentRating v12 = TvContentRating.unflattenFromString(p1);
	PersistentDataStore.load();
	this.mLoaded = 1;
	Iterator v16 = this.mBlockedRatings.iterator();
	boolean v17 = v16.hasNext();
	Object v18 = v16.next();
	Object v20 = Preconditions.checkNotNull(v18);
	String v21 = v18.getMainRating();
	boolean v22 = v21.equals(this.mRating);
	String v23 = v18.getDomain();
	boolean v24 = v23.equals(this.mDomain);
	String v25 = v18.getRatingSystem();
	boolean v26 = v25.equals(this.mRatingSystem);
	String v27 = v18.getMainRating();
	boolean v28 = v27.equals(this.mRating);
	List v29 = TvContentRating.getSubRatings();
	List v30 = v18.getSubRatings();
	boolean v31 = v29.containsAll(v30);
	boolean v19 = v31;
	boolean v13 = 1;
	Binder.restoreCallingIdentity(v6);
	return v13;
}

This is path 3 for the API with depth 2:
public boolean isRatingBlocked(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
	this.mUserStates.put(p2, v11);
	TvInputManagerService$UserState v9 = phiInstruction;
	TvInputManagerService$UserState v8 = v9;
	PersistentDataStore v14 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8);
	TvContentRating v15 = TvContentRating.unflattenFromString(p1);
	PersistentDataStore.load();
	this.mLoaded = 1;
	Iterator v19 = this.mBlockedRatings.iterator();
	boolean v20 = v19.hasNext();
	boolean v16 = 0;
	Binder.restoreCallingIdentity(v6);
	return v16;
}
