This is path 1 for the API with depth 2:
public List getAvailableExtensionInterfaceNames(String p1, int p2){
	int v4 = Binder.getCallingUid();
	int v5 = Binder.getCallingPid();
	int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v7 = v8;
	int v6 = v7;
	long v9 = Binder.clearCallingIdentity();
	Object v10 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0);
	this.mUserStates.put(p2, v14);
	TvInputManagerService$UserState v12 = phiInstruction;
	TvInputManagerService$UserState v11 = v12;
	Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11);
	Object v18 = v17.get(p1);
	Map v19 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v11);
	TvInputInfo v20 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v18);
	ComponentName v21 = v20.getComponent();
	Object v22 = v19.get(v21);
	boolean v23 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v22);
	ITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	ITvInputService v25 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	ArrayList v26 = new ArrayList();
	List v28 = phiInstruction.getAvailableExtensionInterfaceNames();
	List v29 = CollectionUtils.emptyIfNull(v28);
	Iterator v30 = v29.iterator();
	boolean v31 = v30.hasNext();
	Object v32 = v30.next();
	String v33 = phiInstruction.getExtensionInterfacePermission(v32);
	ArrayList v35 = new ArrayList();
	Binder.restoreCallingIdentity(v9);
	return v35;
}

This is path 2 for the API with depth 2:
public List getAvailableExtensionInterfaceNames(String p1, int p2){
	int v4 = Binder.getCallingUid();
	int v5 = Binder.getCallingPid();
	int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v7 = v8;
	int v6 = v7;
	long v9 = Binder.clearCallingIdentity();
	Object v10 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0);
	this.mUserStates.put(p2, v14);
	TvInputManagerService$UserState v12 = phiInstruction;
	TvInputManagerService$UserState v11 = v12;
	Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11);
	Object v18 = v17.get(p1);
	Map v19 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v11);
	TvInputInfo v20 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v18);
	ComponentName v21 = v20.getComponent();
	Object v22 = v19.get(v21);
	boolean v23 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v22);
	ITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	ArrayList v25 = new ArrayList();
	List v27 = phiInstruction.getAvailableExtensionInterfaceNames();
	List v28 = CollectionUtils.emptyIfNull(v27);
	Iterator v29 = v28.iterator();
	boolean v30 = v29.hasNext();
	Object v31 = v29.next();
	String v32 = phiInstruction.getExtensionInterfacePermission(v31);
	ArrayList v34 = new ArrayList();
	Binder.restoreCallingIdentity(v9);
	return v34;
}

This is path 3 for the API with depth 2:
public List getAvailableExtensionInterfaceNames(String p1, int p2){
	int v4 = Binder.getCallingUid();
	int v5 = Binder.getCallingPid();
	int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v7 = v8;
	int v6 = v7;
	long v9 = Binder.clearCallingIdentity();
	Object v10 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v12 = phiInstruction;
	TvInputManagerService$UserState v11 = v12;
	Map v14 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11);
	Object v15 = v14.get(p1);
	Map v16 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v11);
	TvInputInfo v17 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v15);
	ComponentName v18 = v17.getComponent();
	Object v19 = v16.get(v18);
	boolean v20 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v19);
	ITvInputService v21 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v19);
	ITvInputService v22 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v19);
	ArrayList v23 = new ArrayList();
	List v25 = phiInstruction.getAvailableExtensionInterfaceNames();
	List v26 = CollectionUtils.emptyIfNull(v25);
	Iterator v27 = v26.iterator();
	boolean v28 = v27.hasNext();
	Object v29 = v27.next();
	String v30 = phiInstruction.getExtensionInterfacePermission(v29);
	ArrayList v32 = new ArrayList();
	Binder.restoreCallingIdentity(v9);
	return v32;
}
