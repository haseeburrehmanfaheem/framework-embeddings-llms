The method addHardwareDevice has the following code snippet:

This is path 1 for the API with depth 2:
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v1 = new TvInputHardwareInfo$Builder();
	Integer v4 = Integer.valueOf(p1);
	this.mDeviceId = v4;
	TvInputHardwareInfo$Builder v3 = TvInputHardwareInfo$Builder;
	Integer v6 = Integer.valueOf(9);
	this.mType = v6;
	TvInputHardwareInfo$Builder v5 = TvInputHardwareInfo$Builder;
	this.mAudioType = 0;
	TvInputHardwareInfo$Builder v7 = TvInputHardwareInfo$Builder;
	this.mAudioAddress = "0";
	TvInputHardwareInfo$Builder v8 = TvInputHardwareInfo$Builder;
	Integer v10 = Integer.valueOf(0);
	this.mHdmiPortId = v10;
	TvInputHardwareInfo$Builder v9 = TvInputHardwareInfo$Builder;
	int v12 = this.mType.intValue();
	int v13 = this.mType.intValue();
	TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
	int v16 = this.mDeviceId.intValue();
	this.mDeviceId = v16;
	int v18 = this.mType.intValue();
	this.mType = v18;
	this.mAudioType = this.mAudioType;
	int v21 = this.mAudioType;
	this.mAudioAddress = this.mAudioAddress;
	int v23 = this.mHdmiPortId.intValue();
	this.mHdmiPortId = v23;
	int v25 = this.mCableConnectionStatus.intValue();
	this.mCableConnectionStatus = v25;
	TvInputHardwareInfo v11 = v14;
	TvInputHardwareManager v27 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);
	this.mConfigs = p2;
	int v32 = this.mCableConnectionStatus;
	this.mIsCableConnectionStatusUpdated = 1;
	TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder();
	TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32);
	TvInputHardwareInfo v36 = v35.build();
	this.mHardwareInfo = v36;
	boolean v33 = this.mIsCableConnectionStatusUpdated;
	int v37 = this.mDeviceId;
	this.mConnections.put(v37, v29);
	this.mHardwareList.clear();
	int v41 = this.mConnections.size();
	Message v42 = this.mHandler.obtainMessage(2, 0, 0, v11);
	v42.sendToTarget();
	int v44 = this.mType;
	Iterator v46 = this.mPendingHdmiDeviceEvents.iterator();
	boolean v47 = v46.hasNext();
	return;
}
This is path 2 for the API with depth 2:
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v1 = new TvInputHardwareInfo$Builder();
	Integer v4 = Integer.valueOf(p1);
	this.mDeviceId = v4;
	TvInputHardwareInfo$Builder v3 = TvInputHardwareInfo$Builder;
	Integer v6 = Integer.valueOf(9);
	this.mType = v6;
	TvInputHardwareInfo$Builder v5 = TvInputHardwareInfo$Builder;
	this.mAudioType = 0;
	TvInputHardwareInfo$Builder v7 = TvInputHardwareInfo$Builder;
	this.mAudioAddress = "0";
	TvInputHardwareInfo$Builder v8 = TvInputHardwareInfo$Builder;
	Integer v10 = Integer.valueOf(0);
	this.mHdmiPortId = v10;
	TvInputHardwareInfo$Builder v9 = TvInputHardwareInfo$Builder;
	int v12 = this.mType.intValue();
	int v13 = this.mType.intValue();
	TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
	int v16 = this.mDeviceId.intValue();
	this.mDeviceId = v16;
	int v18 = this.mType.intValue();
	this.mType = v18;
	this.mAudioType = this.mAudioType;
	int v21 = this.mAudioType;
	this.mAudioAddress = this.mAudioAddress;
	int v23 = this.mHdmiPortId.intValue();
	this.mHdmiPortId = v23;
	int v25 = this.mCableConnectionStatus.intValue();
	this.mCableConnectionStatus = v25;
	TvInputHardwareInfo v11 = v14;
	TvInputHardwareManager v27 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);
	this.mConfigs = p2;
	int v32 = this.mCableConnectionStatus;
	this.mIsCableConnectionStatusUpdated = 1;
	TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder();
	TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32);
	TvInputHardwareInfo v36 = v35.build();
	this.mHardwareInfo = v36;
	boolean v33 = this.mIsCableConnectionStatusUpdated;
	int v37 = this.mDeviceId;
	this.mConnections.put(v37, v29);
	this.mHardwareList.clear();
	int v41 = this.mConnections.size();
	Message v42 = this.mHandler.obtainMessage(2, 0, 0, v11);
	v42.sendToTarget();
	int v44 = this.mType;
	Iterator v46 = this.mPendingHdmiDeviceEvents.iterator();
	boolean v47 = v46.hasNext();
	return;
}
This is path 3 for the API with depth 2:
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v1 = new TvInputHardwareInfo$Builder();
	Integer v4 = Integer.valueOf(p1);
	this.mDeviceId = v4;
	TvInputHardwareInfo$Builder v3 = TvInputHardwareInfo$Builder;
	Integer v6 = Integer.valueOf(9);
	this.mType = v6;
	TvInputHardwareInfo$Builder v5 = TvInputHardwareInfo$Builder;
	this.mAudioType = 0;
	TvInputHardwareInfo$Builder v7 = TvInputHardwareInfo$Builder;
	this.mAudioAddress = "0";
	TvInputHardwareInfo$Builder v8 = TvInputHardwareInfo$Builder;
	Integer v10 = Integer.valueOf(0);
	this.mHdmiPortId = v10;
	TvInputHardwareInfo$Builder v9 = TvInputHardwareInfo$Builder;
	int v12 = this.mType.intValue();
	int v13 = this.mType.intValue();
	TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
	int v16 = this.mDeviceId.intValue();
	this.mDeviceId = v16;
	int v18 = this.mType.intValue();
	this.mType = v18;
	this.mAudioType = this.mAudioType;
	int v21 = this.mAudioType;
	this.mAudioAddress = this.mAudioAddress;
	int v23 = this.mHdmiPortId.intValue();
	this.mHdmiPortId = v23;
	int v25 = this.mCableConnectionStatus.intValue();
	this.mCableConnectionStatus = v25;
	TvInputHardwareInfo v11 = v14;
	TvInputHardwareManager v27 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);
	this.mConfigs = p2;
	int v32 = this.mCableConnectionStatus;
	this.mIsCableConnectionStatusUpdated = 1;
	TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder();
	TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32);
	TvInputHardwareInfo v36 = v35.build();
	this.mHardwareInfo = v36;
	boolean v33 = this.mIsCableConnectionStatusUpdated;
	int v37 = this.mDeviceId;
	this.mConnections.put(v37, v29);
	this.mHardwareList.clear();
	int v41 = this.mConnections.size();
	Message v42 = this.mHandler.obtainMessage(2, 0, 0, v11);
	v42.sendToTarget();
	int v44 = this.mType;
	Iterator v46 = this.mPendingHdmiDeviceEvents.iterator();
	boolean v47 = v46.hasNext();
	return;
}

and the following sink code:
['Integer v4 = Integer.valueOf(p1);\nthis.mDeviceId = v4;\nTvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);\nthis.mConnections.put(v37, v29);', 'TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder();\nTvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32);\nTvInputHardwareInfo v36 = v35.build();\nthis.mHardwareInfo = v36;']

The method addHardwareDevice has the following similar APIs:

- API Name: captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z with Similarity Score: 0.8241870999336243
  - Access Control Level: SYS_OR_SIG and the following code:
TvInputHardwareManager v31 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
int v34 = this.mConnections.size();
Object v35 = this.mConnections.get(phiInstruction);
TvInputInfo v36 = v35.getInfoLocked();
String v37 = v36.getId();

- API Name: captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z with Similarity Score: 0.815807580947876
  - Access Control Level: SYS_OR_SIG and the following code:
TvInputHardwareManager v31 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
int v34 = this.mConnections.size();
Object v35 = this.mConnections.get(phiInstruction);
TvInputInfo v36 = v35.getInfoLocked();
String v37 = v36.getId();

