The method getExtensionInterface has the following code snippet:

This is path 1 for the API with depth 2:
public IBinder getExtensionInterface(String p1, String p2, int p3){
	int v4 = Binder.getCallingUid();
	int v5 = Binder.getCallingPid();
	int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v7 = v8;
	int v6 = v7;
	long v9 = Binder.clearCallingIdentity();
	Object v10 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0);
	this.mUserStates.put(p2, v14);
	TvInputManagerService$UserState v12 = phiInstruction;
	TvInputManagerService$UserState v11 = v12;
	Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11);
	Object v18 = v17.get(p1);
	Map v19 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v11);
	TvInputInfo v20 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v18);
	ComponentName v21 = v20.getComponent();
	Object v22 = v19.get(v21);
	boolean v23 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v22);
	ITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	ITvInputService v25 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	String v26 = phiInstruction.getExtensionInterfacePermission(p2);
	IBinder v27 = phiInstruction.getExtensionInterface(p2);
	Binder.restoreCallingIdentity(v9);
	return 0;
}
This is path 2 for the API with depth 2:
public IBinder getExtensionInterface(String p1, String p2, int p3){
	int v4 = Binder.getCallingUid();
	int v5 = Binder.getCallingPid();
	int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v7 = v8;
	int v6 = v7;
	long v9 = Binder.clearCallingIdentity();
	Object v10 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0);
	this.mUserStates.put(p2, v14);
	TvInputManagerService$UserState v12 = phiInstruction;
	TvInputManagerService$UserState v11 = v12;
	Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11);
	Object v18 = v17.get(p1);
	Map v19 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v11);
	TvInputInfo v20 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v18);
	ComponentName v21 = v20.getComponent();
	Object v22 = v19.get(v21);
	boolean v23 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v22);
	ITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	ITvInputService v25 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	String v26 = phiInstruction.getExtensionInterfacePermission(p2);
	Binder.restoreCallingIdentity(v9);
	return 0;
}
This is path 3 for the API with depth 2:
public IBinder getExtensionInterface(String p1, String p2, int p3){
	int v4 = Binder.getCallingUid();
	int v5 = Binder.getCallingPid();
	int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v7 = v8;
	int v6 = v7;
	long v9 = Binder.clearCallingIdentity();
	Object v10 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2);
	TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0);
	this.mUserStates.put(p2, v14);
	TvInputManagerService$UserState v12 = phiInstruction;
	TvInputManagerService$UserState v11 = v12;
	Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11);
	Object v18 = v17.get(p1);
	Map v19 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v11);
	TvInputInfo v20 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v18);
	ComponentName v21 = v20.getComponent();
	Object v22 = v19.get(v21);
	boolean v23 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v22);
	ITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	ITvInputService v25 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);
	String v26 = phiInstruction.getExtensionInterfacePermission(p2);
	IBinder v27 = phiInstruction.getExtensionInterface(p2);
	Binder.restoreCallingIdentity(v9);
	return v27;
}

and the following sink code:
['int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);\nTvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2);\nMap v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11);\nObject v18 = v17.get(p1);\nITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22);\nString v26 = phiInstruction.getExtensionInterfacePermission(p2);\nIBinder v27 = phiInstruction.getExtensionInterface(p2);\nreturn v27;']

The method getExtensionInterface has the following similar APIs:

- API Name: sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V with Similarity Score: 0.912330687046051
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);
ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
ITvInputSession v9 = v11;
ITvInputSession v8 = v9;
v8.appPrivateCommand(p2, p3);

- API Name: timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V with Similarity Score: 0.9028145670890808
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);
ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
ITvInputSession v8 = v9;
v8.timeShiftEnablePositionTracking(p2);

