The method registerVcnStatusCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
	Object v14 = this.mConfigs.get(p1);
	Object v15 = this.mVcns.get(p1);
	boolean v17 = p1.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	Object v19 = this.mPrivilegedPackages.get(p2);
	boolean v20 = v19.contains(VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	boolean v18 = phiInstruction;
	boolean v16 = 0;
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg("VcnStatusCallback threw on VCN status change", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
This is path 2 for the API with depth 2:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
	Object v14 = this.mConfigs.get(p1);
	Object v15 = this.mVcns.get(p1);
	boolean v17 = p1.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	Object v19 = this.mPrivilegedPackages.get(p2);
	boolean v20 = v19.contains(VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	boolean v18 = phiInstruction;
	boolean v16 = 1;
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg("VcnStatusCallback threw on VCN status change", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
This is path 3 for the API with depth 2:
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v9, 0);
	boolean v12 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);
	Object v14 = this.mConfigs.get(p1);
	Object v15 = this.mVcns.get(p1);
	boolean v17 = p1.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	Object v19 = this.mPrivilegedPackages.get(p2);
	boolean v20 = v19.contains(VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	boolean v18 = phiInstruction;
	boolean v16 = 0;
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg("VcnStatusCallback threw on VCN status change", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}

and the following sink code:
['IBinder v8 = p2.asBinder();\nVcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);\nv8.linkToDeath(v9, 0);\nObject v13 = this.mRegisteredStatusCallbacks.put(v8, v9);', 'Object v14 = this.mConfigs.get(p1);\nObject v15 = this.mVcns.get(p1);\nboolean v17 = p1.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);', 'Object v19 = this.mPrivilegedPackages.get(p2);\nboolean v20 = v19.contains(VcnManagementService$VcnStatusCallbackInfo.mPkgName);', 'VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);']

The method registerVcnStatusCallback has the following similar APIs:

- API Name: unregisterVcnStatusCallback(Landroid/net/vcn/IVcnStatusCallback;)V with Similarity Score: 0.8147594332695007
  - Access Control Level: NONE and the following code:
IBinder v3 = p1.asBinder();
Object v4 = this.mRegisteredStatusCallbacks.remove(v3);

- API Name: addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V with Similarity Score: 0.725267231464386
  - Access Control Level: SYS_OR_SIG and the following code:
HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p2);
IBinder v9 = p2.asBinder();
v9.linkToDeath(v7, 0);
boolean v11 = this.mDeviceEventListenerRecords.add(v7);

