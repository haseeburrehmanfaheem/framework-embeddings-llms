The method applyRestore has the following code snippet:

This is path 1 for the API with depth 0:
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v2 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v4 = XmlPullParserFactory.newInstance();
	return;
}
This is path 2 for the API with depth 0:
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v2 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v4 = XmlPullParserFactory.newInstance();
	XmlPullParser v5 = v4.newPullParser();
	return;
}
This is path 3 for the API with depth 0:
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v2 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v4 = XmlPullParserFactory.newInstance();
	XmlPullParser v5 = v4.newPullParser();
	return;
}
This is path 4 for the API with depth 0:
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v2 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v4 = XmlPullParserFactory.newInstance();
	XmlPullParser v5 = v4.newPullParser();
	String v6 = Xml$Encoding.UTF_8.name();
	return;
}

and the following sink code:
['ByteArrayInputStream v2 = new ByteArrayInputStream(p1);']

The method applyRestore has the following similar APIs:

- API Name: requestUninstall([BLandroid/app/timezone/ICallback;)I with Similarity Score: 0.7856341600418091
  - Access Control Level: NONE and the following code:
ByteArrayInputStream v4 = new ByteArrayInputStream(p1);
DataInputStream v6 = new DataInputStream(v4);
int v8 = v6.readInt();
long v9 = v6.readLong();
long v10 = v6.readLong();

