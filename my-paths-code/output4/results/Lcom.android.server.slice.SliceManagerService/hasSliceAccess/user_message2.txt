The method hasSliceAccess has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasSliceAccess(String p1){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	long v7 = Binder.clearCallingIdentity();
	SliceManagerService$PackageMatchingCache v9 = SliceManagerService.getHomeMatcher(p2);
	boolean v10 = v9.matches(p1);
	boolean v8 = v10;
	SliceManagerService$PackageMatchingCache v12 = SliceManagerService.getAssistantMatcher(p2);
	boolean v13 = v12.matches(p1);
	boolean v11 = v13;
	boolean v15 = this.mPermissions.hasFullAccess(p1, p2);
	boolean v14 = v15;
	Binder.restoreCallingIdentity(v7);
	boolean v6 = phiInstruction;
	return v6;
}
This is path 2 for the API with depth 2:
public boolean hasSliceAccess(String p1){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	long v7 = Binder.clearCallingIdentity();
	SliceManagerService$PackageMatchingCache v9 = SliceManagerService.getHomeMatcher(p2);
	boolean v10 = v9.matches(p1);
	boolean v8 = v10;
	SliceManagerService$PackageMatchingCache v12 = SliceManagerService.getAssistantMatcher(p2);
	boolean v13 = v12.matches(p1);
	boolean v11 = v13;
	boolean v15 = this.mPermissions.hasFullAccess(p1, p2);
	boolean v14 = v15;
	Binder.restoreCallingIdentity(v7);
	boolean v6 = phiInstruction;
	return v6;
}

and the following sink code:
['SliceManagerService$PackageMatchingCache v9 = SliceManagerService.getHomeMatcher(p2);\nboolean v10 = v9.matches(p1);\nSliceManagerService$PackageMatchingCache v12 = SliceManagerService.getAssistantMatcher(p2);\nboolean v13 = v12.matches(p1);\nboolean v15 = this.mPermissions.hasFullAccess(p1, p2);']

The method hasSliceAccess has the following similar APIs:

- API Name: unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V with Similarity Score: 0.7856912612915039
  - Access Control Level: SYS_OR_SIG and the following code:
int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0);
UserHandle v9 = Binder.getCallingUserHandle();
int v10 = v9.getIdentifier();
Uri v14 = ContentProvider.getUriWithoutUserId(p2);
String v15 = v14.getAuthority();
PackageManager v16 = this.mContext.getPackageManager();
ProviderInfo v18 = v16.resolveContentProviderAsUser(v15, 0, v17);

- API Name: revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V with Similarity Score: 0.7267196178436279
  - Access Control Level: NONE and the following code:
SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5);
SlicePermissionManager$PkgUser v10 = new SlicePermissionManager$PkgUser(p1,v5);
Object v13 = this.mCachedClients.get(v8);
SliceClientPermissions v20 = new SliceClientPermissions(v8,SlicePermissionManager);
Object v22 = this.mCachedClients.put(v8, v20);

