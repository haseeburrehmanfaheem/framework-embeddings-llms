The method downloadMessage has the following code snippet:

This is path 1 for the API with depth 2:
public void downloadMessage(int p1, String p2, String p3, Uri p4, Bundle p5, PendingIntent p6, long p7, String p8){
	Uri v19 = ContentProvider.maybeAddUserId(p4, v18);
	long v20 = Binder.clearCallingIdentity();
	Object v22 = this.sLocalServiceObjects.get(UriGrantsManagerInterna.class);
	Object v21 = v22;
	NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, "com.android.phone", 0);
	v21.grantUriPermissionUncheckedFromIntent(v23, 0);
	Intent v25 = new Intent("android.service.carrier.CarrierMessagingService");
	Context v27 = this.mContext;
	Object v28 = v27.getSystemService("phone");
	int v30 = this.this$0.getPhoneIdFromSubId(p4);
	int v29 = v30;
	List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29);
	int v32 = v31.size();
	Object v33 = v31.get(0);
	NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0);
	v21.grantUriPermissionUncheckedFromIntent(v34, 0);
	Binder.restoreCallingIdentity(v20);
	Uri v12 = phiInstruction;
	IMms v39 = MmsServiceBroker.getOrConnectService();
	IMms v38 = this.mServiceStubForFailure;
	IMms v37 = v38;
	v37.downloadMessage(p1, p2, p3, v12, p5, p6, p7, p8);
	return;
}
This is path 2 for the API with depth 2:
public void downloadMessage(int p1, String p2, String p3, Uri p4, Bundle p5, PendingIntent p6, long p7, String p8){
	Uri v19 = ContentProvider.maybeAddUserId(p4, v18);
	long v20 = Binder.clearCallingIdentity();
	Object v22 = this.sLocalServiceObjects.get(UriGrantsManagerInterna.class);
	Object v21 = v22;
	NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, "com.android.phone", 0);
	v21.grantUriPermissionUncheckedFromIntent(v23, 0);
	Intent v25 = new Intent("android.service.carrier.CarrierMessagingService");
	Context v27 = this.mContext;
	Object v28 = v27.getSystemService("phone");
	int v30 = this.this$0.getPhoneIdFromSubId(p4);
	int v29 = v30;
	List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29);
	int v32 = v31.size();
	Object v33 = v31.get(0);
	NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0);
	v21.grantUriPermissionUncheckedFromIntent(v34, 0);
	Binder.restoreCallingIdentity(v20);
	Uri v12 = phiInstruction;
	IMms v39 = MmsServiceBroker.getOrConnectService();
	IMms v38 = v39;
	IMms v37 = v38;
	v37.downloadMessage(p1, p2, p3, v12, p5, p6, p7, p8);
	return;
}
This is path 3 for the API with depth 2:
public void downloadMessage(int p1, String p2, String p3, Uri p4, Bundle p5, PendingIntent p6, long p7, String p8){
	long v19 = Binder.clearCallingIdentity();
	Object v21 = this.sLocalServiceObjects.get(UriGrantsManagerInterna.class);
	Object v20 = v21;
	NeededUriGrants v22 = v20.checkGrantUriPermissionFromIntent(v13, v17, "com.android.phone", 0);
	v20.grantUriPermissionUncheckedFromIntent(v22, 0);
	Intent v24 = new Intent("android.service.carrier.CarrierMessagingService");
	Context v26 = this.mContext;
	Object v27 = v26.getSystemService("phone");
	int v29 = this.this$0.getPhoneIdFromSubId(p4);
	int v28 = v29;
	List v30 = v27.getCarrierPackageNamesForIntentAndPhone(v24, v28);
	int v31 = v30.size();
	Object v32 = v30.get(0);
	NeededUriGrants v33 = v20.checkGrantUriPermissionFromIntent(v13, v17, v32, 0);
	v20.grantUriPermissionUncheckedFromIntent(v33, 0);
	Binder.restoreCallingIdentity(v19);
	Uri v12 = phiInstruction;
	IMms v38 = MmsServiceBroker.getOrConnectService();
	IMms v37 = this.mServiceStubForFailure;
	IMms v36 = v37;
	v36.downloadMessage(p1, p2, p3, v12, p5, p6, p7, p8);
	return;
}

and the following sink code:
['Uri v19 = ContentProvider.maybeAddUserId(p4, v18);\nNeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, "com.android.phone", 0);\nv21.grantUriPermissionUncheckedFromIntent(v23, 0);\nList v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29);\nNeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0);\nv21.grantUriPermissionUncheckedFromIntent(v34, 0);\nIMms v37 = MmsServiceBroker.getOrConnectService();\nv37.downloadMessage(p1, p2, p3, v12, p5, p6, p7, p8);']

The method downloadMessage has the following similar APIs:

- API Name: sendMessage(ILjava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V with Similarity Score: 0.8801566958427429
  - Access Control Level: SYS_OR_SIG and the following code:
Uri v19 = ContentProvider.maybeAddUserId(p3, v18);
NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, "com.android.phone", 0);
v21.grantUriPermissionUncheckedFromIntent(v23, 0);
int v30 = this.this$0.getPhoneIdFromSubId(p4);
List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29);
NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0);
v21.grantUriPermissionUncheckedFromIntent(v34, 0);
IMms v37 = this.mServiceStubForFailure;
v37.sendMessage(p1, p2, v12, p4, p5, p6, p7, p8);

- API Name: grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V with Similarity Score: 0.7292221784591675
  - Access Control Level: NONE and the following code:
Uri v42 = ContentProvider.getUriWithoutUserId(p3);
String v43 = v42.getAuthority();
Object v48 = this.mAuths.put(v43, v46);

