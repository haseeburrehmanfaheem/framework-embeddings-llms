The method getEnabledInputMethodSubtypeList has the following code snippet:

This is path 1 for the API with depth 2:
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mCurrentUserId;
	Object v5 = this.sLocalServiceObjects.get(UserManagerInterna.class);
	Object v4 = v5;
	boolean v6 = v4.exists(v1);
	[I v7 = new [I(1);
	[I v3 = v7;
	long v8 = Binder.clearCallingIdentity();
	String v12 = this.mBindingController.getSelectedMethodId();
	String v11 = v12;
	Object v13 = this.mMethodMap.get(v11);
	List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction);
	boolean v16 = v15.isEmpty();
	Resources v17 = this.mContext.getResources();
	ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction);
	List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction);
	List v14 = v19;
	List v9 = v14;
	Binder.restoreCallingIdentity(v8);
	return v9;
}
This is path 2 for the API with depth 2:
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mCurrentUserId;
	Object v5 = this.sLocalServiceObjects.get(UserManagerInterna.class);
	Object v4 = v5;
	boolean v6 = v4.exists(v1);
	[I v7 = new [I(1);
	[I v3 = v7;
	long v8 = Binder.clearCallingIdentity();
	String v12 = this.mBindingController.getSelectedMethodId();
	String v11 = v12;
	Object v13 = this.mMethodMap.get(p1);
	List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction);
	boolean v16 = v15.isEmpty();
	Resources v17 = this.mContext.getResources();
	ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction);
	List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction);
	List v14 = v19;
	List v9 = v14;
	Binder.restoreCallingIdentity(v8);
	return v9;
}
This is path 3 for the API with depth 2:
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mCurrentUserId;
	Object v5 = this.sLocalServiceObjects.get(UserManagerInterna.class);
	Object v4 = v5;
	[I v6 = new [I(1);
	[I v3 = v6;
	long v7 = Binder.clearCallingIdentity();
	String v11 = this.mBindingController.getSelectedMethodId();
	String v10 = v11;
	Object v12 = this.mMethodMap.get(v10);
	List v14 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction);
	boolean v15 = v14.isEmpty();
	Resources v16 = this.mContext.getResources();
	ArrayList v17 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v16, phiInstruction);
	List v18 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction);
	List v13 = v18;
	List v8 = v13;
	Binder.restoreCallingIdentity(v7);
	return v8;
}

and the following sink code:
['String v12 = this.mBindingController.getSelectedMethodId();\nObject v13 = this.mMethodMap.get(v11);\nList v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction);\nArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction);\nList v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction);\nreturn v9;']

The method getEnabledInputMethodSubtypeList has the following similar APIs:

- API Name: getCurrentInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype; with Similarity Score: 0.9335129261016846
  - Access Control Level: SYS_OR_SIG and the following code:
String v15 = this.mBindingController.getSelectedMethodId();
Object v18 = this.mMethodMap.get(v14);
int v19 = v18.getSubtypeCount();
List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18);
List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction);
Object v42 = v27.get(phiInstruction);
String v43 = v42.getLocale();
String v46 = v45.getMode();
InputMethodSubtype v35 = phiInstruction;
this.mCurrentSubtype = v35;

- API Name: getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype; with Similarity Score: 0.8285513520240784
  - Access Control Level: SYS_OR_SIG and the following code:
List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked();
List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked();
Object v19 = v17.next();
String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second);
Pair v24 = new Pair(Pair.first,v22);
Object v28 = this.mMethodMap.get(Pair.first);
int v29 = Integer.parseInt(Pair.second);
InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);

