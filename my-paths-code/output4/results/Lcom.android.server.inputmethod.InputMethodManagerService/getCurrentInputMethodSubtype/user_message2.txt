The method getCurrentInputMethodSubtype has the following code snippet:

This is path 1 for the API with depth 2:
public InputMethodSubtype getCurrentInputMethodSubtype(){
	String v9 = Debug.getCallers(10);
	boolean v1 = 0;
	String v15 = this.mBindingController.getSelectedMethodId();
	String v14 = v15;
	int v17 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
	boolean v16 = phiInstruction;
	Object v18 = this.mMethodMap.get(v14);
	int v19 = v18.getSubtypeCount();
	int v20 = this.mSubtypeHashCode;
	int v22 = InputMethodUtils.getSubtypeIdFromHashCode(v18, v20);
	boolean v21 = phiInstruction;
	Object v24 = this.mMethodMap.get(v14);
	int v25 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
	int v26 = InputMethodUtils.getSubtypeIdFromHashCode(v24, v25);
	int v23 = v26;
	List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18);
	boolean v29 = v28.isEmpty();
	Resources v30 = this.mContext.getResources();
	ArrayList v31 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v30, v18);
	List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction);
	List v27 = v32;
	int v33 = v27.size();
	int v34 = v27.size();
	int v36 = v27.size();
	boolean v37 = TextUtils.isEmpty(0);
	Configuration v38 = this.mRes.getConfiguration();
	String v39 = Configuration.locale.toString();
	String v40 = InputMethodUtils.getLanguageFromLocaleString(phiInstruction);
	int v41 = v27.size();
	Object v42 = v27.get(phiInstruction);
	String v43 = v42.getLocale();
	String v44 = InputMethodUtils.getLanguageFromLocaleString(v43);
	Object v45 = v27.get(phiInstruction);
	String v46 = v45.getMode();
	boolean v47 = v46.equalsIgnoreCase("keyboard");
	boolean v48 = phiInstruction.equals(v43);
	InputMethodSubtype v35 = phiInstruction;
	this.mCurrentSubtype = v35;
	int v50 = v27.size();
	boolean v51 = TextUtils.isEmpty(0);
	Configuration v52 = this.mRes.getConfiguration();
	String v53 = Configuration.locale.toString();
	String v54 = InputMethodUtils.getLanguageFromLocaleString(phiInstruction);
	int v55 = v27.size();
	Object v56 = v27.get(phiInstruction);
	String v57 = v56.getLocale();
	String v58 = InputMethodUtils.getLanguageFromLocaleString(v57);
	Object v59 = v27.get(phiInstruction);
	String v60 = v59.getMode();
	boolean v61 = v60.equalsIgnoreCase(0);
	boolean v62 = phiInstruction.equals(v57);
	InputMethodSubtype v49 = phiInstruction;
	this.mCurrentSubtype = v49;
	InputMethodSubtype v13 = this.mCurrentSubtype;
	return v13;
}
This is path 2 for the API with depth 2:
public InputMethodSubtype getCurrentInputMethodSubtype(){
	String v9 = Debug.getCallers(10);
	boolean v1 = 0;
	String v15 = this.mBindingController.getSelectedMethodId();
	String v14 = v15;
	int v17 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
	boolean v16 = phiInstruction;
	Object v18 = this.mMethodMap.get(v14);
	int v19 = v18.getSubtypeCount();
	int v20 = this.mSubtypeHashCode;
	int v22 = InputMethodUtils.getSubtypeIdFromHashCode(v18, v20);
	boolean v21 = phiInstruction;
	Object v24 = this.mMethodMap.get(v14);
	int v25 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
	int v26 = InputMethodUtils.getSubtypeIdFromHashCode(v24, v25);
	int v23 = v26;
	List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18);
	boolean v29 = v28.isEmpty();
	Resources v30 = this.mContext.getResources();
	ArrayList v31 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v30, v18);
	List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction);
	List v27 = v32;
	int v33 = v27.size();
	int v34 = v27.size();
	int v36 = v27.size();
	boolean v37 = TextUtils.isEmpty(0);
	Configuration v38 = this.mRes.getConfiguration();
	String v39 = Configuration.locale.toString();
	String v40 = InputMethodUtils.getLanguageFromLocaleString(phiInstruction);
	int v41 = v27.size();
	Object v42 = v27.get(phiInstruction);
	String v43 = v42.getLocale();
	String v44 = InputMethodUtils.getLanguageFromLocaleString(v43);
	Object v45 = v27.get(phiInstruction);
	String v46 = v45.getMode();
	boolean v47 = v46.equalsIgnoreCase("keyboard");
	boolean v48 = phiInstruction.equals(v43);
	InputMethodSubtype v35 = phiInstruction;
	this.mCurrentSubtype = v35;
	int v50 = v27.size();
	boolean v51 = TextUtils.isEmpty(0);
	Configuration v52 = this.mRes.getConfiguration();
	String v53 = Configuration.locale.toString();
	String v54 = InputMethodUtils.getLanguageFromLocaleString(phiInstruction);
	int v55 = v27.size();
	Object v56 = v27.get(phiInstruction);
	String v57 = v56.getLocale();
	String v58 = InputMethodUtils.getLanguageFromLocaleString(v57);
	Object v59 = v27.get(phiInstruction);
	String v60 = v59.getMode();
	boolean v61 = v60.equalsIgnoreCase(0);
	boolean v62 = phiInstruction.equals(v57);
	InputMethodSubtype v49 = phiInstruction;
	this.mCurrentSubtype = v49;
	InputMethodSubtype v13 = this.mCurrentSubtype;
	return v13;
}
This is path 3 for the API with depth 2:
public InputMethodSubtype getCurrentInputMethodSubtype(){
	boolean v1 = 1;
	String v8 = this.mBindingController.getSelectedMethodId();
	String v7 = v8;
	int v10 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
	boolean v9 = phiInstruction;
	Object v11 = this.mMethodMap.get(v7);
	int v12 = v11.getSubtypeCount();
	int v13 = this.mSubtypeHashCode;
	int v15 = InputMethodUtils.getSubtypeIdFromHashCode(v11, v13);
	boolean v14 = phiInstruction;
	Object v17 = this.mMethodMap.get(v7);
	int v18 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
	int v19 = InputMethodUtils.getSubtypeIdFromHashCode(v17, v18);
	int v16 = v19;
	List v21 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v11);
	boolean v22 = v21.isEmpty();
	Resources v23 = this.mContext.getResources();
	ArrayList v24 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v23, v11);
	List v25 = InputMethodSubtype.sort(this.mContext, 0, v11, phiInstruction);
	List v20 = v25;
	int v26 = v20.size();
	int v27 = v20.size();
	int v29 = v20.size();
	boolean v30 = TextUtils.isEmpty(0);
	Configuration v31 = this.mRes.getConfiguration();
	String v32 = Configuration.locale.toString();
	String v33 = InputMethodUtils.getLanguageFromLocaleString(phiInstruction);
	int v34 = v20.size();
	Object v35 = v20.get(phiInstruction);
	String v36 = v35.getLocale();
	String v37 = InputMethodUtils.getLanguageFromLocaleString(v36);
	Object v38 = v20.get(phiInstruction);
	String v39 = v38.getMode();
	boolean v40 = v39.equalsIgnoreCase("keyboard");
	boolean v41 = phiInstruction.equals(v36);
	InputMethodSubtype v28 = phiInstruction;
	this.mCurrentSubtype = v28;
	int v43 = v20.size();
	boolean v44 = TextUtils.isEmpty(0);
	Configuration v45 = this.mRes.getConfiguration();
	String v46 = Configuration.locale.toString();
	String v47 = InputMethodUtils.getLanguageFromLocaleString(phiInstruction);
	int v48 = v20.size();
	Object v49 = v20.get(phiInstruction);
	String v50 = v49.getLocale();
	String v51 = InputMethodUtils.getLanguageFromLocaleString(v50);
	Object v52 = v20.get(phiInstruction);
	String v53 = v52.getMode();
	boolean v54 = v53.equalsIgnoreCase(0);
	boolean v55 = phiInstruction.equals(v50);
	InputMethodSubtype v42 = phiInstruction;
	this.mCurrentSubtype = v42;
	InputMethodSubtype v6 = this.mCurrentSubtype;
	return v6;
}

and the following sink code:
['String v15 = this.mBindingController.getSelectedMethodId();\nObject v18 = this.mMethodMap.get(v14);\nint v19 = v18.getSubtypeCount();\nList v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18);\nList v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction);\nObject v42 = v27.get(phiInstruction);\nString v43 = v42.getLocale();\nString v46 = v45.getMode();\nInputMethodSubtype v35 = phiInstruction;\nthis.mCurrentSubtype = v35;', 'int v17 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();\nint v22 = InputMethodUtils.getSubtypeIdFromHashCode(v18, v20);\nint v26 = InputMethodUtils.getSubtypeIdFromHashCode(v24, v25);']

The method getCurrentInputMethodSubtype has the following similar APIs:

- API Name: getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List; with Similarity Score: 0.9335129261016846
  - Access Control Level: SYS_OR_SIG and the following code:
String v12 = this.mBindingController.getSelectedMethodId();
Object v13 = this.mMethodMap.get(v11);
List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction);
ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction);
List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction);
return v9;

- API Name: getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype; with Similarity Score: 0.7920477390289307
  - Access Control Level: SYS_OR_SIG and the following code:
List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked();
List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked();
Object v19 = v17.next();
String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second);
Pair v24 = new Pair(Pair.first,v22);
Object v28 = this.mMethodMap.get(Pair.first);
int v29 = Integer.parseInt(Pair.second);
InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);

