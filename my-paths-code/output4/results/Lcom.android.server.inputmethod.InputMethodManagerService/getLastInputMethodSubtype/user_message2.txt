The method getLastInputMethodSubtype has the following code snippet:

This is path 1 for the API with depth 2:
public InputMethodSubtype getLastInputMethodSubtype(){
	String v9 = Debug.getCallers(10);
	boolean v1 = 0;
	List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked();
	List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked();
	Iterator v17 = v16.iterator();
	boolean v18 = v17.hasNext();
	Object v19 = v17.next();
	boolean v20 = TextUtils.isEmpty(0);
	boolean v21 = Pair.first.equals(0);
	String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second);
	boolean v23 = TextUtils.isEmpty(v22);
	Pair v24 = new Pair(Pair.first,v22);
	Pair v14 = v24;
	Pair v13 = v14;
	boolean v26 = TextUtils.isEmpty(Pair.first);
	boolean v27 = TextUtils.isEmpty(Pair.second);
	Object v28 = this.mMethodMap.get(Pair.first);
	int v29 = Integer.parseInt(Pair.second);
	int v31 = v28.getSubtypeCount();
	InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);
	int v33 = this.mSubtypeHashCode;
	int v30 = phiInstruction;
	int v34 = v28.getSubtypeCount();
	return 0;
}
This is path 2 for the API with depth 2:
public InputMethodSubtype getLastInputMethodSubtype(){
	String v9 = Debug.getCallers(10);
	boolean v1 = 0;
	List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked();
	List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked();
	Iterator v17 = v16.iterator();
	boolean v18 = v17.hasNext();
	Object v19 = v17.next();
	boolean v20 = TextUtils.isEmpty(0);
	boolean v21 = Pair.first.equals(0);
	String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second);
	boolean v23 = TextUtils.isEmpty(v22);
	Pair v24 = new Pair(Pair.first,v22);
	Pair v14 = v24;
	Pair v13 = v14;
	boolean v26 = TextUtils.isEmpty(Pair.first);
	boolean v27 = TextUtils.isEmpty(Pair.second);
	Object v28 = this.mMethodMap.get(Pair.first);
	int v29 = Integer.parseInt(Pair.second);
	int v31 = v28.getSubtypeCount();
	InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);
	int v33 = this.mSubtypeHashCode;
	int v30 = phiInstruction;
	return 0;
}
This is path 3 for the API with depth 2:
public InputMethodSubtype getLastInputMethodSubtype(){
	String v9 = Debug.getCallers(10);
	boolean v1 = 0;
	List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked();
	List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked();
	Iterator v17 = v16.iterator();
	boolean v18 = v17.hasNext();
	Object v19 = v17.next();
	boolean v20 = TextUtils.isEmpty(0);
	String v21 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second);
	boolean v22 = TextUtils.isEmpty(v21);
	Pair v23 = new Pair(Pair.first,v21);
	Pair v14 = v23;
	Pair v13 = v14;
	boolean v25 = TextUtils.isEmpty(Pair.first);
	boolean v26 = TextUtils.isEmpty(Pair.second);
	Object v27 = this.mMethodMap.get(Pair.first);
	int v28 = Integer.parseInt(Pair.second);
	int v30 = v27.getSubtypeCount();
	InputMethodSubtype v31 = v27.getSubtypeAt(phiInstruction);
	int v32 = this.mSubtypeHashCode;
	int v29 = phiInstruction;
	int v33 = v27.getSubtypeCount();
	return 0;
}

and the following sink code:
['List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked();\nList v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked();\nObject v19 = v17.next();\nString v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second);\nPair v24 = new Pair(Pair.first,v22);\nObject v28 = this.mMethodMap.get(Pair.first);\nint v29 = Integer.parseInt(Pair.second);\nInputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);']

The method getLastInputMethodSubtype has the following similar APIs:

- API Name: getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List; with Similarity Score: 0.8285513520240784
  - Access Control Level: SYS_OR_SIG and the following code:
String v12 = this.mBindingController.getSelectedMethodId();
Object v13 = this.mMethodMap.get(v11);
List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction);
ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction);
List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction);
return v9;

- API Name: getInputMethodList(I)Ljava/util/List; with Similarity Score: 0.7937148809432983
  - Access Control Level: SYS_OR_SIG and the following code:
InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2);
List v13 = phiInstruction;
return v1;

