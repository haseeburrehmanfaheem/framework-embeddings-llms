This is path 1 for the API with depth 2:
public void setDeviceLockedForUser(int p1, boolean p2){
	long v4 = Binder.clearCallingIdentity();
	LockPatternUtils v5 = this.mLockPatternUtils;
	boolean v6 = v5.isSeparateProfileChallengeEnabled(p1);
	LockPatternUtils v7 = this.mLockPatternUtils;
	boolean v8 = v7.isSecure(p1);
	SparseBooleanArray v9 = this.mDeviceLockedForUser;
	SparseBooleanArray v10 = this.mDeviceLockedForUser;
	v10.put(p1, p2);
	Object v14 = this.mContext.getSystemService(BiometricManage.class);
	[J v15 = v14.getAuthenticatorIds(p2);
	[J v13 = v15;
	[J v12 = v13;
	IBinder v18 = ServiceManager.checkService("android.security.authorization");
	IKeystoreAuthorization v19 = IKeystoreAuthorization$Stub.asInterface(v18);
	IKeystoreAuthorization v17 = v19;
	v17.onLockScreenEvent(1, p1, 0, v12);
	int v16 = ServiceSpecificException.errorCode;
	IActivityManager v21 = ActivityManager.getService();
	v21.notifyLockedProfile(p1);
	Intent v23 = new Intent("android.intent.action.DEVICE_LOCKED_CHANGED");
	Intent v25 = v23.addFlags(1073741824);
	Intent v26 = v23.putExtra("android.intent.extra.user_handle", p1);
	Context v27 = TrustManagerService.-$$Nest$fgetmContext(this.this$0);
	v27.sendBroadcastAsUser(v23, UserHandle.SYSTEM, "android.permission.TRUST_LISTENER", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}

This is path 2 for the API with depth 2:
public void setDeviceLockedForUser(int p1, boolean p2){
	long v4 = Binder.clearCallingIdentity();
	LockPatternUtils v5 = this.mLockPatternUtils;
	boolean v6 = v5.isSeparateProfileChallengeEnabled(p1);
	LockPatternUtils v7 = this.mLockPatternUtils;
	boolean v8 = v7.isSecure(p1);
	SparseBooleanArray v9 = this.mDeviceLockedForUser;
	SparseBooleanArray v10 = this.mDeviceLockedForUser;
	v10.put(p1, p2);
	Object v14 = this.mContext.getSystemService(BiometricManage.class);
	[J v15 = v14.getAuthenticatorIds(p2);
	[J v13 = v15;
	[J v12 = v13;
	IBinder v18 = ServiceManager.checkService("android.security.authorization");
	IKeystoreAuthorization v19 = IKeystoreAuthorization$Stub.asInterface(v18);
	IKeystoreAuthorization v17 = v19;
	v17.onLockScreenEvent(1, p1, 0, v12);
	int v21 = Log.w("KeystoreAuthorization", "Can not connect to keystore", caughtException);
	int v16 = 4;
	IActivityManager v22 = ActivityManager.getService();
	v22.notifyLockedProfile(p1);
	Intent v24 = new Intent("android.intent.action.DEVICE_LOCKED_CHANGED");
	Intent v26 = v24.addFlags(1073741824);
	Intent v27 = v24.putExtra("android.intent.extra.user_handle", p1);
	Context v28 = TrustManagerService.-$$Nest$fgetmContext(this.this$0);
	v28.sendBroadcastAsUser(v24, UserHandle.SYSTEM, "android.permission.TRUST_LISTENER", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}

This is path 3 for the API with depth 2:
public void setDeviceLockedForUser(int p1, boolean p2){
	long v4 = Binder.clearCallingIdentity();
	LockPatternUtils v5 = this.mLockPatternUtils;
	boolean v6 = v5.isSeparateProfileChallengeEnabled(p1);
	LockPatternUtils v7 = this.mLockPatternUtils;
	boolean v8 = v7.isSecure(p1);
	SparseBooleanArray v9 = this.mDeviceLockedForUser;
	SparseBooleanArray v10 = this.mDeviceLockedForUser;
	v10.put(p1, p2);
	Object v14 = this.mContext.getSystemService(BiometricManage.class);
	[J v15 = v14.getAuthenticatorIds(p2);
	[J v13 = v15;
	[J v12 = v13;
	IBinder v18 = ServiceManager.checkService("android.security.authorization");
	IKeystoreAuthorization v19 = IKeystoreAuthorization$Stub.asInterface(v18);
	IKeystoreAuthorization v17 = v19;
	v17.onLockScreenEvent(1, p1, 0, v12);
	int v16 = ServiceSpecificException.errorCode;
	IActivityManager v21 = ActivityManager.getService();
	Intent v22 = new Intent("android.intent.action.DEVICE_LOCKED_CHANGED");
	Intent v24 = v22.addFlags(1073741824);
	Intent v25 = v22.putExtra("android.intent.extra.user_handle", p1);
	Context v26 = TrustManagerService.-$$Nest$fgetmContext(this.this$0);
	v26.sendBroadcastAsUser(v22, UserHandle.SYSTEM, "android.permission.TRUST_LISTENER", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}
