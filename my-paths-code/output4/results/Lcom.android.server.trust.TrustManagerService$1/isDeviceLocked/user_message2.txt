The method isDeviceLocked has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isDeviceLocked(int p1, int p2){
	int v1 = ITrustManager$Stub.getCallingUid();
	VirtualDeviceManagerInternal v4 = this.mVirtualDeviceManager;
	Object v6 = this.sLocalServiceObjects.get(VirtualDeviceManagerInterna.class);
	Object v5 = v6;
	this.mVirtualDeviceManager = v5;
	VirtualDeviceManagerInternal v8 = this.mVirtualDeviceManager;
	VirtualDeviceManagerInternal v9 = this.mVirtualDeviceManager;
	boolean v10 = v9.isDisplayOwnedByAnyVirtualDevice(p2);
	boolean v2 = 1;
	int v11 = ITrustManager$Stub.getCallingPid();
	int v12 = ActivityManager.handleIncomingUser(v11, v1, p1, 0, 1, "isDeviceLocked", 0);
	long v13 = Binder.clearCallingIdentity();
	LockPatternUtils v14 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v15 = v14.isSeparateProfileChallengeEnabled(v12);
	long v18 = Binder.clearCallingIdentity();
	UserInfo v19 = this.mUserManager.getProfileParent(p2);
	UserHandle v20 = v19.getUserHandle();
	int v21 = v20.getIdentifier();
	Binder.restoreCallingIdentity(v18);
	int v17 = v21;
	int v16 = v17;
	boolean v23 = this.this$0.isDeviceLockedInner(phiInstruction);
	Binder.restoreCallingIdentity(v13);
	return v23;
}
This is path 2 for the API with depth 2:
public boolean isDeviceLocked(int p1, int p2){
	int v1 = ITrustManager$Stub.getCallingUid();
	VirtualDeviceManagerInternal v4 = this.mVirtualDeviceManager;
	Object v6 = this.sLocalServiceObjects.get(VirtualDeviceManagerInterna.class);
	Object v5 = v6;
	this.mVirtualDeviceManager = v5;
	VirtualDeviceManagerInternal v8 = this.mVirtualDeviceManager;
	VirtualDeviceManagerInternal v9 = this.mVirtualDeviceManager;
	boolean v10 = v9.isDisplayOwnedByAnyVirtualDevice(p2);
	boolean v2 = 0;
	int v11 = ITrustManager$Stub.getCallingPid();
	int v12 = ActivityManager.handleIncomingUser(v11, v1, p1, 0, 1, "isDeviceLocked", 0);
	long v13 = Binder.clearCallingIdentity();
	LockPatternUtils v14 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v15 = v14.isSeparateProfileChallengeEnabled(v12);
	long v18 = Binder.clearCallingIdentity();
	UserInfo v19 = this.mUserManager.getProfileParent(p2);
	UserHandle v20 = v19.getUserHandle();
	int v21 = v20.getIdentifier();
	Binder.restoreCallingIdentity(v18);
	int v17 = v21;
	int v16 = v17;
	boolean v23 = this.this$0.isDeviceLockedInner(phiInstruction);
	Binder.restoreCallingIdentity(v13);
	return v23;
}
This is path 3 for the API with depth 2:
public boolean isDeviceLocked(int p1, int p2){
	int v1 = ITrustManager$Stub.getCallingUid();
	VirtualDeviceManagerInternal v4 = this.mVirtualDeviceManager;
	Object v6 = this.sLocalServiceObjects.get(VirtualDeviceManagerInterna.class);
	Object v5 = v6;
	this.mVirtualDeviceManager = v5;
	VirtualDeviceManagerInternal v8 = this.mVirtualDeviceManager;
	VirtualDeviceManagerInternal v9 = this.mVirtualDeviceManager;
	boolean v10 = v9.isDisplayOwnedByAnyVirtualDevice(p2);
	boolean v2 = 1;
	int v11 = ITrustManager$Stub.getCallingPid();
	int v12 = ActivityManager.handleIncomingUser(v11, v1, p1, 0, 1, "isDeviceLocked", 0);
	long v13 = Binder.clearCallingIdentity();
	LockPatternUtils v14 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v15 = v14.isSeparateProfileChallengeEnabled(v12);
	long v18 = Binder.clearCallingIdentity();
	UserInfo v19 = this.mUserManager.getProfileParent(p2);
	Binder.restoreCallingIdentity(v18);
	int v17 = p2;
	int v16 = v17;
	boolean v21 = this.this$0.isDeviceLockedInner(phiInstruction);
	Binder.restoreCallingIdentity(v13);
	return v21;
}

and the following sink code:
['boolean v23 = this.this$0.isDeviceLockedInner(phiInstruction);\nreturn v23;', 'int v11 = ITrustManager$Stub.getCallingPid();\nint v12 = ActivityManager.handleIncomingUser(v11, v1, p1, 0, 1, "isDeviceLocked", 0);\nboolean v15 = v14.isSeparateProfileChallengeEnabled(v12);', 'VirtualDeviceManagerInternal v9 = this.mVirtualDeviceManager;\nboolean v10 = v9.isDisplayOwnedByAnyVirtualDevice(p2);']

The method isDeviceLocked has the following similar APIs:

- API Name: sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V with Similarity Score: 0.8318867087364197
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4);
ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);
ITvInputSession v9 = v11;
ITvInputSession v8 = v9;
v8.appPrivateCommand(p2, p3);

- API Name: setMainSession(Landroid/os/IBinder;I)V with Similarity Score: 0.8225722312927246
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$SessionState v21 = TvInputManagerService.getSessionStateLocked(p2, p4, p5);

