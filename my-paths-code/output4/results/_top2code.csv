EP1_ID,EP2_ID,EP1_Code,EP2_Code,Similarity
addAnnouncementListener([ILandroid/hardware/radio/IAnnouncementListener;)Landroid/hardware/radio/ICloseHandle;,startSystemLockTaskMode(I)V,"Object v9 = Objects.requireNonNull(p2); AnnouncementAggregator v20 = new AnnouncementAggregator(p2,this.mLock); ICloseHandle v18 = v20; return v18;",int v58 = Binder.getCallingUid(); Task.mLockTaskUid = v58;,0.6232548356056213
addAnnouncementListener([ILandroid/hardware/radio/IAnnouncementListener;)Landroid/hardware/radio/ICloseHandle;,enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"Object v9 = Objects.requireNonNull(p2); AnnouncementAggregator v20 = new AnnouncementAggregator(p2,this.mLock); ICloseHandle v18 = v20; return v18;",this.mLastLockedUser = p2; Object v24 = this.mUsers.get(p2);,0.621739387512207
listModules()Ljava/util/List;,getAllRootTaskInfosOnDisplay(I)Ljava/util/List;,ArrayList v5 = new ArrayList(); List v7 = this.mV1Modules; boolean v8 = v5.addAll(v7); Collection v12 = this.mModules.values(); Stream v13 = v12.stream(); BroadcastRadioService$$ExternalSyntheticLambda0 v14 = new BroadcastRadioService$$ExternalSyntheticLambda0(); Stream v16 = v13.map(v14); Collector v17 = Collectors.toList(); Object v18 = v16.collect(v17); Collection v10 = v18; boolean v19 = v5.addAll(v10); return v5;,"ArrayList v10 = new ArrayList(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;",0.6184145212173462
listModules()Ljava/util/List;,setLockScreenShown(ZZ)V,ArrayList v5 = new ArrayList(); List v7 = this.mV1Modules; boolean v8 = v5.addAll(v7); Collection v12 = this.mModules.values(); Stream v13 = v12.stream(); BroadcastRadioService$$ExternalSyntheticLambda0 v14 = new BroadcastRadioService$$ExternalSyntheticLambda0(); Stream v16 = v13.map(v14); Collector v17 = Collectors.toList(); Object v18 = v16.collect(v17); Collection v10 = v18; boolean v19 = v5.addAll(v10); return v5;,"ActivityTaskManagerService$$ExternalSyntheticLambda12 v22 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1); boolean v24 = this.mH.post(v22);",0.6170839071273804
openTuner(ILandroid/hardware/radio/RadioManager$BandConfig;ZLandroid/hardware/radio/ITunerCallback;)Landroid/hardware/radio/ITuner;,timeShiftPause(Landroid/os/IBinder;I)V,"Object v18 = Objects.requireNonNull(p4); Integer v19 = Integer.valueOf(p1); TunerSession v30 = new TunerSession(RadioModule,this.mHalTunerSession,p4,this.mLock); boolean v32 = this.mAidlTunerSessions.add(v30); ITuner v16 = v21; return v16;","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPause();",0.6719664335250854
openTuner(ILandroid/hardware/radio/RadioManager$BandConfig;ZLandroid/hardware/radio/ITunerCallback;)Landroid/hardware/radio/ITuner;,timeShiftPlay(Landroid/os/IBinder;Landroid/net/Uri;I)V,"Object v18 = Objects.requireNonNull(p4); Integer v19 = Integer.valueOf(p1); TunerSession v30 = new TunerSession(RadioModule,this.mHalTunerSession,p4,this.mLock); boolean v32 = this.mAidlTunerSessions.add(v30); ITuner v16 = v21; return v16;","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPlay(p2);",0.6707037687301636
<clinit>()V,No similar EPs with similarity > 0.8,,,
attachAsOriginator(ILandroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,attachAsMiddleman(ILandroid/media/permission/Identity;Landroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,"ISoundTriggerModule v13 = this.mDelegate.attach(p1, p3); SoundTriggerMiddlewareService$ModuleService v12 = new SoundTriggerMiddlewareService$ModuleService(v13,0); return v12;","ISoundTriggerModule v20 = this.mDelegate.attach(p1, p4); SoundTriggerMiddlewareService$ModuleService v19 = new SoundTriggerMiddlewareService$ModuleService(v20,0); return v19;",0.9901193976402283
attachAsOriginator(ILandroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,startStylusHandwriting(Lcom/android/internal/view/IInputMethodClient;)V,Identity.uid = v5; int v5 = Binder.getCallingUid();,int v8 = Binder.getCallingUid(); Integer v19 = Integer.valueOf(v8);,0.8459648489952087
listModulesAsOriginator(Landroid/media/permission/Identity;)[Landroid/media/soundtrigger_middleware/SoundTriggerModuleDescriptor;,listModulesAsMiddleman(Landroid/media/permission/Identity;Landroid/media/permission/Identity;)[Landroid/media/soundtrigger_middleware/SoundTriggerModuleDescriptor;,SoundTriggerModuleDescriptor v11 = this.mDelegate.listModules(); return v11;,SoundTriggerModuleDescriptor v17 = this.mDelegate.listModules(); return v17;,0.9883416295051575
listModulesAsOriginator(Landroid/media/permission/Identity;)[Landroid/media/soundtrigger_middleware/SoundTriggerModuleDescriptor;,attachAsMiddleman(ILandroid/media/permission/Identity;Landroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,SoundTriggerModuleDescriptor v11 = this.mDelegate.listModules(); return v11;,"ISoundTriggerModule v20 = this.mDelegate.attach(p1, p4); SoundTriggerMiddlewareService$ModuleService v19 = new SoundTriggerMiddlewareService$ModuleService(v20,0); return v19;",0.7486223578453064
attachAsMiddleman(ILandroid/media/permission/Identity;Landroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,attachAsOriginator(ILandroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,"ISoundTriggerModule v20 = this.mDelegate.attach(p1, p4); SoundTriggerMiddlewareService$ModuleService v19 = new SoundTriggerMiddlewareService$ModuleService(v20,0); return v19;","ISoundTriggerModule v13 = this.mDelegate.attach(p1, p3); SoundTriggerMiddlewareService$ModuleService v12 = new SoundTriggerMiddlewareService$ModuleService(v13,0); return v12;",0.9901193976402283
attachAsMiddleman(ILandroid/media/permission/Identity;Landroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,listModulesAsMiddleman(Landroid/media/permission/Identity;Landroid/media/permission/Identity;)[Landroid/media/soundtrigger_middleware/SoundTriggerModuleDescriptor;,"ISoundTriggerModule v20 = this.mDelegate.attach(p1, p4); SoundTriggerMiddlewareService$ModuleService v19 = new SoundTriggerMiddlewareService$ModuleService(v20,0); return v19;",SoundTriggerModuleDescriptor v17 = this.mDelegate.listModules(); return v17;,0.7602225542068481
listModulesAsMiddleman(Landroid/media/permission/Identity;Landroid/media/permission/Identity;)[Landroid/media/soundtrigger_middleware/SoundTriggerModuleDescriptor;,listModulesAsOriginator(Landroid/media/permission/Identity;)[Landroid/media/soundtrigger_middleware/SoundTriggerModuleDescriptor;,SoundTriggerModuleDescriptor v17 = this.mDelegate.listModules(); return v17;,SoundTriggerModuleDescriptor v11 = this.mDelegate.listModules(); return v11;,0.9883416295051575
listModulesAsMiddleman(Landroid/media/permission/Identity;Landroid/media/permission/Identity;)[Landroid/media/soundtrigger_middleware/SoundTriggerModuleDescriptor;,attachAsMiddleman(ILandroid/media/permission/Identity;Landroid/media/permission/Identity;Landroid/media/soundtrigger_middleware/ISoundTriggerCallback;)Landroid/media/soundtrigger_middleware/ISoundTriggerModule;,SoundTriggerModuleDescriptor v17 = this.mDelegate.listModules(); return v17;,"ISoundTriggerModule v20 = this.mDelegate.attach(p1, p4); SoundTriggerMiddlewareService$ModuleService v19 = new SoundTriggerMiddlewareService$ModuleService(v20,0); return v19;",0.7602225542068481
getFontConfig()Landroid/text/FontConfig;,updateFontFamily(Ljava/util/List;I)I,"Map v5 = UpdatableFontDir.getPostScriptMap(); Object v6 = this.mConfigSupplier.apply(v5); List v9 = v6.getFontFamilies(); List v17 = v6.getAliases(); FontConfig v16 = new FontConfig(v8,v17,this.mLastModifiedMillis,this.mConfigVersion); return v3;",ArrayMap v10 = new ArrayMap(this.mFontFileInfoMap); PersistentSystemFontConfig$Config v23 = new PersistentSystemFontConfig$Config();,0.7501207590103149
getFontConfig()Landroid/text/FontConfig;,updateFontFamily(Ljava/util/List;I)I,"FontConfig v5 = SystemFonts.getSystemFontConfigInternal(""/system/etc/fonts.xml"", ""/system/fonts/"", ""/product/etc/fonts_customization.xml"", ""/product/fonts/"", 0, 0, 0); FontConfig v4 = v5; FontConfig v3 = v4; return v3;",ArrayMap v10 = new ArrayMap(this.mFontFileInfoMap); PersistentSystemFontConfig$Config v23 = new PersistentSystemFontConfig$Config();,0.7211689949035645
updateFontFamily(Ljava/util/List;I)I,getFontConfig()Landroid/text/FontConfig;,ArrayMap v10 = new ArrayMap(this.mFontFileInfoMap); PersistentSystemFontConfig$Config v23 = new PersistentSystemFontConfig$Config();,"Map v5 = UpdatableFontDir.getPostScriptMap(); Object v6 = this.mConfigSupplier.apply(v5); List v9 = v6.getFontFamilies(); List v17 = v6.getAliases(); FontConfig v16 = new FontConfig(v8,v17,this.mLastModifiedMillis,this.mConfigVersion); return v3;",0.7501207590103149
updateFontFamily(Ljava/util/List;I)I,getFontConfig()Landroid/text/FontConfig;,ArrayMap v10 = new ArrayMap(this.mFontFileInfoMap); PersistentSystemFontConfig$Config v23 = new PersistentSystemFontConfig$Config();,"FontConfig v5 = SystemFonts.getSystemFontConfigInternal(""/system/etc/fonts.xml"", ""/system/fonts/"", ""/product/etc/fonts_customization.xml"", ""/product/fonts/"", 0, 0, 0); FontConfig v4 = v5; FontConfig v3 = v4; return v3;",0.7211689949035645
reportUnlockAttempt(ZI)V,reportUnlockLockout(II)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(3, p1, p2); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(13, p1, p2); v5.sendToTarget();",0.9911810755729675
reportUnlockAttempt(ZI)V,reportUserRequestedUnlock(IZ)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(3, p1, p2); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(16, p1, p2); v5.sendToTarget();",0.9906670451164246
unlockedByBiometricForUser(ILandroid/hardware/biometrics/BiometricSourceType;)V,registerTrustListener(Landroid/app/trust/ITrustListener;)V,"Handler v9 = this.mHandler; Message v10 = v9.obtainMessage(14, p1, v8); v10.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(1, p1); v5.sendToTarget();",0.9501996040344238
unlockedByBiometricForUser(ILandroid/hardware/biometrics/BiometricSourceType;)V,reportUnlockLockout(II)V,"Handler v9 = this.mHandler; Message v10 = v9.obtainMessage(14, p1, v8); v10.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(13, p1, p2); v5.sendToTarget();",0.9390465617179871
reportUnlockLockout(II)V,reportUnlockAttempt(ZI)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(13, p1, p2); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(3, p1, p2); v5.sendToTarget();",0.9911810755729675
reportUnlockLockout(II)V,reportUserRequestedUnlock(IZ)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(13, p1, p2); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(16, p1, p2); v5.sendToTarget();",0.9892392158508301
isDeviceLocked(II)Z,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,"int v11 = ITrustManager$Stub.getCallingPid(); int v12 = ActivityManager.handleIncomingUser(v11, v1, p1, 0, 1, ""isDeviceLocked"", 0); boolean v15 = v14.isSeparateProfileChallengeEnabled(v12);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.appPrivateCommand(p2, p3);",0.8318867087364197
isDeviceLocked(II)Z,setMainSession(Landroid/os/IBinder;I)V,"int v11 = ITrustManager$Stub.getCallingPid(); int v12 = ActivityManager.handleIncomingUser(v11, v1, p1, 0, 1, ""isDeviceLocked"", 0); boolean v15 = v14.isSeparateProfileChallengeEnabled(v12);","int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v21 = TvInputManagerService.getSessionStateLocked(p2, p4, p5);",0.8225722312927246
setDeviceLockedForUser(IZ)V,isDeviceLocked(II)Z,"SparseBooleanArray v10 = this.mDeviceLockedForUser; v10.put(p1, p2); IKeystoreAuthorization v17 = IKeystoreAuthorization$Stub.asInterface(v18); v17.onLockScreenEvent(1, p1, 0, v12); IActivityManager v21 = ActivityManager.getService(); v21.notifyLockedProfile(p1);","int v11 = ITrustManager$Stub.getCallingPid(); int v12 = ActivityManager.handleIncomingUser(v11, v1, p1, 0, 1, ""isDeviceLocked"", 0); boolean v15 = v14.isSeparateProfileChallengeEnabled(v12);",0.7376410365104675
setDeviceLockedForUser(IZ)V,verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,"SparseBooleanArray v10 = this.mDeviceLockedForUser; v10.put(p1, p2); IKeystoreAuthorization v17 = IKeystoreAuthorization$Stub.asInterface(v18); v17.onLockScreenEvent(1, p1, 0, v12); IActivityManager v21 = ActivityManager.getService(); v21.notifyLockedProfile(p1);","LockSettingsService.setDeviceUnlockedForUser(p2); boolean v69 = LockSettingsService.setLockCredentialInternal(p1, p1, p2, 0); LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, p2);",0.733512282371521
clearAllBiometricRecognized(Landroid/hardware/biometrics/BiometricSourceType;I)V,unlockedByBiometricForUser(ILandroid/hardware/biometrics/BiometricSourceType;)V,SparseBooleanArray v4 = this.mUsersUnlockedByBiometric; SparseBooleanArray v5 = this.mUsersUnlockedByBiometric; v5.clear();,"SparseBooleanArray v4 = this.mUsersUnlockedByBiometric; SparseBooleanArray v5 = this.mUsersUnlockedByBiometric; v5.put(p1, 1);",0.9227302074432373
clearAllBiometricRecognized(Landroid/hardware/biometrics/BiometricSourceType;I)V,registerTrustListener(Landroid/app/trust/ITrustListener;)V,"Handler v7 = this.mHandler; Message v8 = v7.obtainMessage(14, -1, 0); Bundle v9 = new Bundle(); v9.putInt(""except"", p2); v8.setData(v9); v8.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(1, p1); v5.sendToTarget();",0.8303958177566528
reportUserMayRequestUnlock(I)V,unregisterTrustListener(Landroid/app/trust/ITrustListener;)V,"Message v6 = v4.obtainMessage(18, v5); v6.sendToTarget();","Message v5 = v4.obtainMessage(2, p1); v5.sendToTarget();",0.9409278631210327
reportUserMayRequestUnlock(I)V,registerTrustListener(Landroid/app/trust/ITrustListener;)V,"Message v6 = v4.obtainMessage(18, v5); v6.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(1, p1); v5.sendToTarget();",0.8655089139938354
reportEnabledTrustAgentsChanged(I)V,reportUserMayRequestUnlock(I)V,v4.removeMessages(4); boolean v7 = v6.sendEmptyMessage(4);,"Message v6 = v4.obtainMessage(18, v5); v6.sendToTarget();",0.7865686416625977
reportEnabledTrustAgentsChanged(I)V,unregisterTrustListener(Landroid/app/trust/ITrustListener;)V,v4.removeMessages(4); boolean v7 = v6.sendEmptyMessage(4);,"Message v5 = v4.obtainMessage(2, p1); v5.sendToTarget();",0.7625241279602051
reportKeyguardShowingChanged()V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,"Handler v4 = this.mHandler; v4.removeMessages(6); boolean v7 = this.mHandler.sendEmptyMessage(6); TrustManagerService$1$$ExternalSyntheticLambda0 v9 = new TrustManagerService$1$$ExternalSyntheticLambda0(); boolean v11 = this.mHandler.runWithScissors(v9, 0);","StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12); boolean v27 = this.mHandler.post(v25);",0.734675407409668
reportKeyguardShowingChanged()V,setImeWindowStatus(ILandroid/os/IBinder;IIZ)V,"Handler v4 = this.mHandler; v4.removeMessages(6); boolean v7 = this.mHandler.sendEmptyMessage(6); TrustManagerService$1$$ExternalSyntheticLambda0 v9 = new TrustManagerService$1$$ExternalSyntheticLambda0(); boolean v11 = this.mHandler.runWithScissors(v9, 0);","StatusBarManagerService$$ExternalSyntheticLambda1 v10 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5); boolean v12 = this.mHandler.post(v10);",0.7343953847885132
isTrustUsuallyManaged(I)Z,getShareTargets(Ljava/lang/String;Landroid/content/IntentFilter;I)Landroid/content/pm/ParceledListSlice;,"int v5 = this.mTrustUsuallyManagedForUser.indexOfKey(p2); boolean v6 = this.mLockPatternUtils.isTrustUsuallyManaged(p2); this.mTrustUsuallyManagedForUser.put(p2, v6);","boolean v8 = this.mUnlockedUsers.get(p1); boolean v7 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1); ArrayList v9 = new ArrayList(); ShortcutService$$ExternalSyntheticLambda12 v51 = new ShortcutService$$ExternalSyntheticLambda12(v9,p2); v11.forAllPackages(v51); ParceledListSlice v54 = new ParceledListSlice(v10); return v54;",0.6335129737854004
isTrustUsuallyManaged(I)Z,clearAllBiometricRecognized(Landroid/hardware/biometrics/BiometricSourceType;I)V,int v7 = this.mTrustUsuallyManagedForUser.indexOfKey(p2); boolean v8 = this.mTrustUsuallyManagedForUser.valueAt(v7); return v3;,SparseBooleanArray v4 = this.mUsersUnlockedByBiometric; SparseBooleanArray v5 = this.mUsersUnlockedByBiometric; v5.clear();,0.6277808547019958
unregisterTrustListener(Landroid/app/trust/ITrustListener;)V,reportUserMayRequestUnlock(I)V,"Message v5 = v4.obtainMessage(2, p1); v5.sendToTarget();","Message v6 = v4.obtainMessage(18, v5); v6.sendToTarget();",0.9409278631210327
unregisterTrustListener(Landroid/app/trust/ITrustListener;)V,registerTrustListener(Landroid/app/trust/ITrustListener;)V,"Message v5 = v4.obtainMessage(2, p1); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(1, p1); v5.sendToTarget();",0.9101403951644897
isDeviceSecure(II)Z,detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J,LockPatternUtils v14 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0); boolean v15 = v14.isSeparateProfileChallengeEnabled(v12); UserInfo v19 = this.mUserManager.getProfileParent(p2); LockPatternUtils v23 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0); boolean v24 = v23.isSecure(phiInstruction); return v24;,LockPatternUtils v12 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0); int v14 = v12.getStrongAuthForUser(p2);,0.7771947979927063
isDeviceSecure(II)Z,getCredentialType(I)I,LockPatternUtils v14 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0); boolean v15 = v14.isSeparateProfileChallengeEnabled(v12); UserInfo v19 = this.mUserManager.getProfileParent(p2); LockPatternUtils v23 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0); boolean v24 = v23.isSecure(phiInstruction); return v24;,"long v22 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1); int v21 = v22; boolean v24 = LockPatternUtils.isQualityAlphabeticPassword(v21); boolean v25 = LockPatternUtils.isQualityNumericPin(v21); int v23 = 3;",0.6922091841697693
registerTrustListener(Landroid/app/trust/ITrustListener;)V,reportUnlockAttempt(ZI)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(1, p1); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(3, p1, p2); v5.sendToTarget();",0.9819483160972595
registerTrustListener(Landroid/app/trust/ITrustListener;)V,reportUnlockLockout(II)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(1, p1); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(13, p1, p2); v5.sendToTarget();",0.9773786067962646
reportUserRequestedUnlock(IZ)V,reportUnlockAttempt(ZI)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(16, p1, p2); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(3, p1, p2); v5.sendToTarget();",0.9906670451164246
reportUserRequestedUnlock(IZ)V,reportUnlockLockout(II)V,"Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(16, p1, p2); v5.sendToTarget();","Handler v4 = this.mHandler; Message v5 = v4.obtainMessage(13, p1, p2); v5.sendToTarget();",0.9892392158508301
getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice;,getAvailableRollbacks()Landroid/content/pm/ParceledListSlice;,"RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v9;","RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v16;",0.9937072992324829
getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice;,reloadPersistedData()V,"RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v9;","RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);",0.970863938331604
expireRollbackForPackage(Ljava/lang/String;)V,reloadPersistedData()V,"RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);","RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);",0.9782625436782837
expireRollbackForPackage(Ljava/lang/String;)V,getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice;,"RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);","RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v9;",0.9679911136627197
blockRollbackManager(J)V,expireRollbackForPackage(Ljava/lang/String;)V,"RollbackManagerServiceImpl$$ExternalSyntheticLambda13 v4 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda13(p0,p1); boolean v6 = v3.post(v4);","RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);",0.9396883249282837
blockRollbackManager(J)V,notifyStagedSession(I)I,"RollbackManagerServiceImpl$$ExternalSyntheticLambda13 v4 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda13(p0,p1); boolean v6 = v3.post(v4);","RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1); Handler v7 = RollbackManagerServiceImpl.getHandler(); CompletableFuture v11 = CompletableFuture.supplyAsync(v3, this.mExecutor); Object v12 = v11.get(); int v13 = v5.intValue(); return v13;",0.919953465461731
getAvailableRollbacks()Landroid/content/pm/ParceledListSlice;,getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice;,"RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v16;","RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v9;",0.9937072992324829
getAvailableRollbacks()Landroid/content/pm/ParceledListSlice;,reloadPersistedData()V,"RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v16;","RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);",0.9654825329780579
reloadPersistedData()V,expireRollbackForPackage(Ljava/lang/String;)V,"RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);","RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);",0.9782625436782837
reloadPersistedData()V,getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice;,"RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);","RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v9;",0.970863938331604
notifyStagedSession(I)I,getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice;,"RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1); Handler v7 = RollbackManagerServiceImpl.getHandler(); CompletableFuture v11 = CompletableFuture.supplyAsync(v3, this.mExecutor); Object v12 = v11.get(); int v13 = v5.intValue(); return v13;","RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v9;",0.9672711491584778
notifyStagedSession(I)I,getAvailableRollbacks()Landroid/content/pm/ParceledListSlice;,"RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1); Handler v7 = RollbackManagerServiceImpl.getHandler(); CompletableFuture v11 = CompletableFuture.supplyAsync(v3, this.mExecutor); Object v12 = v11.get(); int v13 = v5.intValue(); return v13;","RollbackManagerServiceImpl$$ExternalSyntheticLambda12 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda12(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v16;",0.9607350826263428
snapshotAndRestoreUserData(Ljava/lang/String;[IIJLjava/lang/String;I)V,blockRollbackManager(J)V,"Handler v3 = this.mHandler; RollbackManagerServiceImpl$$ExternalSyntheticLambda14 v4 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda14(p0,p1,p2,p3,p5,p6); boolean v6 = v3.post(v4);","RollbackManagerServiceImpl$$ExternalSyntheticLambda13 v4 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda13(p0,p1); boolean v6 = v3.post(v4);",0.9144351482391357
snapshotAndRestoreUserData(Ljava/lang/String;[IIJLjava/lang/String;I)V,expireRollbackForPackage(Ljava/lang/String;)V,"Handler v3 = this.mHandler; RollbackManagerServiceImpl$$ExternalSyntheticLambda14 v4 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda14(p0,p1,p2,p3,p5,p6); boolean v6 = v3.post(v4);","RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);",0.9062622785568237
isApkVeritySupported()Z,getMaximumDataBlockSize()J,boolean v1 = phiInstruction; return v1;,long v5 = phiInstruction; long v4 = v5; return v4;,0.90315842628479
isApkVeritySupported()Z,getCurrentRuleSetProvider()Ljava/lang/String;,boolean v1 = phiInstruction; return v1;,return phiInstruction;,0.8940640687942505
isAppSourceCertificateTrusted([BLjava/lang/String;)Z,requestUninstall([BLandroid/app/timezone/ICallback;)I,ByteArrayInputStream v13 = new ByteArrayInputStream(p1); Certificate v15 = this.sCertFactory.generateCertificate(v13); X509Certificate v12 = v15; boolean v16 = v10.contains(v12);,ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong();,0.7310340404510498
isAppSourceCertificateTrusted([BLjava/lang/String;)Z,initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V,ByteArrayInputStream v13 = new ByteArrayInputStream(p1); Certificate v15 = this.sCertFactory.generateCertificate(v13); X509Certificate v12 = v15; boolean v16 = v10.contains(v12);,"SigXml.verifyFileSignature(v26, p2, 0); CertXml v48 = CertXml.parse(p2); long v49 = v48.getSerial(); Long v50 = this.mDatabase.getRecoveryServiceCertSerial(v34, v35, v36);",0.7150750160217285
checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;,verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,"IGateKeeperService v40 = LockSettingsService.getGateKeeperService(); byte[] v41 = p1.getCredential(); GateKeeperResponse v42 = v40.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v41);","IGateKeeperService v43 = LockSettingsService.getGateKeeperService(); byte[] v44 = p1.getCredential(); GateKeeperResponse v45 = v43.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v44);",0.9948545098304749
checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;,tryUnlockWithCachedUnifiedChallenge(I)Z,VerifyCredentialResponse v44 = LockSettingsService.convertResponse(phiInstruction); boolean v45 = phiInstruction.getShouldReEnroll(); int v46 = v44.getResponseCode();,VerifyCredentialResponse v57 = LockSettingsService.convertResponse(phiInstruction); boolean v58 = phiInstruction.getShouldReEnroll(); int v59 = v57.getResponseCode();,0.9945125579833984
getLong(Ljava/lang/String;JI)J,setBoolean(Ljava/lang/String;ZI)V,"String v6 = LockSettingsStorage.readKeyValue(phiInstruction, 0, p3);","LockSettingsStorage.writeKeyValue(p1, phiInstruction, p3);",0.8384045958518982
getLong(Ljava/lang/String;JI)J,isDeviceLocked(II)Z,"String v6 = LockSettingsStorage.readKeyValue(phiInstruction, 0, p3);",boolean v23 = this.this$0.isDeviceLockedInner(phiInstruction); return v23;,0.7365595698356628
setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z,setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V,"this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1); LockSettingsService.checkWritePermission(p1);","LockSettingsService.checkReadPermission(""lockscreen.profilechallenge"", p1); LockSettingsService.checkWritePermission(p1); this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1);",0.9417965412139893
setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z,verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,"SyntheticPasswordManager$AuthenticationToken v95 = this.mSpManager.newSyntheticPasswordAndSid(v94, LockSettingsStorage$CredentialHash.hash, phiInstruction, p3); long v97 = this.mSpManager.createPasswordBasedSyntheticPassword(v96, phiInstruction, v95, p3);","SyntheticPasswordManager$AuthenticationResult v24 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v23, v22, p1, p2, p3); VerifyCredentialResponse v29 = this.mSpManager.verifyChallenge(v28, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2); LockSettingsService.unlockKeystore(p1.getCredential(), p2); LockSettingsService.unlockUser(LockSettingsService.secretFromCredential(p1), p2);",0.8905460834503174
generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;,importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String;,PlatformDecryptionKey v19 = PlatformKeyManager.getDecryptKeyInternal(v16); PlatformEncryptionKey v20 = PlatformKeyManager.getEncryptKeyInternal(v16); PlatformKeyManager.regenerate(v16);,"PlatformKeyManager.init(v17); PlatformDecryptionKey v20 = PlatformKeyManager.getDecryptKeyInternal(v17); PlatformEncryptionKey v26 = PlatformKeyManager.getEncryptKeyInternal(v17); SecretKeySpec v28 = new SecretKeySpec(p2,""AES""); WrappedKey v30 = WrappedKey.fromSecretKey(v18, v28, p3); this.mDatabase.insertKey(v17, v16, p1, v30); this.mKeyStore.setEntry(v40, v41, v51);",0.8176249265670776
generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;,generateKey(Ljava/lang/String;)Ljava/lang/String;,"SecretKey v29 = this.mKeyGenerator.generateKey(); WrappedKey v30 = WrappedKey.fromSecretKey(v17, v29, p2); long v31 = this.mDatabase.insertKey(v16, v15, p1, v30); byte[] v34 = v29.getEncoded(); SecretKeySpec v44 = new SecretKeySpec(v27,""AES""); this.mKeyStore.setEntry(v42, v43, v53);","byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0); this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8); return v1;",0.7448822259902954
getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;,setString(Ljava/lang/String;Ljava/lang/String;I)V,"SQLiteDatabase v8 = this.mOpenHelper.getReadableDatabase(); Cursor v11 = v8.query(""locksettings"", this.COLUMNS_FOR_QUERY, ""user=? AND name=?"", v9, 0, 0, 0); String v13 = v11.getString(0); this.mCache.putKeyValueIfUnchanged(phiInstruction, phiInstruction, p3, v7);","SQLiteDatabase v6 = this.mOpenHelper.getWritableDatabase(); LockSettingsStorage.writeKeyValue(v6, p1, p2, p3);",0.8261223435401917
getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;,setBoolean(Ljava/lang/String;ZI)V,"SQLiteDatabase v8 = this.mOpenHelper.getReadableDatabase(); Cursor v11 = v8.query(""locksettings"", this.COLUMNS_FOR_QUERY, ""user=? AND name=?"", v9, 0, 0, 0); String v13 = v11.getString(0); this.mCache.putKeyValueIfUnchanged(phiInstruction, phiInstruction, p3, v7);","LockSettingsStorage.writeKeyValue(p1, phiInstruction, p3);",0.6394884586334229
registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,boolean v7 = this.mListeners.register(p1); return v6;,boolean v7 = this.mListeners.unregister(p1); return v6;,0.9460954666137695
registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,boolean v7 = this.mListeners.register(p1); return v6;,boolean v5 = this.mVibratorStateListeners.unregister(p2); return v3;,0.7427766919136047
removeGatekeeperPasswordHandle(J)V,verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;,this.mGatekeeperPasswords.remove(p1);,"Object v3 = this.mGatekeeperPasswords.get(p1); IBinder v5 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService""); v5.linkToDeath(v6, 0); IInterface v11 = v5.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");",0.6832345128059387
removeGatekeeperPasswordHandle(J)V,removeCachedUnifiedChallenge(I)V,this.mGatekeeperPasswords.remove(p1);,"boolean v17 = this.mEncryptedPasswords.contains(p1); Object v18 = this.mEncryptedPasswords.get(p1); Arrays.fill(v18, 0); this.mEncryptedPasswords.remove(p1);",0.6810818910598755
setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V,setServerParams([B)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12); this.mAgentIntents.put(v14, p1);","this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.9278517961502075
setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V,setRecoverySecretTypes([I)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12); this.mAgentIntents.put(v14, p1);","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.8356351852416992
startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B,generateKey(Ljava/lang/String;)Ljava/lang/String;,"byte[] v33 = v32.getEncoded(); PublicKey v38 = KeySyncUtils.deserializePublicKey(v33); boolean v39 = RecoverableKeyStoreManager.publicKeysMatch(v38, p4); byte[] v40 = KeySyncUtils.generateKeyClaimant(); byte[] v53 = KeySyncUtils.calculateThmKfHash(v42); byte[] v54 = KeySyncUtils.encryptRecoveryClaim(v38, p4, p5, v53, v40); return v54;","byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0); this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8); return v1;",0.7158196568489075
startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B,closeSession(Ljava/lang/String;)V,"Object v17 = Objects.requireNonNull(p1, ""invalid session""); Object v18 = Objects.requireNonNull(p3, ""verifierCertPath is null""); Object v19 = Objects.requireNonNull(p4, ""vaultParams is null""); Object v20 = Objects.requireNonNull(p5, ""vaultChallenge is null""); Object v21 = Objects.requireNonNull(p6, ""secrets is null""); RecoverySessionStorage$Entry v43 = new RecoverySessionStorage$Entry(p1,v42,v40,p4); this.mRecoverySessionStorage.add(v36, v43);","Object v14 = Objects.requireNonNull(p1, ""invalid session""); RecoverySessionStorage$$ExternalSyntheticLambda0 v19 = new RecoverySessionStorage$$ExternalSyntheticLambda0(p1); boolean v21 = v18.removeIf(v19);",0.7059577107429504
addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J,hasPendingEscrowToken(I)Z,Integer v111 = Integer.valueOf(p3); Object v112 = this.tokenMap.get(v111); Long v113 = Long.valueOf(v68); Object v114 = v112.remove(v113);,Integer v4 = Integer.valueOf(p1); boolean v5 = this.tokenMap.containsKey(v4); Object v8 = this.tokenMap.get(v7); Set v9 = v8.keySet(); ArraySet v6 = new ArraySet(v9);,0.9019067287445068
addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J,removeWeakEscrowToken(JI)Z,Integer v111 = Integer.valueOf(p3); Object v112 = this.tokenMap.get(v111); Long v113 = Long.valueOf(v68); Object v114 = v112.remove(v113);,"long v8 = LockSettingsService.getLong(""sp-handle"", 0, p2); Integer v10 = Integer.valueOf(p2); boolean v11 = this.tokenMap.containsKey(v10); Object v13 = this.tokenMap.get(v12); Long v14 = Long.valueOf(p1); Object v15 = v13.remove(v14);",0.7898169159889221
hasPendingEscrowToken(I)Z,addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J,Integer v4 = Integer.valueOf(p1); boolean v5 = this.tokenMap.containsKey(v4); Object v8 = this.tokenMap.get(v7); Set v9 = v8.keySet(); ArraySet v6 = new ArraySet(v9);,Integer v111 = Integer.valueOf(p3); Object v112 = this.tokenMap.get(v111); Long v113 = Long.valueOf(v68); Object v114 = v112.remove(v113);,0.9019067287445068
hasPendingEscrowToken(I)Z,removeWeakEscrowToken(JI)Z,Integer v4 = Integer.valueOf(p1); boolean v5 = this.tokenMap.containsKey(v4); Object v8 = this.tokenMap.get(v7); Set v9 = v8.keySet(); ArraySet v6 = new ArraySet(v9);,"long v8 = LockSettingsService.getLong(""sp-handle"", 0, p2); Integer v10 = Integer.valueOf(p2); boolean v11 = this.tokenMap.containsKey(v10); Object v13 = this.tokenMap.get(v12); Long v14 = Long.valueOf(p1); Object v15 = v13.remove(v14);",0.7610259652137756
isWeakEscrowTokenValid(J[BI)Z,systemReady()V,IGateKeeperService v19 = v21; this.mGateKeeperService = v19;,IGateKeeperService v17 = v19; this.mGateKeeperService = v17;,0.9885582327842712
isWeakEscrowTokenValid(J[BI)Z,removeWeakEscrowToken(JI)Z,"byte[] v8 = SyntheticPasswordManager.loadState(""e0"", 0, p1); boolean v9 = ArrayUtils.isEmpty(v8); SyntheticPasswordManager$AuthenticationResult v25 = new SyntheticPasswordManager$AuthenticationResult(); VerifyCredentialResponse v30 = SyntheticPasswordManager.weaverVerify(v28, 0); SyntheticPasswordManager$AuthenticationToken v36 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p2, 2, v35, 0, p4);","boolean v17 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); byte[] v19 = SyntheticPasswordManager.loadState(""spblob"", p1, p2); SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19); SyntheticPasswordManager.destroySyntheticPassword(p1, p2); SyntheticPasswordManager.destroyState(""secdis"", p1, p2);",0.853276252746582
getStrongAuthForUser(I)I,userPresent(I)V,"int v5 = this.mStrongAuthRequiredForUser.get(p1, this.mDefaultStrongAuthFlags); int v4 = v5; int v3 = v4; return v3;","LockSettingsStrongAuth.requireStrongAuth(0, p1);",0.6669191122055054
getStrongAuthForUser(I)I,getLastResumedActivityUserId()I,"int v5 = this.mStrongAuthRequiredForUser.get(p1, this.mDefaultStrongAuthFlags); int v4 = v5; int v3 = v4; return v3;",int v5 = p0.getCurrentUserId(); return v5;,0.6072841286659241
hasSecureLockScreen()Z,setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z,return this.mHasSecureLockScreen;,"this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1); LockSettingsService.checkWritePermission(p1);",0.6424395442008972
hasSecureLockScreen()Z,hideAuthenticationDialog(J)V,return this.mHasSecureLockScreen;,this.mBar.hideAuthenticationDialog(p1);,0.6414119601249695
initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V,setRecoverySecretTypes([I)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12); int v34 = UserHandle.getCallingUserId(); int v35 = Binder.getCallingUid(); long v47 = this.mDatabase.setActiveRootOfTrust(v34, v35, v36);","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.8908478617668152
initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V,removeKey(Ljava/lang/String;)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12); int v34 = UserHandle.getCallingUserId(); int v35 = Binder.getCallingUid(); long v47 = this.mDatabase.setActiveRootOfTrust(v34, v35, v36);","this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v18 = this.mKeyStoreDbHelper.getWritableDatabase(); int v21 = v18.delete(""keys"", ""uid = ? AND alias = ?"", v19);",0.8709416389465332
getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B,verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,SyntheticPasswordManager$AuthenticationResult v74 = new SyntheticPasswordManager$AuthenticationResult(); v74.gkResponse = v114; v74.authToken = v137; return v168;,"SyntheticPasswordManager$AuthenticationResult v28 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v27, v26, p1, p2, p3); int v29 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode(); byte[] v30 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();",0.8620162010192871
getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B,verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,"byte[] v25 = v21.doFinal(v14); LockscreenCredential v27 = new LockscreenCredential(4,v28); byte[] v28 = Arrays.copyOf(v25, v25.length); return v168;","LockscreenCredential v94 = new LockscreenCredential(4,v95); byte[] v95 = Arrays.copyOf(v92, v92.length); Arrays.fill(v92, 0);",0.8105291724205017
requireStrongAuth(II)V,registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v4 = this.mHandler.obtainMessage(1, p1, p2); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();",0.9865454435348511
requireStrongAuth(II)V,unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v4 = this.mHandler.obtainMessage(1, p1, p2); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(3, p1); v4.sendToTarget();",0.9809021949768066
resetKeyStore(I)V,getTasks(IZZI)Ljava/util/List;,List v7 = this.mUserManager.getProfiles(p1); [I v10 = this.mUserManager.getProfileIdsWithDisabled(p1);,"int v7 = UserHandle.getUserId(v1); IntArray v18 = UserManagerService.getProfileIdsLU(p1, 0, p2); [I v19 = v18.toArray(); ArrayList v23 = new ArrayList(); this.mCallingUid = p4; int v54 = UserHandle.getUserId(p4); this.mUserId = v54; RunningTasks$$ExternalSyntheticLambda0 v55 = new RunningTasks$$ExternalSyntheticLambda0(); PooledConsumer v58 = PooledLambda.obtainConsumer(v55, RunningTasks, v57); phiInstruction.forAllLeafTasks(v58, 0); return v23;",0.6440313458442688
resetKeyStore(I)V,applyRestore([BI)V,List v7 = this.mUserManager.getProfiles(p1); [I v10 = this.mUserManager.getProfileIdsWithDisabled(p1);,"boolean v5 = p0.isUserUnlockedL(p2); ShortcutUser v26 = p0.loadUserInternal(p2, v24, 1); this.mLastLockedUser = p2; Object v36 = this.mUsers.get(p2); v42.saveToXml(phiInstruction, 0);",0.6330103278160095
removeCachedUnifiedChallenge(I)V,setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V,"StringBuilder v3 = new StringBuilder(); StringBuilder v5 = v3.append(""com.android.server.locksettings.unified_profile_cache_v2_""); StringBuilder v6 = v3.append(p1); String v7 = v3.toString(); String v2 = v7; boolean v14 = this.mKeyStore.containsAlias(v2); this.mKeyStore.deleteEntry(v2);","StringBuilder v25 = new StringBuilder(); StringBuilder v27 = v25.append(""profile_key_name_encrypt_""); StringBuilder v28 = v25.append(p1); String v29 = v25.toString(); this.mJavaKeyStore.deleteEntry(v29);",0.8404338359832764
removeCachedUnifiedChallenge(I)V,tryUnlockWithCachedUnifiedChallenge(I)Z,"StringBuilder v3 = new StringBuilder(); StringBuilder v5 = v3.append(""com.android.server.locksettings.unified_profile_cache_v2_""); StringBuilder v6 = v3.append(p1); String v7 = v3.toString(); String v2 = v7; boolean v14 = this.mKeyStore.containsAlias(v2); this.mKeyStore.deleteEntry(v2);","Object v2 = this.mEncryptedPasswords.get(p1); StringBuilder v4 = new StringBuilder(); StringBuilder v6 = v4.append(""com.android.server.locksettings.unified_profile_cache_v2_""); StringBuilder v7 = v4.append(p1); String v8 = v4.toString(); Key v9 = this.mKeyStore.getKey(v3, 0);",0.8404207229614258
systemReady()V,isWeakEscrowTokenValid(J[BI)Z,IGateKeeperService v17 = v19; this.mGateKeeperService = v17;,IGateKeeperService v19 = v21; this.mGateKeeperService = v19;,0.9885582327842712
systemReady()V,tryUnlockWithCachedUnifiedChallenge(I)Z,LockSettingsStorage$CredentialHash v73 = LockSettingsStorage.readPasswordHashIfExists(p1); LockSettingsStorage$CredentialHash v74 = LockSettingsStorage.readPatternHashIfExists(p1);,LockSettingsStorage$CredentialHash v44 = LockSettingsStorage.readPasswordHashIfExists(p2); LockSettingsStorage$CredentialHash v45 = LockSettingsStorage.readPatternHashIfExists(p2); LockSettingsStorage$CredentialHash v43 = v46;,0.9574752449989319
getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot;,setRecoverySecretTypes([I)V,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); KeyChainSnapshot v17 = RecoverySnapshotStorage.readFromDisk(v14);","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.9227079153060913
getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot;,setRecoverySecretTypes([I)V,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); KeyChainSnapshot v17 = RecoverySnapshotStorage.readFromDisk(v14); KeyChainSnapshot v1 = v15; return v1;","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.8722949624061584
importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String;,generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;,"PlatformKeyManager.init(v17); PlatformDecryptionKey v20 = PlatformKeyManager.getDecryptKeyInternal(v17); PlatformEncryptionKey v26 = PlatformKeyManager.getEncryptKeyInternal(v17); SecretKeySpec v28 = new SecretKeySpec(p2,""AES""); WrappedKey v30 = WrappedKey.fromSecretKey(v18, v28, p3); this.mDatabase.insertKey(v17, v16, p1, v30); this.mKeyStore.setEntry(v40, v41, v51);",PlatformDecryptionKey v19 = PlatformKeyManager.getDecryptKeyInternal(v16); PlatformEncryptionKey v20 = PlatformKeyManager.getEncryptKeyInternal(v16); PlatformKeyManager.regenerate(v16);,0.8176249265670776
importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String;,generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;,"PlatformKeyManager.init(v17); PlatformDecryptionKey v20 = PlatformKeyManager.getDecryptKeyInternal(v17); PlatformEncryptionKey v26 = PlatformKeyManager.getEncryptKeyInternal(v17); SecretKeySpec v28 = new SecretKeySpec(p2,""AES""); WrappedKey v30 = WrappedKey.fromSecretKey(v18, v28, p3); this.mDatabase.insertKey(v17, v16, p1, v30); this.mKeyStore.setEntry(v40, v41, v51);","SecretKey v29 = this.mKeyGenerator.generateKey(); WrappedKey v30 = WrappedKey.fromSecretKey(v17, v29, p2); long v31 = this.mDatabase.insertKey(v16, v15, p1, v30); byte[] v34 = v29.getEncoded(); SecretKeySpec v44 = new SecretKeySpec(v27,""AES""); this.mKeyStore.setEntry(v42, v43, v53);",0.7403837442398071
getRecoveryStatus()Ljava/util/Map;,recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map;,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v16 = this.mKeyStoreDbHelper.getReadableDatabase(); Cursor v20 = v16.query(""keys"", new String[] {""key_id""}, ""uid = ?"", new String[] {String.valueOf(v14)}, 0, 0, 0); HashMap v21 = new HashMap(); v21.put(""recovery_status"", v20.getString(0)); Map v1 = v21; return v1;","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); Object v17 = this.mSessionsByUid.get(v15); byte[] v26 = KeySyncUtils.decryptRecoveryClaimResponse(v24, v25, p2); byte[] v28 = KeySyncUtils.decryptRecoveryKey(v27, v26); HashMap v30 = new HashMap(); return v1;",0.8945967555046082
getRecoveryStatus()Ljava/util/Map;,setRecoverySecretTypes([I)V,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v16 = this.mKeyStoreDbHelper.getReadableDatabase(); Cursor v20 = v16.query(""keys"", new String[] {""key_id""}, ""uid = ?"", new String[] {String.valueOf(v14)}, 0, 0, 0); HashMap v21 = new HashMap(); v21.put(""recovery_status"", v20.getString(0)); Map v1 = v21; return v1;","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.869262158870697
importKey(Ljava/lang/String;[B)Ljava/lang/String;,generateKey(Ljava/lang/String;)Ljava/lang/String;,"this.mApplicationKeyStorage.setSymmetricKeyEntry(v7, v6, p1, p2); String v11 = RecoverableKeyStoreManager.getAlias(v7, v6, p1);","byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0); this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8); return v1;",0.866481363773346
importKey(Ljava/lang/String;[B)Ljava/lang/String;,generateKey(Ljava/lang/String;)Ljava/lang/String;,"this.mRecoverableKeyGenerator.importKey(v8, v7, v6, p1, p2, 0); Object v4 = Objects.requireNonNull(p1, ""alias is null""); Object v5 = Objects.requireNonNull(p2, ""keyBytes is null"");","byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0); this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8); return v1;",0.7551935911178589
setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V,setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z,"LockSettingsService.checkReadPermission(""lockscreen.profilechallenge"", p1); LockSettingsService.checkWritePermission(p1); this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1);","this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1); LockSettingsService.checkWritePermission(p1);",0.9417965412139893
setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V,removeCachedUnifiedChallenge(I)V,"StringBuilder v25 = new StringBuilder(); StringBuilder v27 = v25.append(""profile_key_name_encrypt_""); StringBuilder v28 = v25.append(p1); String v29 = v25.toString(); this.mJavaKeyStore.deleteEntry(v29);","StringBuilder v3 = new StringBuilder(); StringBuilder v5 = v3.append(""com.android.server.locksettings.unified_profile_cache_v2_""); StringBuilder v6 = v3.append(p1); String v7 = v3.toString(); String v2 = v7; boolean v14 = this.mKeyStore.containsAlias(v2); this.mKeyStore.deleteEntry(v2);",0.8404338359832764
getKey(Ljava/lang/String;)Ljava/lang/String;,getRecoverySecretTypes()[I,"int v16 = UserHandle.getCallingUserId(); int v15 = Binder.getCallingUid(); String v18 = this.mApplicationKeyStorage.getGrantAlias(v16, v15, p1); String v17 = v18; String v1 = v17; return v1;",int v14 = UserHandle.getCallingUserId(); int v15 = Binder.getCallingUid(); SQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase(); [I v30 = new [I(0); return v1;,0.8034688830375671
getKey(Ljava/lang/String;)Ljava/lang/String;,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,"int v16 = UserHandle.getCallingUserId(); int v15 = Binder.getCallingUid(); String v18 = this.mApplicationKeyStorage.getGrantAlias(v16, v15, p1); String v17 = v18; String v1 = v17; return v1;",int v31 = Binder.getCallingUid(); ActivityStarter v32 = v25.setRealCallingUid(v31);,0.756848931312561
registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(3, p1); v4.sendToTarget();",0.9967396855354309
registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,scheduleNonStrongBiometricIdleTimeout(I)V,"Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(9, p1, 0); v4.sendToTarget();",0.9890623688697815
isWeakEscrowTokenActive(JI)Z,removeWeakEscrowToken(JI)Z,"boolean v8 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); boolean v7 = v8; boolean v6 = v7; return v6;","boolean v17 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); byte[] v19 = SyntheticPasswordManager.loadState(""spblob"", p1, p2); SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19); SyntheticPasswordManager.destroySyntheticPassword(p1, p2); SyntheticPasswordManager.destroyState(""secdis"", p1, p2);",0.8566054701805115
isWeakEscrowTokenActive(JI)Z,isWeakEscrowTokenValid(J[BI)Z,"boolean v8 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); boolean v7 = v8; boolean v6 = v7; return v6;","byte[] v8 = SyntheticPasswordManager.loadState(""e0"", 0, p1); boolean v9 = ArrayUtils.isEmpty(v8); SyntheticPasswordManager$AuthenticationResult v25 = new SyntheticPasswordManager$AuthenticationResult(); VerifyCredentialResponse v30 = SyntheticPasswordManager.weaverVerify(v28, 0); SyntheticPasswordManager$AuthenticationToken v36 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p2, 2, v35, 0, p4);",0.7756963968276978
setBoolean(Ljava/lang/String;ZI)V,getLong(Ljava/lang/String;JI)J,"LockSettingsStorage.writeKeyValue(p1, phiInstruction, p3);","String v6 = LockSettingsStorage.readKeyValue(phiInstruction, 0, p3);",0.8384045958518982
setBoolean(Ljava/lang/String;ZI)V,setLong(Ljava/lang/String;JI)V,"LockSettingsStorage.writeKeyValue(p1, phiInstruction, p3);","String v4 = Long.toString(p2); LockSettingsStorage.writeKeyValue(p1, v4, p3);",0.8075015544891357
verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;,"IGateKeeperService v43 = LockSettingsService.getGateKeeperService(); byte[] v44 = p1.getCredential(); GateKeeperResponse v45 = v43.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v44);","IGateKeeperService v40 = LockSettingsService.getGateKeeperService(); byte[] v41 = p1.getCredential(); GateKeeperResponse v42 = v40.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v41);",0.9948545098304749
verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,tryUnlockWithCachedUnifiedChallenge(I)Z,"IGateKeeperService v43 = LockSettingsService.getGateKeeperService(); byte[] v44 = p1.getCredential(); GateKeeperResponse v45 = v43.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v44);","IGateKeeperService v53 = LockSettingsService.getGateKeeperService(); byte[] v54 = p1.getCredential(); GateKeeperResponse v55 = v53.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v54);",0.9935137033462524
getSeparateProfileChallengeEnabled(I)Z,startStylusHandwriting(Lcom/android/internal/view/IInputMethodClient;)V,int v2 = Binder.getCallingUid();,int v8 = Binder.getCallingUid(); Integer v19 = Integer.valueOf(v8);,0.949438214302063
getSeparateProfileChallengeEnabled(I)Z,resumeRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,int v2 = Binder.getCallingUid();,int v1 = Binder.getCallingUid(); int v2 = Binder.getCallingPid();,0.9275490045547485
removeWeakEscrowToken(JI)Z,isWeakEscrowTokenActive(JI)Z,"boolean v17 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); byte[] v19 = SyntheticPasswordManager.loadState(""spblob"", p1, p2); SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19); SyntheticPasswordManager.destroySyntheticPassword(p1, p2); SyntheticPasswordManager.destroyState(""secdis"", p1, p2);","boolean v8 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); boolean v7 = v8; boolean v6 = v7; return v6;",0.8566054701805115
removeWeakEscrowToken(JI)Z,isWeakEscrowTokenValid(J[BI)Z,"boolean v17 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); byte[] v19 = SyntheticPasswordManager.loadState(""spblob"", p1, p2); SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19); SyntheticPasswordManager.destroySyntheticPassword(p1, p2); SyntheticPasswordManager.destroyState(""secdis"", p1, p2);","byte[] v8 = SyntheticPasswordManager.loadState(""e0"", 0, p1); boolean v9 = ArrayUtils.isEmpty(v8); SyntheticPasswordManager$AuthenticationResult v25 = new SyntheticPasswordManager$AuthenticationResult(); VerifyCredentialResponse v30 = SyntheticPasswordManager.weaverVerify(v28, 0); SyntheticPasswordManager$AuthenticationToken v36 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p2, 2, v35, 0, p4);",0.853276252746582
getBoolean(Ljava/lang/String;ZI)Z,getCredentialType(I)I,"boolean v3 = ""lock_pattern_autolock"".equals(p1); long v8 = LockSettingsService.getLong(""sp-handle"", 0, p1); byte[] v10 = SyntheticPasswordManager.loadState(""pwd"", v7, p1); long v18 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1);","long v22 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1); int v21 = v22; boolean v24 = LockPatternUtils.isQualityAlphabeticPassword(v21); boolean v25 = LockPatternUtils.isQualityNumericPin(v21); int v23 = 3;",0.8764030933380127
getBoolean(Ljava/lang/String;ZI)Z,isWeakEscrowTokenActive(JI)Z,"boolean v3 = ""lock_pattern_autolock"".equals(p1); long v8 = LockSettingsService.getLong(""sp-handle"", 0, p1); byte[] v10 = SyntheticPasswordManager.loadState(""pwd"", v7, p1); long v18 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1);","boolean v8 = SyntheticPasswordManager.hasState(""spblob"", p1, p2); boolean v7 = v8; boolean v6 = v7; return v6;",0.7484272718429565
getRecoverySecretTypes()[I,getRecoveryStatus()Ljava/util/Map;,"int v14 = UserHandle.getCallingUserId(); int v15 = Binder.getCallingUid(); SQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase(); Cursor v22 = v17.query(""recovery_service_metadata"", v18, ""user_id = ? AND uid = ?"", v19, 0, 0, 0); String v27 = v22.getString(v25); String[] v29 = v27.split(','); [I v30 = new [I(v29.length); return v1;","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v16 = this.mKeyStoreDbHelper.getReadableDatabase(); Cursor v20 = v16.query(""keys"", new String[] {""key_id""}, ""uid = ?"", new String[] {String.valueOf(v14)}, 0, 0, 0); HashMap v21 = new HashMap(); v21.put(""recovery_status"", v20.getString(0)); Map v1 = v21; return v1;",0.8342586755752563
getRecoverySecretTypes()[I,getKey(Ljava/lang/String;)Ljava/lang/String;,int v14 = UserHandle.getCallingUserId(); int v15 = Binder.getCallingUid(); SQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase(); [I v30 = new [I(0); return v1;,"int v16 = UserHandle.getCallingUserId(); int v15 = Binder.getCallingUid(); String v18 = this.mApplicationKeyStorage.getGrantAlias(v16, v15, p1); String v17 = v18; String v1 = v17; return v1;",0.8034688830375671
userPresent(I)V,detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J,"LockSettingsStrongAuth.requireStrongAuth(0, p1);",LockPatternUtils v12 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0); int v14 = v12.getStrongAuthForUser(p2);,0.6673061847686768
userPresent(I)V,getStrongAuthForUser(I)I,"LockSettingsStrongAuth.requireStrongAuth(0, p1);","int v5 = this.mStrongAuthRequiredForUser.get(p1, this.mDefaultStrongAuthFlags); int v4 = v5; int v3 = v4; return v3;",0.6669191122055054
closeSession(Ljava/lang/String;)V,getRecentlyCommittedRollbacks()Landroid/content/pm/ParceledListSlice;,"Object v14 = Objects.requireNonNull(p1, ""invalid session""); RecoverySessionStorage$$ExternalSyntheticLambda0 v19 = new RecoverySessionStorage$$ExternalSyntheticLambda0(p1); boolean v21 = v18.removeIf(v19);","RollbackManagerServiceImpl$$ExternalSyntheticLambda8 v7 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda8(p0); CompletableFuture v15 = CompletableFuture.supplyAsync(v7, this.mExecutor); Object v16 = v15.get(); return v9;",0.7540229558944702
closeSession(Ljava/lang/String;)V,reloadPersistedData()V,"Object v14 = Objects.requireNonNull(p1, ""invalid session""); RecoverySessionStorage$$ExternalSyntheticLambda0 v19 = new RecoverySessionStorage$$ExternalSyntheticLambda0(p1); boolean v21 = v18.removeIf(v19);","RollbackManagerServiceImpl$$ExternalSyntheticLambda0 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda0(p0); CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);",0.7493098974227905
scheduleNonStrongBiometricIdleTimeout(I)V,unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v4 = this.mHandler.obtainMessage(9, p1, 0); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(3, p1); v4.sendToTarget();",0.9913055896759033
scheduleNonStrongBiometricIdleTimeout(I)V,registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v4 = this.mHandler.obtainMessage(9, p1, 0); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();",0.9890623688697815
reportSuccessfulBiometricUnlock(ZI)V,scheduleNonStrongBiometricIdleTimeout(I)V,"Message v4 = this.mHandler.obtainMessage(8, p2, 0); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(9, p1, 0); v4.sendToTarget();",0.9879481792449951
reportSuccessfulBiometricUnlock(ZI)V,registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v4 = this.mHandler.obtainMessage(8, p2, 0); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();",0.9866015911102295
setRecoveryStatus(Ljava/lang/String;I)V,setRecoverySecretTypes([I)V,"Object v14 = Objects.requireNonNull(p1, ""alias is null""); Integer v20 = Integer.valueOf(p2); ContentValues v18 = new ContentValues(); v18.put(""recovery_status"", v20); SQLiteDatabase v17 = this.mKeyStoreDbHelper.getWritableDatabase(); int v24 = v17.update(""keys"", v18, ""uid = ? AND alias = ?"", new String[]{String.valueOf(v15), p1});","[I v31 = new [I(v30.length); boolean v33 = Arrays.equals(p1, v17); SQLiteDatabase v35 = this.mKeyStoreDbHelper.getWritableDatabase(); ContentValues v36 = new ContentValues(); v36.put(""secret_types"", v44); int v50 = v35.update(""recovery_service_metadata"", v36, ...)",0.8159419298171997
setRecoveryStatus(Ljava/lang/String;I)V,getRecoveryStatus()Ljava/util/Map;,"Object v14 = Objects.requireNonNull(p1, ""alias is null""); Integer v20 = Integer.valueOf(p2); ContentValues v18 = new ContentValues(); v18.put(""recovery_status"", v20); SQLiteDatabase v17 = this.mKeyStoreDbHelper.getWritableDatabase(); int v24 = v17.update(""keys"", v18, ""uid = ? AND alias = ?"", new String[]{String.valueOf(v15), p1});","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v16 = this.mKeyStoreDbHelper.getReadableDatabase(); Cursor v20 = v16.query(""keys"", new String[] {""key_id""}, ""uid = ?"", new String[] {String.valueOf(v14)}, 0, 0, 0); HashMap v21 = new HashMap(); v21.put(""recovery_status"", v20.getString(0)); Map v1 = v21; return v1;",0.7720102667808533
setServerParams([B)V,setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12);","this.mCleanupManager.registerRecoveryAgent(v11, v12); this.mAgentIntents.put(v14, p1);",0.9278517961502075
setServerParams([B)V,setRecoverySecretTypes([I)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12);","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.8810153603553772
verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,tryUnlockWithCachedUnifiedChallenge(I)Z,"IGateKeeperService v32 = LockSettingsService.getGateKeeperService(); VerifyCredentialResponse v33 = this.mSpManager.verifyChallenge(v32, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2); int v34 = v33.getResponseCode();","IGateKeeperService v39 = LockSettingsService.getGateKeeperService(); VerifyCredentialResponse v40 = this.mSpManager.verifyChallenge(v39, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2); int v41 = v40.getResponseCode();",0.9549890756607056
verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;,"IGateKeeperService v32 = LockSettingsService.getGateKeeperService(); VerifyCredentialResponse v33 = this.mSpManager.verifyChallenge(v32, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2); int v34 = v33.getResponseCode();","IGateKeeperService v25 = LockSettingsService.getGateKeeperService(); VerifyCredentialResponse v26 = this.mSpManager.verifyChallenge(v25, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2); int v27 = v26.getResponseCode();",0.9525175094604492
tryUnlockWithCachedUnifiedChallenge(I)Z,checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;,VerifyCredentialResponse v57 = LockSettingsService.convertResponse(phiInstruction); boolean v58 = phiInstruction.getShouldReEnroll(); int v59 = v57.getResponseCode();,VerifyCredentialResponse v44 = LockSettingsService.convertResponse(phiInstruction); boolean v45 = phiInstruction.getShouldReEnroll(); int v46 = v44.getResponseCode();,0.9945125579833984
tryUnlockWithCachedUnifiedChallenge(I)Z,verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,"IGateKeeperService v53 = LockSettingsService.getGateKeeperService(); byte[] v54 = p1.getCredential(); GateKeeperResponse v55 = v53.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v54);","IGateKeeperService v43 = LockSettingsService.getGateKeeperService(); byte[] v44 = p1.getCredential(); GateKeeperResponse v45 = v43.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v44);",0.9935137033462524
generateKey(Ljava/lang/String;)Ljava/lang/String;,importKey(Ljava/lang/String;[B)Ljava/lang/String;,"byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0); this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8); return v1;","this.mApplicationKeyStorage.setSymmetricKeyEntry(v7, v6, p1, p2); String v11 = RecoverableKeyStoreManager.getAlias(v7, v6, p1);",0.866481363773346
generateKey(Ljava/lang/String;)Ljava/lang/String;,importKey(Ljava/lang/String;[B)Ljava/lang/String;,"byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0); this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8); return v1;","this.mRecoverableKeyGenerator.importKey(v8, v7, v6, p1, p2, 0); Object v4 = Objects.requireNonNull(p1, ""alias is null""); Object v5 = Objects.requireNonNull(p2, ""keyBytes is null"");",0.7551935911178589
setLong(Ljava/lang/String;JI)V,setBoolean(Ljava/lang/String;ZI)V,"String v4 = Long.toString(p2); LockSettingsStorage.writeKeyValue(p1, v4, p3);","LockSettingsStorage.writeKeyValue(p1, phiInstruction, p3);",0.8075015544891357
setLong(Ljava/lang/String;JI)V,setString(Ljava/lang/String;Ljava/lang/String;I)V,"String v4 = Long.toString(p2); LockSettingsStorage.writeKeyValue(p1, v4, p3);","SQLiteDatabase v6 = this.mOpenHelper.getWritableDatabase(); LockSettingsStorage.writeKeyValue(v6, p1, p2, p3);",0.7532294988632202
removeKey(Ljava/lang/String;)V,setServerParams([B)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v18 = this.mKeyStoreDbHelper.getWritableDatabase(); int v21 = v18.delete(""keys"", ""uid = ? AND alias = ?"", v19);","this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.8726614117622375
removeKey(Ljava/lang/String;)V,initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V,"this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v18 = this.mKeyStoreDbHelper.getWritableDatabase(); int v21 = v18.delete(""keys"", ""uid = ? AND alias = ?"", v19);","this.mCleanupManager.registerRecoveryAgent(v11, v12); int v34 = UserHandle.getCallingUserId(); int v35 = Binder.getCallingUid(); long v47 = this.mDatabase.setActiveRootOfTrust(v34, v35, v36);",0.8709416389465332
unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,boolean v7 = this.mListeners.unregister(p1); return v6;,boolean v7 = this.mListeners.register(p1); return v6;,0.9460954666137695
unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,boolean v7 = this.mListeners.unregister(p1); return v6;,boolean v5 = this.mVibratorStateListeners.unregister(p2); return v3;,0.7940438985824585
setString(Ljava/lang/String;Ljava/lang/String;I)V,getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;,"SQLiteDatabase v6 = this.mOpenHelper.getWritableDatabase(); LockSettingsStorage.writeKeyValue(v6, p1, p2, p3);","SQLiteDatabase v8 = this.mOpenHelper.getReadableDatabase(); Cursor v11 = v8.query(""locksettings"", this.COLUMNS_FOR_QUERY, ""user=? AND name=?"", v9, 0, 0, 0); String v13 = v11.getString(0); this.mCache.putKeyValueIfUnchanged(phiInstruction, phiInstruction, p3, v7);",0.8261223435401917
setString(Ljava/lang/String;Ljava/lang/String;I)V,setLong(Ljava/lang/String;JI)V,"SQLiteDatabase v6 = this.mOpenHelper.getWritableDatabase(); LockSettingsStorage.writeKeyValue(v6, p1, p2, p3);","String v4 = Long.toString(p2); LockSettingsStorage.writeKeyValue(p1, v4, p3);",0.7532294988632202
setRecoverySecretTypes([I)V,getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot;,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); KeyChainSnapshot v17 = RecoverySnapshotStorage.readFromDisk(v14);",0.9227079153060913
setRecoverySecretTypes([I)V,initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);","this.mCleanupManager.registerRecoveryAgent(v11, v12); int v34 = UserHandle.getCallingUserId(); int v35 = Binder.getCallingUid(); long v47 = this.mDatabase.setActiveRootOfTrust(v34, v35, v36);",0.8908478617668152
getCredentialType(I)I,getBoolean(Ljava/lang/String;ZI)Z,"long v22 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1); int v21 = v22; boolean v24 = LockPatternUtils.isQualityAlphabeticPassword(v21); boolean v25 = LockPatternUtils.isQualityNumericPin(v21); int v23 = 3;","boolean v3 = ""lock_pattern_autolock"".equals(p1); long v8 = LockSettingsService.getLong(""sp-handle"", 0, p1); byte[] v10 = SyntheticPasswordManager.loadState(""pwd"", v7, p1); long v18 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1);",0.8764030933380127
getCredentialType(I)I,tryUnlockWithCachedUnifiedChallenge(I)Z,"long v22 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1); int v21 = v22; boolean v24 = LockPatternUtils.isQualityAlphabeticPassword(v21); boolean v25 = LockPatternUtils.isQualityNumericPin(v21); int v23 = 3;",LockSettingsStorage$CredentialHash v44 = LockSettingsStorage.readPasswordHashIfExists(p2); LockSettingsStorage$CredentialHash v45 = LockSettingsStorage.readPatternHashIfExists(p2); LockSettingsStorage$CredentialHash v43 = v46;,0.7569180727005005
recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map;,getRecoveryStatus()Ljava/util/Map;,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); Object v17 = this.mSessionsByUid.get(v15); byte[] v26 = KeySyncUtils.decryptRecoveryClaimResponse(v24, v25, p2); byte[] v28 = KeySyncUtils.decryptRecoveryKey(v27, v26); HashMap v30 = new HashMap(); return v1;","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); SQLiteDatabase v16 = this.mKeyStoreDbHelper.getReadableDatabase(); Cursor v20 = v16.query(""keys"", new String[] {""key_id""}, ""uid = ?"", new String[] {String.valueOf(v14)}, 0, 0, 0); HashMap v21 = new HashMap(); v21.put(""recovery_status"", v20.getString(0)); Map v1 = v21; return v1;",0.8945967555046082
recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map;,setRecoverySecretTypes([I)V,"int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12); Object v17 = this.mSessionsByUid.get(v15); byte[] v26 = KeySyncUtils.decryptRecoveryClaimResponse(v24, v25, p2); byte[] v28 = KeySyncUtils.decryptRecoveryKey(v27, v26); HashMap v30 = new HashMap(); return v1;","int v11 = UserHandle.getCallingUserId(); int v12 = Binder.getCallingUid(); this.mCleanupManager.registerRecoveryAgent(v11, v12);",0.857391357421875
unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v4 = this.mHandler.obtainMessage(3, p1); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();",0.9967396855354309
unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,scheduleNonStrongBiometricIdleTimeout(I)V,"Message v4 = this.mHandler.obtainMessage(3, p1); v4.sendToTarget();","Message v4 = this.mHandler.obtainMessage(9, p1, 0); v4.sendToTarget();",0.9913055896759033
verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;,verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;,"IGateKeeperService v4 = this.mGateKeeperService; byte[] v16 = SyntheticPasswordManager.loadState(""handle"", 0, p4); GateKeeperResponse v17 = v4.verifyChallenge(p3, p2, v15, v3); VerifyCredentialResponse v24 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0); return SyntheticPasswordManager.verifyChallengeInternal(v4, v3, p2, p3);","IGateKeeperService v43 = LockSettingsService.getGateKeeperService(); byte[] v44 = p1.getCredential(); GateKeeperResponse v45 = v43.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v44);",0.8554595112800598
verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;,tryUnlockWithCachedUnifiedChallenge(I)Z,"IGateKeeperService v4 = this.mGateKeeperService; byte[] v16 = SyntheticPasswordManager.loadState(""handle"", 0, p4); GateKeeperResponse v17 = v4.verifyChallenge(p3, p2, v15, v3); VerifyCredentialResponse v24 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0); return SyntheticPasswordManager.verifyChallengeInternal(v4, v3, p2, p3);","IGateKeeperService v53 = LockSettingsService.getGateKeeperService(); byte[] v54 = p1.getCredential(); GateKeeperResponse v55 = v53.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v54);",0.8547607660293579
isOemUnlockAllowed()Z,setOemUnlockAllowedByUser(Z)V,OemLock v6 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v7 = v6.isOemUnlockAllowedByCarrier(); OemLock v8 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v9 = v8.isOemUnlockAllowedByDevice(); Object v12 = LocalServices.getService(PersistentDataBlockManagerInterna.class); v12.forceOemUnlockEnabled(p2);,OemLock v17 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v18 = v17.isOemUnlockAllowedByCarrier();,0.9327635765075684
isOemUnlockAllowed()Z,isOemUnlockAllowedByCarrier()Z,OemLock v6 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v7 = v6.isOemUnlockAllowedByCarrier(); OemLock v8 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v9 = v8.isOemUnlockAllowedByDevice(); Object v12 = LocalServices.getService(PersistentDataBlockManagerInterna.class); v12.forceOemUnlockEnabled(p2);,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByCarrier(); return v6;,0.916699230670929
isOemUnlockAllowedByCarrier()Z,setOemUnlockAllowedByUser(Z)V,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByCarrier(); return v6;,OemLock v17 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v18 = v17.isOemUnlockAllowedByCarrier();,0.9795269966125488
isOemUnlockAllowedByCarrier()Z,isOemUnlockAllowedByUser()Z,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByCarrier(); return v6;,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByDevice(); return v6;,0.9429548978805542
isDeviceOemUnlocked()Z,getFlashLockState()I,"String v5 = SystemProperties.get(""ro.boot.flash.locked""); boolean v7 = v5.equals(""0""); return 0;","String v5 = SystemProperties.get(""ro.boot.flash.locked""); int v6 = v5.hashCode(); boolean v7 = v5.equals(""0""); return 0;",0.9680233001708984
isDeviceOemUnlocked()Z,getFlashLockState()I,"String v4 = SystemProperties.get(""ro.boot.flash.locked""); boolean v6 = v4.equals(""0""); return 0;","String v5 = SystemProperties.get(""ro.boot.flash.locked""); int v6 = v5.hashCode(); boolean v7 = v5.equals(""0""); return 0;",0.9638671875
setOemUnlockAllowedByCarrier(Z[B)V,setOemUnlockAllowedByUser(Z)V,"OemLock v12 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); v12.setOemUnlockAllowedByCarrier(p1, p2);",OemLock v17 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v18 = v17.isOemUnlockAllowedByCarrier();,0.9181047677993774
setOemUnlockAllowedByCarrier(Z[B)V,setOemUnlockAllowedByUser(Z)V,"OemLock v12 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); v12.setOemUnlockAllowedByCarrier(p1, p2);",OemLock v19 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); v19.setOemUnlockAllowedByDevice(p1);,0.9162794351577759
isOemUnlockAllowedByUser()Z,isOemUnlockAllowedByCarrier()Z,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByDevice(); return v6;,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByCarrier(); return v6;,0.9429548978805542
isOemUnlockAllowedByUser()Z,setOemUnlockAllowedByUser(Z)V,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByDevice(); return v6;,OemLock v19 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); v19.setOemUnlockAllowedByDevice(p1);,0.9338394999504089
setOemUnlockAllowedByUser(Z)V,isOemUnlockAllowedByCarrier()Z,OemLock v17 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v18 = v17.isOemUnlockAllowedByCarrier();,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByCarrier(); return v6;,0.9795269966125488
setOemUnlockAllowedByUser(Z)V,isOemUnlockAllowedByUser()Z,OemLock v19 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); v19.setOemUnlockAllowedByDevice(p1);,OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0); boolean v6 = v5.isOemUnlockAllowedByDevice(); return v6;,0.9338394999504089
getLockName()Ljava/lang/String;,getPersistentDataPackageName()Ljava/lang/String;,String v6 = v5.getLockName(); return v6;,String v8 = v7.getString(17040017); return v8;,0.7293729782104492
getLockName()Ljava/lang/String;,getLockTaskModeState()I,String v6 = v5.getLockName(); return v6;,int v2 = this.mLockTaskModeState; return v2;,0.7142477035522461
setOemUnlockEnabled(Z)V,setOemUnlockAllowedByUser(Z)V,"SystemProperties.set(""sys.oem_unlock_allowed"", phiInstruction); byte[] v20 = PersistentDataBlockService.computeDigestLocked(0); ByteBuffer v22 = ByteBuffer.allocate(32); ByteBuffer v23 = v22.put(v20); Buffer v24 = v22.flip(); int v25 = v21.write(v22); v21.force(1);",Object v23 = LocalServices.getService(PersistentDataBlockManagerInterna.class); v23.forceOemUnlockEnabled(p2);,0.7414708137512207
setOemUnlockEnabled(Z)V,setOemUnlockAllowedByUser(Z)V,"SystemProperties.set(""sys.oem_unlock_allowed"", phiInstruction); byte[] v28 = PersistentDataBlockService.computeDigestLocked(0); ByteBuffer v30 = ByteBuffer.allocate(32); ByteBuffer v31 = v30.put(v28); Buffer v32 = v30.flip(); int v33 = v29.write(v30); v29.force(1);",Object v23 = LocalServices.getService(PersistentDataBlockManagerInterna.class); v23.forceOemUnlockEnabled(p2);,0.737453281879425
getMaximumDataBlockSize()J,isApkVeritySupported()Z,long v5 = phiInstruction; long v4 = v5; return v4;,boolean v1 = phiInstruction; return v1;,0.90315842628479
getMaximumDataBlockSize()J,getClientPid(Ljava/lang/String;)I,long v5 = phiInstruction; long v4 = v5; return v4;,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,0.8663026094436646
write([B)I,requestUninstall([BLandroid/app/timezone/ICallback;)I,ByteBuffer v12 = ByteBuffer.allocate(((p1.length + 8) + 32)); [B v13 = new [B(32); ByteBuffer v14 = v12.put(v13); ByteBuffer v15 = v12.putInt(428873843); ByteBuffer v16 = v12.putInt(p1.length); ByteBuffer v17 = v12.put(p1); Buffer v18 = v12.flip(); int v21 = v7.write(v12);,ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong();,0.7284464836120605
write([B)I,startInputOrWindowGainedFocus(ILcom/android/internal/view/IInputMethodClient;Landroid/os/IBinder;IIILandroid/view/inputmethod/EditorInfo;Lcom/android/internal/view/IInputContext;Lcom/android/internal/inputmethod/IRemoteAccessibilityInputConnection;ILandroid/window/ImeOnBackInvokedDispatcher;)Lcom/android/internal/inputmethod/InputBindResult;,ByteBuffer v12 = ByteBuffer.allocate(((p1.length + 8) + 32)); [B v13 = new [B(32); ByteBuffer v14 = v12.put(v13); ByteBuffer v15 = v12.putInt(428873843); ByteBuffer v16 = v12.putInt(p1.length); ByteBuffer v17 = v12.put(p1); Buffer v18 = v12.flip(); int v21 = v7.write(v12);,"StringBuilder v21 = new StringBuilder(); StringBuilder v23 = v21.append(""Unknown=""); StringBuilder v24 = v23.append(p1); String v25 = v24.toString();",0.6542664766311646
getDataBlockSize()I,getSeparateProfileChallengeEnabled(I)Z,int v4 = Binder.getCallingUid(); this.this$0.enforceUid(v4);,int v2 = Binder.getCallingUid();,0.8780158758163452
getDataBlockSize()I,startStylusHandwriting(Lcom/android/internal/view/IInputMethodClient;)V,int v4 = Binder.getCallingUid(); this.this$0.enforceUid(v4);,int v8 = Binder.getCallingUid(); Integer v19 = Integer.valueOf(v8);,0.8737250566482544
getOemUnlockEnabled()Z,getDataBlockSize()I,File v9 = new File(this.mDataBlockFile); return v5;,String v10 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0); File v9 = new File(v10); FileInputStream v8 = new FileInputStream; DataInputStream v7 = new DataInputStream;,0.8060728907585144
getOemUnlockEnabled()Z,getPersistentDataPackageName()Ljava/lang/String;,File v9 = new File(this.mDataBlockFile); return v5;,String v8 = v7.getString(17040017); return v8;,0.6308178901672363
getPersistentDataPackageName()Ljava/lang/String;,getWhitelistedRuleProviders()Ljava/util/List;,String v8 = v7.getString(17040017); return v8;,String v3 = v2.getStringArray(17236075); List v4 = Arrays.asList(v3);,0.800874650478363
getPersistentDataPackageName()Ljava/lang/String;,getLockName()Ljava/lang/String;,String v8 = v7.getString(17040017); return v8;,String v6 = v5.getLockName(); return v6;,0.7293729782104492
wipe()V,getDataBlockSize()I,"String v5 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0); int v6 = PersistentDataBlockService.-$$Nest$mnativeWipe(this.this$0, v5); PersistentDataBlockService.-$$Nest$fputmIsWritable(this.this$0, 0);",String v10 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0); File v9 = new File(v10); FileInputStream v8 = new FileInputStream; DataInputStream v7 = new DataInputStream;,0.7337783575057983
wipe()V,getOemUnlockEnabled()Z,"String v5 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0); int v6 = PersistentDataBlockService.-$$Nest$mnativeWipe(this.this$0, v5); PersistentDataBlockService.-$$Nest$fputmIsWritable(this.this$0, 0);",File v9 = new File(this.mDataBlockFile); return v5;,0.6122571229934692
hasFrpCredentialHandle()Z,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,int v4 = Binder.getCallingUid(); this.this$0.enforceUid(v4); PersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0); byte[] v8 = v7.getFrpCredentialHandle();,int v31 = Binder.getCallingUid(); ActivityStarter v32 = v25.setRealCallingUid(v31);,0.7073662877082825
hasFrpCredentialHandle()Z,read()[B,int v4 = Binder.getCallingUid(); this.this$0.enforceUid(v4); PersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0); byte[] v8 = v7.getFrpCredentialHandle();,"int v1 = Binder.getCallingUid(); [B v6 = new [B(32); byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6); boolean v8 = Arrays.equals(v6, v7);",0.680452823638916
read()[B,hasFrpCredentialHandle()Z,"int v1 = Binder.getCallingUid(); [B v6 = new [B(32); byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6); boolean v8 = Arrays.equals(v6, v7);",int v4 = Binder.getCallingUid(); this.this$0.enforceUid(v4); PersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0); byte[] v8 = v7.getFrpCredentialHandle();,0.680452823638916
read()[B,getRecoverySecretTypes()[I,"int v1 = Binder.getCallingUid(); [B v6 = new [B(32); byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6); boolean v8 = Arrays.equals(v6, v7);",int v14 = UserHandle.getCallingUserId(); int v15 = Binder.getCallingUid(); SQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase(); [I v30 = new [I(0); return v1;,0.646135687828064
getFlashLockState()I,isDeviceOemUnlocked()Z,"String v5 = SystemProperties.get(""ro.boot.flash.locked""); int v6 = v5.hashCode(); boolean v7 = v5.equals(""0""); return 0;","String v5 = SystemProperties.get(""ro.boot.flash.locked""); boolean v7 = v5.equals(""0""); return 0;",0.9680233001708984
getFlashLockState()I,isDeviceOemUnlocked()Z,"String v5 = SystemProperties.get(""ro.boot.flash.locked""); int v6 = v5.hashCode(); boolean v7 = v5.equals(""0""); return 0;","String v4 = SystemProperties.get(""ro.boot.flash.locked""); boolean v6 = v4.equals(""0""); return 0;",0.9638671875
onApplicationActive(Ljava/lang/String;I)V,removeLongLivedShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v20 = this.mPackages.put(p1, v18); v6.resetRateLimitingForCommandLineNoSaving();","ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31);",0.9426370859146118
onApplicationActive(Ljava/lang/String;I)V,disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V,"ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v20 = this.mPackages.put(p1, v18); v6.resetRateLimitingForCommandLineNoSaving();","ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31); v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);",0.931159257888794
getShareTargets(Ljava/lang/String;Landroid/content/IntentFilter;I)Landroid/content/pm/ParceledListSlice;,pushDynamicShortcut(Ljava/lang/String;Landroid/content/pm/ShortcutInfo;I)V,"this.mLastLockedUser = p3; Object v18 = this.mUsers.get(p3); ShortcutUser v33 = new ShortcutUser(ShortcutService,p3); this.mUsers.put(p3, phiInstruction);","ShortcutUser v29 = ShortcutService.loadUserLocked(p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v35 = ShortcutUser.getPackageShortcutsIfExists(p1);",0.8871102333068848
getShareTargets(Ljava/lang/String;Landroid/content/IntentFilter;I)Landroid/content/pm/ParceledListSlice;,removeDynamicShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"this.mLastLockedUser = p3; Object v18 = this.mUsers.get(p3); ShortcutUser v33 = new ShortcutUser(ShortcutService,p3); this.mUsers.put(p3, phiInstruction);","Object v23 = this.mUsers.get(p2); ShortcutUser v24 = ShortcutService.loadUserLocked(p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);",0.8802480101585388
applyRestore([BI)V,requestUninstall([BLandroid/app/timezone/ICallback;)I,ByteArrayInputStream v2 = new ByteArrayInputStream(p1);,ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong();,0.7856341600418091
applyRestore([BI)V,isAppSourceCertificateTrusted([BLjava/lang/String;)Z,ByteArrayInputStream v2 = new ByteArrayInputStream(p1);,ByteArrayInputStream v13 = new ByteArrayInputStream(p1); Certificate v15 = this.sCertFactory.generateCertificate(v13); X509Certificate v12 = v15; boolean v16 = v10.contains(v12);,0.6604934930801392
getBackupPayload(I)[B,applyRestore([BI)V,"ByteArrayOutputStream v2 = new ByteArrayOutputStream(); XmlPullParserFactory v4 = XmlPullParserFactory.newInstance(); XmlSerializer v5 = v4.newSerializer(); String v6 = Xml$Encoding.UTF_8.name(); v5.setOutput(v2, v6);",ByteArrayInputStream v2 = new ByteArrayInputStream(p1);,0.6259762048721313
getBackupPayload(I)[B,requestUninstall([BLandroid/app/timezone/ICallback;)I,"ByteArrayOutputStream v2 = new ByteArrayOutputStream(); XmlPullParserFactory v4 = XmlPullParserFactory.newInstance(); XmlSerializer v5 = v4.newSerializer(); String v6 = Xml$Encoding.UTF_8.name(); v5.setOutput(v2, v6);",ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong();,0.62422776222229
getShortcuts(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;,enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12); ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2); ShortcutPackage v26 = v25.getPackageShortcuts(p1); v27.onCalledByPublisher(p1); ArrayList v22 = new ArrayList(); ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0); ParceledListSlice v31 = new ParceledListSlice(v32); return v21;","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",0.9168514609336853
getShortcuts(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;,removeAllDynamicShortcuts(Ljava/lang/String;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12); ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2); ShortcutPackage v26 = v25.getPackageShortcuts(p1); v27.onCalledByPublisher(p1); ArrayList v22 = new ArrayList(); ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0); ParceledListSlice v31 = new ParceledListSlice(v32); return v21;","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",0.9168514609336853
enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,removeAllDynamicShortcuts(Ljava/lang/String;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,pushDynamicShortcut(Ljava/lang/String;Landroid/content/pm/ShortcutInfo;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
removeAllDynamicShortcuts(Ljava/lang/String;I)V,enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
removeAllDynamicShortcuts(Ljava/lang/String;I)V,pushDynamicShortcut(Ljava/lang/String;Landroid/content/pm/ShortcutInfo;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
getRateLimitResetTime(Ljava/lang/String;I)J,enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); this.mRawLastResetTime = ShortcutService.injectCurrentTimeMillis(); long v19 = (this.mRawLastResetTime + this.mResetInterval); return v19;","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",0.8236166834831238
getRateLimitResetTime(Ljava/lang/String;I)J,removeAllDynamicShortcuts(Ljava/lang/String;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); this.mRawLastResetTime = ShortcutService.injectCurrentTimeMillis(); long v19 = (this.mRawLastResetTime + this.mResetInterval); return v19;","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",0.8236166834831238
hasShareTargets(Ljava/lang/String;Ljava/lang/String;I)Z,resetThrottling()V,"boolean v5 = this.mUnlockedUsers.get(p1); boolean v6 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1); ShortcutService.wtf(""User still locked""); this.mLastLockedUser = p2; Object v11 = this.mUsers.get(p2); ShortcutUser v12 = ShortcutService.loadUserLocked(p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v21 = this.mPackages.put(p1, v19); boolean v22 = v7.hasShareTargets(); return v22;","boolean v13 = this.mUnlockedUsers.get(p1); this.mLastLockedUser = p1; Object v18 = this.mUsers.get(p1); ShortcutUser v19 = ShortcutService.loadUserLocked(p1); this.mUsers.put(p1, phiInstruction);",0.8846415877342224
hasShareTargets(Ljava/lang/String;Ljava/lang/String;I)Z,getBackupPayload(I)[B,"boolean v5 = this.mUnlockedUsers.get(p1); boolean v6 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1); ShortcutService.wtf(""User still locked""); this.mLastLockedUser = p2; Object v11 = this.mUsers.get(p2); ShortcutUser v12 = ShortcutService.loadUserLocked(p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v21 = this.mPackages.put(p1, v19); boolean v22 = v7.hasShareTargets(); return v22;","boolean v5 = p0.isUserUnlockedL(p1); this.mLastLockedUser = p1; Object v12 = this.mUsers.get(p1); ShortcutUser v27 = new ShortcutUser(ShortcutService, p1); ShortcutService.loadUserInternal(p1, v17, 0) return v111;",0.8802368640899658
disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V,removeLongLivedShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31); v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);","ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31);",0.9617867469787598
disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V,onApplicationActive(Ljava/lang/String;I)V,"ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31); v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);","ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v20 = this.mPackages.put(p1, v18); v6.resetRateLimitingForCommandLineNoSaving();",0.931159257888794
getRemainingCallCount(Ljava/lang/String;I)I,reportShortcutUsed(Ljava/lang/String;Ljava/lang/String;I)V,"ShortcutUser v27 = new ShortcutUser(ShortcutService,p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v34 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v36 = this.mPackages.put(p1, v34);","ShortcutUser v25 = new ShortcutUser(ShortcutService,p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31);",0.9932212829589844
getRemainingCallCount(Ljava/lang/String;I)I,getIconMaxDimensions(Ljava/lang/String;I)I,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12); Preconditions.checkState((v11 ^ 1), ""Ephemeral apps can't use ShortcutManager"");","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v11 = ShortcutService.getApplicationInfo(p1, p2); boolean v12 = ShortcutService.isEphemeralApp(v11);",0.946530818939209
pushDynamicShortcut(Ljava/lang/String;Landroid/content/pm/ShortcutInfo;I)V,enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
pushDynamicShortcut(Ljava/lang/String;Landroid/content/pm/ShortcutInfo;I)V,removeAllDynamicShortcuts(Ljava/lang/String;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
isRequestPinItemSupported(II)Z,startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I,"int v8 = this.mService.getParentOrSelfUserId(p1); String v9 = this.mService.getDefaultLauncher(v8); ComponentName v10 = this.mService.injectGetPinConfirmationActivity(v9, v8, p2);","int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p12, 0, 0, ""startActivityWithConfig"", 0); int v9 = v10; ActivityStarter v31 = v25.setUserId(v9);",0.7840033769607544
isRequestPinItemSupported(II)Z,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,"int v8 = this.mService.getParentOrSelfUserId(p1); String v9 = this.mService.getDefaultLauncher(v8); ComponentName v10 = this.mService.injectGetPinConfirmationActivity(v9, v8, p2);","int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, ""startActivityFromGameSession"", 0); ActivityStarter v23 = v22.setUserId(v9);",0.7509198188781738
removeDynamicShortcuts(Ljava/lang/String;Ljava/util/List;I)V,enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
removeDynamicShortcuts(Ljava/lang/String;Ljava/util/List;I)V,removeAllDynamicShortcuts(Ljava/lang/String;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
resetThrottling()V,hasShareTargets(Ljava/lang/String;Ljava/lang/String;I)Z,"boolean v13 = this.mUnlockedUsers.get(p1); this.mLastLockedUser = p1; Object v18 = this.mUsers.get(p1); ShortcutUser v19 = ShortcutService.loadUserLocked(p1); this.mUsers.put(p1, phiInstruction);","boolean v5 = this.mUnlockedUsers.get(p1); boolean v6 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1); ShortcutService.wtf(""User still locked""); this.mLastLockedUser = p2; Object v11 = this.mUsers.get(p2); ShortcutUser v12 = ShortcutService.loadUserLocked(p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v21 = this.mPackages.put(p1, v19); boolean v22 = v7.hasShareTargets(); return v22;",0.8846415877342224
resetThrottling()V,getShareTargets(Ljava/lang/String;Landroid/content/IntentFilter;I)Landroid/content/pm/ParceledListSlice;,"boolean v13 = this.mUnlockedUsers.get(p1); this.mLastLockedUser = p1; Object v18 = this.mUsers.get(p1); ShortcutUser v19 = ShortcutService.loadUserLocked(p1); this.mUsers.put(p1, phiInstruction);","this.mLastLockedUser = p3; Object v18 = this.mUsers.get(p3); ShortcutUser v33 = new ShortcutUser(ShortcutService,p3); this.mUsers.put(p3, phiInstruction);",0.8656534552574158
reportShortcutUsed(Ljava/lang/String;Ljava/lang/String;I)V,getRemainingCallCount(Ljava/lang/String;I)I,"ShortcutUser v25 = new ShortcutUser(ShortcutService,p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31);","ShortcutUser v27 = new ShortcutUser(ShortcutService,p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v34 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v36 = this.mPackages.put(p1, v34);",0.9932212829589844
reportShortcutUsed(Ljava/lang/String;Ljava/lang/String;I)V,removeAllDynamicShortcuts(Ljava/lang/String;I)V,"ShortcutUser v25 = new ShortcutUser(ShortcutService,p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31);","ShortcutUser v25 = ShortcutService.loadUserLocked(p2); this.mUsers.put(p2, phiInstruction); ShortcutPackage v31 = ShortcutUser.getPackageShortcutsIfExists(p1); Object v34 = this.mPackages.put(p1, v32);",0.931759238243103
getIconMaxDimensions(Ljava/lang/String;I)I,enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
getIconMaxDimensions(Ljava/lang/String;I)I,removeAllDynamicShortcuts(Ljava/lang/String;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12);",1.0000001192092896
getMaxShortcutCountPerActivity(Ljava/lang/String;I)I,reportShortcutUsed(Ljava/lang/String;Ljava/lang/String;I)V,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); return this.mMaxShortcuts;","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12); this.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);",0.880375325679779
getMaxShortcutCountPerActivity(Ljava/lang/String;I)I,getShortcuts(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;,"int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); return this.mMaxShortcuts;","int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2); ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2); boolean v13 = ShortcutService.isEphemeralApp(v12); ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2); ShortcutPackage v26 = v25.getPackageShortcuts(p1); v27.onCalledByPublisher(p1); ArrayList v22 = new ArrayList(); ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0); ParceledListSlice v31 = new ParceledListSlice(v32); return v21;",0.871412992477417
removeLongLivedShortcuts(Ljava/lang/String;Ljava/util/List;I)V,disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V,"ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31);","ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31); v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);",0.9617867469787598
removeLongLivedShortcuts(Ljava/lang/String;Ljava/util/List;I)V,onApplicationActive(Ljava/lang/String;I)V,"ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v33 = this.mPackages.put(p1, v31);","ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1); Object v20 = this.mPackages.put(p1, v18); v6.resetRateLimitingForCommandLineNoSaving();",0.9426370859146118
onReceive(Landroid/content/Context;Landroid/content/Intent;)V,onReceive(Landroid/content/Context;Landroid/content/Intent;)V,"ConfigUpdateInstallReceiver$1 v1 = new ConfigUpdateInstallReceiver$1(p0,p2,p1); v1.start();","ConfigUpdateInstallReceiver$1 v1 = new ConfigUpdateInstallReceiver$1(p0,p2,p1); v1.start();",1.0
onReceive(Landroid/content/Context;Landroid/content/Intent;)V,deviceSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,"ConfigUpdateInstallReceiver$1 v1 = new ConfigUpdateInstallReceiver$1(p0,p2,p1); v1.start();","HdmiControlService$BinderService$1 v5 = new HdmiControlService$BinderService$1(p0,p2,p1); this.this$0.runOnServiceThread(v5);",0.600684404373169
getCecSettingStringValue(Ljava/lang/String;)Ljava/lang/String;,getCecSettingIntValue(Ljava/lang/String;)I,"HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v39 = this.mStorageAdapter.retrieveGlobalSetting(v30, v27); return v7;","HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v13 = v12.getStringValue(); String v11 = phiInstruction; boolean v14 = v11.equals(""int""); int v31 = HdmiCecConfig.getStorage(v8); String v32 = HdmiCecConfig.getStorageKey(v8); String v41 = this.mStorageAdapter.retrieveGlobalSetting(v32, v29); String v30 = v41; int v42 = Integer.parseInt(v30); int v7 = v42; return v7;",0.8963440656661987
getCecSettingStringValue(Ljava/lang/String;)Ljava/lang/String;,getCecSettingIntValue(Ljava/lang/String;)I,"HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v39 = this.mStorageAdapter.retrieveSharedPref(v30, v27); return v7;","HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v13 = v12.getStringValue(); String v11 = phiInstruction; boolean v14 = v11.equals(""int""); int v31 = HdmiCecConfig.getStorage(v8); String v32 = HdmiCecConfig.getStorageKey(v8); String v41 = this.mStorageAdapter.retrieveSharedPref(v32, v29); String v30 = v41; int v42 = Integer.parseInt(v30); int v7 = v42; return v7;",0.8813968896865845
getPhysicalAddress()I,startStylusHandwriting(Lcom/android/internal/view/IInputMethodClient;)V,int v10 = this.mNativeWrapperImpl.nativeGetPhysicalAddress(); int v8 = v10; int v7 = v8; return v7;,int v8 = Binder.getCallingUid(); Integer v19 = Integer.valueOf(v8);,0.6941648721694946
getPhysicalAddress()I,getPersistentDataPackageName()Ljava/lang/String;,int v10 = this.mNativeWrapperImpl.nativeGetPhysicalAddress(); int v8 = v10; int v7 = v8; return v7;,String v8 = v7.getString(17040017); return v8;,0.6879835724830627
removeCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,addCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.unregister(p3); int v11 = v10.getRegisteredCallbackCount();,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.register(p3);,0.9317538738250732
removeCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,addCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.unregister(p3); int v11 = v10.getRegisteredCallbackCount(); Object v12 = this.mHdmiCecSettingChangeListenerRecords.remove(p2);,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.register(p3);,0.9300751686096191
removeHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,removeRootTasksInWindowingModes([I)V,,,1.0000001192092896
removeHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,setVrThread(I)V,,,1.0000001192092896
getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,canChangeSystemAudioMode()Z,"HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4); HdmiCecLocalDevicePlayback v6 = v7; boolean v10 = v8.isActiveSource(); int v18 = v16.getActivePath(); HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18); HdmiDeviceInfo$Builder v29 = v28.setPortId(v24); HdmiDeviceInfo$Builder v30 = v29.setVendorId(0); StringBuilder v31 = new StringBuilder(); StringBuilder v33 = v31.append(""HDMI""); StringBuilder v34 = v33.append(v24); String v35 = v34.toString(); HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35); HdmiDeviceInfo v37 = v36.build();",HdmiCecNetwork v10 = HdmiCecLocalDevice.mService.getHdmiCecNetwork(); HdmiDeviceInfo v11 = v10.getSafeCecDeviceInfo(5); boolean v8 = phiInstruction; return v8;,0.7839633226394653
getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,shouldHandleTvPowerKey()Z,"HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4); HdmiCecLocalDevicePlayback v6 = v7; boolean v10 = v8.isActiveSource(); int v18 = v16.getActivePath(); HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18); HdmiDeviceInfo$Builder v29 = v28.setPortId(v24); HdmiDeviceInfo$Builder v30 = v29.setVendorId(0); StringBuilder v31 = new StringBuilder(); StringBuilder v33 = v31.append(""HDMI""); StringBuilder v34 = v33.append(v24); String v35 = v34.toString(); HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35); HdmiDeviceInfo v37 = v36.build();","HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid(); Integer v7 = Integer.valueOf(0); boolean v8 = this.mLocalDevices.contains(v7); HdmiCecConfig$Setting v11 = HdmiCecConfig.getSetting(""power_control_mode""); String v12 = v11.getValueType(); StringBuilder v14 = new StringBuilder(); StringBuilder v16 = v14.append(""Getting CEC setting value '""); StringBuilder v17 = v14.append(""power_control_mode""); StringBuilder v18 = v14.append(""'.""); String v19 = v14.toString(); HdmiCecConfig$Value v22 = v11.getDefaultValue(); String v23 = v22.getStringValue(); String v24 = HdmiCecConfig.retrieveValue(v11, v23); boolean v25 = v10.equals(""none""); HdmiCecConfig$Setting v28 = HdmiCecConfig.getSetting(""hdmi_cec_enabled""); Integer v40 = v39.getIntValue(); int v41 = v40.intValue(); String v42 = Integer.toString(v41); String v43 = HdmiCecConfig.retrieveValue(v28, v42); boolean v5 = this.mIsCecAvailable; return v5;",0.7810965180397034
getSystemAudioMode()Z,getPortInfo()Ljava/util/List;,boolean v14 = this.mSystemAudioActivated; boolean v11 = v14; boolean v16 = this.mSystemAudioActivated; boolean v15 = v16; return phiInstruction;,List v6 = this.mPortInfo; List v5 = v6; List v8 = this.mPortInfo; List v7 = v8; return phiInstruction;,0.7906447649002075
getSystemAudioMode()Z,getClientPid(Ljava/lang/String;)I,boolean v14 = this.mSystemAudioActivated; boolean v11 = v14; boolean v16 = this.mSystemAudioActivated; boolean v15 = v16; return phiInstruction;,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,0.7809222936630249
getSupportedTypes()[I,getDeviceList()Ljava/util/List;,List v5 = HdmiControlService.-$$Nest$fgetmLocalDevices(this.this$0); [I v7 = new [I(v6); return v7;,HdmiCecNetwork v5 = HdmiControlService.-$$Nest$fgetmHdmiCecNetwork(this.this$0); List v6 = v5.getSafeCecDevicesLocked(); return v6;,0.7485915422439575
getSupportedTypes()[I,getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,List v5 = HdmiControlService.-$$Nest$fgetmLocalDevices(this.this$0); [I v7 = new [I(v6); return v7;,"HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4); HdmiCecLocalDevicePlayback v6 = v7; boolean v10 = v8.isActiveSource(); int v18 = v16.getActivePath(); HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18); HdmiDeviceInfo$Builder v29 = v28.setPortId(v24); HdmiDeviceInfo$Builder v30 = v29.setVendorId(0); StringBuilder v31 = new StringBuilder(); StringBuilder v33 = v31.append(""HDMI""); StringBuilder v34 = v33.append(v24); String v35 = v34.toString(); HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35); HdmiDeviceInfo v37 = v36.build();",0.7279078960418701
removeHdmiCecVolumeControlFeatureListener(Landroid/hardware/hdmi/IHdmiCecVolumeControlFeatureListener;)V,setInputChangeListener(Landroid/hardware/hdmi/IHdmiInputChangeListener;)V,this.this$0.removeHdmiControlVolumeControlStatusChangeListener(p1);,"HdmiControlService$InputChangeListenerRecord v7 = new HdmiControlService$InputChangeListenerRecord(HdmiControlService,p2); this.mInputChangeListenerRecord = v7;",0.708096981048584
removeHdmiCecVolumeControlFeatureListener(Landroid/hardware/hdmi/IHdmiCecVolumeControlFeatureListener;)V,addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V,this.this$0.removeHdmiControlVolumeControlStatusChangeListener(p1);,"HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mDeviceEventListenerRecords.add(v7);",0.6961184740066528
getMessageHistorySize()I,setMessageHistorySize(I)Z,HdmiCecController v5 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); HdmiCecController v6 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); int v7 = v6.getMessageHistorySize(); return v7;,HdmiCecController v5 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); HdmiCecController v6 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); boolean v7 = v6.setMessageHistorySize(p1); return v7;,0.9582714438438416
getMessageHistorySize()I,addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,HdmiCecController v5 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); HdmiCecController v6 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); int v7 = v6.getMessageHistorySize(); return v7;,"HdmiControlService$HdmiControlStatusChangeListenerRecord v6 = new HdmiControlService$HdmiControlStatusChangeListenerRecord(HdmiControlService, p1); HdmiControlService$9 v11 = new HdmiControlService$9(HdmiControlService, v6, p1); WorkSourceUidPreservingRunnable v14 = new WorkSourceUidPreservingRunnable(v11);",0.6750487089157104
setSystemAudioMute(Z)V,oneTouchPlay(Landroid/hardware/hdmi/IHdmiControlCallback;)V,"HdmiControlService$BinderService$13 v5 = new HdmiControlService$BinderService$13(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$5 v13 = new HdmiControlService$BinderService$5(p0,p1); this.this$0.runOnServiceThread(v13);",0.9899963736534119
setSystemAudioMute(Z)V,startOneTouchRecord(I[B)V,"HdmiControlService$BinderService$13 v5 = new HdmiControlService$BinderService$13(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$17 v5 = new HdmiControlService$BinderService$17(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9893936514854431
removeSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,removeHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,"Iterator v7 = this.mSystemAudioModeChangeListenerRecords.iterator(); Object v9 = v7.next(); IHdmiSystemAudioModeChangeListener v10 = HdmiControlService$SystemAudioModeChangeListenerRecord.-$$Nest$fgetmListener(v9); IBinder v11 = v10.asBinder(); boolean v13 = v12.unlinkToDeath(v9, 0); boolean v14 = this.mSystemAudioModeChangeListenerRecords.remove(v9);",Iterator v7 = this.mHdmiControlStatusChangeListenerRecords.iterator(); Object v9 = v7.next(); IHdmiControlStatusChangeListener v10 = HdmiControlService$HdmiControlStatusChangeListenerRecord.-$$Nest$fgetmListener(v9); boolean v15 = this.mHdmiControlStatusChangeListenerRecords.remove(v9);,0.8855867385864258
removeSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,addSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,"Iterator v7 = this.mSystemAudioModeChangeListenerRecords.iterator(); Object v9 = v7.next(); IHdmiSystemAudioModeChangeListener v10 = HdmiControlService$SystemAudioModeChangeListenerRecord.-$$Nest$fgetmListener(v9); IBinder v11 = v10.asBinder(); boolean v13 = v12.unlinkToDeath(v9, 0); boolean v14 = this.mSystemAudioModeChangeListenerRecords.remove(v9);","HdmiControlService$SystemAudioModeChangeListenerRecord v7 = new HdmiControlService$SystemAudioModeChangeListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mSystemAudioModeChangeListenerRecords.add(v7);",0.8626145124435425
getAllowedCecSettingStringValues(Ljava/lang/String;)Ljava/util/List;,getUserCecSettings()Ljava/util/List;,HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); ArrayList v15 = new ArrayList(); List v17 = this.mAllowedValues; return v7;,HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); List v7 = v6.getUserSettings(); return v7;,0.8301266431808472
getAllowedCecSettingStringValues(Ljava/lang/String;)Ljava/util/List;,setCecSettingStringValue(Ljava/lang/String;Ljava/lang/String;)V,HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); ArrayList v15 = new ArrayList(); List v17 = this.mAllowedValues; return v7;,"HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); HdmiCecConfig$Setting v8 = phiInstruction; HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue(); String v14 = v13.getStringValue(); this.mStorageAdapter.storeGlobalSetting(v41, p2);",0.8148036003112793
powerOffRemoteDevice(II)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$9 v5 = new HdmiControlService$BinderService$9(p0,p1,p2); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9955384135246277
powerOffRemoteDevice(II)V,setSystemAudioMode(ZLandroid/hardware/hdmi/IHdmiControlCallback;)V,"HdmiControlService$BinderService$9 v5 = new HdmiControlService$BinderService$9(p0,p1,p2); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$8 v5 = new HdmiControlService$BinderService$8(p0,p2,p1); this.this$0.runOnServiceThread(v5);",0.9933114051818848
setProhibitMode(Z)V,suppressAmbientDisplay(Z)V,this.this$0.setProhibitMode(p1);,this.mBar.suppressAmbientDisplay(p1);,0.6045954823493958
setProhibitMode(Z)V,setTaskResizeable(II)V,this.this$0.setProhibitMode(p1);,this.mResizeMode = p2;,0.5808842182159424
oneTouchPlay(Landroid/hardware/hdmi/IHdmiControlCallback;)V,powerOffRemoteDevice(II)V,"HdmiControlService$BinderService$5 v13 = new HdmiControlService$BinderService$5(p0,p1); this.this$0.runOnServiceThread(v13);","HdmiControlService$BinderService$9 v5 = new HdmiControlService$BinderService$9(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.990429699420929
oneTouchPlay(Landroid/hardware/hdmi/IHdmiControlCallback;)V,setSystemAudioMute(Z)V,"HdmiControlService$BinderService$5 v13 = new HdmiControlService$BinderService$5(p0,p1); this.this$0.runOnServiceThread(v13);","HdmiControlService$BinderService$13 v5 = new HdmiControlService$BinderService$13(p0,p1); this.this$0.runOnServiceThread(v5);",0.9899963736534119
startTimerRecording(II[B)V,clearTimerRecording(II[B)V,"HdmiControlService$BinderService$19 v5 = new HdmiControlService$BinderService$19(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$20 v5 = new HdmiControlService$BinderService$20(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9918963313102722
startTimerRecording(II[B)V,setSystemAudioVolume(III)V,"HdmiControlService$BinderService$19 v5 = new HdmiControlService$BinderService$19(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.991866409778595
powerOnRemoteDevice(II)V,deviceSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,"HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$1 v5 = new HdmiControlService$BinderService$1(p0,p2,p1); this.this$0.runOnServiceThread(v5);",0.9957216382026672
powerOnRemoteDevice(II)V,powerOffRemoteDevice(II)V,"HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$9 v5 = new HdmiControlService$BinderService$9(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9955384135246277
portSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,deviceSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,"HdmiControlService$BinderService$2 v5 = new HdmiControlService$BinderService$2(p0, p2, p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$1 v5 = new HdmiControlService$BinderService$1(p0,p2,p1); this.this$0.runOnServiceThread(v5);",0.994612455368042
portSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$2 v5 = new HdmiControlService$BinderService$2(p0, p2, p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9921281933784485
shouldHandleTvPowerKey()Z,getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,"HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid(); Integer v7 = Integer.valueOf(0); boolean v8 = this.mLocalDevices.contains(v7); HdmiCecConfig$Setting v11 = HdmiCecConfig.getSetting(""power_control_mode""); String v12 = v11.getValueType(); StringBuilder v14 = new StringBuilder(); StringBuilder v16 = v14.append(""Getting CEC setting value '""); StringBuilder v17 = v14.append(""power_control_mode""); StringBuilder v18 = v14.append(""'.""); String v19 = v14.toString(); HdmiCecConfig$Value v22 = v11.getDefaultValue(); String v23 = v22.getStringValue(); String v24 = HdmiCecConfig.retrieveValue(v11, v23); boolean v25 = v10.equals(""none""); HdmiCecConfig$Setting v28 = HdmiCecConfig.getSetting(""hdmi_cec_enabled""); Integer v40 = v39.getIntValue(); int v41 = v40.intValue(); String v42 = Integer.toString(v41); String v43 = HdmiCecConfig.retrieveValue(v28, v42); boolean v5 = this.mIsCecAvailable; return v5;","HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4); HdmiCecLocalDevicePlayback v6 = v7; boolean v10 = v8.isActiveSource(); int v18 = v16.getActivePath(); HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18); HdmiDeviceInfo$Builder v29 = v28.setPortId(v24); HdmiDeviceInfo$Builder v30 = v29.setVendorId(0); StringBuilder v31 = new StringBuilder(); StringBuilder v33 = v31.append(""HDMI""); StringBuilder v34 = v33.append(v24); String v35 = v34.toString(); HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35); HdmiDeviceInfo v37 = v36.build();",0.7810965180397034
shouldHandleTvPowerKey()Z,getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,"HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid(); Integer v7 = Integer.valueOf(0); boolean v8 = this.mLocalDevices.contains(v7); HdmiCecConfig$Setting v11 = HdmiCecConfig.getSetting(""power_control_mode""); String v12 = v11.getValueType(); StringBuilder v14 = new StringBuilder(); StringBuilder v16 = v14.append(""Getting CEC setting value '""); StringBuilder v17 = v14.append(""power_control_mode""); StringBuilder v18 = v14.append(""'.""); String v19 = v14.toString(); HdmiCecConfig$Value v22 = v11.getDefaultValue(); String v23 = v22.getStringValue(); String v24 = HdmiCecConfig.retrieveValue(v11, v23); boolean v25 = v10.equals(""none""); HdmiCecConfig$Setting v28 = HdmiCecConfig.getSetting(""hdmi_cec_enabled""); Integer v40 = v39.getIntValue(); int v41 = v40.intValue(); String v42 = Integer.toString(v41); String v43 = HdmiCecConfig.retrieveValue(v28, v42); boolean v5 = this.mIsCecAvailable; return v5;","int v18 = this.mHdmiCecNetwork.physicalAddressToPortId(HdmiCecLocalDevice$ActiveSource.physicalAddress); HdmiDeviceInfo$Builder v20 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v22 = v20.setPhysicalAddress(HdmiCecLocalDevice$ActiveSource.physicalAddress); HdmiDeviceInfo$Builder v23 = v22.setPortId(v17); HdmiDeviceInfo$Builder v24 = v23.setVendorId(0); StringBuilder v25 = new StringBuilder(); StringBuilder v27 = v25.append(""HDMI""); StringBuilder v28 = v27.append(v17); String v29 = v28.toString(); HdmiDeviceInfo$Builder v30 = v24.setDisplayName(v29); HdmiDeviceInfo v31 = v30.build();",0.7300882935523987
sendStandby(II)V,setSystemAudioMode(ZLandroid/hardware/hdmi/IHdmiControlCallback;)V,"HdmiControlService$BinderService$16 v5 = new HdmiControlService$BinderService$16(p0,p2,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$8 v5 = new HdmiControlService$BinderService$8(p0,p2,p1); this.this$0.runOnServiceThread(v5);",0.9932556748390198
sendStandby(II)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$16 v5 = new HdmiControlService$BinderService$16(p0,p2,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9883803129196167
setCecSettingStringValue(Ljava/lang/String;Ljava/lang/String;)V,setCecSettingIntValue(Ljava/lang/String;I)V,"HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); HdmiCecConfig$Setting v8 = phiInstruction; HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue(); String v14 = v13.getStringValue(); this.mStorageAdapter.storeGlobalSetting(v41, p2);","HdmiCecConfig$Setting v17 = HdmiCecConfig.getSetting(p1); String v18 = v17.getValueType(); boolean v19 = v18.equals(""int""); ArrayList v20 = new ArrayList(); List v22 = v17.getAllowedValues(); Integer v25 = Integer.valueOf(p2); this.mStorageAdapter.storeGlobalSetting(v43, v40);",0.883869469165802
setCecSettingStringValue(Ljava/lang/String;Ljava/lang/String;)V,getCecSettingIntValue(Ljava/lang/String;)I,"HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); HdmiCecConfig$Setting v8 = phiInstruction; HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue(); String v14 = v13.getStringValue(); this.mStorageAdapter.storeGlobalSetting(v41, p2);","HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v13 = v12.getStringValue(); String v11 = phiInstruction; boolean v14 = v11.equals(""int""); int v31 = HdmiCecConfig.getStorage(v8); String v32 = HdmiCecConfig.getStorageKey(v8); String v41 = this.mStorageAdapter.retrieveGlobalSetting(v32, v29); String v30 = v41; int v42 = Integer.parseInt(v30); int v7 = v42; return v7;",0.8633520603179932
setSystemAudioModeOnForAudioOnlySource()V,toggleAndFollowTvPower()V,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,1.0000001192092896
setSystemAudioModeOnForAudioOnlySource()V,queryDisplayStatus(Landroid/hardware/hdmi/IHdmiControlCallback;)V,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,1.0000001192092896
sendVendorCommand(II[BZ)V,clearTimerRecording(II[B)V,"HdmiControlService$BinderService$15 v5 = new HdmiControlService$BinderService$15(p0,p1,p4,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$20 v5 = new HdmiControlService$BinderService$20(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9937217831611633
sendVendorCommand(II[BZ)V,setSystemAudioVolume(III)V,"HdmiControlService$BinderService$15 v5 = new HdmiControlService$BinderService$15(p0,p1,p4,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9933525323867798
getAllowedCecSettingIntValues(Ljava/lang/String;)[I,getAllowedCecSettingStringValues(Ljava/lang/String;)Ljava/util/List;,boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); ArrayList v15 = new ArrayList(); Stream v20 = v7.stream(); IntStream v23 = v20.mapToInt(v21); [I v24 = v23.toArray(); return v24;,HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); ArrayList v15 = new ArrayList(); List v17 = this.mAllowedValues; return v7;,0.6780542135238647
getAllowedCecSettingIntValues(Ljava/lang/String;)[I,setCecSettingStringValue(Ljava/lang/String;Ljava/lang/String;)V,boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); ArrayList v15 = new ArrayList(); Stream v20 = v7.stream(); IntStream v23 = v20.mapToInt(v21); [I v24 = v23.toArray(); return v24;,"HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); HdmiCecConfig$Setting v8 = phiInstruction; HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue(); String v14 = v13.getStringValue(); this.mStorageAdapter.storeGlobalSetting(v41, p2);",0.6452304720878601
toggleAndFollowTvPower()V,setSystemAudioModeOnForAudioOnlySource()V,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,1.0000001192092896
toggleAndFollowTvPower()V,queryDisplayStatus(Landroid/hardware/hdmi/IHdmiControlCallback;)V,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,1.0000001192092896
addHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V,"IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0);","IBinder v8 = p1.asBinder(); v8.linkToDeath(LockoutResetDispatcher, 0);",0.855305552482605
addHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V,"HdmiControlService$HotplugEventListenerRecord v7 = new HdmiControlService$HotplugEventListenerRecord(HdmiControlService,p2); boolean v11 = this.mHotplugEventListenerRecords.add(v7); HdmiControlService$11 v12 = new HdmiControlService$11(HdmiControlService,v7,p2); HdmiControlService.runOnServiceThread(v12);","HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mDeviceEventListenerRecords.add(v7);",0.8495174050331116
setSystemAudioVolume(III)V,clearTimerRecording(II[B)V,"HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$20 v5 = new HdmiControlService$BinderService$20(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9948232769966125
setSystemAudioVolume(III)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.994709312915802
clearTimerRecording(II[B)V,setSystemAudioVolume(III)V,"HdmiControlService$BinderService$20 v5 = new HdmiControlService$BinderService$20(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9948232769966125
clearTimerRecording(II[B)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$20 v5 = new HdmiControlService$BinderService$20(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9943892359733582
removeHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,removeSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,Iterator v7 = this.mHdmiControlStatusChangeListenerRecords.iterator(); Object v9 = v7.next(); IHdmiControlStatusChangeListener v10 = HdmiControlService$HdmiControlStatusChangeListenerRecord.-$$Nest$fgetmListener(v9); boolean v15 = this.mHdmiControlStatusChangeListenerRecords.remove(v9);,"Iterator v7 = this.mSystemAudioModeChangeListenerRecords.iterator(); Object v9 = v7.next(); IHdmiSystemAudioModeChangeListener v10 = HdmiControlService$SystemAudioModeChangeListenerRecord.-$$Nest$fgetmListener(v9); IBinder v11 = v10.asBinder(); boolean v13 = v12.unlinkToDeath(v9, 0); boolean v14 = this.mSystemAudioModeChangeListenerRecords.remove(v9);",0.8855867385864258
removeHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,Iterator v7 = this.mHdmiControlStatusChangeListenerRecords.iterator(); Object v9 = v7.next(); IHdmiControlStatusChangeListener v10 = HdmiControlService$HdmiControlStatusChangeListenerRecord.-$$Nest$fgetmListener(v9); boolean v15 = this.mHdmiControlStatusChangeListenerRecords.remove(v9);,boolean v10 = this.mHdmiControlStatusChangeListenerRecords.add(v6); boolean v16 = this.mHandler.post(v14);,0.7922337651252747
deviceSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$1 v5 = new HdmiControlService$BinderService$1(p0,p2,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9957216382026672
deviceSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,portSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,"HdmiControlService$BinderService$1 v5 = new HdmiControlService$BinderService$1(p0,p2,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$2 v5 = new HdmiControlService$BinderService$2(p0, p2, p1); this.this$0.runOnServiceThread(v5);",0.994612455368042
addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V,setHdmiRecordListener(Landroid/hardware/hdmi/IHdmiRecordListener;)V,"HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mDeviceEventListenerRecords.add(v7);","HdmiControlService$HdmiRecordListenerRecord v7 = new HdmiControlService$HdmiRecordListenerRecord(HdmiControlService,p2); this.mRecordListenerRecord = v7; IBinder v9 = p2.asBinder(); v9.linkToDeath(this.mRecordListenerRecord, 0);",0.868493914604187
addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V,addHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,"HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mDeviceEventListenerRecords.add(v7);","HdmiControlService$HotplugEventListenerRecord v7 = new HdmiControlService$HotplugEventListenerRecord(HdmiControlService,p2); boolean v11 = this.mHotplugEventListenerRecords.add(v7); HdmiControlService$11 v12 = new HdmiControlService$11(HdmiControlService,v7,p2); HdmiControlService.runOnServiceThread(v12);",0.8495174050331116
setHdmiRecordListener(Landroid/hardware/hdmi/IHdmiRecordListener;)V,addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V,"HdmiControlService$HdmiRecordListenerRecord v7 = new HdmiControlService$HdmiRecordListenerRecord(HdmiControlService,p2); this.mRecordListenerRecord = v7; IBinder v9 = p2.asBinder(); v9.linkToDeath(this.mRecordListenerRecord, 0);","HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mDeviceEventListenerRecords.add(v7);",0.868493914604187
setHdmiRecordListener(Landroid/hardware/hdmi/IHdmiRecordListener;)V,addSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,"HdmiControlService$HdmiRecordListenerRecord v7 = new HdmiControlService$HdmiRecordListenerRecord(HdmiControlService,p2); this.mRecordListenerRecord = v7; IBinder v9 = p2.asBinder(); v9.linkToDeath(this.mRecordListenerRecord, 0);","HdmiControlService$SystemAudioModeChangeListenerRecord v7 = new HdmiControlService$SystemAudioModeChangeListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0);",0.8628866076469421
askRemoteDeviceToBecomeActiveSource(I)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$11 v5 = new HdmiControlService$BinderService$11(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9936370253562927
askRemoteDeviceToBecomeActiveSource(I)V,powerOffRemoteDevice(II)V,"HdmiControlService$BinderService$11 v5 = new HdmiControlService$BinderService$11(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$9 v5 = new HdmiControlService$BinderService$9(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9930645227432251
reportAudioStatus(IIIZ)V,startOneTouchRecord(I[B)V,"HdmiControlService$BinderService$23 v5 = new HdmiControlService$BinderService$23(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$17 v5 = new HdmiControlService$BinderService$17(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.990506649017334
reportAudioStatus(IIIZ)V,setStandbyMode(Z)V,"HdmiControlService$BinderService$23 v5 = new HdmiControlService$BinderService$23(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$22 v5 = new HdmiControlService$BinderService$22(p0,p1); this.this$0.runOnServiceThread(v5);",0.9891722202301025
setMessageHistorySize(I)Z,getMessageHistorySize()I,HdmiCecController v5 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); HdmiCecController v6 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); boolean v7 = v6.setMessageHistorySize(p1); return v7;,HdmiCecController v5 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); HdmiCecController v6 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); int v7 = v6.getMessageHistorySize(); return v7;,0.9582714438438416
setMessageHistorySize(I)Z,addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,HdmiCecController v5 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); HdmiCecController v6 = HdmiControlService.-$$Nest$fgetmCecController(this.this$0); boolean v7 = v6.setMessageHistorySize(p1); return v7;,"HdmiControlService$HdmiControlStatusChangeListenerRecord v6 = new HdmiControlService$HdmiControlStatusChangeListenerRecord(HdmiControlService, p1); HdmiControlService$9 v11 = new HdmiControlService$9(HdmiControlService, v6, p1); WorkSourceUidPreservingRunnable v14 = new WorkSourceUidPreservingRunnable(v11);",0.7292001247406006
addVendorCommandListener(Landroid/hardware/hdmi/IHdmiVendorCommandListener;I)V,addHdmiMhlVendorCommandListener(Landroid/hardware/hdmi/IHdmiMhlVendorCommandListener;)V,"this.this$0.addVendorCommandListener(p1, p2);","HdmiControlService$HdmiMhlVendorCommandListenerRecord v7 = new HdmiControlService$HdmiMhlVendorCommandListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mMhlVendorCommandListenerRecords.add(v7);",0.7045681476593018
addVendorCommandListener(Landroid/hardware/hdmi/IHdmiVendorCommandListener;I)V,registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,"this.this$0.addVendorCommandListener(p1, p2);",boolean v7 = this.mListeners.register(p1); return v6;,0.6159681081771851
canChangeSystemAudioMode()Z,getDeviceList()Ljava/util/List;,HdmiCecNetwork v10 = HdmiCecLocalDevice.mService.getHdmiCecNetwork(); HdmiDeviceInfo v11 = v10.getSafeCecDeviceInfo(5); boolean v8 = phiInstruction; return v8;,HdmiCecNetwork v5 = HdmiControlService.-$$Nest$fgetmHdmiCecNetwork(this.this$0); List v6 = v5.getSafeCecDevicesLocked(); return v6;,0.8085914850234985
canChangeSystemAudioMode()Z,getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,HdmiCecNetwork v10 = HdmiCecLocalDevice.mService.getHdmiCecNetwork(); HdmiDeviceInfo v11 = v10.getSafeCecDeviceInfo(5); boolean v8 = phiInstruction; return v8;,"HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4); HdmiCecLocalDevicePlayback v6 = v7; boolean v10 = v8.isActiveSource(); int v18 = v16.getActivePath(); HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18); HdmiDeviceInfo$Builder v29 = v28.setPortId(v24); HdmiDeviceInfo$Builder v30 = v29.setVendorId(0); StringBuilder v31 = new StringBuilder(); StringBuilder v33 = v31.append(""HDMI""); StringBuilder v34 = v33.append(v24); String v35 = v34.toString(); HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35); HdmiDeviceInfo v37 = v36.build();",0.7839633226394653
sendVolumeKeyEvent(IIZ)V,sendKeyEvent(IIZ)V,"HdmiControlService$BinderService$4 v5 = new HdmiControlService$BinderService$4(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$3 v5 = new HdmiControlService$BinderService$3(p0,p2,p3,p1); this.this$0.runOnServiceThread(v5);",0.9913397431373596
sendVolumeKeyEvent(IIZ)V,setSystemAudioVolume(III)V,"HdmiControlService$BinderService$4 v5 = new HdmiControlService$BinderService$4(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9883415102958679
setCecSettingIntValue(Ljava/lang/String;I)V,setCecSettingStringValue(Ljava/lang/String;Ljava/lang/String;)V,"HdmiCecConfig$Setting v17 = HdmiCecConfig.getSetting(p1); String v18 = v17.getValueType(); boolean v19 = v18.equals(""int""); ArrayList v20 = new ArrayList(); List v22 = v17.getAllowedValues(); Integer v25 = Integer.valueOf(p2); this.mStorageAdapter.storeGlobalSetting(v43, v40);","HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); HdmiCecConfig$Setting v8 = phiInstruction; HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue(); String v14 = v13.getStringValue(); this.mStorageAdapter.storeGlobalSetting(v41, p2);",0.883869469165802
setCecSettingIntValue(Ljava/lang/String;I)V,getCecSettingStringValue(Ljava/lang/String;)Ljava/lang/String;,"HdmiCecConfig$Setting v17 = HdmiCecConfig.getSetting(p1); String v18 = v17.getValueType(); boolean v19 = v18.equals(""int""); ArrayList v20 = new ArrayList(); List v22 = v17.getAllowedValues(); Integer v25 = Integer.valueOf(p2); this.mStorageAdapter.storeGlobalSetting(v43, v40);","HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v39 = this.mStorageAdapter.retrieveGlobalSetting(v30, v27); return v7;",0.8788451552391052
addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,setInputChangeListener(Landroid/hardware/hdmi/IHdmiInputChangeListener;)V,"HdmiControlService$HdmiControlStatusChangeListenerRecord v6 = new HdmiControlService$HdmiControlStatusChangeListenerRecord(HdmiControlService, p1); HdmiControlService$9 v11 = new HdmiControlService$9(HdmiControlService, v6, p1); WorkSourceUidPreservingRunnable v14 = new WorkSourceUidPreservingRunnable(v11);","HdmiControlService$InputChangeListenerRecord v7 = new HdmiControlService$InputChangeListenerRecord(HdmiControlService,p2); this.mInputChangeListenerRecord = v7;",0.8322992324829102
addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,addHdmiCecVolumeControlFeatureListener(Landroid/hardware/hdmi/IHdmiCecVolumeControlFeatureListener;)V,boolean v10 = this.mHdmiControlStatusChangeListenerRecords.add(v6); boolean v16 = this.mHandler.post(v14);,"boolean v6 = this.mHdmiCecVolumeControlFeatureListenerRecords.register(p1); HdmiControlService$10 v7 = new HdmiControlService$10(HdmiControlService,p1); WorkSourceUidPreservingRunnable v10 = new WorkSourceUidPreservingRunnable(v7); boolean v12 = this.mHandler.post(v10);",0.8193323612213135
setArcMode(Z)V,setSystemAudioModeOnForAudioOnlySource()V,HdmiControlService$BinderService$14 v5 = new HdmiControlService$BinderService$14(p0); this.this$0.runOnServiceThread(v5);,HdmiControlService$BinderService$24 v5 = new HdmiControlService$BinderService$24(p0); this.this$0.runOnServiceThread(v5);,0.9857192039489746
setArcMode(Z)V,powerOffRemoteDevice(II)V,HdmiControlService$BinderService$14 v5 = new HdmiControlService$BinderService$14(p0); this.this$0.runOnServiceThread(v5);,"HdmiControlService$BinderService$9 v5 = new HdmiControlService$BinderService$9(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.98524010181427
addCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,removeCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.register(p3);,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.unregister(p3); int v11 = v10.getRegisteredCallbackCount();,0.9317538738250732
addCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,removeCecSettingChangeListener(Ljava/lang/String;Landroid/hardware/hdmi/IHdmiCecSettingChangeListener;)V,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.register(p3);,Object v8 = this.mHdmiCecSettingChangeListenerRecords.get(p2); boolean v9 = v8.unregister(p3); int v11 = v10.getRegisteredCallbackCount(); Object v12 = this.mHdmiCecSettingChangeListenerRecords.remove(p2);,0.9300751686096191
setStandbyMode(Z)V,setSystemAudioVolume(III)V,"HdmiControlService$BinderService$22 v5 = new HdmiControlService$BinderService$22(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9904412627220154
setStandbyMode(Z)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$22 v5 = new HdmiControlService$BinderService$22(p0,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.990365743637085
addHdmiMhlVendorCommandListener(Landroid/hardware/hdmi/IHdmiMhlVendorCommandListener;)V,setHdmiRecordListener(Landroid/hardware/hdmi/IHdmiRecordListener;)V,"HdmiControlService$HdmiMhlVendorCommandListenerRecord v7 = new HdmiControlService$HdmiMhlVendorCommandListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mMhlVendorCommandListenerRecords.add(v7);","HdmiControlService$HdmiRecordListenerRecord v7 = new HdmiControlService$HdmiRecordListenerRecord(HdmiControlService,p2); this.mRecordListenerRecord = v7; IBinder v9 = p2.asBinder(); v9.linkToDeath(this.mRecordListenerRecord, 0);",0.8255738019943237
addHdmiMhlVendorCommandListener(Landroid/hardware/hdmi/IHdmiMhlVendorCommandListener;)V,addSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,"HdmiControlService$HdmiMhlVendorCommandListenerRecord v7 = new HdmiControlService$HdmiMhlVendorCommandListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mMhlVendorCommandListenerRecords.add(v7);","HdmiControlService$SystemAudioModeChangeListenerRecord v7 = new HdmiControlService$SystemAudioModeChangeListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mSystemAudioModeChangeListenerRecords.add(v7);",0.8249390721321106
stopOneTouchRecord(I)V,toggleAndFollowTvPower()V,"HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid(); HdmiControlService$BinderService$18 v5 = new HdmiControlService$BinderService$18(p0,p1); this.this$0.runOnServiceThread(v5);",int v5 = Binder.getCallingPid(); HdmiControlService$BinderService$6 v13 = new HdmiControlService$BinderService$6(p0); this.this$0.runOnServiceThread(v13);,0.8544383645057678
stopOneTouchRecord(I)V,setArcMode(Z)V,"HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid(); HdmiControlService$BinderService$18 v5 = new HdmiControlService$BinderService$18(p0,p1); this.this$0.runOnServiceThread(v5);",HdmiControlService$BinderService$14 v5 = new HdmiControlService$BinderService$14(p0); this.this$0.runOnServiceThread(v5);,0.8529549837112427
getPortInfo()Ljava/util/List;,getClientPid(Ljava/lang/String;)I,List v6 = this.mPortInfo; List v5 = v6; List v8 = this.mPortInfo; List v7 = v8; return phiInstruction;,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,0.8316161632537842
getPortInfo()Ljava/util/List;,getCurrentRuleSetProvider()Ljava/lang/String;,List v6 = this.mPortInfo; List v5 = v6; List v8 = this.mPortInfo; List v7 = v8; return phiInstruction;,return phiInstruction;,0.7979810237884521
getUserCecSettings()Ljava/util/List;,getAllowedCecSettingStringValues(Ljava/lang/String;)Ljava/util/List;,HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); List v7 = v6.getUserSettings(); return v7;,HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); ArrayList v15 = new ArrayList(); List v17 = this.mAllowedValues; return v7;,0.8301266431808472
getUserCecSettings()Ljava/util/List;,setCecSettingStringValue(Ljava/lang/String;Ljava/lang/String;)V,HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); List v7 = v6.getUserSettings(); return v7;,"HdmiCecConfig v6 = this.this$0.getHdmiCecConfig(); boolean v9 = this.mSettings.containsKey(p1); Object v10 = this.mSettings.get(p1); HdmiCecConfig$Setting v8 = phiInstruction; HdmiCecConfig$Value v13 = HdmiCecConfig$Setting.getDefaultValue(); String v14 = v13.getStringValue(); this.mStorageAdapter.storeSharedPref(v41, p2);",0.7625042796134949
sendKeyEvent(IIZ)V,deviceSelect(ILandroid/hardware/hdmi/IHdmiControlCallback;)V,"HdmiControlService$BinderService$3 v5 = new HdmiControlService$BinderService$3(p0,p2,p3,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$1 v5 = new HdmiControlService$BinderService$1(p0,p2,p1); this.this$0.runOnServiceThread(v5);",0.9916067123413086
sendKeyEvent(IIZ)V,sendVolumeKeyEvent(IIZ)V,"HdmiControlService$BinderService$3 v5 = new HdmiControlService$BinderService$3(p0,p2,p3,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$4 v5 = new HdmiControlService$BinderService$4(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9913397431373596
startOneTouchRecord(I[B)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$17 v5 = new HdmiControlService$BinderService$17(p0,p1,p2); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9930823445320129
startOneTouchRecord(I[B)V,setSystemAudioVolume(III)V,"HdmiControlService$BinderService$17 v5 = new HdmiControlService$BinderService$17(p0,p1,p2); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9923079013824463
setSystemAudioMode(ZLandroid/hardware/hdmi/IHdmiControlCallback;)V,powerOnRemoteDevice(II)V,"HdmiControlService$BinderService$8 v5 = new HdmiControlService$BinderService$8(p0,p2,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$10 v5 = new HdmiControlService$BinderService$10(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9948439002037048
setSystemAudioMode(ZLandroid/hardware/hdmi/IHdmiControlCallback;)V,powerOffRemoteDevice(II)V,"HdmiControlService$BinderService$8 v5 = new HdmiControlService$BinderService$8(p0,p2,p1); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$9 v5 = new HdmiControlService$BinderService$9(p0,p1,p2); this.this$0.runOnServiceThread(v5);",0.9933114051818848
getDeviceList()Ljava/util/List;,canChangeSystemAudioMode()Z,HdmiCecNetwork v5 = HdmiControlService.-$$Nest$fgetmHdmiCecNetwork(this.this$0); List v6 = v5.getSafeCecDevicesLocked(); return v6;,HdmiCecNetwork v10 = HdmiCecLocalDevice.mService.getHdmiCecNetwork(); HdmiDeviceInfo v11 = v10.getSafeCecDeviceInfo(5); boolean v8 = phiInstruction; return v8;,0.8085914850234985
getDeviceList()Ljava/util/List;,getSupportedTypes()[I,HdmiCecNetwork v5 = HdmiControlService.-$$Nest$fgetmHdmiCecNetwork(this.this$0); List v6 = v5.getSafeCecDevicesLocked(); return v6;,List v5 = HdmiControlService.-$$Nest$fgetmLocalDevices(this.this$0); [I v7 = new [I(v6); return v7;,0.7485915422439575
getCecSettingIntValue(Ljava/lang/String;)I,getCecSettingStringValue(Ljava/lang/String;)Ljava/lang/String;,"HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v13 = v12.getStringValue(); String v11 = phiInstruction; boolean v14 = v11.equals(""int""); int v31 = HdmiCecConfig.getStorage(v8); String v32 = HdmiCecConfig.getStorageKey(v8); String v41 = this.mStorageAdapter.retrieveGlobalSetting(v32, v29); String v30 = v41; int v42 = Integer.parseInt(v30); int v7 = v42; return v7;","HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v39 = this.mStorageAdapter.retrieveGlobalSetting(v30, v27); return v7;",0.8963440656661987
getCecSettingIntValue(Ljava/lang/String;)I,getCecSettingStringValue(Ljava/lang/String;)Ljava/lang/String;,"HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v13 = v12.getStringValue(); String v11 = phiInstruction; boolean v14 = v11.equals(""int""); int v31 = HdmiCecConfig.getStorage(v8); String v32 = HdmiCecConfig.getStorageKey(v8); String v41 = this.mStorageAdapter.retrieveSharedPref(v32, v29); String v30 = v41; int v42 = Integer.parseInt(v30); int v7 = v42; return v7;","HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue(); String v39 = this.mStorageAdapter.retrieveSharedPref(v30, v27); return v7;",0.8813968896865845
setInputChangeListener(Landroid/hardware/hdmi/IHdmiInputChangeListener;)V,addSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,"HdmiControlService$InputChangeListenerRecord v7 = new HdmiControlService$InputChangeListenerRecord(HdmiControlService,p2); this.mInputChangeListenerRecord = v7;","HdmiControlService$SystemAudioModeChangeListenerRecord v7 = new HdmiControlService$SystemAudioModeChangeListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder();",0.8502247333526611
setInputChangeListener(Landroid/hardware/hdmi/IHdmiInputChangeListener;)V,setHdmiRecordListener(Landroid/hardware/hdmi/IHdmiRecordListener;)V,"HdmiControlService$InputChangeListenerRecord v7 = new HdmiControlService$InputChangeListenerRecord(HdmiControlService,p2); this.mInputChangeListenerRecord = v7;","HdmiControlService$HdmiRecordListenerRecord v7 = new HdmiControlService$HdmiRecordListenerRecord(HdmiControlService,p2); this.mRecordListenerRecord = v7; IBinder v9 = p2.asBinder(); v9.linkToDeath(this.mRecordListenerRecord, 0);",0.8435847759246826
sendMhlVendorCommand(III[B)V,setSystemAudioVolume(III)V,"HdmiControlService$BinderService$21 v5 = new HdmiControlService$BinderService$21(p0,p1,p2,p3,p4); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$12 v5 = new HdmiControlService$BinderService$12(p0,p1,p2,p3); this.this$0.runOnServiceThread(v5);",0.9819787740707397
sendMhlVendorCommand(III[B)V,sendVendorCommand(II[BZ)V,"HdmiControlService$BinderService$21 v5 = new HdmiControlService$BinderService$21(p0,p1,p2,p3,p4); this.this$0.runOnServiceThread(v5);","HdmiControlService$BinderService$15 v5 = new HdmiControlService$BinderService$15(p0,p1,p4,p2,p3); this.this$0.runOnServiceThread(v5);",0.9814647436141968
addHdmiCecVolumeControlFeatureListener(Landroid/hardware/hdmi/IHdmiCecVolumeControlFeatureListener;)V,addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,"boolean v6 = this.mHdmiCecVolumeControlFeatureListenerRecords.register(p1); HdmiControlService$10 v7 = new HdmiControlService$10(HdmiControlService,p1); WorkSourceUidPreservingRunnable v10 = new WorkSourceUidPreservingRunnable(v7); boolean v12 = this.mHandler.post(v10);",boolean v10 = this.mHdmiControlStatusChangeListenerRecords.add(v6); boolean v16 = this.mHandler.post(v14);,0.8193323612213135
addHdmiCecVolumeControlFeatureListener(Landroid/hardware/hdmi/IHdmiCecVolumeControlFeatureListener;)V,addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/IHdmiControlStatusChangeListener;)V,"boolean v6 = this.mHdmiCecVolumeControlFeatureListenerRecords.register(p1); HdmiControlService$10 v7 = new HdmiControlService$10(HdmiControlService,p1); WorkSourceUidPreservingRunnable v10 = new WorkSourceUidPreservingRunnable(v7); boolean v12 = this.mHandler.post(v10);","HdmiControlService$HdmiControlStatusChangeListenerRecord v6 = new HdmiControlService$HdmiControlStatusChangeListenerRecord(HdmiControlService, p1); HdmiControlService$9 v11 = new HdmiControlService$9(HdmiControlService, v6, p1); WorkSourceUidPreservingRunnable v14 = new WorkSourceUidPreservingRunnable(v11);",0.8155979514122009
addSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,setHdmiRecordListener(Landroid/hardware/hdmi/IHdmiRecordListener;)V,"HdmiControlService$SystemAudioModeChangeListenerRecord v7 = new HdmiControlService$SystemAudioModeChangeListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0);","HdmiControlService$HdmiRecordListenerRecord v7 = new HdmiControlService$HdmiRecordListenerRecord(HdmiControlService,p2); this.mRecordListenerRecord = v7; IBinder v9 = p2.asBinder(); v9.linkToDeath(this.mRecordListenerRecord, 0);",0.8628866076469421
addSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,removeSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V,"HdmiControlService$SystemAudioModeChangeListenerRecord v7 = new HdmiControlService$SystemAudioModeChangeListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mSystemAudioModeChangeListenerRecords.add(v7);","Iterator v7 = this.mSystemAudioModeChangeListenerRecords.iterator(); Object v9 = v7.next(); IHdmiSystemAudioModeChangeListener v10 = HdmiControlService$SystemAudioModeChangeListenerRecord.-$$Nest$fgetmListener(v9); IBinder v11 = v10.asBinder(); boolean v13 = v12.unlinkToDeath(v9, 0); boolean v14 = this.mSystemAudioModeChangeListenerRecords.remove(v9);",0.8626145124435425
getInputDevices()Ljava/util/List;,getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,"List v6 = v5.getSafeExternalInputsLocked(); List v8 = this.mMhlDevices; List v9 = HdmiUtils.mergeToUnmodifiableList(v6, v7); return v9;","HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4); HdmiCecLocalDevicePlayback v6 = v7; boolean v10 = v8.isActiveSource(); int v18 = v16.getActivePath(); HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18); HdmiDeviceInfo$Builder v29 = v28.setPortId(v24); HdmiDeviceInfo$Builder v30 = v29.setVendorId(0); StringBuilder v31 = new StringBuilder(); StringBuilder v33 = v31.append(""HDMI""); StringBuilder v34 = v33.append(v24); String v35 = v34.toString(); HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35); HdmiDeviceInfo v37 = v36.build();",0.6682956218719482
getInputDevices()Ljava/util/List;,canChangeSystemAudioMode()Z,"List v6 = v5.getSafeExternalInputsLocked(); List v8 = this.mMhlDevices; List v9 = HdmiUtils.mergeToUnmodifiableList(v6, v7); return v9;",HdmiCecNetwork v10 = HdmiCecLocalDevice.mService.getHdmiCecNetwork(); HdmiDeviceInfo v11 = v10.getSafeCecDeviceInfo(5); boolean v8 = phiInstruction; return v8;,0.662655234336853
queryDisplayStatus(Landroid/hardware/hdmi/IHdmiControlCallback;)V,setSystemAudioModeOnForAudioOnlySource()V,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,1.0000001192092896
queryDisplayStatus(Landroid/hardware/hdmi/IHdmiControlCallback;)V,toggleAndFollowTvPower()V,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,HdmiControlService.enforceAccessPermission(); HdmiControlService.setWorkSourceUidToCallingUid();,1.0000001192092896
requestUninstall([BLandroid/app/timezone/ICallback;)I,applyRestore([BI)V,ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong();,ByteArrayInputStream v2 = new ByteArrayInputStream(p1);,0.7856341600418091
requestUninstall([BLandroid/app/timezone/ICallback;)I,isAppSourceCertificateTrusted([BLjava/lang/String;)Z,ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong();,ByteArrayInputStream v13 = new ByteArrayInputStream(p1); Certificate v15 = this.sCertFactory.generateCertificate(v13); X509Certificate v12 = v15; boolean v16 = v10.contains(v12);,0.7310340404510498
requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I,requestNothing([BZ)V,"ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong(); CheckToken v11 = new CheckToken(v8,v12); PackageVersions v12 = new PackageVersions(v9,v10); RulesManagerService$InstallRunnable v20 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);","CheckToken v11 = new CheckToken(v8,v12); PackageVersions v12 = new PackageVersions(v9,v10); ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4);",0.7735860347747803
requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I,getCurrentRuleSetVersion()Ljava/lang/String;,"ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong(); CheckToken v11 = new CheckToken(v8,v12); PackageVersions v12 = new PackageVersions(v9,v10); RulesManagerService$InstallRunnable v20 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);",RuleMetadata v12 = this.mIntegrityFileManager.readMetadata(); String v13 = v12.getVersion(); return phiInstruction;,0.7119950652122498
requestNothing([BZ)V,requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I,"CheckToken v11 = new CheckToken(v8,v12); PackageVersions v12 = new PackageVersions(v9,v10); ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4);","ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong(); CheckToken v11 = new CheckToken(v8,v12); PackageVersions v12 = new PackageVersions(v9,v10); RulesManagerService$InstallRunnable v20 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);",0.7735860347747803
requestNothing([BZ)V,setPackageAskScreenCompat(Ljava/lang/String;Z)V,"boolean v29 = PackageStatusStorage.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v28, CheckToken.mPackageVersions); Integer v15 = Integer.valueOf(phiInstruction);","int v7 = CompatModePackages.getPackageFlags(p1); Integer v8 = Integer.valueOf(phiInstruction); Object v9 = this.mPackages.put(p1, v8); CompatModePackages.scheduleWrite();",0.7508846521377563
getRulesState()Landroid/app/timezone/RulesState;,requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I,"TzDataSetVersion v4 = TimeZoneDistroInstaller.readBaseVersion(this.baseVersionFile); TzDataSetVersion v3 = v4; String v16 = v3.getRulesVersion(); RulesState v15 = new RulesState(v16,this.DISTRO_FORMAT_VERSION_SUPPORTED,v6,phiInstruction,phiInstruction,phiInstruction,phiInstruction); return v2;","ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong(); CheckToken v11 = new CheckToken(v8,v12); PackageVersions v12 = new PackageVersions(v9,v10); RulesManagerService$InstallRunnable v20 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);",0.6395049691200256
getRulesState()Landroid/app/timezone/RulesState;,getCurrentRuleSetVersion()Ljava/lang/String;,"TzDataSetVersion v4 = TimeZoneDistroInstaller.readBaseVersion(this.baseVersionFile); TzDataSetVersion v3 = v4; String v16 = v3.getRulesVersion(); RulesState v15 = new RulesState(v16,this.DISTRO_FORMAT_VERSION_SUPPORTED,v6,phiInstruction,phiInstruction,phiInstruction,phiInstruction); return v2;",RuleMetadata v12 = this.mIntegrityFileManager.readMetadata(); String v13 = v12.getVersion(); return phiInstruction;,0.6013686656951904
startConsentActivity([ILjava/lang/String;)V,showInputMethodPickerFromClient(Lcom/android/internal/view/IInputMethodClient;I)V,ComponentName v37 = ComponentName.unflattenFromString(v29); ComponentName v26 = v37;,ComponentName v21 = v19.getComponent(); String v22 = v21.getPackageName();,0.7726330757141113
startConsentActivity([ILjava/lang/String;)V,startActivityFromRecents(ILandroid/os/Bundle;)I,"IActivityTaskManager v18 = this.IActivityTaskManagerSingleton.get(); ParceledListSlice v20 = v18.getRecentTasks(1, 0, v17); List v21 = v20.getList(); Object v24 = v23.get(0);","int v11 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4); return v11;",0.7463093400001526
registerObserverWithCallback(Landroid/app/ambientcontext/AmbientContextEventRequest;Ljava/lang/String;Landroid/app/ambientcontext/IAmbientContextObserver;)V,queryServiceStatus([ILjava/lang/String;Landroid/os/RemoteCallback;)V,"AmbientContextManagerPerUserService$$ExternalSyntheticLambda1 v28 = new AmbientContextManagerPerUserService$$ExternalSyntheticLambda1(p3); RemoteCallback v30 = AmbientContextManagerPerUserService.getServerStatusCallback(v28); this.mRemoteService.startDetection(p1, p2, v27, v30);","RemoteCallback v32 = new RemoteCallback(v33); AmbientContextManagerPerUserService$$ExternalSyntheticLambda0 v29 = new AmbientContextManagerPerUserService$$ExternalSyntheticLambda0(p3); RemoteCallback v31 = v32; RemoteAmbientContextDetectionService$$ExternalSyntheticLambda3 v43 = new RemoteAmbientContextDetectionService$$ExternalSyntheticLambda3(p1,p2,v31);",0.8514466881752014
registerObserverWithCallback(Landroid/app/ambientcontext/AmbientContextEventRequest;Ljava/lang/String;Landroid/app/ambientcontext/IAmbientContextObserver;)V,queryServiceStatus([ILjava/lang/String;Landroid/os/RemoteCallback;)V,"AmbientContextManagerPerUserService$$ExternalSyntheticLambda1 v28 = new AmbientContextManagerPerUserService$$ExternalSyntheticLambda1(p3); RemoteCallback v30 = AmbientContextManagerPerUserService.getServerStatusCallback(v28); this.mRemoteService.startDetection(p1, p2, v27, v30);","ComponentName v20 = AmbientContextManagerPerUserService.updateServiceInfoLocked(); this.mComponentName = v20; RemoteAmbientContextDetectionService v25 = new RemoteAmbientContextDetectionService(v26,this.mComponentName,v27); AndroidFuture v45 = RemoteAmbientContextDetectionService.post(v43);",0.7501763701438904
unregisterObserver(Ljava/lang/String;)V,registerObserverWithCallback(Landroid/app/ambientcontext/AmbientContextEventRequest;Ljava/lang/String;Landroid/app/ambientcontext/IAmbientContextObserver;)V,"this.this$0.assertCalledByPackageOwner(p1); Set v23 = AmbientContextManagerService.findExistingRequests(AbstractPerUserSystemService.mUserId, p1); boolean v24 = this.mExistingClientRequests.removeAll(v23);","AmbientContextManagerService$ClientRequest v41 = new AmbientContextManagerService$ClientRequest(AbstractPerUserSystemService.mUserId,p1,p2,p3); boolean v43 = this.mExistingClientRequests.add(v41);",0.7388241291046143
unregisterObserver(Ljava/lang/String;)V,unregisterNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,this.mRemoteService.stopDetection(p1);,this.mBar.unregisterNearbyMediaDevicesProvider(p1);,0.6737133264541626
registerObserver(Landroid/app/ambientcontext/AmbientContextEventRequest;Landroid/app/PendingIntent;Landroid/os/RemoteCallback;)V,queryServiceStatus([ILjava/lang/String;Landroid/os/RemoteCallback;)V,"AmbientContextManagerService$AmbientContextManagerInternal$1 v4 = new AmbientContextManagerService$AmbientContextManagerInternal$1(p0,p2,p3); AmbientContextManagerPerUserService.startDetection(p1, p2, p3);","ComponentName v20 = AmbientContextManagerPerUserService.updateServiceInfoLocked(); this.mComponentName = v20; RemoteAmbientContextDetectionService v25 = new RemoteAmbientContextDetectionService(v26,this.mComponentName,v27); AndroidFuture v45 = RemoteAmbientContextDetectionService.post(v43);",0.7465533018112183
registerObserver(Landroid/app/ambientcontext/AmbientContextEventRequest;Landroid/app/PendingIntent;Landroid/os/RemoteCallback;)V,registerObserverWithCallback(Landroid/app/ambientcontext/AmbientContextEventRequest;Ljava/lang/String;Landroid/app/ambientcontext/IAmbientContextObserver;)V,"AmbientContextManagerService$AmbientContextManagerInternal$1 v4 = new AmbientContextManagerService$AmbientContextManagerInternal$1(p0,p2,p3); AmbientContextManagerPerUserService.startDetection(p1, p2, p3);","AmbientContextManagerService$ClientRequest v41 = new AmbientContextManagerService$ClientRequest(AbstractPerUserSystemService.mUserId,p1,p2,p3); boolean v43 = this.mExistingClientRequests.add(v41);",0.7059657573699951
queryServiceStatus([ILjava/lang/String;Landroid/os/RemoteCallback;)V,registerObserverWithCallback(Landroid/app/ambientcontext/AmbientContextEventRequest;Ljava/lang/String;Landroid/app/ambientcontext/IAmbientContextObserver;)V,"RemoteCallback v32 = new RemoteCallback(v33); AmbientContextManagerPerUserService$$ExternalSyntheticLambda0 v29 = new AmbientContextManagerPerUserService$$ExternalSyntheticLambda0(p3); RemoteCallback v31 = v32; RemoteAmbientContextDetectionService$$ExternalSyntheticLambda3 v43 = new RemoteAmbientContextDetectionService$$ExternalSyntheticLambda3(p1,p2,v31);","AmbientContextManagerPerUserService$$ExternalSyntheticLambda1 v28 = new AmbientContextManagerPerUserService$$ExternalSyntheticLambda1(p3); RemoteCallback v30 = AmbientContextManagerPerUserService.getServerStatusCallback(v28); this.mRemoteService.startDetection(p1, p2, v27, v30);",0.8514466881752014
queryServiceStatus([ILjava/lang/String;Landroid/os/RemoteCallback;)V,clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V,"RemoteCallback v32 = new RemoteCallback(v33); AmbientContextManagerPerUserService$$ExternalSyntheticLambda0 v29 = new AmbientContextManagerPerUserService$$ExternalSyntheticLambda0(p3); RemoteCallback v31 = v32; RemoteAmbientContextDetectionService$$ExternalSyntheticLambda3 v43 = new RemoteAmbientContextDetectionService$$ExternalSyntheticLambda3(p1,p2,v31);","VcnManagementService$$ExternalSyntheticLambda5 v40 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1); Binder.withCleanCallingIdentity(v40);",0.7808511257171631
getAutoPersisting()Z,setAutoPersisting(Ljava/lang/String;Z)V,boolean v4 = v1.getAutoPersisting(); return v4;,"v4.setAutoPersisting(p1, p2);",0.7783222794532776
getAutoPersisting()Z,getPersistentDataPackageName()Ljava/lang/String;,boolean v4 = v1.getAutoPersisting(); return v4;,String v8 = v7.getString(17040017); return v8;,0.6223595142364502
importTextMessage(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;JZZ)Landroid/net/Uri;,addTextMessageDraft(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;,"Uri v7 = v4.importTextMessage(p1, p2, p3, p4, p5, p6, p7); return v7;","Uri v7 = v4.addTextMessageDraft(p1, p2, p3); return v7;",0.8296193480491638
importTextMessage(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;JZZ)Landroid/net/Uri;,addMultimediaMessageDraft(Ljava/lang/String;Landroid/net/Uri;)Landroid/net/Uri;,"Uri v7 = v4.importTextMessage(p1, p2, p3, p4, p5, p6, p7); return v7;","Uri v7 = v4.addMultimediaMessageDraft(p1, p2); return v7;",0.7955551147460938
addTextMessageDraft(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;,addMultimediaMessageDraft(Ljava/lang/String;Landroid/net/Uri;)Landroid/net/Uri;,"Uri v7 = v4.addTextMessageDraft(p1, p2, p3); return v7;","Uri v7 = v4.addMultimediaMessageDraft(p1, p2); return v7;",0.9367508888244629
addTextMessageDraft(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;,importTextMessage(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;JZZ)Landroid/net/Uri;,"Uri v7 = v4.addTextMessageDraft(p1, p2, p3); return v7;","Uri v7 = v4.importTextMessage(p1, p2, p3, p4, p5, p6, p7); return v7;",0.8296193480491638
downloadMessage(ILjava/lang/String;Ljava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V,sendMessage(ILjava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V,"Uri v19 = ContentProvider.maybeAddUserId(p4, v18); NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, ""com.android.phone"", 0); v21.grantUriPermissionUncheckedFromIntent(v23, 0); List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29); NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0); v21.grantUriPermissionUncheckedFromIntent(v34, 0); IMms v37 = MmsServiceBroker.getOrConnectService(); v37.downloadMessage(p1, p2, p3, v12, p5, p6, p7, p8);","Uri v19 = ContentProvider.maybeAddUserId(p3, v18); NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, ""com.android.phone"", 0); v21.grantUriPermissionUncheckedFromIntent(v23, 0); int v30 = this.this$0.getPhoneIdFromSubId(p4); List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29); NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0); v21.grantUriPermissionUncheckedFromIntent(v34, 0); IMms v37 = this.mServiceStubForFailure; v37.sendMessage(p1, p2, v12, p4, p5, p6, p7, p8);",0.8801566958427429
downloadMessage(ILjava/lang/String;Ljava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V,grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,"Uri v19 = ContentProvider.maybeAddUserId(p4, v18); NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, ""com.android.phone"", 0); v21.grantUriPermissionUncheckedFromIntent(v23, 0); List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29); NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0); v21.grantUriPermissionUncheckedFromIntent(v34, 0); IMms v37 = MmsServiceBroker.getOrConnectService(); v37.downloadMessage(p1, p2, p3, v12, p5, p6, p7, p8);","Uri v42 = ContentProvider.getUriWithoutUserId(p3); String v43 = v42.getAuthority(); Object v48 = this.mAuths.put(v43, v46);",0.7292221784591675
deleteStoredConversation(Ljava/lang/String;J)Z,deleteStoredMessage(Ljava/lang/String;Landroid/net/Uri;)Z,"boolean v7 = v4.deleteStoredConversation(p1, p2); return v7;","boolean v7 = v4.deleteStoredMessage(p1, p2); return v7;",0.7966223359107971
deleteStoredConversation(Ljava/lang/String;J)Z,archiveStoredConversation(Ljava/lang/String;JZ)Z,"boolean v7 = v4.deleteStoredConversation(p1, p2); return v7;","IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; boolean v7 = v4.archiveStoredConversation(p1, p2, p3); return v7;",0.7404417395591736
updateStoredMessageStatus(Ljava/lang/String;Landroid/net/Uri;Landroid/content/ContentValues;)Z,deleteStoredMessage(Ljava/lang/String;Landroid/net/Uri;)Z,"boolean v7 = v4.updateStoredMessageStatus(p1, p2, p3); return v7;","boolean v7 = v4.deleteStoredMessage(p1, p2); return v7;",0.8792524933815002
updateStoredMessageStatus(Ljava/lang/String;Landroid/net/Uri;Landroid/content/ContentValues;)Z,deleteStoredConversation(Ljava/lang/String;J)Z,"boolean v7 = v4.updateStoredMessageStatus(p1, p2, p3); return v7;","boolean v7 = v4.deleteStoredConversation(p1, p2); return v7;",0.7361945509910583
sendMessage(ILjava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V,downloadMessage(ILjava/lang/String;Ljava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V,"Uri v19 = ContentProvider.maybeAddUserId(p3, v18); NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, ""com.android.phone"", 0); v21.grantUriPermissionUncheckedFromIntent(v23, 0); int v30 = this.this$0.getPhoneIdFromSubId(p4); List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29); NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0); v21.grantUriPermissionUncheckedFromIntent(v34, 0); IMms v37 = this.mServiceStubForFailure; v37.sendMessage(p1, p2, v12, p4, p5, p6, p7, p8);","Uri v19 = ContentProvider.maybeAddUserId(p4, v18); NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, ""com.android.phone"", 0); v21.grantUriPermissionUncheckedFromIntent(v23, 0); List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29); NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0); v21.grantUriPermissionUncheckedFromIntent(v34, 0); IMms v37 = MmsServiceBroker.getOrConnectService(); v37.downloadMessage(p1, p2, p3, v12, p5, p6, p7, p8);",0.8801566958427429
sendMessage(ILjava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V,checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I,"Uri v19 = ContentProvider.maybeAddUserId(p3, v18); NeededUriGrants v23 = v21.checkGrantUriPermissionFromIntent(v13, v17, ""com.android.phone"", 0); v21.grantUriPermissionUncheckedFromIntent(v23, 0); int v30 = this.this$0.getPhoneIdFromSubId(p4); List v31 = v28.getCarrierPackageNamesForIntentAndPhone(v25, v29); NeededUriGrants v34 = v21.checkGrantUriPermissionFromIntent(v13, v17, v33, 0); v21.grantUriPermissionUncheckedFromIntent(v34, 0); IMms v37 = this.mServiceStubForFailure; v37.sendMessage(p1, p2, v12, p4, p5, p6, p7, p8);","int v7 = ContentProvider.getUserIdFromUri(p1, v1); long v9 = Binder.clearCallingIdentity(); Uri v10 = ContentProvider.getUriWithoutUserId(p1); String v11 = v10.getAuthority(); PackageManager v12 = this.mContext.getPackageManager(); int v13 = ContentProvider.getUserIdFromUri(p1, v7); ProviderInfo v14 = v12.resolveContentProviderAsUser(v11, 0, v13); Binder.restoreCallingIdentity(v9); String v8 = ProviderInfo.packageName; SlicePermissionManager$PkgUser v17 = new SlicePermissionManager$PkgUser(p3,v1); Object v31 = this.mCachedClients.put(v17, v29);",0.7548303604125977
importMultimediaMessage(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;JZZ)Landroid/net/Uri;,sendStoredMessage(ILjava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;)V,"IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; Uri v7 = v4.importMultimediaMessage(p1, p2, p3, p4, p5, p6); return v7;","IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; v4.sendStoredMessage(p1, p2, p3, p4, p5);",0.8631253838539124
importMultimediaMessage(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;JZZ)Landroid/net/Uri;,sendStoredMessage(ILjava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;)V,"IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = this.mServiceStubForFailure; IMms v4 = v5; Uri v7 = v4.importMultimediaMessage(p1, p2, p3, p4, p5, p6); return v7;","IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; v4.sendStoredMessage(p1, p2, p3, p4, p5);",0.8422881960868835
addMultimediaMessageDraft(Ljava/lang/String;Landroid/net/Uri;)Landroid/net/Uri;,addTextMessageDraft(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;,"Uri v7 = v4.addMultimediaMessageDraft(p1, p2); return v7;","Uri v7 = v4.addTextMessageDraft(p1, p2, p3); return v7;",0.9367508888244629
addMultimediaMessageDraft(Ljava/lang/String;Landroid/net/Uri;)Landroid/net/Uri;,importTextMessage(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;JZZ)Landroid/net/Uri;,"Uri v7 = v4.addMultimediaMessageDraft(p1, p2); return v7;","Uri v7 = v4.importTextMessage(p1, p2, p3, p4, p5, p6, p7); return v7;",0.7955551147460938
deleteStoredMessage(Ljava/lang/String;Landroid/net/Uri;)Z,updateStoredMessageStatus(Ljava/lang/String;Landroid/net/Uri;Landroid/content/ContentValues;)Z,"boolean v7 = v4.deleteStoredMessage(p1, p2); return v7;","boolean v7 = v4.updateStoredMessageStatus(p1, p2, p3); return v7;",0.8792524933815002
deleteStoredMessage(Ljava/lang/String;Landroid/net/Uri;)Z,deleteStoredConversation(Ljava/lang/String;J)Z,"boolean v7 = v4.deleteStoredMessage(p1, p2); return v7;","boolean v7 = v4.deleteStoredConversation(p1, p2); return v7;",0.7966223359107971
sendStoredMessage(ILjava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;)V,archiveStoredConversation(Ljava/lang/String;JZ)Z,"IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; v4.sendStoredMessage(p1, p2, p3, p4, p5);","IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; boolean v7 = v4.archiveStoredConversation(p1, p2, p3); return v7;",0.8779993057250977
sendStoredMessage(ILjava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;)V,importMultimediaMessage(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;JZZ)Landroid/net/Uri;,"IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; v4.sendStoredMessage(p1, p2, p3, p4, p5);","IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; Uri v7 = v4.importMultimediaMessage(p1, p2, p3, p4, p5, p6); return v7;",0.8631253838539124
archiveStoredConversation(Ljava/lang/String;JZ)Z,sendStoredMessage(ILjava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;)V,"IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; boolean v7 = v4.archiveStoredConversation(p1, p2, p3); return v7;","IMms v6 = MmsServiceBroker.getOrConnectService(); IMms v5 = v6; IMms v4 = v5; v4.sendStoredMessage(p1, p2, p3, p4, p5);",0.8779993057250977
archiveStoredConversation(Ljava/lang/String;JZ)Z,sendStoredMessage(ILjava/lang/String;Landroid/net/Uri;Landroid/os/Bundle;Landroid/app/PendingIntent;)V,"IMms v5 = this.mServiceStubForFailure; IMms v4 = v5; boolean v7 = v4.archiveStoredConversation(p1, p2, p3); return v7;","IMms v5 = this.mServiceStubForFailure; IMms v4 = v5; v4.sendStoredMessage(p1, p2, p3, p4, p5);",0.8284851312637329
setAutoPersisting(Ljava/lang/String;Z)V,getAutoPersisting()Z,"v4.setAutoPersisting(p1, p2);",boolean v4 = v1.getAutoPersisting(); return v4;,0.7783222794532776
setAutoPersisting(Ljava/lang/String;Z)V,registerTaskStackListener(Landroid/app/ITaskStackListener;)V,"v4.setAutoPersisting(p1, p2);",p1.setIsLocal();,0.6473550796508789
getLastResumedActivityUserId()I,startSystemLockTaskMode(I)V,int v5 = p0.getCurrentUserId(); return v5;,int v58 = Binder.getCallingUid(); Task.mLockTaskUid = v58;,0.7452504634857178
getLastResumedActivityUserId()I,releaseTvInputHardware(ILandroid/media/tv/ITvInputHardware;I)V,int v5 = p0.getCurrentUserId(); return v5;,"int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); int v7 = v8; int v6 = v7;",0.7302472591400146
removeRootTasksInWindowingModes([I)V,removeHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,,,1.0000001192092896
removeRootTasksInWindowingModes([I)V,setVrThread(I)V,,,1.0000001192092896
startSystemLockTaskMode(I)V,cancelTaskWindowTransition(I)V,"PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9943801164627075
startSystemLockTaskMode(I)V,resizeTask(ILandroid/graphics/Rect;I)Z,"PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9896436333656311
cancelTaskWindowTransition(I)V,startSystemLockTaskMode(I)V,"PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9943801164627075
cancelTaskWindowTransition(I)V,resizeTask(ILandroid/graphics/Rect;I)Z,"PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9830618500709534
setPackageAskScreenCompat(Ljava/lang/String;Z)V,requestNothing([BZ)V,"int v7 = CompatModePackages.getPackageFlags(p1); Integer v8 = Integer.valueOf(phiInstruction); Object v9 = this.mPackages.put(p1, v8); CompatModePackages.scheduleWrite();","boolean v29 = PackageStatusStorage.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v28, CheckToken.mPackageVersions); Integer v15 = Integer.valueOf(phiInstruction);",0.7508846521377563
setPackageAskScreenCompat(Ljava/lang/String;Z)V,takePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,"int v7 = CompatModePackages.getPackageFlags(p1); Integer v8 = Integer.valueOf(phiInstruction); Object v9 = this.mPackages.put(p1, v8); CompatModePackages.scheduleWrite();","int v2 = this.mPmInternal.getPackageUid(p3, 0, p4); GrantUri v4 = new GrantUri(p4,p1,0); Object v7 = this.mGrantedUriPermissions.get(phiInstruction);",0.726693332195282
setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V,registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V,this.mRunningRemoteAnimation = 1; WindowProcessController.updateRunningRemoteOrRecentsAnimation();,this.mRemoteAnimationDefinition = p1;,0.7392226457595825
setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V,startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;,this.mRunningRemoteAnimation = 1; WindowProcessController.updateRunningRemoteOrRecentsAnimation();,RecentsAnimationController v18 = this.mRecentsAnimationController; boolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents(); boolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord); boolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);,0.6570331454277039
setSplitScreenResizing(Z)V,moveRootTaskToDisplay(II)V,this.mDockedRootTaskResizing = p1; DisplayContent v11 = WindowManagerService.getDefaultDisplayContentLocked(); DockedTaskDividerController v12 = v11.getDockedDividerController(); v12.setResizing(p1);,"TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea(); Task v33 = RootWindowContainer.getRootTask(p1); TaskDisplayArea v34 = v33.getDisplayArea(); v33.reparent(v30, p3);",0.6650311946868896
setSplitScreenResizing(Z)V,resizeTask(ILandroid/graphics/Rect;I)Z,this.mDockedRootTaskResizing = p1; DisplayContent v11 = WindowManagerService.getDefaultDisplayContentLocked(); DockedTaskDividerController v12 = v11.getDockedDividerController(); v12.setResizing(p1);,this.mLayoutReasons = 0; WindowManagerService.mWindowPlacerLocked.deferLayout(); int v50 = Task.setBounds(p1); this.mRotation = phiInstruction;,0.6626348495483398
reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V,getAssistContextExtras(I)Landroid/os/Bundle;,"ActivityTaskManagerService$PendingAssistExtras.result = p2; ActivityTaskManagerService$PendingAssistExtras.structure = p3; ActivityTaskManagerService$PendingAssistExtras.content = p4; ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);","ActivityTaskManagerService$PendingAssistExtras v2 = 0; p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result); boolean v30 = this.mPendingAssistExtras.remove(v2); this.mUiHandler.removeCallbacks(v2); return ActivityTaskManagerService$PendingAssistExtras.extras;",0.7761262655258179
reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V,setActivityController(Landroid/app/IActivityController;Z)V,p3.setTaskId(Task.mTaskId); p3.setActivityComponent(ActivityRecord.mActivityComponent); p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);,this.mController = p1; this.mControllerIsAMonkey = p2; v5.setActivityController(p1);,0.7361018061637878
isTopActivityImmersive()Z,setFrontActivityScreenCompatMode(I)V,"int v9 = RootWindowContainer.getChildCount(); WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction); Task v11 = v10.getFocusedRootTask(); ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);","WindowContainer v8 = RootWindowContainer.getChildAt(phiInstruction); Task v9 = v8.getFocusedRootTask(); ActivityRecord v12 = TaskFragment.topRunningActivity(0, 1);",0.9480879902839661
isTopActivityImmersive()Z,isAssistDataAllowedOnCurrentActivity()Z,"int v9 = RootWindowContainer.getChildCount(); WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction); Task v11 = v10.getFocusedRootTask(); ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);",int v6 = RootWindowContainer.getChildCount(); WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction); Task v8 = v7.getFocusedRootTask(); boolean v9 = v4.isActivityTypeAssistant();,0.9364264011383057
getAssistContextExtras(I)Landroid/os/Bundle;,reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V,"ActivityTaskManagerService$PendingAssistExtras v2 = 0; p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result); boolean v30 = this.mPendingAssistExtras.remove(v2); this.mUiHandler.removeCallbacks(v2); return ActivityTaskManagerService$PendingAssistExtras.extras;","ActivityTaskManagerService$PendingAssistExtras.result = p2; ActivityTaskManagerService$PendingAssistExtras.structure = p3; ActivityTaskManagerService$PendingAssistExtras.content = p4; ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);",0.7761262655258179
getAssistContextExtras(I)Landroid/os/Bundle;,isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z,"ActivityTaskManagerService$PendingAssistExtras v2 = 0; p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result); boolean v30 = this.mPendingAssistExtras.remove(v2); this.mUiHandler.removeCallbacks(v2); return ActivityTaskManagerService$PendingAssistExtras.extras;","ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5); ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0); ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4); boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4); DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);",0.5988695621490479
cancelRecentsAnimation(Z)V,registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V,"RecentsAnimationController.cancelAnimation(p1, 0, p2);",this.mRemoteAnimationDefinition = p1;,0.6444755792617798
cancelRecentsAnimation(Z)V,setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V,"RecentsAnimationController.cancelAnimation(p1, 0, p2);",this.mRunningRemoteAnimation = 1; WindowProcessController.updateRunningRemoteOrRecentsAnimation();,0.644071102142334
moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V,updateLockTaskFeatures(II)V,"ProtoLogImpl v6 = new ProtoLogImpl(v7,1048576,v9); BaseProtoLogImpl.logToProto(p2, p3, p5); BaseProtoLogImpl.logToLogcat(v16, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);","boolean v19 = p1.isLogToProto(); BaseProtoLogImpl.logToProto(p2, p3, p5);",0.8678896427154541
moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V,updateLockTaskFeatures(II)V,"ProtoLogImpl v6 = new ProtoLogImpl(v7,1048576,v9); BaseProtoLogImpl.logToProto(p2, p3, p5); BaseProtoLogImpl.logToLogcat(v16, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);","boolean v21 = p1.isLogToLogcat(); String v22 = p1.getTag(); BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);",0.7998920679092407
setVrThread(I)V,removeHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,,,1.0000001192092896
setVrThread(I)V,removeRootTasksInWindowingModes([I)V,,,1.0000001192092896
updateLockTaskFeatures(II)V,moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V,"boolean v19 = p1.isLogToProto(); BaseProtoLogImpl.logToProto(p2, p3, p5);","ProtoLogImpl v6 = new ProtoLogImpl(v7,1048576,v9); BaseProtoLogImpl.logToProto(p2, p3, p5); BaseProtoLogImpl.logToLogcat(v16, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);",0.8678896427154541
updateLockTaskFeatures(II)V,setLockScreenShown(ZZ)V,"LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1); boolean v33 = this.mHandler.post(v31);","ActivityTaskManagerService$$ExternalSyntheticLambda12 v22 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1); boolean v24 = this.mH.post(v22);",0.8254696130752563
getAllRootTaskInfos()Ljava/util/List;,getAllRootTaskInfosOnDisplay(I)Ljava/util/List;,"int v13 = RootWindowContainer.getChildCount(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;","ArrayList v10 = new ArrayList(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;",0.924764096736908
getAllRootTaskInfos()Ljava/util/List;,finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V,"int v13 = RootWindowContainer.getChildCount(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;","RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1); WindowContainer.forAllRootTasks(v6, 1);",0.8752995729446411
onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V,setTaskResizeable(II)V,"PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10); Task v12 = RootWindowContainer.getTask(v11);","PooledPredicate v10 = PooledLambda.obtainPredicate(v6, v8, v9); Task v11 = RootWindowContainer.getTask(v10); v10.recycle(); Task v13 = RootWindowContainer.getOrCreateRootTask(0, 0, v11, 0);",0.9618838429450989
onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V,resizeTask(ILandroid/graphics/Rect;I)Z,"PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10); Task v12 = RootWindowContainer.getTask(v11);","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9267303943634033
clearLaunchParamsForPackages(Ljava/util/List;)V,No similar EPs with similarity > 0.8,,,
startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I,ActivityOptions v6 = new ActivityOptions(); Bundle v24 = v5.toBundle(); SafeActivityOptions v27 = new SafeActivityOptions(v28); ActivityOptions v28 = ActivityOptions.fromBundle(p1); ActivityStarter$Request.activityOptions = v26;,SafeActivityOptions v27 = new SafeActivityOptions(v28); ActivityOptions v28 = ActivityOptions.fromBundle(p11); ActivityStarter$Request.activityOptions = v26;,0.9293187856674194
startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I,ActivityStarter v17 = v13.setCaller(p1); ActivityStarter v18 = v17.setCallingUid(p5); ActivityStarter v19 = v18.setCallingPid(p4); ActivityStarter v21 = v19.setCallingPackage(v20); ActivityStarter v22 = v21.setCallingFeatureId(p3);,ActivityStarter v16 = v12.setCaller(p1); ActivityStarter v17 = v16.setCallingPackage(p2); ActivityStarter v18 = v17.setCallingFeatureId(p3); ActivityStarter v19 = v18.setResolvedType(p5); ActivityStarter v20 = v19.setResultTo(p6); ActivityStarter v21 = v20.setResultWho(p7); ActivityStarter v22 = v21.setRequestCode(p8); ActivityStarter v23 = v22.setStartFlags(p9); ActivityStarter v24 = v23.setGlobalConfiguration(p10);,0.9195818305015564
removeAllVisibleRecentTasks()V,No similar EPs with similarity > 0.8,,,
startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;,startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I,ActivityStarter v15 = this.mFactory.obtain(); ActivityStarter$Request.intent = p1; ActivityStarter v18 = v14.setCaller(p1); ... ActivityStarter v34 = v33.setWaitResult(v4);,ActivityStarter v8 = this.mFactory.obtain(); ActivityStarter$Request.intent = p1; ActivityStarter v11 = v7.setCallingUid(p4); ActivityStarter v12 = v11.setCallingPackage(p1); int v23 = v22.execute(); return v23;,0.9143298864364624
startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,ActivityStarter v15 = this.mFactory.obtain(); ActivityStarter$Request.intent = p1; ActivityStarter v18 = v14.setCaller(p1); ... ActivityStarter v34 = v33.setWaitResult(v4);,ActivityStarter v17 = v13.setCaller(p1); ActivityStarter v18 = v17.setCallingUid(p5); ActivityStarter v19 = v18.setCallingPid(p4); ActivityStarter v21 = v19.setCallingPackage(v20); ActivityStarter v22 = v21.setCallingFeatureId(p3);,0.8095575571060181
getAllRootTaskInfosOnDisplay(I)Ljava/util/List;,finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V,"ArrayList v10 = new ArrayList(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;","RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1); WindowContainer.forAllRootTasks(v6, 1);",0.9277772307395935
getAllRootTaskInfosOnDisplay(I)Ljava/util/List;,getAllRootTaskInfos()Ljava/util/List;,"ArrayList v10 = new ArrayList(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;","int v13 = RootWindowContainer.getChildCount(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;",0.924764096736908
getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;,getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;,"ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo(); v10.fillTaskInfo(v15); DisplayContent v18 = v10.getDisplayContent(); boolean v23 = v18.forAllRootTasks(v21, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v24 = v10.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v24; v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds); int v26 = v10.getDescendantTaskCount(); [I v27 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskIds = v27; String v28 = new String(v26); ActivityTaskManager$RootTaskInfo.childTaskNames = v28; Rect v29 = new Rect(v26); ActivityTaskManager$RootTaskInfo.childTaskBounds = v29; [I v30 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30; [I v31 = new [I(1); PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31); v10.forAllLeafTasks(v35, 0); ActivityRecord v38 = v10.topRunningActivity(); ComponentName v39 = ActivityRecord.intent.getComponent(); ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction; return v9;","ActivityTaskManager$RootTaskInfo v20 = new ActivityTaskManager$RootTaskInfo(); v15.fillTaskInfo(v20); DisplayContent v23 = v15.getDisplayContent(); boolean v28 = v23.forAllRootTasks(v26, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v29 = v15.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v29; v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds); return phiInstruction;",0.8814712762832642
getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,"ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo(); v10.fillTaskInfo(v15); DisplayContent v18 = v10.getDisplayContent(); boolean v23 = v18.forAllRootTasks(v21, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v24 = v10.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v24; v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds); int v26 = v10.getDescendantTaskCount(); [I v27 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskIds = v27; String v28 = new String(v26); ActivityTaskManager$RootTaskInfo.childTaskNames = v28; Rect v29 = new Rect(v26); ActivityTaskManager$RootTaskInfo.childTaskBounds = v29; [I v30 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30; [I v31 = new [I(1); PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31); v10.forAllLeafTasks(v35, 0); ActivityRecord v38 = v10.topRunningActivity(); ComponentName v39 = ActivityRecord.intent.getComponent(); ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction; return v9;","TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea(); Task v22 = v21.getRootTask(0, phiInstruction); ActivityRecord v23 = v22.topRunningActivity(); boolean v24 = v23.attachedToProcess();",0.8338523507118225
setLockScreenShown(ZZ)V,keyguardGoingAway(I)V,"ActivityTaskManagerService$$ExternalSyntheticLambda11 v13 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2); this.mRootWindowContainer.forAllDisplays(v13);","ActivityTaskManagerService$$ExternalSyntheticLambda1 v26 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1); this.mRootWindowContainer.forAllDisplays(v26);",0.9871390461921692
setLockScreenShown(ZZ)V,finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V,"ActivityTaskManagerService$$ExternalSyntheticLambda11 v13 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2); this.mRootWindowContainer.forAllDisplays(v13);","RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1); WindowContainer.forAllRootTasks(v6, 1);",0.8326556086540222
registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V,setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V,this.mRemoteAnimationDefinition = p1;,this.mRunningRemoteAnimation = 1; WindowProcessController.updateRunningRemoteOrRecentsAnimation();,0.7392226457595825
registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V,setTaskResizeable(II)V,this.mRemoteAnimationDefinition = p1;,this.mResizeMode = p2;,0.7117239832878113
updateLockTaskPackages(I[Ljava/lang/String;)V,updateLockTaskFeatures(II)V,"this.mLockTaskPackages.put(p1, p2);","int v27 = this.mLockTaskFeatures.get(p1, 0); this.mLockTaskFeatures.put(p1, p2);",0.8173211812973022
updateLockTaskPackages(I[Ljava/lang/String;)V,setLong(Ljava/lang/String;JI)V,"this.mLockTaskPackages.put(p1, p2);","String v4 = Long.toString(p2); LockSettingsStorage.writeKeyValue(p1, v4, p3);",0.6719202399253845
setPackageScreenCompatMode(Ljava/lang/String;I)V,getPackageScreenCompatMode(Ljava/lang/String;)I,"IPackageManager v7 = ActivityThread.getPackageManager(); ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);","IPackageManager v9 = ActivityThread.getPackageManager(); ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0); CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction); boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction); int v11 = v15; return v7;",0.8786119818687439
setPackageScreenCompatMode(Ljava/lang/String;I)V,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,"IPackageManager v7 = ActivityThread.getPackageManager(); ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);",ComponentName v25 = p4.getComponent(); boolean v26 = ActivityRecord.mActivityComponent.equals(v25);,0.7265139222145081
setFrontActivityScreenCompatMode(I)V,isTopActivityImmersive()Z,"WindowContainer v8 = RootWindowContainer.getChildAt(phiInstruction); Task v9 = v8.getFocusedRootTask(); ActivityRecord v12 = TaskFragment.topRunningActivity(0, 1);","int v9 = RootWindowContainer.getChildCount(); WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction); Task v11 = v10.getFocusedRootTask(); ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);",0.9480879902839661
setFrontActivityScreenCompatMode(I)V,isAssistDataAllowedOnCurrentActivity()Z,"WindowContainer v8 = RootWindowContainer.getChildAt(phiInstruction); Task v9 = v8.getFocusedRootTask(); ActivityRecord v12 = TaskFragment.topRunningActivity(0, 1);",int v6 = RootWindowContainer.getChildCount(); WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction); Task v8 = v7.getFocusedRootTask(); boolean v9 = v4.isActivityTypeAssistant();,0.8842693567276001
suppressResizeConfigChanges(Z)V,setTaskResizeable(II)V,this.mSuppressResizeConfigChanges = p1;,this.mResizeMode = p2;,0.8231872916221619
suppressResizeConfigChanges(Z)V,registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V,this.mSuppressResizeConfigChanges = p1;,this.mRemoteAnimationDefinition = p1;,0.6615422368049622
getVoiceInteractorPackageName(Landroid/os/IBinder;)Ljava/lang/String;,supportsLocalVoiceInteraction()Z,Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class); Object v1 = v2; String v3 = v1.getVoiceInteractorPackageName(p1); return v3;,Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class); Object v1 = v2; boolean v3 = v1.supportsLocalVoiceInteraction(); return v3;,0.8775229454040527
getVoiceInteractorPackageName(Landroid/os/IBinder;)Ljava/lang/String;,startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class); Object v1 = v2; String v3 = v1.getVoiceInteractorPackageName(p1); return v3;,"int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p12, 0, 0, ""startVoiceActivity"", 0); ActivityStarter$Request.intent = p1; ActivityStarter v10 = v6.setCallingUid(p4); ActivityStarter v11 = v10.setCallingPackage(p1); SafeActivityOptions v20 = new SafeActivityOptions(v21); int v26 = v25.execute(); return v26;",0.6606303453445435
setActivityController(Landroid/app/IActivityController;Z)V,reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V,this.mController = p1; this.mControllerIsAMonkey = p2; v5.setActivityController(p1);,p3.setTaskId(Task.mTaskId); p3.setActivityComponent(ActivityRecord.mActivityComponent); p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);,0.7361018061637878
setActivityController(Landroid/app/IActivityController;Z)V,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,this.mController = p1; this.mControllerIsAMonkey = p2; v5.setActivityController(p1);,"int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, ""startActivityFromGameSession"", 0); ActivityStarter v23 = v22.setUserId(v9);",0.7058811187744141
startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,ActivityOptions v5 = new ActivityOptions(p1); SafeActivityOptions v3 = new SafeActivityOptions(v4);,ActivityOptions v4 = ActivityOptions.fromBundle(p11); SafeActivityOptions v3 = new SafeActivityOptions(v4);,0.896401047706604
startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z,startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I,ActivityOptions v5 = new ActivityOptions(p1); SafeActivityOptions v3 = new SafeActivityOptions(v4);,ActivityOptions v18 = ActivityOptions.fromBundle(p1); SafeActivityOptions v17 = new SafeActivityOptions(v18);,0.8855836391448975
setFocusedTask(I)V,onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V,"Task v17 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0); Task v16 = v17; this.mFocusedApp = p2;","Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0); boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.819614589214325
setFocusedTask(I)V,getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;,"Task v17 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0); Task v16 = v17; this.mFocusedApp = p2;","Task v36 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0); int v42 = TaskSnapshotController.getSnapshotMode(v35);",0.8104856610298157
setFocusedRootTask(I)V,moveTaskToRootTask(IIZ)V,Long v6 = Long.valueOf(p1); DisplayContent$$ExternalSyntheticLambda6 v31 = new DisplayContent$$ExternalSyntheticLambda6(p1); Task v33 = DisplayContent.getRootTask(v31); this.mFocusedApp = p0;,"Task v11 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0); DisplayContent$$ExternalSyntheticLambda6 v36 = new DisplayContent$$ExternalSyntheticLambda6(p1); Task v38 = DisplayContent.getRootTask(v36);",0.7995944023132324
setFocusedRootTask(I)V,moveTaskToRootTask(IIZ)V,Long v6 = Long.valueOf(p1); DisplayContent$$ExternalSyntheticLambda6 v31 = new DisplayContent$$ExternalSyntheticLambda6(p1); Task v33 = DisplayContent.getRootTask(v31); this.mFocusedApp = p0;,"Task v11 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0); DisplayContent$$ExternalSyntheticLambda6 v36 = new DisplayContent$$ExternalSyntheticLambda6(p1); Task v38 = DisplayContent.getRootTask(v36);",0.7995944023132324
takeTaskSnapshot(I)Landroid/window/TaskSnapshot;,startSystemLockTaskMode(I)V,"PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11); Task v13 = RootWindowContainer.getTask(v12); RenderNode v47 = RenderNode.create(""TaskSnapshotController"", 0); Bitmap v55 = ThreadedRenderer.createHardwareBitmap(v47, (v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale)); return phiInstruction;","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.8754661083221436
takeTaskSnapshot(I)Landroid/window/TaskSnapshot;,cancelTaskWindowTransition(I)V,"PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11); Task v13 = RootWindowContainer.getTask(v12); RenderNode v47 = RenderNode.create(""TaskSnapshotController"", 0); Bitmap v55 = ThreadedRenderer.createHardwareBitmap(v47, (v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale)); return phiInstruction;","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.8747807145118713
startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,SafeActivityOptions v27 = new SafeActivityOptions(v28); ActivityOptions v28 = ActivityOptions.fromBundle(p11); ActivityStarter$Request.activityOptions = v26;,ActivityOptions v6 = new ActivityOptions(); Bundle v24 = v5.toBundle(); SafeActivityOptions v27 = new SafeActivityOptions(v28); ActivityOptions v28 = ActivityOptions.fromBundle(p1); ActivityStarter$Request.activityOptions = v26;,0.9293187856674194
startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,ActivityStarter v16 = v12.setCaller(p1); ActivityStarter v17 = v16.setCallingPackage(p2); ActivityStarter v18 = v17.setCallingFeatureId(p3); ActivityStarter v19 = v18.setResolvedType(p5); ActivityStarter v20 = v19.setResultTo(p6); ActivityStarter v21 = v20.setResultWho(p7); ActivityStarter v22 = v21.setRequestCode(p8); ActivityStarter v23 = v22.setStartFlags(p9); ActivityStarter v24 = v23.setGlobalConfiguration(p10);,ActivityStarter v17 = v13.setCaller(p1); ActivityStarter v18 = v17.setCallingUid(p5); ActivityStarter v19 = v18.setCallingPid(p4); ActivityStarter v21 = v19.setCallingPackage(v20); ActivityStarter v22 = v21.setCallingFeatureId(p3);,0.9195818305015564
getRecentTasks(III)Landroid/content/pm/ParceledListSlice;,startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I,"int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0); boolean v31 = RecentTasks.isUserRunning(p4, 4); RecentTasks.loadUserRecentsLocked(p4); Set v33 = RecentTasks.getProfileIds(p4); Integer v34 = Integer.valueOf(p4); boolean v35 = v33.add(v34); ArrayList v36 = new ArrayList(); int v38 = this.mTasks.size(); ArrayList v30 = v36; ParceledListSlice v29 = new ParceledListSlice(v30); return v28;","int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p8, 0, 0, ""startActivities"", 0); ActivityStartController v11 = this.mActivityStartController; int v18 = v11.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v12, v9, ""startActivities"", 0, 0); return v18;",0.8113180994987488
getRecentTasks(III)Landroid/content/pm/ParceledListSlice;,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,"int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0); boolean v31 = RecentTasks.isUserRunning(p4, 4); RecentTasks.loadUserRecentsLocked(p4); Set v33 = RecentTasks.getProfileIds(p4); Integer v34 = Integer.valueOf(p4); boolean v35 = v33.add(v34); ArrayList v36 = new ArrayList(); int v38 = this.mTasks.size(); ArrayList v30 = v36; ParceledListSlice v29 = new ParceledListSlice(v30); return v28;","int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, ""startActivityFromGameSession"", 0); ActivityStarter v23 = v22.setUserId(v9);",0.8050513863563538
stopSystemLockTaskMode()V,getPackageScreenCompatMode(Ljava/lang/String;)I,"LockTaskController v14 = this.mLockTaskController; LockTaskController.clearLockedTask(phiInstruction); Object v19 = this.mContext.getSystemService(""telecom""); ITelecomService v21 = TelecomManager.getTelecomService(); String v22 = this.mContext.getOpPackageName(); String v23 = this.mContext.getAttributionTag(); v21.showInCallScreen(0, v22, v23);","IPackageManager v9 = ActivityThread.getPackageManager(); ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0); CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction); boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction); int v11 = v15; return v7;",0.6768039464950562
stopSystemLockTaskMode()V,applyRestore([BI)V,"LockTaskController v14 = this.mLockTaskController; LockTaskController.clearLockedTask(phiInstruction); Object v19 = this.mContext.getSystemService(""telecom""); ITelecomService v21 = TelecomManager.getTelecomService(); String v22 = this.mContext.getOpPackageName(); String v23 = this.mContext.getAttributionTag(); v21.showInCallScreen(0, v22, v23);","boolean v5 = p0.isUserUnlockedL(p2); ShortcutUser v26 = p0.loadUserInternal(p2, v24, 1); this.mLastLockedUser = p2; Object v36 = this.mUsers.get(p2); v42.saveToXml(phiInstruction, 0);",0.6627853512763977
getFrontActivityScreenCompatMode()I,getPackageScreenCompatMode(Ljava/lang/String;)I,"boolean v17 = CompatModePackages.getPackageCompatModeEnabledLocked(p1); float v18 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid); CompatibilityInfo v20 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v17,v18);","IPackageManager v9 = ActivityThread.getPackageManager(); ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0); CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction); boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction); int v11 = v15; return v7;",0.7800592184066772
getFrontActivityScreenCompatMode()I,setPackageScreenCompatMode(Ljava/lang/String;I)V,"boolean v17 = CompatModePackages.getPackageCompatModeEnabledLocked(p1); float v18 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid); CompatibilityInfo v20 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v17,v18);","IPackageManager v7 = ActivityThread.getPackageManager(); ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);",0.6847674250602722
resizeTask(ILandroid/graphics/Rect;I)Z,startSystemLockTaskMode(I)V,"PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9896436333656311
resizeTask(ILandroid/graphics/Rect;I)Z,cancelTaskWindowTransition(I)V,"PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9830618500709534
onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V,moveRootTaskToDisplay(II)V,"TaskDisplayArea v5 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea(); Task v6 = v3.getRootPinnedTask(); ActivityRecord v11 = WindowContainer.getActivity(v8, 1, 0);","TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea(); Task v33 = RootWindowContainer.getRootTask(p1); TaskDisplayArea v34 = v33.getDisplayArea(); v33.reparent(v30, p3);",0.9157419800758362
onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,"TaskDisplayArea v5 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea(); Task v6 = v3.getRootPinnedTask(); ActivityRecord v11 = WindowContainer.getActivity(v8, 1, 0);","TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea(); Task v22 = v21.getRootTask(0, phiInstruction); ActivityRecord v23 = v22.topRunningActivity(); boolean v24 = v23.attachedToProcess();",0.8763542175292969
startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I,"int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p12, 0, 0, ""startVoiceActivity"", 0); ActivityStarter$Request.intent = p1; ActivityStarter v10 = v6.setCallingUid(p4); ActivityStarter v11 = v10.setCallingPackage(p1); SafeActivityOptions v20 = new SafeActivityOptions(v21); int v26 = v25.execute(); return v26;","int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p12, 0, 0, ""startActivityWithConfig"", 0); int v9 = v10; ActivityStarter v31 = v25.setUserId(v9);",0.8691181540489197
startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,"int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p12, 0, 0, ""startVoiceActivity"", 0); ActivityStarter$Request.intent = p1; ActivityStarter v10 = v6.setCallingUid(p4); ActivityStarter v11 = v10.setCallingPackage(p1); SafeActivityOptions v20 = new SafeActivityOptions(v21); int v26 = v25.execute(); return v26;","int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, ""startActivityFromGameSession"", 0); ActivityStarter v23 = v22.setUserId(v9);",0.8534073829650879
releaseSomeActivities(Landroid/app/IApplicationThread;)V,addHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,IBinder v6 = p1.asBinder(); ArrayMap v7 = this.mMap; Object v9 = v7.valueAt(phiInstruction);,"IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0);",0.6922414302825928
releaseSomeActivities(Landroid/app/IApplicationThread;)V,showInputMethodPickerFromClient(Lcom/android/internal/view/IInputMethodClient;I)V,IBinder v6 = p1.asBinder(); ArrayMap v7 = this.mMap; Object v9 = v7.valueAt(phiInstruction);,IBinder v15 = InputMethodManagerService$ClientState.client.asBinder(); IBinder v16 = p1.asBinder();,0.660251796245575
updateConfiguration(Landroid/content/res/Configuration;)Z,moveRootTaskToDisplay(II)V,"DisplayContent v11 = this.mRoot.getDisplayContent(p1); v11.computeScreenConfiguration(v9); boolean v22 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);","DisplayContent v25 = RootWindowContainer.getDisplayContent(p2); Display v26 = this.mDisplayManager.getDisplay(p2); Task v33 = RootWindowContainer.getRootTask(p1); v33.reparent(v30, p3);",0.6676157712936401
updateConfiguration(Landroid/content/res/Configuration;)Z,getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;,"DisplayContent v11 = this.mRoot.getDisplayContent(p1); v11.computeScreenConfiguration(v9); boolean v22 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);","ActivityTaskManager$RootTaskInfo v20 = new ActivityTaskManager$RootTaskInfo(); v15.fillTaskInfo(v20); DisplayContent v23 = v15.getDisplayContent(); boolean v28 = v23.forAllRootTasks(v26, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v29 = v15.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v29; v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds); return phiInstruction;",0.6612369418144226
startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I,showInputMethodPickerFromSystem(Lcom/android/internal/view/IInputMethodClient;II)V,"int v34 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11); return v34;","Message v2 = this.mHandler.obtainMessage(1, p2, p3); v2.sendToTarget();",0.7107431888580322
startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I,reportSuccessfulBiometricUnlock(ZI)V,"int v34 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11); return v34;","Message v4 = this.mHandler.obtainMessage(8, p2, 0); v4.sendToTarget();",0.6988714933395386
supportsLocalVoiceInteraction()Z,getVoiceInteractorPackageName(Landroid/os/IBinder;)Ljava/lang/String;,Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class); Object v1 = v2; boolean v3 = v1.supportsLocalVoiceInteraction(); return v3;,Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class); Object v1 = v2; String v3 = v1.getVoiceInteractorPackageName(p1); return v3;,0.8775229454040527
supportsLocalVoiceInteraction()Z,startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class); Object v1 = v2; boolean v3 = v1.supportsLocalVoiceInteraction(); return v3;,"int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p12, 0, 0, ""startVoiceActivity"", 0); ActivityStarter$Request.intent = p1; ActivityStarter v10 = v6.setCallingUid(p4); ActivityStarter v11 = v10.setCallingPackage(p1); SafeActivityOptions v20 = new SafeActivityOptions(v21); int v26 = v25.execute(); return v26;",0.668394148349762
startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,"SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p11); ActivityOptions v5 = v4.getOriginalOptions(); ActivityOptions v12 = v4.getOriginalOptions(); boolean v13 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v12);",ActivityOptions v4 = ActivityOptions.fromBundle(p11); SafeActivityOptions v3 = new SafeActivityOptions(v4);,0.861957311630249
startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I,startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I,"SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p11); ActivityOptions v5 = v4.getOriginalOptions(); ActivityOptions v12 = v4.getOriginalOptions(); boolean v13 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v12);",ActivityOptions v18 = ActivityOptions.fromBundle(p1); SafeActivityOptions v17 = new SafeActivityOptions(v18);,0.8479798436164856
setPersistentVrThread(I)V,getLastResumedActivityUserId()I,"boolean v13 = Process.isThreadInProcess(p2, p1);",int v5 = p0.getCurrentUserId(); return v5;,0.6741249561309814
setPersistentVrThread(I)V,startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I,"boolean v13 = Process.isThreadInProcess(p2, p1);","int v34 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11); return v34;",0.6599078178405762
getWindowOrganizerController()Landroid/window/IWindowOrganizerController;,getActivityClientController()Landroid/app/IActivityClientController;,return this.mWindowOrganizerController;,return this.mActivityClientController;,0.6789901256561279
getWindowOrganizerController()Landroid/window/IWindowOrganizerController;,resizeTask(ILandroid/graphics/Rect;I)Z,return this.mWindowOrganizerController;,this.mLayoutReasons = 0; WindowManagerService.mWindowPlacerLocked.deferLayout(); int v50 = Task.setBounds(p1); this.mRotation = phiInstruction;,0.6282981038093567
getPackageAskScreenCompat(Ljava/lang/String;)Z,setPackageAskScreenCompat(Ljava/lang/String;Z)V,Object v9 = this.mPackages.get(p1); int v10 = v9.intValue();,"int v7 = CompatModePackages.getPackageFlags(p1); Integer v8 = Integer.valueOf(phiInstruction); Object v9 = this.mPackages.put(p1, v8); CompatModePackages.scheduleWrite();",0.724561333656311
getPackageAskScreenCompat(Ljava/lang/String;)Z,clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V,Object v9 = this.mPackages.get(p1); int v10 = v9.intValue();,Object v19 = this.mConfigs.get(p1); String v20 = v19.getProvisioningPackageName(); boolean v21 = p2.equals(v20);,0.7238399982452393
startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I,startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I,"int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p8, 0, 0, ""startActivities"", 0); ActivityStartController v11 = this.mActivityStartController; int v18 = v11.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v12, v9, ""startActivities"", 0, 0); return v18;","int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, ""startActivityFromGameSession"", 0); ActivityStarter v23 = v22.setUserId(v9);",0.885346531867981
startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I,releaseTvInputHardware(ILandroid/media/tv/ITvInputHardware;I)V,"int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p8, 0, 0, ""startActivities"", 0); ActivityStartController v11 = this.mActivityStartController; int v18 = v11.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v12, v9, ""startActivities"", 0, 0); return v18;","int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); int v7 = v8; int v6 = v7;",0.8772702813148499
removeTask(I)Z,resizeTask(ILandroid/graphics/Rect;I)Z,"AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2(); Task$$ExternalSyntheticLambda2 v33 = new Task$$ExternalSyntheticLambda2(Task,0,p4);",AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2(); Task$$ExternalSyntheticLambda6 v56 = new Task$$ExternalSyntheticLambda6();,0.9779946208000183
removeTask(I)Z,setTaskResizeable(II)V,"PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11); Task v13 = RootWindowContainer.getTask(v12); this.mRecentTasks.remove(p1);","PooledPredicate v10 = PooledLambda.obtainPredicate(v6, v8, v9); Task v11 = RootWindowContainer.getTask(v10); v10.recycle(); Task v13 = RootWindowContainer.getOrCreateRootTask(0, 0, v11, 0);",0.9135651588439941
isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z,startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I,"ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5); ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0); ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4); boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4); DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);","int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p8, 0, 0, ""startActivities"", 0); ActivityStartController v11 = this.mActivityStartController; int v18 = v11.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v12, v9, ""startActivities"", 0, 0); return v18;",0.7225422859191895
isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z,setFocusedTask(I)V,"ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5); ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0); ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4); boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4); DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);","boolean v32 = WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord); boolean v33 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);",0.7117499113082886
moveRootTaskToDisplay(II)V,onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V,"TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea(); Task v33 = RootWindowContainer.getRootTask(p1); TaskDisplayArea v34 = v33.getDisplayArea(); v33.reparent(v30, p3);","TaskDisplayArea v5 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea(); Task v6 = v3.getRootPinnedTask(); ActivityRecord v11 = WindowContainer.getActivity(v8, 1, 0);",0.9157419800758362
moveRootTaskToDisplay(II)V,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,"TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea(); Task v33 = RootWindowContainer.getRootTask(p1); TaskDisplayArea v34 = v33.getDisplayArea(); v33.reparent(v30, p3);","TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea(); Task v22 = v21.getRootTask(0, phiInstruction); ActivityRecord v23 = v22.topRunningActivity(); boolean v24 = v23.attachedToProcess();",0.8611271381378174
startActivityFromRecents(ILandroid/os/Bundle;)I,startConsentActivity([ILjava/lang/String;)V,"int v11 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4); return v11;","IActivityTaskManager v18 = this.IActivityTaskManagerSingleton.get(); ParceledListSlice v20 = v18.getRecentTasks(1, 0, v17); List v21 = v20.getList(); Object v24 = v23.get(0);",0.7463093400001526
startActivityFromRecents(ILandroid/os/Bundle;)I,getRecentTasks(III)Landroid/content/pm/ParceledListSlice;,"int v11 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4); return v11;","int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0); boolean v31 = RecentTasks.isUserRunning(p4, 4); RecentTasks.loadUserRecentsLocked(p4); Set v33 = RecentTasks.getProfileIds(p4); Integer v34 = Integer.valueOf(p4); boolean v35 = v33.add(v34); ArrayList v36 = new ArrayList(); int v38 = this.mTasks.size(); ArrayList v30 = v36; ParceledListSlice v29 = new ParceledListSlice(v30); return v28;",0.7428728342056274
getLockTaskModeState()I,isInLockTaskMode()Z,int v2 = this.mLockTaskModeState; return v2;,int v3 = this.mLockTaskModeState; int v1 = v3; return phiInstruction;,0.818172812461853
getLockTaskModeState()I,startSystemLockTaskMode(I)V,int v2 = this.mLockTaskModeState; return v2;,int v58 = Binder.getCallingUid(); Task.mLockTaskUid = v58;,0.7693300247192383
getAppTasks(Ljava/lang/String;)Ljava/util/List;,No similar EPs with similarity > 0.8,,,
isInLockTaskMode()Z,getClientPid(Ljava/lang/String;)I,int v3 = this.mLockTaskModeState; int v1 = v3; return phiInstruction;,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,0.8318285346031189
isInLockTaskMode()Z,getLockTaskModeState()I,int v3 = this.mLockTaskModeState; int v1 = v3; return phiInstruction;,int v2 = this.mLockTaskModeState; return v2;,0.818172812461853
registerTaskStackListener(Landroid/app/ITaskStackListener;)V,setAutoPersisting(Ljava/lang/String;Z)V,p1.setIsLocal();,"v4.setAutoPersisting(p1, p2);",0.6473550796508789
registerTaskStackListener(Landroid/app/ITaskStackListener;)V,setPersistentVrThread(I)V,p1.setIsLocal();,"boolean v13 = Process.isThreadInProcess(p2, p1);",0.6412867903709412
isAssistDataAllowedOnCurrentActivity()Z,isTopActivityImmersive()Z,int v6 = RootWindowContainer.getChildCount(); WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction); Task v8 = v7.getFocusedRootTask(); boolean v9 = v4.isActivityTypeAssistant();,"int v9 = RootWindowContainer.getChildCount(); WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction); Task v11 = v10.getFocusedRootTask(); ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);",0.9364264011383057
isAssistDataAllowedOnCurrentActivity()Z,unhandledBack()V,int v6 = RootWindowContainer.getChildCount(); WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction); Task v8 = v7.getFocusedRootTask(); boolean v9 = v4.isActivityTypeAssistant();,"int v8 = RootWindowContainer.getChildCount(); WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction); Task v10 = v9.getFocusedRootTask(); WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2(); ActivityRecord v15 = WindowContainer.getActivity(v13, 1); int v17 = ActivityRecord.finishIfPossible(0, 0, 0, ""unhandled-back"", 1);",0.8979328870773315
setTaskResizeable(II)V,onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V,"PooledPredicate v10 = PooledLambda.obtainPredicate(v6, v8, v9); Task v11 = RootWindowContainer.getTask(v10); v10.recycle(); Task v13 = RootWindowContainer.getOrCreateRootTask(0, 0, v11, 0);","PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10); Task v12 = RootWindowContainer.getTask(v11);",0.9618838429450989
setTaskResizeable(II)V,startSystemLockTaskMode(I)V,"PooledPredicate v10 = PooledLambda.obtainPredicate(v6, v8, v9); Task v11 = RootWindowContainer.getTask(v10); v10.recycle(); Task v13 = RootWindowContainer.getOrCreateRootTask(0, 0, v11, 0);","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9422319531440735
startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;,detachNavigationBarFromApp(Landroid/os/IBinder;)V,RecentsAnimationController v18 = this.mRecentsAnimationController; boolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents(); boolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord); boolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);,"TransitionController v7 = this.mTransitionController; boolean v10 = this.mPlayingTransitions.contains(v9); this.mNavBarAttachedToApp = 0; this.mRecentsDisplayId = 0; TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1); DisplayContent v14 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId); DisplayPolicy v15 = v14.getDisplayPolicy(); WindowState v16 = v15.getNavigationBar(); v16.setSurfaceTranslationY(0);",0.7415562272071838
startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;,captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z,this.mFocusObserver = p2; BackNavigationInfo$Builder v4 = new BackNavigationInfo$Builder(); IBinder v10 = v8.getFocusedWindowToken(); Object v14 = this.mWindowsByFocusToken.get(v10); EmbeddedWindowController$EmbeddedWindow v13 = v14;,"TvInputHardwareManager$2 v46 = new TvInputHardwareManager$2(TvInputHardwareManager,v40,p3); this.mOnFirstFrameCaptured = v46;",0.7250338196754456
getPackageScreenCompatMode(Ljava/lang/String;)I,setPackageScreenCompatMode(Ljava/lang/String;I)V,"IPackageManager v9 = ActivityThread.getPackageManager(); ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0); CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction); boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction); int v11 = v15; return v7;","IPackageManager v7 = ActivityThread.getPackageManager(); ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);",0.8786119818687439
getPackageScreenCompatMode(Ljava/lang/String;)I,getFrontActivityScreenCompatMode()I,"IPackageManager v9 = ActivityThread.getPackageManager(); ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0); CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction); boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction); int v11 = v15; return v7;","boolean v17 = CompatModePackages.getPackageCompatModeEnabledLocked(p1); float v18 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid); CompatibilityInfo v20 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v17,v18);",0.7800592184066772
setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V,addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V,IBinder v5 = p1.asBinder(); this.mVoiceWakeLock.acquire();,"IBinder v8 = p1.asBinder(); v8.linkToDeath(LockoutResetDispatcher, 0);",0.7360208630561829
setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V,showInputMethodPickerFromClient(Lcom/android/internal/view/IInputMethodClient;I)V,IBinder v5 = p1.asBinder(); this.mVoiceWakeLock.acquire();,IBinder v15 = InputMethodManagerService$ClientState.client.asBinder(); IBinder v16 = p1.asBinder();,0.6901387572288513
startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,ActivityOptions v18 = ActivityOptions.fromBundle(p1); SafeActivityOptions v17 = new SafeActivityOptions(v18);,ActivityOptions v4 = ActivityOptions.fromBundle(p11); SafeActivityOptions v3 = new SafeActivityOptions(v4);,0.9744364023208618
startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I,startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;,ActivityStarter v8 = this.mFactory.obtain(); ActivityStarter$Request.intent = p1; ActivityStarter v11 = v7.setCallingUid(p4); ActivityStarter v12 = v11.setCallingPackage(p1); int v23 = v22.execute(); return v23;,ActivityStarter v15 = this.mFactory.obtain(); ActivityStarter$Request.intent = p1; ActivityStarter v18 = v14.setCaller(p1); ... ActivityStarter v34 = v33.setWaitResult(v4);,0.9143298864364624
unhandledBack()V,isTopActivityImmersive()Z,"int v8 = RootWindowContainer.getChildCount(); WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction); Task v10 = v9.getFocusedRootTask(); WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2(); ActivityRecord v15 = WindowContainer.getActivity(v13, 1); int v17 = ActivityRecord.finishIfPossible(0, 0, 0, ""unhandled-back"", 1);","int v9 = RootWindowContainer.getChildCount(); WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction); Task v11 = v10.getFocusedRootTask(); ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);",0.9074879884719849
unhandledBack()V,isAssistDataAllowedOnCurrentActivity()Z,"int v8 = RootWindowContainer.getChildCount(); WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction); Task v10 = v9.getFocusedRootTask(); WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2(); ActivityRecord v15 = WindowContainer.getActivity(v13, 1); int v17 = ActivityRecord.finishIfPossible(0, 0, 0, ""unhandled-back"", 1);",int v6 = RootWindowContainer.getChildCount(); WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction); Task v8 = v7.getFocusedRootTask(); boolean v9 = v4.isActivityTypeAssistant();,0.8979328870773315
keyguardGoingAway(I)V,setLockScreenShown(ZZ)V,"ActivityTaskManagerService$$ExternalSyntheticLambda1 v26 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1); this.mRootWindowContainer.forAllDisplays(v26);","ActivityTaskManagerService$$ExternalSyntheticLambda11 v13 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2); this.mRootWindowContainer.forAllDisplays(v13);",0.9871390461921692
keyguardGoingAway(I)V,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,long v4 = Binder.clearCallingIdentity(); Binder.restoreCallingIdentity(v4);,int v1 = Binder.getCallingUid(); long v6 = Binder.clearCallingIdentity(); Binder.restoreCallingIdentity(v6);,0.9580044746398926
getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;,getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;,Bitmap v19 = TaskPersister.getImageFromWriteQueue(p1); return v17;,"Task v36 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0); int v42 = TaskSnapshotController.getSnapshotMode(v35);",0.6766468286514282
getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;,getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;,Bitmap v20 = TaskPersister.restoreImage(p1); return v17;,"PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11); Task v13 = RootWindowContainer.getTask(v12); v12.recycle(); TaskSnapshot v29 = TaskSnapshotCache.tryRestoreFromDisk(p1, p2, phiInstruction); return phiInstruction;",0.6651914715766907
getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;,getTaskBounds(I)Landroid/graphics/Rect;,"ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()""); AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2(); Integer v10 = Integer.valueOf(p1); PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10); Task v12 = RootWindowContainer.getTask(v11); v11.recycle(); Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0); boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId""); ActivityManager$TaskDescription v17 = v5.getTaskDescription(); return v17;","long v5 = Binder.clearCallingIdentity(); PooledPredicate v17 = PooledLambda.obtainPredicate(v13, v15, v16); Task v18 = RootWindowContainer.getTask(v17); v17.recycle(); Task v20 = RootWindowContainer.getOrCreateRootTask(0, 0, v18, 0); boolean v22 = v18.reparent(v20, 0, phiInstruction, 1, 1, ""anyTaskForId""); Rect v6 = new Rect(); return v6;",0.8395917415618896
getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;,startSystemLockTaskMode(I)V,"ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()""); AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2(); Integer v10 = Integer.valueOf(p1); PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10); Task v12 = RootWindowContainer.getTask(v11); v11.recycle(); Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0); boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId""); ActivityManager$TaskDescription v17 = v5.getTaskDescription(); return v17;","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.8321067690849304
unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V,unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,boolean v4 = this.mLocalTaskStackListeners.remove(p1);,boolean v7 = this.mListeners.unregister(p1); return v6;,0.6784818172454834
unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V,removeTask(I)Z,boolean v4 = this.mLocalTaskStackListeners.remove(p1);,"PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11); Task v13 = RootWindowContainer.getTask(v12); this.mRecentTasks.remove(p1);",0.6518515944480896
getActivityClientController()Landroid/app/IActivityClientController;,getWindowOrganizerController()Landroid/window/IWindowOrganizerController;,return this.mActivityClientController;,return this.mWindowOrganizerController;,0.6789901256561279
getActivityClientController()Landroid/app/IActivityClientController;,setActivityController(Landroid/app/IActivityController;Z)V,return this.mActivityClientController;,this.mController = p1; this.mControllerIsAMonkey = p2; v5.setActivityController(p1);,0.6454296112060547
getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;,getActiveSource()Landroid/hardware/hdmi/HdmiDeviceInfo;,ConfigurationInfo v1 = new ConfigurationInfo(); ConfigurationInfo.reqTouchScreen = Configuration.touchscreen; ConfigurationInfo.reqKeyboardType = Configuration.keyboard; ConfigurationInfo.reqNavigation = Configuration.navigation; ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2); ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures); ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION; return v1;,"int v18 = this.mHdmiCecNetwork.physicalAddressToPortId(HdmiCecLocalDevice$ActiveSource.physicalAddress); HdmiDeviceInfo$Builder v20 = new HdmiDeviceInfo$Builder(2,0); HdmiDeviceInfo$Builder v22 = v20.setPhysicalAddress(HdmiCecLocalDevice$ActiveSource.physicalAddress); HdmiDeviceInfo$Builder v23 = v22.setPortId(v17); HdmiDeviceInfo$Builder v24 = v23.setVendorId(0); StringBuilder v25 = new StringBuilder(); StringBuilder v27 = v25.append(""HDMI""); StringBuilder v28 = v27.append(v17); String v29 = v28.toString(); HdmiDeviceInfo$Builder v30 = v24.setDisplayName(v29); HdmiDeviceInfo v31 = v30.build();",0.6198952198028564
getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;,addHardwareDevice(I)V,ConfigurationInfo v1 = new ConfigurationInfo(); ConfigurationInfo.reqTouchScreen = Configuration.touchscreen; ConfigurationInfo.reqKeyboardType = Configuration.keyboard; ConfigurationInfo.reqNavigation = Configuration.navigation; ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2); ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures); ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION; return v1;,TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder(); TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32); TvInputHardwareInfo v36 = v35.build(); this.mHardwareInfo = v36;,0.5943714380264282
detachNavigationBarFromApp(Landroid/os/IBinder;)V,startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;,"TransitionController v7 = this.mTransitionController; boolean v10 = this.mPlayingTransitions.contains(v9); this.mNavBarAttachedToApp = 0; this.mRecentsDisplayId = 0; TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1); DisplayContent v14 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId); DisplayPolicy v15 = v14.getDisplayPolicy(); WindowState v16 = v15.getNavigationBar(); v16.setSurfaceTranslationY(0);",RecentsAnimationController v18 = this.mRecentsAnimationController; boolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents(); boolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord); boolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);,0.7415562272071838
detachNavigationBarFromApp(Landroid/os/IBinder;)V,togglePanel()V,"TransitionController v7 = this.mTransitionController; boolean v10 = this.mPlayingTransitions.contains(v9); this.mNavBarAttachedToApp = 0; this.mRecentsDisplayId = 0; TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1); DisplayContent v14 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId); DisplayPolicy v15 = v14.getDisplayPolicy(); WindowState v16 = v15.getNavigationBar(); v16.setSurfaceTranslationY(0);",Object v19 = this.mDisplayUiState.get(0); int v21 = v19.getDisabled2(); this.mBar.togglePanel();,0.6557348370552063
getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;,moveRootTaskToDisplay(II)V,"DisplayContent v11 = RootWindowContainer.getDisplayContent(p3); Task v12 = v11.getRootTask(p1, p2); ActivityTaskManager$RootTaskInfo v14 = new ActivityTaskManager$RootTaskInfo(); v10.fillTaskInfo(v14); v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds); int v25 = v10.getDescendantTaskCount(); ActivityTaskManager$RootTaskInfo.childTaskIds = v26; ActivityTaskManager$RootTaskInfo.childTaskNames = v27; ActivityTaskManager$RootTaskInfo.childTaskBounds = v28; ActivityTaskManager$RootTaskInfo.childTaskUserIds = v29; return v9;","DisplayContent v25 = RootWindowContainer.getDisplayContent(p2); Display v26 = this.mDisplayManager.getDisplay(p2); Task v33 = RootWindowContainer.getRootTask(p1); v33.reparent(v30, p3);",0.8579983711242676
getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;,getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;,"DisplayContent v11 = RootWindowContainer.getDisplayContent(p3); Task v12 = v11.getRootTask(p1, p2); ActivityTaskManager$RootTaskInfo v14 = new ActivityTaskManager$RootTaskInfo(); v10.fillTaskInfo(v14); v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds); int v25 = v10.getDescendantTaskCount(); ActivityTaskManager$RootTaskInfo.childTaskIds = v26; ActivityTaskManager$RootTaskInfo.childTaskNames = v27; ActivityTaskManager$RootTaskInfo.childTaskBounds = v28; ActivityTaskManager$RootTaskInfo.childTaskUserIds = v29; return v9;","ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo(); v10.fillTaskInfo(v15); DisplayContent v18 = v10.getDisplayContent(); boolean v23 = v18.forAllRootTasks(v21, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v24 = v10.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v24; v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds); int v26 = v10.getDescendantTaskCount(); [I v27 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskIds = v27; String v28 = new String(v26); ActivityTaskManager$RootTaskInfo.childTaskNames = v28; Rect v29 = new Rect(v26); ActivityTaskManager$RootTaskInfo.childTaskBounds = v29; [I v30 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30; [I v31 = new [I(1); PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31); v10.forAllLeafTasks(v35, 0); ActivityRecord v38 = v10.topRunningActivity(); ComponentName v39 = ActivityRecord.intent.getComponent(); ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction; return v9;",0.7905987501144409
getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;,resizeTask(ILandroid/graphics/Rect;I)Z,"PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11); Task v13 = RootWindowContainer.getTask(v12); v12.recycle(); TaskSnapshot v29 = TaskSnapshotCache.tryRestoreFromDisk(p1, p2, phiInstruction); return phiInstruction;","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9212175607681274
getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;,startSystemLockTaskMode(I)V,"PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11); Task v13 = RootWindowContainer.getTask(v12); v12.recycle(); TaskSnapshot v29 = TaskSnapshotCache.tryRestoreFromDisk(p1, p2, phiInstruction); return phiInstruction;","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.9138574600219727
finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V,getAllRootTaskInfosOnDisplay(I)Ljava/util/List;,"RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1); WindowContainer.forAllRootTasks(v6, 1);","ArrayList v10 = new ArrayList(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;",0.9277772307395935
finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V,getAllRootTaskInfos()Ljava/util/List;,"RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1); WindowContainer.forAllRootTasks(v6, 1);","int v13 = RootWindowContainer.getChildCount(); RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10); WindowContainer.forAllRootTasks(v14, 1); ArrayList v9 = v10; return v9;",0.8752995729446411
stopAppSwitches()V,resumeAppSwitches()V,"this.mAppSwitchesState = 0; long v5 = SystemClock.uptimeMillis(); this.mLastStopAppSwitchesTime = v5; this.mH.removeMessages(4); boolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);",this.mAppSwitchesState = 2;,0.7760653495788574
stopAppSwitches()V,isAssistDataAllowedOnCurrentActivity()Z,"WindowManagerThreadPriorityBooster.boost(); this.mAppSwitchesState = 0; long v6 = SystemClock.uptimeMillis(); this.mLastStopAppSwitchesTime = v6; this.mH.removeMessages(4); boolean v8 = this.mH.sendEmptyMessageDelayed(4, 500);",WindowManagerThreadPriorityBooster.boost();,0.7528609037399292
startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I,ActivityOptions v4 = ActivityOptions.fromBundle(p11); SafeActivityOptions v3 = new SafeActivityOptions(v4);,ActivityOptions v18 = ActivityOptions.fromBundle(p1); SafeActivityOptions v17 = new SafeActivityOptions(v18);,0.9744364023208618
startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I,ActivityOptions v4 = ActivityOptions.fromBundle(p11); SafeActivityOptions v3 = new SafeActivityOptions(v4);,SafeActivityOptions v27 = new SafeActivityOptions(v28); ActivityOptions v28 = ActivityOptions.fromBundle(p11); ActivityStarter$Request.activityOptions = v26;,0.9064031839370728
getTaskBounds(I)Landroid/graphics/Rect;,resizeTask(ILandroid/graphics/Rect;I)Z,"long v5 = Binder.clearCallingIdentity(); PooledPredicate v17 = PooledLambda.obtainPredicate(v13, v15, v16); Task v18 = RootWindowContainer.getTask(v17); v17.recycle(); Task v20 = RootWindowContainer.getOrCreateRootTask(0, 0, v18, 0); boolean v22 = v18.reparent(v20, 0, phiInstruction, 1, 1, ""anyTaskForId""); Rect v6 = new Rect(); return v6;","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.8965012431144714
getTaskBounds(I)Landroid/graphics/Rect;,startSystemLockTaskMode(I)V,"long v5 = Binder.clearCallingIdentity(); PooledPredicate v17 = PooledLambda.obtainPredicate(v13, v15, v16); Task v18 = RootWindowContainer.getTask(v17); v17.recycle(); Task v20 = RootWindowContainer.getOrCreateRootTask(0, 0, v18, 0); boolean v22 = v18.reparent(v20, 0, phiInstruction, 1, 1, ""anyTaskForId""); Rect v6 = new Rect(); return v6;","PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14); Task v16 = RootWindowContainer.getTask(v15); v15.recycle(); Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0); boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");",0.888121485710144
moveTaskToRootTask(IIZ)V,finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V,"Task v12 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0); DisplayContent$$ExternalSyntheticLambda6 v37 = new DisplayContent$$ExternalSyntheticLambda6(p1); Task v39 = DisplayContent.getRootTask(v37);","RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1); WindowContainer.forAllRootTasks(v6, 1);",0.8526061773300171
moveTaskToRootTask(IIZ)V,finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V,"Task v11 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0); DisplayContent$$ExternalSyntheticLambda6 v36 = new DisplayContent$$ExternalSyntheticLambda6(p1); Task v38 = DisplayContent.getRootTask(v36);","RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1); WindowContainer.forAllRootTasks(v6, 1);",0.8524240255355835
removeRootTasksWithActivityTypes([I)V,keyguardGoingAway(I)V,long v8 = Binder.clearCallingIdentity(); int v11 = this.mChildren.size(); Binder.restoreCallingIdentity(v8);,long v4 = Binder.clearCallingIdentity(); Binder.restoreCallingIdentity(v4);,0.7520254254341125
removeRootTasksWithActivityTypes([I)V,startInputOrWindowGainedFocus(ILcom/android/internal/view/IInputMethodClient;Landroid/os/IBinder;IIILandroid/view/inputmethod/EditorInfo;Lcom/android/internal/view/IInputContext;Lcom/android/internal/inputmethod/IRemoteAccessibilityInputConnection;ILandroid/window/ImeOnBackInvokedDispatcher;)Lcom/android/internal/inputmethod/InputBindResult;,long v8 = Binder.clearCallingIdentity(); int v11 = this.mChildren.size(); Binder.restoreCallingIdentity(v8);,"long v7 = Binder.clearCallingIdentity(); InputBindResult v15 = InputMethodManagerService.startInputUncheckedLocked(v10, p8, p9, p7, p4, p1, p10, p11); Binder.restoreCallingIdentity(v7);",0.7393530607223511
alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V,getFrontActivityScreenCompatMode()I,this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);,"boolean v17 = CompatModePackages.getPackageCompatModeEnabledLocked(p1); float v18 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid); CompatibilityInfo v20 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v17,v18);",0.6760832071304321
alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V,setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);,int v37 = v34.checkCarrierPrivilegesForPackage(p3);,0.6517641544342041
getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;,getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;,"ActivityTaskManager$RootTaskInfo v20 = new ActivityTaskManager$RootTaskInfo(); v15.fillTaskInfo(v20); DisplayContent v23 = v15.getDisplayContent(); boolean v28 = v23.forAllRootTasks(v26, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v29 = v15.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v29; v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds); return phiInstruction;","ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo(); v10.fillTaskInfo(v15); DisplayContent v18 = v10.getDisplayContent(); boolean v23 = v18.forAllRootTasks(v21, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v24 = v10.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v24; v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds); int v26 = v10.getDescendantTaskCount(); [I v27 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskIds = v27; String v28 = new String(v26); ActivityTaskManager$RootTaskInfo.childTaskNames = v28; Rect v29 = new Rect(v26); ActivityTaskManager$RootTaskInfo.childTaskBounds = v29; [I v30 = new [I(v26); ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30; [I v31 = new [I(1); PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31); v10.forAllLeafTasks(v35, 0); ActivityRecord v38 = v10.topRunningActivity(); ComponentName v39 = ActivityRecord.intent.getComponent(); ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction; return v9;",0.8814712762832642
getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;,startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I,"ActivityTaskManager$RootTaskInfo v20 = new ActivityTaskManager$RootTaskInfo(); v15.fillTaskInfo(v20); DisplayContent v23 = v15.getDisplayContent(); boolean v28 = v23.forAllRootTasks(v26, 0); ActivityTaskManager$RootTaskInfo.position = phiInstruction; boolean v29 = v15.shouldBeVisible(0); ActivityTaskManager$RootTaskInfo.visible = v29; v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds); return phiInstruction;","TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea(); Task v22 = v21.getRootTask(0, phiInstruction); ActivityRecord v23 = v22.topRunningActivity(); boolean v24 = v23.attachedToProcess();",0.8328717350959778
getAppTaskThumbnailSize()Landroid/graphics/Point;,getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;,"Point v4 = new Point(this.mThumbnailWidth,this.mThumbnailHeight); return v4;",Bitmap v20 = TaskPersister.restoreImage(p1); return v17;,0.5745705962181091
getAppTaskThumbnailSize()Landroid/graphics/Point;,getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;,"Point v4 = new Point(this.mThumbnailWidth,this.mThumbnailHeight); return v4;",Bitmap v19 = TaskPersister.getImageFromWriteQueue(p1); return v17;,0.5684958696365356
resumeAppSwitches()V,stopAppSwitches()V,this.mAppSwitchesState = 2;,"this.mAppSwitchesState = 0; long v5 = SystemClock.uptimeMillis(); this.mLastStopAppSwitchesTime = v5; this.mH.removeMessages(4); boolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);",0.7760653495788574
resumeAppSwitches()V,stopAppSwitches()V,this.mAppSwitchesState = 2;,"this.mAppSwitchesState = 0; long v5 = SystemClock.uptimeMillis(); this.mLastStopAppSwitchesTime = v5; this.mH.removeMessages(4); boolean v7 = this.mH.sendEmptyMessageDelayed(4, 500); WindowManagerThreadPriorityBooster.reset();",0.722978949546814
getTasks(IZZI)Ljava/util/List;,getRecentTasks(III)Landroid/content/pm/ParceledListSlice;,"int v7 = UserHandle.getUserId(v1); IntArray v18 = UserManagerService.getProfileIdsLU(p1, 0, p2); [I v19 = v18.toArray(); ArrayList v23 = new ArrayList(); this.mCallingUid = p4; int v54 = UserHandle.getUserId(p4); this.mUserId = v54; RunningTasks$$ExternalSyntheticLambda0 v55 = new RunningTasks$$ExternalSyntheticLambda0(); PooledConsumer v58 = PooledLambda.obtainConsumer(v55, RunningTasks, v57); phiInstruction.forAllLeafTasks(v58, 0); return v23;","int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0); boolean v31 = RecentTasks.isUserRunning(p4, 4); RecentTasks.loadUserRecentsLocked(p4); Set v33 = RecentTasks.getProfileIds(p4); Integer v34 = Integer.valueOf(p4); boolean v35 = v33.add(v34); ArrayList v36 = new ArrayList(); int v38 = this.mTasks.size(); ArrayList v30 = v36; ParceledListSlice v29 = new ParceledListSlice(v30); return v28;",0.739470362663269
getTasks(IZZI)Ljava/util/List;,getLastResumedActivityUserId()I,"int v7 = UserHandle.getUserId(v1); IntArray v18 = UserManagerService.getProfileIdsLU(p1, 0, p2); [I v19 = v18.toArray(); ArrayList v23 = new ArrayList(); this.mCallingUid = p4; int v54 = UserHandle.getUserId(p4); this.mUserId = v54; RunningTasks$$ExternalSyntheticLambda0 v55 = new RunningTasks$$ExternalSyntheticLambda0(); PooledConsumer v58 = PooledLambda.obtainConsumer(v55, RunningTasks, v57); phiInstruction.forAllLeafTasks(v58, 0); return v23;",int v5 = p0.getCurrentUserId(); return v5;,0.726024329662323
createSession(Ljava/lang/String;Landroid/speech/tts/ITextToSpeechSessionCallback;)V,startRecording(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,"TextToSpeechManagerPerUserService$TextToSpeechSessionConnection v9 = new TextToSpeechManagerPerUserService$TextToSpeechSessionConnection(v6,AbstractPerUserSystemService.mUserId,p1,p2); v9.start();","ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.startRecording(p2, p3);",0.7028602361679077
createSession(Ljava/lang/String;Landroid/speech/tts/ITextToSpeechSessionCallback;)V,pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,"TextToSpeechManagerPerUserService$TextToSpeechSessionConnection v9 = new TextToSpeechManagerPerUserService$TextToSpeechSessionConnection(v6,AbstractPerUserSystemService.mUserId,p1,p2); v9.start();",ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.pauseRecording(p2);,0.7002653479576111
getPinnedSlices(Ljava/lang/String;)[Landroid/net/Uri;,pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V,ArrayList v6 = new ArrayList(); Collection v8 = this.mPinnedSlicesByUri.values(); Iterator v9 = v8.iterator(); boolean v10 = v9.hasNext(); int v11 = v6.size(); Uri v12 = new Uri(v11); Object v13 = v6.toArray(v12); return v13;,"PinnedSliceState v34 = new PinnedSliceState(SliceManagerService,p1,p2); Object v36 = this.mPinnedSlicesByUri.put(v29, v33);",0.777195155620575
getPinnedSlices(Ljava/lang/String;)[Landroid/net/Uri;,unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V,ArrayList v6 = new ArrayList(); Collection v8 = this.mPinnedSlicesByUri.values(); Iterator v9 = v8.iterator(); boolean v10 = v9.hasNext(); int v11 = v6.size(); Uri v12 = new Uri(v11); Object v13 = v6.toArray(v12); return v13;,"PinnedSliceState v30 = p0.getPinnedSlice(v29); boolean v32 = p3.unlinkToDeath(this.mDeathRecipient, 0); Object v33 = this.mListeners.remove(p3); Object v38 = this.mPinnedSlicesByUri.remove(v29);",0.6927858591079712
revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,"SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5); SlicePermissionManager$PkgUser v10 = new SlicePermissionManager$PkgUser(p1,v5); Object v13 = this.mCachedClients.get(v8); SliceClientPermissions v20 = new SliceClientPermissions(v8,SlicePermissionManager); Object v22 = this.mCachedClients.put(v8, v20);","SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5); Object v22 = this.mCachedClients.put(v8, v20);",0.9391828179359436
revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V,"SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5); SlicePermissionManager$PkgUser v10 = new SlicePermissionManager$PkgUser(p1,v5); Object v13 = this.mCachedClients.get(v8); SliceClientPermissions v20 = new SliceClientPermissions(v8,SlicePermissionManager); Object v22 = this.mCachedClients.put(v8, v20);","SlicePermissionManager$PkgUser v19 = new SlicePermissionManager$PkgUser(p2,v5); Object v24 = this.mCachedClients.get(v19); String v25 = SliceClientPermissions.getFileName(v19); SlicePermissionManager$ParserHolder v26 = SlicePermissionManager.getParser(v25); XmlPullParser v27 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v26); v26.close(); caughtException.addSuppressed(caughtException); int v30 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException); SliceClientPermissions v31 = new SliceClientPermissions(v19,SlicePermissionManager); Object v33 = this.mCachedClients.put(v19, v31);",0.8878251910209656
grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,"SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5); Object v22 = this.mCachedClients.put(v8, v20);","SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5); SlicePermissionManager$PkgUser v10 = new SlicePermissionManager$PkgUser(p1,v5); Object v13 = this.mCachedClients.get(v8); SliceClientPermissions v20 = new SliceClientPermissions(v8,SlicePermissionManager); Object v22 = this.mCachedClients.put(v8, v20);",0.9391828179359436
grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V,"SlicePermissionManager$PkgUser v10 = new SlicePermissionManager$PkgUser(p1,v5); Object v41 = this.mCachedProviders.put(v10, v39);","SlicePermissionManager$PkgUser v21 = new SlicePermissionManager$PkgUser(v10,v9); Object v43 = this.mCachedProviders.get(v21); String v44 = SliceProviderPermissions.getFileName(v21); SlicePermissionManager$ParserHolder v45 = SlicePermissionManager.getParser(v44); XmlPullParser v46 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v45); v45.close(); caughtException.addSuppressed(caughtException); int v49 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException); SliceProviderPermissions v50 = new SliceProviderPermissions(v21,SlicePermissionManager); Object v52 = this.mCachedProviders.put(v21, v50);",0.8498407602310181
checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I,grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V,"Uri v51 = ContentProvider.getUriWithoutUserId(p1); String v52 = v51.getAuthority(); Object v54 = this.mAuths.get(v52); SliceProviderPermissions$SliceAuthority v55 = new SliceProviderPermissions$SliceAuthority(v52,SliceProviderPermissions); Object v57 = this.mAuths.put(v52, v55);","Uri v53 = ContentProvider.getUriWithoutUserId(v8); String v54 = v53.getAuthority(); Object v56 = this.mAuths.get(v54); SliceProviderPermissions$SliceAuthority v57 = new SliceProviderPermissions$SliceAuthority(v54,SliceProviderPermissions); Object v59 = this.mAuths.put(v54, v57);",0.9715559482574463
checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I,revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,"SliceClientPermissions$SliceAuthority v37 = SliceClientPermissions.getOrCreateAuthority(v33, v19); List v38 = p5.getPathSegments(); v37.addPath(v38); Object v41 = this.mCachedProviders.get(v19); String v42 = SliceProviderPermissions.getFileName(v19); SlicePermissionManager$ParserHolder v43 = SlicePermissionManager.getParser(v42); XmlPullParser v44 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v43); v43.close();","SliceClientPermissions$SliceAuthority v28 = SliceClientPermissions.getOrCreateAuthority(v24, v10); List v29 = p5.getPathSegments(); v28.removePath(v29);",0.8672658205032349
hasSliceAccess(Ljava/lang/String;)Z,unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V,"SliceManagerService$PackageMatchingCache v9 = SliceManagerService.getHomeMatcher(p2); boolean v10 = v9.matches(p1); SliceManagerService$PackageMatchingCache v12 = SliceManagerService.getAssistantMatcher(p2); boolean v13 = v12.matches(p1); boolean v15 = this.mPermissions.hasFullAccess(p1, p2);","int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0); UserHandle v9 = Binder.getCallingUserHandle(); int v10 = v9.getIdentifier(); Uri v14 = ContentProvider.getUriWithoutUserId(p2); String v15 = v14.getAuthority(); PackageManager v16 = this.mContext.getPackageManager(); ProviderInfo v18 = v16.resolveContentProviderAsUser(v15, 0, v17);",0.7856912612915039
hasSliceAccess(Ljava/lang/String;)Z,revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,"SliceManagerService$PackageMatchingCache v9 = SliceManagerService.getHomeMatcher(p2); boolean v10 = v9.matches(p1); SliceManagerService$PackageMatchingCache v12 = SliceManagerService.getAssistantMatcher(p2); boolean v13 = v12.matches(p1); boolean v15 = this.mPermissions.hasFullAccess(p1, p2);","SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5); SlicePermissionManager$PkgUser v10 = new SlicePermissionManager$PkgUser(p1,v5); Object v13 = this.mCachedClients.get(v8); SliceClientPermissions v20 = new SliceClientPermissions(v8,SlicePermissionManager); Object v22 = this.mCachedClients.put(v8, v20);",0.7267196178436279
getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;,unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V,"int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0); Uri v29 = ContentProvider.maybeAddUserId(p1, v28); PinnedSliceState v30 = p0.getPinnedSlice(v29); SliceSpec v31 = v30.getSpecs(); return v31;","int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0); UserHandle v9 = Binder.getCallingUserHandle(); int v10 = v9.getIdentifier(); Uri v14 = ContentProvider.getUriWithoutUserId(p2); String v15 = v14.getAuthority(); PackageManager v16 = this.mContext.getPackageManager(); ProviderInfo v18 = v16.resolveContentProviderAsUser(v15, 0, v17);",0.8079410195350647
getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;,pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V,"int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0); Uri v29 = ContentProvider.maybeAddUserId(p1, v28); PinnedSliceState v30 = p0.getPinnedSlice(v29); SliceSpec v31 = v30.getSpecs(); return v31;","PinnedSliceState v34 = new PinnedSliceState(SliceManagerService,p1,p2); Object v36 = this.mPinnedSlicesByUri.put(v29, v33);",0.7803633809089661
unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V,pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V,"PinnedSliceState v30 = p0.getPinnedSlice(v29); boolean v32 = p3.unlinkToDeath(this.mDeathRecipient, 0); Object v33 = this.mListeners.remove(p3); Object v38 = this.mPinnedSlicesByUri.remove(v29);","PinnedSliceState v34 = new PinnedSliceState(SliceManagerService,p1,p2); Object v36 = this.mPinnedSlicesByUri.put(v29, v33);",0.8101437091827393
unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V,getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;,"int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0); UserHandle v9 = Binder.getCallingUserHandle(); int v10 = v9.getIdentifier(); Uri v14 = ContentProvider.getUriWithoutUserId(p2); String v15 = v14.getAuthority(); PackageManager v16 = this.mContext.getPackageManager(); ProviderInfo v18 = v16.resolveContentProviderAsUser(v15, 0, v17);","int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0); Uri v29 = ContentProvider.maybeAddUserId(p1, v28); PinnedSliceState v30 = p0.getPinnedSlice(v29); SliceSpec v31 = v30.getSpecs(); return v31;",0.8079410195350647
pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V,unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V,"PinnedSliceState v34 = new PinnedSliceState(SliceManagerService,p1,p2); Object v36 = this.mPinnedSlicesByUri.put(v29, v33);","PinnedSliceState v30 = p0.getPinnedSlice(v29); boolean v32 = p3.unlinkToDeath(this.mDeathRecipient, 0); Object v33 = this.mListeners.remove(p3); Object v38 = this.mPinnedSlicesByUri.remove(v29);",0.8101437091827393
pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V,getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;,"PinnedSliceState v34 = new PinnedSliceState(SliceManagerService,p1,p2); Object v36 = this.mPinnedSlicesByUri.put(v29, v33);","int v8 = SliceManagerService.checkSlicePermission(p2, 0, p1, v6, v5, 0); Uri v29 = ContentProvider.maybeAddUserId(p1, v28); PinnedSliceState v30 = p0.getPinnedSlice(v29); SliceSpec v31 = v30.getSpecs(); return v31;",0.7803633809089661
grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V,checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I,"Uri v53 = ContentProvider.getUriWithoutUserId(v8); String v54 = v53.getAuthority(); Object v56 = this.mAuths.get(v54); SliceProviderPermissions$SliceAuthority v57 = new SliceProviderPermissions$SliceAuthority(v54,SliceProviderPermissions); Object v59 = this.mAuths.put(v54, v57);","Uri v51 = ContentProvider.getUriWithoutUserId(p1); String v52 = v51.getAuthority(); Object v54 = this.mAuths.get(v52); SliceProviderPermissions$SliceAuthority v55 = new SliceProviderPermissions$SliceAuthority(v52,SliceProviderPermissions); Object v57 = this.mAuths.put(v52, v55);",0.9715559482574463
grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V,revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V,"SlicePermissionManager$PkgUser v19 = new SlicePermissionManager$PkgUser(p2,v5); Object v24 = this.mCachedClients.get(v19); String v25 = SliceClientPermissions.getFileName(v19); SlicePermissionManager$ParserHolder v26 = SlicePermissionManager.getParser(v25); XmlPullParser v27 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v26); v26.close(); caughtException.addSuppressed(caughtException); int v30 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException); SliceClientPermissions v31 = new SliceClientPermissions(v19,SlicePermissionManager); Object v33 = this.mCachedClients.put(v19, v31);","SlicePermissionManager$PkgUser v8 = new SlicePermissionManager$PkgUser(p2,v5); SlicePermissionManager$PkgUser v10 = new SlicePermissionManager$PkgUser(p1,v5); Object v13 = this.mCachedClients.get(v8); SliceClientPermissions v20 = new SliceClientPermissions(v8,SlicePermissionManager); Object v22 = this.mCachedClients.put(v8, v20);",0.8878251910209656
stopTracing()V,startTracing()V,this.mTracingEnabled = 0; this.mBar.stopTracing();,this.mBar.startTracing(); this.mTracingEnabled = 1;,0.9443179368972778
stopTracing()V,startTracing()V,this.mTracingEnabled = 0; this.mBar.stopTracing();,this.mBar.startTracing();,0.8705247640609741
onBiometricError(III)V,onBiometricHelp(ILjava/lang/String;)V,"this.mBar.onBiometricError(p1, p2, p3);","this.mBar.onBiometricHelp(p1, p2);",0.8220215439796448
onBiometricError(III)V,suppressAmbientDisplay(Z)V,"this.mBar.onBiometricError(p1, p2, p3);",this.mBar.suppressAmbientDisplay(p1);,0.7486917972564697
onBubbleMetadataFlagChanged(Ljava/lang/String;I)V,onNotificationBubbleChanged(Ljava/lang/String;ZI)V,"this.mNotificationDelegate.onBubbleMetadataFlagChanged(p1, p2);","this.mNotificationDelegate.onNotificationBubbleChanged(p1, p2, p3);",0.8483753800392151
onBubbleMetadataFlagChanged(Ljava/lang/String;I)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onBubbleMetadataFlagChanged(p1, p2);","this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.7609658241271973
onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);","this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.8485382199287415
onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,onNotificationClear(Ljava/lang/String;ILjava/lang/String;IILcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);","this.mNotificationDelegate.onNotificationClear(v3, v4, p1, p2, p3, p4, p5, p6);",0.8398892283439636
disable2(ILandroid/os/IBinder;Ljava/lang/String;)V,disable(ILandroid/os/IBinder;Ljava/lang/String;)V,"int v6 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 1); int v7 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 2); StatusBarManagerService$$ExternalSyntheticLambda6 v11 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v6); boolean v13 = this.mHandler.post(v11); this.mBar.disable(0, v6, v7);","StatusBarManagerService.manageDisableListLocked(p4, p1, p2, p3, 1); int v6 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 1); int v7 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 2); StatusBarManagerService$UiState v8 = StatusBarManagerService.getUiState(0); boolean v9 = StatusBarManagerService$UiState.-$$Nest$mdisableEquals(v8, v6, v7); StatusBarManagerService$UiState.-$$Nest$msetDisabled(v8, v6, v7); StatusBarManagerService$$ExternalSyntheticLambda6 v11 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v6); boolean v13 = this.mHandler.post(v11); this.mBar.disable(0, v6, v7);",0.8755461573600769
disable2(ILandroid/os/IBinder;Ljava/lang/String;)V,disable(ILandroid/os/IBinder;Ljava/lang/String;)V,"StatusBarManagerService.manageDisableListLocked(p4, p1, p2, p3, 2);","StatusBarManagerService.manageDisableListLocked(p4, p1, p2, p3, 1); int v6 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 1); int v7 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 2); StatusBarManagerService$UiState v8 = StatusBarManagerService.getUiState(0); boolean v9 = StatusBarManagerService$UiState.-$$Nest$mdisableEquals(v8, v6, v7); StatusBarManagerService$UiState.-$$Nest$msetDisabled(v8, v6, v7); StatusBarManagerService$$ExternalSyntheticLambda6 v11 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v6); boolean v13 = this.mHandler.post(v11); this.mBar.disable(0, v6, v7);",0.8280244469642639
clickTile(Landroid/content/ComponentName;)V,addTile(Landroid/content/ComponentName;)V,this.mBar.clickQsTile(p1);,this.mBar.addQsTile(p1);,0.8851501941680908
clickTile(Landroid/content/ComponentName;)V,remTile(Landroid/content/ComponentName;)V,this.mBar.clickQsTile(p1);,this.mBar.remQsTile(p1);,0.8539104461669922
onNotificationDirectReplied(Ljava/lang/String;)V,onNotificationFeedbackReceived(Ljava/lang/String;Landroid/os/Bundle;)V,this.mNotificationDelegate.onNotificationDirectReplied(p1);,"this.mNotificationDelegate.onNotificationFeedbackReceived(p1, p2);",0.8068280816078186
onNotificationDirectReplied(Ljava/lang/String;)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,this.mNotificationDelegate.onNotificationDirectReplied(p1);,"this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.8028278946876526
registerStatusBar(Lcom/android/internal/statusbar/IStatusBar;)Lcom/android/internal/statusbar/RegisterStatusBarResult;,setIconVisibility(Ljava/lang/String;Z)V,"this.mBar = p1; ArrayMap v24 = new ArrayMap(this.mIcons); Object v26 = this.mDisplayUiState.get(0); RegisterStatusBarResult v30 = new RegisterStatusBarResult(v24,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v42,v29,v43); return v30;","Object v3 = this.mIcons.get(p1); StatusBarIcon.visible = p2; this.mBar.setIcon(p1, v3);",0.7913923859596252
registerStatusBar(Lcom/android/internal/statusbar/IStatusBar;)Lcom/android/internal/statusbar/RegisterStatusBarResult;,setIcon(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V,"this.mBar = p1; ArrayMap v24 = new ArrayMap(this.mIcons); Object v26 = this.mDisplayUiState.get(0); RegisterStatusBarResult v30 = new RegisterStatusBarResult(v24,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v42,v29,v43); return v30;","StatusBarIcon v3 = new StatusBarIcon(p2,UserHandle.SYSTEM,p3,p4,0,p5); Object v5 = this.mIcons.put(p1, v3); this.mBar.setIcon(p1, v3);",0.7891382575035095
registerSessionListener(ILcom/android/internal/statusbar/ISessionListener;)V,No similar EPs with similarity > 0.8,,,
onGlobalActionsHidden()V,keyguardGoingAway(I)V,long v3 = Binder.clearCallingIdentity(); this.mGlobalActionListener.onGlobalActionsDismissed(); Binder.restoreCallingIdentity(v3);,long v4 = Binder.clearCallingIdentity(); Binder.restoreCallingIdentity(v4);,0.8030640482902527
onGlobalActionsHidden()V,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,long v3 = Binder.clearCallingIdentity(); this.mGlobalActionListener.onGlobalActionsDismissed(); Binder.restoreCallingIdentity(v3);,int v1 = Binder.getCallingUid(); long v6 = Binder.clearCallingIdentity(); Binder.restoreCallingIdentity(v6);,0.7675945162773132
onNotificationClear(Ljava/lang/String;ILjava/lang/String;IILcom/android/internal/statusbar/NotificationVisibility;)V,onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationClear(v3, v4, p1, p2, p3, p4, p5, p6);","this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);",0.8398892283439636
onNotificationClear(Ljava/lang/String;ILjava/lang/String;IILcom/android/internal/statusbar/NotificationVisibility;)V,onNotificationBubbleChanged(Ljava/lang/String;ZI)V,"this.mNotificationDelegate.onNotificationClear(v3, v4, p1, p2, p3, p4, p5, p6);","this.mNotificationDelegate.onNotificationBubbleChanged(p1, p2, p3);",0.8299651741981506
isTracing()Z,stopTracing()V,return this.mTracingEnabled;,this.mTracingEnabled = 0; this.mBar.stopTracing();,0.6369538903236389
isTracing()Z,startTracing()V,return this.mTracingEnabled;,this.mBar.startTracing(); this.mTracingEnabled = 1;,0.6084908246994019
setIcon(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V,setIconVisibility(Ljava/lang/String;Z)V,"StatusBarIcon v3 = new StatusBarIcon(p2,UserHandle.SYSTEM,p3,p4,0,p5); Object v5 = this.mIcons.put(p1, v3); this.mBar.setIcon(p1, v3);","Object v3 = this.mIcons.get(p1); StatusBarIcon.visible = p2; this.mBar.setIcon(p1, v3);",0.8765749335289001
setIcon(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V,registerStatusBar(Lcom/android/internal/statusbar/IStatusBar;)Lcom/android/internal/statusbar/RegisterStatusBarResult;,"StatusBarIcon v3 = new StatusBarIcon(p2,UserHandle.SYSTEM,p3,p4,0,p5); Object v5 = this.mIcons.put(p1, v3); this.mBar.setIcon(p1, v3);","this.mBar = p1; ArrayMap v24 = new ArrayMap(this.mIcons); Object v26 = this.mDisplayUiState.get(0); RegisterStatusBarResult v30 = new RegisterStatusBarResult(v24,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v42,v29,v43); return v30;",0.7891382575035095
unregisterNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,registerNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,this.mBar.unregisterNearbyMediaDevicesProvider(p1);,this.mBar.registerNearbyMediaDevicesProvider(p1);,0.9452614188194275
unregisterNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,setUdfpsHbmListener(Landroid/hardware/fingerprint/IUdfpsHbmListener;)V,this.mBar.unregisterNearbyMediaDevicesProvider(p1);,this.mBar.setUdfpsHbmListener(p1);,0.6895480155944824
onClearAllNotifications(I)V,onNotificationError(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;I)V,"int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onClearAll(v3, v4, p1);","int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); long v5 = Binder.clearCallingIdentity(); this.mNotificationDelegate.onNotificationError(v3, v4, p1, p2, p3, p4, p5, p6, p7); Binder.restoreCallingIdentity(v5);",0.8642908930778503
onClearAllNotifications(I)V,onNotificationActionClick(Ljava/lang/String;ILandroid/app/Notification$Action;Lcom/android/internal/statusbar/NotificationVisibility;Z)V,"int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onClearAll(v3, v4, p1);","int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onNotificationActionClick(v3, v4, p1, p2, p3, p4, p5);",0.8568928241729736
onNotificationActionClick(Ljava/lang/String;ILandroid/app/Notification$Action;Lcom/android/internal/statusbar/NotificationVisibility;Z)V,onNotificationError(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;I)V,"int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onNotificationActionClick(v3, v4, p1, p2, p3, p4, p5);","int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); long v5 = Binder.clearCallingIdentity(); this.mNotificationDelegate.onNotificationError(v3, v4, p1, p2, p3, p4, p5, p6, p7); Binder.restoreCallingIdentity(v5);",0.8599162697792053
onNotificationActionClick(Ljava/lang/String;ILandroid/app/Notification$Action;Lcom/android/internal/statusbar/NotificationVisibility;Z)V,onClearAllNotifications(I)V,"int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onNotificationActionClick(v3, v4, p1, p2, p3, p4, p5);","int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onClearAll(v3, v4, p1);",0.8568928241729736
onNotificationSmartReplySent(Ljava/lang/String;ILjava/lang/CharSequence;IZ)V,onNotificationSmartSuggestionsAdded(Ljava/lang/String;IIZZ)V,"this.mNotificationDelegate.onNotificationSmartReplySent(p1, p2, p3, p4, p5);","this.mNotificationDelegate.onNotificationSmartSuggestionsAdded(p1, p2, p3, p4, p5);",0.7888226509094238
onNotificationSmartReplySent(Ljava/lang/String;ILjava/lang/CharSequence;IZ)V,onNotificationFeedbackReceived(Ljava/lang/String;Landroid/os/Bundle;)V,"this.mNotificationDelegate.onNotificationSmartReplySent(p1, p2, p3, p4, p5);","this.mNotificationDelegate.onNotificationFeedbackReceived(p1, p2);",0.7868006229400635
onPanelRevealed(ZI)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onPanelRevealed(p1, p2);","this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.8230757117271423
onPanelRevealed(ZI)V,onNotificationBubbleChanged(Ljava/lang/String;ZI)V,"this.mNotificationDelegate.onPanelRevealed(p1, p2);","this.mNotificationDelegate.onNotificationBubbleChanged(p1, p2, p3);",0.8101367950439453
disable2ForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,"Pair v5 = StatusBarManagerService.findMatchingRecordLocked(p4, p2); int v6 = Pair.first.intValue(); this.mDisplayUiState.put(p1, v18); v16.setDisabled(v12, v14); this.mBar.disable(0, v12, v14);","Pair v5 = StatusBarManagerService.findMatchingRecordLocked(p4, p2); int v6 = Pair.first.intValue(); boolean v7 = p4.isBinderAlive(); StatusBarManagerService$DisableRecord v8 = new StatusBarManagerService$DisableRecord(StatusBarManagerService,p2,p4); v8.setFlags(p3, p6, p5); Pair.second.setFlags(p3, p6, p5);",0.8315664529800415
disable2ForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,"StatusBarManagerService$DisableRecord v8 = new StatusBarManagerService$DisableRecord(StatusBarManagerService, p2, p4); v8.setFlags(p3, p6, p5); this.mDisplayUiState.put(p1, v18); v16.setDisabled(v12, v14); this.mBar.disable(0, v12, v14);","Object v17 = this.mDisplayUiState.get(p1); StatusBarManagerService$UiState v18 = new StatusBarManagerService$UiState(0); this.mDisplayUiState.put(p1, v18); v16.setDisabled(v12, v14);",0.737851619720459
setImeWindowStatus(ILandroid/os/IBinder;IIZ)V,restart()V,"StatusBarManagerService$$ExternalSyntheticLambda1 v10 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5); boolean v12 = this.mHandler.post(v10);",StatusBarManagerService$$ExternalSyntheticLambda0 v4 = new StatusBarManagerService$$ExternalSyntheticLambda0(p0); boolean v6 = this.mHandler.post(v4);,0.968713641166687
setImeWindowStatus(ILandroid/os/IBinder;IIZ)V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,"Object v4 = this.mDisplayUiState.get(p1); StatusBarManagerService$UiState v5 = new StatusBarManagerService$UiState(0); this.mDisplayUiState.put(p1, v5);","Object v17 = this.mDisplayUiState.get(p1); StatusBarManagerService$UiState v18 = new StatusBarManagerService$UiState(0); this.mDisplayUiState.put(p1, v18); v16.setDisabled(v12, v14);",0.9493764638900757
onBiometricAuthenticated(I)V,onBiometricError(III)V,this.mBar.onBiometricAuthenticated(p1); return;,"this.mBar.onBiometricError(p1, p2, p3);",0.7301809787750244
onBiometricAuthenticated(I)V,onBiometricHelp(ILjava/lang/String;)V,this.mBar.onBiometricAuthenticated(p1); return;,"this.mBar.onBiometricHelp(p1, p2);",0.7099422216415405
setUdfpsHbmListener(Landroid/hardware/fingerprint/IUdfpsHbmListener;)V,registerNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,this.mBar.setUdfpsHbmListener(p1);,this.mBar.registerNearbyMediaDevicesProvider(p1);,0.7003138065338135
setUdfpsHbmListener(Landroid/hardware/fingerprint/IUdfpsHbmListener;)V,handleSystemKey(I)V,this.mBar.setUdfpsHbmListener(p1);,this.mBar.handleSystemKey(p1);,0.6951560974121094
showPinningEscapeToast()V,showPinningEnterExitToast(Z)V,this.mBar.showPinningEscapeToast();,this.mBar.showPinningEnterExitToast(p1);,0.8482659459114075
showPinningEscapeToast()V,suppressAmbientDisplay(Z)V,this.mBar.showPinningEscapeToast();,this.mBar.suppressAmbientDisplay(p1);,0.7149608731269836
showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZIJLjava/lang/String;JI)V,hideAuthenticationDialog(J)V,"this.mBar.showAuthenticationDialog(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);",this.mBar.hideAuthenticationDialog(p1);,0.8986908197402954
showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZIJLjava/lang/String;JI)V,onBiometricAuthenticated(I)V,"this.mBar.showAuthenticationDialog(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);",this.mBar.onBiometricAuthenticated(p1); return;,0.6567571759223938
showInattentiveSleepWarning()V,dismissInattentiveSleepWarning(Z)V,this.mBar.showInattentiveSleepWarning();,this.mBar.dismissInattentiveSleepWarning(p1);,0.9165089130401611
showInattentiveSleepWarning()V,showPinningEnterExitToast(Z)V,this.mBar.showInattentiveSleepWarning();,this.mBar.showPinningEnterExitToast(p1);,0.6269569396972656
dismissInattentiveSleepWarning(Z)V,showInattentiveSleepWarning()V,this.mBar.dismissInattentiveSleepWarning(p1);,this.mBar.showInattentiveSleepWarning();,0.9165089130401611
dismissInattentiveSleepWarning(Z)V,suppressAmbientDisplay(Z)V,this.mBar.dismissInattentiveSleepWarning(p1);,this.mBar.suppressAmbientDisplay(p1);,0.6935572028160095
onNotificationFeedbackReceived(Ljava/lang/String;Landroid/os/Bundle;)V,onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationFeedbackReceived(p1, p2);","this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);",0.8196779489517212
onNotificationFeedbackReceived(Ljava/lang/String;Landroid/os/Bundle;)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationFeedbackReceived(p1, p2);","this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.8190553188323975
onNotificationExpansionChanged(Ljava/lang/String;ZZI)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationExpansionChanged(p1, p2, p3, p4);","this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.8060353398323059
onNotificationExpansionChanged(Ljava/lang/String;ZZI)V,onNotificationBubbleChanged(Ljava/lang/String;ZI)V,"this.mNotificationDelegate.onNotificationExpansionChanged(p1, p2, p3, p4);","this.mNotificationDelegate.onNotificationBubbleChanged(p1, p2, p3);",0.7915826439857483
onNotificationSmartSuggestionsAdded(Ljava/lang/String;IIZZ)V,onNotificationSmartReplySent(Ljava/lang/String;ILjava/lang/CharSequence;IZ)V,"this.mNotificationDelegate.onNotificationSmartSuggestionsAdded(p1, p2, p3, p4, p5);","this.mNotificationDelegate.onNotificationSmartReplySent(p1, p2, p3, p4, p5);",0.7888226509094238
onNotificationSmartSuggestionsAdded(Ljava/lang/String;IIZZ)V,onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationSmartSuggestionsAdded(p1, p2, p3, p4, p5);","this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);",0.7183070778846741
onNotificationSettingsViewed(Ljava/lang/String;)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,this.mNotificationDelegate.onNotificationSettingsViewed(p1);,"this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.8364088535308838
onNotificationSettingsViewed(Ljava/lang/String;)V,onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,this.mNotificationDelegate.onNotificationSettingsViewed(p1);,"this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);",0.7779844999313354
disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,setImeWindowStatus(ILandroid/os/IBinder;IIZ)V,"Object v17 = this.mDisplayUiState.get(p1); StatusBarManagerService$UiState v18 = new StatusBarManagerService$UiState(0); this.mDisplayUiState.put(p1, v18); v16.setDisabled(v12, v14);","Object v4 = this.mDisplayUiState.get(p1); StatusBarManagerService$UiState v5 = new StatusBarManagerService$UiState(0); this.mDisplayUiState.put(p1, v5);",0.9493764638900757
disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,setImeWindowStatus(ILandroid/os/IBinder;IIZ)V,"StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12); boolean v27 = this.mHandler.post(v25);","StatusBarManagerService$$ExternalSyntheticLambda1 v10 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5); boolean v12 = this.mHandler.post(v10);",0.9417921304702759
requestTileServiceListeningState(Landroid/content/ComponentName;I)V,clickTile(Landroid/content/ComponentName;)V,this.mBar.requestTileServiceListeningState(p1);,this.mBar.clickQsTile(p1);,0.7335059642791748
requestTileServiceListeningState(Landroid/content/ComponentName;I)V,togglePanel()V,"int v1 = Binder.getCallingUid(); String v2 = p1.getPackageName(); ChangeIdStateQuery v5 = new ChangeIdStateQuery(1,p1,0,p2,0); Object v12 = this.mCache.get(v4); this.mHits = (this.mHits + 1); Object v13 = PropertyInvalidatedCache.refresh(phiInstruction, v4); long v14 = PropertyInvalidatedCache.getCurrentNonce(); Object v15 = this.mCache.remove(v4); Object v16 = PropertyInvalidatedCache.maybeCheckConsistency(v4, v13);","int v2 = Binder.getCallingUid(); ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2); Object v6 = this.QUERY_CACHE.query(v5); boolean v7 = v6.booleanValue(); this.mBar.togglePanel();",0.7105323076248169
shutdown()V,No similar EPs with similarity > 0.8,,,
onGlobalActionsShown()V,onGlobalActionsHidden()V,this.mGlobalActionListener.onGlobalActionsShown();,long v3 = Binder.clearCallingIdentity(); this.mGlobalActionListener.onGlobalActionsDismissed(); Binder.restoreCallingIdentity(v3);,0.6279247403144836
onGlobalActionsShown()V,onNotificationSettingsViewed(Ljava/lang/String;)V,this.mGlobalActionListener.onGlobalActionsShown();,this.mNotificationDelegate.onNotificationSettingsViewed(p1);,0.5888449549674988
onNotificationError(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;I)V,onClearAllNotifications(I)V,"int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); long v5 = Binder.clearCallingIdentity(); this.mNotificationDelegate.onNotificationError(v3, v4, p1, p2, p3, p4, p5, p6, p7); Binder.restoreCallingIdentity(v5);","int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onClearAll(v3, v4, p1);",0.8642908930778503
onNotificationError(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;I)V,onNotificationActionClick(Ljava/lang/String;ILandroid/app/Notification$Action;Lcom/android/internal/statusbar/NotificationVisibility;Z)V,"int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); long v5 = Binder.clearCallingIdentity(); this.mNotificationDelegate.onNotificationError(v3, v4, p1, p2, p3, p4, p5, p6, p7); Binder.restoreCallingIdentity(v5);","int v3 = Binder.getCallingUid(); int v4 = Binder.getCallingPid(); this.mNotificationDelegate.onNotificationActionClick(v3, v4, p1, p2, p3, p4, p5);",0.8599162697792053
unregisterSessionListener(ILcom/android/internal/statusbar/ISessionListener;)V,No similar EPs with similarity > 0.8,,,
setBiometicContextListener(Landroid/hardware/biometrics/IBiometricContextListener;)V,onBiometricError(III)V,this.mBiometricContextListener = p1; this.mBar.setBiometicContextListener(p1);,"this.mBar.onBiometricError(p1, p2, p3);",0.6993138790130615
setBiometicContextListener(Landroid/hardware/biometrics/IBiometricContextListener;)V,suppressAmbientDisplay(Z)V,this.mBiometricContextListener = p1; this.mBar.setBiometicContextListener(p1);,this.mBar.suppressAmbientDisplay(p1);,0.6800815463066101
setNavBarMode(I)V,getNavBarMode()I,"boolean v5 = Settings$Secure.putIntForUser(v4, ""nav_bar_kids_mode"", p1, this.mCurrentUserId); boolean v7 = Settings$Secure.putIntForUser(v6, ""nav_bar_force_visible"", p1, this.mCurrentUserId); boolean v18 = v8.setEnabledExclusiveInCategory(""com.android.internal.systemui.navbar.threebutton"", this.mCurrentUserId);","int v5 = Settings$Secure.getIntForUser(v4, ""nav_bar_kids_mode"", this.mCurrentUserId); return v5;",0.8082480430603027
setNavBarMode(I)V,togglePanel()V,"boolean v5 = Settings$Secure.putIntForUser(v4, ""nav_bar_kids_mode"", p1, this.mCurrentUserId); boolean v7 = Settings$Secure.putIntForUser(v6, ""nav_bar_force_visible"", p1, this.mCurrentUserId); boolean v18 = v8.setEnabledExclusiveInCategory(""com.android.internal.systemui.navbar.threebutton"", this.mCurrentUserId);",Object v19 = this.mDisplayUiState.get(0); int v21 = v19.getDisabled2(); this.mBar.togglePanel();,0.6528652906417847
startTracing()V,stopTracing()V,this.mBar.startTracing(); this.mTracingEnabled = 1;,this.mTracingEnabled = 0; this.mBar.stopTracing();,0.9443179368972778
startTracing()V,stopTracing()V,this.mBar.startTracing();,this.mTracingEnabled = 0; this.mBar.stopTracing();,0.8705247640609741
onNotificationBubbleChanged(Ljava/lang/String;ZI)V,onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationBubbleChanged(p1, p2, p3);","this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);",0.8622195720672607
onNotificationBubbleChanged(Ljava/lang/String;ZI)V,onBubbleMetadataFlagChanged(Ljava/lang/String;I)V,"this.mNotificationDelegate.onNotificationBubbleChanged(p1, p2, p3);","this.mNotificationDelegate.onBubbleMetadataFlagChanged(p1, p2);",0.8483753800392151
reboot(Z)V,restart()V,"ShutdownCheckPoints$SystemServerCheckPoint v7 = new ShutdownCheckPoints$SystemServerCheckPoint(this.mInjector,p2); StatusBarManagerService$$ExternalSyntheticLambda2 v18 = new StatusBarManagerService$$ExternalSyntheticLambda2(p1,phiInstruction); boolean v20 = this.mHandler.post(v18);",StatusBarManagerService$$ExternalSyntheticLambda0 v4 = new StatusBarManagerService$$ExternalSyntheticLambda0(p0); boolean v6 = this.mHandler.post(v4);,0.747724711894989
reboot(Z)V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,"ShutdownCheckPoints$SystemServerCheckPoint v7 = new ShutdownCheckPoints$SystemServerCheckPoint(this.mInjector,p2); StatusBarManagerService$$ExternalSyntheticLambda2 v18 = new StatusBarManagerService$$ExternalSyntheticLambda2(p1,phiInstruction); boolean v20 = this.mHandler.post(v18);","StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12); boolean v27 = this.mHandler.post(v25);",0.7346715927124023
removeIcon(Ljava/lang/String;)V,setIconVisibility(Ljava/lang/String;Z)V,Object v3 = this.mIcons.remove(p1); this.mBar.removeIcon(p1);,"Object v3 = this.mIcons.get(p1); StatusBarIcon.visible = p2; this.mBar.setIcon(p1, v3);",0.739252507686615
removeIcon(Ljava/lang/String;)V,remTile(Landroid/content/ComponentName;)V,Object v3 = this.mIcons.remove(p1); this.mBar.removeIcon(p1);,this.mBar.remQsTile(p1);,0.7392252087593079
expandNotificationsPanel()V,collapsePanels()V,this.mBar.animateExpandNotificationsPanel();,"boolean v8 = this.mActivityTaskManager.canCloseSystemDialogs(v3, v2); this.mBar.animateCollapsePanels();",0.7105559706687927
expandNotificationsPanel()V,collapsePanels()V,this.mBar.animateExpandNotificationsPanel();,"int v2 = Binder.getCallingUid(); ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2); Object v6 = this.QUERY_CACHE.query(v5); boolean v7 = v6.booleanValue(); this.mBar.animateCollapsePanels();",0.6491422653198242
expandSettingsPanel(Ljava/lang/String;)V,collapsePanels()V,public void expandSettingsPanel(String p1){ this.mBar.animateExpandSettingsPanel(p1);,"boolean v8 = this.mActivityTaskManager.canCloseSystemDialogs(v3, v2); this.mBar.animateCollapsePanels();",0.6413485407829285
expandSettingsPanel(Ljava/lang/String;)V,expandNotificationsPanel()V,public void expandSettingsPanel(String p1){ this.mBar.animateExpandSettingsPanel(p1);,this.mBar.animateExpandNotificationsPanel();,0.6189718246459961
suppressAmbientDisplay(Z)V,onBiometricError(III)V,this.mBar.suppressAmbientDisplay(p1);,"this.mBar.onBiometricError(p1, p2, p3);",0.7486917972564697
suppressAmbientDisplay(Z)V,showPinningEnterExitToast(Z)V,this.mBar.suppressAmbientDisplay(p1);,this.mBar.showPinningEnterExitToast(p1);,0.739648163318634
clearInlineReplyUriPermissions(Ljava/lang/String;)V,onNotificationSmartReplySent(Ljava/lang/String;ILjava/lang/CharSequence;IZ)V,"this.mNotificationDelegate.clearInlineReplyUriPermissions(p1, v3);","this.mNotificationDelegate.onNotificationSmartReplySent(p1, p2, p3, p4, p5);",0.6792080402374268
clearInlineReplyUriPermissions(Ljava/lang/String;)V,onNotificationDirectReplied(Ljava/lang/String;)V,"this.mNotificationDelegate.clearInlineReplyUriPermissions(p1, v3);",this.mNotificationDelegate.onNotificationDirectReplied(p1);,0.6517605781555176
hideCurrentInputMethodForBubbles()V,getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,Object v6 = this.sLocalServiceObjects.get(InputMethodManagerInterna.class); InputMethodManagerInternal v4 = phiInstruction; v4.hideCurrentInputMethod(19);,"List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);",0.7456201910972595
hideCurrentInputMethodForBubbles()V,getInputMethodList(I)Ljava/util/List;,Object v6 = this.sLocalServiceObjects.get(InputMethodManagerInterna.class); InputMethodManagerInternal v4 = phiInstruction; v4.hideCurrentInputMethod(19);,"InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;",0.7448469400405884
onPanelHidden()V,No similar EPs with similarity > 0.8,,,
remTile(Landroid/content/ComponentName;)V,addTile(Landroid/content/ComponentName;)V,this.mBar.remQsTile(p1);,this.mBar.addQsTile(p1);,0.8795993328094482
remTile(Landroid/content/ComponentName;)V,clickTile(Landroid/content/ComponentName;)V,this.mBar.remQsTile(p1);,this.mBar.clickQsTile(p1);,0.8539104461669922
restart()V,setImeWindowStatus(ILandroid/os/IBinder;IIZ)V,StatusBarManagerService$$ExternalSyntheticLambda0 v4 = new StatusBarManagerService$$ExternalSyntheticLambda0(p0); boolean v6 = this.mHandler.post(v4);,"StatusBarManagerService$$ExternalSyntheticLambda1 v10 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5); boolean v12 = this.mHandler.post(v10);",0.968713641166687
restart()V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,StatusBarManagerService$$ExternalSyntheticLambda0 v4 = new StatusBarManagerService$$ExternalSyntheticLambda0(p0); boolean v6 = this.mHandler.post(v4);,"StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12); boolean v27 = this.mHandler.post(v25);",0.9362504482269287
showPinningEnterExitToast(Z)V,showPinningEscapeToast()V,this.mBar.showPinningEnterExitToast(p1);,this.mBar.showPinningEscapeToast();,0.8482659459114075
showPinningEnterExitToast(Z)V,suppressAmbientDisplay(Z)V,this.mBar.showPinningEnterExitToast(p1);,this.mBar.suppressAmbientDisplay(p1);,0.739648163318634
updateMediaTapToTransferSenderDisplay(ILandroid/media/MediaRoute2Info;Lcom/android/internal/statusbar/IUndoMediaTransferCallback;)V,clickTile(Landroid/content/ComponentName;)V,"this.mBar.updateMediaTapToTransferSenderDisplay(p1, p2, p3);",this.mBar.clickQsTile(p1);,0.6885831356048584
updateMediaTapToTransferSenderDisplay(ILandroid/media/MediaRoute2Info;Lcom/android/internal/statusbar/IUndoMediaTransferCallback;)V,remTile(Landroid/content/ComponentName;)V,"this.mBar.updateMediaTapToTransferSenderDisplay(p1, p2, p3);",this.mBar.remQsTile(p1);,0.6667286157608032
onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,onNotificationBubbleChanged(Ljava/lang/String;ZI)V,"this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);","this.mNotificationDelegate.onNotificationBubbleChanged(p1, p2, p3);",0.8622195720672607
onNotificationVisibilityChanged([Lcom/android/internal/statusbar/NotificationVisibility;[Lcom/android/internal/statusbar/NotificationVisibility;)V,onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,"this.mNotificationDelegate.onNotificationVisibilityChanged(p1, p2);","this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);",0.8485382199287415
togglePanel()V,collapsePanels()V,"int v2 = Binder.getCallingUid(); ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2); Object v6 = this.QUERY_CACHE.query(v5); boolean v7 = v6.booleanValue(); this.mBar.togglePanel();","int v2 = Binder.getCallingUid(); ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2); Object v6 = this.QUERY_CACHE.query(v5); boolean v7 = v6.booleanValue(); this.mBar.animateCollapsePanels();",0.9087265729904175
togglePanel()V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,Object v19 = this.mDisplayUiState.get(0); int v21 = v19.getDisabled2();,"Object v17 = this.mDisplayUiState.get(p1); StatusBarManagerService$UiState v18 = new StatusBarManagerService$UiState(0); this.mDisplayUiState.put(p1, v18); v16.setDisabled(v12, v14);",0.8159676194190979
collapsePanels()V,togglePanel()V,"int v2 = Binder.getCallingUid(); ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2); Object v6 = this.QUERY_CACHE.query(v5); boolean v7 = v6.booleanValue(); this.mBar.animateCollapsePanels();","int v2 = Binder.getCallingUid(); ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2); Object v6 = this.QUERY_CACHE.query(v5); boolean v7 = v6.booleanValue(); this.mBar.togglePanel();",0.9087265729904175
collapsePanels()V,togglePanel()V,"int v2 = Binder.getCallingUid(); ChangeIdStateQuery v5 = ChangeIdStateQuery.byUid(173031413, v2); Object v6 = this.QUERY_CACHE.query(v5); boolean v7 = v6.booleanValue(); this.mBar.animateCollapsePanels();",Object v19 = this.mDisplayUiState.get(0); int v21 = v19.getDisabled2(); this.mBar.togglePanel();,0.7294543981552124
handleSystemKey(I)V,suppressAmbientDisplay(Z)V,this.mBar.handleSystemKey(p1);,this.mBar.suppressAmbientDisplay(p1);,0.736424446105957
handleSystemKey(I)V,setUdfpsHbmListener(Landroid/hardware/fingerprint/IUdfpsHbmListener;)V,this.mBar.handleSystemKey(p1);,this.mBar.setUdfpsHbmListener(p1);,0.6951560974121094
onSessionEnded(ILcom/android/internal/logging/InstanceId;)V,No similar EPs with similarity > 0.8,,,
disable(ILandroid/os/IBinder;Ljava/lang/String;)V,disable2(ILandroid/os/IBinder;Ljava/lang/String;)V,"StatusBarManagerService.manageDisableListLocked(p4, p1, p2, p3, 1); int v6 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 1); int v7 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 2); StatusBarManagerService$UiState v8 = StatusBarManagerService.getUiState(0); boolean v9 = StatusBarManagerService$UiState.-$$Nest$mdisableEquals(v8, v6, v7); StatusBarManagerService$UiState.-$$Nest$msetDisabled(v8, v6, v7); StatusBarManagerService$$ExternalSyntheticLambda6 v11 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v6); boolean v13 = this.mHandler.post(v11); this.mBar.disable(0, v6, v7);","int v6 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 1); int v7 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 2); StatusBarManagerService$$ExternalSyntheticLambda6 v11 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v6); boolean v13 = this.mHandler.post(v11); this.mBar.disable(0, v6, v7);",0.8755461573600769
disable(ILandroid/os/IBinder;Ljava/lang/String;)V,disable2(ILandroid/os/IBinder;Ljava/lang/String;)V,"StatusBarManagerService.manageDisableListLocked(p4, p1, p2, p3, 1); int v6 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 1); int v7 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 2); StatusBarManagerService$UiState v8 = StatusBarManagerService.getUiState(0); boolean v9 = StatusBarManagerService$UiState.-$$Nest$mdisableEquals(v8, v6, v7); StatusBarManagerService$UiState.-$$Nest$msetDisabled(v8, v6, v7); StatusBarManagerService$$ExternalSyntheticLambda6 v11 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v6); boolean v13 = this.mHandler.post(v11); this.mBar.disable(0, v6, v7);","StatusBarManagerService.manageDisableListLocked(p4, p1, p2, p3, 2);",0.8280244469642639
getNavBarMode()I,setNavBarMode(I)V,"int v5 = Settings$Secure.getIntForUser(v4, ""nav_bar_kids_mode"", this.mCurrentUserId); return v5;","boolean v5 = Settings$Secure.putIntForUser(v4, ""nav_bar_kids_mode"", p1, this.mCurrentUserId); boolean v7 = Settings$Secure.putIntForUser(v6, ""nav_bar_force_visible"", p1, this.mCurrentUserId); boolean v18 = v8.setEnabledExclusiveInCategory(""com.android.internal.systemui.navbar.threebutton"", this.mCurrentUserId);",0.8082480430603027
getNavBarMode()I,getLastResumedActivityUserId()I,"int v5 = Settings$Secure.getIntForUser(v4, ""nav_bar_kids_mode"", this.mCurrentUserId); return v5;",int v5 = p0.getCurrentUserId(); return v5;,0.6549129486083984
onSessionStarted(ILcom/android/internal/logging/InstanceId;)V,timeShiftSeekTo(Landroid/os/IBinder;JI)V,Integer v6 = Integer.valueOf(p1); boolean v7 = StatusBarManager.ALL_SESSIONS.contains(v6); Integer v8 = Integer.valueOf(p1); Object v9 = this.mSessionToListeners.get(v8); Iterator v10 = v9.iterator(); boolean v11 = v10.hasNext();,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9;",0.638677716255188
onSessionStarted(ILcom/android/internal/logging/InstanceId;)V,timeShiftPause(Landroid/os/IBinder;I)V,Integer v6 = Integer.valueOf(p1); boolean v7 = StatusBarManager.ALL_SESSIONS.contains(v6); Integer v8 = Integer.valueOf(p1); Object v9 = this.mSessionToListeners.get(v8); Iterator v10 = v9.iterator(); boolean v11 = v10.hasNext();,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPause();",0.6235004663467407
registerNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,unregisterNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,this.mBar.registerNearbyMediaDevicesProvider(p1);,this.mBar.unregisterNearbyMediaDevicesProvider(p1);,0.9452614188194275
registerNearbyMediaDevicesProvider(Landroid/media/INearbyMediaDevicesProvider;)V,setUdfpsHbmListener(Landroid/hardware/fingerprint/IUdfpsHbmListener;)V,this.mBar.registerNearbyMediaDevicesProvider(p1);,this.mBar.setUdfpsHbmListener(p1);,0.7003138065338135
clearNotificationEffects()V,onNotificationClear(Ljava/lang/String;ILjava/lang/String;IILcom/android/internal/statusbar/NotificationVisibility;)V,this.mNotificationDelegate.clearEffects();,"this.mNotificationDelegate.onNotificationClear(v3, v4, p1, p2, p3, p4, p5, p6);",0.67365962266922
clearNotificationEffects()V,onNotificationClick(Ljava/lang/String;Lcom/android/internal/statusbar/NotificationVisibility;)V,this.mNotificationDelegate.clearEffects();,"this.mNotificationDelegate.onNotificationClick(v3, v4, p1, p2);",0.6502302289009094
onBiometricHelp(ILjava/lang/String;)V,onBiometricError(III)V,"this.mBar.onBiometricHelp(p1, p2);","this.mBar.onBiometricError(p1, p2, p3);",0.8220215439796448
onBiometricHelp(ILjava/lang/String;)V,suppressAmbientDisplay(Z)V,"this.mBar.onBiometricHelp(p1, p2);",this.mBar.suppressAmbientDisplay(p1);,0.7158387303352356
cancelRequestAddTile(Ljava/lang/String;)V,remTile(Landroid/content/ComponentName;)V,Object v5 = this.mCurrentRequestAddTilePackages.remove(p1); this.mBar.cancelRequestAddTile(p1);,this.mBar.remQsTile(p1);,0.6919639706611633
cancelRequestAddTile(Ljava/lang/String;)V,requestTileServiceListeningState(Landroid/content/ComponentName;I)V,Object v5 = this.mCurrentRequestAddTilePackages.remove(p1); this.mBar.cancelRequestAddTile(p1);,this.mBar.requestTileServiceListeningState(p1);,0.663252592086792
getDisableFlags(Landroid/os/IBinder;I)[I,releaseSession(Landroid/os/IBinder;I)V,[I v8 = new [I(2); return v8;,[I v33 = new [I(2); int v34 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(p3); String v35 = new String(2); String v36 = TvInputManagerService$SessionState.-$$Nest$fgetsessionId(p3);,0.6434436440467834
getDisableFlags(Landroid/os/IBinder;I)[I,getVibratorIds()[I,[I v8 = new [I(2); return v8;,"[I v1 = Arrays.copyOf(this.mVibratorIds, this.mVibratorIds.length); return v1;",0.6145800948143005
hideAuthenticationDialog(J)V,showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZIJLjava/lang/String;JI)V,this.mBar.hideAuthenticationDialog(p1);,"this.mBar.showAuthenticationDialog(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);",0.8986908197402954
hideAuthenticationDialog(J)V,suppressAmbientDisplay(Z)V,this.mBar.hideAuthenticationDialog(p1);,this.mBar.suppressAmbientDisplay(p1);,0.6777492761611938
addTile(Landroid/content/ComponentName;)V,clickTile(Landroid/content/ComponentName;)V,this.mBar.addQsTile(p1);,this.mBar.clickQsTile(p1);,0.8851501941680908
addTile(Landroid/content/ComponentName;)V,remTile(Landroid/content/ComponentName;)V,this.mBar.addQsTile(p1);,this.mBar.remQsTile(p1);,0.8795993328094482
setIconVisibility(Ljava/lang/String;Z)V,setIcon(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V,"Object v3 = this.mIcons.get(p1); StatusBarIcon.visible = p2; this.mBar.setIcon(p1, v3);","StatusBarIcon v3 = new StatusBarIcon(p2,UserHandle.SYSTEM,p3,p4,0,p5); Object v5 = this.mIcons.put(p1, v3); this.mBar.setIcon(p1, v3);",0.8765749335289001
setIconVisibility(Ljava/lang/String;Z)V,registerStatusBar(Lcom/android/internal/statusbar/IStatusBar;)Lcom/android/internal/statusbar/RegisterStatusBarResult;,"Object v3 = this.mIcons.get(p1); StatusBarIcon.visible = p2; this.mBar.setIcon(p1, v3);","this.mBar = p1; ArrayMap v24 = new ArrayMap(this.mIcons); Object v26 = this.mDisplayUiState.get(0); RegisterStatusBarResult v30 = new RegisterStatusBarResult(v24,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v42,v29,v43); return v30;",0.7913923859596252
grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V,takePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,"GrantUri v9 = new GrantUri(p6,p4,p5); int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4); int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12); UriGrantsManagerService.grantUriPermissionUnchecked(v13, p3, v9, p5, v5);","int v2 = this.mPmInternal.getPackageUid(p3, 0, p4); GrantUri v4 = new GrantUri(p4,p1,0); Object v7 = this.mGrantedUriPermissions.get(phiInstruction);",0.8217834234237671
grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V,takePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,"GrantUri v9 = new GrantUri(p6,p4,p5); int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4); int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12);","int v2 = this.mPmInternal.getPackageUid(p3, 0, p4); GrantUri v4 = new GrantUri(p4,p1,0); Object v7 = this.mGrantedUriPermissions.get(phiInstruction);",0.8199201822280884
getUriPermissions(Ljava/lang/String;ZZ)Landroid/content/pm/ParceledListSlice;,getGrantedUriPermissions(Ljava/lang/String;I)Landroid/content/pm/ParceledListSlice;,ArrayList v8 = new ArrayList(); ArrayList v7 = v8; ParceledListSlice v12 = new ParceledListSlice(v7); return v12;,ArrayList v2 = new ArrayList(); ParceledListSlice v5 = new ParceledListSlice(v2); return v5;,0.9748629331588745
getUriPermissions(Ljava/lang/String;ZZ)Landroid/content/pm/ParceledListSlice;,getGrantedUriPermissions(Ljava/lang/String;I)Landroid/content/pm/ParceledListSlice;,ArrayList v8 = new ArrayList(); ArrayList v7 = v8; ParceledListSlice v17 = new ParceledListSlice(v7); return v17;,ArrayList v2 = new ArrayList(); ParceledListSlice v5 = new ParceledListSlice(v2); return v5;,0.9687861204147339
releasePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V,"int v2 = this.mPmInternal.getPackageUid(p3, 0, p4); GrantUri v4 = new GrantUri(p4,p1,0); this.persistedModeFlags = ((~(p2 & 3)) & this.persistedModeFlags); this.modeFlags = ((this.ownedModeFlags | this.globalModeFlags) | this.persistedModeFlags); p0.removeUriPermissionIfNeededLocked(v6);","GrantUri v9 = new GrantUri(p6,p4,p5); int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4); int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12); UriGrantsManagerService.grantUriPermissionUnchecked(v13, p3, v9, p5, v5);",0.8145187497138977
releasePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V,"GrantUri v9 = new GrantUri(p4,p1,128); p0.removeUriPermissionIfNeededLocked(v11); this.persistedCreateTime = 0;","GrantUri v9 = new GrantUri(p6,p4,p5); int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4); int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12); UriGrantsManagerService.grantUriPermissionUnchecked(v13, p3, v9, p5, v5);",0.8044271469116211
getGrantedUriPermissions(Ljava/lang/String;I)Landroid/content/pm/ParceledListSlice;,getUriPermissions(Ljava/lang/String;ZZ)Landroid/content/pm/ParceledListSlice;,ArrayList v2 = new ArrayList(); ParceledListSlice v5 = new ParceledListSlice(v2); return v5;,ArrayList v8 = new ArrayList(); ArrayList v7 = v8; ParceledListSlice v12 = new ParceledListSlice(v7); return v12;,0.9748629331588745
getGrantedUriPermissions(Ljava/lang/String;I)Landroid/content/pm/ParceledListSlice;,getUriPermissions(Ljava/lang/String;ZZ)Landroid/content/pm/ParceledListSlice;,ArrayList v2 = new ArrayList(); ParceledListSlice v5 = new ParceledListSlice(v2); return v5;,ArrayList v8 = new ArrayList(); ArrayList v7 = v8; ParceledListSlice v17 = new ParceledListSlice(v7); return v17;,0.9687861204147339
takePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V,"int v2 = this.mPmInternal.getPackageUid(p3, 0, p4); GrantUri v4 = new GrantUri(p4,p1,0); Object v7 = this.mGrantedUriPermissions.get(phiInstruction);","GrantUri v9 = new GrantUri(p6,p4,p5); int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4); int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12); UriGrantsManagerService.grantUriPermissionUnchecked(v13, p3, v9, p5, v5);",0.8217834234237671
takePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V,"int v2 = this.mPmInternal.getPackageUid(p3, 0, p4); GrantUri v4 = new GrantUri(p4,p1,0); Object v7 = this.mGrantedUriPermissions.get(phiInstruction);","GrantUri v9 = new GrantUri(p6,p4,p5); int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4); int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12);",0.8199201822280884
clearGrantedUriPermissions(Ljava/lang/String;I)V,No similar EPs with similarity > 0.8,,,
getCurrentRules()Landroid/content/pm/ParceledListSlice;,requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I,"String v7 = p1.getPackageName(); RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7); boolean v9 = v5.add(v8); List v26 = this.mRuleParser.parse(v23, phiInstruction); ParceledListSlice v28 = new ParceledListSlice(phiInstruction); return v28;","ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong(); CheckToken v11 = new CheckToken(v8,v12); PackageVersions v12 = new PackageVersions(v9,v10); RulesManagerService$InstallRunnable v20 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);",0.6589115262031555
getCurrentRules()Landroid/content/pm/ParceledListSlice;,takePersistableUriPermission(Landroid/net/Uri;ILjava/lang/String;I)V,"String v7 = p1.getPackageName(); RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7); boolean v9 = v5.add(v8); List v26 = this.mRuleParser.parse(v23, phiInstruction); ParceledListSlice v28 = new ParceledListSlice(phiInstruction); return v28;","int v2 = this.mPmInternal.getPackageUid(p3, 0, p4); GrantUri v4 = new GrantUri(p4,p1,0); Object v7 = this.mGrantedUriPermissions.get(phiInstruction);",0.6563723087310791
getWhitelistedRuleProviders()Ljava/util/List;,getPersistentDataPackageName()Ljava/lang/String;,String v3 = v2.getStringArray(17236075); List v4 = Arrays.asList(v3);,String v8 = v7.getString(17040017); return v8;,0.800874650478363
getWhitelistedRuleProviders()Ljava/util/List;,getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;,String v3 = v2.getStringArray(17236075); List v4 = Arrays.asList(v3);,ArrayList v5 = new ArrayList(); List v4 = v5; List v3 = v4; return v3;,0.7590369582176208
getCurrentRuleSetVersion()Ljava/lang/String;,getCurrentRuleSetProvider()Ljava/lang/String;,RuleMetadata v12 = this.mIntegrityFileManager.readMetadata(); String v13 = v12.getVersion(); return phiInstruction;,RuleMetadata v12 = this.mIntegrityFileManager.readMetadata(); String v13 = v12.getRuleProvider();,0.8294752836227417
getCurrentRuleSetVersion()Ljava/lang/String;,getPortInfo()Ljava/util/List;,RuleMetadata v12 = this.mIntegrityFileManager.readMetadata(); String v13 = v12.getVersion(); return phiInstruction;,List v6 = this.mPortInfo; List v5 = v6; List v8 = this.mPortInfo; List v7 = v8; return phiInstruction;,0.7243452668190002
getCurrentRuleSetProvider()Ljava/lang/String;,isApkVeritySupported()Z,return phiInstruction;,boolean v1 = phiInstruction; return v1;,0.8940640687942505
getCurrentRuleSetProvider()Ljava/lang/String;,getClientPid(Ljava/lang/String;)I,return phiInstruction;,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,0.8651769161224365
beginRecognition(Landroid/media/musicrecognition/RecognitionRequest;Landroid/os/IBinder;)V,startRecording(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,"RemoteMusicRecognitionService v41 = new RemoteMusicRecognitionService(v42,v40,AbstractPerUserSystemService.mUserId,MusicRecognitionManagerPerUserService,v43,v45,AbstractMasterSystemService.verbose); this.mRemoteService = v41; CompletableFuture v51 = this.mRemoteService.getAttributionTag(); this.mAttributionTagFuture = v51;","ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.startRecording(p2, p3);",0.6746499538421631
beginRecognition(Landroid/media/musicrecognition/RecognitionRequest;Landroid/os/IBinder;)V,pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,"RemoteMusicRecognitionService v41 = new RemoteMusicRecognitionService(v42,v40,AbstractPerUserSystemService.mUserId,MusicRecognitionManagerPerUserService,v43,v45,AbstractMasterSystemService.verbose); this.mRemoteService = v41; CompletableFuture v51 = this.mRemoteService.getAttributionTag(); this.mAttributionTagFuture = v51;",ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.pauseRecording(p2);,0.6725035905838013
isParentalControlsEnabled(I)Z,togglePanel()V,boolean v15 = this.mParentalControlsEnabled; return v15;,Object v19 = this.mDisplayUiState.get(0); int v21 = v19.getDisabled2(); this.mBar.togglePanel();,0.6670525074005127
isParentalControlsEnabled(I)Z,togglePanel()V,boolean v15 = this.mParentalControlsEnabled; return v15;,Object v19 = this.mDisplayUiState.get(0); int v21 = v19.getDisabled2();,0.6546316146850586
isSingleSessionActive(I)Z,getCurrentTunedInfos(I)Ljava/util/List;,"int v9 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); this.mUserStates.put(p2, new TvInputManagerService$UserState(this.mContext,p2,0)); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v11); TvInputManagerService$SessionState v23 = new TvInputManagerService$SessionState(2);","int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v12); Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);",0.9732560515403748
isSingleSessionActive(I)Z,registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,"int v9 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); this.mUserStates.put(p2, new TvInputManagerService$UserState(this.mContext,p2,0)); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v11); TvInputManagerService$SessionState v23 = new TvInputManagerService$SessionState(2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11); RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8); boolean v15 = v14.register(p1);",0.9412776231765747
tune(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,getTvInputState(Ljava/lang/String;I)I,"TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v16);","TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);",0.9903730750083923
tune(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V,"TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v16);","TvInputManagerService$UserState v17 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v17);",0.9867420792579651
getTvInputState(Ljava/lang/String;I)I,getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo;,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,0.9999999403953552
getTvInputState(Ljava/lang/String;I)I,tune(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,"TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);","TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v16);",0.9903730750083923
setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setInteractiveAppNotificationEnabled(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9824851751327515
setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setInteractiveAppNotificationEnabled(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.appPrivateCommand(p2, p3);",0.97187739610672
unregisterCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,Map v13 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8); Object v14 = v13.remove(p1);,"Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8); Integer v17 = Integer.valueOf(v1); Integer v18 = Integer.valueOf(v2); Pair v19 = Pair.create(v17, v18); Object v20 = v16.put(p1, v19);",0.9403746128082275
unregisterCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,getTvInputState(Ljava/lang/String;I)I,Map v13 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8); Object v14 = v13.remove(p1);,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,0.7956500053405762
removeBlockedRating(Ljava/lang/String;I)V,addBlockedRating(Ljava/lang/String;I)V,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); TvContentRating v18 = TvContentRating.unflattenFromString(p1); boolean v22 = this.mBlockedRatings.contains(v18); boolean v23 = this.mBlockedRatings.remove(v18);,TvContentRating v15 = TvContentRating.unflattenFromString(p1); boolean v19 = this.mBlockedRatings.contains(v15); boolean v20 = this.mBlockedRatings.add(v15);,0.9024205207824707
removeBlockedRating(Ljava/lang/String;I)V,isRatingBlocked(Ljava/lang/String;I)Z,PersistentDataStore v17 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v11); TvContentRating v18 = TvContentRating.unflattenFromString(p1); boolean v22 = this.mBlockedRatings.contains(v18); boolean v23 = this.mBlockedRatings.remove(v18);,PersistentDataStore v14 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v8); TvContentRating v15 = TvContentRating.unflattenFromString(p1);,0.885508120059967
sendTvInputNotifyIntent(Landroid/content/Intent;I)V,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,"String v3 = p1.getPackage(); String v5 = p1.getAction(); long v9 = p1.getLongExtra(""android.media.tv.extra.PREVIEW_PROGRAM_ID"", -1); int v14 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); UserHandle v18 = new UserHandle(v13); v17.sendBroadcastAsUser(p1, v18);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.appPrivateCommand(p2, p3);",0.8051350116729736
sendTvInputNotifyIntent(Landroid/content/Intent;I)V,releaseTvInputHardware(ILandroid/media/tv/ITvInputHardware;I)V,"String v3 = p1.getPackage(); String v5 = p1.getAction(); long v9 = p1.getLongExtra(""android.media.tv.extra.PREVIEW_PROGRAM_ID"", -1); int v14 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); UserHandle v18 = new UserHandle(v13); v17.sendBroadcastAsUser(p1, v18);","int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); int v7 = v8; int v6 = v7;",0.7829576730728149
getExtensionInterface(Ljava/lang/String;Ljava/lang/String;I)Landroid/os/IBinder;,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,"int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); ITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22); String v26 = phiInstruction.getExtensionInterfacePermission(p2); IBinder v27 = phiInstruction.getExtensionInterface(p2); return v27;","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.appPrivateCommand(p2, p3);",0.912330687046051
getExtensionInterface(Ljava/lang/String;Ljava/lang/String;I)Landroid/os/IBinder;,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); ITvInputService v24 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v22); String v26 = phiInstruction.getExtensionInterfacePermission(p2); IBinder v27 = phiInstruction.getExtensionInterface(p2); return v27;","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9028145670890808
getTvContentRatingSystemList(I)Ljava/util/List;,getTvInputState(Ljava/lang/String;I)I,"TvInputManagerService$UserState v13 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v13); List v16 = TvInputManagerService$UserState.-$$Nest$fgetcontentRatingSystemList(v10); return v16;","TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);",0.8179425597190857
getTvContentRatingSystemList(I)Ljava/util/List;,createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V,"TvInputManagerService$UserState v13 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v13); List v16 = TvInputManagerService$UserState.-$$Nest$fgetcontentRatingSystemList(v10); return v16;","TvInputManagerService$UserState v17 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v17);",0.8168033361434937
addBlockedRating(Ljava/lang/String;I)V,removeBlockedRating(Ljava/lang/String;I)V,TvContentRating v15 = TvContentRating.unflattenFromString(p1); boolean v19 = this.mBlockedRatings.contains(v15); boolean v20 = this.mBlockedRatings.add(v15);,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); TvContentRating v18 = TvContentRating.unflattenFromString(p1); boolean v22 = this.mBlockedRatings.contains(v18); boolean v23 = this.mBlockedRatings.remove(v18);,0.9024205207824707
addBlockedRating(Ljava/lang/String;I)V,removeBlockedRating(Ljava/lang/String;I)V,TvInputManagerService$UserState v14 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v11); this.mBlockedRatings.contains(v15); this.mBlockedRatings.add(v15);,PersistentDataStore v14 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v11); TvContentRating v15 = TvContentRating.unflattenFromString(p1); boolean v19 = this.mBlockedRatings.contains(v15); boolean v20 = this.mBlockedRatings.remove(v15);,0.8442290425300598
requestAd(Landroid/os/IBinder;Landroid/media/tv/AdRequest;I)V,requestBroadcastInfo(Landroid/os/IBinder;Landroid/media/tv/BroadcastInfoRequest;I)V,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestAd(p2);,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestBroadcastInfo(p2);,0.8856154084205627
requestAd(Landroid/os/IBinder;Landroid/media/tv/AdRequest;I)V,requestBroadcastInfo(Landroid/os/IBinder;Landroid/media/tv/BroadcastInfoRequest;I)V,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestAd(p2);,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestBroadcastInfo(p2);,0.8856154084205627
getClientPid(Ljava/lang/String;)I,getMaximumDataBlockSize()J,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,long v5 = phiInstruction; long v4 = v5; return v4;,0.8663026094436646
getClientPid(Ljava/lang/String;)I,getCurrentRuleSetProvider()Ljava/lang/String;,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,return phiInstruction;,0.8651769161224365
dispatchSurfaceChanged(Landroid/os/IBinder;IIII)V,isSingleSessionActive(I)Z,IBinder v16 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v8);,IBinder v25 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v24[0]); IBinder v26 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v24[1]);,0.8969283103942871
dispatchSurfaceChanged(Landroid/os/IBinder;IIII)V,releaseSession(Landroid/os/IBinder;I)V,"TvInputManagerService$UserState v10 = TvInputManagerService.getOrCreateUserStateLocked(p4); TvInputManagerService$SessionState v11 = TvInputManagerService.getSessionStateLocked(p2, p3, v10); ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v12 = v13; v12.dispatchSurfaceChanged(p2, p3, p4);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); TvInputManagerService$UserState v11 = TvInputManagerService.getOrCreateUserStateLocked(p4); ITvInputSession v12 = TvInputManagerService$SessionState.-$$Nest$fgetsession(v10); TvInputManagerService$SessionState.-$$Nest$fputsession(phiInstruction, 0); TvInputManagerService.removeSessionStateLocked(p2, p4);",0.8599663972854614
requestChannelBrowsable(Landroid/net/Uri;I)V,No similar EPs with similarity > 0.8,,,
setMainSession(Landroid/os/IBinder;I)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v21 = TvInputManagerService.getSessionStateLocked(p2, p4, p5);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9679029583930969
setMainSession(Landroid/os/IBinder;I)V,setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V,"int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v21 = TvInputManagerService.getSessionStateLocked(p2, p4, p5);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setInteractiveAppNotificationEnabled(p2);",0.9610762000083923
stopRecording(Landroid/os/IBinder;I)V,resumeRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.stopRecording();","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.resumeRecording(p2);",0.9809174537658691
stopRecording(Landroid/os/IBinder;I)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.stopRecording();","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9371896982192993
getCurrentTunedInfos(I)Ljava/util/List;,isSingleSessionActive(I)Z,"int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v12); Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);","int v9 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); this.mUserStates.put(p2, new TvInputManagerService$UserState(this.mContext,p2,0)); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v11); TvInputManagerService$SessionState v23 = new TvInputManagerService$SessionState(2);",0.9732560515403748
getCurrentTunedInfos(I)Ljava/util/List;,registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,"int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v12); Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11); RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8); boolean v15 = v14.register(p1);",0.9628579616546631
setSurface(Landroid/os/IBinder;Landroid/view/Surface;I)V,getCurrentTunedInfos(I)Ljava/util/List;,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); Object v10 = this.mUserStates.get(p2); Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(p2); String v16 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(p1); Object v17 = v15.get(v16);","int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v12); Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);",0.9315957427024841
setSurface(Landroid/os/IBinder;Landroid/view/Surface;I)V,registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); Object v10 = this.mUserStates.get(p2); Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(p2); String v16 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(p1); Object v17 = v15.get(v16);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11); RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8); boolean v15 = v14.register(p1);",0.9141644239425659
removeOverlayView(Landroid/os/IBinder;I)V,createOverlayView(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/graphics/Rect;I)V,ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.removeOverlayView();,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.createOverlayView(p2, p3);",0.8763269782066345
removeOverlayView(Landroid/os/IBinder;I)V,relayoutOverlayView(Landroid/os/IBinder;Landroid/graphics/Rect;I)V,ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.removeOverlayView();,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.relayoutOverlayView(p2);",0.8659109473228455
releaseSession(Landroid/os/IBinder;I)V,captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z,Object v18 = this.mUserStates.get(p2); Map v21 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(p2); String v22 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(p1); Object v23 = v21.get(v22);,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v11);,0.8862144947052002
releaseSession(Landroid/os/IBinder;I)V,getTvInputState(Ljava/lang/String;I)I,Object v18 = this.mUserStates.get(p2); Map v21 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(p2); String v22 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(p1); Object v23 = v21.get(v22);,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,0.8790606260299683
getClientPriority(ILjava/lang/String;)I,openTuner(ILandroid/hardware/radio/RadioManager$BandConfig;ZLandroid/hardware/radio/ITunerCallback;)Landroid/hardware/radio/ITuner;,"Object v14 = v13.getSystemService(""tv_tuner_resource_mgr""); int v15 = v14.getClientPriority(p1, phiInstruction); return v15;","Object v18 = Objects.requireNonNull(p4); Integer v19 = Integer.valueOf(p1); TunerSession v30 = new TunerSession(RadioModule,this.mHalTunerSession,p4,this.mLock); boolean v32 = this.mAidlTunerSessions.add(v30); ITuner v16 = v21; return v16;",0.6544802188873291
getClientPriority(ILjava/lang/String;)I,getCurrentTunedInfos(I)Ljava/util/List;,"Object v14 = v13.getSystemService(""tv_tuner_resource_mgr""); int v15 = v14.getClientPriority(p1, phiInstruction); return v15;","boolean v19 = TvInputManagerService.hasAccessWatchedProgramsPermission(p3, p4); ArrayList v17 = new ArrayList(); Collection v21 = v20.values(); return v15;",0.6269972324371338
getBlockedRatings(I)Ljava/util/List;,isRatingBlocked(Ljava/lang/String;I)Z,"TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);","TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);",1.0
getBlockedRatings(I)Ljava/util/List;,getTvInputState(Ljava/lang/String;I)I,"TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);","TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);",0.9570844769477844
getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo;,getTvInputState(Ljava/lang/String;I)I,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,0.9999999403953552
getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo;,getTvInputState(Ljava/lang/String;I)I,Map v14 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v15 = v14.get(p1); TvInputInfo v16 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v15);,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,0.9239077568054199
captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z,getAvailableExtensionInterfaceNames(Ljava/lang/String;I)Ljava/util/List;,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v11);,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = v12; Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); return v35;,0.9303160905838013
captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z,tune(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v11);,Map v21 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p4); Object v22 = v21.get(p2); int v23 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v22);,0.9280126690864563
getDvbDeviceList()Ljava/util/List;,getAvailableTvStreamConfigList(Ljava/lang/String;I)Ljava/util/List;,ArrayList v4 = new ArrayList(); List v9 = Collections.unmodifiableList(v4); return v9;,ArrayList v12 = new ArrayList(); List v11 = v12; return v11;,0.9038645029067993
getDvbDeviceList()Ljava/util/List;,getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;,ArrayList v4 = new ArrayList(); List v9 = Collections.unmodifiableList(v4); return v9;,ArrayList v5 = new ArrayList(); List v4 = v5; List v3 = v4; return v3;,0.8842421770095825
relayoutOverlayView(Landroid/os/IBinder;Landroid/graphics/Rect;I)V,createOverlayView(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/graphics/Rect;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.relayoutOverlayView(p2);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.createOverlayView(p2, p3);",0.9483696222305298
relayoutOverlayView(Landroid/os/IBinder;Landroid/graphics/Rect;I)V,pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.relayoutOverlayView(p2);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);",0.8785600066184998
sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.appPrivateCommand(p2, p3);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9720152020454407
sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.appPrivateCommand(p2, p3);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setInteractiveAppNotificationEnabled(p2);",0.97187739610672
pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,startRecording(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.pauseRecording(p2);,"ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.startRecording(p2, p3);",0.9699962139129639
pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,timeShiftSeekTo(Landroid/os/IBinder;JI)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9;",0.945156455039978
timeShiftResume(Landroid/os/IBinder;I)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftResume();","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9757729172706604
timeShiftResume(Landroid/os/IBinder;I)V,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftResume();","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.appPrivateCommand(p2, p3);",0.9661659002304077
resumeRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,stopRecording(Landroid/os/IBinder;I)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.resumeRecording(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.stopRecording();",0.9809174537658691
resumeRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.resumeRecording(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9330093264579773
setVolume(Landroid/os/IBinder;FI)V,requestAd(Landroid/os/IBinder;Landroid/media/tv/AdRequest;I)V,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.setVolume(p2);,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestAd(p2);,0.8621989488601685
setVolume(Landroid/os/IBinder;FI)V,timeShiftPlay(Landroid/os/IBinder;Landroid/net/Uri;I)V,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.setVolume(p2);,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPlay(p2);",0.8227989673614502
timeShiftSeekTo(Landroid/os/IBinder;JI)V,timeShiftPause(Landroid/os/IBinder;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9;","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPause();",0.9772777557373047
timeShiftSeekTo(Landroid/os/IBinder;JI)V,pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9;","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);",0.945156455039978
setCaptionEnabled(Landroid/os/IBinder;ZI)V,setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setCaptionEnabled(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setInteractiveAppNotificationEnabled(p2);",0.9715989232063293
setCaptionEnabled(Landroid/os/IBinder;ZI)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setCaptionEnabled(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9700949192047119
getTvInputList(I)Ljava/util/List;,getTvInputState(Ljava/lang/String;I)I,ArrayList v11 = new ArrayList(); Map v13 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Collection v14 = v13.values(); Iterator v15 = v14.iterator(); boolean v16 = v15.hasNext(); return v11;,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,0.845664918422699
getTvInputList(I)Ljava/util/List;,getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo;,ArrayList v11 = new ArrayList(); Map v13 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Collection v14 = v13.values(); Iterator v15 = v14.iterator(); boolean v16 = v15.hasNext(); return v11;,Map v11 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v12 = v11.get(p1);,0.845664918422699
removeHardwareDevice(I)V,scheduleNonStrongBiometricIdleTimeout(I)V,"Message v13 = this.mHandler.obtainMessage(3, 0, 0, v9); v13.sendToTarget();","Message v4 = this.mHandler.obtainMessage(9, p1, 0); v4.sendToTarget();",0.9392408132553101
removeHardwareDevice(I)V,unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v13 = this.mHandler.obtainMessage(3, 0, 0, v9); v13.sendToTarget();","Message v4 = this.mHandler.obtainMessage(3, p1); v4.sendToTarget();",0.928413987159729
setParentalControlsEnabled(ZI)V,registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,"int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v14); this.mParentalControlsEnabled = p1; this.mLoaded = 1; this.mParentalControlsEnabledChanged = 1;","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11); RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8); boolean v15 = v14.register(p1);",0.944612979888916
setParentalControlsEnabled(ZI)V,getCurrentTunedInfos(I)Ljava/util/List;,"int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v14); this.mParentalControlsEnabled = p1; this.mLoaded = 1; this.mParentalControlsEnabledChanged = 1;","int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v12); Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);",0.9325059056282043
getAvailableExtensionInterfaceNames(Ljava/lang/String;I)Ljava/util/List;,captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = v12; Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); return v35;,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v11);,0.9303160905838013
getAvailableExtensionInterfaceNames(Ljava/lang/String;I)Ljava/util/List;,getTvInputState(Ljava/lang/String;I)I,TvInputManagerService$UserState v13 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = v12; Map v17 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v11); Object v18 = v17.get(p1); return v35;,"TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11); Map v14 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8); Object v15 = v14.get(p1); int v16 = TvInputManagerService$TvInputState.-$$Nest$fgetstate(v15);",0.8772438168525696
getHardwareList()Ljava/util/List;,getDvbDeviceList()Ljava/util/List;,List v6 = Collections.unmodifiableList(this.mHardwareList); List v5 = v6; return v5;,ArrayList v4 = new ArrayList(); List v9 = Collections.unmodifiableList(v4); return v9;,0.68170166015625
getHardwareList()Ljava/util/List;,getAvailableTvStreamConfigList(Ljava/lang/String;I)Ljava/util/List;,List v6 = Collections.unmodifiableList(this.mHardwareList); List v5 = v6; return v5;,ArrayList v12 = new ArrayList(); List v11 = v12; return v11;,0.6691240668296814
registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,getCurrentTunedInfos(I)Ljava/util/List;,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11); RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8); boolean v15 = v14.register(p1);","int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v12); Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);",0.9628579616546631
registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V,setParentalControlsEnabled(ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11); RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8); boolean v15 = v14.register(p1);","int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$UserState v14 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v14); this.mParentalControlsEnabled = p1; this.mLoaded = 1; this.mParentalControlsEnabledChanged = 1;",0.944612979888916
releaseTvInputHardware(ILandroid/media/tv/ITvInputHardware;I)V,removeHardwareDevice(I)V,"Object v11 = this.mConnections.get(p1); v11.resetLocked(0, 0, 0, 0, 0, 0);","Object v3 = this.mConnections.get(p1); v3.resetLocked(0, 0, 0, 0, 0, 0); this.mConnections.remove(p1);",0.9269204139709473
releaseTvInputHardware(ILandroid/media/tv/ITvInputHardware;I)V,setMainSession(Landroid/os/IBinder;I)V,"int v8 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); int v7 = v8; int v6 = v7;","int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v21 = TvInputManagerService.getSessionStateLocked(p2, p4, p5);",0.911331295967102
startRecording(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,"ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.startRecording(p2, p3);",ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.pauseRecording(p2);,0.9699962139129639
startRecording(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,stopRecording(Landroid/os/IBinder;I)V,"ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.startRecording(p2, p3);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.stopRecording();",0.8451932668685913
isRatingBlocked(Ljava/lang/String;I)Z,getBlockedRatings(I)Ljava/util/List;,"TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);","TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);",1.0
isRatingBlocked(Ljava/lang/String;I)Z,getTvInputState(Ljava/lang/String;I)I,"TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2); TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);","TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);",0.9570844769477844
selectTrack(Landroid/os/IBinder;ILjava/lang/String;I)V,timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.selectTrack(p2, p3);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);",0.9449871778488159
selectTrack(Landroid/os/IBinder;ILjava/lang/String;I)V,setCaptionEnabled(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.selectTrack(p2, p3);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setCaptionEnabled(p2);",0.9414563179016113
requestBroadcastInfo(Landroid/os/IBinder;Landroid/media/tv/BroadcastInfoRequest;I)V,requestAd(Landroid/os/IBinder;Landroid/media/tv/AdRequest;I)V,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestBroadcastInfo(p2);,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestAd(p2);,0.8856154084205627
requestBroadcastInfo(Landroid/os/IBinder;Landroid/media/tv/BroadcastInfoRequest;I)V,requestAd(Landroid/os/IBinder;Landroid/media/tv/AdRequest;I)V,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestBroadcastInfo(p2);,ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2); ITvInputSession v13 = v14; ITvInputSession v12 = v13; v12.requestAd(p2);,0.8856154084205627
removeBroadcastInfo(Landroid/os/IBinder;II)V,No similar EPs with similarity > 0.8,,,
timeShiftPlay(Landroid/os/IBinder;Landroid/net/Uri;I)V,timeShiftPause(Landroid/os/IBinder;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPlay(p2);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPause();",0.9645163416862488
timeShiftPlay(Landroid/os/IBinder;Landroid/net/Uri;I)V,timeShiftSeekTo(Landroid/os/IBinder;JI)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPlay(p2);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9;",0.9328950643539429
timeShiftPause(Landroid/os/IBinder;I)V,timeShiftSeekTo(Landroid/os/IBinder;JI)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPause();","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9;",0.9772777557373047
timeShiftPause(Landroid/os/IBinder;I)V,timeShiftPlay(Landroid/os/IBinder;Landroid/net/Uri;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPause();","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftPlay(p2);",0.9645163416862488
timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,setInteractiveAppNotificationEnabled(Landroid/os/IBinder;ZI)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.setInteractiveAppNotificationEnabled(p2);",0.9824851751327515
timeShiftEnablePositionTracking(Landroid/os/IBinder;ZI)V,timeShiftResume(Landroid/os/IBinder;I)V,"int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.timeShiftEnablePositionTracking(p2);","int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0); TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftResume();",0.9757729172706604
getAvailableTvStreamConfigList(Ljava/lang/String;I)Ljava/util/List;,getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;,ArrayList v12 = new ArrayList(); List v11 = v12; return v11;,ArrayList v5 = new ArrayList(); List v4 = v5; List v3 = v4; return v3;,0.923088550567627
getAvailableTvStreamConfigList(Ljava/lang/String;I)Ljava/util/List;,getDvbDeviceList()Ljava/util/List;,ArrayList v12 = new ArrayList(); List v11 = v12; return v11;,ArrayList v4 = new ArrayList(); List v9 = Collections.unmodifiableList(v4); return v9;,0.9038645029067993
createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V,getTvInputState(Ljava/lang/String;I)I,"TvInputManagerService$UserState v17 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v17);","TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v11);",0.9873391389846802
createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V,tune(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,"TvInputManagerService$UserState v17 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v17);","TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v16);",0.9867420792579651
addHardwareDevice(I)V,captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z,"Integer v4 = Integer.valueOf(p1); this.mDeviceId = v4; TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11); this.mConnections.put(v37, v29);",TvInputHardwareManager v31 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0); int v34 = this.mConnections.size(); Object v35 = this.mConnections.get(phiInstruction); TvInputInfo v36 = v35.getInfoLocked(); String v37 = v36.getId();,0.8241870999336243
addHardwareDevice(I)V,captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z,TvInputHardwareInfo$Builder v34 = this.mHardwareInfo.toBuilder(); TvInputHardwareInfo$Builder v35 = v34.cableConnectionStatus(v32); TvInputHardwareInfo v36 = v35.build(); this.mHardwareInfo = v36;,TvInputHardwareManager v31 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0); int v34 = this.mConnections.size(); Object v35 = this.mConnections.get(phiInstruction); TvInputInfo v36 = v35.getInfoLocked(); String v37 = v36.getId();,0.815807580947876
createOverlayView(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/graphics/Rect;I)V,relayoutOverlayView(Landroid/os/IBinder;Landroid/graphics/Rect;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.createOverlayView(p2, p3);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v8 = v9; v8.relayoutOverlayView(p2);",0.9483696222305298
createOverlayView(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/graphics/Rect;I)V,pauseRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,"TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.createOverlayView(p2, p3);","TvInputManagerService$SessionState v10 = TvInputManagerService.getSessionStateLocked(p2, p3, p4); ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10);",0.8957997560501099
unblockContent(Landroid/os/IBinder;Ljava/lang/String;I)V,removeOverlayView(Landroid/os/IBinder;I)V,ITvInputSession v14 = TvInputManagerService.getSessionLocked(v13); ITvInputSession v12 = v14; ITvInputSession v11 = v12; v11.unblockContent(p2);,ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.removeOverlayView();,0.8599054217338562
unblockContent(Landroid/os/IBinder;Ljava/lang/String;I)V,timeShiftSeekTo(Landroid/os/IBinder;JI)V,ITvInputSession v14 = TvInputManagerService.getSessionLocked(v13); ITvInputSession v12 = v14; ITvInputSession v11 = v12; v11.unblockContent(p2);,ITvInputSession v11 = TvInputManagerService.getSessionLocked(v10); ITvInputSession v9 = v11; ITvInputSession v8 = v9; v8.timeShiftSeekTo(p2);,0.8525225520133972
cancelVibrate(ILandroid/os/IBinder;)V,setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z,Vibration v13 = this.mVibration; v13.end(p1); this.mVibratorManagerRecords.record(v13);,"VibrationAttributes v22 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0); VibrationAttributes v21 = v22; VibrationAttributes v4 = v21; VibratorManagerService$AlwaysOnVibration v45 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v4,v24);",0.7234979271888733
cancelVibrate(ILandroid/os/IBinder;)V,setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z,long v18 = SystemClock.uptimeMillis(); VibrationStats$StatsInfo v19 = v13.getStatsInfo(v18); this.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);,"VibrationAttributes v22 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0); VibrationAttributes v21 = v22; VibrationAttributes v4 = v21; VibratorManagerService$AlwaysOnVibration v45 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v4,v24);",0.7087259888648987
registerVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,No similar EPs with similarity > 0.8,,,
unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z,boolean v5 = this.mVibratorStateListeners.unregister(p2); return v3;,boolean v7 = this.mListeners.unregister(p1); return v6;,0.7940438985824585
unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,isVibrating(I)Z,Object v2 = this.mVibrators.get(p1);,Object v2 = this.mVibrators.get(p1); boolean v3 = this.mIsVibrating; return phiInstruction;,0.7549054622650146
getVibratorInfo(I)Landroid/os/VibratorInfo;,isVibrating(I)Z,Object v1 = this.mVibrators.get(p1); VibratorInfo v2 = this.mVibratorInfo; boolean v3 = this.mVibratorInfoLoadSuccessful; return phiInstruction;,Object v2 = this.mVibrators.get(p1); boolean v3 = this.mIsVibrating; return phiInstruction;,0.9025294780731201
getVibratorInfo(I)Landroid/os/VibratorInfo;,getClientPid(Ljava/lang/String;)I,Object v1 = this.mVibrators.get(p1); VibratorInfo v2 = this.mVibratorInfo; boolean v3 = this.mVibratorInfoLoadSuccessful; return phiInstruction;,int v11 = this.callingPid; int v6 = v11; return phiInstruction;,0.7430714964866638
setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z,cancelVibrate(ILandroid/os/IBinder;)V,"VibrationAttributes v22 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0); VibrationAttributes v21 = v22; VibrationAttributes v4 = v21; VibratorManagerService$AlwaysOnVibration v45 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v4,v24);",Vibration v13 = this.mVibration; v13.end(p1); this.mVibratorManagerRecords.record(v13);,0.7234979271888733
setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z,cancelVibrate(ILandroid/os/IBinder;)V,"VibrationAttributes v22 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0); VibrationAttributes v21 = v22; VibrationAttributes v4 = v21; VibratorManagerService$AlwaysOnVibration v45 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v4,v24);",long v18 = SystemClock.uptimeMillis(); VibrationStats$StatsInfo v19 = v13.getStatsInfo(v18); this.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);,0.7087259888648987
isVibrating(I)Z,getVibratorInfo(I)Landroid/os/VibratorInfo;,Object v2 = this.mVibrators.get(p1); boolean v3 = this.mIsVibrating; return phiInstruction;,Object v1 = this.mVibrators.get(p1); VibratorInfo v2 = this.mVibratorInfo; boolean v3 = this.mVibratorInfoLoadSuccessful; return phiInstruction;,0.9025294780731201
isVibrating(I)Z,unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,Object v2 = this.mVibrators.get(p1); boolean v3 = this.mIsVibrating; return phiInstruction;,Object v2 = this.mVibrators.get(p1);,0.7549054622650146
vibrate(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V,getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;,boolean v16 = VibratorManagerService.isEffectValid(p4);,boolean v11 = v10.containsSensor(p2);,0.6771715879440308
vibrate(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V,unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,boolean v16 = VibratorManagerService.isEffectValid(p4);,boolean v5 = this.mVibratorStateListeners.unregister(p2); return v3;,0.6397640109062195
getVibratorIds()[I,unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z,"[I v1 = Arrays.copyOf(this.mVibratorIds, this.mVibratorIds.length); return v1;",Object v2 = this.mVibrators.get(p1);,0.6461362838745117
getVibratorIds()[I,getDisableFlags(Landroid/os/IBinder;I)[I,"[I v1 = Arrays.copyOf(this.mVibratorIds, this.mVibratorIds.length); return v1;",[I v8 = new [I(2); return v8;,0.6145800948143005
clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V,setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,"VcnManagementService$$ExternalSyntheticLambda11 v28 = new VcnManagementService$$ExternalSyntheticLambda11(v26,v25,p1); Binder.withCleanCallingIdentity(v28);","VcnManagementService$$ExternalSyntheticLambda11 v26 = new VcnManagementService$$ExternalSyntheticLambda11(v24, v23, p1); Binder.withCleanCallingIdentity(v26);",0.995485782623291
clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V,setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,"VcnManagementService$$ExternalSyntheticLambda5 v40 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1); Binder.withCleanCallingIdentity(v40);","VcnManagementService$$ExternalSyntheticLambda4 v38 = new VcnManagementService$$ExternalSyntheticLambda4(p0, p1, p2); Binder.withCleanCallingIdentity(v38);",0.9822027683258057
addVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V,removeVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V,"VcnManagementService$$ExternalSyntheticLambda2 v4 = new VcnManagementService$$ExternalSyntheticLambda2(p0,p1);","VcnManagementService$$ExternalSyntheticLambda3 v4 = new VcnManagementService$$ExternalSyntheticLambda3(p0,p1);",0.9943732023239136
addVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V,setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,"VcnManagementService$$ExternalSyntheticLambda2 v4 = new VcnManagementService$$ExternalSyntheticLambda2(p0,p1);","VcnManagementService$$ExternalSyntheticLambda4 v38 = new VcnManagementService$$ExternalSyntheticLambda4(p0, p1, p2); Binder.withCleanCallingIdentity(v38);",0.9658410549163818
removeVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V,addVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V,"VcnManagementService$$ExternalSyntheticLambda3 v4 = new VcnManagementService$$ExternalSyntheticLambda3(p0,p1);","VcnManagementService$$ExternalSyntheticLambda2 v4 = new VcnManagementService$$ExternalSyntheticLambda2(p0,p1);",0.9943732023239136
removeVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V,setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,"VcnManagementService$$ExternalSyntheticLambda3 v4 = new VcnManagementService$$ExternalSyntheticLambda3(p0,p1);","VcnManagementService$$ExternalSyntheticLambda4 v38 = new VcnManagementService$$ExternalSyntheticLambda4(p0, p1, p2); Binder.withCleanCallingIdentity(v38);",0.958786129951477
setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V,"VcnManagementService$$ExternalSyntheticLambda11 v26 = new VcnManagementService$$ExternalSyntheticLambda11(v24, v23, p1); Binder.withCleanCallingIdentity(v26);","VcnManagementService$$ExternalSyntheticLambda11 v28 = new VcnManagementService$$ExternalSyntheticLambda11(v26,v25,p1); Binder.withCleanCallingIdentity(v28);",0.995485782623291
setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V,"VcnManagementService$$ExternalSyntheticLambda4 v38 = new VcnManagementService$$ExternalSyntheticLambda4(p0, p1, p2); Binder.withCleanCallingIdentity(v38);","VcnManagementService$$ExternalSyntheticLambda5 v40 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1); Binder.withCleanCallingIdentity(v40);",0.9822027683258057
getConfiguredSubscriptionGroups(Ljava/lang/String;)Ljava/util/List;,getBlockedRatings(I)Ljava/util/List;,ArrayList v10 = new ArrayList(); return v10;,ArrayList v14 = new ArrayList(); return v14;,0.9548688530921936
getConfiguredSubscriptionGroups(Ljava/lang/String;)Ljava/util/List;,getAvailableTvStreamConfigList(Ljava/lang/String;I)Ljava/util/List;,ArrayList v10 = new ArrayList(); return v10;,ArrayList v12 = new ArrayList(); List v11 = v12; return v11;,0.8825979232788086
registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V,unregisterVcnStatusCallback(Landroid/net/vcn/IVcnStatusCallback;)V,"IBinder v8 = p2.asBinder(); VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0); v8.linkToDeath(v9, 0); Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);",IBinder v3 = p1.asBinder(); Object v4 = this.mRegisteredStatusCallbacks.remove(v3);,0.8147594332695007
registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V,addDeviceEventListener(Landroid/hardware/hdmi/IHdmiDeviceEventListener;)V,"IBinder v8 = p2.asBinder(); VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0); v8.linkToDeath(v9, 0); Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);","HdmiControlService$DeviceEventListenerRecord v7 = new HdmiControlService$DeviceEventListenerRecord(HdmiControlService,p2); IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0); boolean v11 = this.mDeviceEventListenerRecords.add(v7);",0.725267231464386
unregisterVcnStatusCallback(Landroid/net/vcn/IVcnStatusCallback;)V,registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V,IBinder v3 = p1.asBinder(); Object v4 = this.mRegisteredStatusCallbacks.remove(v3);,"IBinder v8 = p2.asBinder(); VcnManagementService$VcnStatusCallbackInfo v9 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0); v8.linkToDeath(v9, 0); Object v13 = this.mRegisteredStatusCallbacks.put(v8, v9);",0.8147594332695007
unregisterVcnStatusCallback(Landroid/net/vcn/IVcnStatusCallback;)V,registerStatusBar(Lcom/android/internal/statusbar/IStatusBar;)Lcom/android/internal/statusbar/RegisterStatusBarResult;,IBinder v3 = p1.asBinder(); Object v4 = this.mRegisteredStatusCallbacks.remove(v3);,"this.mBar = p1; ArrayMap v24 = new ArrayMap(this.mIcons); Object v26 = this.mDisplayUiState.get(0); RegisterStatusBarResult v30 = new RegisterStatusBarResult(v24,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v42,v29,v43); return v30;",0.6749429106712341
getAuthenticatorId(II)J,invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; long v9 = v3.getAuthenticatorId(p1, p2); return v9;","Iterator v5 = this.mServiceProviders.iterator(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);",0.8871284127235413
getAuthenticatorId(II)J,cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; long v9 = v3.getAuthenticatorId(p1, p2); return v9;","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.cancelAuthentication(p1, p2, p4);",0.857643723487854
getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;,createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;,Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); FaceSensorPropertiesInternal v9 = v3.getSensorProperties(p1); return v9;,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ITestSession v9 = v3.createTestSession(p1, p2, p3); return v9;",0.7987344861030579
getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;,isHardwareDetected(ILjava/lang/String;)Z,Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); FaceSensorPropertiesInternal v9 = v3.getSensorProperties(p1); return v9;,Object v8 = v6.next(); boolean v9 = v8.containsSensor(p2); ServiceProvider v5 = v8; ServiceProvider v4 = v5; boolean v10 = v4.isHardwareDetected(p1); return v10;,0.7947621941566467
hasEnrolledFaces(IILjava/lang/String;)Z,enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J,"Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); ServiceProvider v7 = v10; List v12 = v6.getEnrolledFaces(p1, p2);","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); long v16 = Pair.second.scheduleEnroll(v15, p2, p3, p1, p4, p5, p6, p7, p8); return v16;",0.709084153175354
hasEnrolledFaces(IILjava/lang/String;)Z,cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V,"Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); ServiceProvider v7 = v10; List v12 = v6.getEnrolledFaces(p1, p2);","List v14 = FaceService.getSensorProperties(); Iterator v17 = this.mServiceProviders.iterator(); Object v19 = v17.next(); boolean v20 = v19.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v21 = new Pair(v22,v19); Integer v22 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v24 = Pair.first.intValue(); Pair.second.cancelFaceDetect(v24, p1, p3);",0.6409876346588135
addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V,addHotplugEventListener(Landroid/hardware/hdmi/IHdmiHotplugEventListener;)V,"IBinder v8 = p1.asBinder(); v8.linkToDeath(LockoutResetDispatcher, 0);","IBinder v9 = p2.asBinder(); v9.linkToDeath(v7, 0);",0.855305552482605
addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V,setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V,"IBinder v8 = p1.asBinder(); v8.linkToDeath(LockoutResetDispatcher, 0);",IBinder v5 = p1.asBinder(); this.mVoiceWakeLock.acquire();,0.7360208630561829
detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J,isDeviceSecure(II)Z,LockPatternUtils v12 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0); int v14 = v12.getStrongAuthForUser(p2);,LockPatternUtils v14 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0); boolean v15 = v14.isSeparateProfileChallengeEnabled(v12); UserInfo v19 = this.mUserManager.getProfileParent(p2); LockPatternUtils v23 = TrustManagerService.-$$Nest$fgetmLockPatternUtils(this.this$0); boolean v24 = v23.isSecure(phiInstruction); return v24;,0.7771947979927063
detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J,cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V,"ClientMonitorCallbackConverter v39 = new ClientMonitorCallbackConverter(p3); long v41 = Pair.second.scheduleFaceDetect(v38, p1, p2, v39, p4, 1); return v41;","List v14 = FaceService.getSensorProperties(); Iterator v17 = this.mServiceProviders.iterator(); Object v19 = v17.next(); boolean v20 = v19.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v21 = new Pair(v22,v19); Integer v22 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v24 = Pair.first.intValue(); Pair.second.cancelFaceDetect(v24, p1, p3);",0.732839822769165
remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v5 = FaceService.getSensorProperties(); Object v7 = v5.get(0); Iterator v8 = this.mServiceProviders.iterator(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.scheduleRemove(v15, p1, p2, p3, p4, p5);","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); Pair v4 = v12; Pair v3 = v4; int v15 = Pair.first.intValue(); Pair.second.scheduleSetFeature(v15, p1, p2, p3, p4, p5, p6, p7);",0.9292026162147522
remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V,"List v5 = FaceService.getSensorProperties(); Object v7 = v5.get(0); Iterator v8 = this.mServiceProviders.iterator(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.scheduleRemove(v15, p1, p2, p3, p4, p5);","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.cancelAuthentication(v15, p1, p3);",0.8978521823883057
cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V,cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V,"List v14 = FaceService.getSensorProperties(); Iterator v17 = this.mServiceProviders.iterator(); Object v19 = v17.next(); boolean v20 = v19.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v21 = new Pair(v22,v19); Integer v22 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v24 = Pair.first.intValue(); Pair.second.cancelFaceDetect(v24, p1, p3);","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.cancelAuthentication(v15, p1, p3);",0.9010321497917175
cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V,remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v14 = FaceService.getSensorProperties(); Iterator v17 = this.mServiceProviders.iterator(); Object v19 = v17.next(); boolean v20 = v19.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v21 = new Pair(v22,v19); Integer v22 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v24 = Pair.first.intValue(); Pair.second.cancelFaceDetect(v24, p1, p3);","List v5 = FaceService.getSensorProperties(); Object v7 = v5.get(0); Iterator v8 = this.mServiceProviders.iterator(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.scheduleRemove(v15, p1, p2, p3, p4, p5);",0.8718423843383789
cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V,getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.cancelAuthentication(v15, p1, p3);","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10);",0.9018572568893433
cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V,cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V,"List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.cancelAuthentication(v15, p1, p3);","List v14 = FaceService.getSensorProperties(); Iterator v17 = this.mServiceProviders.iterator(); Object v19 = v17.next(); boolean v20 = v19.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v21 = new Pair(v22,v19); Integer v22 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v24 = Pair.first.intValue(); Pair.second.cancelFaceDetect(v24, p1, p3);",0.9010321497917175
getLockoutModeForUser(II)I,resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; int v9 = v3.getLockoutModeForUser(p1, p2); return v9;","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleResetLockout(p2, p3, p4);",0.8383127450942993
getLockoutModeForUser(II)I,getAuthenticatorId(II)J,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; int v9 = v3.getLockoutModeForUser(p1, p2); return v9;","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; long v9 = v3.getAuthenticatorId(p1, p2); return v9;",0.8311145305633545
setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); Pair v4 = v12; Pair v3 = v4; int v15 = Pair.first.intValue(); Pair.second.scheduleSetFeature(v15, p1, p2, p3, p4, p5, p6, p7);","List v5 = FaceService.getSensorProperties(); Object v7 = v5.get(0); Iterator v8 = this.mServiceProviders.iterator(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.scheduleRemove(v15, p1, p2, p3, p4, p5);",0.9292026162147522
setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); Pair v4 = v12; Pair v3 = v4; int v15 = Pair.first.intValue(); Pair.second.scheduleSetFeature(v15, p1, p2, p3, p4, p5, p6, p7);","List v5 = FaceService.getSensorProperties(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); ClientMonitorCallbackConverter v16 = new ClientMonitorCallbackConverter(p4); Pair.second.scheduleGetFeature(v15, p1, p2, p3, v16, p5);",0.9038311243057251
cancelEnrollment(Landroid/os/IBinder;J)V,getLastResumedActivityUserId()I,"Pair v12 = new Pair(v13,v10); int v15 = Pair.first.intValue(); Pair.second.cancelEnrollment(v15, p1, p2);",int v5 = p0.getCurrentUserId(); return v5;,0.628024160861969
cancelEnrollment(Landroid/os/IBinder;J)V,isRequestPinItemSupported(II)Z,"Pair v12 = new Pair(v13,v10); int v15 = Pair.first.intValue(); Pair.second.cancelEnrollment(v15, p1, p2);","int v8 = this.mService.getParentOrSelfUserId(p1); String v9 = this.mService.getDefaultLauncher(v8); ComponentName v10 = this.mService.injectGetPinConfirmationActivity(v9, v8, p2); Integer v11 = Integer.valueOf(v8); Pair v12 = Pair.create(v10, v11);",0.6165919303894043
resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V,invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleResetLockout(p2, p3, p4);","Iterator v5 = this.mServiceProviders.iterator(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);",0.846350908279419
resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V,cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleResetLockout(p2, p3, p4);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.cancelAuthentication(p1, p2, p4);",0.8384217023849487
registerAuthenticators(Ljava/util/List;)V,setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,"FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0 v9 = new FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0(p0,p1); boolean v11 = v6.post(v9);","VcnManagementService$$ExternalSyntheticLambda4 v38 = new VcnManagementService$$ExternalSyntheticLambda4(p0, p1, p2); Binder.withCleanCallingIdentity(v38);",0.7633329629898071
registerAuthenticators(Ljava/util/List;)V,addVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V,"FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0 v9 = new FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0(p0,p1); boolean v11 = v6.post(v9);","VcnManagementService$$ExternalSyntheticLambda2 v4 = new VcnManagementService$$ExternalSyntheticLambda2(p0,p1);",0.7586135864257812
startPreparedClient(II)V,resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.startPreparedClient(p1, p2);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleResetLockout(p2, p3, p4);",0.7868286967277527
startPreparedClient(II)V,getAuthenticatorId(II)J,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.startPreparedClient(p1, p2);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; long v9 = v3.getAuthenticatorId(p1, p2); return v9;",0.7849670052528381
createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;,isHardwareDetected(ILjava/lang/String;)Z,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ITestSession v9 = v3.createTestSession(p1, p2, p3); return v9;",Object v8 = v6.next(); boolean v9 = v8.containsSensor(p2); ServiceProvider v5 = v8; ServiceProvider v4 = v5; boolean v10 = v4.isHardwareDetected(p1); return v10;,0.8468999266624451
createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;,getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ITestSession v9 = v3.createTestSession(p1, p2, p3); return v9;",Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); FaceSensorPropertiesInternal v9 = v3.getSensorProperties(p1); return v9;,0.7987344861030579
isHardwareDetected(ILjava/lang/String;)Z,createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;,Object v8 = v6.next(); boolean v9 = v8.containsSensor(p2); ServiceProvider v5 = v8; ServiceProvider v4 = v5; boolean v10 = v4.isHardwareDetected(p1); return v10;,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ITestSession v9 = v3.createTestSession(p1, p2, p3); return v9;",0.8468999266624451
isHardwareDetected(ILjava/lang/String;)Z,generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,Object v8 = v6.next(); boolean v9 = v8.containsSensor(p2); ServiceProvider v5 = v8; ServiceProvider v4 = v5; boolean v10 = v4.isHardwareDetected(p1); return v10;,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);",0.8123835921287537
invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V,getAuthenticatorId(II)J,"Iterator v5 = this.mServiceProviders.iterator(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; long v9 = v3.getAuthenticatorId(p1, p2); return v9;",0.8871284127235413
invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V,cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V,"Iterator v5 = this.mServiceProviders.iterator(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.cancelAuthentication(p1, p2, p4);",0.8608843088150024
removeAll(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,registerAuthenticators(Ljava/util/List;)V,"FaceService$FaceServiceWrapper$1 v3 = new FaceService$FaceServiceWrapper$1(p0,p3);","FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0 v9 = new FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0(p0,p1); boolean v11 = v6.post(v9);",0.7320857644081116
removeAll(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J,"FaceService$FaceServiceWrapper$1 v3 = new FaceService$FaceServiceWrapper$1(p0,p3);","ClientMonitorCallbackConverter v39 = new ClientMonitorCallbackConverter(p3); long v41 = Pair.second.scheduleFaceDetect(v38, p1, p2, v39, p4, 1); return v41;",0.6372902393341064
revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V,cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleRevokeChallenge(p2, p3, p1, p4, p5);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.cancelAuthentication(p1, p2, p4);",0.8331217765808105
revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V,resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleRevokeChallenge(p2, p3, p1, p4, p5);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleResetLockout(p2, p3, p4);",0.8255236744880676
enrollRemotely(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[I)J,No similar EPs with similarity > 0.8,,,
getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;,isHardwareDetected(ILjava/lang/String;)Z,boolean v11 = v10.containsSensor(p2);,Object v8 = v6.next(); boolean v9 = v8.containsSensor(p2); ServiceProvider v5 = v8; ServiceProvider v4 = v5; boolean v10 = v4.isHardwareDetected(p1); return v10;,0.7537326812744141
getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;,createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;,boolean v11 = v10.containsSensor(p2);,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ITestSession v9 = v3.createTestSession(p1, p2, p3); return v9;",0.7129873633384705
cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V,invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.cancelAuthentication(p1, p2, p4);","Iterator v5 = this.mServiceProviders.iterator(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);",0.8608843088150024
cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V,getAuthenticatorId(II)J,"Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.cancelAuthentication(p1, p2, p4);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; long v9 = v3.getAuthenticatorId(p1, p2); return v9;",0.857643723487854
dumpSensorServiceStateProto(IZ)[B,startProtoDump([BILjava/lang/String;)V,"ProtoOutputStream v3 = new ProtoOutputStream(); ServiceProvider v6 = 0; ServiceProvider v5 = v6; v5.dumpProtoState(p1, v3, p2); v3.flush(); byte[] v11 = v3.getBytes(); return v11;","ProtoOutputStream v8 = new ProtoOutputStream(); v8.write(1125281431553, SystemClock.elapsedRealtimeNanos()); v8.write(1138166333442, p3); v8.write(1146756268035, p1); v8.end(v10); v1.addToBuffer(v8, p2);",0.7346878051757812
dumpSensorServiceStateProto(IZ)[B,requestUninstall([BLandroid/app/timezone/ICallback;)I,"ProtoOutputStream v3 = new ProtoOutputStream(); ServiceProvider v6 = 0; ServiceProvider v5 = v6; v5.dumpProtoState(p1, v3, p2); v3.flush(); byte[] v11 = v3.getBytes(); return v11;",ByteArrayInputStream v4 = new ByteArrayInputStream(p1); DataInputStream v6 = new DataInputStream(v4); int v8 = v6.readInt(); long v9 = v6.readLong(); long v10 = v6.readLong();,0.6612293124198914
prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V,cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V,"Iterator v5 = this.mServiceProviders.iterator(); Object v7 = v5.next(); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ClientMonitorCallbackConverter v9 = new ClientMonitorCallbackConverter(p6); v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v9, p7, p8, 1, 2, p10, 0);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.cancelAuthentication(p1, p2, p4);",0.7956556081771851
prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V,getAuthenticatorId(II)J,"Iterator v5 = this.mServiceProviders.iterator(); Object v7 = v5.next(); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ClientMonitorCallbackConverter v9 = new ClientMonitorCallbackConverter(p6); v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v9, p7, p8, 1, 2, p10, 0);","Iterator v5 = this.mServiceProviders.iterator(); boolean v6 = v5.hasNext(); Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; long v9 = v3.getAuthenticatorId(p1, p2); return v9;",0.77028888463974
authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J,cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V,"Integer v31 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); Pair v30 = new Pair(v31,v28); Pair v22 = v30; Pair v21 = v22; int v33 = Pair.first.intValue(); ClientMonitorCallbackConverter v34 = new ClientMonitorCallbackConverter(p4); long v36 = Pair.second.scheduleAuthenticate(v33, p1, p2, p3, 0, v34, p5, 0, v4, v13, p6); return v36;","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.cancelAuthentication(v15, p1, p3);",0.7972568869590759
authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J,getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"Integer v31 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); Pair v30 = new Pair(v31,v28); Pair v22 = v30; Pair v21 = v22; int v33 = Pair.first.intValue(); ClientMonitorCallbackConverter v34 = new ClientMonitorCallbackConverter(p4); long v36 = Pair.second.scheduleAuthenticate(v33, p1, p2, p3, 0, v34, p5, 0, v4, v13, p6); return v36;","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10);",0.7522133588790894
generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,isHardwareDetected(ILjava/lang/String;)Z,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);",Object v8 = v6.next(); boolean v9 = v8.containsSensor(p2); ServiceProvider v5 = v8; ServiceProvider v4 = v5; boolean v10 = v4.isHardwareDetected(p1); return v10;,0.8123835921287537
generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;,"Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);","Object v7 = v5.next(); boolean v8 = v7.containsSensor(p2); ServiceProvider v4 = v7; ServiceProvider v3 = v4; ITestSession v9 = v3.createTestSession(p1, p2, p3); return v9;",0.775566816329956
enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J,getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); long v16 = Pair.second.scheduleEnroll(v15, p2, p3, p1, p4, p5, p6, p7, p8); return v16;","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10);",0.8440684676170349
enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J,setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); long v16 = Pair.second.scheduleEnroll(v15, p2, p3, p1, p4, p5, p6, p7, p8); return v16;","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); Pair v4 = v12; Pair v3 = v4; int v15 = Pair.first.intValue(); Pair.second.scheduleSetFeature(v15, p1, p2, p3, p4, p5, p6, p7);",0.8367149829864502
getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;,getAvailableTvStreamConfigList(Ljava/lang/String;I)Ljava/util/List;,ArrayList v5 = new ArrayList(); List v4 = v5; List v3 = v4; return v3;,ArrayList v12 = new ArrayList(); List v11 = v12; return v11;,0.923088550567627
getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;,getDvbDeviceList()Ljava/util/List;,ArrayList v5 = new ArrayList(); List v4 = v5; List v3 = v4; return v3;,ArrayList v4 = new ArrayList(); List v9 = Collections.unmodifiableList(v4); return v9;,0.8842421770095825
getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,"List v5 = FaceService.getSensorProperties(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); ClientMonitorCallbackConverter v16 = new ClientMonitorCallbackConverter(p4); Pair.second.scheduleGetFeature(v15, p1, p2, p3, v16, p5);","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); Pair v4 = v12; Pair v3 = v4; int v15 = Pair.first.intValue(); Pair.second.scheduleSetFeature(v15, p1, p2, p3, p4, p5, p6, p7);",0.9038311243057251
getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V,cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V,"List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10);","List v5 = FaceService.getSensorProperties(); Iterator v8 = this.mServiceProviders.iterator(); Object v10 = v8.next(); boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId); Pair v12 = new Pair(v13,v10); Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId); int v15 = Pair.first.intValue(); Pair.second.cancelAuthentication(v15, p1, p3);",0.9018572568893433
stopImeTrace()V,startImeTrace()V,ImeTracingServerImpl v4 = new ImeTracingServerImpl(); ImeTracingClientImpl v4 = new ImeTracingClientImpl;,ImeTracingServerImpl v4 = new ImeTracingServerImpl(); this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; v1.startTrace(0);,0.8109097480773926
stopImeTrace()V,startImeTrace()V,ImeTracingServerImpl v4 = new ImeTracingServerImpl(); ImeTracingClientImpl v4 = new ImeTracingClientImpl;,ImeTracingClientImpl v4 = new ImeTracingClientImpl(); this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; v1.startTrace(0);,0.7930198311805725
removeImeSurface()V,No similar EPs with similarity > 0.8,,,
getInputMethodList(I)Ljava/util/List;,getAwareLockedInputMethodList(II)Ljava/util/List;,"InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;","InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;",1.000000238418579
getInputMethodList(I)Ljava/util/List;,getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;","List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);",0.7937148809432983
getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List;,"List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);","String v12 = this.mBindingController.getSelectedMethodId(); Object v13 = this.mMethodMap.get(v11); List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction); ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction); List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction); return v9;",0.8285513520240784
getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,getInputMethodList(I)Ljava/util/List;,"List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);","InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;",0.7937148809432983
startStylusHandwriting(Lcom/android/internal/view/IInputMethodClient;)V,getSeparateProfileChallengeEnabled(I)Z,int v8 = Binder.getCallingUid(); Integer v19 = Integer.valueOf(v8);,int v2 = Binder.getCallingUid();,0.949438214302063
startStylusHandwriting(Lcom/android/internal/view/IInputMethodClient;)V,resumeRecording(Landroid/os/IBinder;Landroid/os/Bundle;I)V,int v8 = Binder.getCallingUid(); Integer v19 = Integer.valueOf(v8);,int v1 = Binder.getCallingUid(); int v2 = Binder.getCallingPid();,0.9102259874343872
showSoftInput(Lcom/android/internal/view/IInputMethodClient;Landroid/os/IBinder;ILandroid/os/ResultReceiver;I)Z,getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List;,"Object v37 = this.mShowRequestWindowMap.put(v35, p2); IInputMethodInvoker v34 = this.mBindingController.getCurMethod(); boolean v32 = InputMethodBindingController.bindCurrentInputMethodServiceMainConnection();","String v12 = this.mBindingController.getSelectedMethodId(); Object v13 = this.mMethodMap.get(v11); List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction); ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction); List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction); return v9;",0.7430369257926941
showSoftInput(Lcom/android/internal/view/IInputMethodClient;Landroid/os/IBinder;ILandroid/os/ResultReceiver;I)Z,startInputOrWindowGainedFocus(ILcom/android/internal/view/IInputMethodClient;Landroid/os/IBinder;IIILandroid/view/inputmethod/EditorInfo;Lcom/android/internal/view/IInputContext;Lcom/android/internal/inputmethod/IRemoteAccessibilityInputConnection;ILandroid/window/ImeOnBackInvokedDispatcher;)Lcom/android/internal/inputmethod/InputBindResult;,"int v17 = this.mWindowManagerInternal.hasInputMethodClientFocus(this.mCurFocusedWindow, InputMethodManagerService$ClientState.uid, InputMethodManagerService$ClientState.pid, InputMethodManagerService$ClientState.selfReportedDisplayId); this.mTarget.showSoftInput(v35, v38, p3);",int v8 = EditorInfo.targetInputMethodUser.getIdentifier(); boolean v9 = this.mUserManagerInternal.isUserRunning(v8);,0.7250988483428955
startInputOrWindowGainedFocus(ILcom/android/internal/view/IInputMethodClient;Landroid/os/IBinder;IIILandroid/view/inputmethod/EditorInfo;Lcom/android/internal/view/IInputContext;Lcom/android/internal/inputmethod/IRemoteAccessibilityInputConnection;ILandroid/window/ImeOnBackInvokedDispatcher;)Lcom/android/internal/inputmethod/InputBindResult;,keyguardGoingAway(I)V,"long v7 = Binder.clearCallingIdentity(); InputBindResult v15 = InputMethodManagerService.startInputUncheckedLocked(v10, p8, p9, p7, p4, p1, p10, p11); Binder.restoreCallingIdentity(v7);",long v4 = Binder.clearCallingIdentity(); Binder.restoreCallingIdentity(v4);,0.8488070964813232
startInputOrWindowGainedFocus(ILcom/android/internal/view/IInputMethodClient;Landroid/os/IBinder;IIILandroid/view/inputmethod/EditorInfo;Lcom/android/internal/view/IInputContext;Lcom/android/internal/inputmethod/IRemoteAccessibilityInputConnection;ILandroid/window/ImeOnBackInvokedDispatcher;)Lcom/android/internal/inputmethod/InputBindResult;,sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V,"long v7 = Binder.clearCallingIdentity(); InputBindResult v15 = InputMethodManagerService.startInputUncheckedLocked(v10, p8, p9, p7, p4, p1, p10, p11); Binder.restoreCallingIdentity(v7);",int v1 = Binder.getCallingUid(); long v6 = Binder.clearCallingIdentity(); Binder.restoreCallingIdentity(v6);,0.8265194892883301
getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List;,getCurrentInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"String v12 = this.mBindingController.getSelectedMethodId(); Object v13 = this.mMethodMap.get(v11); List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction); ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction); List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction); return v9;","String v15 = this.mBindingController.getSelectedMethodId(); Object v18 = this.mMethodMap.get(v14); int v19 = v18.getSubtypeCount(); List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18); List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction); Object v42 = v27.get(phiInstruction); String v43 = v42.getLocale(); String v46 = v45.getMode(); InputMethodSubtype v35 = phiInstruction; this.mCurrentSubtype = v35;",0.9335129261016846
getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List;,getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"String v12 = this.mBindingController.getSelectedMethodId(); Object v13 = this.mMethodMap.get(v11); List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction); ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction); List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction); return v9;","List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);",0.8285513520240784
showInputMethodPickerFromSystem(Lcom/android/internal/view/IInputMethodClient;II)V,requireStrongAuth(II)V,"Message v2 = this.mHandler.obtainMessage(1, p2, p3); v2.sendToTarget();","Message v4 = this.mHandler.obtainMessage(1, p1, p2); v4.sendToTarget();",0.9807563424110413
showInputMethodPickerFromSystem(Lcom/android/internal/view/IInputMethodClient;II)V,registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v2 = this.mHandler.obtainMessage(1, p2, p3); v2.sendToTarget();","Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();",0.9684304594993591
getAwareLockedInputMethodList(II)Ljava/util/List;,getInputMethodList(I)Ljava/util/List;,"InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;","InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;",1.000000238418579
getAwareLockedInputMethodList(II)Ljava/util/List;,getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2); List v13 = phiInstruction; return v1;","List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);",0.7937148809432983
isInputMethodPickerShownForTest()Z,togglePanel()V,boolean v2 = this.mSwitchingDialog.isShowing(); boolean v1 = v2; return v1;,Object v19 = this.mDisplayUiState.get(0); int v21 = v19.getDisabled2();,0.6474135518074036
isInputMethodPickerShownForTest()Z,isParentalControlsEnabled(I)Z,boolean v2 = this.mSwitchingDialog.isShowing(); boolean v1 = v2; return v1;,boolean v15 = this.mParentalControlsEnabled; return v15;,0.645171046257019
getCurrentInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List;,"String v15 = this.mBindingController.getSelectedMethodId(); Object v18 = this.mMethodMap.get(v14); int v19 = v18.getSubtypeCount(); List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18); List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction); Object v42 = v27.get(phiInstruction); String v43 = v42.getLocale(); String v46 = v45.getMode(); InputMethodSubtype v35 = phiInstruction; this.mCurrentSubtype = v35;","String v12 = this.mBindingController.getSelectedMethodId(); Object v13 = this.mMethodMap.get(v11); List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(phiInstruction); ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, phiInstruction); List v19 = InputMethodSubtype.sort(this.mContext, 0, phiInstruction, phiInstruction); return v9;",0.9335129261016846
getCurrentInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"String v15 = this.mBindingController.getSelectedMethodId(); Object v18 = this.mMethodMap.get(v14); int v19 = v18.getSubtypeCount(); List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18); List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction); Object v42 = v27.get(phiInstruction); String v43 = v42.getLocale(); String v46 = v45.getMode(); InputMethodSubtype v35 = phiInstruction; this.mCurrentSubtype = v35;","List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);",0.7920477390289307
reportPerceptibleAsync(Landroid/os/IBinder;Z)V,disable2(ILandroid/os/IBinder;Ljava/lang/String;)V,this.mCurPerceptible = p2; IBinder v18 = this.mBindingController.getCurToken(); StatusBarManagerService.enforceStatusBar(); StatusBarManagerService$$ExternalSyntheticLambda1 v31 = new StatusBarManagerService$$ExternalSyntheticLambda1(...); boolean v33 = this.mHandler.post(v31);,"int v6 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 1); int v7 = StatusBarManagerService.gatherDisableActionsLocked(this.mCurrentUserId, 2); StatusBarManagerService$$ExternalSyntheticLambda6 v11 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v6); boolean v13 = this.mHandler.post(v11); this.mBar.disable(0, v6, v7);",0.7009677290916443
reportPerceptibleAsync(Landroid/os/IBinder;Z)V,disableForUser(ILandroid/os/IBinder;Ljava/lang/String;I)V,this.mCurPerceptible = p2; IBinder v18 = this.mBindingController.getCurToken(); StatusBarManagerService.enforceStatusBar(); StatusBarManagerService$$ExternalSyntheticLambda1 v31 = new StatusBarManagerService$$ExternalSyntheticLambda1(...); boolean v33 = this.mHandler.post(v31);,"StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12); boolean v27 = this.mHandler.post(v25);",0.6676803827285767
reportVirtualDisplayGeometryAsync(Lcom/android/internal/view/IInputMethodClient;I[F)V,setPackageScreenCompatMode(Ljava/lang/String;I)V,DisplayInfo v1 = this.mDisplayManagerInternal.getDisplayInfo(p2); String v2 = caughtException.toString(); p1.throwExceptionFromSystem(v2);,"IPackageManager v7 = ActivityThread.getPackageManager(); ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);",0.6213866472244263
reportVirtualDisplayGeometryAsync(Lcom/android/internal/view/IInputMethodClient;I[F)V,moveRootTaskToDisplay(II)V,DisplayInfo v1 = this.mDisplayManagerInternal.getDisplayInfo(p2); String v2 = caughtException.toString(); p1.throwExceptionFromSystem(v2);,"DisplayContent v25 = RootWindowContainer.getDisplayContent(p2); Display v26 = this.mDisplayManager.getDisplay(p2); Task v33 = RootWindowContainer.getRootTask(p1); v33.reparent(v30, p3);",0.6166918277740479
showInputMethodPickerFromClient(Lcom/android/internal/view/IInputMethodClient;I)V,startConsentActivity([ILjava/lang/String;)V,ComponentName v21 = v19.getComponent(); String v22 = v21.getPackageName();,ComponentName v37 = ComponentName.unflattenFromString(v29); ComponentName v26 = v37;,0.7726330757141113
showInputMethodPickerFromClient(Lcom/android/internal/view/IInputMethodClient;I)V,startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z,Intent v18 = this.mBindingController.getCurIntent(); Intent v17 = v18; Intent v20 = this.mBindingController.getCurIntent(); Intent v19 = v20;,"Intent v22 = new Intent(p2); Uri v24 = ActivityRecord.intent.getData(); String v25 = ActivityRecord.intent.getType(); Intent v26 = v22.setDataAndType(v24, v25); Intent v27 = v22.setComponent(0);",0.735137939453125
addClient(Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;I)V,createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V,"InputMethodManagerService$ClientState v9 = new InputMethodManagerService$ClientState(p1,p2,v1,v2,p3,v4); Object v11 = this.mClients.put(v8, v9);","TvInputManagerService$UserState v17 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v17);",0.7369780540466309
addClient(Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;I)V,tune(Landroid/os/IBinder;Landroid/net/Uri;Landroid/os/Bundle;I)V,"InputMethodManagerService$ClientState v9 = new InputMethodManagerService$ClientState(p1,p2,v1,v2,p3,v4); Object v11 = this.mClients.put(v8, v9);","TvInputManagerService$UserState v16 = new TvInputManagerService$UserState(this.mContext,p2,0); this.mUserStates.put(p2, v16);",0.7304194569587708
startImeTrace()V,stopImeTrace()V,ImeTracingServerImpl v4 = new ImeTracingServerImpl(); this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; v1.startTrace(0);,ImeTracingServerImpl v4 = new ImeTracingServerImpl(); ImeTracingClientImpl v4 = new ImeTracingClientImpl;,0.8109097480773926
startImeTrace()V,startStylusHandwriting(Lcom/android/internal/view/IInputMethodClient;)V,ImeTracingServerImpl v4 = new ImeTracingServerImpl(); this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; v1.startTrace(0);,"ImeTracingServerImpl v5 = new ImeTracingServerImpl(); this.sInstance = phiInstruction; ImeTracing v2 = this.sInstance; v2.triggerManagerServiceDump(""InputMethodManagerService#startStylusHandwriting"");",0.8096215128898621
removeImeSurfaceFromWindowAsync(Landroid/os/IBinder;)V,unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v1 = this.mHandler.obtainMessage(1061, p1); v1.sendToTarget();","Message v4 = this.mHandler.obtainMessage(3, p1); v4.sendToTarget();",0.9600434303283691
removeImeSurfaceFromWindowAsync(Landroid/os/IBinder;)V,registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V,"Message v1 = this.mHandler.obtainMessage(1061, p1); v1.sendToTarget();","Message v4 = this.mHandler.obtainMessage(2, p1); v4.sendToTarget();",0.9596622586250305
startProtoDump([BILjava/lang/String;)V,dumpSensorServiceStateProto(IZ)[B,"ProtoOutputStream v8 = new ProtoOutputStream(); v8.write(1125281431553, SystemClock.elapsedRealtimeNanos()); v8.write(1138166333442, p3); v8.write(1146756268035, p1); v8.end(v10); v1.addToBuffer(v8, p2);","ProtoOutputStream v3 = new ProtoOutputStream(); ServiceProvider v6 = 0; ServiceProvider v5 = v6; v5.dumpProtoState(p1, v3, p2); v3.flush(); byte[] v11 = v3.getBytes(); return v11;",0.7346878051757812
startProtoDump([BILjava/lang/String;)V,dumpSensorServiceStateProto(IZ)[B,"ProtoOutputStream v8 = new ProtoOutputStream(); v8.write(1125281431553, SystemClock.elapsedRealtimeNanos()); v8.write(1138166333442, p3); v8.write(1146756268035, p1); v8.end(v10); v1.addToBuffer(v8, p2);","ProtoOutputStream v3 = new ProtoOutputStream(); Iterator v7 = this.mServiceProviders.iterator(); Object v9 = v7.next(); ServiceProvider v6 = v9; ServiceProvider v5 = v6; v5.dumpProtoState(p1, v3, p2); v3.flush(); byte[] v13 = v3.getBytes(); return v13;",0.6180973052978516
getInputMethodWindowVisibleHeight(Lcom/android/internal/view/IInputMethodClient;)I,setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V,"InputMethodManagerService$$ExternalSyntheticLambda4 v2 = new InputMethodManagerService$$ExternalSyntheticLambda4(p0,v1,p1); Object v4 = Binder.withCleanCallingIdentity(v2); int v5 = v4.intValue(); return v5;","VcnManagementService$$ExternalSyntheticLambda4 v38 = new VcnManagementService$$ExternalSyntheticLambda4(p0, p1, p2); Binder.withCleanCallingIdentity(v38);",0.8569968938827515
getInputMethodWindowVisibleHeight(Lcom/android/internal/view/IInputMethodClient;)I,clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V,"InputMethodManagerService$$ExternalSyntheticLambda4 v2 = new InputMethodManagerService$$ExternalSyntheticLambda4(p0,v1,p1); Object v4 = Binder.withCleanCallingIdentity(v2); int v5 = v4.intValue(); return v5;","VcnManagementService$$ExternalSyntheticLambda5 v40 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1); Binder.withCleanCallingIdentity(v40);",0.8523377180099487
setAdditionalInputMethodSubtypes(Ljava/lang/String;[Landroid/view/inputmethod/InputMethodSubtype;)V,getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"File v29 = new File(phiInstruction,""inputmethod""); File v34 = new File(v25,""subtypes.xml""); AtomicFile v36 = new AtomicFile(v34,""input-subtypes""); v33.delete();","List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);",0.7086005210876465
setAdditionalInputMethodSubtypes(Ljava/lang/String;[Landroid/view/inputmethod/InputMethodSubtype;)V,getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"Object v16 = this.mMethodMap.get(p1); String v21 = v16.getId(); Object v22 = this.mAdditionalSubtypeMap.put(v21, v2);","List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodsAndSubtypeListLocked(); List v16 = InputMethodUtils$InputMethodSettings.loadInputMethodAndSubtypeHistoryLocked(); Object v19 = v17.next(); String v22 = InputMethodUtils$InputMethodSettings.getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(v15, Pair.first, Pair.second); Pair v24 = new Pair(Pair.first,v22); Object v28 = this.mMethodMap.get(Pair.first); int v29 = Integer.parseInt(Pair.second); InputMethodSubtype v32 = v28.getSubtypeAt(phiInstruction);",0.6865535974502563
showInputMethodAndSubtypeEnablerFromClient(Lcom/android/internal/view/IInputMethodClient;Ljava/lang/String;)V,getCurrentInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"Intent v7 = new Intent(""android.settings.INPUT_METHOD_SUBTYPE_SETTINGS""); Intent v9 = v7.setFlags(337641472); Intent v11 = v7.putExtra(""input_method_id"", p2); this.mContext.startActivityAsUser(v7, 0, v13);","String v15 = this.mBindingController.getSelectedMethodId(); Object v18 = this.mMethodMap.get(v14); int v19 = v18.getSubtypeCount(); List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18); List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction); Object v42 = v27.get(phiInstruction); String v43 = v42.getLocale(); String v46 = v45.getMode(); InputMethodSubtype v35 = phiInstruction; this.mCurrentSubtype = v35;",0.6848955750465393
showInputMethodAndSubtypeEnablerFromClient(Lcom/android/internal/view/IInputMethodClient;Ljava/lang/String;)V,getCurrentInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype;,"Intent v14 = new Intent(""android.settings.INPUT_METHOD_SUBTYPE_SETTINGS""); Intent v16 = v14.setFlags(337641472); Intent v18 = v14.putExtra(""input_method_id"", p2); this.mContext.startActivityAsUser(v14, 0, v20);","String v15 = this.mBindingController.getSelectedMethodId(); Object v18 = this.mMethodMap.get(v14); int v19 = v18.getSubtypeCount(); List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18); List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, phiInstruction); Object v42 = v27.get(phiInstruction); String v43 = v42.getLocale(); String v46 = v45.getMode(); InputMethodSubtype v35 = phiInstruction; this.mCurrentSubtype = v35;",0.6847337484359741
isImeTraceEnabled()Z,startImeTrace()V,this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; boolean v6 = v1.isEnabled(); return v6;,ImeTracingServerImpl v4 = new ImeTracingServerImpl(); this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; v1.startTrace(0);,0.7267720103263855
isImeTraceEnabled()Z,startImeTrace()V,this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; boolean v6 = v1.isEnabled(); return v6;,ImeTracingClientImpl v4 = new ImeTracingClientImpl(); this.sInstance = phiInstruction; ImeTracing v1 = this.sInstance; v1.startTrace(0);,0.7038277983665466
