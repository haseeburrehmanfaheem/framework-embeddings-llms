This is path 1 for the API with depth 2:
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	long v6 = PersistentDataBlockService.getBlockDeviceSize();
	long v5 = phiInstruction;
	long v4 = v5;
	RandomAccessFile v9 = new RandomAccessFile(this.mDataBlockFile,"rw");
	FileChannel v11 = v9.getChannel();
	FileChannel v8 = v11;
	FileChannel v7 = v8;
	ByteBuffer v12 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v13 = new [B(32);
	ByteBuffer v14 = v12.put(v13);
	ByteBuffer v15 = v12.putInt(428873843);
	ByteBuffer v16 = v12.putInt(p1.length);
	ByteBuffer v17 = v12.put(p1);
	Buffer v18 = v12.flip();
	Object v19 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v20 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v21 = v7.write(v12);
	v7.force(1);
	return -1;
}

This is path 2 for the API with depth 2:
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	long v6 = PersistentDataBlockService.getBlockDeviceSize();
	long v5 = phiInstruction;
	long v4 = v5;
	RandomAccessFile v9 = new RandomAccessFile(this.mDataBlockFile,"rw");
	FileChannel v11 = v9.getChannel();
	FileChannel v8 = v11;
	FileChannel v7 = v8;
	ByteBuffer v12 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v13 = new [B(32);
	ByteBuffer v14 = v12.put(v13);
	ByteBuffer v15 = v12.putInt(428873843);
	ByteBuffer v16 = v12.putInt(p1.length);
	ByteBuffer v17 = v12.put(p1);
	Buffer v18 = v12.flip();
	Object v19 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v20 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v21 = v7.write(v12);
	return -1;
}

This is path 3 for the API with depth 2:
public int write(byte[] p1){
	int v1 = Binder.getCallingUid();
	long v6 = PersistentDataBlockService.getBlockDeviceSize();
	long v5 = phiInstruction;
	long v4 = v5;
	RandomAccessFile v9 = new RandomAccessFile(this.mDataBlockFile,"rw");
	FileChannel v11 = v9.getChannel();
	FileChannel v8 = v11;
	FileChannel v7 = v8;
	ByteBuffer v12 = ByteBuffer.allocate(((p1.length + 8) + 32));
	[B v13 = new [B(32);
	ByteBuffer v14 = v12.put(v13);
	ByteBuffer v15 = v12.putInt(428873843);
	ByteBuffer v16 = v12.putInt(p1.length);
	ByteBuffer v17 = v12.put(p1);
	Buffer v18 = v12.flip();
	Object v19 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
	boolean v20 = PersistentDataBlockService.-$$Nest$fgetmIsWritable(this.this$0);
	int v21 = v7.write(v12);
	v7.force(1);
	return -1;
}
