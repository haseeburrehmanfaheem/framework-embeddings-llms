This is path 1 for the API with depth 2:
public byte[] read(){
	int v1 = Binder.getCallingUid();
	[B v6 = new [B(32);
	byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6);
	boolean v8 = Arrays.equals(v6, v7);
	PersistentDataBlockService.formatPartitionLocked(0);
	boolean v5 = 0;
	boolean v4 = v5;
	DataInputStream v11 = new DataInputStream;
	FileInputStream v12 = new FileInputStream;
	File v13 = new File;
	String v14 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	return 0;
}

This is path 2 for the API with depth 2:
public byte[] read(){
	int v1 = Binder.getCallingUid();
	[B v6 = new [B(32);
	byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6);
	boolean v8 = Arrays.equals(v6, v7);
	PersistentDataBlockService.formatPartitionLocked(0);
	boolean v5 = 0;
	boolean v4 = v5;
	DataInputStream v11 = new DataInputStream;
	FileInputStream v12 = new FileInputStream;
	File v13 = new File;
	return 0;
}

This is path 3 for the API with depth 2:
public byte[] read(){
	int v1 = Binder.getCallingUid();
	[B v6 = new [B(32);
	byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6);
	boolean v8 = Arrays.equals(v6, v7);
	PersistentDataBlockService.formatPartitionLocked(0);
	boolean v5 = 0;
	boolean v4 = v5;
	DataInputStream v11 = new DataInputStream;
	FileInputStream v12 = new FileInputStream;
	File v13 = new File;
	return 0;
}
