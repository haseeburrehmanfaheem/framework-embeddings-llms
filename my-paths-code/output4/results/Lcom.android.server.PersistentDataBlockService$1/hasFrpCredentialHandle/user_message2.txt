The method hasFrpCredentialHandle has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasFrpCredentialHandle(){
	int v4 = Binder.getCallingUid();
	this.this$0.enforceUid(v4);
	PersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
	byte[] v8 = v7.getFrpCredentialHandle();
	return phiInstruction;
}
This is path 2 for the API with depth 2:
public boolean hasFrpCredentialHandle(){
	int v4 = Binder.getCallingUid();
	this.this$0.enforceUid(v4);
	PersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);
	byte[] v8 = v7.getFrpCredentialHandle();
	return phiInstruction;
}

and the following sink code:
['int v4 = Binder.getCallingUid();\nthis.this$0.enforceUid(v4);\nPersistentDataBlockManagerInternal v7 = PersistentDataBlockService.-$$Nest$fgetmInternalService(this.this$0);\nbyte[] v8 = v7.getFrpCredentialHandle();']

The method hasFrpCredentialHandle has the following similar APIs:

- API Name: startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I with Similarity Score: 0.7073662877082825
  - Access Control Level: SYS_OR_SIG and the following code:
int v31 = Binder.getCallingUid();
ActivityStarter v32 = v25.setRealCallingUid(v31);

