The method disableForUser has the following code snippet:

This is path 1 for the API with depth 2:
public void disableForUser(int p1, IBinder p2, String p3, int p4){
	Pair v5 = StatusBarManagerService.findMatchingRecordLocked(p4, p2);
	int v6 = Pair.first.intValue();
	boolean v7 = p4.isBinderAlive();
	Pair.second.setFlags(p3, p6, p5);
	boolean v9 = Pair.second.isEmpty();
	Object v10 = this.mDisableRecords.remove(v6);
	boolean v11 = StatusBarManagerService$DisableRecord.token.unlinkToDeath(Pair.second, 0);
	int v13 = this.mDisableRecords.size();
	int v12 = phiInstruction;
	int v15 = this.mDisableRecords.size();
	int v14 = phiInstruction;
	Object v17 = this.mDisplayUiState.get(p1);
	StatusBarManagerService$UiState v18 = new StatusBarManagerService$UiState(0);
	this.mDisplayUiState.put(p1, v18);
	StatusBarManagerService$UiState v16 = phiInstruction;
	boolean v22 = v16.disableEquals(v12, v14);
	boolean v21 = v22;
	v16.setDisabled(v12, v14);
	StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12);
	boolean v27 = this.mHandler.post(v25);
	this.mBar.disable(0, v12, v14);
	return;
}
This is path 2 for the API with depth 2:
public void disableForUser(int p1, IBinder p2, String p3, int p4){
	Pair v5 = StatusBarManagerService.findMatchingRecordLocked(p4, p2);
	int v6 = Pair.first.intValue();
	boolean v7 = p4.isBinderAlive();
	StatusBarManagerService$DisableRecord v8 = new StatusBarManagerService$DisableRecord(StatusBarManagerService,p2,p4);
	v8.setFlags(p3, p6, p5);
	boolean v11 = this.mDisableRecords.add(v8);
	int v13 = this.mDisableRecords.size();
	int v12 = phiInstruction;
	int v15 = this.mDisableRecords.size();
	int v14 = phiInstruction;
	Object v17 = this.mDisplayUiState.get(p1);
	StatusBarManagerService$UiState v18 = new StatusBarManagerService$UiState(0);
	this.mDisplayUiState.put(p1, v18);
	StatusBarManagerService$UiState v16 = phiInstruction;
	boolean v22 = v16.disableEquals(v12, v14);
	boolean v21 = v22;
	v16.setDisabled(v12, v14);
	StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12);
	boolean v27 = this.mHandler.post(v25);
	this.mBar.disable(0, v12, v14);
	return;
}

and the following sink code:
['Pair v5 = StatusBarManagerService.findMatchingRecordLocked(p4, p2);\nint v6 = Pair.first.intValue();\nboolean v7 = p4.isBinderAlive();\nStatusBarManagerService$DisableRecord v8 = new StatusBarManagerService$DisableRecord(StatusBarManagerService,p2,p4);\nv8.setFlags(p3, p6, p5);\nPair.second.setFlags(p3, p6, p5);', 'Object v17 = this.mDisplayUiState.get(p1);\nStatusBarManagerService$UiState v18 = new StatusBarManagerService$UiState(0);\nthis.mDisplayUiState.put(p1, v18);\nv16.setDisabled(v12, v14);', 'StatusBarManagerService$$ExternalSyntheticLambda6 v25 = new StatusBarManagerService$$ExternalSyntheticLambda6(StatusBarManagerService,v12);\nboolean v27 = this.mHandler.post(v25);']

The method disableForUser has the following similar APIs:

- API Name: setImeWindowStatus(ILandroid/os/IBinder;IIZ)V with Similarity Score: 0.9493764638900757
  - Access Control Level: SYS_OR_SIG and the following code:
Object v4 = this.mDisplayUiState.get(p1);
StatusBarManagerService$UiState v5 = new StatusBarManagerService$UiState(0);
this.mDisplayUiState.put(p1, v5);

- API Name: setImeWindowStatus(ILandroid/os/IBinder;IIZ)V with Similarity Score: 0.9417921304702759
  - Access Control Level: SYS_OR_SIG and the following code:
StatusBarManagerService$$ExternalSyntheticLambda1 v10 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5);
boolean v12 = this.mHandler.post(v10);

