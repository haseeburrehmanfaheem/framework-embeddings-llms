The method setNavBarMode has the following code snippet:

This is path 1 for the API with depth 2:
public void setNavBarMode(int p1){
	long v3 = Binder.clearCallingIdentity();
	ContentResolver v4 = this.mContext.getContentResolver();
	boolean v5 = Settings$Secure.putIntForUser(v4, "nav_bar_kids_mode", p1, this.mCurrentUserId);
	ContentResolver v6 = this.mContext.getContentResolver();
	boolean v7 = Settings$Secure.putIntForUser(v6, "nav_bar_force_visible", p1, this.mCurrentUserId);
	IBinder v9 = ServiceManager.getService("overlay");
	IOverlayManager v10 = IOverlayManager$Stub.asInterface(v9);
	this.mOverlayManager = v10;
	IOverlayManager v8 = this.mOverlayManager;
	PackageManager v13 = this.mContext.getPackageManager();
	PackageManager$PackageInfoFlags v15 = new PackageManager$PackageInfoFlags(0);
	PackageManager$PackageInfoFlags v14 = v15;
	PackageInfo v17 = v13.getPackageInfo("com.android.internal.systemui.navbar.threebutton", v14);
	boolean v12 = phiInstruction;
	boolean v18 = v8.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);
	Binder.restoreCallingIdentity(v3);
	return;
}
This is path 2 for the API with depth 2:
public void setNavBarMode(int p1){
	long v3 = Binder.clearCallingIdentity();
	ContentResolver v4 = this.mContext.getContentResolver();
	boolean v5 = Settings$Secure.putIntForUser(v4, "nav_bar_kids_mode", p1, this.mCurrentUserId);
	ContentResolver v6 = this.mContext.getContentResolver();
	boolean v7 = Settings$Secure.putIntForUser(v6, "nav_bar_force_visible", p1, this.mCurrentUserId);
	IBinder v9 = ServiceManager.getService("overlay");
	IOverlayManager v10 = IOverlayManager$Stub.asInterface(v9);
	this.mOverlayManager = v10;
	IOverlayManager v8 = this.mOverlayManager;
	PackageManager v13 = this.mContext.getPackageManager();
	PackageManager$PackageInfoFlags v15 = new PackageManager$PackageInfoFlags(0);
	PackageManager$PackageInfoFlags v14 = v15;
	PackageInfo v17 = v13.getPackageInfo("com.android.internal.systemui.navbar.threebutton", v14);
	boolean v12 = phiInstruction;
	boolean v18 = v8.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);
	Binder.restoreCallingIdentity(v3);
	return;
}
This is path 3 for the API with depth 2:
public void setNavBarMode(int p1){
	long v3 = Binder.clearCallingIdentity();
	ContentResolver v4 = this.mContext.getContentResolver();
	boolean v5 = Settings$Secure.putIntForUser(v4, "nav_bar_kids_mode", p1, this.mCurrentUserId);
	ContentResolver v6 = this.mContext.getContentResolver();
	boolean v7 = Settings$Secure.putIntForUser(v6, "nav_bar_force_visible", p1, this.mCurrentUserId);
	IBinder v9 = ServiceManager.getService("overlay");
	IOverlayManager v10 = IOverlayManager$Stub.asInterface(v9);
	this.mOverlayManager = v10;
	IOverlayManager v8 = this.mOverlayManager;
	PackageManager v12 = this.mContext.getPackageManager();
	PackageManager$PackageInfoFlags v14 = new PackageManager$PackageInfoFlags(0);
	PackageManager$PackageInfoFlags v13 = v14;
	PackageInfo v16 = v12.getPackageInfo("com.android.internal.systemui.navbar.threebutton", v13);
	boolean v11 = phiInstruction;
	boolean v17 = v8.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);
	Binder.restoreCallingIdentity(v3);
	return;
}

and the following sink code:
['boolean v5 = Settings$Secure.putIntForUser(v4, "nav_bar_kids_mode", p1, this.mCurrentUserId);\nboolean v7 = Settings$Secure.putIntForUser(v6, "nav_bar_force_visible", p1, this.mCurrentUserId);\nboolean v18 = v8.setEnabledExclusiveInCategory("com.android.internal.systemui.navbar.threebutton", this.mCurrentUserId);']

The method setNavBarMode has the following similar APIs:

- API Name: getNavBarMode()I with Similarity Score: 0.8082480430603027
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = Settings$Secure.getIntForUser(v4, "nav_bar_kids_mode", this.mCurrentUserId);
return v5;

