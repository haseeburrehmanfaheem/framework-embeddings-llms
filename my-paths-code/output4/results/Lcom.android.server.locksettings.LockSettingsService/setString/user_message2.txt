The method setString has the following code snippet:

This is path 1 for the API with depth 2:
public void setString(String p1, String p2, int p3){
	Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");
	SQLiteDatabase v6 = this.mOpenHelper.getWritableDatabase();
	LockSettingsStorage.writeKeyValue(v6, p1, p2, p3);
	boolean v8 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
	BackupManager.dataChanged("com.android.providers.settings");
	return;
}
This is path 2 for the API with depth 2:
public void setString(String p1, String p2, int p3){
	Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");
	SQLiteDatabase v6 = this.mOpenHelper.getWritableDatabase();
	LockSettingsStorage.writeKeyValue(v6, p1, p2, p3);
	boolean v8 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
	return;
}

and the following sink code:
['SQLiteDatabase v6 = this.mOpenHelper.getWritableDatabase();\nLockSettingsStorage.writeKeyValue(v6, p1, p2, p3);']

The method setString has the following similar APIs:

- API Name: getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.8261223435401917
  - Access Control Level: SYS_OR_SIG and the following code:
SQLiteDatabase v8 = this.mOpenHelper.getReadableDatabase();
Cursor v11 = v8.query("locksettings", this.COLUMNS_FOR_QUERY, "user=? AND name=?", v9, 0, 0, 0);
String v13 = v11.getString(0);
this.mCache.putKeyValueIfUnchanged(phiInstruction, phiInstruction, p3, v7);

- API Name: setLong(Ljava/lang/String;JI)V with Similarity Score: 0.7532294988632202
  - Access Control Level: SYS_OR_SIG and the following code:
String v4 = Long.toString(p2);
LockSettingsStorage.writeKeyValue(p1, v4, p3);

