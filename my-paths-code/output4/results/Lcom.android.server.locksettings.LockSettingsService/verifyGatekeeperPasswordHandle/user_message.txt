This is path 1 for the API with depth 2:
public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v3 = this.mGatekeeperPasswords.get(p1);
	IBinder v5 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
	LockSettingsService$GateKeeperDiedRecipient v6 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
	v5.linkToDeath(v6, 0);
	IInterface v11 = v5.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
	IGateKeeperService$Stub$Proxy v12 = new IGateKeeperService$Stub$Proxy(v5);
	IGateKeeperService v10 = v12;
	this.mGateKeeperService = v10;
	IGateKeeperService v4 = v10;
	byte[] v16 = SyntheticPasswordManager.loadState("handle", 0, p4);
	byte[] v15 = v16;
	GateKeeperResponse v17 = v4.verifyChallenge(p3, p2, v15, v3);
	int v18 = this.mResponseCode;
	VerifyCredentialResponse$Builder v19 = new VerifyCredentialResponse$Builder();
	byte[] v21 = this.mPayload;
	this.mGatekeeperHAT = v21;
	VerifyCredentialResponse$Builder v22 = VerifyCredentialResponse$Builder;
	VerifyCredentialResponse v24 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0);
	VerifyCredentialResponse v23 = v24;
	boolean v26 = this.mShouldReEnroll;
	GateKeeperResponse v27 = v4.enroll(p3, v15, v15, v3);
	int v29 = this.mResponseCode;
	byte[] v30 = this.mPayload;
	SyntheticPasswordManager.saveState("handle", v30, 0, p4);
	VerifyCredentialResponse v33 = SyntheticPasswordManager.verifyChallengeInternal(v4, v3, p2, p3);
	byte[] v34 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
	GateKeeperResponse v35 = v4.verifyChallenge(p3, p2, v34, v3);
	int v36 = v35.getResponseCode();
	VerifyCredentialResponse$Builder v37 = new VerifyCredentialResponse$Builder();
	byte[] v39 = v35.getPayload();
	VerifyCredentialResponse$Builder v40 = v37.setGatekeeperHAT(v39);
	VerifyCredentialResponse v41 = v40.build();
	boolean v42 = v35.getShouldReEnroll();
	GateKeeperResponse v43 = v4.enroll(p3, v34, v34, v3);
	int v45 = phiInstruction.getResponseCode();
	VerifyCredentialResponse v14 = v41;
	return v33;
	return phiInstruction;
}

This is path 2 for the API with depth 2:
public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v3 = this.mGatekeeperPasswords.get(p1);
	IBinder v5 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
	LockSettingsService$GateKeeperDiedRecipient v6 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
	v5.linkToDeath(v6, 0);
	IInterface v11 = v5.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
	IGateKeeperService v10 = v11;
	this.mGateKeeperService = v10;
	IGateKeeperService v4 = v10;
	byte[] v14 = SyntheticPasswordManager.loadState("handle", 0, p4);
	byte[] v13 = v14;
	GateKeeperResponse v15 = v4.verifyChallenge(p3, p2, v13, v3);
	int v16 = this.mResponseCode;
	VerifyCredentialResponse$Builder v17 = new VerifyCredentialResponse$Builder();
	byte[] v19 = this.mPayload;
	this.mGatekeeperHAT = v19;
	VerifyCredentialResponse$Builder v20 = VerifyCredentialResponse$Builder;
	VerifyCredentialResponse v22 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0);
	VerifyCredentialResponse v21 = v22;
	boolean v24 = this.mShouldReEnroll;
	GateKeeperResponse v25 = v4.enroll(p3, v13, v13, v3);
	int v27 = this.mResponseCode;
	byte[] v28 = this.mPayload;
	SyntheticPasswordManager.saveState("handle", v28, 0, p4);
	VerifyCredentialResponse v31 = SyntheticPasswordManager.verifyChallengeInternal(v4, v3, p2, p3);
	byte[] v32 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
	GateKeeperResponse v33 = v4.verifyChallenge(p3, p2, v32, v3);
	int v34 = v33.getResponseCode();
	VerifyCredentialResponse$Builder v35 = new VerifyCredentialResponse$Builder();
	byte[] v37 = v33.getPayload();
	VerifyCredentialResponse$Builder v38 = v35.setGatekeeperHAT(v37);
	VerifyCredentialResponse v39 = v38.build();
	boolean v40 = v33.getShouldReEnroll();
	GateKeeperResponse v41 = v4.enroll(p3, v32, v32, v3);
	int v43 = phiInstruction.getResponseCode();
	VerifyCredentialResponse v12 = v39;
	return v31;
	return phiInstruction;
}

This is path 3 for the API with depth 2:
public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v3 = this.mGatekeeperPasswords.get(p1);
	IBinder v5 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
	LockSettingsService$GateKeeperDiedRecipient v6 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
	v5.linkToDeath(v6, 0);
	IInterface v11 = v5.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
	IGateKeeperService$Stub$Proxy v12 = new IGateKeeperService$Stub$Proxy(v5);
	IGateKeeperService v10 = v12;
	this.mGateKeeperService = v10;
	IGateKeeperService v4 = v10;
	byte[] v16 = SyntheticPasswordManager.loadState("handle", 0, p4);
	byte[] v15 = v16;
	GateKeeperResponse v17 = v4.verifyChallenge(p3, p2, v15, v3);
	int v18 = this.mResponseCode;
	VerifyCredentialResponse$Builder v19 = new VerifyCredentialResponse$Builder();
	byte[] v21 = this.mPayload;
	this.mGatekeeperHAT = v21;
	VerifyCredentialResponse$Builder v22 = VerifyCredentialResponse$Builder;
	VerifyCredentialResponse v24 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0);
	VerifyCredentialResponse v23 = v24;
	boolean v26 = this.mShouldReEnroll;
	GateKeeperResponse v27 = v4.enroll(p3, v15, v15, v3);
	int v28 = this.mResponseCode;
	byte[] v29 = this.mPayload;
	SyntheticPasswordManager.saveState("handle", v29, 0, p4);
	VerifyCredentialResponse v32 = SyntheticPasswordManager.verifyChallengeInternal(v4, v3, p2, p3);
	byte[] v33 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
	GateKeeperResponse v34 = v4.verifyChallenge(p3, p2, v33, v3);
	int v35 = v34.getResponseCode();
	VerifyCredentialResponse$Builder v36 = new VerifyCredentialResponse$Builder();
	byte[] v38 = v34.getPayload();
	VerifyCredentialResponse$Builder v39 = v36.setGatekeeperHAT(v38);
	VerifyCredentialResponse v40 = v39.build();
	boolean v41 = v34.getShouldReEnroll();
	GateKeeperResponse v42 = v4.enroll(p3, v33, v33, v3);
	int v44 = phiInstruction.getResponseCode();
	VerifyCredentialResponse v14 = v40;
	return v32;
	return phiInstruction;
}
