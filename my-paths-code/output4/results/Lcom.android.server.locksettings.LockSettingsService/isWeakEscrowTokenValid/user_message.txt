This is path 1 for the API with depth 2:
public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	long v5 = Binder.clearCallingIdentity();
	byte[] v8 = SyntheticPasswordManager.loadState("e0", 0, p1);
	boolean v9 = ArrayUtils.isEmpty(v8);
	boolean v7 = (v9 ^ 1);
	byte[] v11 = SyntheticPasswordManager.loadState("p1", 0, p1);
	boolean v12 = ArrayUtils.isEmpty(v11);
	boolean v10 = (v12 ^ 1);
	boolean v6 = phiInstruction;
	IBinder v14 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
	LockSettingsService$GateKeeperDiedRecipient v15 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
	v14.linkToDeath(v15, 0);
	IInterface v20 = v14.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
	IGateKeeperService$Stub$Proxy v21 = new IGateKeeperService$Stub$Proxy(v14);
	IGateKeeperService v19 = v21;
	this.mGateKeeperService = v19;
	IGateKeeperService v13 = v19;
	SyntheticPasswordManager$AuthenticationResult v25 = new SyntheticPasswordManager$AuthenticationResult();
	byte[] v27 = SyntheticPasswordManager.loadSecdiscardable(p2, p4);
	int v28 = SyntheticPasswordManager.loadWeaverSlot(p2, p4);
	boolean v29 = SyntheticPasswordManager.isWeaverAvailable();
	VerifyCredentialResponse v30 = SyntheticPasswordManager.weaverVerify(v28, 0);
	int v31 = v30.getResponseCode();
	byte[] v32 = v30.getGatekeeperHAT();
	byte[] v33 = v30.getGatekeeperHAT();
	byte[] v34 = SyntheticPasswordCrypto.decrypt(v33, this.PERSONALISATION_WEAVER_TOKEN, v27);
	byte[] v35 = SyntheticPasswordManager.transformUnderSecdiscardable(p3, phiInstruction);
	SyntheticPasswordManager$AuthenticationToken v36 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p2, 2, v35, 0, p4);
	SyntheticPasswordManager$AuthenticationResult.authToken = v36;
	VerifyCredentialResponse v37 = SyntheticPasswordManager.verifyChallenge(p1, v36, 0, p4);
	SyntheticPasswordManager$AuthenticationResult.gkResponse = v37;
	SyntheticPasswordManager$AuthenticationResult.gkResponse = VerifyCredentialResponse.OK;
	SyntheticPasswordManager$AuthenticationResult v24 = v25;
	SyntheticPasswordManager$AuthenticationResult v23 = v24;
	Binder.restoreCallingIdentity(v5);
	return 0;
}

This is path 2 for the API with depth 2:
public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	long v5 = Binder.clearCallingIdentity();
	byte[] v8 = SyntheticPasswordManager.loadState("e0", 0, p1);
	boolean v9 = ArrayUtils.isEmpty(v8);
	boolean v7 = (v9 ^ 1);
	byte[] v11 = SyntheticPasswordManager.loadState("p1", 0, p1);
	boolean v12 = ArrayUtils.isEmpty(v11);
	boolean v10 = (v12 ^ 1);
	boolean v6 = phiInstruction;
	IBinder v14 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
	LockSettingsService$GateKeeperDiedRecipient v15 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
	v14.linkToDeath(v15, 0);
	IInterface v20 = v14.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
	IGateKeeperService$Stub$Proxy v21 = new IGateKeeperService$Stub$Proxy(v14);
	IGateKeeperService v19 = v21;
	this.mGateKeeperService = v19;
	IGateKeeperService v13 = v19;
	SyntheticPasswordManager$AuthenticationResult v25 = new SyntheticPasswordManager$AuthenticationResult();
	byte[] v27 = SyntheticPasswordManager.loadSecdiscardable(p2, p4);
	int v28 = SyntheticPasswordManager.loadWeaverSlot(p2, p4);
	boolean v29 = SyntheticPasswordManager.isWeaverAvailable();
	VerifyCredentialResponse v30 = SyntheticPasswordManager.weaverVerify(v28, 0);
	int v31 = v30.getResponseCode();
	byte[] v32 = v30.getGatekeeperHAT();
	byte[] v33 = v30.getGatekeeperHAT();
	byte[] v34 = SyntheticPasswordCrypto.decrypt(v33, this.PERSONALISATION_WEAVER_TOKEN, v27);
	byte[] v35 = SyntheticPasswordManager.transformUnderSecdiscardable(p3, phiInstruction);
	SyntheticPasswordManager$AuthenticationToken v36 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p2, 2, v35, 0, p4);
	SyntheticPasswordManager$AuthenticationResult.authToken = v36;
	VerifyCredentialResponse v37 = SyntheticPasswordManager.verifyChallenge(p1, v36, 0, p4);
	SyntheticPasswordManager$AuthenticationResult.gkResponse = v37;
	SyntheticPasswordManager$AuthenticationResult.gkResponse = VerifyCredentialResponse.OK;
	SyntheticPasswordManager$AuthenticationResult v24 = v25;
	SyntheticPasswordManager$AuthenticationResult v23 = v24;
	Binder.restoreCallingIdentity(v5);
	return 0;
}

This is path 3 for the API with depth 2:
public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	long v5 = Binder.clearCallingIdentity();
	byte[] v8 = SyntheticPasswordManager.loadState("e0", 0, p1);
	boolean v9 = ArrayUtils.isEmpty(v8);
	boolean v7 = (v9 ^ 1);
	byte[] v11 = SyntheticPasswordManager.loadState("p1", 0, p1);
	boolean v12 = ArrayUtils.isEmpty(v11);
	boolean v10 = (v12 ^ 1);
	boolean v6 = phiInstruction;
	IBinder v14 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
	LockSettingsService$GateKeeperDiedRecipient v15 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
	v14.linkToDeath(v15, 0);
	IInterface v20 = v14.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
	IGateKeeperService v19 = v20;
	this.mGateKeeperService = v19;
	IGateKeeperService v13 = v19;
	SyntheticPasswordManager$AuthenticationResult v23 = new SyntheticPasswordManager$AuthenticationResult();
	byte[] v25 = SyntheticPasswordManager.loadSecdiscardable(p2, p4);
	int v26 = SyntheticPasswordManager.loadWeaverSlot(p2, p4);
	boolean v27 = SyntheticPasswordManager.isWeaverAvailable();
	VerifyCredentialResponse v28 = SyntheticPasswordManager.weaverVerify(v26, 0);
	int v29 = v28.getResponseCode();
	byte[] v30 = v28.getGatekeeperHAT();
	byte[] v31 = v28.getGatekeeperHAT();
	byte[] v32 = SyntheticPasswordCrypto.decrypt(v31, this.PERSONALISATION_WEAVER_TOKEN, v25);
	byte[] v33 = SyntheticPasswordManager.transformUnderSecdiscardable(p3, phiInstruction);
	SyntheticPasswordManager$AuthenticationToken v34 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p2, 2, v33, 0, p4);
	SyntheticPasswordManager$AuthenticationResult.authToken = v34;
	VerifyCredentialResponse v35 = SyntheticPasswordManager.verifyChallenge(p1, v34, 0, p4);
	SyntheticPasswordManager$AuthenticationResult.gkResponse = v35;
	SyntheticPasswordManager$AuthenticationResult.gkResponse = VerifyCredentialResponse.OK;
	SyntheticPasswordManager$AuthenticationResult v22 = v23;
	SyntheticPasswordManager$AuthenticationResult v21 = v22;
	Binder.restoreCallingIdentity(v5);
	return 0;
}
