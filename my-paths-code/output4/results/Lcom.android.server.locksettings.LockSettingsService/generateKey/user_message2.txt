The method generateKey has the following code snippet:

This is path 1 for the API with depth 2:
public String generateKey(String p1){
	RecoverableKeyStoreManager.checkRecoverKeyStorePermission();
	Object v4 = Objects.requireNonNull(p1, "alias is null");
	int v5 = Binder.getCallingUid();
	int v6 = UserHandle.getCallingUserId();
	PlatformEncryptionKey v7 = this.mPlatformKeyManager.getEncryptKey(v6);
	byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0);
	this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8);
	String v10 = RecoverableKeyStoreManager.getAlias(v6, v5, p1);
	String v2 = v10;
	String v1 = v2;
	return v1;
}

and the following sink code:
['byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0);\nthis.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8);\nreturn v1;']

The method generateKey has the following similar APIs:

- API Name: importKey(Ljava/lang/String;[B)Ljava/lang/String; with Similarity Score: 0.866481363773346
  - Access Control Level: SYS_OR_SIG and the following code:
this.mApplicationKeyStorage.setSymmetricKeyEntry(v7, v6, p1, p2);
String v11 = RecoverableKeyStoreManager.getAlias(v7, v6, p1);

- API Name: importKey(Ljava/lang/String;[B)Ljava/lang/String; with Similarity Score: 0.7551935911178589
  - Access Control Level: SYS_OR_SIG and the following code:
this.mRecoverableKeyGenerator.importKey(v8, v7, v6, p1, p2, 0);
Object v4 = Objects.requireNonNull(p1, "alias is null");
Object v5 = Objects.requireNonNull(p2, "keyBytes is null");

