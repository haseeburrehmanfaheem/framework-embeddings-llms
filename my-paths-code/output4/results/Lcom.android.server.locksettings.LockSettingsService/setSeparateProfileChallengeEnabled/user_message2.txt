The method setSeparateProfileChallengeEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	Preconditions.checkState(phiInstruction, "Credential is already zeroized");
	int v3 = this.mType;
	LockSettingsService.checkReadPermission("lockscreen.profilechallenge", p1);
	boolean v9 = "lock_pattern_autolock".equals("lockscreen.profilechallenge");
	int v10 = LockSettingsService.getCredentialTypeInternal(p1);
	boolean v7 = phiInstruction;
	LockSettingsService.checkWritePermission(p1);
	this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
	String v15 = LockSettingsStorage.getChildProfileLockFile(p1);
	LockSettingsStorage.deleteFile(v15);
	caughtException.printStackTrace();
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append("profile_key_name_encrypt_");
	StringBuilder v28 = v25.append(p1);
	String v29 = v25.toString();
	this.mJavaKeyStore.deleteEntry(v29);
	StringBuilder v31 = new StringBuilder();
	StringBuilder v33 = v31.append("profile_key_name_decrypt_");
	StringBuilder v34 = v31.append(p1);
	String v35 = v31.toString();
	this.mJavaKeyStore.deleteEntry(v35);
	p0.notifySeparateProfileChallengeChanged(p1);
	return;
}
This is path 2 for the API with depth 2:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	Preconditions.checkState(phiInstruction, "Credential is already zeroized");
	int v3 = this.mType;
	LockscreenCredential v6 = LockscreenCredential.createNone();
	LockSettingsService.checkReadPermission("lockscreen.profilechallenge", p1);
	boolean v10 = "lock_pattern_autolock".equals("lockscreen.profilechallenge");
	int v11 = LockSettingsService.getCredentialTypeInternal(p1);
	boolean v8 = phiInstruction;
	LockSettingsService.checkWritePermission(p1);
	this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
	String v16 = LockSettingsStorage.getChildProfileLockFile(p1);
	LockSettingsStorage.deleteFile(v16);
	caughtException.printStackTrace();
	StringBuilder v26 = new StringBuilder();
	StringBuilder v28 = v26.append("profile_key_name_encrypt_");
	StringBuilder v29 = v26.append(p1);
	String v30 = v26.toString();
	this.mJavaKeyStore.deleteEntry(v30);
	StringBuilder v32 = new StringBuilder();
	StringBuilder v34 = v32.append("profile_key_name_decrypt_");
	StringBuilder v35 = v32.append(p1);
	String v36 = v32.toString();
	this.mJavaKeyStore.deleteEntry(v36);
	p0.notifySeparateProfileChallengeChanged(p1);
	return;
}
This is path 3 for the API with depth 2:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	Preconditions.checkState(phiInstruction, "Credential is already zeroized");
	int v3 = this.mType;
	LockSettingsService.checkReadPermission("lockscreen.profilechallenge", p1);
	boolean v9 = "lock_pattern_autolock".equals("lockscreen.profilechallenge");
	int v10 = LockSettingsService.getCredentialTypeInternal(p1);
	boolean v7 = phiInstruction;
	LockSettingsService.checkWritePermission(p1);
	this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
	String v15 = LockSettingsStorage.getChildProfileLockFile(p1);
	LockSettingsStorage.deleteFile(v15);
	caughtException.printStackTrace();
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append("profile_key_name_encrypt_");
	StringBuilder v28 = v25.append(p1);
	String v29 = v25.toString();
	this.mJavaKeyStore.deleteEntry(v29);
	StringBuilder v31 = new StringBuilder();
	StringBuilder v33 = v31.append("profile_key_name_decrypt_");
	StringBuilder v34 = v31.append(p1);
	String v35 = v31.toString();
	this.mJavaKeyStore.deleteEntry(v35);
	p0.notifySeparateProfileChallengeChanged(p1);
	return;
}

and the following sink code:
['LockSettingsService.checkReadPermission("lockscreen.profilechallenge", p1);\nLockSettingsService.checkWritePermission(p1);\nthis.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);', 'StringBuilder v25 = new StringBuilder();\nStringBuilder v27 = v25.append("profile_key_name_encrypt_");\nStringBuilder v28 = v25.append(p1);\nString v29 = v25.toString();\nthis.mJavaKeyStore.deleteEntry(v29);', 'StringBuilder v31 = new StringBuilder();\nStringBuilder v33 = v31.append("profile_key_name_decrypt_");\nStringBuilder v34 = v31.append(p1);\nString v35 = v31.toString();\nthis.mJavaKeyStore.deleteEntry(v35);', 'p0.notifySeparateProfileChallengeChanged(p1);']

The method setSeparateProfileChallengeEnabled has the following similar APIs:

- API Name: setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z with Similarity Score: 0.9417965412139893
  - Access Control Level: SYS_OR_SIG and the following code:
this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
LockSettingsService.checkWritePermission(p1);

- API Name: removeCachedUnifiedChallenge(I)V with Similarity Score: 0.8404338359832764
  - Access Control Level: NONE and the following code:
StringBuilder v3 = new StringBuilder();
StringBuilder v5 = v3.append("com.android.server.locksettings.unified_profile_cache_v2_");
StringBuilder v6 = v3.append(p1);
String v7 = v3.toString();
String v2 = v7;
boolean v14 = this.mKeyStore.containsAlias(v2);
this.mKeyStore.deleteEntry(v2);

