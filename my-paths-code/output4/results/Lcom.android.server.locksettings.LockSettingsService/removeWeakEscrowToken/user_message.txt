This is path 1 for the API with depth 2:
public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	long v5 = Binder.clearCallingIdentity();
	long v8 = LockSettingsService.getLong("sp-handle", 0, p2);
	long v7 = v8;
	Integer v10 = Integer.valueOf(p2);
	boolean v11 = this.tokenMap.containsKey(v10);
	Integer v12 = Integer.valueOf(p2);
	Object v13 = this.tokenMap.get(v12);
	Long v14 = Long.valueOf(p1);
	Object v15 = v13.remove(v14);
	boolean v9 = phiInstruction;
	boolean v17 = SyntheticPasswordManager.hasState("spblob", p1, p2);
	boolean v16 = v17;
	byte[] v19 = SyntheticPasswordManager.loadState("spblob", p1, p2);
	SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);
	SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
	SyntheticPasswordManager.destroyState("secdis", p1, p2);
	SyntheticPasswordManager.notifyWeakEscrowTokenRemovedListeners(p1, p2);
	boolean v6 = 1;
	Binder.restoreCallingIdentity(v5);
	return v6;
}

This is path 2 for the API with depth 2:
public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	long v5 = Binder.clearCallingIdentity();
	long v8 = LockSettingsService.getLong("sp-handle", 0, p2);
	long v7 = v8;
	Integer v10 = Integer.valueOf(p2);
	boolean v11 = this.tokenMap.containsKey(v10);
	Integer v12 = Integer.valueOf(p2);
	Object v13 = this.tokenMap.get(v12);
	Long v14 = Long.valueOf(p1);
	Object v15 = v13.remove(v14);
	boolean v9 = phiInstruction;
	boolean v17 = SyntheticPasswordManager.hasState("spblob", p1, p2);
	boolean v16 = v17;
	byte[] v19 = SyntheticPasswordManager.loadState("spblob", p1, p2);
	SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);
	SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
	SyntheticPasswordManager.destroyState("secdis", p1, p2);
	boolean v6 = 1;
	Binder.restoreCallingIdentity(v5);
	return v6;
}
