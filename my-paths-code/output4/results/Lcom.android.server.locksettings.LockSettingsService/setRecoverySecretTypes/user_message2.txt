The method setRecoverySecretTypes has the following code snippet:

This is path 1 for the API with depth 2:
public void setRecoverySecretTypes([I p1){
	int v11 = UserHandle.getCallingUserId();
	int v12 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v11, v12);
	Object v14 = Objects.requireNonNull(p1, "secretTypes is null");
	int v15 = UserHandle.getCallingUserId();
	int v16 = Binder.getCallingUid();
	SQLiteDatabase v18 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v19 = new String(4);
	String v20 = new String(2);
	String v21 = Integer.toString(v15);
	String v22 = Integer.toString(v16);
	Cursor v23 = v18.query("recovery_service_metadata", v19, "user_id = ? AND uid = ?", v20, 0, 0, 0);
	int v24 = v23.getCount();
	boolean v25 = v23.moveToFirst();
	int v26 = v23.getColumnIndexOrThrow("secret_types");
	boolean v27 = v23.isNull(v26);
	String v28 = v23.getString(v26);
	boolean v29 = TextUtils.isEmpty(v28);
	String v30 = v28.split(",");
	[I v31 = new [I(v30.length);
	v23.close();
	[I v17 = v31;
	boolean v33 = Arrays.equals(p1, v17);
	SQLiteDatabase v35 = this.mKeyStoreDbHelper.getWritableDatabase();
	ContentValues v36 = new ContentValues();
	StringJoiner v38 = new StringJoiner(",");
	IntStream v40 = Arrays.stream(p1);
	RecoverableKeyStoreDb$$ExternalSyntheticLambda0 v41 = new RecoverableKeyStoreDb$$ExternalSyntheticLambda0(v38);
	v40.forEach(v41);
	String v44 = v38.toString();
	v36.put("secret_types", v44);
	RecoverableKeyStoreDb.ensureRecoveryServiceMetadataEntryExists(v15, v16);
	String v47 = new String(2);
	String v48 = String.valueOf(v15);
	String v49 = String.valueOf(v16);
	int v50 = v35.update("recovery_service_metadata", v36, "user_id = ? AND uid = ?", v47);
	long v34 = v50;
	int v51 = Log.i("RecoverableKeyStoreMgr", "Updated secret types. Snapshot pending.");
	Long v53 = RecoverableKeyStoreDb.getLong(v15, v16, "snapshot_version");
	Long v52 = v53;
	long v55 = RecoverableKeyStoreDb.setLong(v15, v16, "should_create_snapshot", phiInstruction);
	long v54 = v55;
	int v56 = Log.i("RecoverableKeyStoreMgr", "Updated secret types. Snapshot must be updated");
	return;
}
This is path 2 for the API with depth 2:
public void setRecoverySecretTypes([I p1){
	int v11 = UserHandle.getCallingUserId();
	int v12 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v11, v12);
	Object v14 = Objects.requireNonNull(p1, "secretTypes is null");
	int v15 = UserHandle.getCallingUserId();
	int v16 = Binder.getCallingUid();
	SQLiteDatabase v18 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v19 = new String(4);
	String v20 = new String(2);
	String v21 = Integer.toString(v15);
	String v22 = Integer.toString(v16);
	Cursor v23 = v18.query("recovery_service_metadata", v19, "user_id = ? AND uid = ?", v20, 0, 0, 0);
	int v24 = v23.getCount();
	boolean v25 = v23.moveToFirst();
	int v26 = v23.getColumnIndexOrThrow("secret_types");
	boolean v27 = v23.isNull(v26);
	String v28 = v23.getString(v26);
	boolean v29 = TextUtils.isEmpty(v28);
	String v30 = v28.split(",");
	[I v31 = new [I(v30.length);
	v23.close();
	[I v17 = v31;
	boolean v33 = Arrays.equals(p1, v17);
	SQLiteDatabase v35 = this.mKeyStoreDbHelper.getWritableDatabase();
	ContentValues v36 = new ContentValues();
	StringJoiner v38 = new StringJoiner(",");
	IntStream v40 = Arrays.stream(p1);
	RecoverableKeyStoreDb$$ExternalSyntheticLambda0 v41 = new RecoverableKeyStoreDb$$ExternalSyntheticLambda0(v38);
	v40.forEach(v41);
	String v44 = v38.toString();
	v36.put("secret_types", v44);
	RecoverableKeyStoreDb.ensureRecoveryServiceMetadataEntryExists(v15, v16);
	String v47 = new String(2);
	String v48 = String.valueOf(v15);
	String v49 = String.valueOf(v16);
	int v50 = v35.update("recovery_service_metadata", v36, "user_id = ? AND uid = ?", v47);
	long v34 = v50;
	int v51 = Log.i("RecoverableKeyStoreMgr", "Updated secret types. Snapshot pending.");
	Long v53 = RecoverableKeyStoreDb.getLong(v15, v16, "snapshot_version");
	Long v52 = v53;
	long v55 = RecoverableKeyStoreDb.setLong(v15, v16, "should_create_snapshot", phiInstruction);
	long v54 = v55;
	int v56 = Log.i("RecoverableKeyStoreMgr", "Updated secret types. Snapshot must be updated");
	return;
}

and the following sink code:
['int v11 = UserHandle.getCallingUserId();\nint v12 = Binder.getCallingUid();\nthis.mCleanupManager.registerRecoveryAgent(v11, v12);', 'SQLiteDatabase v18 = this.mKeyStoreDbHelper.getReadableDatabase();\nCursor v23 = v18.query("recovery_service_metadata", ...)\nv23.getColumnIndexOrThrow("secret_types");\nString v28 = v23.getString(v26);', '[I v31 = new [I(v30.length);\nboolean v33 = Arrays.equals(p1, v17);\nSQLiteDatabase v35 = this.mKeyStoreDbHelper.getWritableDatabase();\nContentValues v36 = new ContentValues();\nv36.put("secret_types", v44);\nint v50 = v35.update("recovery_service_metadata", v36, ...)']

The method setRecoverySecretTypes has the following similar APIs:

- API Name: getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot; with Similarity Score: 0.9227079153060913
  - Access Control Level: SYS_OR_SIG and the following code:
int v11 = UserHandle.getCallingUserId();
int v12 = Binder.getCallingUid();
this.mCleanupManager.registerRecoveryAgent(v11, v12);
KeyChainSnapshot v17 = RecoverySnapshotStorage.readFromDisk(v14);

- API Name: initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V with Similarity Score: 0.8908478617668152
  - Access Control Level: SYS_OR_SIG and the following code:
this.mCleanupManager.registerRecoveryAgent(v11, v12);
int v34 = UserHandle.getCallingUserId();
int v35 = Binder.getCallingUid();
long v47 = this.mDatabase.setActiveRootOfTrust(v34, v35, v36);

