The method getRecoverySecretTypes has the following code snippet:

This is path 1 for the API with depth 2:
public [I getRecoverySecretTypes(){
	int v11 = UserHandle.getCallingUserId();
	int v12 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v11, v12);
	int v14 = UserHandle.getCallingUserId();
	int v15 = Binder.getCallingUid();
	SQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v18 = new String(4);
	String v19 = new String(2);
	String v20 = Integer.toString(v14);
	String v21 = Integer.toString(v15);
	Cursor v22 = v17.query("recovery_service_metadata", v18, "user_id = ? AND uid = ?", v19, 0, 0, 0);
	int v23 = v22.getCount();
	boolean v24 = v22.moveToFirst();
	int v25 = v22.getColumnIndexOrThrow("secret_types");
	boolean v26 = v22.isNull(v25);
	String v27 = v22.getString(v25);
	boolean v28 = TextUtils.isEmpty(v27);
	String v29 = v27.split(",");
	[I v30 = new [I(v29.length);
	v22.close();
	[I v16 = v30;
	[I v1 = v16;
	return v1;
}
This is path 2 for the API with depth 2:
public [I getRecoverySecretTypes(){
	int v11 = UserHandle.getCallingUserId();
	int v12 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v11, v12);
	int v14 = UserHandle.getCallingUserId();
	int v15 = Binder.getCallingUid();
	SQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v18 = new String(4);
	String v19 = new String(2);
	String v20 = Integer.toString(v14);
	String v21 = Integer.toString(v15);
	Cursor v22 = v17.query("recovery_service_metadata", v18, "user_id = ? AND uid = ?", v19, 0, 0, 0);
	int v23 = v22.getCount();
	Object v24 = new Object(3);
	Integer v25 = Integer.valueOf(v23);
	Integer v26 = Integer.valueOf(v14);
	Integer v27 = Integer.valueOf(v15);
	String v28 = String.format(Locale.US, "%d deviceId entries found for userId=%d uid=%d. Should only ever be 0 or 1.", v24);
	int v29 = Log.wtf("RecoverableKeyStoreDb", v28);
	[I v30 = new [I(0);
	v22.close();
	[I v16 = v30;
	[I v1 = v16;
	return v1;
}

and the following sink code:
['int v14 = UserHandle.getCallingUserId();\nint v15 = Binder.getCallingUid();\nSQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase();\nCursor v22 = v17.query("recovery_service_metadata", v18, "user_id = ? AND uid = ?", v19, 0, 0, 0);\nString v27 = v22.getString(v25);\nString[] v29 = v27.split(\',\');\n[I v30 = new [I(v29.length);\nreturn v1;', 'int v14 = UserHandle.getCallingUserId();\nint v15 = Binder.getCallingUid();\nSQLiteDatabase v17 = this.mKeyStoreDbHelper.getReadableDatabase();\n[I v30 = new [I(0);\nreturn v1;']

The method getRecoverySecretTypes has the following similar APIs:

- API Name: getRecoveryStatus()Ljava/util/Map; with Similarity Score: 0.8342586755752563
  - Access Control Level: SYS_OR_SIG and the following code:
int v11 = UserHandle.getCallingUserId();
int v12 = Binder.getCallingUid();
this.mCleanupManager.registerRecoveryAgent(v11, v12);
SQLiteDatabase v16 = this.mKeyStoreDbHelper.getReadableDatabase();
Cursor v20 = v16.query("keys", new String[] {"key_id"}, "uid = ?", new String[] {String.valueOf(v14)}, 0, 0, 0);
HashMap v21 = new HashMap();
v21.put("recovery_status", v20.getString(0));
Map v1 = v21;
return v1;

- API Name: getKey(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.8034688830375671
  - Access Control Level: SYS_OR_SIG and the following code:
int v16 = UserHandle.getCallingUserId();
int v15 = Binder.getCallingUid();
String v18 = this.mApplicationKeyStorage.getGrantAlias(v16, v15, p1);
String v17 = v18;
String v1 = v17;
return v1;

