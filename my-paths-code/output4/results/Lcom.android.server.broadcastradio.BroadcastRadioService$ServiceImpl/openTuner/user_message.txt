This is path 1 for the API with depth 2:
public ITuner openTuner(int p1, RadioManager$BandConfig p2, boolean p3, ITunerCallback p4){
	Object v10 = this.mLock;
	BroadcastRadioService v11 = this.mHal2;
	Integer v13 = Integer.valueOf(p1);
	boolean v14 = this.mModules.containsKey(v13);
	boolean v12 = v14;
	BroadcastRadioService v15 = this.mHal2;
	Object v18 = Objects.requireNonNull(p4);
	Integer v19 = Integer.valueOf(p1);
	Object v20 = this.mModules.get(v19);
	Object v22 = new Object(0);
	this.mEventLogger.logRadioEvent("Open TunerSession", v22);
	Mutable v24 = new Mutable();
	RadioModule$$ExternalSyntheticLambda5 v26 = new RadioModule$$ExternalSyntheticLambda5(RadioModule,v24);
	this.mService.openSession(this.mHalTunerCallback, v26);
	Object v29 = Objects.requireNonNull(Mutable.value);
	this.mHalTunerSession = Mutable.value;
	TunerSession v30 = new TunerSession(RadioModule,this.mHalTunerSession,p4,this.mLock);
	boolean v32 = this.mAidlTunerSessions.add(v30);
	boolean v33 = this.mAntennaConnected.booleanValue();
	p4.onAntennaState(v33);
	p4.onCurrentProgramInfoChanged(this.mCurrentProgramInfo);
	TunerSession v21 = v30;
	TunerSession.checkNotClosedLocked();
	Object v38 = Objects.requireNonNull(p2);
	this.mDummyConfig = p2;
	TunerSession$$ExternalSyntheticLambda5 v40 = new TunerSession$$ExternalSyntheticLambda5(p2);
	this.mModule.fanoutAidlCallback(v40);
	ITuner v16 = v21;
	return v16;
}

This is path 2 for the API with depth 2:
public ITuner openTuner(int p1, RadioManager$BandConfig p2, boolean p3, ITunerCallback p4){
	Object v10 = this.mLock;
	BroadcastRadioService v11 = this.mHal2;
	Integer v13 = Integer.valueOf(p1);
	boolean v14 = this.mModules.containsKey(v13);
	boolean v12 = v14;
	BroadcastRadioService v15 = this.mHal2;
	Object v18 = Objects.requireNonNull(p4);
	Integer v19 = Integer.valueOf(p1);
	Object v20 = this.mModules.get(v19);
	Object v22 = new Object(0);
	this.mEventLogger.logRadioEvent("Open TunerSession", v22);
	Mutable v24 = new Mutable();
	RadioModule$$ExternalSyntheticLambda5 v26 = new RadioModule$$ExternalSyntheticLambda5(RadioModule,v24);
	this.mService.openSession(this.mHalTunerCallback, v26);
	Object v29 = Objects.requireNonNull(Mutable.value);
	this.mHalTunerSession = Mutable.value;
	TunerSession v30 = new TunerSession(RadioModule,this.mHalTunerSession,p4,this.mLock);
	boolean v32 = this.mAidlTunerSessions.add(v30);
	p4.onCurrentProgramInfoChanged(this.mCurrentProgramInfo);
	TunerSession v21 = v30;
	TunerSession.checkNotClosedLocked();
	Object v36 = Objects.requireNonNull(p2);
	this.mDummyConfig = p2;
	TunerSession$$ExternalSyntheticLambda5 v38 = new TunerSession$$ExternalSyntheticLambda5(p2);
	this.mModule.fanoutAidlCallback(v38);
	ITuner v16 = v21;
	return v16;
}

This is path 3 for the API with depth 2:
public ITuner openTuner(int p1, RadioManager$BandConfig p2, boolean p3, ITunerCallback p4){
	Object v10 = this.mLock;
	BroadcastRadioService v11 = this.mHal2;
	Integer v13 = Integer.valueOf(p1);
	boolean v14 = this.mModules.containsKey(v13);
	boolean v12 = v14;
	BroadcastRadioService v15 = this.mHal2;
	Object v18 = Objects.requireNonNull(p4);
	Integer v19 = Integer.valueOf(p1);
	Object v20 = this.mModules.get(v19);
	Object v22 = new Object(0);
	this.mEventLogger.logRadioEvent("Open TunerSession", v22);
	TunerSession v24 = new TunerSession(RadioModule,this.mHalTunerSession,p4,this.mLock);
	boolean v26 = this.mAidlTunerSessions.add(v24);
	boolean v27 = this.mAntennaConnected.booleanValue();
	p4.onAntennaState(v27);
	p4.onCurrentProgramInfoChanged(this.mCurrentProgramInfo);
	TunerSession v21 = v24;
	TunerSession.checkNotClosedLocked();
	Object v32 = Objects.requireNonNull(p2);
	this.mDummyConfig = p2;
	TunerSession$$ExternalSyntheticLambda5 v34 = new TunerSession$$ExternalSyntheticLambda5(p2);
	this.mModule.fanoutAidlCallback(v34);
	ITuner v16 = v21;
	return v16;
}
