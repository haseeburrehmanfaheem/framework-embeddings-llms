The method getRecentTasks has the following code snippet:

This is path 1 for the API with depth 2:
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	IPackageManager v11 = ActivityThread.getPackageManager();
	IPackageManager v10 = v11;
	boolean v12 = v10.isUidPrivileged(v1);
	String v13 = String.valueOf("getRecentTasks");
	Object v14 = new Object(2);
	Long v15 = Long.valueOf(v1);
	ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
	v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
	String v19 = String.valueOf("getRecentTasks");
	Object v20 = new Object(2);
	Long v21 = Long.valueOf(v1);
	ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
	v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
	boolean v6 = phiInstruction;
	ParceledListSlice v29 = new ParceledListSlice(v30);
	boolean v31 = RecentTasks.isUserRunning(p4, 4);
	RecentTasks.loadUserRecentsLocked(p4);
	Set v33 = RecentTasks.getProfileIds(p4);
	Integer v34 = Integer.valueOf(p4);
	boolean v35 = v33.add(v34);
	ArrayList v36 = new ArrayList();
	int v38 = this.mTasks.size();
	ArrayList v30 = v36;
	ParceledListSlice v28 = v29;
	return v28;
}
This is path 2 for the API with depth 2:
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	IPackageManager v11 = ActivityThread.getPackageManager();
	IPackageManager v10 = v11;
	boolean v12 = v10.isUidPrivileged(v1);
	String v13 = String.valueOf("getRecentTasks");
	Object v14 = new Object(2);
	Long v15 = Long.valueOf(v1);
	ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
	v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
	String v19 = String.valueOf("getRecentTasks");
	Object v20 = new Object(2);
	Long v21 = Long.valueOf(v1);
	ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
	v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
	boolean v6 = phiInstruction;
	WindowManagerThreadPriorityBooster.boost();
	ParceledListSlice v30 = new ParceledListSlice(v31);
	boolean v32 = RecentTasks.isUserRunning(p4, 4);
	RecentTasks.loadUserRecentsLocked(p4);
	Set v34 = RecentTasks.getProfileIds(p4);
	Integer v35 = Integer.valueOf(p4);
	boolean v36 = v34.add(v35);
	ArrayList v37 = new ArrayList();
	int v39 = this.mTasks.size();
	ArrayList v31 = v37;
	ParceledListSlice v29 = v30;
	return v29;
}
This is path 3 for the API with depth 2:
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	IPackageManager v11 = ActivityThread.getPackageManager();
	IPackageManager v10 = v11;
	boolean v12 = v10.isUidPrivileged(v1);
	String v13 = String.valueOf("getRecentTasks");
	Object v14 = new Object(2);
	Long v15 = Long.valueOf(v1);
	ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
	v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
	String v19 = String.valueOf("getRecentTasks");
	Object v20 = new Object(2);
	Long v21 = Long.valueOf(v1);
	ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
	v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
	boolean v6 = phiInstruction;
	ParceledListSlice v29 = new ParceledListSlice(v30);
	boolean v31 = RecentTasks.isUserRunning(p4, 4);
	RecentTasks.loadUserRecentsLocked(p4);
	Set v33 = RecentTasks.getProfileIds(p4);
	Integer v34 = Integer.valueOf(p4);
	boolean v35 = v33.add(v34);
	ArrayList v36 = new ArrayList();
	int v38 = this.mTasks.size();
	ArrayList v30 = v36;
	ParceledListSlice v28 = v29;
	WindowManagerThreadPriorityBooster.reset();
	return v28;
}

and the following sink code:
['int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, "getRecentTasks", 0);\nboolean v31 = RecentTasks.isUserRunning(p4, 4);\nRecentTasks.loadUserRecentsLocked(p4);\nSet v33 = RecentTasks.getProfileIds(p4);\nInteger v34 = Integer.valueOf(p4);\nboolean v35 = v33.add(v34);\nArrayList v36 = new ArrayList();\nint v38 = this.mTasks.size();\nArrayList v30 = v36;\nParceledListSlice v29 = new ParceledListSlice(v30);\nreturn v28;']

The method getRecentTasks has the following similar APIs:

- API Name: startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I with Similarity Score: 0.8113180994987488
  - Access Control Level: SYS_OR_SIG and the following code:
int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p8, 0, 0, "startActivities", 0);
ActivityStartController v11 = this.mActivityStartController;
int v18 = v11.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v12, v9, "startActivities", 0, 0);
return v18;

- API Name: startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I with Similarity Score: 0.8050513863563538
  - Access Control Level: SYS_OR_SIG and the following code:
int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, "startActivityFromGameSession", 0);
ActivityStarter v23 = v22.setUserId(v9);

