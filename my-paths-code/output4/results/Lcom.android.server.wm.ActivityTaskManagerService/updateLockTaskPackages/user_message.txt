This is path 1 for the API with depth 2:
public void updateLockTaskPackages(int p1, String p2){
	String v6 = Arrays.toString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	this.mLockTaskPackages.put(p1, p2);
	int v27 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v28 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v28);
	int v32 = RootWindowContainer.getChildCount();
	WindowContainer v33 = RootWindowContainer.getChildAt(phiInstruction);
	ActivityRecord v34 = v33.topRunningActivity();
	ActivityRecord v31 = v34;
	Task v35 = this.task;
	boolean v36 = this.mLockTaskModeTasks.isEmpty();
	String v37 = String.valueOf(phiInstruction);
	Object v38 = new Object(1);
	ProtoLogImpl v40 = ProtoLogImpl.getSingleInstance();
	v40.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v38);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	boolean v45 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v44 = v45;
	return;
}

This is path 2 for the API with depth 2:
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerThreadPriorityBooster.boost();
	String v7 = Arrays.toString(p2);
	String v8 = String.valueOf(v7);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p1);
	ProtoLogImpl v13 = new ProtoLogImpl(v14,1048576,v16);
	File v14 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v16 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v13;
	ProtoLogImpl v12 = this.sServiceInstance;
	boolean v20 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v22 = p1.isLogToLogcat();
	String v23 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v23, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v25 = p0.getLockTaskController();
	this.mLockTaskPackages.put(p1, p2);
	int v28 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v29 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v29);
	int v33 = RootWindowContainer.getChildCount();
	WindowContainer v34 = RootWindowContainer.getChildAt(phiInstruction);
	ActivityRecord v35 = v34.topRunningActivity();
	ActivityRecord v32 = v35;
	Task v36 = this.task;
	boolean v37 = this.mLockTaskModeTasks.isEmpty();
	String v38 = String.valueOf(phiInstruction);
	Object v39 = new Object(1);
	ProtoLogImpl v41 = ProtoLogImpl.getSingleInstance();
	v41.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v39);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	boolean v46 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v45 = v46;
	return;
}

This is path 3 for the API with depth 2:
public void updateLockTaskPackages(int p1, String p2){
	String v6 = Arrays.toString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	this.mLockTaskPackages.put(p1, p2);
	int v27 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v28 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v28);
	int v32 = RootWindowContainer.getChildCount();
	WindowContainer v33 = RootWindowContainer.getChildAt(phiInstruction);
	ActivityRecord v34 = v33.topRunningActivity();
	ActivityRecord v31 = v34;
	Task v35 = this.task;
	boolean v36 = this.mLockTaskModeTasks.isEmpty();
	String v37 = String.valueOf(phiInstruction);
	Object v38 = new Object(1);
	ProtoLogImpl v40 = ProtoLogImpl.getSingleInstance();
	v40.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v38);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	boolean v45 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v44 = v45;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
