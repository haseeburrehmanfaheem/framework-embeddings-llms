This is path 1 for the API with depth 2:
public void setPersistentVrThread(int p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
	int v8 = Binder.getCallingPid();
	WindowProcessController v9 = this.mProcessMap.getProcess(v8);
	boolean v11 = phiInstruction;
	boolean v13 = Process.isThreadInProcess(p2, p1);
	boolean v15 = VrController.hasPersistentVrFlagSet();
	int v14 = this.mVrRenderThreadTid;
	return;
}

This is path 2 for the API with depth 2:
public void setPersistentVrThread(int p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
	WindowManagerThreadPriorityBooster.boost();
	int v9 = Binder.getCallingPid();
	WindowProcessController v10 = this.mProcessMap.getProcess(v9);
	boolean v12 = phiInstruction;
	boolean v14 = Process.isThreadInProcess(p2, p1);
	boolean v16 = VrController.hasPersistentVrFlagSet();
	int v15 = this.mVrRenderThreadTid;
	return;
}

This is path 3 for the API with depth 2:
public void setPersistentVrThread(int p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
	int v8 = Binder.getCallingPid();
	WindowProcessController v9 = this.mProcessMap.getProcess(v8);
	boolean v11 = phiInstruction;
	boolean v13 = Process.isThreadInProcess(p2, p1);
	boolean v15 = VrController.hasPersistentVrFlagSet();
	int v14 = this.mVrRenderThreadTid;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
