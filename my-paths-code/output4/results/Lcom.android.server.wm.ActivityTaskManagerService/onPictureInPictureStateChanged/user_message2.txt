The method onPictureInPictureStateChanged has the following code snippet:

This is path 1 for the API with depth 2:
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v7 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v6 = v7;
	TaskDisplayArea v5 = v6;
	Task v8 = v5.getRootPinnedTask();
	WindowContainer$$ExternalSyntheticLambda2 v10 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v13 = WindowContainer.getActivity(v10, 1, 0);
	ActivityRecord v12 = v13;
	ActivityRecord v9 = v12;
	WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v18 = WindowContainer.getActivity(v15, 1, 0);
	ActivityRecord v17 = v18;
	ActivityRecord v14 = v17;
	int v21 = Configuration.windowConfiguration.getWindowingMode();
	boolean v20 = phiInstruction;
	IApplicationThread v22 = this.mThread;
	ObjectPoolItem v24 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v25 = new ClientTransaction();
	this.mClient = v22;
	this.mActivityToken = WindowToken.token;
	ClientTransaction v23 = phiInstruction;
	ObjectPoolItem v28 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v29 = new PipStateTransactionItem();
	this.mPipState = p2;
	PipStateTransactionItem v27 = phiInstruction;
	ArrayList v32 = new ArrayList();
	this.mActivityCallbacks = v32;
	boolean v34 = this.mActivityCallbacks.add(v27);
	ComponentName v38 = ActivityRecord.intent.getComponent();
	return;
}
This is path 2 for the API with depth 2:
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v7 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v6 = v7;
	TaskDisplayArea v5 = v6;
	Task v8 = v5.getRootPinnedTask();
	WindowContainer$$ExternalSyntheticLambda2 v10 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v13 = WindowContainer.getActivity(v10, 1, 0);
	ActivityRecord v12 = v13;
	ActivityRecord v9 = v12;
	WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v18 = WindowContainer.getActivity(v15, 1, 0);
	ActivityRecord v17 = v18;
	ActivityRecord v14 = v17;
	int v21 = Configuration.windowConfiguration.getWindowingMode();
	boolean v20 = phiInstruction;
	IApplicationThread v22 = this.mThread;
	ObjectPoolItem v24 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v25 = new ClientTransaction();
	this.mClient = v22;
	this.mActivityToken = WindowToken.token;
	ClientTransaction v23 = phiInstruction;
	ObjectPoolItem v28 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v29 = new PipStateTransactionItem();
	this.mPipState = p2;
	PipStateTransactionItem v27 = phiInstruction;
	ArrayList v32 = new ArrayList();
	this.mActivityCallbacks = v32;
	boolean v34 = this.mActivityCallbacks.add(v27);
	ComponentName v38 = ActivityRecord.intent.getComponent();
	return;
}
This is path 3 for the API with depth 2:
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v5 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v4 = v5;
	TaskDisplayArea v3 = v4;
	Task v6 = v3.getRootPinnedTask();
	WindowContainer$$ExternalSyntheticLambda2 v8 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v11 = WindowContainer.getActivity(v8, 1, 0);
	ActivityRecord v10 = v11;
	ActivityRecord v7 = v10;
	WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v16 = WindowContainer.getActivity(v13, 1, 0);
	ActivityRecord v15 = v16;
	ActivityRecord v12 = v15;
	int v19 = Configuration.windowConfiguration.getWindowingMode();
	boolean v18 = phiInstruction;
	IApplicationThread v20 = this.mThread;
	ObjectPoolItem v22 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v23 = new ClientTransaction();
	this.mClient = v20;
	this.mActivityToken = WindowToken.token;
	ClientTransaction v21 = phiInstruction;
	ObjectPoolItem v26 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v27 = new PipStateTransactionItem();
	this.mPipState = p2;
	PipStateTransactionItem v25 = phiInstruction;
	ArrayList v30 = new ArrayList();
	this.mActivityCallbacks = v30;
	boolean v32 = this.mActivityCallbacks.add(v25);
	ComponentName v36 = ActivityRecord.intent.getComponent();
	return;
}

and the following sink code:
['TaskDisplayArea v5 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();\nTask v6 = v3.getRootPinnedTask();\nActivityRecord v11 = WindowContainer.getActivity(v8, 1, 0);', 'ObjectPoolItem v22 = ObjectPool.obtain(ClientTransactio.class);\nClientTransaction v23 = new ClientTransaction();\nthis.mClient = v20;', 'ObjectPoolItem v26 = ObjectPool.obtain(PipStateTransactionIte.class);\nPipStateTransactionItem v27 = new PipStateTransactionItem();\nthis.mPipState = p2;']

The method onPictureInPictureStateChanged has the following similar APIs:

- API Name: moveRootTaskToDisplay(II)V with Similarity Score: 0.9157419800758362
  - Access Control Level: SYS_OR_SIG and the following code:
TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
Task v33 = RootWindowContainer.getRootTask(p1);
TaskDisplayArea v34 = v33.getDisplayArea();
v33.reparent(v30, p3);

- API Name: startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I with Similarity Score: 0.8763542175292969
  - Access Control Level: SYS_OR_SIG and the following code:
TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
Task v22 = v21.getRootTask(0, phiInstruction);
ActivityRecord v23 = v22.topRunningActivity();
boolean v24 = v23.attachedToProcess();

