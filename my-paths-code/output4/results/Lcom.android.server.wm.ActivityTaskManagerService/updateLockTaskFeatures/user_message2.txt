The method updateLockTaskFeatures has the following code snippet:

This is path 1 for the API with depth 2:
public void updateLockTaskFeatures(int p1, int p2){
	String v6 = Integer.toHexString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	int v27 = this.mLockTaskFeatures.get(p1, 0);
	int v26 = v27;
	this.mLockTaskFeatures.put(p1, p2);
	boolean v29 = this.mLockTaskModeTasks.isEmpty();
	Object v30 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v33 = this.mHandler.post(v31);
	return;
}
This is path 2 for the API with depth 2:
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerThreadPriorityBooster.boost();
	String v7 = Integer.toHexString(p2);
	String v8 = String.valueOf(v7);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p1);
	ProtoLogImpl v13 = new ProtoLogImpl(v14,1048576,v16);
	File v14 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v16 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v13;
	ProtoLogImpl v12 = this.sServiceInstance;
	boolean v20 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v22 = p1.isLogToLogcat();
	String v23 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v23, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v25 = p0.getLockTaskController();
	int v28 = this.mLockTaskFeatures.get(p1, 0);
	int v27 = v28;
	this.mLockTaskFeatures.put(p1, p2);
	boolean v30 = this.mLockTaskModeTasks.isEmpty();
	Object v31 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v32 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v34 = this.mHandler.post(v32);
	return;
}
This is path 3 for the API with depth 2:
public void updateLockTaskFeatures(int p1, int p2){
	String v6 = Integer.toHexString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	int v27 = this.mLockTaskFeatures.get(p1, 0);
	int v26 = v27;
	this.mLockTaskFeatures.put(p1, p2);
	boolean v29 = this.mLockTaskModeTasks.isEmpty();
	Object v30 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v33 = this.mHandler.post(v31);
	WindowManagerThreadPriorityBooster.reset();
	return;
}

and the following sink code:
['int v27 = this.mLockTaskFeatures.get(p1, 0);\nthis.mLockTaskFeatures.put(p1, p2);', 'boolean v19 = p1.isLogToProto();\nBaseProtoLogImpl.logToProto(p2, p3, p5);', 'boolean v21 = p1.isLogToLogcat();\nString v22 = p1.getTag();\nBaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);', 'LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);\nboolean v33 = this.mHandler.post(v31);']

The method updateLockTaskFeatures has the following similar APIs:

- API Name: moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V with Similarity Score: 0.8678896427154541
  - Access Control Level: SYS_OR_SIG and the following code:
ProtoLogImpl v6 = new ProtoLogImpl(v7,1048576,v9);
BaseProtoLogImpl.logToProto(p2, p3, p5);
BaseProtoLogImpl.logToLogcat(v16, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);

- API Name: setLockScreenShown(ZZ)V with Similarity Score: 0.8254696130752563
  - Access Control Level: SYS_OR_SIG and the following code:
ActivityTaskManagerService$$ExternalSyntheticLambda12 v22 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
boolean v24 = this.mH.post(v22);

