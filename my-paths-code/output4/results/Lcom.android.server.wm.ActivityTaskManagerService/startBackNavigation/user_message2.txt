The method startBackNavigation has the following code snippet:

This is path 1 for the API with depth 2:
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v3 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v4 = new BackNavigationInfo$Builder();
	this.sThreadPriorityBooster.boost();
	Object v9 = this.sLocalServiceObjects.get(WindowManagerInterna.class);
	Object v8 = v9;
	IBinder v10 = v8.getFocusedWindowToken();
	DisplayContent v12 = this.mRoot.getTopFocusedDisplayContent();
	WindowState v11 = DisplayContent.mCurrentFocus;
	Object v14 = this.mWindowsByFocusToken.get(v10);
	EmbeddedWindowController$EmbeddedWindow v13 = v14;
	ProtoLogImpl v16 = ProtoLogImpl.getSingleInstance();
	v16.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, "Focused window found using getFocusedWindowToken", 0);
	RecentsAnimationController v18 = this.mRecentsAnimationController;
	boolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord);
	int v22 = this.mPlayingTransitions.size();
	Object v23 = this.mPlayingTransitions.get(phiInstruction);
	boolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);
	boolean v20 = 1;
	boolean v26 = RecentsAnimationController.isTargetApp(WindowState.mActivityRecord);
	boolean v27 = RecentsAnimationController.isAnimatingApp(WindowState.mActivityRecord);
	boolean v25 = phiInstruction;
	ProtoLogImpl v29 = ProtoLogImpl.getSingleInstance();
	v29.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, "Current focused window being animated by recents. Overriding back callback to recents controller callback.", 0);
	this.sThreadPriorityBooster.reset();
	BackNavigationInfo v2 = 0;
	return v2;
}
This is path 2 for the API with depth 2:
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v3 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v4 = new BackNavigationInfo$Builder();
	this.sThreadPriorityBooster.boost();
	Object v9 = this.sLocalServiceObjects.get(WindowManagerInterna.class);
	Object v8 = v9;
	IBinder v10 = v8.getFocusedWindowToken();
	DisplayContent v12 = this.mRoot.getTopFocusedDisplayContent();
	WindowState v11 = DisplayContent.mCurrentFocus;
	Object v14 = this.mWindowsByFocusToken.get(v10);
	EmbeddedWindowController$EmbeddedWindow v13 = v14;
	ProtoLogImpl v16 = ProtoLogImpl.getSingleInstance();
	v16.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, "Focused window found using getFocusedWindowToken", 0);
	RecentsAnimationController v18 = this.mRecentsAnimationController;
	boolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord);
	int v22 = this.mPlayingTransitions.size();
	Object v23 = this.mPlayingTransitions.get(phiInstruction);
	boolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);
	boolean v20 = 1;
	boolean v26 = RecentsAnimationController.isTargetApp(WindowState.mActivityRecord);
	boolean v27 = RecentsAnimationController.isAnimatingApp(WindowState.mActivityRecord);
	boolean v25 = phiInstruction;
	ProtoLogImpl v29 = ProtoLogImpl.getSingleInstance();
	v29.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, "Current focused window being animated by recents. Overriding back callback to recents controller callback.", 0);
	this.sThreadPriorityBooster.reset();
	BackNavigationInfo v2 = 0;
	return v2;
}

and the following sink code:
['this.mFocusObserver = p2;\nBackNavigationInfo$Builder v4 = new BackNavigationInfo$Builder();\nIBinder v10 = v8.getFocusedWindowToken();\nObject v14 = this.mWindowsByFocusToken.get(v10);\nEmbeddedWindowController$EmbeddedWindow v13 = v14;', 'RecentsAnimationController v18 = this.mRecentsAnimationController;\nboolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();\nboolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord);\nboolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);']

The method startBackNavigation has the following similar APIs:

- API Name: detachNavigationBarFromApp(Landroid/os/IBinder;)V with Similarity Score: 0.7415562272071838
  - Access Control Level: SYS_OR_SIG and the following code:
TransitionController v7 = this.mTransitionController;
boolean v10 = this.mPlayingTransitions.contains(v9);
this.mNavBarAttachedToApp = 0;
this.mRecentsDisplayId = 0;
TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
DisplayContent v14 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
DisplayPolicy v15 = v14.getDisplayPolicy();
WindowState v16 = v15.getNavigationBar();
v16.setSurfaceTranslationY(0);

- API Name: captureFrame(Ljava/lang/String;Landroid/view/Surface;Landroid/media/tv/TvStreamConfig;I)Z with Similarity Score: 0.7250338196754456
  - Access Control Level: SYS_OR_SIG and the following code:
TvInputHardwareManager$2 v46 = new TvInputHardwareManager$2(TvInputHardwareManager,v40,p3);
this.mOnFirstFrameCaptured = v46;

