This is path 1 for the API with depth 2:
public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction);
	Task v10 = v9.getFocusedRootTask();
	Task v7 = v10;
	Task v6 = v7;
	WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v15 = WindowContainer.getActivity(v13, 1);
	ActivityRecord v12 = v15;
	int v17 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
	int v16 = v17;
	Binder.restoreCallingIdentity(v5);
	return;
}

This is path 2 for the API with depth 2:
public void unhandledBack(){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	int v9 = RootWindowContainer.getChildCount();
	WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction);
	Task v11 = v10.getFocusedRootTask();
	Task v8 = v11;
	Task v7 = v8;
	WindowContainer$$ExternalSyntheticLambda2 v14 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v16 = WindowContainer.getActivity(v14, 1);
	ActivityRecord v13 = v16;
	int v18 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
	int v17 = v18;
	Binder.restoreCallingIdentity(v6);
	return;
}

This is path 3 for the API with depth 2:
public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction);
	Task v10 = v9.getFocusedRootTask();
	Task v7 = v10;
	Task v6 = v7;
	WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v15 = WindowContainer.getActivity(v13, 1);
	ActivityRecord v12 = v15;
	int v17 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
	int v16 = v17;
	Binder.restoreCallingIdentity(v5);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
