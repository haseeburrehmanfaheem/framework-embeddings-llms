This is path 1 for the API with depth 2:
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = phiInstruction;
	ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5);
	ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0);
	ActivityInfo v6 = v8;
	ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v9;
	boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4);
	DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v17 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v18 = new ArrayList();
	boolean v20 = v18.add(p4);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v21 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v18);
	0.forAllActivities(v21);
	int v24 = v16.getWindowingMode();
	boolean v25 = DisplayContent.mDwpcHelper.canContainActivities(v18, v24);
	boolean v14 = 0;
	boolean v13 = v14;
	Binder.restoreCallingIdentity(v3);
	return v13;
}

This is path 2 for the API with depth 2:
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = phiInstruction;
	ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5);
	ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0);
	ActivityInfo v6 = v8;
	ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v9;
	WindowManagerThreadPriorityBooster.boost();
	boolean v16 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4);
	DisplayContent v17 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v18 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v19 = new ArrayList();
	boolean v21 = v19.add(p4);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v22 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v19);
	0.forAllActivities(v22);
	int v25 = v17.getWindowingMode();
	boolean v26 = DisplayContent.mDwpcHelper.canContainActivities(v19, v25);
	boolean v15 = 0;
	boolean v14 = v15;
	Binder.restoreCallingIdentity(v3);
	return v14;
}

This is path 3 for the API with depth 2:
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = phiInstruction;
	ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5);
	ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0);
	ActivityInfo v6 = v8;
	ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v9;
	boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4);
	DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v17 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v18 = new ArrayList();
	boolean v20 = v18.add(p4);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v21 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v18);
	0.forAllActivities(v21);
	int v24 = v16.getWindowingMode();
	boolean v25 = DisplayContent.mDwpcHelper.canContainActivities(v18, v24);
	boolean v14 = 1;
	boolean v13 = v14;
	Binder.restoreCallingIdentity(v3);
	return v13;
}
