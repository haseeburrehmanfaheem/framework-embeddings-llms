The method isAssistDataAllowedOnCurrentActivity has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isAssistDataAllowedOnCurrentActivity(){
	int v6 = RootWindowContainer.getChildCount();
	WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction);
	Task v8 = v7.getFocusedRootTask();
	Task v5 = v8;
	Task v4 = v5;
	boolean v9 = v4.isActivityTypeAssistant();
	ActivityRecord v12 = TaskFragment.getTopNonFinishingActivity(1, 1);
	ActivityRecord v11 = v12;
	ActivityRecord v10 = v11;
	Object v18 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
	Object v17 = v18;
	DevicePolicyCache$EmptyDevicePolicyCache v19 = this.INSTANCE;
	DevicePolicyCache v16 = phiInstruction;
	boolean v20 = v16.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v20;
}
This is path 2 for the API with depth 2:
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerThreadPriorityBooster.boost();
	int v7 = RootWindowContainer.getChildCount();
	WindowContainer v8 = RootWindowContainer.getChildAt(phiInstruction);
	Task v9 = v8.getFocusedRootTask();
	Task v6 = v9;
	Task v5 = v6;
	boolean v10 = v5.isActivityTypeAssistant();
	ActivityRecord v13 = TaskFragment.getTopNonFinishingActivity(1, 1);
	ActivityRecord v12 = v13;
	ActivityRecord v11 = v12;
	Object v19 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
	Object v18 = v19;
	DevicePolicyCache$EmptyDevicePolicyCache v20 = this.INSTANCE;
	DevicePolicyCache v17 = phiInstruction;
	boolean v21 = v17.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v21;
}
This is path 3 for the API with depth 2:
public boolean isAssistDataAllowedOnCurrentActivity(){
	int v6 = RootWindowContainer.getChildCount();
	WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction);
	Task v8 = v7.getFocusedRootTask();
	Task v5 = v8;
	Task v4 = v5;
	boolean v9 = v4.isActivityTypeAssistant();
	ActivityRecord v12 = TaskFragment.getTopNonFinishingActivity(1, 1);
	ActivityRecord v11 = v12;
	ActivityRecord v10 = v11;
	WindowManagerThreadPriorityBooster.reset();
	Object v19 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
	Object v18 = v19;
	DevicePolicyCache$EmptyDevicePolicyCache v20 = this.INSTANCE;
	DevicePolicyCache v17 = phiInstruction;
	boolean v21 = v17.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v21;
}

and the following sink code:
['int v6 = RootWindowContainer.getChildCount();\nWindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction);\nTask v8 = v7.getFocusedRootTask();\nboolean v9 = v4.isActivityTypeAssistant();', 'ActivityRecord v12 = TaskFragment.getTopNonFinishingActivity(1, 1);\nObject v18 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);\nDevicePolicyCache$EmptyDevicePolicyCache v19 = this.INSTANCE;\nboolean v20 = v16.isScreenCaptureAllowed(ActivityRecord.mUserId);', 'WindowManagerThreadPriorityBooster.boost();']

The method isAssistDataAllowedOnCurrentActivity has the following similar APIs:

- API Name: isTopActivityImmersive()Z with Similarity Score: 0.9364264011383057
  - Access Control Level: SYS_OR_SIG and the following code:
int v9 = RootWindowContainer.getChildCount();
WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction);
Task v11 = v10.getFocusedRootTask();
ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);

- API Name: unhandledBack()V with Similarity Score: 0.8979328870773315
  - Access Control Level: SYS_OR_SIG and the following code:
int v8 = RootWindowContainer.getChildCount();
WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction);
Task v10 = v9.getFocusedRootTask();
WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
ActivityRecord v15 = WindowContainer.getActivity(v13, 1);
int v17 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);

