The method setFocusedRootTask has the following code snippet:

This is path 1 for the API with depth 2:
public void setFocusedRootTask(int p1){
	Object v5 = new Object(1);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl v9 = new ProtoLogImpl(v10,1048576,v12);
	File v10 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v12 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v9;
	ProtoLogImpl v8 = this.sServiceInstance;
	boolean v16 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v18 = p1.isLogToLogcat();
	String v19 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v19, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	long v21 = Binder.clearCallingIdentity();
	int v27 = this.mChildren.size();
	int v26 = v27;
	Object v29 = this.mChildren.get(phiInstruction);
	WindowContainer v28 = v29;
	DisplayContent$$ExternalSyntheticLambda6 v31 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v33 = DisplayContent.getRootTask(v31);
	Task v30 = v33;
	Task v25 = v30;
	ActivityRecord v36 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v35 = v36;
	ActivityRecord v34 = v35;
	boolean v39 = ActivityRecord.isFocusable();
	boolean v40 = ActivityRecord.canReceiveKeys();
	boolean v41 = ActivityRecord.isAlwaysFocusable();
	boolean v38 = phiInstruction;
	Task v43 = this.task.getRootTask();
	Task v42 = phiInstruction;
	ActivityRecord$$ExternalSyntheticLambda4 v44 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v46 = WindowContainer.mDisplayContent.getTask(v44, 1);
	String v47 = String.valueOf(ActivityRecord);
	Object v48 = new Object(1);
	ProtoLogImpl v50 = ProtoLogImpl.getSingleInstance();
	v50.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v48);
	DisplayContent v53 = p0.getDisplayContent();
	TaskDisplayArea v54 = p0.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v54);
	String v56 = String.valueOf(p0);
	int v57 = DisplayContent.getDisplayId();
	String v58 = Debug.getCallers(4);
	String v59 = String.valueOf(v58);
	Object v60 = new Object(3);
	Long v61 = Long.valueOf(v57);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v60);
	Task v63 = this.mFocusedApp.getTask();
	Task v64 = p0.getTask();
	this.mFocusedApp = p0;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v67 = DisplayContent.getInputMonitor();
	v67.setFocusedAppLw(p0);
	DisplayContent.updateTouchExcludeRegion();
	boolean v52 = 1;
	Trace.traceBegin(32, "wmUpdateFocus");
	boolean v72 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v70 = v72;
	boolean v74 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v37 = (v74 ^ 1);
	boolean v77 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0, 0);
	boolean v76 = v77;
	boolean v75 = v76;
	Binder.restoreCallingIdentity(v21);
	return;
}
This is path 2 for the API with depth 2:
public void setFocusedRootTask(int p1){
	Object v5 = new Object(1);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl v9 = new ProtoLogImpl(v10,1048576,v12);
	File v10 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v12 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v9;
	ProtoLogImpl v8 = this.sServiceInstance;
	boolean v16 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v18 = p1.isLogToLogcat();
	String v19 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v19, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	long v21 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	int v28 = this.mChildren.size();
	int v27 = v28;
	Object v30 = this.mChildren.get(phiInstruction);
	WindowContainer v29 = v30;
	DisplayContent$$ExternalSyntheticLambda6 v32 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v34 = DisplayContent.getRootTask(v32);
	Task v31 = v34;
	Task v26 = v31;
	ActivityRecord v37 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v36 = v37;
	ActivityRecord v35 = v36;
	boolean v40 = ActivityRecord.isFocusable();
	boolean v41 = ActivityRecord.canReceiveKeys();
	boolean v42 = ActivityRecord.isAlwaysFocusable();
	boolean v39 = phiInstruction;
	Task v44 = this.task.getRootTask();
	Task v43 = phiInstruction;
	ActivityRecord$$ExternalSyntheticLambda4 v45 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v47 = WindowContainer.mDisplayContent.getTask(v45, 1);
	String v48 = String.valueOf(ActivityRecord);
	Object v49 = new Object(1);
	ProtoLogImpl v51 = ProtoLogImpl.getSingleInstance();
	v51.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v49);
	DisplayContent v54 = p0.getDisplayContent();
	TaskDisplayArea v55 = p0.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v55);
	String v57 = String.valueOf(p0);
	int v58 = DisplayContent.getDisplayId();
	String v59 = Debug.getCallers(4);
	String v60 = String.valueOf(v59);
	Object v61 = new Object(3);
	Long v62 = Long.valueOf(v58);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v61);
	Task v64 = this.mFocusedApp.getTask();
	Task v65 = p0.getTask();
	this.mFocusedApp = p0;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v68 = DisplayContent.getInputMonitor();
	v68.setFocusedAppLw(p0);
	DisplayContent.updateTouchExcludeRegion();
	boolean v53 = 1;
	Trace.traceBegin(32, "wmUpdateFocus");
	boolean v73 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v71 = v73;
	boolean v75 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v38 = (v75 ^ 1);
	boolean v78 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0, 0);
	boolean v77 = v78;
	boolean v76 = v77;
	Binder.restoreCallingIdentity(v21);
	return;
}
This is path 3 for the API with depth 2:
public void setFocusedRootTask(int p1){
	Object v5 = new Object(1);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl v9 = new ProtoLogImpl(v10,1048576,v12);
	File v10 = new File("/data/misc/wmtrace/wm_log.winscope");
	ProtoLogViewerConfigReader v12 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v9;
	ProtoLogImpl v8 = this.sServiceInstance;
	boolean v16 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v18 = p1.isLogToLogcat();
	String v19 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v19, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	long v21 = Binder.clearCallingIdentity();
	int v27 = this.mChildren.size();
	int v26 = v27;
	Object v29 = this.mChildren.get(phiInstruction);
	WindowContainer v28 = v29;
	DisplayContent$$ExternalSyntheticLambda6 v31 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v33 = DisplayContent.getRootTask(v31);
	Task v30 = v33;
	Task v25 = v30;
	ActivityRecord v36 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v35 = v36;
	ActivityRecord v34 = v35;
	boolean v39 = ActivityRecord.isFocusable();
	boolean v40 = ActivityRecord.canReceiveKeys();
	boolean v41 = ActivityRecord.isAlwaysFocusable();
	boolean v38 = phiInstruction;
	Task v43 = this.task.getRootTask();
	Task v42 = phiInstruction;
	ActivityRecord$$ExternalSyntheticLambda4 v44 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v46 = WindowContainer.mDisplayContent.getTask(v44, 1);
	String v47 = String.valueOf(ActivityRecord);
	Object v48 = new Object(1);
	ProtoLogImpl v50 = ProtoLogImpl.getSingleInstance();
	v50.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v48);
	DisplayContent v53 = p0.getDisplayContent();
	TaskDisplayArea v54 = p0.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v54);
	String v56 = String.valueOf(p0);
	int v57 = DisplayContent.getDisplayId();
	String v58 = Debug.getCallers(4);
	String v59 = String.valueOf(v58);
	Object v60 = new Object(3);
	Long v61 = Long.valueOf(v57);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v60);
	Task v63 = this.mFocusedApp.getTask();
	Task v64 = p0.getTask();
	this.mFocusedApp = p0;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v67 = DisplayContent.getInputMonitor();
	v67.setFocusedAppLw(p0);
	DisplayContent.updateTouchExcludeRegion();
	boolean v52 = 1;
	Trace.traceBegin(32, "wmUpdateFocus");
	boolean v72 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v70 = v72;
	boolean v74 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v37 = (v74 ^ 1);
	boolean v77 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0, 0);
	boolean v76 = v77;
	boolean v75 = v76;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v21);
	return;
}

and the following sink code:
['Long v6 = Long.valueOf(p1);\nDisplayContent$$ExternalSyntheticLambda6 v31 = new DisplayContent$$ExternalSyntheticLambda6(p1);\nTask v33 = DisplayContent.getRootTask(v31);\nthis.mFocusedApp = p0;']

The method setFocusedRootTask has the following similar APIs:

- API Name: moveTaskToRootTask(IIZ)V with Similarity Score: 0.7995944023132324
  - Access Control Level: SYS_OR_SIG and the following code:
Task v11 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0);
DisplayContent$$ExternalSyntheticLambda6 v36 = new DisplayContent$$ExternalSyntheticLambda6(p1);
Task v38 = DisplayContent.getRootTask(v36);

- API Name: moveTaskToRootTask(IIZ)V with Similarity Score: 0.7995944023132324
  - Access Control Level: SYS_OR_SIG and the following code:
Task v11 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0);
DisplayContent$$ExternalSyntheticLambda6 v36 = new DisplayContent$$ExternalSyntheticLambda6(p1);
Task v38 = DisplayContent.getRootTask(v36);

