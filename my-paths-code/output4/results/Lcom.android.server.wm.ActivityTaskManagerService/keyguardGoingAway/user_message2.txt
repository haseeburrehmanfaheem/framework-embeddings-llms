The method keyguardGoingAway has the following code snippet:

This is path 1 for the API with depth 2:
public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	TaskDisplayArea v16 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v15 = v16;
	Task v17 = this.mRootHomeTask;
	ActivityRecord v19 = TaskFragment.topRunningActivity(0);
	ActivityRecord v18 = v19;
	boolean v20 = phiInstruction.isActivityTypeHome();
	Task v21 = this.task;
	this.mCache.removeRunningEntry(Task.mTaskId);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v26 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v26);
	Binder.restoreCallingIdentity(v4);
	return;
}
This is path 2 for the API with depth 2:
public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	this.sThreadPriorityBooster.boost();
	TaskDisplayArea v17 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v16 = v17;
	Task v18 = this.mRootHomeTask;
	ActivityRecord v20 = TaskFragment.topRunningActivity(0);
	ActivityRecord v19 = v20;
	boolean v21 = phiInstruction.isActivityTypeHome();
	Task v22 = this.task;
	this.mCache.removeRunningEntry(Task.mTaskId);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v27 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v27);
	Binder.restoreCallingIdentity(v4);
	return;
}
This is path 3 for the API with depth 2:
public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	TaskDisplayArea v16 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v15 = v16;
	Task v17 = this.mRootHomeTask;
	ActivityRecord v19 = TaskFragment.topRunningActivity(0);
	ActivityRecord v18 = v19;
	boolean v20 = phiInstruction.isActivityTypeHome();
	Task v21 = this.task;
	this.mCache.removeRunningEntry(Task.mTaskId);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v26 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v26);
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v4);
	return;
}

and the following sink code:
['ActivityTaskManagerService$$ExternalSyntheticLambda1 v26 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);\nthis.mRootWindowContainer.forAllDisplays(v26);', 'long v4 = Binder.clearCallingIdentity();\nBinder.restoreCallingIdentity(v4);']

The method keyguardGoingAway has the following similar APIs:

- API Name: setLockScreenShown(ZZ)V with Similarity Score: 0.9871390461921692
  - Access Control Level: SYS_OR_SIG and the following code:
ActivityTaskManagerService$$ExternalSyntheticLambda11 v13 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
this.mRootWindowContainer.forAllDisplays(v13);

- API Name: sendAppPrivateCommand(Landroid/os/IBinder;Ljava/lang/String;Landroid/os/Bundle;I)V with Similarity Score: 0.9580044746398926
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
long v6 = Binder.clearCallingIdentity();
Binder.restoreCallingIdentity(v6);

