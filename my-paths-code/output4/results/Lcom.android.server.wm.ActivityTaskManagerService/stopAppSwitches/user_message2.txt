The method stopAppSwitches has the following code snippet:

This is path 1 for the API with depth 2:
public void stopAppSwitches(){
	this.mAppSwitchesState = 0;
	long v5 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v5;
	this.mH.removeMessages(4);
	boolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);
	return;
}
This is path 2 for the API with depth 2:
public void stopAppSwitches(){
	WindowManagerThreadPriorityBooster.boost();
	this.mAppSwitchesState = 0;
	long v6 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v6;
	this.mH.removeMessages(4);
	boolean v8 = this.mH.sendEmptyMessageDelayed(4, 500);
	return;
}
This is path 3 for the API with depth 2:
public void stopAppSwitches(){
	this.mAppSwitchesState = 0;
	long v5 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v5;
	this.mH.removeMessages(4);
	boolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerThreadPriorityBooster.reset();
	return;
}

and the following sink code:
['this.mAppSwitchesState = 0;\nlong v5 = SystemClock.uptimeMillis();\nthis.mLastStopAppSwitchesTime = v5;\nthis.mH.removeMessages(4);\nboolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);', 'WindowManagerThreadPriorityBooster.boost();\nthis.mAppSwitchesState = 0;\nlong v6 = SystemClock.uptimeMillis();\nthis.mLastStopAppSwitchesTime = v6;\nthis.mH.removeMessages(4);\nboolean v8 = this.mH.sendEmptyMessageDelayed(4, 500);', 'this.mAppSwitchesState = 0;\nlong v5 = SystemClock.uptimeMillis();\nthis.mLastStopAppSwitchesTime = v5;\nthis.mH.removeMessages(4);\nboolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);\nWindowManagerThreadPriorityBooster.reset();']

The method stopAppSwitches has the following similar APIs:

- API Name: resumeAppSwitches()V with Similarity Score: 0.7760653495788574
  - Access Control Level: SYS_OR_SIG and the following code:
this.mAppSwitchesState = 2;

- API Name: isAssistDataAllowedOnCurrentActivity()Z with Similarity Score: 0.7528609037399292
  - Access Control Level: NONE and the following code:
WindowManagerThreadPriorityBooster.boost();

