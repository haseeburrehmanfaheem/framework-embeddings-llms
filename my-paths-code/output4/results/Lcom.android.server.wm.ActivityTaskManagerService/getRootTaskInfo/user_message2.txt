The method getRootTaskInfo has the following code snippet:

This is path 1 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	int v11 = RootWindowContainer.getChildCount();
	WindowContainer v12 = RootWindowContainer.getChildAt(phiInstruction);
	Task v13 = v12.getRootTask(p1, p2);
	Task v10 = v13;
	ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo();
	v10.fillTaskInfo(v15);
	DisplayContent v18 = v10.getDisplayContent();
	[I v19 = new [I(1);
	[Z v20 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v21 = new RootWindowContainer$$ExternalSyntheticLambda21(v10,v20,v19);
	boolean v23 = v18.forAllRootTasks(v21, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v24 = v10.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v24;
	v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v26 = v10.getDescendantTaskCount();
	[I v27 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v27;
	String v28 = new String(v26);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v28;
	Rect v29 = new Rect(v26);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v29;
	[I v30 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30;
	[I v31 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v32 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v34 = PooledLambda.__(Tas.class);
	PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31);
	v10.forAllLeafTasks(v35, 0);
	v35.recycle();
	ActivityRecord v38 = v10.topRunningActivity();
	ComponentName v39 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v14 = v15;
	ActivityTaskManager$RootTaskInfo v9 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v9;
}
This is path 2 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	int v12 = RootWindowContainer.getChildCount();
	WindowContainer v13 = RootWindowContainer.getChildAt(phiInstruction);
	Task v14 = v13.getRootTask(p1, p2);
	Task v11 = v14;
	ActivityTaskManager$RootTaskInfo v16 = new ActivityTaskManager$RootTaskInfo();
	v11.fillTaskInfo(v16);
	DisplayContent v19 = v11.getDisplayContent();
	[I v20 = new [I(1);
	[Z v21 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v22 = new RootWindowContainer$$ExternalSyntheticLambda21(v11,v21,v20);
	boolean v24 = v19.forAllRootTasks(v22, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v25 = v11.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v25;
	v11.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v27 = v11.getDescendantTaskCount();
	[I v28 = new [I(v27);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v28;
	String v29 = new String(v27);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v29;
	Rect v30 = new Rect(v27);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v30;
	[I v31 = new [I(v27);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v31;
	[I v32 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v33 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v35 = PooledLambda.__(Tas.class);
	PooledConsumer v36 = PooledLambda.obtainConsumer(v33, v35, v16, v32);
	v11.forAllLeafTasks(v36, 0);
	v36.recycle();
	ActivityRecord v39 = v11.topRunningActivity();
	ComponentName v40 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v15 = v16;
	ActivityTaskManager$RootTaskInfo v10 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v10;
}
This is path 3 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	int v11 = RootWindowContainer.getChildCount();
	WindowContainer v12 = RootWindowContainer.getChildAt(phiInstruction);
	Task v13 = v12.getRootTask(p1, p2);
	Task v10 = v13;
	ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo();
	v10.fillTaskInfo(v15);
	DisplayContent v18 = v10.getDisplayContent();
	[I v19 = new [I(1);
	[Z v20 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v21 = new RootWindowContainer$$ExternalSyntheticLambda21(v10,v20,v19);
	boolean v23 = v18.forAllRootTasks(v21, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v24 = v10.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v24;
	v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v26 = v10.getDescendantTaskCount();
	[I v27 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v27;
	String v28 = new String(v26);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v28;
	Rect v29 = new Rect(v26);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v29;
	[I v30 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30;
	[I v31 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v32 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v34 = PooledLambda.__(Tas.class);
	PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31);
	v10.forAllLeafTasks(v35, 0);
	v35.recycle();
	ActivityRecord v38 = v10.topRunningActivity();
	ComponentName v39 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v14 = v15;
	ActivityTaskManager$RootTaskInfo v9 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v9;
}

and the following sink code:
['ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo();\nv10.fillTaskInfo(v15);\nDisplayContent v18 = v10.getDisplayContent();\nboolean v23 = v18.forAllRootTasks(v21, 0);\nActivityTaskManager$RootTaskInfo.position = phiInstruction;\nboolean v24 = v10.shouldBeVisible(0);\nActivityTaskManager$RootTaskInfo.visible = v24;\nv10.getBounds(ActivityTaskManager$RootTaskInfo.bounds);\nint v26 = v10.getDescendantTaskCount();\n[I v27 = new [I(v26);\nActivityTaskManager$RootTaskInfo.childTaskIds = v27;\nString v28 = new String(v26);\nActivityTaskManager$RootTaskInfo.childTaskNames = v28;\nRect v29 = new Rect(v26);\nActivityTaskManager$RootTaskInfo.childTaskBounds = v29;\n[I v30 = new [I(v26);\nActivityTaskManager$RootTaskInfo.childTaskUserIds = v30;\n[I v31 = new [I(1);\nPooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31);\nv10.forAllLeafTasks(v35, 0);\nActivityRecord v38 = v10.topRunningActivity();\nComponentName v39 = ActivityRecord.intent.getComponent();\nActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;\nreturn v9;']

The method getRootTaskInfo has the following similar APIs:

- API Name: getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo; with Similarity Score: 0.8814712762832642
  - Access Control Level: SYS_OR_SIG and the following code:
ActivityTaskManager$RootTaskInfo v20 = new ActivityTaskManager$RootTaskInfo();
v15.fillTaskInfo(v20);
DisplayContent v23 = v15.getDisplayContent();
boolean v28 = v23.forAllRootTasks(v26, 0);
ActivityTaskManager$RootTaskInfo.position = phiInstruction;
boolean v29 = v15.shouldBeVisible(0);
ActivityTaskManager$RootTaskInfo.visible = v29;
v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
return phiInstruction;

- API Name: startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I with Similarity Score: 0.8338523507118225
  - Access Control Level: SYS_OR_SIG and the following code:
TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
Task v22 = v21.getRootTask(0, phiInstruction);
ActivityRecord v23 = v22.topRunningActivity();
boolean v24 = v23.attachedToProcess();

