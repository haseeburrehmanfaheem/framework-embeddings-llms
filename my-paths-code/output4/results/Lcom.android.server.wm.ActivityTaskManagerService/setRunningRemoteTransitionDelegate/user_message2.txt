The method setRunningRemoteTransitionDelegate has the following code snippet:

This is path 1 for the API with depth 2:
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	Object v11 = this.mPidMap.get(p1);
	WindowProcessController v10 = v11;
	WindowProcessController v9 = 0;
	boolean v12 = v9.isRunningRemoteTransition();
	IBinder v14 = p1.asBinder();
	ArrayMap v15 = this.mMap;
	int v16 = v15.size();
	Object v17 = v15.valueAt(phiInstruction);
	int v18 = v17.size();
	Object v19 = v17.valueAt(phiInstruction);
	boolean v20 = phiInstruction;
	IApplicationThread v21 = this.mThread;
	IBinder v22 = v21.asBinder();
	WindowProcessController v13 = v19;
	boolean v24 = v13.isRunningRemoteTransition();
	boolean v25 = v13.hasThread();
	this.mRunningRemoteAnimation = 1;
	WindowProcessController.updateRunningRemoteOrRecentsAnimation();
	TransitionController$RemotePlayer$DelegateProcess v28 = new TransitionController$RemotePlayer$DelegateProcess(TransitionController$RemotePlayer,v13);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v30 = ActivityTaskManagerService.mH.postDelayed(v28, 100);
	IApplicationThread v31 = this.mThread;
	IBinder v32 = v31.asBinder();
	Object v33 = this.mDelegateProcesses.put(v32, v28);
	return;
}
This is path 2 for the API with depth 2:
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerThreadPriorityBooster.boost();
	Object v12 = this.mPidMap.get(p1);
	WindowProcessController v11 = v12;
	WindowProcessController v10 = 0;
	boolean v13 = v10.isRunningRemoteTransition();
	IBinder v15 = p1.asBinder();
	ArrayMap v16 = this.mMap;
	int v17 = v16.size();
	Object v18 = v16.valueAt(phiInstruction);
	int v19 = v18.size();
	Object v20 = v18.valueAt(phiInstruction);
	boolean v21 = phiInstruction;
	IApplicationThread v22 = this.mThread;
	IBinder v23 = v22.asBinder();
	WindowProcessController v14 = v20;
	boolean v25 = v14.isRunningRemoteTransition();
	boolean v26 = v14.hasThread();
	this.mRunningRemoteAnimation = 1;
	WindowProcessController.updateRunningRemoteOrRecentsAnimation();
	TransitionController$RemotePlayer$DelegateProcess v29 = new TransitionController$RemotePlayer$DelegateProcess(TransitionController$RemotePlayer,v14);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v31 = ActivityTaskManagerService.mH.postDelayed(v29, 100);
	IApplicationThread v32 = this.mThread;
	IBinder v33 = v32.asBinder();
	Object v34 = this.mDelegateProcesses.put(v33, v29);
	return;
}
This is path 3 for the API with depth 2:
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	Object v11 = this.mPidMap.get(p1);
	WindowProcessController v10 = v11;
	WindowProcessController v9 = 0;
	boolean v12 = v9.isRunningRemoteTransition();
	IBinder v14 = p1.asBinder();
	ArrayMap v15 = this.mMap;
	int v16 = v15.size();
	Object v17 = v15.valueAt(phiInstruction);
	int v18 = v17.size();
	Object v19 = v17.valueAt(phiInstruction);
	boolean v20 = phiInstruction;
	IApplicationThread v21 = this.mThread;
	IBinder v22 = v21.asBinder();
	WindowProcessController v13 = v19;
	boolean v24 = v13.isRunningRemoteTransition();
	boolean v25 = v13.hasThread();
	this.mRunningRemoteAnimation = 1;
	WindowProcessController.updateRunningRemoteOrRecentsAnimation();
	TransitionController$RemotePlayer$DelegateProcess v28 = new TransitionController$RemotePlayer$DelegateProcess(TransitionController$RemotePlayer,v13);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v30 = ActivityTaskManagerService.mH.postDelayed(v28, 100);
	IApplicationThread v31 = this.mThread;
	IBinder v32 = v31.asBinder();
	Object v33 = this.mDelegateProcesses.put(v32, v28);
	WindowManagerThreadPriorityBooster.reset();
	return;
}

and the following sink code:
['Object v11 = this.mPidMap.get(p1);\nWindowProcessController v10 = v11;\nIBinder v14 = p1.asBinder();\nArrayMap v15 = this.mMap;\nObject v17 = v15.valueAt(phiInstruction);\nWindowProcessController v13 = v19;\nTransitionController$RemotePlayer$DelegateProcess v28 = new TransitionController$RemotePlayer$DelegateProcess(TransitionController$RemotePlayer,v13);\nObject v33 = this.mDelegateProcesses.put(v32, v28);', 'this.mRunningRemoteAnimation = 1;\nWindowProcessController.updateRunningRemoteOrRecentsAnimation();']

The method setRunningRemoteTransitionDelegate has the following similar APIs:

- API Name: registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V with Similarity Score: 0.7392226457595825
  - Access Control Level: SYS_OR_SIG and the following code:
this.mRemoteAnimationDefinition = p1;

