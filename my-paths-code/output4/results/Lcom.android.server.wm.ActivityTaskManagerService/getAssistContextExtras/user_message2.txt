The method getAssistContextExtras has the following code snippet:

This is path 1 for the API with depth 2:
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v8 = v9;
	boolean v11 = ActivityRecord.hasProcess();
	boolean v12 = this.app.hasThread();
	boolean v10 = phiInstruction;
	Object v14 = ActivityRecord$Token.mActivityRef.get();
	Task v15 = v14.getRootTask();
	ActivityRecord v13 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v30 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
This is path 2 for the API with depth 2:
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v8 = v9;
	boolean v11 = ActivityRecord.hasProcess();
	boolean v12 = this.app.hasThread();
	boolean v10 = phiInstruction;
	Object v14 = ActivityRecord$Token.mActivityRef.get();
	Task v15 = v14.getRootTask();
	ActivityRecord v13 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	WindowManagerThreadPriorityBooster.boost();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v31 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
This is path 3 for the API with depth 2:
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v8 = v9;
	boolean v11 = ActivityRecord.hasProcess();
	boolean v12 = this.app.hasThread();
	boolean v10 = phiInstruction;
	Object v14 = ActivityRecord$Token.mActivityRef.get();
	Task v15 = v14.getRootTask();
	ActivityRecord v13 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v30 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerThreadPriorityBooster.reset();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}

and the following sink code:
['ActivityTaskManagerService$PendingAssistExtras v2 = 0;\np0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);\nboolean v30 = this.mPendingAssistExtras.remove(v2);\nthis.mUiHandler.removeCallbacks(v2);\nreturn ActivityTaskManagerService$PendingAssistExtras.extras;']

The method getAssistContextExtras has the following similar APIs:

- API Name: reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V with Similarity Score: 0.7761262655258179
  - Access Control Level: NONE and the following code:
ActivityTaskManagerService$PendingAssistExtras.result = p2;
ActivityTaskManagerService$PendingAssistExtras.structure = p3;
ActivityTaskManagerService$PendingAssistExtras.content = p4;
ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable("android.intent.extra.REFERRER", p5);

