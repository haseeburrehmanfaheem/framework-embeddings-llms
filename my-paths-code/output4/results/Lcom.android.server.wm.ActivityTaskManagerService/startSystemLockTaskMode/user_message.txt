This is path 1 for the API with depth 2:
public void startSystemLockTaskMode(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, "anyTaskForId");
	Task v10 = v16;
	Task v9 = v10;
	WindowContainer v23 = TaskFragment.getParent();
	TaskFragment v24 = v23.asTaskFragment();
	TaskFragment v22 = phiInstruction;
	Task v25 = 0;
	Task v21 = v25;
	boolean v28 = Task.isAttached();
	TaskDisplayArea v29 = Task.getDisplayArea();
	boolean v30 = Task.isActivityTypeHome();
	boolean v31 = Task.returnsToHomeRootTask();
	StringBuilder v32 = new StringBuilder();
	StringBuilder v34 = v32.append(p1);
	StringBuilder v35 = v32.append(" returnToHome");
	String v36 = v32.toString();
	v29.moveHomeRootTaskToFront(v36);
	boolean v38 = Task.isRootTask();
	Task v39 = v29.getFocusedRootTask();
	WindowContainer v40 = phiInstruction.getParent();
	v40.positionChildAt(2147483647, phiInstruction, 1);
	v29.updateLastFocusedRootTask(phiInstruction, p1);
	String v44 = String.valueOf(v9);
	Object v45 = new Object(1);
	ProtoLogImpl v47 = ProtoLogImpl.getSingleInstance();
	v47.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v45);
	int v50 = RootWindowContainer.getChildCount();
	WindowContainer v51 = RootWindowContainer.getChildAt(phiInstruction);
	Task v52 = v51.getFocusedRootTask();
	Task v49 = v52;
	WindowContainer$$ExternalSyntheticLambda1 v54 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v56 = WindowContainer.getTask(v54, 1);
	Task v53 = v56;
	int v57 = Binder.getCallingUid();
	long v58 = Binder.clearCallingIdentity();
	[I v59 = new [I(1);
	int v61 = RootWindowContainer.getChildCount();
	LockTaskController v62 = this.mLockTaskController;
	Task.mLockTaskUid = v57;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v65 = LocalServices.getService(StatusBarManagerInterna.class);
	v65.showScreenPinningRequest(Task.mTaskId);
	Binder.restoreCallingIdentity(v58);
	Binder.restoreCallingIdentity(v5);
	return;
}

This is path 2 for the API with depth 2:
public void startSystemLockTaskMode(int p1){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v12 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v14 = PooledLambda.__(Tas.class);
	Integer v15 = Integer.valueOf(p1);
	PooledPredicate v16 = PooledLambda.obtainPredicate(v12, v14, v15);
	Task v17 = RootWindowContainer.getTask(v16);
	v16.recycle();
	Task v19 = RootWindowContainer.getOrCreateRootTask(0, 0, v17, 0);
	Task v20 = v17.getRootTask();
	boolean v21 = v17.reparent(v19, 0, phiInstruction, 1, 1, "anyTaskForId");
	Task v11 = v17;
	Task v10 = v11;
	WindowContainer v24 = TaskFragment.getParent();
	TaskFragment v25 = v24.asTaskFragment();
	TaskFragment v23 = phiInstruction;
	Task v26 = 0;
	Task v22 = v26;
	boolean v29 = Task.isAttached();
	TaskDisplayArea v30 = Task.getDisplayArea();
	boolean v31 = Task.isActivityTypeHome();
	boolean v32 = Task.returnsToHomeRootTask();
	StringBuilder v33 = new StringBuilder();
	StringBuilder v35 = v33.append(p1);
	StringBuilder v36 = v33.append(" returnToHome");
	String v37 = v33.toString();
	v30.moveHomeRootTaskToFront(v37);
	boolean v39 = Task.isRootTask();
	Task v40 = v30.getFocusedRootTask();
	WindowContainer v41 = phiInstruction.getParent();
	v41.positionChildAt(2147483647, phiInstruction, 1);
	v30.updateLastFocusedRootTask(phiInstruction, p1);
	String v45 = String.valueOf(v10);
	Object v46 = new Object(1);
	ProtoLogImpl v48 = ProtoLogImpl.getSingleInstance();
	v48.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v46);
	int v51 = RootWindowContainer.getChildCount();
	WindowContainer v52 = RootWindowContainer.getChildAt(phiInstruction);
	Task v53 = v52.getFocusedRootTask();
	Task v50 = v53;
	WindowContainer$$ExternalSyntheticLambda1 v55 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v57 = WindowContainer.getTask(v55, 1);
	Task v54 = v57;
	int v58 = Binder.getCallingUid();
	long v59 = Binder.clearCallingIdentity();
	[I v60 = new [I(1);
	int v62 = RootWindowContainer.getChildCount();
	LockTaskController v63 = this.mLockTaskController;
	Task.mLockTaskUid = v58;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v66 = LocalServices.getService(StatusBarManagerInterna.class);
	v66.showScreenPinningRequest(Task.mTaskId);
	Binder.restoreCallingIdentity(v59);
	Binder.restoreCallingIdentity(v5);
	return;
}

This is path 3 for the API with depth 2:
public void startSystemLockTaskMode(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, "anyTaskForId");
	Task v10 = v16;
	Task v9 = v10;
	WindowContainer v23 = TaskFragment.getParent();
	TaskFragment v24 = v23.asTaskFragment();
	TaskFragment v25 = v24.getRootTaskFragment();
	TaskFragment v22 = phiInstruction;
	Task v26 = 0;
	Task v21 = v26;
	boolean v29 = Task.isAttached();
	TaskDisplayArea v30 = Task.getDisplayArea();
	boolean v31 = Task.isActivityTypeHome();
	boolean v32 = Task.returnsToHomeRootTask();
	StringBuilder v33 = new StringBuilder();
	StringBuilder v35 = v33.append(p1);
	StringBuilder v36 = v33.append(" returnToHome");
	String v37 = v33.toString();
	v30.moveHomeRootTaskToFront(v37);
	boolean v39 = Task.isRootTask();
	Task v40 = v30.getFocusedRootTask();
	WindowContainer v41 = phiInstruction.getParent();
	v41.positionChildAt(2147483647, phiInstruction, 1);
	v30.updateLastFocusedRootTask(phiInstruction, p1);
	String v45 = String.valueOf(v9);
	Object v46 = new Object(1);
	ProtoLogImpl v48 = ProtoLogImpl.getSingleInstance();
	v48.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v46);
	int v51 = RootWindowContainer.getChildCount();
	WindowContainer v52 = RootWindowContainer.getChildAt(phiInstruction);
	Task v53 = v52.getFocusedRootTask();
	Task v50 = v53;
	WindowContainer$$ExternalSyntheticLambda1 v55 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v57 = WindowContainer.getTask(v55, 1);
	Task v54 = v57;
	int v58 = Binder.getCallingUid();
	long v59 = Binder.clearCallingIdentity();
	[I v60 = new [I(1);
	int v62 = RootWindowContainer.getChildCount();
	LockTaskController v63 = this.mLockTaskController;
	Task.mLockTaskUid = v58;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v66 = LocalServices.getService(StatusBarManagerInterna.class);
	v66.showScreenPinningRequest(Task.mTaskId);
	Binder.restoreCallingIdentity(v59);
	Binder.restoreCallingIdentity(v5);
	return;
}
