The method cancelVibrate has the following code snippet:

This is path 1 for the API with depth 2:
public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	Vibration v6 = this.mVibration;
	int v9 = Vibration.attrs.getUsage();
	int v10 = Vibration.attrs.getUsage();
	int v11 = Vibration.attrs.getUsage();
	boolean v8 = phiInstruction;
	boolean v7 = phiInstruction;
	Vibration v13 = this.mVibration;
	v13.end(p1);
	VibratorManagerService.logVibrationStatus(Vibration.uid, Vibration.attrs, Vibration$EndInfo.status);
	this.mVibratorManagerRecords.record(v13);
	long v18 = SystemClock.uptimeMillis();
	VibrationStats$StatsInfo v19 = v13.getStatsInfo(v18);
	this.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);
	this.mNextVibration = 0;
	Vibration v21 = this.mCurrentVibration.getVibration();
	int v24 = Vibration.attrs.getUsage();
	int v25 = Vibration.attrs.getUsage();
	int v26 = Vibration.attrs.getUsage();
	boolean v23 = phiInstruction;
	boolean v22 = phiInstruction;
	Thread v29 = Thread.currentThread();
	String v36 = Vibration$EndInfo.status.name();
	boolean v37 = v36.startsWith("CANCEL");
	Vibration$EndInfo v45 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_UNKNOWN_REASON);
	this.mSignalCancelImmediate = (0 | this.mSignalCancelImmediate);
	this.mSignalCancel = phiInstruction;
	this.mLock.notify();
	VibrationAttributes$Builder v49 = new VibrationAttributes$Builder(this.mAttrs);
	VibrationAttributes v52 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
	VibrationAttributes v51 = v52;
	VibrationAttributes v48 = v51;
	int v55 = this.mUsage;
	int v56 = this.mUsage;
	int v57 = this.mUsage;
	boolean v54 = phiInstruction;
	boolean v60 = this.mController.mute();
	boolean v59 = 0;
	Trace.traceBegin(8388608, "endExternalVibrateLocked");
	this.externalVibration.unlinkToDeath(VibratorManagerService$ExternalVibrationHolder);
	int v72 = this.mVibrators.size();
	this.mCurrentExternalVibration.end(p1);
	int v75 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getUid();
	VibrationAttributes v76 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getVibrationAttributes();
	VibratorManagerService.logVibrationStatus(v75, v76, Vibration$EndInfo.status);
	this.mVibratorManagerRecords.record(this.mCurrentExternalVibration);
	long v79 = SystemClock.uptimeMillis();
	VibrationStats$StatsInfo v80 = this.mCurrentExternalVibration.getStatsInfo(v79);
	this.mFrameworkStatsLogger.writeVibrationReportedAsync(v80);
	this.mCurrentExternalVibration = 0;
	Trace.traceEnd(8388608);
	Binder.restoreCallingIdentity(v5);
	Trace.traceEnd(8388608);
	return;
}
This is path 2 for the API with depth 2:
public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	Vibration v6 = this.mVibration;
	int v9 = Vibration.attrs.getUsage();
	int v10 = Vibration.attrs.getUsage();
	int v11 = Vibration.attrs.getUsage();
	boolean v8 = phiInstruction;
	boolean v7 = phiInstruction;
	Vibration v13 = this.mVibration;
	v13.end(p1);
	VibratorManagerService.logVibrationStatus(Vibration.uid, Vibration.attrs, Vibration$EndInfo.status);
	this.mVibratorManagerRecords.record(v13);
	long v18 = SystemClock.uptimeMillis();
	VibrationStats$StatsInfo v19 = v13.getStatsInfo(v18);
	this.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);
	this.mNextVibration = 0;
	Vibration v21 = this.mCurrentVibration.getVibration();
	int v24 = Vibration.attrs.getUsage();
	int v25 = Vibration.attrs.getUsage();
	int v26 = Vibration.attrs.getUsage();
	boolean v23 = phiInstruction;
	boolean v22 = phiInstruction;
	Thread v29 = Thread.currentThread();
	String v36 = Vibration$EndInfo.status.name();
	boolean v37 = v36.startsWith("CANCEL");
	Vibration$EndInfo v45 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_UNKNOWN_REASON);
	this.mSignalCancelImmediate = (0 | this.mSignalCancelImmediate);
	this.mSignalCancel = phiInstruction;
	this.mLock.notify();
	VibrationAttributes$Builder v49 = new VibrationAttributes$Builder(this.mAttrs);
	VibrationAttributes v52 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
	VibrationAttributes v51 = v52;
	VibrationAttributes v48 = v51;
	int v55 = this.mUsage;
	int v56 = this.mUsage;
	int v57 = this.mUsage;
	boolean v54 = phiInstruction;
	boolean v60 = this.mController.mute();
	boolean v59 = 0;
	Trace.traceBegin(8388608, "endExternalVibrateLocked");
	this.externalVibration.unlinkToDeath(VibratorManagerService$ExternalVibrationHolder);
	int v72 = this.mVibrators.size();
	this.mCurrentExternalVibration.end(p1);
	int v75 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getUid();
	VibrationAttributes v76 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getVibrationAttributes();
	VibratorManagerService.logVibrationStatus(v75, v76, Vibration$EndInfo.status);
	this.mVibratorManagerRecords.record(this.mCurrentExternalVibration);
	long v79 = SystemClock.uptimeMillis();
	VibrationStats$StatsInfo v80 = this.mCurrentExternalVibration.getStatsInfo(v79);
	this.mFrameworkStatsLogger.writeVibrationReportedAsync(v80);
	this.mCurrentExternalVibration = 0;
	Trace.traceEnd(8388608);
	Binder.restoreCallingIdentity(v5);
	Trace.traceEnd(8388608);
	return;
}
This is path 3 for the API with depth 2:
public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	Vibration v6 = this.mVibration;
	int v9 = Vibration.attrs.getUsage();
	int v10 = Vibration.attrs.getUsage();
	int v11 = Vibration.attrs.getUsage();
	boolean v8 = phiInstruction;
	boolean v7 = phiInstruction;
	Vibration v13 = this.mVibration;
	v13.end(p1);
	VibratorManagerService.logVibrationStatus(Vibration.uid, Vibration.attrs, Vibration$EndInfo.status);
	this.mVibratorManagerRecords.record(v13);
	long v18 = SystemClock.uptimeMillis();
	VibrationStats$StatsInfo v19 = v13.getStatsInfo(v18);
	this.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);
	this.mNextVibration = 0;
	Vibration v21 = this.mCurrentVibration.getVibration();
	int v24 = Vibration.attrs.getUsage();
	int v25 = Vibration.attrs.getUsage();
	int v26 = Vibration.attrs.getUsage();
	boolean v23 = phiInstruction;
	boolean v22 = phiInstruction;
	Thread v29 = Thread.currentThread();
	String v36 = Vibration$EndInfo.status.name();
	boolean v37 = v36.startsWith("CANCEL");
	Vibration$EndInfo v45 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_UNKNOWN_REASON);
	this.mSignalCancelImmediate = (0 | this.mSignalCancelImmediate);
	this.mSignalCancel = phiInstruction;
	this.mLock.notify();
	VibrationAttributes$Builder v49 = new VibrationAttributes$Builder(this.mAttrs);
	VibrationAttributes v52 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
	VibrationAttributes v51 = v52;
	VibrationAttributes v48 = v51;
	int v55 = this.mUsage;
	int v56 = this.mUsage;
	int v57 = this.mUsage;
	boolean v54 = phiInstruction;
	boolean v60 = this.mController.mute();
	boolean v59 = 0;
	Trace.traceBegin(8388608, "endExternalVibrateLocked");
	this.externalVibration.unlinkToDeath(VibratorManagerService$ExternalVibrationHolder);
	int v72 = this.mVibrators.size();
	this.mCurrentExternalVibration.end(p1);
	int v75 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getUid();
	VibrationAttributes v76 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getVibrationAttributes();
	VibratorManagerService.logVibrationStatus(v75, v76, Vibration$EndInfo.status);
	this.mVibratorManagerRecords.record(this.mCurrentExternalVibration);
	long v79 = SystemClock.uptimeMillis();
	VibrationStats$StatsInfo v80 = this.mCurrentExternalVibration.getStatsInfo(v79);
	this.mFrameworkStatsLogger.writeVibrationReportedAsync(v80);
	this.mCurrentExternalVibration = 0;
	Trace.traceEnd(8388608);
	Binder.restoreCallingIdentity(v5);
	Trace.traceEnd(8388608);
	return;
}

and the following sink code:
['Vibration v13 = this.mVibration;\nv13.end(p1);\nthis.mVibratorManagerRecords.record(v13);', 'long v18 = SystemClock.uptimeMillis();\nVibrationStats$StatsInfo v19 = v13.getStatsInfo(v18);\nthis.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);', 'this.externalVibration.unlinkToDeath(VibratorManagerService$ExternalVibrationHolder);\nint v72 = this.mVibrators.size();\nthis.mCurrentExternalVibration.end(p1);', 'long v79 = SystemClock.uptimeMillis();\nVibrationStats$StatsInfo v80 = this.mCurrentExternalVibration.getStatsInfo(v79);\nthis.mFrameworkStatsLogger.writeVibrationReportedAsync(v80);']

The method cancelVibrate has the following similar APIs:

- API Name: setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z with Similarity Score: 0.7234979271888733
  - Access Control Level: SYS_OR_SIG and the following code:
VibrationAttributes v22 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
VibrationAttributes v21 = v22;
VibrationAttributes v4 = v21;
VibratorManagerService$AlwaysOnVibration v45 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v4,v24);

- API Name: setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z with Similarity Score: 0.7087259888648987
  - Access Control Level: SYS_OR_SIG and the following code:
VibrationAttributes v22 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
VibrationAttributes v21 = v22;
VibrationAttributes v4 = v21;
VibratorManagerService$AlwaysOnVibration v45 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v4,v24);

