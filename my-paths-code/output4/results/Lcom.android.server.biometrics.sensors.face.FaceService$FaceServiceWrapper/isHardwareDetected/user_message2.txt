The method isHardwareDetected has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	Iterator v6 = this.mServiceProviders.iterator();
	boolean v7 = v6.hasNext();
	Object v8 = v6.next();
	boolean v9 = v8.containsSensor(p2);
	ServiceProvider v5 = v8;
	ServiceProvider v4 = v5;
	Binder.restoreCallingIdentity(v3);
	return 0;
}
This is path 2 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	Iterator v6 = this.mServiceProviders.iterator();
	boolean v7 = v6.hasNext();
	ServiceProvider v5 = 0;
	ServiceProvider v4 = v5;
	Binder.restoreCallingIdentity(v3);
	return 0;
}
This is path 3 for the API with depth 2:
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	Iterator v6 = this.mServiceProviders.iterator();
	boolean v7 = v6.hasNext();
	Object v8 = v6.next();
	boolean v9 = v8.containsSensor(p2);
	ServiceProvider v5 = v8;
	ServiceProvider v4 = v5;
	boolean v10 = v4.isHardwareDetected(p1);
	Binder.restoreCallingIdentity(v3);
	return v10;
}

and the following sink code:
['Object v8 = v6.next();\nboolean v9 = v8.containsSensor(p2);\nServiceProvider v5 = v8;\nServiceProvider v4 = v5;\nboolean v10 = v4.isHardwareDetected(p1);\nreturn v10;']

The method isHardwareDetected has the following similar APIs:

- API Name: createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession; with Similarity Score: 0.8468999266624451
  - Access Control Level: NORMAL and the following code:
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;
ServiceProvider v3 = v4;
ITestSession v9 = v3.createTestSession(p1, p2, p3);
return v9;

- API Name: generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V with Similarity Score: 0.8123835921287537
  - Access Control Level: NORMAL and the following code:
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
ServiceProvider v4 = v7;
ServiceProvider v3 = v4;
v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);

