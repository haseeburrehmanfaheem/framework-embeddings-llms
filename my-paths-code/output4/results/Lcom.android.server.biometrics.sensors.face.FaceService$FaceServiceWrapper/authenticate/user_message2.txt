The method authenticate has the following code snippet:

This is path 1 for the API with depth 2:
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v5 = phiInstruction;
	Resources v7 = v3.getResources();
	String v8 = v7.getString(17039993);
	ComponentName v9 = ComponentName.unflattenFromString(v8);
	String v10 = v9.getPackageName();
	boolean v11 = phiInstruction.equals(p5);
	boolean v4 = phiInstruction;
	Context v12 = this.this$0.getContext();
	boolean v14 = phiInstruction;
	Resources v16 = v12.getResources();
	String v17 = v16.getString(17039993);
	ComponentName v18 = ComponentName.unflattenFromString(v17);
	String v19 = v18.getPackageName();
	boolean v20 = phiInstruction.equals(p5);
	boolean v13 = phiInstruction;
	List v23 = FaceService.getSensorProperties();
	int v24 = v23.size();
	Object v25 = v23.get(0);
	Iterator v26 = this.mServiceProviders.iterator();
	boolean v27 = v26.hasNext();
	Object v28 = v26.next();
	boolean v29 = v28.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v30 = new Pair(v31,v28);
	Integer v31 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	Pair v22 = v30;
	Pair v21 = v22;
	int v33 = Pair.first.intValue();
	ClientMonitorCallbackConverter v34 = new ClientMonitorCallbackConverter(p4);
	long v36 = Pair.second.scheduleAuthenticate(v33, p1, p2, p3, 0, v34, p5, 0, v4, v13, p6);
	return v36;
}
This is path 2 for the API with depth 2:
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v5 = phiInstruction;
	Resources v7 = v3.getResources();
	String v8 = v7.getString(17039993);
	ComponentName v9 = ComponentName.unflattenFromString(v8);
	String v10 = v9.getPackageName();
	boolean v11 = phiInstruction.equals(p5);
	boolean v4 = phiInstruction;
	Context v12 = this.this$0.getContext();
	boolean v14 = phiInstruction;
	Resources v16 = v12.getResources();
	String v17 = v16.getString(17039993);
	ComponentName v18 = ComponentName.unflattenFromString(v17);
	String v19 = v18.getPackageName();
	boolean v20 = phiInstruction.equals(p5);
	boolean v13 = phiInstruction;
	List v23 = FaceService.getSensorProperties();
	int v24 = v23.size();
	Object v25 = v23.get(0);
	Iterator v26 = this.mServiceProviders.iterator();
	boolean v27 = v26.hasNext();
	Object v28 = v26.next();
	boolean v29 = v28.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v30 = new Pair(v31,v28);
	Integer v31 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	Pair v22 = v30;
	Pair v21 = v22;
	int v33 = Pair.first.intValue();
	ClientMonitorCallbackConverter v34 = new ClientMonitorCallbackConverter(p4);
	long v36 = Pair.second.scheduleAuthenticate(v33, p1, p2, p3, 0, v34, p5, 0, v4, v13, p6);
	return v36;
}
This is path 3 for the API with depth 2:
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v5 = phiInstruction;
	Resources v7 = v3.getResources();
	String v8 = v7.getString(17039993);
	ComponentName v9 = ComponentName.unflattenFromString(v8);
	String v10 = v9.getPackageName();
	boolean v11 = phiInstruction.equals(p5);
	boolean v4 = phiInstruction;
	Context v12 = this.this$0.getContext();
	boolean v14 = phiInstruction;
	Resources v16 = v12.getResources();
	String v17 = v16.getString(17039993);
	ComponentName v18 = ComponentName.unflattenFromString(v17);
	String v19 = v18.getPackageName();
	boolean v20 = phiInstruction.equals(p5);
	boolean v13 = phiInstruction;
	List v23 = FaceService.getSensorProperties();
	int v24 = v23.size();
	Object v25 = v23.get(0);
	Iterator v26 = this.mServiceProviders.iterator();
	boolean v27 = v26.hasNext();
	Object v28 = v26.next();
	boolean v29 = v28.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v30 = new Pair(v31,v28);
	Integer v31 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	Pair v22 = v30;
	Pair v21 = v22;
	int v33 = Pair.first.intValue();
	ClientMonitorCallbackConverter v34 = new ClientMonitorCallbackConverter(p4);
	long v36 = Pair.second.scheduleAuthenticate(v33, p1, p2, p3, 0, v34, p5, 0, v4, v13, p6);
	return v36;
}

and the following sink code:
['Integer v31 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);\nPair v30 = new Pair(v31,v28);\nPair v22 = v30;\nPair v21 = v22;\nint v33 = Pair.first.intValue();\nClientMonitorCallbackConverter v34 = new ClientMonitorCallbackConverter(p4);\nlong v36 = Pair.second.scheduleAuthenticate(v33, p1, p2, p3, 0, v34, p5, 0, v4, v13, p6);\nreturn v36;']

The method authenticate has the following similar APIs:

- API Name: cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V with Similarity Score: 0.7972568869590759
  - Access Control Level: NORMAL and the following code:
List v5 = FaceService.getSensorProperties();
Iterator v8 = this.mServiceProviders.iterator();
Object v10 = v8.next();
boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
Pair v12 = new Pair(v13,v10);
Integer v13 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
int v15 = Pair.first.intValue();
Pair.second.cancelAuthentication(v15, p1, p3);

- API Name: getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V with Similarity Score: 0.7522133588790894
  - Access Control Level: NORMAL and the following code:
List v5 = FaceService.getSensorProperties();
Iterator v8 = this.mServiceProviders.iterator();
Object v10 = v8.next();
boolean v11 = v10.containsSensor(FaceSensorPropertiesInternal.sensorId);
Pair v12 = new Pair(v13,v10);

