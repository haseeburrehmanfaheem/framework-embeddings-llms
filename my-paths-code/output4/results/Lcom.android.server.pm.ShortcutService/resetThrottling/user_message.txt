This is path 1 for the API with depth 2:
public void resetThrottling(){
	boolean v2 = v4;
	int v6 = ShortcutService.injectBinderCallingUid();
	boolean v5 = phiInstruction;
	int v9 = IShortcutService$Stub.getCallingUid();
	int v8 = v9;
	int v10 = UserHandle.getUserId(v8);
	int v7 = v10;
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v14 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v12 = v14;
	boolean v16 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v18 = this.mUsers.get(p1);
	ShortcutUser v19 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v20 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v15 = phiInstruction;
	int v25 = this.mPackages.size();
	ShortcutService.scheduleSaveInner(p1);
	return;
}

This is path 2 for the API with depth 2:
public void resetThrottling(){
	boolean v2 = v4;
	int v6 = ShortcutService.injectBinderCallingUid();
	boolean v5 = phiInstruction;
	int v9 = IShortcutService$Stub.getCallingUid();
	int v8 = v9;
	int v10 = UserHandle.getUserId(v8);
	int v7 = v10;
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v14 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v12 = v14;
	boolean v16 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v18 = this.mUsers.get(p1);
	ShortcutUser v19 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v20 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v15 = phiInstruction;
	int v25 = this.mPackages.size();
	ShortcutService.scheduleSaveInner(p1);
	return;
}

This is path 3 for the API with depth 2:
public void resetThrottling(){
	boolean v2 = v4;
	int v6 = ShortcutService.injectBinderCallingUid();
	boolean v5 = phiInstruction;
	int v9 = IShortcutService$Stub.getCallingUid();
	int v8 = v9;
	int v10 = UserHandle.getUserId(v8);
	int v7 = v10;
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v12 = 1;
	boolean v15 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v17 = this.mUsers.get(p1);
	ShortcutUser v18 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v19 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v14 = phiInstruction;
	int v24 = this.mPackages.size();
	ShortcutService.scheduleSaveInner(p1);
	return;
}
