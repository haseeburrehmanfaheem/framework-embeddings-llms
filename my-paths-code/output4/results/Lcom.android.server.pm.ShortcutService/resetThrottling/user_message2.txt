The method resetThrottling has the following code snippet:

This is path 1 for the API with depth 2:
public void resetThrottling(){
	boolean v2 = v4;
	int v6 = ShortcutService.injectBinderCallingUid();
	boolean v5 = phiInstruction;
	int v9 = IShortcutService$Stub.getCallingUid();
	int v8 = v9;
	int v10 = UserHandle.getUserId(v8);
	int v7 = v10;
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v14 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v12 = v14;
	boolean v16 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v18 = this.mUsers.get(p1);
	ShortcutUser v19 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v20 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v15 = phiInstruction;
	int v25 = this.mPackages.size();
	ShortcutService.scheduleSaveInner(p1);
	return;
}
This is path 2 for the API with depth 2:
public void resetThrottling(){
	boolean v2 = v4;
	int v6 = ShortcutService.injectBinderCallingUid();
	boolean v5 = phiInstruction;
	int v9 = IShortcutService$Stub.getCallingUid();
	int v8 = v9;
	int v10 = UserHandle.getUserId(v8);
	int v7 = v10;
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v14 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v12 = v14;
	boolean v16 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v18 = this.mUsers.get(p1);
	ShortcutUser v19 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v20 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v15 = phiInstruction;
	int v25 = this.mPackages.size();
	ShortcutService.scheduleSaveInner(p1);
	return;
}
This is path 3 for the API with depth 2:
public void resetThrottling(){
	boolean v2 = v4;
	int v6 = ShortcutService.injectBinderCallingUid();
	boolean v5 = phiInstruction;
	int v9 = IShortcutService$Stub.getCallingUid();
	int v8 = v9;
	int v10 = UserHandle.getUserId(v8);
	int v7 = v10;
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v12 = 1;
	boolean v15 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v17 = this.mUsers.get(p1);
	ShortcutUser v18 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v19 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v14 = phiInstruction;
	int v24 = this.mPackages.size();
	ShortcutService.scheduleSaveInner(p1);
	return;
}

and the following sink code:
['int v6 = ShortcutService.injectBinderCallingUid();\nint v9 = IShortcutService$Stub.getCallingUid();\nint v10 = UserHandle.getUserId(v8);', 'boolean v13 = this.mUnlockedUsers.get(p1);\nthis.mLastLockedUser = p1;\nObject v18 = this.mUsers.get(p1);\nShortcutUser v19 = ShortcutService.loadUserLocked(p1);\nthis.mUsers.put(p1, phiInstruction);', 'ShortcutUser v20 = new ShortcutUser(ShortcutService,p1);\nShortcutService.checkPackageChanges(p1);\nint v25 = this.mPackages.size();\nShortcutService.scheduleSaveInner(p1);']

The method resetThrottling has the following similar APIs:

- API Name: hasShareTargets(Ljava/lang/String;Ljava/lang/String;I)Z with Similarity Score: 0.8846415877342224
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v5 = this.mUnlockedUsers.get(p1);
boolean v6 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
ShortcutService.wtf("User still locked");
this.mLastLockedUser = p2;
Object v11 = this.mUsers.get(p2);
ShortcutUser v12 = ShortcutService.loadUserLocked(p2);
this.mUsers.put(p2, phiInstruction);
ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v21 = this.mPackages.put(p1, v19);
boolean v22 = v7.hasShareTargets();
return v22;

- API Name: getShareTargets(Ljava/lang/String;Landroid/content/IntentFilter;I)Landroid/content/pm/ParceledListSlice; with Similarity Score: 0.8656534552574158
  - Access Control Level: SYS_OR_SIG and the following code:
this.mLastLockedUser = p3;
Object v18 = this.mUsers.get(p3);
ShortcutUser v33 = new ShortcutUser(ShortcutService,p3);
this.mUsers.put(p3, phiInstruction);

