The method reportShortcutUsed has the following code snippet:

This is path 1 for the API with depth 2:
public void reportShortcutUsed(String p1, String p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	Object v15 = Objects.requireNonNull(p2);
	boolean v18 = this.mUnlockedUsers.get(p1);
	boolean v19 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v17 = v19;
	boolean v22 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v24 = this.mUsers.get(p2);
	ShortcutUser v25 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v26 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v21 = phiInstruction;
	ShortcutPackage v31 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v34 = this.mPackages.put(p1, v32);
	ShortcutPackage v30 = phiInstruction;
	ShortcutUser v35 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v20 = v30;
	ShortcutInfo v39 = v20.findShortcutById(p2);
	long v42 = Binder.clearCallingIdentity();
	long v41 = v42;
	this.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);
	Binder.restoreCallingIdentity(v41);
	return;
}
This is path 2 for the API with depth 2:
public void reportShortcutUsed(String p1, String p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	Object v15 = Objects.requireNonNull(p2);
	boolean v18 = this.mUnlockedUsers.get(p1);
	boolean v17 = 1;
	boolean v21 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v23 = this.mUsers.get(p2);
	ShortcutUser v24 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v25 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v20 = phiInstruction;
	ShortcutPackage v30 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v33 = this.mPackages.put(p1, v31);
	ShortcutPackage v29 = phiInstruction;
	ShortcutUser v34 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v19 = v29;
	ShortcutInfo v38 = v19.findShortcutById(p2);
	long v41 = Binder.clearCallingIdentity();
	long v40 = v41;
	this.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);
	Binder.restoreCallingIdentity(v40);
	return;
}
This is path 3 for the API with depth 2:
public void reportShortcutUsed(String p1, String p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = v8;
	ApplicationInfo v11 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v12 = ShortcutService.isEphemeralApp(v11);
	boolean v10 = v12;
	Preconditions.checkState((v10 ^ 1), "Ephemeral apps can't use ShortcutManager");
	Object v14 = Objects.requireNonNull(p2);
	boolean v17 = this.mUnlockedUsers.get(p1);
	boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v16 = v18;
	boolean v21 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v23 = this.mUsers.get(p2);
	ShortcutUser v24 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v25 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v20 = phiInstruction;
	ShortcutPackage v30 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v33 = this.mPackages.put(p1, v31);
	ShortcutPackage v29 = phiInstruction;
	ShortcutUser v34 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v19 = v29;
	ShortcutInfo v38 = v19.findShortcutById(p2);
	long v41 = Binder.clearCallingIdentity();
	long v40 = v41;
	this.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);
	Binder.restoreCallingIdentity(v40);
	return;
}

and the following sink code:
['int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);\nApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);\nboolean v13 = ShortcutService.isEphemeralApp(v12);\nthis.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);', 'ShortcutUser v25 = new ShortcutUser(ShortcutService,p2);\nthis.mUsers.put(p2, phiInstruction);\nShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);\nObject v33 = this.mPackages.put(p1, v31);', 'long v7 = ShortcutService.injectClearCallingIdentity();\nlong v41 = Binder.clearCallingIdentity();\nthis.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);\nBinder.restoreCallingIdentity(v40);']

The method reportShortcutUsed has the following similar APIs:

- API Name: getRemainingCallCount(Ljava/lang/String;I)I with Similarity Score: 0.9932212829589844
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutUser v27 = new ShortcutUser(ShortcutService,p2);
this.mUsers.put(p2, phiInstruction);
ShortcutPackage v34 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v36 = this.mPackages.put(p1, v34);

- API Name: removeAllDynamicShortcuts(Ljava/lang/String;I)V with Similarity Score: 0.931759238243103
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutUser v25 = ShortcutService.loadUserLocked(p2);
this.mUsers.put(p2, phiInstruction);
ShortcutPackage v31 = ShortcutUser.getPackageShortcutsIfExists(p1);
Object v34 = this.mPackages.put(p1, v32);

