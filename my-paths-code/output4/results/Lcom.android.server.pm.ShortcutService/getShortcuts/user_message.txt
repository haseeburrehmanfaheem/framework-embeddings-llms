This is path 1 for the API with depth 2:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	boolean v17 = this.mUnlockedUsers.get(p1);
	boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v16 = v18;
	ShortcutService$$ExternalSyntheticLambda19 v19 = new ShortcutService$$ExternalSyntheticLambda19((((phiInstruction | phiInstruction) | phiInstruction) | phiInstruction));
	ArrayList v22 = new ArrayList();
	ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);
	ShortcutPackage v26 = v25.getPackageShortcuts(p1);
	ShortcutUser v27 = v26.getUser();
	v27.onCalledByPublisher(p1);
	ShortcutPackage v24 = v26;
	ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0);
	ParceledListSlice v31 = new ParceledListSlice(v32);
	int v33 = v22.size();
	List v32 = v22;
	ParceledListSlice v21 = v31;
	return v21;
}

This is path 2 for the API with depth 2:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	boolean v17 = this.mUnlockedUsers.get(p1);
	boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v16 = v18;
	ShortcutService$$ExternalSyntheticLambda19 v19 = new ShortcutService$$ExternalSyntheticLambda19((((phiInstruction | phiInstruction) | phiInstruction) | phiInstruction));
	ArrayList v22 = new ArrayList();
	ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);
	ShortcutPackage v26 = v25.getPackageShortcuts(p1);
	ShortcutUser v27 = v26.getUser();
	v27.onCalledByPublisher(p1);
	ShortcutPackage v24 = v26;
	ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0);
	ParceledListSlice v31 = new ParceledListSlice(v32);
	int v33 = v22.size();
	List v32 = v22;
	ParceledListSlice v21 = v31;
	return v21;
}

This is path 3 for the API with depth 2:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	boolean v17 = this.mUnlockedUsers.get(p1);
	boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v16 = v18;
	ShortcutService$$ExternalSyntheticLambda19 v19 = new ShortcutService$$ExternalSyntheticLambda19((((phiInstruction | phiInstruction) | phiInstruction) | phiInstruction));
	ArrayList v22 = new ArrayList();
	ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);
	ShortcutPackage v26 = v25.getPackageShortcuts(p1);
	ShortcutUser v27 = v26.getUser();
	v27.onCalledByPublisher(p1);
	ShortcutPackage v24 = v26;
	ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0);
	ParceledListSlice v31 = new ParceledListSlice(v32);
	int v33 = v22.size();
	List v32 = v22;
	ParceledListSlice v21 = v31;
	return v21;
}
