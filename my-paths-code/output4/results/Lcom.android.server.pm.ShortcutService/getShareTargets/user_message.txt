This is path 1 for the API with depth 2:
public ParceledListSlice getShareTargets(String p1, IntentFilter p2, int p3){
	boolean v8 = this.mUnlockedUsers.get(p1);
	boolean v9 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v7 = v9;
	ArrayList v10 = new ArrayList();
	boolean v14 = this.mUnlockedUsers.get(p1);
	boolean v15 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v13 = v15;
	ShortcutService.wtf("User still locked", 0);
	this.mLastLockedUser = p3;
	Object v18 = this.mUsers.get(p3);
	File v20 = ShortcutService.getUserFile(p1);
	AtomicFile v21 = new AtomicFile(v20);
	FileInputStream v23 = v21.openRead();
	ShortcutUser v24 = ShortcutService.loadUserInternal(p1, v23, 0);
	File v28 = v21.getBaseFile();
	IoUtils.closeQuietly(v23);
	ShortcutUser v19 = 0;
	ShortcutUser v33 = new ShortcutUser(ShortcutService,p3);
	this.mUsers.put(p3, phiInstruction);
	boolean v37 = ShortcutService.injectIsSafeModeEnabled();
	long v38 = ShortcutService.getStatStartTime();
	ArrayList v39 = new ArrayList();
	ShortcutUser v41 = ShortcutService.getUserShortcutsLocked(p1);
	ShortcutService$$ExternalSyntheticLambda18 v42 = new ShortcutService$$ExternalSyntheticLambda18(ShortcutService,v39);
	v41.forAllPackageItems(v42);
	int v45 = v39.size();
	int v46 = v39.size();
	long v47 = v41.getLastAppScanTime();
	ShortcutService.rescanUpdatedPackagesLocked(p1, v47);
	ShortcutService.logDurationStat(8, v38);
	ShortcutService.verifyStates();
	ShortcutUser v12 = phiInstruction;
	ShortcutService$$ExternalSyntheticLambda12 v51 = new ShortcutService$$ExternalSyntheticLambda12(v10,p2);
	v12.forAllPackages(v51);
	ParceledListSlice v54 = new ParceledListSlice(v10);
	return v54;
}

This is path 2 for the API with depth 2:
public ParceledListSlice getShareTargets(String p1, IntentFilter p2, int p3){
	boolean v7 = this.mUnlockedUsers.get(p1);
	boolean v8 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v6 = v8;
	ArrayList v9 = new ArrayList();
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v14 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v12 = v14;
	ShortcutService.wtf("User still locked", 0);
	this.mLastLockedUser = p3;
	Object v17 = this.mUsers.get(p3);
	File v19 = ShortcutService.getUserFile(p1);
	AtomicFile v20 = new AtomicFile(v19);
	FileInputStream v22 = v20.openRead();
	ShortcutUser v23 = ShortcutService.loadUserInternal(p1, v22, 0);
	File v27 = v20.getBaseFile();
	IoUtils.closeQuietly(v22);
	ShortcutUser v18 = 0;
	ShortcutUser v32 = new ShortcutUser(ShortcutService,p3);
	this.mUsers.put(p3, phiInstruction);
	boolean v36 = ShortcutService.injectIsSafeModeEnabled();
	long v37 = ShortcutService.getStatStartTime();
	ArrayList v38 = new ArrayList();
	ShortcutUser v40 = ShortcutService.getUserShortcutsLocked(p1);
	ShortcutService$$ExternalSyntheticLambda18 v41 = new ShortcutService$$ExternalSyntheticLambda18(ShortcutService,v38);
	v40.forAllPackageItems(v41);
	int v44 = v38.size();
	int v45 = v38.size();
	long v46 = v40.getLastAppScanTime();
	ShortcutService.rescanUpdatedPackagesLocked(p1, v46);
	ShortcutService.logDurationStat(8, v37);
	ShortcutService.verifyStates();
	ShortcutUser v11 = phiInstruction;
	ShortcutService$$ExternalSyntheticLambda12 v50 = new ShortcutService$$ExternalSyntheticLambda12(v9,p2);
	v11.forAllPackages(v50);
	ParceledListSlice v53 = new ParceledListSlice(v9);
	return v53;
}

This is path 3 for the API with depth 2:
public ParceledListSlice getShareTargets(String p1, IntentFilter p2, int p3){
	boolean v8 = this.mUnlockedUsers.get(p1);
	boolean v7 = 1;
	ArrayList v9 = new ArrayList();
	boolean v13 = this.mUnlockedUsers.get(p1);
	boolean v14 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v12 = v14;
	ShortcutService.wtf("User still locked", 0);
	this.mLastLockedUser = p3;
	Object v17 = this.mUsers.get(p3);
	File v19 = ShortcutService.getUserFile(p1);
	AtomicFile v20 = new AtomicFile(v19);
	FileInputStream v22 = v20.openRead();
	ShortcutUser v23 = ShortcutService.loadUserInternal(p1, v22, 0);
	File v27 = v20.getBaseFile();
	IoUtils.closeQuietly(v22);
	ShortcutUser v18 = 0;
	ShortcutUser v32 = new ShortcutUser(ShortcutService,p3);
	this.mUsers.put(p3, phiInstruction);
	boolean v36 = ShortcutService.injectIsSafeModeEnabled();
	long v37 = ShortcutService.getStatStartTime();
	ArrayList v38 = new ArrayList();
	ShortcutUser v40 = ShortcutService.getUserShortcutsLocked(p1);
	ShortcutService$$ExternalSyntheticLambda18 v41 = new ShortcutService$$ExternalSyntheticLambda18(ShortcutService,v38);
	v40.forAllPackageItems(v41);
	int v44 = v38.size();
	int v45 = v38.size();
	long v46 = v40.getLastAppScanTime();
	ShortcutService.rescanUpdatedPackagesLocked(p1, v46);
	ShortcutService.logDurationStat(8, v37);
	ShortcutService.verifyStates();
	ShortcutUser v11 = phiInstruction;
	ShortcutService$$ExternalSyntheticLambda12 v50 = new ShortcutService$$ExternalSyntheticLambda12(v9,p2);
	v11.forAllPackages(v50);
	ParceledListSlice v53 = new ParceledListSlice(v9);
	return v53;
}
