The method removeLongLivedShortcuts has the following code snippet:

This is path 1 for the API with depth 2:
public void removeLongLivedShortcuts(String p1, List p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	Object v15 = Objects.requireNonNull(p2, "shortcutIds must be provided");
	boolean v18 = this.mUnlockedUsers.get(p1);
	boolean v19 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v17 = v19;
	boolean v22 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v24 = this.mUsers.get(p2);
	ShortcutUser v25 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v26 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v21 = phiInstruction;
	ShortcutPackage v31 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v34 = this.mPackages.put(p1, v32);
	ShortcutPackage v30 = phiInstruction;
	ShortcutUser v35 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v20 = v30;
	v20.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);
	int v40 = p2.size();
	long v43 = System.currentTimeMillis();
	long v42 = v43;
	ShortcutPackage$$ExternalSyntheticLambda4 v44 = new ShortcutPackage$$ExternalSyntheticLambda4(v42);
	int v47 = this.mShortcuts.size();
	ArrayMap v49 = new ArrayMap();
	ShortcutPackage$$ExternalSyntheticLambda40 v51 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v49);
	ShortcutPackage.forEachShortcut(v51);
	ArrayMap v48 = v49;
	int v54 = v48.size();
	Object v56 = Objects.requireNonNull(v20);
	String v57 = this.mPackageName;
	int v58 = this.mPackageUserId;
	ShortcutService$$ExternalSyntheticLambda28 v60 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v58,v57);
	Runnable v59 = v60;
	Object v63 = Objects.requireNonNull(p1);
	Object v64 = Objects.requireNonNull(v59);
	this.mHandler.removeCallbacksAndMessages(p1);
	boolean v66 = this.mHandler.postDelayed(v59, p1, 100);
	List v68 = ShortcutService.removeNonKeyFields(p2);
	List v69 = ShortcutService.removeNonKeyFields(p3);
	UserHandle v70 = UserHandle.of(v58);
	ShortcutService$$ExternalSyntheticLambda26 v71 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v58,v68,v57,v70,v69);
	ShortcutService.injectPostToHandler(v71);
	ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
	boolean v77 = 0;
	ShortcutService$$ExternalSyntheticLambda25 v79 = new ShortcutService$$ExternalSyntheticLambda25();
	ShortcutService.forEachLoadedUserLocked(v79);
	return;
}
This is path 2 for the API with depth 2:
public void removeLongLivedShortcuts(String p1, List p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	Object v15 = Objects.requireNonNull(p2, "shortcutIds must be provided");
	boolean v18 = this.mUnlockedUsers.get(p1);
	boolean v17 = 1;
	boolean v21 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v23 = this.mUsers.get(p2);
	ShortcutUser v24 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v25 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v20 = phiInstruction;
	ShortcutPackage v30 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v33 = this.mPackages.put(p1, v31);
	ShortcutPackage v29 = phiInstruction;
	ShortcutUser v34 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v19 = v29;
	v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);
	int v39 = p2.size();
	long v42 = System.currentTimeMillis();
	long v41 = v42;
	ShortcutPackage$$ExternalSyntheticLambda4 v43 = new ShortcutPackage$$ExternalSyntheticLambda4(v41);
	int v46 = this.mShortcuts.size();
	ArrayMap v48 = new ArrayMap();
	ShortcutPackage$$ExternalSyntheticLambda40 v50 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v48);
	ShortcutPackage.forEachShortcut(v50);
	ArrayMap v47 = v48;
	int v53 = v47.size();
	Object v55 = Objects.requireNonNull(v19);
	String v56 = this.mPackageName;
	int v57 = this.mPackageUserId;
	ShortcutService$$ExternalSyntheticLambda28 v59 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v57,v56);
	Runnable v58 = v59;
	Object v62 = Objects.requireNonNull(p1);
	Object v63 = Objects.requireNonNull(v58);
	this.mHandler.removeCallbacksAndMessages(p1);
	boolean v65 = this.mHandler.postDelayed(v58, p1, 100);
	List v67 = ShortcutService.removeNonKeyFields(p2);
	List v68 = ShortcutService.removeNonKeyFields(p3);
	UserHandle v69 = UserHandle.of(v57);
	ShortcutService$$ExternalSyntheticLambda26 v70 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v57,v67,v56,v69,v68);
	ShortcutService.injectPostToHandler(v70);
	ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
	boolean v76 = 0;
	ShortcutService$$ExternalSyntheticLambda25 v78 = new ShortcutService$$ExternalSyntheticLambda25();
	ShortcutService.forEachLoadedUserLocked(v78);
	return;
}
This is path 3 for the API with depth 2:
public void removeLongLivedShortcuts(String p1, List p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = v8;
	ApplicationInfo v11 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v12 = ShortcutService.isEphemeralApp(v11);
	boolean v10 = v12;
	Preconditions.checkState((v10 ^ 1), "Ephemeral apps can't use ShortcutManager");
	Object v14 = Objects.requireNonNull(p2, "shortcutIds must be provided");
	boolean v17 = this.mUnlockedUsers.get(p1);
	boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v16 = v18;
	boolean v21 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v23 = this.mUsers.get(p2);
	ShortcutUser v24 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v25 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v20 = phiInstruction;
	ShortcutPackage v30 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v33 = this.mPackages.put(p1, v31);
	ShortcutPackage v29 = phiInstruction;
	ShortcutUser v34 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v19 = v29;
	v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);
	int v39 = p2.size();
	long v42 = System.currentTimeMillis();
	long v41 = v42;
	ShortcutPackage$$ExternalSyntheticLambda4 v43 = new ShortcutPackage$$ExternalSyntheticLambda4(v41);
	int v46 = this.mShortcuts.size();
	ArrayMap v48 = new ArrayMap();
	ShortcutPackage$$ExternalSyntheticLambda40 v50 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v48);
	ShortcutPackage.forEachShortcut(v50);
	ArrayMap v47 = v48;
	int v53 = v47.size();
	Object v55 = Objects.requireNonNull(v19);
	String v56 = this.mPackageName;
	int v57 = this.mPackageUserId;
	ShortcutService$$ExternalSyntheticLambda28 v59 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v57,v56);
	Runnable v58 = v59;
	Object v62 = Objects.requireNonNull(p1);
	Object v63 = Objects.requireNonNull(v58);
	this.mHandler.removeCallbacksAndMessages(p1);
	boolean v65 = this.mHandler.postDelayed(v58, p1, 100);
	List v67 = ShortcutService.removeNonKeyFields(p2);
	List v68 = ShortcutService.removeNonKeyFields(p3);
	UserHandle v69 = UserHandle.of(v57);
	ShortcutService$$ExternalSyntheticLambda26 v70 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v57,v67,v56,v69,v68);
	ShortcutService.injectPostToHandler(v70);
	ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
	boolean v76 = 0;
	ShortcutService$$ExternalSyntheticLambda25 v78 = new ShortcutService$$ExternalSyntheticLambda25();
	ShortcutService.forEachLoadedUserLocked(v78);
	return;
}

and the following sink code:
['int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);\nObject v15 = Objects.requireNonNull(p2, "shortcutIds must be provided");\nShortcutUser v25 = new ShortcutUser(ShortcutService,p2);\nthis.mUsers.put(p2, phiInstruction);', 'ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);\nboolean v13 = ShortcutService.isEphemeralApp(v12);\nPreconditions.checkState((v11 ^ 1), "Ephemeral apps can\'t use ShortcutManager");', 'ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);\nObject v33 = this.mPackages.put(p1, v31);', 'ShortcutPackage v20 = phiInstruction;\nv20.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);']

The method removeLongLivedShortcuts has the following similar APIs:

- API Name: disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V with Similarity Score: 0.9617867469787598
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v33 = this.mPackages.put(p1, v31);
v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);

- API Name: onApplicationActive(Ljava/lang/String;I)V with Similarity Score: 0.9426370859146118
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v20 = this.mPackages.put(p1, v18);
v6.resetRateLimitingForCommandLineNoSaving();

