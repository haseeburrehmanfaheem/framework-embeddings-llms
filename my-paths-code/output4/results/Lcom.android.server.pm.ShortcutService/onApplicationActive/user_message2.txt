The method onApplicationActive has the following code snippet:

This is path 1 for the API with depth 2:
public void onApplicationActive(String p1, int p2){
	boolean v2 = v4;
	boolean v5 = p0.isUserUnlockedL(p2);
	boolean v8 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v10 = this.mUsers.get(p2);
	ShortcutUser v11 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v12 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v7 = phiInstruction;
	ShortcutPackage v17 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v20 = this.mPackages.put(p1, v18);
	ShortcutPackage v16 = phiInstruction;
	ShortcutPackage v6 = v16;
	v6.resetRateLimitingForCommandLineNoSaving();
	File v24 = new File(v25,"shortcuts.xml");
	File v25 = ShortcutService.injectUserDataPath(p1);
	File v23 = v24;
	File v27 = v23.getParentFile();
	boolean v28 = v27.mkdirs();
	AtomicFile v29 = new AtomicFile(v23);
	FileOutputStream v31 = v29.startWrite();
	TypedXmlSerializer v33 = Xml.newFastSerializer();
	String v34 = StandardCharsets.UTF_8.name();
	v33.setOutput(v31, v34);
	phiInstruction.startDocument(0, Boolean.TRUE);
	ShortcutUser v37 = ShortcutService.getUserShortcutsLocked(p1);
	v37.saveToXml(phiInstruction, 0);
	phiInstruction.endDocument();
	v31.flush();
	v29.finishWrite(v31);
	long v43 = ShortcutService.getStatStartTime();
	ShortcutUser v44 = ShortcutService.getUserShortcutsLocked(p1);
	File v45 = ShortcutService.getUserBitmapFilePath(p1);
	File v46 = v45.listFiles();
	ShortcutService.logDurationStat(5, v43);
	File v51 = v29.getBaseFile();
	v29.failWrite(phiInstruction);
	boolean v57 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v59 = this.mUsers.get(p1);
	ShortcutUser v60 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v61 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v56 = phiInstruction;
	int v66 = this.mPackages.size();
	LogMaker v67 = new LogMaker(1717);
	LogMaker v69 = v67.setType(1);
	LogMaker v70 = v69.setSubtype(this.mUserId);
	this.mMetricsLogger.write(v70);
	LogMaker v72 = v67.setType(2);
	LogMaker v73 = v72.setSubtype(phiInstruction);
	this.mMetricsLogger.write(v73);
	LogMaker v75 = v67.setType(3);
	LogMaker v76 = v75.setSubtype(phiInstruction);
	this.mMetricsLogger.write(v76);
	return;
}
This is path 2 for the API with depth 2:
public void onApplicationActive(String p1, int p2){
	boolean v2 = v4;
	boolean v5 = p0.isUserUnlockedL(p2);
	boolean v8 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v10 = this.mUsers.get(p2);
	ShortcutUser v11 = ShortcutService.loadUserLocked(p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v7 = phiInstruction;
	ShortcutPackage v15 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v16 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v18 = this.mPackages.put(p1, v16);
	ShortcutPackage v14 = phiInstruction;
	ShortcutPackage v6 = v14;
	v6.resetRateLimitingForCommandLineNoSaving();
	File v22 = new File(v23,"shortcuts.xml");
	File v23 = ShortcutService.injectUserDataPath(p1);
	File v21 = v22;
	File v25 = v21.getParentFile();
	boolean v26 = v25.mkdirs();
	AtomicFile v27 = new AtomicFile(v21);
	FileOutputStream v29 = v27.startWrite();
	TypedXmlSerializer v31 = Xml.newFastSerializer();
	String v32 = StandardCharsets.UTF_8.name();
	v31.setOutput(v29, v32);
	phiInstruction.startDocument(0, Boolean.TRUE);
	ShortcutUser v35 = ShortcutService.getUserShortcutsLocked(p1);
	v35.saveToXml(phiInstruction, 0);
	phiInstruction.endDocument();
	v29.flush();
	v27.finishWrite(v29);
	long v41 = ShortcutService.getStatStartTime();
	ShortcutUser v42 = ShortcutService.getUserShortcutsLocked(p1);
	File v43 = ShortcutService.getUserBitmapFilePath(p1);
	File v44 = v43.listFiles();
	ShortcutService.logDurationStat(5, v41);
	File v49 = v27.getBaseFile();
	v27.failWrite(phiInstruction);
	boolean v55 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v57 = this.mUsers.get(p1);
	ShortcutUser v58 = ShortcutService.loadUserLocked(p1);
	ShortcutUser v59 = new ShortcutUser(ShortcutService,p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v54 = phiInstruction;
	int v64 = this.mPackages.size();
	LogMaker v65 = new LogMaker(1717);
	LogMaker v67 = v65.setType(1);
	LogMaker v68 = v67.setSubtype(this.mUserId);
	this.mMetricsLogger.write(v68);
	LogMaker v70 = v65.setType(2);
	LogMaker v71 = v70.setSubtype(phiInstruction);
	this.mMetricsLogger.write(v71);
	LogMaker v73 = v65.setType(3);
	LogMaker v74 = v73.setSubtype(phiInstruction);
	this.mMetricsLogger.write(v74);
	return;
}
This is path 3 for the API with depth 2:
public void onApplicationActive(String p1, int p2){
	boolean v2 = v4;
	boolean v5 = p0.isUserUnlockedL(p2);
	boolean v8 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v10 = this.mUsers.get(p2);
	ShortcutUser v11 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v12 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v7 = phiInstruction;
	ShortcutPackage v17 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v20 = this.mPackages.put(p1, v18);
	ShortcutPackage v16 = phiInstruction;
	ShortcutPackage v6 = v16;
	v6.resetRateLimitingForCommandLineNoSaving();
	File v24 = new File(v25,"shortcuts.xml");
	File v25 = ShortcutService.injectUserDataPath(p1);
	File v23 = v24;
	File v27 = v23.getParentFile();
	boolean v28 = v27.mkdirs();
	AtomicFile v29 = new AtomicFile(v23);
	FileOutputStream v31 = v29.startWrite();
	TypedXmlSerializer v33 = Xml.newFastSerializer();
	String v34 = StandardCharsets.UTF_8.name();
	v33.setOutput(v31, v34);
	phiInstruction.startDocument(0, Boolean.TRUE);
	ShortcutUser v37 = ShortcutService.getUserShortcutsLocked(p1);
	v37.saveToXml(phiInstruction, 0);
	phiInstruction.endDocument();
	v31.flush();
	v29.finishWrite(v31);
	long v43 = ShortcutService.getStatStartTime();
	ShortcutUser v44 = ShortcutService.getUserShortcutsLocked(p1);
	File v45 = ShortcutService.getUserBitmapFilePath(p1);
	File v46 = v45.listFiles();
	ShortcutService.logDurationStat(5, v43);
	File v51 = v29.getBaseFile();
	v29.failWrite(phiInstruction);
	boolean v57 = ShortcutService.isUserUnlockedL(p1);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v59 = this.mUsers.get(p1);
	ShortcutUser v60 = ShortcutService.loadUserLocked(p1);
	this.mUsers.put(p1, phiInstruction);
	ShortcutService.checkPackageChanges(p1);
	ShortcutUser v56 = phiInstruction;
	int v64 = this.mPackages.size();
	LogMaker v65 = new LogMaker(1717);
	LogMaker v67 = v65.setType(1);
	LogMaker v68 = v67.setSubtype(this.mUserId);
	this.mMetricsLogger.write(v68);
	LogMaker v70 = v65.setType(2);
	LogMaker v71 = v70.setSubtype(phiInstruction);
	this.mMetricsLogger.write(v71);
	LogMaker v73 = v65.setType(3);
	LogMaker v74 = v73.setSubtype(phiInstruction);
	this.mMetricsLogger.write(v74);
	return;
}

and the following sink code:
['boolean v5 = p0.isUserUnlockedL(p2);\nboolean v8 = ShortcutService.isUserUnlockedL(p2);\nthis.mLastLockedUser = p2;\nShortcutUser v11 = ShortcutService.loadUserLocked(p2);', 'ShortcutPackage v18 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);\nObject v20 = this.mPackages.put(p1, v18);\nv6.resetRateLimitingForCommandLineNoSaving();', 'File v24 = new File(v25,"shortcuts.xml");\nAtomicFile v29 = new AtomicFile(v23);\nv31.flush();\nv29.finishWrite(v31);']

The method onApplicationActive has the following similar APIs:

- API Name: removeLongLivedShortcuts(Ljava/lang/String;Ljava/util/List;I)V with Similarity Score: 0.9426370859146118
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v33 = this.mPackages.put(p1, v31);

- API Name: disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V with Similarity Score: 0.931159257888794
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutPackage v31 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
Object v33 = this.mPackages.put(p1, v31);
v19.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);

