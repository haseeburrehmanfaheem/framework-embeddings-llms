This is path 1 for the API with depth 2:
public int getRemainingCallCount(String p1, int p2){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	int v15 = p0.injectBinderCallingPid();
	int v16 = p0.injectBinderCallingUid();
	boolean v17 = p0.injectHasUnlimitedShortcutsApiCallsPermission(v15, v16);
	boolean v20 = this.mUnlockedUsers.get(p1);
	boolean v21 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v19 = v21;
	boolean v24 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v26 = this.mUsers.get(p2);
	ShortcutUser v27 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v28 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v23 = phiInstruction;
	ShortcutPackage v33 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v34 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v36 = this.mPackages.put(p1, v34);
	ShortcutPackage v32 = phiInstruction;
	ShortcutUser v37 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v22 = v32;
	int v43 = this.mUidState.get(this.mPackageUid, 20);
	boolean v44 = ShortcutService.isProcessStateForeground(v43);
	int v45 = this.mActivityManagerInternal.getUidProcessState(this.mPackageUid);
	boolean v46 = ShortcutService.isProcessStateForeground(v45);
	boolean v42 = v46;
	long v48 = this.mUidLastForegroundElapsedTime.get(this.mPackageUid);
	long v47 = v48;
	long v50 = SystemClock.elapsedRealtime();
	long v49 = v50;
	this.mLastKnownForegroundElapsedTime = v49;
	this.mApiCallCount = 0;
	ShortcutPackage.scheduleSave();
	ShortcutService.updateTimesLocked();
	long v53 = this.mRawLastResetTime;
	long v56 = System.currentTimeMillis();
	long v55 = v56;
	boolean v57 = phiInstruction;
	this.mApiCallCount = 0;
	this.mLastResetTime = v53;
	int v41 = this.mApiCallCount;
	return (this.mMaxUpdatesPerInterval - v41);
}

This is path 2 for the API with depth 2:
public int getRemainingCallCount(String p1, int p2){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	int v15 = p0.injectBinderCallingPid();
	int v16 = p0.injectBinderCallingUid();
	boolean v17 = p0.injectHasUnlimitedShortcutsApiCallsPermission(v15, v16);
	boolean v20 = this.mUnlockedUsers.get(p1);
	boolean v21 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v19 = v21;
	boolean v24 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v26 = this.mUsers.get(p2);
	ShortcutUser v27 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v28 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v23 = phiInstruction;
	ShortcutPackage v33 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v34 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v36 = this.mPackages.put(p1, v34);
	ShortcutPackage v32 = phiInstruction;
	ShortcutUser v37 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v22 = v32;
	int v43 = this.mUidState.get(this.mPackageUid, 20);
	boolean v44 = ShortcutService.isProcessStateForeground(v43);
	int v45 = this.mActivityManagerInternal.getUidProcessState(this.mPackageUid);
	boolean v46 = ShortcutService.isProcessStateForeground(v45);
	boolean v42 = v46;
	long v48 = this.mUidLastForegroundElapsedTime.get(this.mPackageUid);
	long v47 = v48;
	long v50 = SystemClock.elapsedRealtime();
	long v49 = v50;
	this.mLastKnownForegroundElapsedTime = v49;
	this.mApiCallCount = 0;
	ShortcutPackage.scheduleSave();
	ShortcutService.updateTimesLocked();
	long v53 = this.mRawLastResetTime;
	long v56 = System.currentTimeMillis();
	long v55 = v56;
	boolean v57 = phiInstruction;
	this.mApiCallCount = 0;
	this.mLastResetTime = v53;
	int v41 = this.mApiCallCount;
	return (this.mMaxUpdatesPerInterval - v41);
}

This is path 3 for the API with depth 2:
public int getRemainingCallCount(String p1, int p2){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	int v15 = p0.injectBinderCallingPid();
	int v16 = p0.injectBinderCallingUid();
	boolean v17 = p0.injectHasUnlimitedShortcutsApiCallsPermission(v15, v16);
	boolean v20 = this.mUnlockedUsers.get(p1);
	boolean v19 = 1;
	boolean v23 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v25 = this.mUsers.get(p2);
	ShortcutUser v26 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v27 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v22 = phiInstruction;
	ShortcutPackage v32 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v33 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v35 = this.mPackages.put(p1, v33);
	ShortcutPackage v31 = phiInstruction;
	ShortcutUser v36 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v21 = v31;
	int v42 = this.mUidState.get(this.mPackageUid, 20);
	boolean v43 = ShortcutService.isProcessStateForeground(v42);
	int v44 = this.mActivityManagerInternal.getUidProcessState(this.mPackageUid);
	boolean v45 = ShortcutService.isProcessStateForeground(v44);
	boolean v41 = v45;
	long v47 = this.mUidLastForegroundElapsedTime.get(this.mPackageUid);
	long v46 = v47;
	long v49 = SystemClock.elapsedRealtime();
	long v48 = v49;
	this.mLastKnownForegroundElapsedTime = v48;
	this.mApiCallCount = 0;
	ShortcutPackage.scheduleSave();
	ShortcutService.updateTimesLocked();
	long v52 = this.mRawLastResetTime;
	long v55 = System.currentTimeMillis();
	long v54 = v55;
	boolean v56 = phiInstruction;
	this.mApiCallCount = 0;
	this.mLastResetTime = v52;
	int v40 = this.mApiCallCount;
	return (this.mMaxUpdatesPerInterval - v40);
}
