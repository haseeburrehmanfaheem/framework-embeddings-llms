The method pushDynamicShortcut has the following code snippet:

This is path 1 for the API with depth 2:
public void pushDynamicShortcut(String p1, ShortcutInfo p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	String v16 = this.mPackageName;
	boolean v17 = Objects.equals(p1, v16);
	ArrayList v18 = new ArrayList();
	boolean v22 = this.mUnlockedUsers.get(p1);
	boolean v23 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v21 = v23;
	boolean v26 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v28 = this.mUsers.get(p2);
	ShortcutUser v29 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v30 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v25 = phiInstruction;
	ShortcutPackage v35 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v36 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v38 = this.mPackages.put(p1, v36);
	ShortcutPackage v34 = phiInstruction;
	ShortcutUser v39 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v24 = v34;
	String v43 = p2.getId();
	Object v46 = this.mShortcuts.get(p1);
	ShortcutInfo v45 = v46;
	boolean v48 = v45.isImmutable();
	boolean v49 = v45.isVisibleToPublisher();
	ShortcutInfo v50 = new ShortcutInfo(1);
	List v51 = Arrays.asList(v50);
	p0.fillInDefaultActivity(v51);
	boolean v53 = p2.hasRank();
	p2.setRank(0);
	ShortcutPackage$$ExternalSyntheticLambda18 v56 = new ShortcutPackage$$ExternalSyntheticLambda18();
	int v59 = this.mShortcuts.size();
	p2.setImplicitRank(0);
	boolean v63 = p1.isReturnedByServer();
	int v64 = Log.w("ShortcutService", "Re-publishing ShortcutInfo returned by server is not supported. Some information such as icon may lost from shortcut.");
	ComponentName v65 = p1.getActivity();
	String v66 = p1.getPackage();
	ComponentName v67 = p1.getActivity();
	String v68 = v67.getPackageName();
	boolean v69 = v66.equals(v68);
	StringBuilder v70 = new StringBuilder();
	StringBuilder v72 = v70.append("Cannot publish shortcut: activity ");
	ComponentName v73 = p1.getActivity();
	StringBuilder v74 = v70.append(v73);
	StringBuilder v75 = v70.append(" does not belong to package ");
	String v76 = p1.getPackage();
	StringBuilder v77 = v70.append(v76);
	String v78 = v70.toString();
	Preconditions.checkState(v69, v78);
	ComponentName v80 = p1.getActivity();
	int v81 = p1.getUserId();
	boolean v82 = ShortcutService.injectIsMainActivity(v80, v81);
	StringBuilder v83 = new StringBuilder();
	StringBuilder v85 = v83.append("Cannot publish shortcut: activity ");
	ComponentName v86 = p1.getActivity();
	StringBuilder v87 = v83.append(v86);
	StringBuilder v88 = v83.append(" is not main activity");
	String v89 = v83.toString();
	Preconditions.checkState(v82, v89);
	p1.enforceMandatoryFields(0);
	ComponentName v92 = p1.getActivity();
	Preconditions.checkState(phiInstruction, "Cannot publish shortcut: target activity is not set");
	Icon v94 = p1.getIcon();
	Icon v95 = p1.getIcon();
	Icon v96 = ShortcutInfo.validateIcon(v95);
	int v97 = p1.getFlags();
	p1.replaceFlags((v97 & 8192));
	p2.setRankChanged();
	boolean v100 = v24.pushDynamicShortcut(p2, v18);
	boolean v101 = v18.isEmpty();
	Object v102 = v18.get(0);
	List v103 = Collections.singletonList(v102);
	v18.clear();
	boolean v105 = v18.add(p2);
	long v108 = System.currentTimeMillis();
	long v107 = v108;
	ShortcutPackage$$ExternalSyntheticLambda4 v109 = new ShortcutPackage$$ExternalSyntheticLambda4(v107);
	int v112 = this.mShortcuts.size();
	ArrayMap v114 = new ArrayMap();
	ShortcutPackage$$ExternalSyntheticLambda40 v116 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v114);
	ShortcutPackage.forEachShortcut(v116);
	ArrayMap v113 = v114;
	int v119 = v113.size();
	Object v121 = Objects.requireNonNull(v24);
	String v122 = this.mPackageName;
	int v123 = this.mPackageUserId;
	ShortcutService$$ExternalSyntheticLambda28 v125 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v123,v122);
	Runnable v124 = v125;
	Object v128 = Objects.requireNonNull(p1);
	Object v129 = Objects.requireNonNull(v124);
	this.mHandler.removeCallbacksAndMessages(p1);
	boolean v131 = this.mHandler.postDelayed(v124, p1, 100);
	List v133 = ShortcutService.removeNonKeyFields(p2);
	List v134 = ShortcutService.removeNonKeyFields(p3);
	UserHandle v135 = UserHandle.of(v123);
	ShortcutService$$ExternalSyntheticLambda26 v136 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v123,v133,v122,v135,v134);
	ShortcutService.injectPostToHandler(v136);
	ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
	String v141 = p2.getId();
	long v144 = Binder.clearCallingIdentity();
	long v143 = v144;
	this.mUsageStatsManagerInternal.reportShortcutUsage(p1, v141, p3);
	Binder.restoreCallingIdentity(v143);
	boolean v149 = 0;
	ShortcutService$$ExternalSyntheticLambda25 v151 = new ShortcutService$$ExternalSyntheticLambda25();
	ShortcutService.forEachLoadedUserLocked(v151);
	return;
}
This is path 2 for the API with depth 2:
public void pushDynamicShortcut(String p1, ShortcutInfo p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	String v16 = this.mPackageName;
	boolean v17 = Objects.equals(p1, v16);
	ArrayList v18 = new ArrayList();
	boolean v22 = this.mUnlockedUsers.get(p1);
	boolean v23 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	boolean v21 = v23;
	boolean v26 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v28 = this.mUsers.get(p2);
	ShortcutUser v29 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v30 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v25 = phiInstruction;
	ShortcutPackage v35 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v36 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v38 = this.mPackages.put(p1, v36);
	ShortcutPackage v34 = phiInstruction;
	ShortcutUser v39 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v24 = v34;
	String v43 = p2.getId();
	Object v46 = this.mShortcuts.get(p1);
	ShortcutInfo v45 = v46;
	boolean v48 = v45.isImmutable();
	boolean v49 = v45.isVisibleToPublisher();
	ShortcutInfo v50 = new ShortcutInfo(1);
	List v51 = Arrays.asList(v50);
	p0.fillInDefaultActivity(v51);
	boolean v53 = p2.hasRank();
	ShortcutPackage$$ExternalSyntheticLambda18 v55 = new ShortcutPackage$$ExternalSyntheticLambda18();
	int v58 = this.mShortcuts.size();
	p2.setImplicitRank(0);
	boolean v62 = p1.isReturnedByServer();
	int v63 = Log.w("ShortcutService", "Re-publishing ShortcutInfo returned by server is not supported. Some information such as icon may lost from shortcut.");
	ComponentName v64 = p1.getActivity();
	String v65 = p1.getPackage();
	ComponentName v66 = p1.getActivity();
	String v67 = v66.getPackageName();
	boolean v68 = v65.equals(v67);
	StringBuilder v69 = new StringBuilder();
	StringBuilder v71 = v69.append("Cannot publish shortcut: activity ");
	ComponentName v72 = p1.getActivity();
	StringBuilder v73 = v69.append(v72);
	StringBuilder v74 = v69.append(" does not belong to package ");
	String v75 = p1.getPackage();
	StringBuilder v76 = v69.append(v75);
	String v77 = v69.toString();
	Preconditions.checkState(v68, v77);
	ComponentName v79 = p1.getActivity();
	int v80 = p1.getUserId();
	boolean v81 = ShortcutService.injectIsMainActivity(v79, v80);
	StringBuilder v82 = new StringBuilder();
	StringBuilder v84 = v82.append("Cannot publish shortcut: activity ");
	ComponentName v85 = p1.getActivity();
	StringBuilder v86 = v82.append(v85);
	StringBuilder v87 = v82.append(" is not main activity");
	String v88 = v82.toString();
	Preconditions.checkState(v81, v88);
	p1.enforceMandatoryFields(0);
	ComponentName v91 = p1.getActivity();
	Preconditions.checkState(phiInstruction, "Cannot publish shortcut: target activity is not set");
	Icon v93 = p1.getIcon();
	Icon v94 = p1.getIcon();
	Icon v95 = ShortcutInfo.validateIcon(v94);
	int v96 = p1.getFlags();
	p1.replaceFlags((v96 & 8192));
	p2.setRankChanged();
	boolean v99 = v24.pushDynamicShortcut(p2, v18);
	boolean v100 = v18.isEmpty();
	Object v101 = v18.get(0);
	List v102 = Collections.singletonList(v101);
	v18.clear();
	boolean v104 = v18.add(p2);
	long v107 = System.currentTimeMillis();
	long v106 = v107;
	ShortcutPackage$$ExternalSyntheticLambda4 v108 = new ShortcutPackage$$ExternalSyntheticLambda4(v106);
	int v111 = this.mShortcuts.size();
	ArrayMap v113 = new ArrayMap();
	ShortcutPackage$$ExternalSyntheticLambda40 v115 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v113);
	ShortcutPackage.forEachShortcut(v115);
	ArrayMap v112 = v113;
	int v118 = v112.size();
	Object v120 = Objects.requireNonNull(v24);
	String v121 = this.mPackageName;
	int v122 = this.mPackageUserId;
	ShortcutService$$ExternalSyntheticLambda28 v124 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v122,v121);
	Runnable v123 = v124;
	Object v127 = Objects.requireNonNull(p1);
	Object v128 = Objects.requireNonNull(v123);
	this.mHandler.removeCallbacksAndMessages(p1);
	boolean v130 = this.mHandler.postDelayed(v123, p1, 100);
	List v132 = ShortcutService.removeNonKeyFields(p2);
	List v133 = ShortcutService.removeNonKeyFields(p3);
	UserHandle v134 = UserHandle.of(v122);
	ShortcutService$$ExternalSyntheticLambda26 v135 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v122,v132,v121,v134,v133);
	ShortcutService.injectPostToHandler(v135);
	ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
	String v140 = p2.getId();
	long v143 = Binder.clearCallingIdentity();
	long v142 = v143;
	this.mUsageStatsManagerInternal.reportShortcutUsage(p1, v140, p3);
	Binder.restoreCallingIdentity(v142);
	boolean v148 = 0;
	ShortcutService$$ExternalSyntheticLambda25 v150 = new ShortcutService$$ExternalSyntheticLambda25();
	ShortcutService.forEachLoadedUserLocked(v150);
	return;
}
This is path 3 for the API with depth 2:
public void pushDynamicShortcut(String p1, ShortcutInfo p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
	boolean v13 = ShortcutService.isEphemeralApp(v12);
	boolean v11 = v13;
	Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
	String v16 = this.mPackageName;
	boolean v17 = Objects.equals(p1, v16);
	ArrayList v18 = new ArrayList();
	boolean v22 = this.mUnlockedUsers.get(p1);
	boolean v21 = 1;
	boolean v25 = ShortcutService.isUserUnlockedL(p2);
	ShortcutService.wtf("User still locked");
	this.mLastLockedUser = p2;
	Object v27 = this.mUsers.get(p2);
	ShortcutUser v28 = ShortcutService.loadUserLocked(p2);
	ShortcutUser v29 = new ShortcutUser(ShortcutService,p2);
	this.mUsers.put(p2, phiInstruction);
	ShortcutService.checkPackageChanges(p2);
	ShortcutUser v24 = phiInstruction;
	ShortcutPackage v34 = ShortcutUser.getPackageShortcutsIfExists(p1);
	ShortcutPackage v35 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
	Object v37 = this.mPackages.put(p1, v35);
	ShortcutPackage v33 = phiInstruction;
	ShortcutUser v38 = this.mShortcutUser;
	ShortcutUser.detectLocaleChange();
	ShortcutUser.rescanPackageIfNeeded(p1, 0);
	ShortcutPackage v23 = v33;
	String v42 = p2.getId();
	Object v45 = this.mShortcuts.get(p1);
	ShortcutInfo v44 = v45;
	boolean v47 = v44.isImmutable();
	boolean v48 = v44.isVisibleToPublisher();
	ShortcutInfo v49 = new ShortcutInfo(1);
	List v50 = Arrays.asList(v49);
	p0.fillInDefaultActivity(v50);
	boolean v52 = p2.hasRank();
	p2.setRank(0);
	ShortcutPackage$$ExternalSyntheticLambda18 v55 = new ShortcutPackage$$ExternalSyntheticLambda18();
	int v58 = this.mShortcuts.size();
	p2.setImplicitRank(0);
	boolean v62 = p1.isReturnedByServer();
	int v63 = Log.w("ShortcutService", "Re-publishing ShortcutInfo returned by server is not supported. Some information such as icon may lost from shortcut.");
	ComponentName v64 = p1.getActivity();
	String v65 = p1.getPackage();
	ComponentName v66 = p1.getActivity();
	String v67 = v66.getPackageName();
	boolean v68 = v65.equals(v67);
	StringBuilder v69 = new StringBuilder();
	StringBuilder v71 = v69.append("Cannot publish shortcut: activity ");
	ComponentName v72 = p1.getActivity();
	StringBuilder v73 = v69.append(v72);
	StringBuilder v74 = v69.append(" does not belong to package ");
	String v75 = p1.getPackage();
	StringBuilder v76 = v69.append(v75);
	String v77 = v69.toString();
	Preconditions.checkState(v68, v77);
	ComponentName v79 = p1.getActivity();
	int v80 = p1.getUserId();
	boolean v81 = ShortcutService.injectIsMainActivity(v79, v80);
	StringBuilder v82 = new StringBuilder();
	StringBuilder v84 = v82.append("Cannot publish shortcut: activity ");
	ComponentName v85 = p1.getActivity();
	StringBuilder v86 = v82.append(v85);
	StringBuilder v87 = v82.append(" is not main activity");
	String v88 = v82.toString();
	Preconditions.checkState(v81, v88);
	p1.enforceMandatoryFields(0);
	ComponentName v91 = p1.getActivity();
	Preconditions.checkState(phiInstruction, "Cannot publish shortcut: target activity is not set");
	Icon v93 = p1.getIcon();
	Icon v94 = p1.getIcon();
	Icon v95 = ShortcutInfo.validateIcon(v94);
	int v96 = p1.getFlags();
	p1.replaceFlags((v96 & 8192));
	p2.setRankChanged();
	boolean v99 = v23.pushDynamicShortcut(p2, v18);
	boolean v100 = v18.isEmpty();
	Object v101 = v18.get(0);
	List v102 = Collections.singletonList(v101);
	v18.clear();
	boolean v104 = v18.add(p2);
	long v107 = System.currentTimeMillis();
	long v106 = v107;
	ShortcutPackage$$ExternalSyntheticLambda4 v108 = new ShortcutPackage$$ExternalSyntheticLambda4(v106);
	int v111 = this.mShortcuts.size();
	ArrayMap v113 = new ArrayMap();
	ShortcutPackage$$ExternalSyntheticLambda40 v115 = new ShortcutPackage$$ExternalSyntheticLambda40(ShortcutPackage,v113);
	ShortcutPackage.forEachShortcut(v115);
	ArrayMap v112 = v113;
	int v118 = v112.size();
	Object v120 = Objects.requireNonNull(v23);
	String v121 = this.mPackageName;
	int v122 = this.mPackageUserId;
	ShortcutService$$ExternalSyntheticLambda28 v124 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v122,v121);
	Runnable v123 = v124;
	Object v127 = Objects.requireNonNull(p1);
	Object v128 = Objects.requireNonNull(v123);
	this.mHandler.removeCallbacksAndMessages(p1);
	boolean v130 = this.mHandler.postDelayed(v123, p1, 100);
	List v132 = ShortcutService.removeNonKeyFields(p2);
	List v133 = ShortcutService.removeNonKeyFields(p3);
	UserHandle v134 = UserHandle.of(v122);
	ShortcutService$$ExternalSyntheticLambda26 v135 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v122,v132,v121,v134,v133);
	ShortcutService.injectPostToHandler(v135);
	ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
	String v140 = p2.getId();
	long v143 = Binder.clearCallingIdentity();
	long v142 = v143;
	this.mUsageStatsManagerInternal.reportShortcutUsage(p1, v140, p3);
	Binder.restoreCallingIdentity(v142);
	boolean v148 = 0;
	ShortcutService$$ExternalSyntheticLambda25 v150 = new ShortcutService$$ExternalSyntheticLambda25();
	ShortcutService.forEachLoadedUserLocked(v150);
	return;
}

and the following sink code:
['ShortcutUser v29 = ShortcutService.loadUserLocked(p2);\nthis.mUsers.put(p2, phiInstruction);\nShortcutPackage v35 = ShortcutUser.getPackageShortcutsIfExists(p1);', 'int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);\nApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);\nboolean v13 = ShortcutService.isEphemeralApp(v12);', 'ShortcutInfo v50 = new ShortcutInfo(1);\nList v51 = Arrays.asList(v50);\np0.fillInDefaultActivity(v51);']

The method pushDynamicShortcut has the following similar APIs:

- API Name: enableShortcuts(Ljava/lang/String;Ljava/util/List;I)V with Similarity Score: 1.0000001192092896
  - Access Control Level: SYS_OR_SIG and the following code:
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
boolean v13 = ShortcutService.isEphemeralApp(v12);

- API Name: removeAllDynamicShortcuts(Ljava/lang/String;I)V with Similarity Score: 1.0000001192092896
  - Access Control Level: SYS_OR_SIG and the following code:
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
boolean v13 = ShortcutService.isEphemeralApp(v12);

