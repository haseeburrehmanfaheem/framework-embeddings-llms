This is path 1 for the API with depth 2:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v3 = Collections.emptyList();
	ArrayList v5 = new ArrayList();
	String v7 = p1.getPackageName();
	RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7);
	boolean v9 = v5.add(v8);
	List v10 = p1.getAppCertificates();
	Iterator v11 = v10.iterator();
	boolean v12 = v11.hasNext();
	RuleIndexRange v13 = new RuleIndexRange(v15,v17);
	Object v14 = this.sUnindexedRuleIndexes.get("START_KEY");
	int v15 = v14.intValue();
	Object v16 = this.sUnindexedRuleIndexes.get("END_KEY");
	int v17 = v16.intValue();
	boolean v19 = v5.add(v13);
	List v4 = v5;
	File v21 = new File(this.mRulesDir,"rules");
	RandomAccessObject$RandomAccessFileObject v24 = new RandomAccessObject$RandomAccessFileObject(v21);
	RandomAccessObject v23 = v24;
	List v26 = this.mRuleParser.parse(v23, phiInstruction);
	List v2 = v26;
	ParceledListSlice v28 = new ParceledListSlice(phiInstruction);
	return v28;
}

This is path 2 for the API with depth 2:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v3 = Collections.emptyList();
	ArrayList v5 = new ArrayList();
	String v7 = p1.getPackageName();
	RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7);
	boolean v9 = v5.add(v8);
	List v10 = p1.getAppCertificates();
	Iterator v11 = v10.iterator();
	boolean v12 = v11.hasNext();
	RuleIndexRange v13 = new RuleIndexRange(v15,v17);
	Object v14 = this.sUnindexedRuleIndexes.get("START_KEY");
	int v15 = v14.intValue();
	Object v16 = this.sUnindexedRuleIndexes.get("END_KEY");
	int v17 = v16.intValue();
	boolean v19 = v5.add(v13);
	List v4 = v5;
	File v20 = new File(this.mRulesDir,"rules");
	RandomAccessObject$RandomAccessFileObject v23 = new RandomAccessObject$RandomAccessFileObject(v20);
	RandomAccessObject v22 = v23;
	List v25 = this.mRuleParser.parse(v22, phiInstruction);
	List v2 = v25;
	ParceledListSlice v27 = new ParceledListSlice(phiInstruction);
	return v27;
}

This is path 3 for the API with depth 2:
public ParceledListSlice getCurrentRules(){
	List v1 = Collections.emptyList();
	List v3 = Collections.emptyList();
	ArrayList v5 = new ArrayList();
	String v7 = p1.getPackageName();
	RuleIndexRange v8 = RuleIndexingController.searchIndexingKeysRangeContainingKey(this.sPackageNameBasedIndexes, v7);
	boolean v9 = v5.add(v8);
	List v10 = p1.getAppCertificates();
	Iterator v11 = v10.iterator();
	boolean v12 = v11.hasNext();
	RuleIndexRange v13 = new RuleIndexRange(v15,v17);
	Object v14 = this.sUnindexedRuleIndexes.get("START_KEY");
	int v15 = v14.intValue();
	Object v16 = this.sUnindexedRuleIndexes.get("END_KEY");
	int v17 = v16.intValue();
	boolean v19 = v5.add(v13);
	List v4 = v5;
	File v21 = new File(this.mRulesDir,"rules");
	RandomAccessObject$RandomAccessFileObject v24 = new RandomAccessObject$RandomAccessFileObject(v21);
	RandomAccessObject v23 = v24;
	List v26 = this.mRuleParser.parse(v23, phiInstruction);
	List v2 = v26;
	ParceledListSlice v27 = new ParceledListSlice(phiInstruction);
	return v27;
}
