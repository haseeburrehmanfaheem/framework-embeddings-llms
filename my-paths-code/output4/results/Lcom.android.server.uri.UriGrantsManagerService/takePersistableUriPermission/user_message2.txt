The method takePersistableUriPermission has the following code snippet:

This is path 1 for the API with depth 2:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	Object v7 = this.mGrantedUriPermissions.get(phiInstruction);
	Object v8 = v7.get(v4);
	UriPermission v6 = v8;
	GrantUri v9 = new GrantUri(p4,p1,128);
	Object v12 = this.mGrantedUriPermissions.get(phiInstruction);
	Object v13 = v12.get(v9);
	UriPermission v11 = v13;
	String v18 = Integer.toHexString((p2 & 3));
	String v21 = Integer.toHexString(this.persistableModeFlags);
	boolean v14 = 0;
	String v30 = Integer.toHexString((p2 & 3));
	String v33 = Integer.toHexString(this.persistableModeFlags);
	boolean v26 = 0;
	Object v39 = this.mGrantedUriPermissions.get(phiInstruction);
	int v40 = v39.size();
	ArrayList v42 = new ArrayList();
	ArrayList v41 = v42;
	Collection v44 = v39.values();
	Iterator v45 = v44.iterator();
	boolean v46 = v45.hasNext();
	int v47 = v41.size();
	UriPermission$PersistedTimeComparator v48 = new UriPermission$PersistedTimeComparator();
	Collections.sort(v41, v48);
	boolean v38 = 1;
	p0.schedulePersistUriGrants();
	return;
}
This is path 2 for the API with depth 2:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	Object v7 = this.mGrantedUriPermissions.get(phiInstruction);
	Object v8 = v7.get(v4);
	UriPermission v6 = v8;
	GrantUri v9 = new GrantUri(p4,p1,128);
	Object v12 = this.mGrantedUriPermissions.get(phiInstruction);
	Object v13 = v12.get(v9);
	UriPermission v11 = v13;
	String v18 = Integer.toHexString((p2 & 3));
	String v21 = Integer.toHexString(this.persistableModeFlags);
	boolean v14 = 0;
	String v30 = Integer.toHexString((p2 & 3));
	String v33 = Integer.toHexString(this.persistableModeFlags);
	boolean v26 = 0;
	Object v39 = this.mGrantedUriPermissions.get(phiInstruction);
	int v40 = v39.size();
	ArrayList v42 = new ArrayList();
	ArrayList v41 = v42;
	Collection v44 = v39.values();
	Iterator v45 = v44.iterator();
	boolean v46 = v45.hasNext();
	int v47 = v41.size();
	UriPermission$PersistedTimeComparator v48 = new UriPermission$PersistedTimeComparator();
	Collections.sort(v41, v48);
	boolean v38 = 1;
	return;
}
This is path 3 for the API with depth 2:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	Object v7 = this.mGrantedUriPermissions.get(phiInstruction);
	UriPermission v6 = 0;
	GrantUri v8 = new GrantUri(p4,p1,128);
	Object v11 = this.mGrantedUriPermissions.get(phiInstruction);
	Object v12 = v11.get(v8);
	UriPermission v10 = v12;
	String v17 = Integer.toHexString((p2 & 3));
	String v20 = Integer.toHexString(this.persistableModeFlags);
	boolean v13 = 0;
	String v29 = Integer.toHexString((p2 & 3));
	String v32 = Integer.toHexString(this.persistableModeFlags);
	boolean v25 = 0;
	Object v38 = this.mGrantedUriPermissions.get(phiInstruction);
	int v39 = v38.size();
	ArrayList v41 = new ArrayList();
	ArrayList v40 = v41;
	Collection v43 = v38.values();
	Iterator v44 = v43.iterator();
	boolean v45 = v44.hasNext();
	int v46 = v40.size();
	UriPermission$PersistedTimeComparator v47 = new UriPermission$PersistedTimeComparator();
	Collections.sort(v40, v47);
	boolean v37 = 1;
	p0.schedulePersistUriGrants();
	return;
}

and the following sink code:
['int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);\nGrantUri v4 = new GrantUri(p4,p1,0);\nObject v7 = this.mGrantedUriPermissions.get(phiInstruction);', 'Preconditions.checkFlagsArgument(p2, 3);\nschedulePersistUriGrants();']

The method takePersistableUriPermission has the following similar APIs:

- API Name: grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V with Similarity Score: 0.8217834234237671
  - Access Control Level: SYS_OR_SIG and the following code:
GrantUri v9 = new GrantUri(p6,p4,p5);
int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4);
int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12);
UriGrantsManagerService.grantUriPermissionUnchecked(v13, p3, v9, p5, v5);

- API Name: grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V with Similarity Score: 0.8199201822280884
  - Access Control Level: SYS_OR_SIG and the following code:
GrantUri v9 = new GrantUri(p6,p4,p5);
int v12 = this.mPmInternal.getPackageUid(p3, 268435456, v4);
int v13 = UriGrantsManagerService.checkGrantUriPermissionUnlocked(p2, p3, v9, p5, v12);

