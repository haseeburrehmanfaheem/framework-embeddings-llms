This is path 1 for the API with depth 0:
depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	int v4 = Slog.w("SliceManagerService", "applyRestore: error reading payload", caughtException);
	return;
}
-----

This is path 2 for the API with depth 0:
depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlPullParser v4 = v3.newPullParser();
	int v5 = Slog.w("SliceManagerService", "applyRestore: error reading payload", caughtException);
	return;
}
-----

This is path 3 for the API with depth 0:
depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlPullParser v4 = v3.newPullParser();
	int v5 = Slog.w("SliceManagerService", "applyRestore: error reading payload", caughtException);
	return;
}
-----

This is path 4 for the API with depth 0:
depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlPullParser v4 = v3.newPullParser();
	String v5 = Xml$Encoding.UTF_8.name();
	int v6 = Slog.w("SliceManagerService", "applyRestore: error reading payload", caughtException);
	return;
}
-----
