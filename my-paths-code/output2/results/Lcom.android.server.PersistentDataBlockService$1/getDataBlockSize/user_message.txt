This is path 1 for the API with depth 2:
depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File(v2);
	String v2 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v4 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v5 = Slog.e(v4, "partition not available");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File;
	String v2 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
	String v3 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v4 = Slog.e(v3, "partition not available");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public int getDataBlockSize(){
	p0.enforcePersistentDataBlockAccess();
	DataInputStream v1 = new DataInputStream;
	FileInputStream v1 = new FileInputStream;
	File v1 = new File;
	String v2 = PersistentDataBlockService.-$$Nest$sfgetTAG();
	int v3 = Slog.e(v2, "partition not available");
	return 0;
}
-----
depth : 1
public void enforcePersistentDataBlockAccess(){
	int v3 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v3);
	return;
}
-----
depth : 2
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
