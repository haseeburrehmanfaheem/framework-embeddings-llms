This is path 1 for the API with depth 2:
depth : 0
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v3 = Binder.clearCallingIdentity();
	OemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v4.setOemUnlockAllowedByCarrier(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageCarrierOemUnlockPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserIsAdmin(OemLockService p1){
	p1.enforceUserIsAdmin();
	return;
}
-----
depth : 2
public void enforceUserIsAdmin(){
	int v1 = UserHandle.getCallingUserId();
	long v2 = Binder.clearCallingIdentity();
	UserManager v3 = UserManager.get(this.mContext);
	boolean v4 = v3.isUserAdmin(v1);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
