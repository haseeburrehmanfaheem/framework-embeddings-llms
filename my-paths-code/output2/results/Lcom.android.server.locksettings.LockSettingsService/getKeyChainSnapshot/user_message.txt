This is path 1 for the API with depth 2:
depth : 0
public KeyChainSnapshot getKeyChainSnapshot(){
	KeyChainSnapshot v1 = this.mRecoverableKeyStoreManager.getKeyChainSnapshot();
	return v1;
}
-----
depth : 1
public KeyChainSnapshot getKeyChainSnapshot(){
	p0.checkRecoverKeyStorePermission();
	int v2 = Binder.getCallingUid();
	KeyChainSnapshot v3 = this.mSnapshotStorage.get(v2);
	return v3;
}
-----
depth : 2
public void checkRecoverKeyStorePermission(){
	int v8 = UserHandle.getCallingUserId();
	int v9 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v8, v9);
	return;
}
-----
depth : 2
public KeyChainSnapshot get(int p1){
	Object v1 = this.mSnapshotByUid.get(p1);
	return v1;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public KeyChainSnapshot getKeyChainSnapshot(){
	KeyChainSnapshot v1 = this.mRecoverableKeyStoreManager.getKeyChainSnapshot();
	return v1;
}
-----
depth : 1
public KeyChainSnapshot getKeyChainSnapshot(){
	p0.checkRecoverKeyStorePermission();
	int v2 = Binder.getCallingUid();
	KeyChainSnapshot v3 = this.mSnapshotStorage.get(v2);
	return v3;
}
-----
depth : 2
public void checkRecoverKeyStorePermission(){
	int v8 = UserHandle.getCallingUserId();
	int v9 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v8, v9);
	return;
}
-----
depth : 2
public KeyChainSnapshot get(int p1){
	Object v1 = this.mSnapshotByUid.get(p1);
	KeyChainSnapshot v2 = p0.readFromDisk(p1);
	Object v2 = new Object(1);
	Integer v3 = Integer.valueOf(p1);
	String v4 = String.format(Locale.US, "Error reading snapshot for %d from disk", v2);
	int v5 = Log.e("RecoverySnapshotStorage", v4, caughtException);
	return 0;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public KeyChainSnapshot getKeyChainSnapshot(){
	KeyChainSnapshot v1 = this.mRecoverableKeyStoreManager.getKeyChainSnapshot();
	return v1;
}
-----
depth : 1
public KeyChainSnapshot getKeyChainSnapshot(){
	p0.checkRecoverKeyStorePermission();
	int v2 = Binder.getCallingUid();
	KeyChainSnapshot v3 = this.mSnapshotStorage.get(v2);
	return v3;
}
-----
depth : 2
public void checkRecoverKeyStorePermission(){
	int v8 = UserHandle.getCallingUserId();
	int v9 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v8, v9);
	return;
}
-----
depth : 2
public KeyChainSnapshot get(int p1){
	Object v1 = this.mSnapshotByUid.get(p1);
	KeyChainSnapshot v2 = p0.readFromDisk(p1);
	return v2;
}
-----
