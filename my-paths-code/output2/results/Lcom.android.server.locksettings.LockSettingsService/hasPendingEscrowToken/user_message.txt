This is path 1 for the API with depth 1:
depth : 0
public boolean hasPendingEscrowToken(int p1){
	p0.checkPasswordReadPermission();
	Set v2 = this.mSpManager.getPendingTokensForUser(p1);
	boolean v3 = v2.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public void checkPasswordReadPermission(){
	return;
}
-----
depth : 1
public Set getPendingTokensForUser(int p1){
	Integer v1 = Integer.valueOf(p1);
	boolean v2 = this.tokenMap.containsKey(v1);
	ArraySet v2 = new ArraySet(v5);
	Integer v3 = Integer.valueOf(p1);
	Object v4 = this.tokenMap.get(v3);
	Set v5 = v4.keySet();
	return v2;
}
-----

This is path 2 for the API with depth 1:
depth : 0
public boolean hasPendingEscrowToken(int p1){
	p0.checkPasswordReadPermission();
	Set v2 = this.mSpManager.getPendingTokensForUser(p1);
	boolean v3 = v2.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public void checkPasswordReadPermission(){
	return;
}
-----
depth : 1
public Set getPendingTokensForUser(int p1){
	Integer v1 = Integer.valueOf(p1);
	boolean v2 = this.tokenMap.containsKey(v1);
	ArraySet v2 = new ArraySet(v5);
	Integer v3 = Integer.valueOf(p1);
	Object v4 = this.tokenMap.get(v3);
	Set v5 = v4.keySet();
	return v2;
}
-----
