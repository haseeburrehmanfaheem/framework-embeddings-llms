This is path 1 for the API with depth 2:
depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("No matching sensor for getSensorProperties, sensorId: ");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append(", caller: ");
	StringBuilder v8 = v3.append(p2);
	String v9 = v3.toString();
	int v10 = Slog.w("FaceService", v9);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("No matching sensor for getSensorProperties, sensorId: ");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append(", caller: ");
	StringBuilder v8 = v3.append(p2);
	String v9 = v3.toString();
	int v10 = Slog.w("FaceService", v9);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	FaceSensorPropertiesInternal v4 = v3.getSensorProperties(p1);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
