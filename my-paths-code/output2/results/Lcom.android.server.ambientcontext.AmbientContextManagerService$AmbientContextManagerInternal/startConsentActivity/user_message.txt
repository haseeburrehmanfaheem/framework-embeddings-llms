This is path 1 for the API with depth 2:
depth : 0
public void startConsentActivity([I p1, String p2){
	this.mService.onStartConsentActivity(p1, p2);
	return;
}
-----
depth : 1
public void onStartConsentActivity([I p1, String p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("Opening consent activity of ");
	String v3 = Arrays.toString(p1);
	StringBuilder v4 = v0.append(v3);
	StringBuilder v5 = v0.append(" for ");
	StringBuilder v6 = v0.append(p2);
	String v7 = v0.toString();
	int v8 = Slog.d(this.TAG, v7);
	int v9 = p0.getUserId();
	IActivityTaskManager v10 = ActivityTaskManager.getService();
	ParceledListSlice v11 = v10.getRecentTasks(1, 0, v9);
	List v12 = v11.getList();
	boolean v13 = v12.isEmpty();
	List v14 = v11.getList();
	Object v15 = v14.get(0);
	boolean v16 = p2.equals(ActivityInfo.packageName);
	ComponentName v17 = p0.getConsentComponent();
	StringBuilder v17 = new StringBuilder();
	StringBuilder v19 = v17.append("Starting consent activity for ");
	StringBuilder v20 = v17.append(p2);
	String v21 = v17.toString();
	int v22 = Slog.d(this.TAG, v21);
	Intent v22 = new Intent();
	long v24 = Binder.clearCallingIdentity();
	Context v25 = p0.getContext();
	Resources v26 = v25.getResources();
	int v27 = Slog.e(this.TAG, "unable to start consent activity");
	Binder.restoreCallingIdentity(v24);
	return;
}
-----
depth : 2
public int getUserId(){
	return this.mUserId;
}
-----
depth : 2
public IActivityTaskManager getService(){
	Object v1 = this.IActivityTaskManagerSingleton.get();
	return v1;
}
-----
depth : 2
public ComponentName getConsentComponent(){
	Context v1 = p0.getContext();
	Resources v2 = v1.getResources();
	String v3 = v2.getString(17039918);
	boolean v4 = TextUtils.isEmpty(v3);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append("Consent component name: ");
	StringBuilder v7 = v4.append(v3);
	String v8 = v4.toString();
	int v9 = Slog.i(this.TAG, v8);
	ComponentName v10 = ComponentName.unflattenFromString(v3);
	return v10;
}
-----
depth : 2
public Context getContext(){
	Context v1 = this.mMaster.getContext();
	return v1;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void startConsentActivity([I p1, String p2){
	this.mService.onStartConsentActivity(p1, p2);
	return;
}
-----
depth : 1
public void onStartConsentActivity([I p1, String p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("Opening consent activity of ");
	String v3 = Arrays.toString(p1);
	StringBuilder v4 = v0.append(v3);
	StringBuilder v5 = v0.append(" for ");
	StringBuilder v6 = v0.append(p2);
	String v7 = v0.toString();
	int v8 = Slog.d(this.TAG, v7);
	int v9 = p0.getUserId();
	IActivityTaskManager v10 = ActivityTaskManager.getService();
	ParceledListSlice v11 = v10.getRecentTasks(1, 0, v9);
	List v12 = v11.getList();
	boolean v13 = v12.isEmpty();
	List v14 = v11.getList();
	Object v15 = v14.get(0);
	boolean v16 = p2.equals(ActivityInfo.packageName);
	ComponentName v17 = p0.getConsentComponent();
	StringBuilder v17 = new StringBuilder();
	StringBuilder v19 = v17.append("Starting consent activity for ");
	StringBuilder v20 = v17.append(p2);
	String v21 = v17.toString();
	int v22 = Slog.d(this.TAG, v21);
	Intent v22 = new Intent();
	long v24 = Binder.clearCallingIdentity();
	Context v25 = p0.getContext();
	int v26 = Slog.e(this.TAG, "unable to start consent activity");
	Binder.restoreCallingIdentity(v24);
	return;
}
-----
depth : 2
public int getUserId(){
	return this.mUserId;
}
-----
depth : 2
public IActivityTaskManager getService(){
	Object v1 = this.IActivityTaskManagerSingleton.get();
	return v1;
}
-----
depth : 2
public ComponentName getConsentComponent(){
	Context v1 = p0.getContext();
	Resources v2 = v1.getResources();
	String v3 = v2.getString(17039918);
	boolean v4 = TextUtils.isEmpty(v3);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append("Consent component name: ");
	StringBuilder v7 = v4.append(v3);
	String v8 = v4.toString();
	int v9 = Slog.i(this.TAG, v8);
	ComponentName v10 = ComponentName.unflattenFromString(v3);
	return v10;
}
-----
depth : 2
public Context getContext(){
	Context v1 = this.mMaster.getContext();
	return v1;
}
-----
