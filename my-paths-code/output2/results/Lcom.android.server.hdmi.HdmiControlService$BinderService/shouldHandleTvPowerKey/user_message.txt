This is path 1 for the API with depth 2:
depth : 0
public boolean shouldHandleTvPowerKey(){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	boolean v2 = this.this$0.shouldHandleTvPowerKey();
	return v2;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public boolean shouldHandleTvPowerKey(){
	boolean v1 = p0.isTvDevice();
	HdmiCecConfig v2 = p0.getHdmiCecConfig();
	String v3 = v2.getStringValue("power_control_mode");
	boolean v4 = v3.equals("none");
	HdmiCecConfig v5 = p0.getHdmiCecConfig();
	int v6 = v5.getIntValue("hdmi_cec_enabled");
	return this.mIsCecAvailable;
}
-----
depth : 2
public boolean isTvDevice(){
	Integer v1 = Integer.valueOf(0);
	boolean v2 = this.mLocalDevices.contains(v1);
	return v2;
}
-----
depth : 2
public HdmiCecConfig getHdmiCecConfig(){
	return this.mHdmiCecConfig;
}
-----
depth : 2
public String getStringValue(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("string");
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Getting CEC setting value '");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("'.");
	String v8 = v3.toString();
	Object v8 = new Object(0);
	HdmiLogger.debug(v8, v8);
	HdmiCecConfig$Value v10 = v1.getDefaultValue();
	String v11 = v10.getStringValue();
	String v12 = p0.retrieveValue(v1, v11);
	return v12;
}
-----
depth : 2
public HdmiCecConfig getHdmiCecConfig(){
	return this.mHdmiCecConfig;
}
-----
depth : 2
public int getIntValue(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("int");
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Getting CEC setting value '");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("'.");
	String v8 = v3.toString();
	Object v8 = new Object(0);
	HdmiLogger.debug(v8, v8);
	HdmiCecConfig$Value v10 = v1.getDefaultValue();
	Integer v11 = v10.getIntValue();
	int v12 = v11.intValue();
	String v13 = Integer.toString(v12);
	String v14 = p0.retrieveValue(v1, v13);
	int v15 = Integer.parseInt(v14);
	return v15;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public boolean shouldHandleTvPowerKey(){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	boolean v2 = this.this$0.shouldHandleTvPowerKey();
	return v2;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public boolean shouldHandleTvPowerKey(){
	boolean v1 = p0.isTvDevice();
	HdmiCecConfig v2 = p0.getHdmiCecConfig();
	String v3 = v2.getStringValue("power_control_mode");
	boolean v4 = v3.equals("none");
	HdmiCecConfig v5 = p0.getHdmiCecConfig();
	int v6 = v5.getIntValue("hdmi_cec_enabled");
	return 0;
}
-----
depth : 2
public boolean isTvDevice(){
	Integer v1 = Integer.valueOf(0);
	boolean v2 = this.mLocalDevices.contains(v1);
	return v2;
}
-----
depth : 2
public HdmiCecConfig getHdmiCecConfig(){
	return this.mHdmiCecConfig;
}
-----
depth : 2
public String getStringValue(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("string");
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Getting CEC setting value '");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("'.");
	String v8 = v3.toString();
	Object v8 = new Object(0);
	HdmiLogger.debug(v8, v8);
	HdmiCecConfig$Value v10 = v1.getDefaultValue();
	String v11 = v10.getStringValue();
	String v12 = p0.retrieveValue(v1, v11);
	return v12;
}
-----
depth : 2
public HdmiCecConfig getHdmiCecConfig(){
	return this.mHdmiCecConfig;
}
-----
depth : 2
public int getIntValue(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("int");
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Getting CEC setting value '");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("'.");
	String v8 = v3.toString();
	Object v8 = new Object(0);
	HdmiLogger.debug(v8, v8);
	HdmiCecConfig$Value v10 = v1.getDefaultValue();
	Integer v11 = v10.getIntValue();
	int v12 = v11.intValue();
	String v13 = Integer.toString(v12);
	String v14 = p0.retrieveValue(v1, v13);
	int v15 = Integer.parseInt(v14);
	return v15;
}
-----
