This is path 1 for the API with depth 2:
depth : 0
public void showInputMethodPickerFromClient(IInputMethodClient p1, int p2){
	boolean v1 = p0.calledFromValidUserLocked();
	boolean v2 = p0.canShowInputMethodPickerLocked(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("Ignoring showInputMethodPickerFromClient of uid ");
	int v5 = Binder.getCallingUid();
	StringBuilder v6 = v2.append(v5);
	StringBuilder v7 = v2.append(": ");
	StringBuilder v8 = v2.append(p1);
	String v9 = v2.toString();
	int v10 = Slog.w("InputMethodManagerService", v9);
	return;
}
-----
depth : 1
public boolean calledFromValidUserLocked(){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append("--- IPC called from background users. Ignore. callers=");
	String v7 = Debug.getCallers(10);
	StringBuilder v8 = v4.append(v7);
	String v9 = v4.toString();
	int v10 = Slog.w("InputMethodManagerService", v9);
	return 0;
}
-----
depth : 1
public boolean canShowInputMethodPickerLocked(IInputMethodClient p1){
	int v1 = Binder.getCallingUid();
	IBinder v2 = InputMethodManagerService$ClientState.client.asBinder();
	IBinder v3 = p1.asBinder();
	Intent v4 = p0.getCurIntentLocked();
	Intent v5 = p0.getCurIntentLocked();
	ComponentName v6 = v5.getComponent();
	String v7 = v6.getPackageName();
	boolean v8 = InputMethodUtils.checkIfPackageBelongsToUid(this.mAppOpsManager, v1, v7);
	return 1;
}
-----
depth : 2
public Intent getCurIntentLocked(){
	Intent v1 = this.mBindingController.getCurIntent();
	return v1;
}
-----
depth : 2
public Intent getCurIntentLocked(){
	Intent v1 = this.mBindingController.getCurIntent();
	return v1;
}
-----
depth : 2
public boolean checkIfPackageBelongsToUid(AppOpsManager p1, int p2, String p3){
	return 0;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void showInputMethodPickerFromClient(IInputMethodClient p1, int p2){
	boolean v1 = p0.calledFromValidUserLocked();
	boolean v2 = p0.canShowInputMethodPickerLocked(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("Ignoring showInputMethodPickerFromClient of uid ");
	int v5 = Binder.getCallingUid();
	StringBuilder v6 = v2.append(v5);
	StringBuilder v7 = v2.append(": ");
	StringBuilder v8 = v2.append(p1);
	String v9 = v2.toString();
	int v10 = Slog.w("InputMethodManagerService", v9);
	return;
}
-----
depth : 1
public boolean calledFromValidUserLocked(){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append("--- IPC called from background users. Ignore. callers=");
	String v7 = Debug.getCallers(10);
	StringBuilder v8 = v4.append(v7);
	String v9 = v4.toString();
	int v10 = Slog.w("InputMethodManagerService", v9);
	return 0;
}
-----
depth : 1
public boolean canShowInputMethodPickerLocked(IInputMethodClient p1){
	int v1 = Binder.getCallingUid();
	IBinder v2 = InputMethodManagerService$ClientState.client.asBinder();
	IBinder v3 = p1.asBinder();
	Intent v4 = p0.getCurIntentLocked();
	Intent v5 = p0.getCurIntentLocked();
	ComponentName v6 = v5.getComponent();
	String v7 = v6.getPackageName();
	boolean v8 = InputMethodUtils.checkIfPackageBelongsToUid(this.mAppOpsManager, v1, v7);
	return 1;
}
-----
depth : 2
public Intent getCurIntentLocked(){
	Intent v1 = this.mBindingController.getCurIntent();
	return v1;
}
-----
depth : 2
public Intent getCurIntentLocked(){
	Intent v1 = this.mBindingController.getCurIntent();
	return v1;
}
-----
depth : 2
public boolean checkIfPackageBelongsToUid(AppOpsManager p1, int p2, String p3){
	return 1;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void showInputMethodPickerFromClient(IInputMethodClient p1, int p2){
	boolean v1 = p0.calledFromValidUserLocked();
	boolean v2 = p0.canShowInputMethodPickerLocked(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("Ignoring showInputMethodPickerFromClient of uid ");
	int v5 = Binder.getCallingUid();
	StringBuilder v6 = v2.append(v5);
	StringBuilder v7 = v2.append(": ");
	StringBuilder v8 = v2.append(p1);
	String v9 = v2.toString();
	int v10 = Slog.w("InputMethodManagerService", v9);
	return;
}
-----
depth : 1
public boolean calledFromValidUserLocked(){
	return 1;
}
-----
depth : 1
public boolean canShowInputMethodPickerLocked(IInputMethodClient p1){
	int v1 = Binder.getCallingUid();
	IBinder v2 = InputMethodManagerService$ClientState.client.asBinder();
	IBinder v3 = p1.asBinder();
	Intent v4 = p0.getCurIntentLocked();
	Intent v5 = p0.getCurIntentLocked();
	ComponentName v6 = v5.getComponent();
	String v7 = v6.getPackageName();
	boolean v8 = InputMethodUtils.checkIfPackageBelongsToUid(this.mAppOpsManager, v1, v7);
	return 1;
}
-----
depth : 2
public Intent getCurIntentLocked(){
	Intent v1 = this.mBindingController.getCurIntent();
	return v1;
}
-----
depth : 2
public Intent getCurIntentLocked(){
	Intent v1 = this.mBindingController.getCurIntent();
	return v1;
}
-----
depth : 2
public boolean checkIfPackageBelongsToUid(AppOpsManager p1, int p2, String p3){
	return 0;
}
-----
