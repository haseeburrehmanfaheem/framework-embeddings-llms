This is path 1 for the API with depth 2:
depth : 0
public void createSession(String p1, ITextToSpeechSessionCallback p2){
	Object v1 = TextToSpeechManagerService.access$000(this.this$0);
	int v2 = UserHandle.getCallingUserId();
	AbstractPerUserSystemService v3 = TextToSpeechManagerService.access$100(this.this$0, v2);
	v3.createSessionLocked(p1, p2);
	return;
}
-----
depth : 1
public Object access$000(TextToSpeechManagerService p1){
	return AbstractMasterSystemService.mLock;
}
-----
depth : 1
public AbstractPerUserSystemService access$100(TextToSpeechManagerService p1, int p2){
	AbstractPerUserSystemService v1 = p1.getServiceForUserLocked(p2);
	return v1;
}
-----
depth : 1
public void createSessionLocked(String p1, ITextToSpeechSessionCallback p2){
	Context v1 = p0.getContext();
	TextToSpeechManagerPerUserService$TextToSpeechSessionConnection.start(v1, AbstractPerUserSystemService.mUserId, p1, p2);
	return;
}
-----
depth : 2
public Context getContext(){
	Context v1 = this.mMaster.getContext();
	return v1;
}
-----
depth : 2
public void start(Context p1, int p2, String p3, ITextToSpeechSessionCallback p4){
	TextToSpeechManagerPerUserService$TextToSpeechSessionConnection v0 = new TextToSpeechManagerPerUserService$TextToSpeechSessionConnection(p1,p2,p3,p4);
	v0.start();
	return;
}
-----
