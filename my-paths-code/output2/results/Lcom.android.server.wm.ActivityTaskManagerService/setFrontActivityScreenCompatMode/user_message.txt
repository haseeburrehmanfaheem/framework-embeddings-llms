This is path 1 for the API with depth 2:
depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("Unknown screen compat mode req #");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append("; ignoring");
	String v6 = v1.toString();
	int v7 = Slog.w("ActivityTaskManager", v6);
	return;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("Unknown screen compat mode req #");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append("; ignoring");
	String v6 = v1.toString();
	int v7 = Slog.w("ActivityTaskManager", v6);
	return;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("Unknown screen compat mode req #");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append("; ignoring");
	String v6 = v1.toString();
	int v7 = Slog.w("ActivityTaskManager", v6);
	return;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
