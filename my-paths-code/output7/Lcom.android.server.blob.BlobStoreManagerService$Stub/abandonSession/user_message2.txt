The method abandonSession has the following code snippet:

This is path 1 for the API with depth 2:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);
	v15.open();
	v15.abandon();
	if (BlobStoreConfig.LOGV == 0) {
		BlobStoreManagerService.writeBlobSessionsAsync();
		return;
	}
}

and the following sink code:
['int v8 = Binder.getCallingUid();\nBlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);\nthis.this$0.abandonSessionInternal(p1, v8, p2);', 'int v8 = Binder.getCallingUid();\nBlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);\nv15.open();\nv15.abandon();', 'this.this$0.verifyCallingPackage(v8, p2);\nthis.this$0.abandonSessionInternal(p1, v8, p2);', 'BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);\nBlobStoreManagerService.-$$Nest$mabandonSessionInternal(this.this$0, p1, v8, p2);']

The method abandonSession has the following similar APIs:

- API Name: createSession(Landroid/app/blob/BlobHandle;Ljava/lang/String;)J with Similarity Score: 0.853441596031189
  - Access Control Level: SYS_OR_SIG and the following code:
long v28 = BlobStoreManagerService.generateNextSessionIdLocked();
BlobStoreSession v29 = new BlobStoreSession(this.mContext,v28,p2,p3,p4,this.mSessionStateChangeListener);
BlobStoreManagerService.addSessionForUserLocked(v29, v31);
return v24;

- API Name: openSession(JLjava/lang/String;)Landroid/app/blob/IBlobStoreSession; with Similarity Score: 0.8336181640625
  - Access Control Level: SYS_OR_SIG and the following code:
StringBuilder v1 = new StringBuilder();
Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
int v8 = Binder.getCallingUid();
BlobStoreManagerService.-$$Nest$mverifyCallingPackage(this.this$0, v8, p2);
BlobStoreSession v10 = BlobStoreManagerService.-$$Nest$mopenSessionInternal(this.this$0, p1, v8, p2);
return v10;

