The method allowDebugging has the following code snippet:

This is path 1 for the API with depth 1:
public void allowDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	if (this.mDebuggingManager == 0) {
		Message v4 = this.mHandler.obtainMessage(3);
		Message.arg1 = p1;
		Message.obj = p2;
		boolean v5 = this.mHandler.sendMessage(v4);
		return;
	}
}

and the following sink code:
['this.mDebuggingManager.allowDebugging(p1, p2);', 'Message v4 = this.mHandler.obtainMessage(3);\nMessage.arg1 = p1;\nMessage.obj = p2;']

The method allowDebugging has the following similar APIs:

- API Name: allowWirelessDebugging(ZLjava/lang/String;)V with Similarity Score: 0.9033947587013245
  - Access Control Level: SYS_OR_SIG and the following code:
this.mDebuggingManager.allowWirelessDebugging(p1, p2);

- API Name: allowWirelessDebugging(ZLjava/lang/String;)V with Similarity Score: 0.8867836594581604
  - Access Control Level: SYS_OR_SIG and the following code:
Message v4 = this.mHandler.obtainMessage(18);
Message.arg1 = p1;
Message.obj = p2;
boolean v5 = this.mHandler.sendMessage(v4);

