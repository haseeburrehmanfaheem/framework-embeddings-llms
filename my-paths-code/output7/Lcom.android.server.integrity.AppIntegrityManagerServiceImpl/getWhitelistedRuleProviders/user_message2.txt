The method getWhitelistedRuleProviders has the following code snippet:

This is path 1 for the API with depth 2:
public List getWhitelistedRuleProviders(){
	Resources v2 = this.mContext.getResources();
	String v3 = v2.getStringArray(17236075);
	List v4 = Arrays.asList(v3);
	ArrayList v5 = new ArrayList();
	Iterator v7 = v4.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		PackageManager v11 = this.mContext.getPackageManager();
		PackageInfo v12 = v11.getPackageInfo(v9, 0);
		if (PackageInfo.applicationInfo == 0) {
			boolean v13 = PackageInfo.applicationInfo.isSystemApp();
			if (v13 == 0) {
				boolean v10 = ;
				if (v10 == 0) {
					boolean v14 = v5.add(v9);
					boolean v15 = v7.hasNext();
					if (v15 == 0) {
						List v1 = v5;
						return v1;
					}
				}
			}
		}
	}
}

and the following sink code:
['String v3 = v2.getStringArray(17236075);\nIterator v7 = v4.iterator();\nObject v9 = v7.next();\nboolean v10 = AppIntegrityManagerServiceImpl.isSystemApp(v9);\nboolean v11 = v5.add(v9);', 'String v3 = v2.getStringArray(17236075);\nIterator v7 = v4.iterator();\nObject v9 = v7.next();\nPackageManager v11 = this.mContext.getPackageManager();\nPackageInfo v12 = v11.getPackageInfo(v9, 0);\nboolean v14 = v5.add(v9);', 'List v1 = p0.getAllowedRuleProviderSystemApps();\nreturn v1;']

The method getWhitelistedRuleProviders has the following similar APIs:

- API Name: fixupAppDir(Ljava/lang/String;)V with Similarity Score: 0.7727401256561279
  - Access Control Level: NONE and the following code:
String v3 = v1.group(2);
int v5 = Integer.parseInt(v4);
PackageManager v7 = this.mContext.getPackageManager();
int v8 = v7.getPackageUidAsUser(v6, v5);
StringBuilder v9 = new StringBuilder();
StringBuilder v11 = v9.append(p1);
StringBuilder v12 = v9.append("/");
String v13 = v9.toString();
this.mVold.fixupAppDir(v13, v8);

- API Name: isChangeEnabledByUid(JI)Z with Similarity Score: 0.7646888494491577
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v2 = this.mContext.getPackageManager();
String v3 = v2.getPackagesForUid(p2);
int v4 = UserHandle.getUserId(p2);
Object v8 = LocalServices.getService(PackageManagerInternal.class);
ApplicationInfo v10 = v8.getApplicationInfo(p2, 0, v9, p3);
Long v12 = Long.valueOf(p1);
Object v13 = this.mChanges.get(v12);
boolean v14 = v13.willBeEnabled(p2);

