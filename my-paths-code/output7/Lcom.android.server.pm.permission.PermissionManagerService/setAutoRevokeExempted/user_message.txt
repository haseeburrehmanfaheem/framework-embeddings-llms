This is path 1 for the API with depth 1:
public boolean setAutoRevokeExempted(String p1, boolean p2, int p3){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	if (v5 != 0) {
		boolean v6 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
		if ( != 0) {
			if (v6 == 0) {
				boolean v4 = 1;
				if (v4 != 0) {
					int v8 = v2.getUid();
					int v9 = UserHandle.getUid(p3, v8);
					String v10 = v2.getPackageName();
					int v11 = this.mAppOpsManager.checkOpNoThrow(98, v9, v10);
					if (v11 == 0) {
						long v12 = Binder.clearCallingIdentity();
						String v13 = v2.getPackageName();
						if (p2 == 0) {
							this.mAppOpsManager.setMode(97, v9, v13, );
							Binder.restoreCallingIdentity(v12);
							boolean v7 = 1;
							return v7;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public boolean setAutoRevokeExempted(String p1, boolean p2, int p3){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	boolean v4 = p0.checkAutoRevokeAccess(v2, v3);
	if (v4 != 0) {
		boolean v5 = p0.setAutoRevokeExemptedInternal(v2, p2, p3);
		return v5;
	}
}


This is path 3 for the API with depth 1:
public boolean setAutoRevokeExempted(String p1, boolean p2, int p3){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	if (v5 != 0) {
		boolean v6 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
		if ( != 0) {
			if (v6 == 0) {
				boolean v4 = 1;
				if (v4 != 0) {
					int v8 = v2.getUid();
					int v9 = UserHandle.getUid(p3, v8);
					String v10 = v2.getPackageName();
					int v11 = this.mAppOpsManager.checkOpNoThrow(98, v9, v10);
					if (v11 == 0) {
						boolean v7 = 0;
						return v7;
					}
				}
			}
		}
	}
}
