The method setAutoRevokeExempted has the following code snippet:

This is path 1 for the API with depth 1:
public boolean setAutoRevokeExempted(String p1, boolean p2, int p3){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	if (v5 != 0) {
		boolean v6 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
		if ( != 0) {
			if (v6 == 0) {
				boolean v4 = 1;
				if (v4 != 0) {
					int v8 = v2.getUid();
					int v9 = UserHandle.getUid(p3, v8);
					String v10 = v2.getPackageName();
					int v11 = this.mAppOpsManager.checkOpNoThrow(98, v9, v10);
					if (v11 == 0) {
						long v12 = Binder.clearCallingIdentity();
						String v13 = v2.getPackageName();
						if (p2 == 0) {
							this.mAppOpsManager.setMode(97, v9, v13, );
							Binder.restoreCallingIdentity(v12);
							boolean v7 = 1;
							return v7;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public boolean setAutoRevokeExempted(String p1, boolean p2, int p3){
	Object v1 = Objects.requireNonNull(p1);
	AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
	int v3 = Binder.getCallingUid();
	if (v5 != 0) {
		boolean v6 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
		if ( != 0) {
			if (v6 == 0) {
				boolean v4 = 1;
				if (v4 != 0) {
					int v8 = v2.getUid();
					int v9 = UserHandle.getUid(p3, v8);
					String v10 = v2.getPackageName();
					int v11 = this.mAppOpsManager.checkOpNoThrow(98, v9, v10);
					if (v11 == 0) {
						boolean v7 = 0;
						return v7;
					}
				}
			}
		}
	}
}

and the following sink code:
['AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);\nint v3 = Binder.getCallingUid();\nboolean v4 = p0.checkAutoRevokeAccess(v2, v3);\nboolean v5 = p0.setAutoRevokeExemptedInternal(v2, p2, p3);\nreturn v5;', 'Object v1 = Objects.requireNonNull(p1);\nAndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);\nint v3 = Binder.getCallingUid();\nboolean v6 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);\nint v8 = v2.getUid();\nint v9 = UserHandle.getUid(p3, v8);\nString v10 = v2.getPackageName();\nint v11 = this.mAppOpsManager.checkOpNoThrow(98, v9, v10);\nthis.mAppOpsManager.setMode(97, v9, v13);']

The method setAutoRevokeExempted has the following similar APIs:

- API Name: isAutoRevokeExempted(Ljava/lang/String;I)Z with Similarity Score: 0.88666170835495
  - Access Control Level: SYS_OR_SIG and the following code:
AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
int v3 = Binder.getCallingUid();
boolean v4 = this.mPackageManagerInt.filterAppAccess(p1, v3, p2);
boolean v7 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
int v8 = v2.getUid();
int v9 = UserHandle.getUid(p2, v8);

- API Name: queryStatsForUid(Ljava/lang/String;ILjava/lang/String;)Landroid/app/usage/StorageStats; with Similarity Score: 0.8140972852706909
  - Access Control Level: SYS_OR_SIG and the following code:
int v6 = Binder.getCallingUid();
ApplicationInfo v12 = this.mPackage.getApplicationInfoAsUser(v9[], 8192, v1);
this.mInstaller.getAppSize(p1, v9, v1, v18, v2, v10, , v16);
StorageStats v21 = StorageStatsService.translate(v16);
return v21;

