The method startOneTimePermissionSession has the following code snippet:

This is path 1 for the API with depth 2:
public void startOneTimePermissionSession(String p1, int p2, long p3, long p4, int p5, int p6){
	Object v2 = Objects.requireNonNull(p1);
	long v3 = Binder.clearCallingIdentity();
	PackageManager v6 = this.mContext.getPackageManager();
	int v7 = v6.getPackageUid(p1, 0);
	Object v8 = this.mListeners.get(v7);
	if (v8 == 0) {
		long v10 = Math.min(this.mTimeout, p2);
		this.mTimeout = v10;
		if ((p3 < -1) != 0) {
			long v11 = DeviceConfig.getLong("permissions", "one_time_permissions_killed_delay_millis", 5000);
			long v12 = Math.min(this.mRevokeAfterKilledDelay, );
			this.mRevokeAfterKilledDelay = v12;
			int v13 = Math.min(p4, this.mImportanceToResetTimer);
			this.mImportanceToResetTimer = v13;
			int v14 = Math.min(p5, this.mImportanceToKeepSessionAlive);
			this.mImportanceToKeepSessionAlive = v14;
			ActivityManager v30 = OneTimePermissionUserManager.-$$Nest$fgetmActivityManager(this.this$0);
			int v31 = v30.getPackageImportance(this.mPackageName);
			OneTimePermissionUserManager$PackageInactivityListener.onImportanceChanged(this.mUid, v31);
			Binder.restoreCallingIdentity(v3);
			return;
		}
	}
}

and the following sink code:
['Object v8 = this.mListeners.get(v7);\nv8.updateSessionParameters(p3, p4, p5, p6);', 'v4.startPackageOneTimeSession(p1, p3, p4, p5, p6);']

The method startOneTimePermissionSession has the following similar APIs:

- API Name: stopOneTimePermissionSession(Ljava/lang/String;I)V with Similarity Score: 0.8952237963676453
  - Access Control Level: SYS_OR_SIG and the following code:
v4.stopPackageOneTimeSession(p1);

- API Name: startSession(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/content/ComponentName;IILcom/android/internal/os/IResultReceiver;)V with Similarity Score: 0.8518499732017517
  - Access Control Level: NONE and the following code:
v9.startSessionLocked(p1, p2, v7, p4, v12, p5, p6);

