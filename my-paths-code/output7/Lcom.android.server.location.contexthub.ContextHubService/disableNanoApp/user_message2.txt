The method disableNanoApp has the following code snippet:

This is path 1 for the API with depth 2:
public void disableNanoApp(int p1, IContextHubTransactionCallback p2, long p3){
	if (this.mContextHubWrapper != 0) {
		Integer v4 = Integer.valueOf(p1);
		boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
		boolean v3 = v5;
		if (v3 != 0) {
			boolean v2 = 1;
			if (v2 != 0) {
				String v6 = p0.getCallingPackageName();
				ContextHubServiceTransaction v7 = this.mTransactionManager.createDisableTransaction(p1, p3, p2, v6);
				int v9 = this.mTransactionQueue.size();
				if (v9 == 10000) {
					boolean v10 = this.mTransactionQueue.add(v7);
					ContextHubTransactionManager$TransactionRecord v11 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v12);
					String v12 = v7.toString();
					boolean v14 = this.mTransactionRecordDeque.add(v11);
					int v15 = this.mTransactionQueue.size();
					if (v15 != 1) {
						if ( == 0) {
							boolean v17 = this.mTransactionQueue.isEmpty();
							if (v17 != 0) {
								Object v18 = this.mTransactionQueue.peek();
								int v19 = v18.onTransact();
								if (v19 != 0) {
									ContextHubTransactionManager$$ExternalSyntheticLambda0 v20 = new ContextHubTransactionManager$$ExternalSyntheticLambda0(ContextHubTransactionManager,v18);
									long v22 = v18.getTimeout(TimeUnit.SECONDS);
									ScheduledFuture v23 = this.mTimeoutExecutor.schedule(v20, v22, TimeUnit.SECONDS);
									this.mTimeoutFuture = v23;
									if ( == 0) {
										boolean v24 = this.mTransactionQueue.isEmpty();
										if (v24 != 0) {
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void disableNanoApp(int p1, IContextHubTransactionCallback p2, long p3){
	if (this.mContextHubWrapper != 0) {
		Integer v4 = Integer.valueOf(p1);
		boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
		boolean v3 = v5;
		if (v3 != 0) {
			boolean v2 = 1;
			if (v2 != 0) {
				String v6 = p0.getCallingPackageName();
				ContextHubServiceTransaction v7 = this.mTransactionManager.createDisableTransaction(p1, p3, p2, v6);
				int v9 = this.mTransactionQueue.size();
				if (v9 == 10000) {
					boolean v10 = this.mTransactionQueue.add(v7);
					ContextHubTransactionManager$TransactionRecord v11 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v12);
					String v12 = v7.toString();
					boolean v14 = this.mTransactionRecordDeque.add(v11);
					int v15 = this.mTransactionQueue.size();
					if (v15 != 1) {
						if ( == 0) {
							boolean v17 = this.mTransactionQueue.isEmpty();
							if (v17 != 0) {
								Object v18 = this.mTransactionQueue.peek();
								int v19 = v18.onTransact();
								if (v19 != 0) {
									int v20 = ContextHubServiceUtil.toTransactionResult(v19);
									v18.onTransactionComplete(v20);
									Object v22 = this.mTransactionQueue.remove();
									if ( == 0) {
										boolean v23 = this.mTransactionQueue.isEmpty();
										if (v23 != 0) {
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void disableNanoApp(int p1, IContextHubTransactionCallback p2, long p3){
	if (this.mContextHubWrapper != 0) {
		Integer v4 = Integer.valueOf(p1);
		boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
		boolean v3 = v5;
		if (v3 != 0) {
			boolean v2 = 1;
			if (v2 != 0) {
				return;
			}
		}
	}
}

and the following sink code:
['Integer v4 = Integer.valueOf(p1);\nboolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);\nString v6 = p0.getCallingPackageName();\nContextHubServiceTransaction v7 = this.mTransactionManager.createDisableTransaction(p1, p3, p2, v6);\nboolean v10 = this.mTransactionQueue.add(v7);', 'p2.onTransactionComplete(8);', 'boolean v2 = p0.checkHalProxyAndContextHubId(p1, p2, 3);\nString v3 = p0.getCallingPackageName();\nContextHubServiceTransaction v4 = this.mTransactionManager.createDisableTransaction(p1, p3, p2, v3);\nthis.mTransactionManager.addTransaction(v4);']

The method disableNanoApp has the following similar APIs:

- API Name: enableNanoApp(ILandroid/hardware/location/IContextHubTransactionCallback;J)V with Similarity Score: 0.9528120160102844
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v4 = Integer.valueOf(p1);
boolean v5 = this.mContextHubIdToInfoMap.containsKey(v4);
String v6 = p0.getCallingPackageName();
ContextHubServiceTransaction v7 = this.mTransactionManager.createEnableTransaction(p1, p3, p2, v6);
this.mTransactionQueue.add(v7);

- API Name: unloadNanoAppFromHub(ILandroid/hardware/location/IContextHubTransactionCallback;J)V with Similarity Score: 0.9335650205612183
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = p0.checkHalProxyAndContextHubId(p1, p2, 1);
String v3 = p0.getCallingPackageName();
ContextHubServiceTransaction v4 = this.mTransactionManager.createUnloadTransaction(p1, p3, p2, v3);
this.mTransactionManager.addTransaction(v4);

