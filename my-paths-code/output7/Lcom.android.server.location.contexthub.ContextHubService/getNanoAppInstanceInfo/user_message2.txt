The method getNanoAppInstanceInfo has the following code snippet:

This is path 1 for the API with depth 1:
public NanoAppInstanceInfo getNanoAppInstanceInfo(int p1){
	Integer v3 = Integer.valueOf(p1);
	Object v4 = this.mNanoAppHash.get(v3);
	NanoAppInstanceInfo v2 = v4;
	return v2;
}

and the following sink code:
['NanoAppInstanceInfo v2 = this.mNanoAppStateManager.getNanoAppInstanceInfo(p1);\nreturn v2;', 'Object v4 = this.mNanoAppHash.get(v3);\nNanoAppInstanceInfo v2 = v4;\nreturn v2;']

The method getNanoAppInstanceInfo has the following similar APIs:

- API Name: sendMessage(IILandroid/hardware/location/ContextHubMessage;)I with Similarity Score: 0.8373550176620483
  - Access Control Level: SYS_OR_SIG and the following code:
NanoAppInstanceInfo v9 = this.mNanoAppStateManager.getNanoAppInstanceInfo(p2);
NanoAppMessage v15 = new NanoAppMessage(v10,v11,v12,0);
Integer v17 = Integer.valueOf(p1);
Object v18 = this.mDefaultClientMap.get(v17);
int v19 = v18.sendMessageToNanoApp(v14);

- API Name: sendMessage(IILandroid/hardware/location/ContextHubMessage;)I with Similarity Score: 0.763565182685852
  - Access Control Level: SYS_OR_SIG and the following code:
NanoAppInstanceInfo v9 = this.mNanoAppStateManager.getNanoAppInstanceInfo(p2);
NanoAppMessage v15 = new NanoAppMessage(v10,v11,v12,0);
Integer v17 = Integer.valueOf(p1);
Object v18 = this.mDefaultClientMap.get(v17);
int v19 = v18.sendMessageToNanoApp(v14);

