The method createClient has the following code snippet:

This is path 1 for the API with depth 2:
public IContextHubClient createClient(int p1, IContextHubClientCallback p2, String p3, String p4){
	Integer v3 = Integer.valueOf(p1);
	boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
	boolean v2 = v4;
	if (v2 == 0) {
		if (p2 == 0) {
			Integer v5 = Integer.valueOf(p1);
			Object v6 = this.mContextHubIdToInfoMap.get(v5);
			int v9 = this.mHostEndPointIdToClientMap.size();
			if (v9 == 32768) {
				if ( > 32767) {
					Short v10 = Short.valueOf();
					boolean v11 = this.mHostEndPointIdToClientMap.containsKey(v10);
					if (v11 != 0) {
						if ( != 32767) {
							if ( > 32767) {
								Short v12 = Short.valueOf();
								boolean v13 = this.mHostEndPointIdToClientMap.containsKey(v12);
								if (v13 != 0) {
									if ( != 32767) {
										this.mNextHostEndPointId = ;
										short v8 = ;
										ContextHubClientBroker v14 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);
										Short v16 = Short.valueOf(v8);
										Object v17 = this.mHostEndPointIdToClientMap.put(v16, v14);
										ContextHubClientManager$RegistrationRecord v18 = new ContextHubClientManager$RegistrationRecord(ContextHubClientManager,v19,0);
										StringBuilder v20 = new StringBuilder();
										StringBuilder v22 = v20.append("[ContextHubClient ");
										StringBuilder v23 = v20.append("endpointID: ");
										short v24 = ContextHubClientBroker.getHostEndPointId();
										StringBuilder v25 = v20.append(v24);
										StringBuilder v26 = v20.append(", ");
										String v27 = v20.toString();
										StringBuilder v28 = new StringBuilder();
										StringBuilder v30 = v28.append(v27);
										StringBuilder v31 = v28.append("contextHub: ");
										int v32 = ContextHubClientBroker.getAttachedContextHubId();
										StringBuilder v33 = v28.append(v32);
										StringBuilder v34 = v28.append(", ");
										String v35 = v28.toString();
										if (this.mAttributionTag == 0) {
											StringBuilder v36 = new StringBuilder();
											StringBuilder v38 = v36.append(v35);
											StringBuilder v39 = v36.append("attributionTag: ");
											String v40 = ContextHubClientBroker.getAttributionTag();
											StringBuilder v41 = v36.append(v40);
											StringBuilder v42 = v36.append(", ");
											String v43 = v36.toString();
											boolean v44 = this.mPendingIntentRequest.isValid();
											if (v44 == 0) {
												StringBuilder v45 = new StringBuilder();
												StringBuilder v47 = v45.append();
												StringBuilder v48 = v45.append("package: ");
												StringBuilder v49 = v45.append(this.mPackage);
												String v50 = v45.toString();
												int v51 = this.mMessageChannelNanoappIdMap.size();
												if (v51 <= 0) {
													StringBuilder v52 = new StringBuilder();
													StringBuilder v54 = v52.append();
													StringBuilder v55 = v52.append("]");
													String v56 = v52.toString();
													String v19 = v56;
													boolean v58 = this.mRegistrationRecordDeque.add(v18);
													if (this.mCallbackInterface == 0) {
														IBinder v60 = this.mCallbackInterface.asBinder();
														v60.linkToDeath(ContextHubClientBroker, 0);
														short v65 = this.mHostEndPointId;
														if (v14 != 0) {
															IInterface v70 = v14.queryLocalInterface("android.hardware.location.IContextHubClient");
															if (v70 == 0) {
																if (v70 instanceof IContextHubClient == 0) {
																	IContextHubClient$Stub$Proxy v71 = new IContextHubClient$Stub$Proxy(v14);
																	IContextHubClient v69 = v71;
																	IContextHubClient v7 = v69;
																	return v7;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public IContextHubClient createClient(int p1, IContextHubClientCallback p2, String p3, String p4){
	Integer v3 = Integer.valueOf(p1);
	boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
	boolean v2 = v4;
	if (v2 == 0) {
		if (p2 == 0) {
			Integer v5 = Integer.valueOf(p1);
			Object v6 = this.mContextHubIdToInfoMap.get(v5);
			int v9 = this.mHostEndPointIdToClientMap.size();
			if (v9 == 32768) {
				if ( > 32767) {
					Short v10 = Short.valueOf();
					boolean v11 = this.mHostEndPointIdToClientMap.containsKey(v10);
					if (v11 != 0) {
						if ( != 32767) {
							if ( > 32767) {
								Short v12 = Short.valueOf();
								boolean v13 = this.mHostEndPointIdToClientMap.containsKey(v12);
								if (v13 != 0) {
									if ( != 32767) {
										this.mNextHostEndPointId = ;
										short v8 = ;
										ContextHubClientBroker v14 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);
										Short v16 = Short.valueOf(v8);
										Object v17 = this.mHostEndPointIdToClientMap.put(v16, v14);
										ContextHubClientManager$RegistrationRecord v18 = new ContextHubClientManager$RegistrationRecord(ContextHubClientManager,v19,0);
										StringBuilder v20 = new StringBuilder();
										StringBuilder v22 = v20.append("[ContextHubClient ");
										StringBuilder v23 = v20.append("endpointID: ");
										short v24 = ContextHubClientBroker.getHostEndPointId();
										StringBuilder v25 = v20.append(v24);
										StringBuilder v26 = v20.append(", ");
										String v27 = v20.toString();
										StringBuilder v28 = new StringBuilder();
										StringBuilder v30 = v28.append(v27);
										StringBuilder v31 = v28.append("contextHub: ");
										int v32 = ContextHubClientBroker.getAttachedContextHubId();
										StringBuilder v33 = v28.append(v32);
										StringBuilder v34 = v28.append(", ");
										String v35 = v28.toString();
										if (this.mAttributionTag == 0) {
											StringBuilder v36 = new StringBuilder();
											StringBuilder v38 = v36.append(v35);
											StringBuilder v39 = v36.append("attributionTag: ");
											String v40 = ContextHubClientBroker.getAttributionTag();
											StringBuilder v41 = v36.append(v40);
											StringBuilder v42 = v36.append(", ");
											String v43 = v36.toString();
											boolean v44 = this.mPendingIntentRequest.isValid();
											if (v44 == 0) {
												StringBuilder v45 = new StringBuilder();
												StringBuilder v47 = v45.append();
												StringBuilder v48 = v45.append("package: ");
												StringBuilder v49 = v45.append(this.mPackage);
												String v50 = v45.toString();
												int v51 = this.mMessageChannelNanoappIdMap.size();
												if (v51 <= 0) {
													StringBuilder v52 = new StringBuilder();
													StringBuilder v54 = v52.append();
													StringBuilder v55 = v52.append("]");
													String v56 = v52.toString();
													String v19 = v56;
													boolean v58 = this.mRegistrationRecordDeque.add(v18);
													if (this.mCallbackInterface == 0) {
														IBinder v60 = this.mCallbackInterface.asBinder();
														v60.linkToDeath(ContextHubClientBroker, 0);
														short v65 = this.mHostEndPointId;
														if (v14 != 0) {
															IInterface v70 = v14.queryLocalInterface("android.hardware.location.IContextHubClient");
															if (v70 == 0) {
																if (v70 instanceof IContextHubClient == 0) {
																	IContextHubClient$Stub$Proxy v71 = new IContextHubClient$Stub$Proxy(v14);
																	IContextHubClient v69 = v71;
																	IContextHubClient v7 = v69;
																	return v7;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Integer v3 = Integer.valueOf(p1);\nboolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);\nContextHubClientBroker v14 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);\nObject v17 = this.mHostEndPointIdToClientMap.put(v16, v14);\nreturn v7;', 'Integer v5 = Integer.valueOf(p1);\nObject v6 = this.mContextHubIdToInfoMap.get(v5);\nshort v8 = ContextHubClientManager.getHostEndPointId();\nContextHubClientBroker v9 = new ContextHubClientBroker(this.mContext,this.mContextHubProxy,ContextHubClientManager,v6,v8,p2,p3,this.mTransactionManager,p4);\nIContextHubClient v25 = IContextHubClient$Stub.asInterface(v9);\nreturn v7;', 'boolean v2 = p0.isValidContextHubId(p1);\nIContextHubClient v5 = this.mClientManager.registerClient(v4, p2, p3, this.mTransactionManager, p4);\nreturn v5;']

The method createClient has the following similar APIs:

- API Name: createPendingIntentClient(ILandroid/app/PendingIntent;JLjava/lang/String;)Landroid/hardware/location/IContextHubClient; with Similarity Score: 0.9736106395721436
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v3 = Integer.valueOf(p1);
boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
Object v6 = this.mContextHubIdToInfoMap.get(v5);
ContextHubClientBroker v26 = new ContextHubClientBroker(this.mContext, this.mContextHubProxy, ContextHubClientManager, v6, v20, p2, p3, p4, this.mTransactionManager);
Short v28 = Short.valueOf(v20);
Object v29 = this.mHostEndPointIdToClientMap.put(v28, v26);

- API Name: createPendingIntentClient(ILandroid/app/PendingIntent;JLjava/lang/String;)Landroid/hardware/location/IContextHubClient; with Similarity Score: 0.9530425071716309
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v5 = Integer.valueOf(p1);
Object v6 = this.mContextHubIdToInfoMap.get(v5);
int v8 = v6.getId();
ContextHubClientBroker v9 = ContextHubClientManager.getClientBroker(v8, p2, p3);
short v10 = ContextHubClientManager.getHostEndPointId();
ContextHubClientBroker v11 = new ContextHubClientBroker(this.mContext, this.mContextHubProxy, ContextHubClientManager, v6, v10, p2, p3, p4, this.mTransactionManager);

