The method unloadNanoApp has the following code snippet:

This is path 1 for the API with depth 2:
public int unloadNanoApp(int p1){
	if (this.mContextHubWrapper != 0) {
		Integer v3 = Integer.valueOf(p1);
		Object v4 = this.mNanoAppHash.get(v3);
		NanoAppInstanceInfo v2 = v4;
		if (v2 != 0) {
			int v5 = this.mContexthubId;
			long v6 = this.mAppId;
			ContextHubService$8 v8 = new ContextHubService$8(ContextHubService,v5);
			IContextHubTransactionCallback v7 = v8;
			PackageManager v11 = this.mContext.getPackageManager();
			int v12 = Binder.getCallingUid();
			String v13 = v11.getNameForUid(v12);
			String v10 = v13;
			ContextHubTransactionManager$2 v15 = new ContextHubTransactionManager$2(ContextHubTransactionManager,v16,1,v6,v10,v5,v6,v7);
			int v16 = this.mNextAvailableId.getAndIncrement();
			ContextHubServiceTransaction v14 = v15;
			int v19 = this.mTransactionQueue.size();
			if (v19 == 10000) {
				boolean v20 = this.mTransactionQueue.add(v14);
				ContextHubTransactionManager$TransactionRecord v21 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v22);
				String v22 = v14.toString();
				boolean v24 = this.mTransactionRecordDeque.add(v21);
				int v25 = this.mTransactionQueue.size();
				if (v25 != 1) {
					if ( == 0) {
						boolean v27 = this.mTransactionQueue.isEmpty();
						if (v27 != 0) {
							Object v28 = this.mTransactionQueue.peek();
							int v29 = v28.onTransact();
							if (v29 != 0) {
								ContextHubTransactionManager$$ExternalSyntheticLambda0 v30 = new ContextHubTransactionManager$$ExternalSyntheticLambda0(ContextHubTransactionManager,v28);
								long v32 = v28.getTimeout(TimeUnit.SECONDS);
								ScheduledFuture v33 = this.mTimeoutExecutor.schedule(v30, v32, TimeUnit.SECONDS);
								this.mTimeoutFuture = v33;
								if ( == 0) {
									boolean v34 = this.mTransactionQueue.isEmpty();
									if (v34 != 0) {
										return 0;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int unloadNanoApp(int p1){
	if (this.mContextHubWrapper != 0) {
		Integer v3 = Integer.valueOf(p1);
		Object v4 = this.mNanoAppHash.get(v3);
		NanoAppInstanceInfo v2 = v4;
		if (v2 != 0) {
			int v5 = this.mContexthubId;
			long v6 = this.mAppId;
			ContextHubService$8 v8 = new ContextHubService$8(ContextHubService,v5);
			IContextHubTransactionCallback v7 = v8;
			PackageManager v11 = this.mContext.getPackageManager();
			int v12 = Binder.getCallingUid();
			String v13 = v11.getNameForUid(v12);
			String v10 = v13;
			ContextHubTransactionManager$2 v15 = new ContextHubTransactionManager$2(ContextHubTransactionManager,v16,1,v6,v10,v5,v6,v7);
			int v16 = this.mNextAvailableId.getAndIncrement();
			ContextHubServiceTransaction v14 = v15;
			int v19 = this.mTransactionQueue.size();
			if (v19 == 10000) {
				boolean v20 = this.mTransactionQueue.add(v14);
				ContextHubTransactionManager$TransactionRecord v21 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v22);
				String v22 = v14.toString();
				boolean v24 = this.mTransactionRecordDeque.add(v21);
				int v25 = this.mTransactionQueue.size();
				if (v25 != 1) {
					if ( == 0) {
						boolean v27 = this.mTransactionQueue.isEmpty();
						if (v27 != 0) {
							Object v28 = this.mTransactionQueue.peek();
							int v29 = v28.onTransact();
							if (v29 != 0) {
								int v30 = ContextHubServiceUtil.toTransactionResult(v29);
								v28.onTransactionComplete(v30);
								Object v32 = this.mTransactionQueue.remove();
								if ( == 0) {
									boolean v33 = this.mTransactionQueue.isEmpty();
									if (v33 != 0) {
										return 0;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Integer v3 = Integer.valueOf(p1);\nNanoAppInstanceInfo v2 = this.mNanoAppStateManager.getNanoAppInstanceInfo(p1);\nContextHubServiceTransaction v7 = this.mTransactionManager.createUnloadTransaction(v3, v4, v5, v6);', 'ContextHubService$8 v8 = new ContextHubService$8(ContextHubService,v5);\nContextHubTransactionManager$2 v15 = new ContextHubTransactionManager$2(ContextHubTransactionManager,v16,1,v6,v10,v5,v6,v7);']

The method unloadNanoApp has the following similar APIs:

- API Name: sendMessage(IILandroid/hardware/location/ContextHubMessage;)I with Similarity Score: 0.8784109354019165
  - Access Control Level: SYS_OR_SIG and the following code:
ContextHubService$9 v10 = new ContextHubService$9(ContextHubService,p1);
ContextHubTransactionManager$5 v17 = new ContextHubTransactionManager$5(ContextHubTransactionManager,v18,4,v12,p1,v9);
int v14 = Binder.getCallingUid();
this.mTransactionQueue.add(v16);
ContextHubTransactionManager$TransactionRecord v23 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v24);
this.mTransactionRecordDeque.add(v23);

- API Name: loadNanoAppOnHub(ILandroid/hardware/location/IContextHubTransactionCallback;Landroid/hardware/location/NanoAppBinary;)V with Similarity Score: 0.8039264678955078
  - Access Control Level: SYS_OR_SIG and the following code:
String v6 = p0.getCallingPackageName();
ContextHubTransactionManager$1 v8 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v9,0,v10,v6,p1,p3,p2);

