This is path 1 for the API with depth 2:
public int loadNanoApp(int p1, NanoApp p2){
	if (this.mContextHubWrapper != 0) {
		Integer v3 = Integer.valueOf(p1);
		boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
		boolean v2 = v4;
		if (v2 != 0) {
			if (p2 != 0) {
				NanoAppBinary v5 = new NanoAppBinary(v6);
				byte[] v6 = this.mAppBinary;
				ContextHubService$7 v9 = new ContextHubService$7(ContextHubService,p1,v5);
				IContextHubTransactionCallback v8 = v9;
				PackageManager v12 = this.mContext.getPackageManager();
				int v13 = Binder.getCallingUid();
				String v14 = v12.getNameForUid(v13);
				String v11 = v14;
				ContextHubTransactionManager$1 v16 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v17,0,v18,v11,p1,v5,v8);
				int v17 = this.mNextAvailableId.getAndIncrement();
				long v18 = this.mNanoAppId;
				ContextHubServiceTransaction v15 = v16;
				int v21 = this.mTransactionQueue.size();
				if (v21 == 10000) {
					boolean v22 = this.mTransactionQueue.add(v15);
					ContextHubTransactionManager$TransactionRecord v23 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v24);
					String v24 = v15.toString();
					boolean v26 = this.mTransactionRecordDeque.add(v23);
					int v27 = this.mTransactionQueue.size();
					if (v27 != 1) {
						if ( == 0) {
							boolean v29 = this.mTransactionQueue.isEmpty();
							if (v29 != 0) {
								Object v30 = this.mTransactionQueue.peek();
								int v31 = v30.onTransact();
								if (v31 != 0) {
									ContextHubTransactionManager$$ExternalSyntheticLambda0 v32 = new ContextHubTransactionManager$$ExternalSyntheticLambda0(ContextHubTransactionManager,v30);
									long v34 = v30.getTimeout(TimeUnit.SECONDS);
									ScheduledFuture v35 = this.mTimeoutExecutor.schedule(v32, v34, TimeUnit.SECONDS);
									this.mTimeoutFuture = v35;
									if ( == 0) {
										boolean v36 = this.mTransactionQueue.isEmpty();
										if (v36 != 0) {
											return 0;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public int loadNanoApp(int p1, NanoApp p2){
	if (this.mContextHubWrapper != 0) {
		Integer v3 = Integer.valueOf(p1);
		boolean v4 = this.mContextHubIdToInfoMap.containsKey(v3);
		boolean v2 = v4;
		if (v2 != 0) {
			if (p2 != 0) {
				NanoAppBinary v5 = new NanoAppBinary(v6);
				byte[] v6 = this.mAppBinary;
				ContextHubService$7 v9 = new ContextHubService$7(ContextHubService,p1,v5);
				IContextHubTransactionCallback v8 = v9;
				PackageManager v12 = this.mContext.getPackageManager();
				int v13 = Binder.getCallingUid();
				String v14 = v12.getNameForUid(v13);
				String v11 = v14;
				ContextHubTransactionManager$1 v16 = new ContextHubTransactionManager$1(ContextHubTransactionManager,v17,0,v18,v11,p1,v5,v8);
				int v17 = this.mNextAvailableId.getAndIncrement();
				long v18 = v5.getNanoAppId();
				ContextHubServiceTransaction v15 = v16;
				int v21 = this.mTransactionQueue.size();
				if (v21 == 10000) {
					boolean v22 = this.mTransactionQueue.add(v15);
					ContextHubTransactionManager$TransactionRecord v23 = new ContextHubTransactionManager$TransactionRecord(ContextHubTransactionManager,v24);
					String v24 = v15.toString();
					boolean v26 = this.mTransactionRecordDeque.add(v23);
					int v27 = this.mTransactionQueue.size();
					if (v27 != 1) {
						ContextHubTransactionManager.startNextTransaction();
						return 0;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public int loadNanoApp(int p1, NanoApp p2){
	if (this.mContextHubWrapper != 0) {
		boolean v2 = p0.isValidContextHubId(p1);
		if (v2 != 0) {
			if (p2 != 0) {
				NanoAppBinary v3 = new NanoAppBinary(v4);
				byte[] v4 = p2.getAppBinary();
				IContextHubTransactionCallback v6 = p0.createLoadTransactionCallback(p1, v3);
				String v7 = p0.getCallingPackageName();
				ContextHubServiceTransaction v8 = this.mTransactionManager.createLoadTransaction(p1, v3, v6, v7);
				this.mTransactionManager.addTransaction(v8);
				return 0;
			}
		}
	}
}
