This is path 1 for the API with depth 0:
public void getAuthToken(IAccountManagerResponse p1, Account p2, String p3, boolean p4, boolean p5, Bundle p6){
	Bundle v1 = Bundle.setDefusable(p6, 1);
	if (v2 == 0) {
		int v16 = Binder.getCallingUid();
		int v19 = Binder.getCallingPid();
		if (p1 == 0) {
			Preconditions.checkArgument(, "response cannot be null");
			if (p2 != 0) {
				p1.onError(7, "account is null");
				return;
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void getAuthToken(IAccountManagerResponse p1, Account p2, String p3, boolean p4, boolean p5, Bundle p6){
	Bundle v1 = Bundle.setDefusable(p6, 1);
	if (v2 == 0) {
		int v16 = Binder.getCallingUid();
		int v19 = Binder.getCallingPid();
		if (p1 == 0) {
			Preconditions.checkArgument(, "response cannot be null");
			if (p2 != 0) {
				p1.onError(7, "account is null");
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void getAuthToken(IAccountManagerResponse p1, Account p2, String p3, boolean p4, boolean p5, Bundle p6){
	Bundle v1 = Bundle.setDefusable(p6, 1);
	if (v2 == 0) {
		int v16 = Binder.getCallingUid();
		int v19 = Binder.getCallingPid();
		if (p1 == 0) {
			Preconditions.checkArgument(, "response cannot be null");
			if (p2 != 0) {
				if (p3 != 0) {
					p1.onError(7, "authTokenType is null");
					return;
				}
			}
		}
	}
}
