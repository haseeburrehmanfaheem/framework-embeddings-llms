This is path 1 for the API with depth 2:
public void getAuthTokenLabel(IAccountManagerResponse p1, String p2, String p3){
	int v6 = UserHandle.getUserId(v3);
	long v7 = IAccountManager$Stub.clearCallingIdentity();
	Object v10 = this.mUsers.get(p1);
	if (v10 != 0) {
		boolean v11 = AccountManagerService$UserAccounts.accountsDb.isCeDatabaseAttached();
		if (v11 != 0) {
			boolean v12 = this.mLocalUnlockedUsers.get(p1);
			if (v12 == 0) {
				File v20 = new File(v21);
				String v21 = this.mInjector.getCeDatabaseName(p1);
				AccountManagerService$UserAccounts.accountsDb.attachCeDatabase(v20);
				AccountManagerService.syncDeCeAccountsLocked();
				if ( == 0) {
					AccountManagerService.validateAccountsInternal(, 1);
					AccountManagerService$UserAccounts v9 = ;
					AccountManagerService$UserAccounts v8 = v9;
					AccountManagerService$7 v26 = new AccountManagerService$7(p0,v8,p1,p2,0,0,0,0,p2,p3);
					if (v29 == 0) {
						IAccountAuthenticatorCache v37 = AccountManagerService.-$$Nest$fgetmAuthenticatorCache(this.this$0);
						AuthenticatorDescription v38 = AuthenticatorDescription.newKey(this.mAccountType);
						int v39 = AccountManagerService$UserAccounts.-$$Nest$fgetuserId(this.mAccounts);
						RegisteredServicesCache$ServiceInfo v40 = v37.getServiceInfo(v38, v39);
						if (v40 != 0) {
							int v41 = AccountManagerService$UserAccounts.-$$Nest$fgetuserId(this.mAccounts);
							boolean v42 = AccountManagerService.-$$Nest$misLocalUnlockedUser(this.this$0, v41);
							if (v42 != 0) {
								if (ComponentInfo.directBootAware != 0) {
									Intent v43 = new Intent();
									Intent v45 = v43.setAction("android.accounts.AccountAuthenticator");
									Intent v46 = v43.setComponent(RegisteredServicesCache$ServiceInfo.componentName);
									if (v47 == 0) {
										IAccountAuthenticatorCache v54 = AccountManagerService.-$$Nest$fgetmAuthenticatorCache(this.this$0);
										int v55 = AccountManagerService$UserAccounts.-$$Nest$fgetuserId(this.mAccounts);
										boolean v56 = v54.getBindInstantServiceAllowed(v55);
										if (v56 == 0) {
											int v57 = AccountManagerService$UserAccounts.-$$Nest$fgetuserId(this.mAccounts);
											UserHandle v58 = UserHandle.of(v57);
											boolean v59 = AccountManagerService.mContext.bindServiceAsUser(v43, AccountManagerService$Session, , v58);
											if (v59 != 0) {
												if (v60 == 0) {
													boolean v36 = 0;
													if (v36 != 0) {
														long v65 = SystemClock.elapsedRealtime();
														String v66 = AccountManagerService$Session.toDebugString(v65);
														String v64 = v66;
														this.mNumErrors = (this.mNumErrors + 1);
														IAccountManagerResponse v71 = AccountManagerService$Session.getResponseAndClose();
														if (v71 == 0) {
															if (v72 == 0) {
																Class v75 = AccountManagerService$Session.getClass();
																String v76 = v75.getSimpleName();
																v71.onError(1, "bind failure");
																if (v83 == 0) {
																	IAccountManager$Stub.restoreCallingIdentity(v7);
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void getAuthTokenLabel(IAccountManagerResponse p1, String p2, String p3){
	int v6 = UserHandle.getUserId(v3);
	long v7 = IAccountManager$Stub.clearCallingIdentity();
	AccountManagerService$UserAccounts v9 = AccountManagerService.getUserAccountsNotChecked(v6);
	AccountManagerService$UserAccounts v8 = v9;
	AccountManagerService$7 v10 = new AccountManagerService$7(p0,v8,p1,p2,0,0,0,0,p2,p3);
	if (v13 == 0) {
		boolean v20 = AccountManagerService$Session.bindToAuthenticator(this.mAccountType);
		if (v20 != 0) {
			String v24 = AccountManagerService$Session.toDebugString();
			AccountManagerService$Session.onError(1, "bind failure");
			IAccountManager$Stub.restoreCallingIdentity(v7);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void getAuthTokenLabel(IAccountManagerResponse p1, String p2, String p3){
	int v6 = UserHandle.getUserId(v3);
	long v7 = IAccountManager$Stub.clearCallingIdentity();
	AccountManagerService$UserAccounts v8 = p0.getUserAccounts(v6);
	AccountManagerService$7 v9 = new AccountManagerService$7(p0,v8,p1,p2,0,0,0,0,p2,p3);
	v9.bind();
	IAccountManager$Stub.restoreCallingIdentity(v7);
	return;
}
