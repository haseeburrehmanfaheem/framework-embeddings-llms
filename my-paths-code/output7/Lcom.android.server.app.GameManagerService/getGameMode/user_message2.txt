The method getGameMode has the following code snippet:

This is path 1 for the API with depth 2:
public int getGameMode(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
	ApplicationInfo v5 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v4 = ;
		if (v4 != 0) {
			boolean v6 = ;
			if (v6 == 0) {
				Integer v10 = Integer.valueOf(v3);
				boolean v11 = this.mSettings.containsKey(v10);
				if (v11 != 0) {
					Integer v12 = Integer.valueOf(v3);
					Object v13 = this.mSettings.get(v12);
					boolean v15 = this.mGameModes.containsKey(p1);
					if (v15 == 0) {
						Object v16 = this.mGameModes.get(p1);
						int v17 = v16.intValue();
						int v14 = v17;
						int v9 = v14;
						return v9;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getGameMode(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
	ApplicationInfo v5 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v4 = ;
		if (v4 != 0) {
			boolean v6 = ;
			if (v6 == 0) {
				Integer v10 = Integer.valueOf(v3);
				boolean v11 = this.mSettings.containsKey(v10);
				if (v11 != 0) {
					Integer v12 = Integer.valueOf(v3);
					Object v13 = this.mSettings.get(v12);
					boolean v15 = this.mGameModes.containsKey(p1);
					if (v15 == 0) {
						int v14 = 0;
						int v9 = v14;
						return v9;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int getGameMode(String p1, int p2){
	Integer v8 = Integer.valueOf(v3);
	boolean v9 = this.mSettings.containsKey(v8);
	if (v9 != 0) {
		Integer v10 = Integer.valueOf(v3);
		Object v11 = this.mSettings.get(v10);
		boolean v13 = this.mGameModes.containsKey(p1);
		if (v13 == 0) {
			Object v14 = this.mGameModes.get(p1);
			int v15 = v14.intValue();
			int v12 = v15;
			int v7 = v12;
			return v7;
		}
	}
}

and the following sink code:
['int v3 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");\nApplicationInfo v5 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);\nInteger v10 = Integer.valueOf(v3);\nboolean v11 = this.mSettings.containsKey(v10);\nObject v13 = this.mSettings.get(v12);\nboolean v15 = this.mGameModes.containsKey(p1);\nint v17 = v16.intValue();\nreturn v9;', 'int v3 = ActivityManager.handleIncomingUser(v1, v2, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");\nApplicationInfo v5 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);\nInteger v10 = Integer.valueOf(v3);\nboolean v11 = this.mSettings.containsKey(v10);\nreturn v9;', 'int v7 = p0.getGameModeFromSettings(p1, v3);\nreturn v7;']

The method getGameMode has the following similar APIs:

- API Name: isAngleEnabled(Ljava/lang/String;I)Z with Similarity Score: 0.9738648533821106
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = ActivityManager.handleIncomingUser(v2, v3, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);
Integer v11 = Integer.valueOf(v4);
boolean v12 = this.mSettings.containsKey(v11);
Object v22 = this.mConfigs.get(p1);
GameManagerService$GamePackageConfiguration$GameModeConfiguration v23 = v22.getGameModeConfiguration(v1);
boolean v24 = v23.getUseAngle();
return v24;

- API Name: isAngleEnabled(Ljava/lang/String;I)Z with Similarity Score: 0.9596787691116333
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = ActivityManager.handleIncomingUser(v2, v3, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);
Integer v11 = Integer.valueOf(v4);
boolean v12 = this.mSettings.containsKey(v11);
Object v22 = this.mConfigs.get(p1);
GameManagerService$GamePackageConfiguration$GameModeConfiguration v23 = v22.getGameModeConfiguration(v1);
boolean v24 = v23.getUseAngle();
return v24;

