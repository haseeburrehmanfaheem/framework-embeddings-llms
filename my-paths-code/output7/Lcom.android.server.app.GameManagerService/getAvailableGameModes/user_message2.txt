The method getAvailableGameModes has the following code snippet:

This is path 1 for the API with depth 2:
public [I getAvailableGameModes(String p1){
	Object v3 = this.mOverrideConfigs.get(p1);
	if (v3 != 0) {
		Object v4 = this.mConfigs.get(p1);
		if ( != 0) {
			int v6 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
			int v7 = Integer.bitCount(v6);
			[I v8 = new [I(v7);
			int v9 = Integer.highestOneBit(v6);
			int v10 = Integer.numberOfTrailingZeros(v9);
			if ( > v10) {
				if (((v6 >> ) & 1) == 0) {
					if ( > v10) {
						[I v5 = v8;
						[I v2 = v5;
						return v2;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mOverrideConfigs.get(p1);\nObject v4 = this.mConfigs.get(p1);\nint v6 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();\nint v7 = Integer.bitCount(v6);\n[I v8 = new [I(v7);\nreturn v2;', 'Object v3 = this.mOverrideConfigs.get(p1);\nObject v4 = this.mConfigs.get(p1);\n[I v5 = new [I(0);\nreturn v2;', '[I v2 = p0.getAvailableGameModesUnchecked(p1);\nreturn v2;']

The method getAvailableGameModes has the following similar APIs:

- API Name: getGameModeInfo(Ljava/lang/String;I)Landroid/app/GameModeInfo; with Similarity Score: 0.8099287152290344
  - Access Control Level: SYS_OR_SIG and the following code:
int v6 = p0.getGameModeFromSettings(p1, v3);
[I v7 = p0.getAvailableGameModesUnchecked(p1);
GameModeInfo v8 = new GameModeInfo(v6,v7);
return v8;

- API Name: getGameMode(Ljava/lang/String;I)I with Similarity Score: 0.7736774682998657
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = p0.getGameModeFromSettings(p1, v3);
return v7;

