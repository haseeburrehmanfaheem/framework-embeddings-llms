This is path 1 for the API with depth 2:
public void setGameMode(String p1, int p2, int p3){
	ApplicationInfo v3 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, p3);
	if (ApplicationInfo.category != 0) {
		boolean v2 = ;
		if (v2 != 0) {
			int v4 = Binder.getCallingPid();
			int v5 = Binder.getCallingUid();
			int v6 = ActivityManager.handleIncomingUser(v4, v5, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
			Integer v7 = Integer.valueOf(v6);
			boolean v8 = this.mSettings.containsKey(v7);
			if (v8 != 0) {
				Integer v9 = Integer.valueOf(v6);
				Object v10 = this.mSettings.get(v9);
				Integer v12 = Integer.valueOf(p2);
				Object v13 = this.mGameModes.put(p1, v12);
				Message v14 = this.mHandler.obtainMessage(1);
				Integer v15 = Integer.valueOf(v6);
				Message.obj = v15;
				Integer v16 = Integer.valueOf(v6);
				boolean v17 = this.mHandler.hasEqualMessages(1, v16);
				if (v17 != 0) {
					boolean v18 = this.mHandler.sendMessageDelayed(v14, 10000);
					if (p2 == 1) {
						if (p2 != 0) {
							Object v20 = this.mOverrideConfigs.get(p1);
							if (v20 != 0) {
								Object v21 = this.mConfigs.get(p1);
								if ( != 0) {
									if (this.mBatteryModeOptedIn == 0) {
										if (p2 == 3) {
											if (this.mPerfModeOptedIn == 0) {
												if (p2 != 2) {
													boolean v22 = ;
													if (v22 == 0) {
														GameManagerService$GamePackageConfiguration$GameModeConfiguration v24 = .getGameModeConfiguration(p2);
														if (v24 != 0) {
															long v25 = v24.getCompatChangeId();
															if ((v25 < 0) != 0) {
																GameManagerService$GamePackageConfiguration$GameModeConfiguration v35 = .getGameModeConfiguration(p2);
																if (v35 != 0) {
																	Message v45 = this.mHandler.obtainMessage(6);
																	Integer v46 = Integer.valueOf(v6);
																	Message.obj = v46;
																	Integer v47 = Integer.valueOf(v6);
																	boolean v48 = this.mHandler.hasEqualMessages(6, v47);
																	if (v48 != 0) {
																		boolean v49 = this.mHandler.sendMessage(v45);
																		return;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setGameMode(String p1, int p2, int p3){
	ApplicationInfo v3 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, p3);
	if (ApplicationInfo.category != 0) {
		boolean v2 = ;
		if (v2 != 0) {
			int v4 = Binder.getCallingPid();
			int v5 = Binder.getCallingUid();
			int v6 = ActivityManager.handleIncomingUser(v4, v5, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
			Integer v7 = Integer.valueOf(v6);
			boolean v8 = this.mSettings.containsKey(v7);
			if (v8 != 0) {
				Integer v9 = Integer.valueOf(v6);
				Object v10 = this.mSettings.get(v9);
				Integer v12 = Integer.valueOf(p2);
				Object v13 = this.mGameModes.put(p1, v12);
				Message v14 = this.mHandler.obtainMessage(1);
				Integer v15 = Integer.valueOf(v6);
				Message.obj = v15;
				Integer v16 = Integer.valueOf(v6);
				boolean v17 = this.mHandler.hasEqualMessages(1, v16);
				if (v17 != 0) {
					boolean v18 = this.mHandler.sendMessageDelayed(v14, 10000);
					if (p2 == 1) {
						if (p2 != 0) {
							Object v20 = this.mOverrideConfigs.get(p1);
							if (v20 != 0) {
								Object v21 = this.mConfigs.get(p1);
								if ( != 0) {
									GameManagerService.disableCompatScale(p1);
									Message v29 = this.mHandler.obtainMessage(6);
									Integer v30 = Integer.valueOf(v6);
									Message.obj = v30;
									Integer v31 = Integer.valueOf(v6);
									boolean v32 = this.mHandler.hasEqualMessages(6, v31);
									if (v32 != 0) {
										boolean v33 = this.mHandler.sendMessage(v29);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setGameMode(String p1, int p2, int p3){
	boolean v2 = p0.isPackageGame(p1, p3);
	if (v2 != 0) {
		int v3 = Binder.getCallingPid();
		int v4 = Binder.getCallingUid();
		int v5 = ActivityManager.handleIncomingUser(v3, v4, p3, 0, 1, "setGameMode", "com.android.server.app.GameManagerService");
		Integer v6 = Integer.valueOf(v5);
		boolean v7 = this.mSettings.containsKey(v6);
		if (v7 != 0) {
			Integer v8 = Integer.valueOf(v5);
			Object v9 = this.mSettings.get(v8);
			v9.setGameModeLocked(p1, p2);
			Message v11 = this.mHandler.obtainMessage(1);
			Integer v12 = Integer.valueOf(v5);
			Message.obj = v12;
			Integer v13 = Integer.valueOf(v5);
			boolean v14 = this.mHandler.hasEqualMessages(1, v13);
			if (v14 != 0) {
				boolean v15 = this.mHandler.sendMessageDelayed(v11, 10000);
				p0.updateInterventions(p1, p2, v5);
				Message v17 = this.mHandler.obtainMessage(6);
				Integer v18 = Integer.valueOf(v5);
				Message.obj = v18;
				Integer v19 = Integer.valueOf(v5);
				boolean v20 = this.mHandler.hasEqualMessages(6, v19);
				if (v20 != 0) {
					boolean v21 = this.mHandler.sendMessage(v17);
					return;
				}
			}
		}
	}
}
