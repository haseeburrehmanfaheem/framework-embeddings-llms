This is path 1 for the API with depth 2:
public boolean isAngleEnabled(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = ActivityManager.handleIncomingUser(v2, v3, p2, 0, 1, "getGameMode", "com.android.server.app.GameManagerService");
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v4);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			boolean v7 = ;
			if (v7 == 0) {
				Integer v11 = Integer.valueOf(v4);
				boolean v12 = this.mSettings.containsKey(v11);
				if (v12 != 0) {
					int v10 = 0;
					int v1 = v10;
					if (v1 != 0) {
						Object v22 = this.mConfigs.get(p1);
						if (v22 != 0) {
							GameManagerService$GamePackageConfiguration$GameModeConfiguration v23 = v22.getGameModeConfiguration(v1);
							if (v23 != 0) {
								boolean v24 = v23.getUseAngle();
								return v24;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isAngleEnabled(String p1, int p2){
	int v8 = GameManagerService.getGameModeFromSettings(p1, v4);
	int v1 = v8;
	if (v1 != 0) {
		Object v9 = this.mConfigs.get(p1);
		if (v9 != 0) {
			Integer v11 = Integer.valueOf(v1);
			Object v12 = this.mModeConfigs.get(v11);
			GameManagerService$GamePackageConfiguration$GameModeConfiguration v10 = v12;
			if (v10 != 0) {
				boolean v13 = this.mUseAngle;
				return v13;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isAngleEnabled(String p1, int p2){
	int v1 = p0.getGameMode(p1, p2);
	if (v1 != 0) {
		Object v2 = this.mConfigs.get(p1);
		if (v2 != 0) {
			GameManagerService$GamePackageConfiguration$GameModeConfiguration v3 = v2.getGameModeConfiguration(v1);
			if (v3 != 0) {
				boolean v4 = v3.getUseAngle();
				return v4;
			}
		}
	}
}
