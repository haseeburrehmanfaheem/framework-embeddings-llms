The method getGameModeInfo has the following code snippet:

This is path 1 for the API with depth 2:
public GameModeInfo getGameModeInfo(String p1, int p2){
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			Integer v8 = Integer.valueOf(v3);
			boolean v9 = this.mSettings.containsKey(v8);
			if (v9 != 0) {
				Integer v10 = Integer.valueOf(v3);
				Object v11 = this.mSettings.get(v10);
				boolean v13 = this.mGameModes.containsKey(p1);
				if (v13 == 0) {
					Object v14 = this.mGameModes.get(p1);
					int v15 = v14.intValue();
					int v12 = v15;
					int v7 = v12;
					Object v17 = this.mOverrideConfigs.get(p1);
					if (v17 != 0) {
						Object v18 = this.mConfigs.get(p1);
						if ( != 0) {
							int v20 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
							int v21 = Integer.bitCount(v20);
							[I v22 = new [I(v21);
							int v23 = Integer.highestOneBit(v20);
							int v24 = Integer.numberOfTrailingZeros(v23);
							if ( > v24) {
								if (((v20 >> ) & 1) == 0) {
									if ( > v24) {
										[I v19 = v22;
										[I v16 = v19;
										GameModeInfo v25 = new GameModeInfo(v7,v16);
										return v25;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public GameModeInfo getGameModeInfo(String p1, int p2){
	ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);
	if (ApplicationInfo.category != 0) {
		boolean v5 = ;
		if (v5 != 0) {
			Integer v8 = Integer.valueOf(v3);
			boolean v9 = this.mSettings.containsKey(v8);
			if (v9 != 0) {
				Integer v10 = Integer.valueOf(v3);
				Object v11 = this.mSettings.get(v10);
				boolean v13 = this.mGameModes.containsKey(p1);
				if (v13 == 0) {
					int v12 = 0;
					int v7 = v12;
					Object v15 = this.mOverrideConfigs.get(p1);
					if (v15 != 0) {
						Object v16 = this.mConfigs.get(p1);
						if ( != 0) {
							int v18 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();
							int v19 = Integer.bitCount(v18);
							[I v20 = new [I(v19);
							int v21 = Integer.highestOneBit(v18);
							int v22 = Integer.numberOfTrailingZeros(v21);
							if ( > v22) {
								if (((v18 >> ) & 1) == 0) {
									if ( > v22) {
										[I v17 = v20;
										[I v14 = v17;
										GameModeInfo v23 = new GameModeInfo(v7,v14);
										return v23;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);\nInteger v8 = Integer.valueOf(v3);\nboolean v9 = this.mSettings.containsKey(v8);\nObject v11 = this.mSettings.get(v10);\nObject v17 = this.mOverrideConfigs.get(p1);\nint v20 = GameManagerService$GamePackageConfiguration.getAvailableGameModesBitfield();\nint v21 = Integer.bitCount(v20);\n[I v22 = new [I(v21);\nGameModeInfo v25 = new GameModeInfo(v7,v16);\nreturn v25;', 'ApplicationInfo v6 = this.mPackageManager.getApplicationInfoAsUser(p1, 131072, v3);\nInteger v8 = Integer.valueOf(v3);\nboolean v9 = this.mSettings.containsKey(v8);\n[I v22 = new [I(0);\nGameModeInfo v23 = new GameModeInfo(v7,v19);\nreturn v23;', 'int v6 = p0.getGameModeFromSettings(p1, v3);\n[I v7 = p0.getAvailableGameModesUnchecked(p1);\nGameModeInfo v8 = new GameModeInfo(v6,v7);\nreturn v8;']

The method getGameModeInfo has the following similar APIs:

- API Name: getGameMode(Ljava/lang/String;I)I with Similarity Score: 0.8993094563484192
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = p0.getGameModeFromSettings(p1, v3);
return v7;

- API Name: notifyGraphicsEnvironmentSetup(Ljava/lang/String;I)V with Similarity Score: 0.8834280967712402
  - Access Control Level: SYS_OR_SIG and the following code:
int v16 = GameManagerService.getGameModeFromSettings(p1, v12);
int v9 = v16;
if (v9 != 0) { ... }

