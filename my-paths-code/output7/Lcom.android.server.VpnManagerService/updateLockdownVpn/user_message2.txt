The method updateLockdownVpn has the following code snippet:

This is path 1 for the API with depth 2:
public boolean updateLockdownVpn(){
	byte[] v6 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");
	byte[] v5 = v6;
	if (v5 == 0) {
		boolean v4 = ;
		this.mLockdownEnabled = v4;
		if (v4 != 0) {
			ILegacyKeystore v9 = LegacyVpnProfileStore.getService();
			byte[] v10 = v9.get(p1, -1);
			if (ServiceSpecificException.errorCode == 7) {
				byte[] v8 = 0;
				byte[] v7 = v8;
				if (v7 != 0) {
					String v11 = new String(v7);
					StringBuilder v13 = new StringBuilder();
					StringBuilder v15 = v13.append("VPN_");
					StringBuilder v16 = v13.append(v11);
					String v17 = v13.toString();
					ILegacyKeystore v20 = LegacyVpnProfileStore.getService();
					byte[] v21 = v20.get(p1, -1);
					if (ServiceSpecificException.errorCode == 7) {
						byte[] v19 = 0;
						byte[] v18 = v19;
						VpnProfile v22 = VpnProfile.decode(v11, v18);
						if (v22 != 0) {
							int v23 = this.mDeps.getCallingUid();
							int v24 = UserHandle.getUserId(v23);
							Object v25 = this.mVpns.get(v24);
							if (v25 != 0) {
								LockdownVpnTracker v26 = new LockdownVpnTracker(this.mContext,this.mHandler,v25,v22);
								this.mLockdownTracker = 0;
								if (this.mLockdownTracker == 0) {
									LockdownVpnTracker.shutdownLocked();
									if (v26 == 0) {
										this.mLockdownTracker = v26;
										LockdownVpnTracker.initLocked();
										return 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean updateLockdownVpn(){
	byte[] v6 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");
	byte[] v5 = v6;
	if (v5 == 0) {
		boolean v4 = ;
		this.mLockdownEnabled = v4;
		if (v4 != 0) {
			ILegacyKeystore v9 = LegacyVpnProfileStore.getService();
			byte[] v10 = v9.get(p1, -1);
			byte[] v8 = v10;
			byte[] v7 = v8;
			if (v7 != 0) {
				String v11 = new String(v7);
				StringBuilder v13 = new StringBuilder();
				StringBuilder v15 = v13.append("VPN_");
				StringBuilder v16 = v13.append(v11);
				String v17 = v13.toString();
				ILegacyKeystore v20 = LegacyVpnProfileStore.getService();
				byte[] v21 = v20.get(p1, -1);
				if (ServiceSpecificException.errorCode == 7) {
					byte[] v19 = 0;
					byte[] v18 = v19;
					VpnProfile v22 = VpnProfile.decode(v11, v18);
					if (v22 != 0) {
						int v23 = this.mDeps.getCallingUid();
						int v24 = UserHandle.getUserId(v23);
						Object v25 = this.mVpns.get(v24);
						if (v25 != 0) {
							LockdownVpnTracker v26 = new LockdownVpnTracker(this.mContext,this.mHandler,v25,v22);
							this.mLockdownTracker = 0;
							if (this.mLockdownTracker == 0) {
								LockdownVpnTracker.shutdownLocked();
								if (v26 == 0) {
									this.mLockdownTracker = v26;
									LockdownVpnTracker.initLocked();
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean updateLockdownVpn(){
	byte[] v6 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");
	byte[] v5 = v6;
	if (v5 == 0) {
		boolean v4 = ;
		this.mLockdownEnabled = v4;
		if (v4 != 0) {
			ILegacyKeystore v9 = LegacyVpnProfileStore.getService();
			byte[] v10 = v9.get(p1, -1);
			if (ServiceSpecificException.errorCode == 7) {
				byte[] v8 = 0;
				byte[] v7 = v8;
				if (v7 != 0) {
					String v11 = new String(v7);
					StringBuilder v13 = new StringBuilder();
					StringBuilder v15 = v13.append("VPN_");
					StringBuilder v16 = v13.append(v11);
					String v17 = v13.toString();
					ILegacyKeystore v20 = LegacyVpnProfileStore.getService();
					byte[] v21 = v20.get(p1, -1);
					byte[] v19 = v21;
					byte[] v18 = v19;
					VpnProfile v22 = VpnProfile.decode(v11, v18);
					if (v22 != 0) {
						int v23 = this.mDeps.getCallingUid();
						int v24 = UserHandle.getUserId(v23);
						Object v25 = this.mVpns.get(v24);
						if (v25 != 0) {
							LockdownVpnTracker v26 = new LockdownVpnTracker(this.mContext,this.mHandler,v25,v22);
							this.mLockdownTracker = 0;
							if (this.mLockdownTracker == 0) {
								LockdownVpnTracker.shutdownLocked();
								if (v26 == 0) {
									this.mLockdownTracker = v26;
									LockdownVpnTracker.initLocked();
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['byte[] v6 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");\nLockdownVpnTracker v26 = new LockdownVpnTracker(this.mContext, this.mHandler, v25, v22);\nthis.mLockdownTracker = v26;', 'byte[] v7 = LegacyVpnProfileStore.get("LOCKDOWN_VPN");\nLockdownVpnTracker v22 = new LockdownVpnTracker(this.mContext, this.mHandler, v21, v17);\nthis.mLockdownTracker = v22;', 'byte[] v5 = this.mVpnProfileStore.get("LOCKDOWN_VPN");']

The method updateLockdownVpn has the following similar APIs:

- API Name: setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z with Similarity Score: 0.8248968720436096
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = p0.isLockdownVpnEnabled();
Object v4 = this.mVpns.get(p1);
StringBuilder v5 = new StringBuilder();
String v10 = v5.toString();

- API Name: setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z with Similarity Score: 0.8229985237121582
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = p0.isLockdownVpnEnabled();
Object v4 = this.mVpns.get(p1);
StringBuilder v5 = new StringBuilder();
String v10 = v5.toString();

