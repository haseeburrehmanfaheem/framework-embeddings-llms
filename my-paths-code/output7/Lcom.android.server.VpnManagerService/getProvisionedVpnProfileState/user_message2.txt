The method getProvisionedVpnProfileState has the following code snippet:

This is path 1 for the API with depth 2:
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, "No package name provided");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	if (v12 != 0) {
		Binder.restoreCallingIdentity(v10);
		boolean v15 = Vpn.isCurrentPreparedPackage(p1);
		if (v15 == 0) {
			boolean v16 = Vpn.isIkev2VpnRunner();
			if (v16 == 0) {
				boolean v14 = ;
				if (v14 == 0) {
					VpnProfileState v18 = new VpnProfileState(v19,,this.mAlwaysOn,this.mLockdown);
					int v19 = Vpn.getStateFromLegacyState(this.mLegacyState);
					boolean v20 = Vpn.isIkev2VpnRunner();
					if (v20 == 0) {
						String v21 = Vpn.getSessionKeyLocked();
						VpnProfileState v17 = v18;
						VpnProfileState v7 = ;
						return v7;
					}
				}
			}
		}
	}
}

and the following sink code:
['VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);\nreturn v5;', 'int v19 = Vpn.getStateFromLegacyState(this.mLegacyState);\nVpnProfileState v18 = new VpnProfileState(v19,,this.mAlwaysOn,this.mLockdown);\nreturn v7;', 'VpnProfileState v11 = Vpn.makeVpnProfileStateLocked();\nreturn v7;']

The method getProvisionedVpnProfileState has the following similar APIs:

- API Name: startVpnProfile(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.8331274390220642
  - Access Control Level: SYS_OR_SIG and the following code:
VpnProfile v13 = Vpn.getVpnProfilePrivileged(p1);
Vpn.startVpnProfilePrivileged(v13, p1);

- API Name: getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo; with Similarity Score: 0.8224467635154724
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mVpns.get(p1);
boolean v6 = Vpn.isSettingsVpnLocked();
LegacyVpnInfo v5 = 0;
LegacyVpnInfo v3 = v5;
return v3;

