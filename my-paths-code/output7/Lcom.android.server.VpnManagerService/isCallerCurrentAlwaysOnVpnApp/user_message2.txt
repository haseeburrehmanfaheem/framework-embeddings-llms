The method isCallerCurrentAlwaysOnVpnApp has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isCallerCurrentAlwaysOnVpnApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	if (v6 != 0) {
		Vpn v4 = 0;
		Vpn v1 = v4;
		if (v1 == 0) {
			boolean v7 = v1.getAlwaysOn();
			if (v7 == 0) {
				return ;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isCallerCurrentAlwaysOnVpnApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	if (v6 != 0) {
		UnderlyingNetworkInfo v7 = v6.getUnderlyingNetworkInfo();
		if (v7 == 0) {
			int v8 = v7.getOwnerUid();
			if (v8 == v2) {
				Vpn v4 = ;
				Vpn v1 = v4;
				if (v1 == 0) {
					boolean v9 = v1.getAlwaysOn();
					if (v9 == 0) {
						return ;
					}
				}
			}
		}
	}
}

and the following sink code:
['int v2 = this.mDeps.getCallingUid();\nVpn v3 = VpnManagerService.getVpnIfOwner(v2);\nboolean v4 = this.mAlwaysOn;\nreturn ;', 'int v3 = Binder.getCallingUid();\nint v5 = UserHandle.getUserId(v2);\nObject v6 = this.mVpns.get(v5);\nboolean v7 = v1.getAlwaysOn();\nreturn ;', 'Vpn v1 = p0.getVpnIfOwner();\nboolean v2 = v1.getAlwaysOn();\nreturn ;']

The method isCallerCurrentAlwaysOnVpnApp has the following similar APIs:

- API Name: isCallerCurrentAlwaysOnVpnLockdownApp()Z with Similarity Score: 0.964469850063324
  - Access Control Level: NONE and the following code:
int v3 = Binder.getCallingUid();
int v5 = UserHandle.getUserId(v2);
Object v6 = this.mVpns.get(v5);

- API Name: isCallerCurrentAlwaysOnVpnLockdownApp()Z with Similarity Score: 0.9403603672981262
  - Access Control Level: NONE and the following code:
int v2 = this.mDeps.getCallingUid();
Vpn v3 = VpnManagerService.getVpnIfOwner(v2);
boolean v4 = this.mLockdown;

