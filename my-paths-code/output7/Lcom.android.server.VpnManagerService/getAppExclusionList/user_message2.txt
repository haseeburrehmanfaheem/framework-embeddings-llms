The method getAppExclusionList has the following code snippet:

This is path 1 for the API with depth 2:
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v5 = Binder.clearCallingIdentity();
		VpnProfileStore v6 = this.mVpnProfileStore;
		StringBuilder v8 = new StringBuilder();
		StringBuilder v10 = v8.append("VPNAPPEXCLUDED_");
		StringBuilder v11 = v8.append(this.mUserId);
		StringBuilder v12 = v8.append("_");
		StringBuilder v13 = v8.append(p1);
		String v14 = v8.toString();
		String v7 = v14;
		byte[] v16 = LegacyVpnProfileStore.get(v7);
		byte[] v15 = v16;
		if (v15 == 0) {
			if (v15.length != 0) {
				ByteArrayInputStream v18 = new ByteArrayInputStream(v15);
				PersistableBundle v20 = PersistableBundle.readFromStream(v18);
				PersistableBundle v17 = v20;
				int v22 = v17.getInt("COLLECTION_LENGTH");
				ArrayList v23 = new ArrayList(v22);
				if ( >= v22) {
					Object v25 = new Object(1);
					Integer v26 = Integer.valueOf();
					String v27 = String.format("LIST_ITEM_%d", v25);
					PersistableBundle v28 = v17.getPersistableBundle(v27);
					Object v29 = PersistableBundleUtils.STRING_DESERIALIZER.fromPersistableBundle(v28);
					boolean v30 = v23.add(v29);
					if ( >= v22) {
						List v21 = v23;
						Binder.restoreCallingIdentity(v5);
						List v4 = v21;
						return v4;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	if (v3 == 0) {
		long v5 = Binder.clearCallingIdentity();
		VpnProfileStore v6 = this.mVpnProfileStore;
		StringBuilder v8 = new StringBuilder();
		StringBuilder v10 = v8.append("VPNAPPEXCLUDED_");
		StringBuilder v11 = v8.append(this.mUserId);
		StringBuilder v12 = v8.append("_");
		StringBuilder v13 = v8.append(p1);
		String v14 = v8.toString();
		String v7 = v14;
		byte[] v16 = LegacyVpnProfileStore.get(v7);
		byte[] v15 = v16;
		if (v15 == 0) {
			if (v15.length != 0) {
				ArrayList v17 = new ArrayList();
				Binder.restoreCallingIdentity(v5);
				List v4 = v17;
				return v4;
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mVpns.get(p1);\nlong v5 = Binder.clearCallingIdentity();\nStringBuilder v8 = new StringBuilder();\nStringBuilder v10 = v8.append("VPNAPPEXCLUDED_");\nStringBuilder v11 = v8.append(this.mUserId);\nStringBuilder v12 = v8.append("_");\nStringBuilder v13 = v8.append(p1);\nString v14 = v8.toString();\nbyte[] v16 = LegacyVpnProfileStore.get(v7);\nByteArrayInputStream v18 = new ByteArrayInputStream(v15);\nPersistableBundle v20 = PersistableBundle.readFromStream(v18);\nArrayList v23 = new ArrayList(v22);\nList v21 = v23;\nBinder.restoreCallingIdentity(v5);\nreturn v4;', 'Object v3 = this.mVpns.get(p1);\nlong v5 = Binder.clearCallingIdentity();\nVpnProfileStore v6 = Vpn.getVpnProfileStore();\nString v7 = Vpn.getVpnAppExcludedForPackage(p2);\nbyte[] v8 = v6.get(v7);\nArrayList v9 = new ArrayList();\nBinder.restoreCallingIdentity(v5);\nreturn v4;', 'Object v3 = this.mVpns.get(p1);']

The method getAppExclusionList has the following similar APIs:

- API Name: isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z with Similarity Score: 0.8743772506713867
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mVpns.get(p1);
long v6 = Binder.clearCallingIdentity();
boolean v8 = this.mDeps.isCallerSystem();
VpnProfileStore v9 = Vpn.getVpnProfileStore();
String v10 = Vpn.getProfileNameForPackage(p1);
byte[] v11 = v9.get(v10);
VpnProfile v12 = VpnProfile.decode("", v11);
PackageManager v14 = this.mContext.getPackageManager();
ApplicationInfo v15 = v14.getApplicationInfoAsUser(p2, 0, this.mUserId);
Intent v23 = new Intent("android.net.VpnService");
List v26 = v14.queryIntentServicesAsUser(v23, 128, this.mUserId);

- API Name: getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo; with Similarity Score: 0.8740617036819458
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mVpns.get(p1);
boolean v6 = Vpn.isSettingsVpnLocked();
LegacyVpnInfo v5 = 0;
LegacyVpnInfo v3 = v5;
return v3;

