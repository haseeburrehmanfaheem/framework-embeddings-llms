The method getEnrolledFaces has the following code snippet:

This is path 1 for the API with depth 2:
public List getEnrolledFaces(int p1, int p2, String p3){
	Iterator v8 = this.mServiceProviders.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		Object v10 = v8.next();
		boolean v11 = v10.containsSensor(p2);
		if (v11 == 0) {
			boolean v12 = v8.hasNext();
			if (v12 == 0) {
				Object v13 = v8.next();
				boolean v14 = v13.containsSensor(p2);
				if (v14 == 0) {
					ServiceProvider v7 = v13;
					ServiceProvider v6 = v7;
					if (v6 != 0) {
						List v21 = Collections.emptyList();
						return v21;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getEnrolledFaces(int p1, int p2, String p3){
	Iterator v8 = this.mServiceProviders.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		Object v10 = v8.next();
		boolean v11 = v10.containsSensor(p2);
		if (v11 == 0) {
			boolean v12 = v8.hasNext();
			if (v12 == 0) {
				ServiceProvider v7 = 0;
				ServiceProvider v6 = v7;
				if (v6 != 0) {
					List v19 = Collections.emptyList();
					return v19;
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getEnrolledFaces(int p1, int p2, String p3){
	Iterator v8 = this.mServiceProviders.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		Object v10 = v8.next();
		boolean v11 = v10.containsSensor(p2);
		if (v11 == 0) {
			boolean v12 = v8.hasNext();
			if (v12 == 0) {
				Object v13 = v8.next();
				boolean v14 = v13.containsSensor(p2);
				if (v14 == 0) {
					ServiceProvider v7 = v13;
					ServiceProvider v6 = v7;
					if (v6 != 0) {
						List v15 = v6.getEnrolledFaces(p1, p2);
						return v15;
					}
				}
			}
		}
	}
}

and the following sink code:
['Iterator v8 = this.mServiceProviders.iterator();\nboolean v9 = v8.hasNext();\nObject v10 = v8.next();\nboolean v11 = v10.containsSensor(p2);\nObject v13 = v8.next();\nboolean v14 = v13.containsSensor(p2);\nList v21 = Collections.emptyList();\nreturn v21;', 'ServiceProvider v7 = this.this$0.getProviderForSensor(p1);\nServiceProvider v6 = v7;\nif (v6 != 0) {\nList v14 = Collections.emptyList();\nreturn v14;', 'ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);\nif (v6 != 0) {\nList v13 = Collections.emptyList();\nreturn v13;']

The method getEnrolledFaces has the following similar APIs:

- API Name: createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession; with Similarity Score: 0.9708389043807983
  - Access Control Level: NORMAL and the following code:
Iterator v5 = this.mServiceProviders.iterator();
Object v7 = v5.next();
boolean v8 = v7.containsSensor(p2);
Object v10 = v5.next();
boolean v11 = v10.containsSensor(p2);

- API Name: resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V with Similarity Score: 0.9639187455177307
  - Access Control Level: NORMAL and the following code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
if (v3 != 0) { return; }

