The method dumpSensorServiceStateProto has the following code snippet:

This is path 1 for the API with depth 2:
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v3 = new ProtoOutputStream();
	Iterator v7 = this.mServiceProviders.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		boolean v10 = v9.containsSensor(p2);
		if (v10 == 0) {
			boolean v11 = v7.hasNext();
			if (v11 == 0) {
				Object v12 = v7.next();
				boolean v13 = v12.containsSensor(p2);
				if (v13 == 0) {
					ServiceProvider v6 = v12;
					ServiceProvider v5 = v6;
					if (v5 == 0) {
						v5.dumpProtoState(p1, v3, p2);
						v3.flush();
						byte[] v16 = v3.getBytes();
						return v16;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v3 = new ProtoOutputStream();
	Iterator v7 = this.mServiceProviders.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		boolean v10 = v9.containsSensor(p2);
		if (v10 == 0) {
			boolean v11 = v7.hasNext();
			if (v11 == 0) {
				ServiceProvider v6 = 0;
				ServiceProvider v5 = v6;
				if (v5 == 0) {
					v5.dumpProtoState(p1, v3, p2);
					v3.flush();
					byte[] v14 = v3.getBytes();
					return v14;
				}
			}
		}
	}
}

and the following sink code:
['ProtoOutputStream v3 = new ProtoOutputStream();\nv5.dumpProtoState(p1, v3, p2);\nv3.flush();\nbyte[] v16 = v3.getBytes();\nreturn v16;']

The method dumpSensorServiceStateProto has the following similar APIs:

- API Name: dumpSensorServiceStateProto(IZ)[B with Similarity Score: 0.9950282573699951
  - Access Control Level: NORMAL and the following code:
ProtoOutputStream v3 = new ProtoOutputStream();
v5.dumpProtoState(p1, v3, p2);
v3.flush();
byte[] v8 = v3.getBytes();
return v8;

