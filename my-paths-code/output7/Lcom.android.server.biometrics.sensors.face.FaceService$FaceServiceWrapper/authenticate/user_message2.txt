The method authenticate has the following code snippet:

This is path 1 for the API with depth 2:
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	Resources v6 = v3.getResources();
	String v7 = v6.getString(17039993);
	ComponentName v8 = ComponentName.unflattenFromString(v7);
	if (v8 == 0) {
		String v9 = v8.getPackageName();
		if (v5 == 0) {
			if ( == 0) {
				boolean v10 = .equals(p5);
				if (v10 == 0) {
					boolean v4 = ;
					Context v11 = this.this$0.getContext();
					Resources v14 = v11.getResources();
					String v15 = v14.getString(17039993);
					ComponentName v16 = ComponentName.unflattenFromString(v15);
					if (v16 == 0) {
						String v17 = v16.getPackageName();
						if (v13 == 0) {
							if ( == 0) {
								boolean v18 = .equals(p5);
								if (v18 == 0) {
									boolean v12 = ;
									List v21 = FaceService.getSensorProperties();
									int v22 = v21.size();
									if (v22 == 1) {
										Object v23 = v21.get(0);
										Iterator v24 = this.mServiceProviders.iterator();
										boolean v25 = v24.hasNext();
										if (v25 == 0) {
											Object v26 = v24.next();
											boolean v27 = v26.containsSensor(FaceSensorPropertiesInternal.sensorId);
											if (v27 == 0) {
												boolean v28 = v24.hasNext();
												if (v28 == 0) {
													Object v29 = v24.next();
													boolean v30 = v29.containsSensor(FaceSensorPropertiesInternal.sensorId);
													if (v30 == 0) {
														Pair v31 = new Pair(v32,v29);
														Integer v32 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
														Pair v20 = v31;
														Pair v19 = v20;
														if (v19 != 0) {
															int v34 = Pair.first.intValue();
															ClientMonitorCallbackConverter v35 = new ClientMonitorCallbackConverter(p4);
															long v37 = Pair.second.scheduleAuthenticate(v34, p1, p2, p3, 0, v35, p5, 0, v4, v12, p6);
															return v37;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	Resources v6 = v3.getResources();
	String v7 = v6.getString(17039993);
	ComponentName v8 = ComponentName.unflattenFromString(v7);
	if (v8 == 0) {
		String v9 = v8.getPackageName();
		if (v5 == 0) {
			if ( == 0) {
				boolean v10 = .equals(p5);
				if (v10 == 0) {
					boolean v4 = ;
					Context v11 = this.this$0.getContext();
					Resources v14 = v11.getResources();
					String v15 = v14.getString(17039993);
					ComponentName v16 = ComponentName.unflattenFromString(v15);
					if (v16 == 0) {
						String v17 = v16.getPackageName();
						if (v13 == 0) {
							if ( == 0) {
								boolean v18 = .equals(p5);
								if (v18 == 0) {
									boolean v12 = ;
									List v21 = FaceService.getSensorProperties();
									int v22 = v21.size();
									if (v22 == 1) {
										Object v23 = v21.get(0);
										Iterator v24 = this.mServiceProviders.iterator();
										boolean v25 = v24.hasNext();
										if (v25 == 0) {
											Object v26 = v24.next();
											boolean v27 = v26.containsSensor(FaceSensorPropertiesInternal.sensorId);
											if (v27 == 0) {
												boolean v28 = v24.hasNext();
												if (v28 == 0) {
													Object v29 = v24.next();
													boolean v30 = v29.containsSensor(FaceSensorPropertiesInternal.sensorId);
													if (v30 == 0) {
														Pair v31 = new Pair(v32,v29);
														Integer v32 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
														Pair v20 = v31;
														Pair v19 = v20;
														if (v19 != 0) {
															return -1;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['List v21 = FaceService.getSensorProperties();\nint v22 = v21.size();\nObject v23 = v21.get(0);\nIterator v24 = this.mServiceProviders.iterator();\nboolean v25 = v24.hasNext();\nObject v26 = v24.next();\nboolean v27 = v26.containsSensor(FaceSensorPropertiesInternal.sensorId);\nPair v31 = new Pair(v32,v29);\nInteger v32 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);\nlong v37 = Pair.second.scheduleAuthenticate(v34, p1, p2, p3, 0, v35, p5, 0, v4, v12, p6);', 'Pair v20 = this.this$0.getSingleProvider();\nint v21 = Pair.first.intValue();\nClientMonitorCallbackConverter v22 = new ClientMonitorCallbackConverter(p4);\nlong v24 = Pair.second.scheduleAuthenticate(v21, p1, p2, p3, 0, v22, p5, 0, v4, v12, p6);', 'Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);\nint v8 = Pair.first.intValue();\nClientMonitorCallbackConverter v9 = new ClientMonitorCallbackConverter(p4);\nlong v11 = Pair.second.scheduleAuthenticate(v8, p1, p2, p3, 0, v9, p5, 0, v4, v6, p6);']

The method authenticate has the following similar APIs:

- API Name: cancelEnrollment(Landroid/os/IBinder;J)V with Similarity Score: 0.8409257531166077
  - Access Control Level: NORMAL and the following code:
List v5 = FaceService.getSensorProperties();
int v6 = v5.size();
if (v6 == 1) {
Object v7 = v5.get(0);
Iterator v8 = this.mServiceProviders.iterator();
boolean v9 = v8.hasNext();
...
Pair v15 = new Pair(v16,v13);
Integer v16 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
Pair v4 = v15;
Pair v3 = v4;
if (v3 != 0) {
int v18 = Pair.first.intValue();
Pair.second.cancelEnrollment(v18, p1, p2);

- API Name: cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V with Similarity Score: 0.8153625130653381
  - Access Control Level: NORMAL and the following code:
Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
int v4 = Pair.first.intValue();
Pair.second.cancelAuthentication(v4, p1, p3);

