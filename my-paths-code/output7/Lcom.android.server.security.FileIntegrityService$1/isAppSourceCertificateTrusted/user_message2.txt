The method isAppSourceCertificateTrusted has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isAppSourceCertificateTrusted(byte[] p1, String p2){
	if (Build$VERSION.DEVICE_INITIAL_SDK_INT >= 30) {
		int v3 = SystemProperties.getInt("ro.apk_verity.mode", 0);
		if (v3 != 2) {
			boolean v2 = ;
			if (v2 != 0) {
				if (p1 != 0) {
					Collection v4 = this.mTrustedCertificates;
					ByteArrayInputStream v7 = new ByteArrayInputStream(p1);
					Certificate v9 = this.sCertFactory.generateCertificate(v7);
					if (v9 instanceof X509Certificate == 0) {
						X509Certificate v6 = v9;
						X509Certificate v5 = v6;
						boolean v10 = v4.contains(v5);
						return v10;
					}
				}
			}
		}
	}
}

and the following sink code:
['ByteArrayInputStream v7 = new ByteArrayInputStream(p1);\nCertificate v9 = this.sCertFactory.generateCertificate(v7);\nif (v9 instanceof X509Certificate == 0) {\nX509Certificate v6 = v9;\nX509Certificate v5 = v6;\nboolean v10 = v4.contains(v5);\nreturn v10;']

The method isAppSourceCertificateTrusted has the following similar APIs:

- API Name: startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B with Similarity Score: 0.7520912885665894
  - Access Control Level: SYS_OR_SIG and the following code:
CertPath v9 = p3.getCertPath();
X509Certificate v10 = this.mTestCertHelper.getRootCertificate(v3);
List v12 = v9.getCertificates();
byte[] v15 = v14.getEncoded();
byte[] v16 = RecoverableKeyStoreManager.startRecoverySession(p1, v15, p4, p5, p6);
return v1;

