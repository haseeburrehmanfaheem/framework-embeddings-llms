The method registerCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void registerCallback(ITvInteractiveAppManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInteractiveAppManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInteractiveAppManagerService$UserState v10 = TvInteractiveAppManagerService.getUserStateLocked(p2);
	if (v10 != 0) {
		TvInteractiveAppManagerService$UserState v11 = new TvInteractiveAppManagerService$UserState(p2,0);
		this.mUserStates.put(p2, v11);
		TvInteractiveAppManagerService$UserState v9 = ;
		TvInteractiveAppManagerService$UserState v8 = v9;
		RemoteCallbackList v14 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v15 = v14.register(p1);
		if (v15 != 0) {
			Binder.restoreCallingIdentity(v6);
			return;
		}
	}
}

and the following sink code:
['int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);\nTvInteractiveAppManagerService$UserState v10 = TvInteractiveAppManagerService.getUserStateLocked(p2);\nRemoteCallbackList v14 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v8);\nboolean v15 = v14.register(p1);', 'int v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "registerCallback");\nTvInteractiveAppManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);\nRemoteCallbackList v9 = this.mCallbacks;\nboolean v10 = v9.register(p1);', 'int v3 = TvInteractiveAppManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "registerCallback");\nTvInteractiveAppManagerService$UserState v6 = TvInteractiveAppManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);\nRemoteCallbackList v7 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmCallbacks(v6);\nboolean v8 = v7.register(p1);']

The method registerCallback has the following similar APIs:

- API Name: unregisterCallback(Landroid/media/tv/ITvInputManagerCallback;I)V with Similarity Score: 0.9429013729095459
  - Access Control Level: NONE and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v11);
RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
boolean v15 = v14.unregister(p1);
Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
Object v17 = v16.remove(p1);

- API Name: unregisterCallback(Landroid/media/tv/ITvInputManagerCallback;I)V with Similarity Score: 0.9385737180709839
  - Access Control Level: NONE and the following code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "unregisterCallback");
TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
RemoteCallbackList v7 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
boolean v8 = v7.unregister(p1);
Map v9 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v6);
Object v10 = v9.remove(p1);

