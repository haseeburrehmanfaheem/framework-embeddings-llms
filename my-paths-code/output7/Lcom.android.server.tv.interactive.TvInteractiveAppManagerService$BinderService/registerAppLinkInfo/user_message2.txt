The method registerAppLinkInfo has the following code snippet:

This is path 1 for the API with depth 2:
public void registerAppLinkInfo(String p1, AppLinkInfo p2, int p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("registerAppLinkInfo: ");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v9 = v10;
	int v8 = v9;
	long v11 = Binder.clearCallingIdentity();
	Object v12 = TvInteractiveAppManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInteractiveAppManagerService$UserState v15 = TvInteractiveAppManagerService.getUserStateLocked(p2);
	if (v15 != 0) {
		TvInteractiveAppManagerService$UserState v16 = new TvInteractiveAppManagerService$UserState(p2,0);
		this.mUserStates.put(p2, v16);
		TvInteractiveAppManagerService$UserState v14 = ;
		TvInteractiveAppManagerService$UserState v13 = v14;
		Map v19 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmIAppMap(v13);
		Object v20 = v19.get(p1);
		if (v20 != 0) {
			TvInteractiveAppServiceInfo v21 = TvInteractiveAppManagerService$TvInteractiveAppState.-$$Nest$fgetmInfo(v20);
			ComponentName v22 = v21.getComponent();
			Map v23 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v13);
			Object v24 = v23.get(v22);
			if (v24 != 0) {
				TvInteractiveAppManagerService$ServiceState v25 = new TvInteractiveAppManagerService$ServiceState(this.this$0,v22,p1,v8,0);
				Boolean v29 = Boolean.valueOf(p3);
				Pair v30 = Pair.create(p2, v29);
				boolean v31 = this.mPendingAppLinkInfo.add(v30);
				Map v32 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v13);
				Object v33 = v32.put(v22, v25);
				TvInteractiveAppManagerService$UserState v36 = TvInteractiveAppManagerService.getOrCreateUserStateLocked(p3);
				Map v37 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v36);
				Object v38 = v37.get(p2);
				if (v38 != 0) {
					boolean v39 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmReconnecting(v38);
					if (v39 == 0) {
						List v40 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmSessionTokens(v38);
						boolean v41 = v40.isEmpty();
						if (v41 != 0) {
							TvInteractiveAppManagerService$ServiceState.-$$Nest$fputmReconnecting(v38, 0);
							List v43 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmSessionTokens(v38);
							boolean v44 = v43.isEmpty();
							if (v44 == 0) {
								List v45 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmPendingAppLinkInfo(v38);
								boolean v46 = v45.isEmpty();
								if (v46 == 0) {
									List v47 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmPendingAppLinkCommand(v38);
									boolean v48 = v47.isEmpty();
									if (v48 != 0) {
										ITvInteractiveAppService v49 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmService(v38);
										if (v49 != 0) {
											if ( == 0) {
												boolean v50 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmBound(v38);
												if (v50 == 0) {
													Intent v51 = new Intent("android.media.tv.interactive.TvInteractiveAppService");
													Intent v53 = v51.setComponent(p2);
													ServiceConnection v54 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmConnection(v38);
													UserHandle v55 = new UserHandle(p3);
													boolean v57 = this.mContext.bindServiceAsUser(v53, v54, 33554433, v55);
													TvInteractiveAppManagerService$ServiceState.-$$Nest$fputmBound(v38, v57);
													Binder.restoreCallingIdentity(v11);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void registerAppLinkInfo(String p1, AppLinkInfo p2, int p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("registerAppLinkInfo: ");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v9 = v10;
	int v8 = v9;
	long v11 = Binder.clearCallingIdentity();
	Object v12 = TvInteractiveAppManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInteractiveAppManagerService$UserState v15 = TvInteractiveAppManagerService.getUserStateLocked(p2);
	if (v15 != 0) {
		TvInteractiveAppManagerService$UserState v16 = new TvInteractiveAppManagerService$UserState(p2,0);
		this.mUserStates.put(p2, v16);
		TvInteractiveAppManagerService$UserState v14 = ;
		TvInteractiveAppManagerService$UserState v13 = v14;
		Map v19 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmIAppMap(v13);
		Object v20 = v19.get(p1);
		if (v20 != 0) {
			TvInteractiveAppServiceInfo v21 = TvInteractiveAppManagerService$TvInteractiveAppState.-$$Nest$fgetmInfo(v20);
			ComponentName v22 = v21.getComponent();
			Map v23 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v13);
			Object v24 = v23.get(v22);
			if (v24 != 0) {
				TvInteractiveAppManagerService$ServiceState v25 = new TvInteractiveAppManagerService$ServiceState(this.this$0,v22,p1,v8,0);
				Boolean v29 = Boolean.valueOf(p3);
				Pair v30 = Pair.create(p2, v29);
				boolean v31 = this.mPendingAppLinkInfo.add(v30);
				Map v32 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v13);
				Object v33 = v32.put(v22, v25);
				TvInteractiveAppManagerService$UserState v36 = TvInteractiveAppManagerService.getOrCreateUserStateLocked(p3);
				Map v37 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v36);
				Object v38 = v37.get(p2);
				if (v38 != 0) {
					boolean v39 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmReconnecting(v38);
					if (v39 == 0) {
						List v40 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmSessionTokens(v38);
						boolean v41 = v40.isEmpty();
						if (v41 != 0) {
							TvInteractiveAppManagerService$ServiceState.-$$Nest$fputmReconnecting(v38, 0);
							List v43 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmSessionTokens(v38);
							boolean v44 = v43.isEmpty();
							if (v44 == 0) {
								List v45 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmPendingAppLinkInfo(v38);
								boolean v46 = v45.isEmpty();
								if (v46 == 0) {
									List v47 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmPendingAppLinkCommand(v38);
									boolean v48 = v47.isEmpty();
									if (v48 != 0) {
										ITvInteractiveAppService v49 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmService(v38);
										if (v49 != 0) {
											if ( == 0) {
												ITvInteractiveAppService v50 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmService(v38);
												if (v50 == 0) {
													if ( != 0) {
														ServiceConnection v51 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmConnection(v38);
														this.mContext.unbindService(v51);
														Map v53 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v36);
														Object v54 = v53.remove(p2);
														Binder.restoreCallingIdentity(v11);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void registerAppLinkInfo(String p1, AppLinkInfo p2, int p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("registerAppLinkInfo: ");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v9 = v10;
	int v8 = v9;
	long v11 = Binder.clearCallingIdentity();
	Object v12 = TvInteractiveAppManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInteractiveAppManagerService$UserState v15 = TvInteractiveAppManagerService.getUserStateLocked(p2);
	if (v15 != 0) {
		TvInteractiveAppManagerService$UserState v16 = new TvInteractiveAppManagerService$UserState(p2,0);
		this.mUserStates.put(p2, v16);
		TvInteractiveAppManagerService$UserState v14 = ;
		TvInteractiveAppManagerService$UserState v13 = v14;
		Map v19 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmIAppMap(v13);
		Object v20 = v19.get(p1);
		if (v20 != 0) {
			TvInteractiveAppServiceInfo v21 = TvInteractiveAppManagerService$TvInteractiveAppState.-$$Nest$fgetmInfo(v20);
			ComponentName v22 = v21.getComponent();
			Map v23 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v13);
			Object v24 = v23.get(v22);
			if (v24 != 0) {
				ITvInteractiveAppService v25 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmService(v24);
				if (v25 == 0) {
					Boolean v28 = Boolean.valueOf(p3);
					Pair v29 = Pair.create(p2, v28);
					boolean v30 = this.mPendingAppLinkInfo.add(v29);
					TvInteractiveAppManagerService$UserState v33 = TvInteractiveAppManagerService.getOrCreateUserStateLocked(p3);
					Map v34 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmServiceStateMap(v33);
					Object v35 = v34.get(p2);
					if (v35 != 0) {
						boolean v36 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmReconnecting(v35);
						if (v36 == 0) {
							List v37 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmSessionTokens(v35);
							boolean v38 = v37.isEmpty();
							if (v38 != 0) {
								TvInteractiveAppManagerService$ServiceState.-$$Nest$fputmReconnecting(v35, 0);
								List v40 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmSessionTokens(v35);
								boolean v41 = v40.isEmpty();
								if (v41 == 0) {
									List v42 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmPendingAppLinkInfo(v35);
									boolean v43 = v42.isEmpty();
									if (v43 == 0) {
										List v44 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmPendingAppLinkCommand(v35);
										boolean v45 = v44.isEmpty();
										if (v45 != 0) {
											ITvInteractiveAppService v46 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmService(v35);
											if (v46 != 0) {
												if ( == 0) {
													boolean v47 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmBound(v35);
													if (v47 == 0) {
														Intent v48 = new Intent("android.media.tv.interactive.TvInteractiveAppService");
														Intent v50 = v48.setComponent(p2);
														ServiceConnection v51 = TvInteractiveAppManagerService$ServiceState.-$$Nest$fgetmConnection(v35);
														UserHandle v52 = new UserHandle(p3);
														boolean v54 = this.mContext.bindServiceAsUser(v50, v51, 33554433, v52);
														TvInteractiveAppManagerService$ServiceState.-$$Nest$fputmBound(v35, v54);
														Binder.restoreCallingIdentity(v11);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['TvInteractiveAppManagerService$UserState v15 = TvInteractiveAppManagerService.getUserStateLocked(p2);\nMap v19 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmIAppMap(v13);\nObject v20 = v19.get(p1);\nTvInteractiveAppManagerService$ServiceState v25 = new TvInteractiveAppManagerService$ServiceState(this.this$0,v22,p1,v8,0);\nBoolean v29 = Boolean.valueOf(p3);\nPair v30 = Pair.create(p2, v29);\nboolean v31 = this.mPendingAppLinkInfo.add(v30);', 'TvInteractiveAppManagerService$UserState v13 = this.this$0.getOrCreateUserStateLocked(v8);\nMap v14 = this.mIAppMap;\nObject v15 = v14.get(p1);\nTvInteractiveAppServiceInfo v16 = this.mInfo;\nComponentName v18 = new ComponentName(ServiceInfo.packageName,ServiceInfo.name);\nMap v20 = this.mServiceStateMap;\nObject v21 = v20.get(v17);', 'int v8 = TvInteractiveAppManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p3, v7);\nTvInteractiveAppManagerService$UserState v11 = TvInteractiveAppManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v8);\nMap v12 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmIAppMap(v11);\nObject v13 = v12.get(p1);']

The method registerAppLinkInfo has the following similar APIs:

- API Name: unregisterAppLinkInfo(Ljava/lang/String;Landroid/media/tv/interactive/AppLinkInfo;I)V with Similarity Score: 0.9701608419418335
  - Access Control Level: NONE and the following code:
TvInteractiveAppManagerService$UserState v15 = TvInteractiveAppManagerService.getUserStateLocked(p2);
Map v19 = TvInteractiveAppManagerService$UserState.-$$Nest$fgetmIAppMap(v13);
Object v20 = v19.get(p1);
TvInteractiveAppManagerService$ServiceState v25 = new TvInteractiveAppManagerService$ServiceState(this.this$0,v22,p1,v8,0);
Boolean v29 = Boolean.valueOf(p3);
Pair v30 = Pair.create(p2, v29);

- API Name: unregisterAppLinkInfo(Ljava/lang/String;Landroid/media/tv/interactive/AppLinkInfo;I)V with Similarity Score: 0.9503811597824097
  - Access Control Level: NONE and the following code:
TvInteractiveAppManagerService$UserState v13 = this.this$0.getOrCreateUserStateLocked(v8);
Map v14 = this.mIAppMap;
Object v15 = v14.get(p1);
TvInteractiveAppManagerService$ServiceState v22 = new TvInteractiveAppManagerService$ServiceState(this.this$0,v17,p1,v8,0);

