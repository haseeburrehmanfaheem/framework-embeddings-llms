The method finishSpellCheckerService has the following code snippet:

This is path 1 for the API with depth 2:
public void finishSpellCheckerService(int p1, ISpellCheckerSessionListener p2){
	Object v12 = this.mUserData.get(p1);
	TextServicesManagerService$TextServicesData v11 = v12;
	if (v11 != 0) {
		ArrayList v13 = new ArrayList();
		HashMap v15 = this.mSpellCheckerBindGroups;
		Collection v16 = v15.values();
		Iterator v17 = v16.iterator();
		boolean v18 = v17.hasNext();
		if (v18 == 0) {
			Object v19 = v17.next();
			if (v19 != 0) {
				boolean v20 = v13.add(v19);
				boolean v21 = v17.hasNext();
				if (v21 == 0) {
					int v22 = v13.size();
					if ( >= v22) {
						Object v23 = v13.get();
						Object v25 = this.mLock;
						boolean v26 = this.mListeners.unregister(p2);
						IBinder v27 = p2.asBinder();
						TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0 v28 = new TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0(v27);
						boolean v30 = this.mPendingSessionRequests.removeIf(v28);
						boolean v31 = this.mOnGoingSessionRequests.removeIf(v28);
						if (this.mUnbindCalled == 0) {
							int v33 = this.mListeners.getRegisteredCallbackCount();
							if (v33 <= 0) {
								boolean v34 = this.mPendingSessionRequests.isEmpty();
								if (v34 != 0) {
									boolean v35 = this.mOnGoingSessionRequests.isEmpty();
									if (v35 != 0) {
										String v36 = TextServicesManagerService$InternalServiceConnection.-$$Nest$fgetmSciId(this.mInternalConnection);
										Object v37 = this.mSpellCheckerBindGroups.get(v36);
										if (v37 != TextServicesManagerService$SpellCheckerBindGroup) {
											Object v38 = this.mSpellCheckerBindGroups.remove(v36);
											Context v39 = TextServicesManagerService.-$$Nest$fgetmContext(this.this$0);
											v39.unbindService(this.mInternalConnection);
											this.mUnbindCalled = 1;
											if ( >= v22) {
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void finishSpellCheckerService(int p1, ISpellCheckerSessionListener p2){
	Object v12 = this.mUserData.get(p1);
	TextServicesManagerService$TextServicesData v11 = v12;
	if (v11 != 0) {
		ArrayList v13 = new ArrayList();
		HashMap v15 = this.mSpellCheckerBindGroups;
		Collection v16 = v15.values();
		Iterator v17 = v16.iterator();
		boolean v18 = v17.hasNext();
		if (v18 == 0) {
			Object v19 = v17.next();
			if (v19 != 0) {
				boolean v20 = v17.hasNext();
				if (v20 == 0) {
					int v21 = v13.size();
					if ( >= v21) {
						Object v22 = v13.get();
						Object v24 = this.mLock;
						boolean v25 = this.mListeners.unregister(p2);
						IBinder v26 = p2.asBinder();
						TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0 v27 = new TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0(v26);
						boolean v29 = this.mPendingSessionRequests.removeIf(v27);
						boolean v30 = this.mOnGoingSessionRequests.removeIf(v27);
						if (this.mUnbindCalled == 0) {
							int v32 = this.mListeners.getRegisteredCallbackCount();
							if (v32 <= 0) {
								boolean v33 = this.mPendingSessionRequests.isEmpty();
								if (v33 != 0) {
									boolean v34 = this.mOnGoingSessionRequests.isEmpty();
									if (v34 != 0) {
										String v35 = TextServicesManagerService$InternalServiceConnection.-$$Nest$fgetmSciId(this.mInternalConnection);
										Object v36 = this.mSpellCheckerBindGroups.get(v35);
										if (v36 != TextServicesManagerService$SpellCheckerBindGroup) {
											Object v37 = this.mSpellCheckerBindGroups.remove(v35);
											Context v38 = TextServicesManagerService.-$$Nest$fgetmContext(this.this$0);
											v38.unbindService(this.mInternalConnection);
											this.mUnbindCalled = 1;
											if ( >= v21) {
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v12 = this.mUserData.get(p1);\nArrayList v13 = new ArrayList();\nHashMap v15 = this.mSpellCheckerBindGroups;\nboolean v26 = this.mListeners.unregister(p2);\nIBinder v27 = p2.asBinder();\nTextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0 v28 = new TextServicesManagerService$SpellCheckerBindGroup$$ExternalSyntheticLambda0(v27);\nboolean v30 = this.mPendingSessionRequests.removeIf(v28);\nboolean v31 = this.mOnGoingSessionRequests.removeIf(v28);', 'TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);\nArrayList v3 = new ArrayList();\nHashMap v5 = TextServicesManagerService$TextServicesData.-$$Nest$fgetmSpellCheckerBindGroups(v2);\nv13.removeListener(p2);']

The method finishSpellCheckerService has the following similar APIs:

- API Name: getSpellCheckerService(ILjava/lang/String;Ljava/lang/String;Lcom/android/internal/textservice/ITextServicesSessionListener;Lcom/android/internal/textservice/ISpellCheckerSessionListener;Landroid/os/Bundle;I)V with Similarity Score: 0.8598676323890686
  - Access Control Level: SYS_OR_SIG and the following code:
p0.verifyUser(p1);
TextServicesManagerService$TextServicesData v3 = p0.getDataFromCallingUserIdLocked(p1);
TextServicesManagerService$SpellCheckerBindGroup v11 = p0.startSpellCheckerServiceInnerLocked(v6, v3);

- API Name: isSpellCheckerEnabled(I)Z with Similarity Score: 0.8533564209938049
  - Access Control Level: SYS_OR_SIG and the following code:
TextServicesManagerService$TextServicesData v2 = p0.getDataFromCallingUserIdLocked(p1);

