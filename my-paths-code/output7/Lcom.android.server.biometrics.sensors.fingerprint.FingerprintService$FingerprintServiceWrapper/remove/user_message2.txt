The method remove has the following code snippet:

This is path 1 for the API with depth 2:
public void remove(IBinder p1, int p2, int p3, IFingerprintServiceReceiver p4, String p5){
	List v5 = FingerprintService.getSensorProperties();
	boolean v6 = v5.isEmpty();
	if (v6 == 0) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FingerprintSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				boolean v12 = v8.hasNext();
				if (v12 == 0) {
					Object v13 = v8.next();
					boolean v14 = v13.containsSensor(FingerprintSensorPropertiesInternal.sensorId);
					if (v14 == 0) {
						Pair v15 = new Pair(v16,v13);
						Integer v16 = Integer.valueOf(FingerprintSensorPropertiesInternal.sensorId);
						Pair v4 = v15;
						Pair v3 = v4;
						if (v3 != 0) {
							int v18 = Pair.first.intValue();
							Pair.second.scheduleRemove(v18, p1, p4, p2, p3, p5);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void remove(IBinder p1, int p2, int p3, IFingerprintServiceReceiver p4, String p5){
	List v5 = FingerprintService.getSensorProperties();
	boolean v6 = v5.isEmpty();
	if (v6 == 0) {
		Object v7 = v5.get(0);
		Iterator v8 = this.mServiceProviders.iterator();
		boolean v9 = v8.hasNext();
		if (v9 == 0) {
			Object v10 = v8.next();
			boolean v11 = v10.containsSensor(FingerprintSensorPropertiesInternal.sensorId);
			if (v11 == 0) {
				boolean v12 = v8.hasNext();
				if (v12 == 0) {
					Object v13 = v8.next();
					boolean v14 = v13.containsSensor(FingerprintSensorPropertiesInternal.sensorId);
					if (v14 == 0) {
						Pair v15 = new Pair(v16,v13);
						Integer v16 = Integer.valueOf(FingerprintSensorPropertiesInternal.sensorId);
						Pair v4 = v15;
						Pair v3 = v4;
						if (v3 != 0) {
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['List v5 = FingerprintService.getSensorProperties();\nObject v7 = v5.get(0);\nIterator v8 = this.mServiceProviders.iterator();\nPair v15 = new Pair(v16,v13);\nPair.second.scheduleRemove(v18, p1, p4, p2, p3, p5);', 'Pair v4 = this.this$0.getSingleProvider();\nint v5 = Pair.first.intValue();\nPair.second.scheduleRemove(v5, p1, p4, p2, p3, p5);', 'Pair v3 = FingerprintService.-$$Nest$mgetSingleProvider(this.this$0);\nint v4 = Pair.first.intValue();\nPair.second.scheduleRemove(v4, p1, p4, p2, p3, p5);']

The method remove has the following similar APIs:

- API Name: remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V with Similarity Score: 0.9999452829360962
  - Access Control Level: NORMAL and the following code:
Pair v4 = this.this$0.getSingleProvider();
int v5 = Pair.first.intValue();
Pair.second.scheduleRemove(v5, p1, p2, p3, p4, p5);

- API Name: rename(IILjava/lang/String;)V with Similarity Score: 0.8866872787475586
  - Access Control Level: NORMAL and the following code:
Pair v5 = FingerprintService.-$$Nest$mgetSingleProvider(this.this$0);
int v6 = Pair.first.intValue();
Pair.second.rename(v6, p1, p2, p3);

