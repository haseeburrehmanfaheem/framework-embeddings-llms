The method addAuthenticatorsRegisteredCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void addAuthenticatorsRegisteredCallback(IFingerprintAuthenticatorsRegisteredCallback p1){
	if (p1 != 0) {
		Object v3 = this.mLock;
		RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;
		boolean v5 = v4.register(p1);
		List v6 = this.mSensorProps;
		boolean v7 = v6.isEmpty();
		if (v7 != 0) {
			if (v5 == 0) {
				if ( == 0) {
					ArrayList v10 = new ArrayList();
					boolean v12 = this.mSensorProps.isEmpty();
					if (v12 != 0) {
						ArrayList v13 = new ArrayList(this.mSensorProps);
						int v15 = this.mAuthenticatorsRegisteredCallbacks.beginBroadcast();
						if ( >= v15) {
							IInterface v16 = this.mAuthenticatorsRegisteredCallbacks.getBroadcastItem();
							boolean v17 = v10.add(v16);
							boolean v18 = this.mAuthenticatorsRegisteredCallbacks.unregister(v16);
							if ( >= v15) {
								this.mAuthenticatorsRegisteredCallbacks.finishBroadcast();
								Iterator v20 = v10.iterator();
								boolean v21 = v20.hasNext();
								if (v21 == 0) {
									Object v22 = v20.next();
									v22.onAllAuthenticatorsRegistered(v13);
									boolean v24 = v20.hasNext();
									if (v24 == 0) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;\nboolean v5 = v4.register(p1);\nArrayList v10 = new ArrayList();\nIterator v20 = v10.iterator();\nv22.onAllAuthenticatorsRegistered(v13);', 'RemoteCallbackList v4 = this.mAuthenticatorsRegisteredCallbacks;\nboolean v5 = v4.register(p1);\nthis.this$0.broadcastAllAuthenticatorsRegistered();', 'RemoteCallbackList v4 = FingerprintService.-$$Nest$fgetmAuthenticatorsRegisteredCallbacks(this.this$0);\nboolean v5 = v4.register(p1);\nFingerprintService.-$$Nest$mbroadcastAllAuthenticatorsRegistered(this.this$0);']

The method addAuthenticatorsRegisteredCallback has the following similar APIs:

- API Name: registerCallback(Landroid/media/tv/interactive/ITvInteractiveAppManagerCallback;I)V with Similarity Score: 0.7875152230262756
  - Access Control Level: NONE and the following code:
int v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "registerCallback");
TvInteractiveAppManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
RemoteCallbackList v9 = this.mCallbacks;
boolean v10 = v9.register(p1);

- API Name: registerCallback(Landroid/media/tv/ITvInputManagerCallback;I)V with Similarity Score: 0.7785759568214417
  - Access Control Level: NONE and the following code:
RemoteCallbackList v9 = this.mCallbacks;
boolean v10 = v9.register(p1);
Map v11 = this.callbackPidUidMap;
Object v15 = v11.put(p1, v14);

