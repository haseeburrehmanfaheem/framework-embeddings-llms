The method cancelAuthenticationFromService has the following code snippet:

This is path 1 for the API with depth 2:
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	Iterator v11 = this.mServiceProviders.iterator();
	boolean v12 = v11.hasNext();
	if (v12 == 0) {
		Object v13 = v11.next();
		boolean v14 = v13.containsSensor(p2);
		if (v14 == 0) {
			boolean v15 = v11.hasNext();
			if (v15 == 0) {
				Object v16 = v11.next();
				boolean v17 = v16.containsSensor(p2);
				if (v17 == 0) {
					ServiceProvider v10 = v16;
					ServiceProvider v9 = v10;
					if (v9 != 0) {
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	Iterator v11 = this.mServiceProviders.iterator();
	boolean v12 = v11.hasNext();
	if (v12 == 0) {
		Object v13 = v11.next();
		boolean v14 = v13.containsSensor(p2);
		if (v14 == 0) {
			boolean v15 = v11.hasNext();
			if (v15 == 0) {
				Object v16 = v11.next();
				boolean v17 = v16.containsSensor(p2);
				if (v17 == 0) {
					ServiceProvider v10 = v16;
					ServiceProvider v9 = v10;
					if (v9 != 0) {
						v9.cancelAuthentication(p1, p2, p4);
						return;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	Iterator v11 = this.mServiceProviders.iterator();
	boolean v12 = v11.hasNext();
	if (v12 == 0) {
		Object v13 = v11.next();
		boolean v14 = v13.containsSensor(p2);
		if (v14 == 0) {
			boolean v15 = v11.hasNext();
			if (v15 == 0) {
				ServiceProvider v10 = 0;
				ServiceProvider v9 = v10;
				if (v9 != 0) {
					return;
				}
			}
		}
	}
}

and the following sink code:
['ServiceProvider v10 = this.this$0.getProviderForSensor(p1);\nServiceProvider v9 = v10;\nif (v9 != 0) { return; }', 'Iterator v11 = this.mServiceProviders.iterator();\nboolean v12 = v11.hasNext();\nObject v13 = v11.next();\nboolean v14 = v13.containsSensor(p2);\nif (v14 == 0) { ... }', 'ServiceProvider v9 = FingerprintService.-$$Nest$mgetProviderForSensor(this.this$0, p1);\nif (v9 != 0) { return; }']

The method cancelAuthenticationFromService has the following similar APIs:

- API Name: startPreparedClient(II)V with Similarity Score: 1.0
  - Access Control Level: NORMAL and the following code:
ServiceProvider v4 = this.this$0.getProviderForSensor(p1);
ServiceProvider v3 = v4;
if (v3 != 0) { return; }

- API Name: startPreparedClient(II)V with Similarity Score: 1.0
  - Access Control Level: NORMAL and the following code:
ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
if (v3 != 0) { return; }

