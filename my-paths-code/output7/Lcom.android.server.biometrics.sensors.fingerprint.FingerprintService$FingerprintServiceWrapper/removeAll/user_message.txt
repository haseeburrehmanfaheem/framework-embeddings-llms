This is path 1 for the API with depth 1:
public void removeAll(IBinder p1, int p2, IFingerprintServiceReceiver p3, String p4){
	FingerprintService$FingerprintServiceWrapper$2 v3 = new FingerprintService$FingerprintServiceWrapper$2(p0,p3);
	List v5 = this.mServiceProviders;
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		List v9 = v8.getSensorProperties();
		Iterator v10 = v9.iterator();
		boolean v11 = v10.hasNext();
		if (v11 == 0) {
			Object v12 = v10.next();
			v8.scheduleRemoveAll(FingerprintSensorPropertiesInternal.sensorId, p1, v3, p2, p4);
			boolean v14 = v10.hasNext();
			if (v14 == 0) {
				boolean v15 = v6.hasNext();
				if (v15 == 0) {
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void removeAll(IBinder p1, int p2, IFingerprintServiceReceiver p3, String p4){
	FingerprintService$FingerprintServiceWrapper$2 v3 = new FingerprintService$FingerprintServiceWrapper$2(p0,p3);
	List v5 = FingerprintService.-$$Nest$fgetmServiceProviders(this.this$0);
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		List v9 = v8.getSensorProperties();
		Iterator v10 = v9.iterator();
		boolean v11 = v10.hasNext();
		if (v11 == 0) {
			Object v12 = v10.next();
			v8.scheduleRemoveAll(FingerprintSensorPropertiesInternal.sensorId, p1, v3, p2, p4);
			boolean v14 = v10.hasNext();
			if (v14 == 0) {
				boolean v15 = v6.hasNext();
				if (v15 == 0) {
					return;
				}
			}
		}
	}
}
