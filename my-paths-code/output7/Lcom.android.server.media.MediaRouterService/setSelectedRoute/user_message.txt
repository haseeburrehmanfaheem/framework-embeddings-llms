This is path 1 for the API with depth 2:
public void setSelectedRoute(IMediaRouterClient p1, String p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v3 = p1.asBinder();
		Object v4 = this.mAllClientRecords.get(v3);
		if (v4 == 0) {
			boolean v5 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
			if (v5 != 0) {
				boolean v6 = this.mBluetoothA2dpRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v6 == 0) {
					MediaRouterService$ClientRecord.mSelectedRouteId = p2;
					boolean v7 = this.mDefaultAudioRouteId.equals(p2);
					if (v7 != 0) {
						boolean v8 = this.mBluetoothA2dpRouteId.equals(p2);
						if (v8 == 0) {
							boolean v9 = Objects.equals(, );
							if (v9 != 0) {
								if (this.DEBUG == 0) {
									if (p3 == 0) {
										if (MediaRouterService$ClientRecord.mTrusted == 0) {
											if ( == 0) {
												Message v10 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, );
												v10.sendToTarget();
												if ( == 0) {
													Message v12 = MediaRouterService$UserRecord.mHandler.obtainMessage(4, );
													v12.sendToTarget();
													if (MediaRouterService$ClientRecord.mGroupId == 0) {
														ArrayMap v14 = this.mClientGroupMap;
														Object v15 = v14.get(MediaRouterService$ClientRecord.mGroupId);
														if (v15 == 0) {
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setSelectedRoute(IMediaRouterClient p1, String p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		IBinder v3 = p1.asBinder();
		Object v4 = this.mAllClientRecords.get(v3);
		if (v4 == 0) {
			boolean v5 = this.mDefaultAudioRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
			if (v5 != 0) {
				boolean v6 = this.mBluetoothA2dpRouteId.equals(MediaRouterService$ClientRecord.mSelectedRouteId);
				if (v6 == 0) {
					MediaRouterService$ClientRecord.mSelectedRouteId = p2;
					boolean v7 = this.mDefaultAudioRouteId.equals(p2);
					if (v7 != 0) {
						boolean v8 = this.mBluetoothA2dpRouteId.equals(p2);
						if (v8 == 0) {
							boolean v9 = Objects.equals(, );
							if (v9 != 0) {
								if (this.DEBUG == 0) {
									if (p3 == 0) {
										if (MediaRouterService$ClientRecord.mTrusted == 0) {
											if ( == 0) {
												Message v10 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, );
												v10.sendToTarget();
												if ( == 0) {
													Message v12 = MediaRouterService$UserRecord.mHandler.obtainMessage(4, );
													v12.sendToTarget();
													if (MediaRouterService$ClientRecord.mGroupId == 0) {
														ArrayMap v14 = MediaRouterService$UserRecord.-$$Nest$fgetmClientGroupMap(MediaRouterService$ClientRecord.mUserRecord);
														Object v15 = v14.get(MediaRouterService$ClientRecord.mGroupId);
														if (v15 == 0) {
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setSelectedRoute(IMediaRouterClient p1, String p2, boolean p3){
	if (p1 == 0) {
		long v1 = Binder.clearCallingIdentity();
		p0.setSelectedRouteLocked(p1, p2, p3);
		Binder.restoreCallingIdentity(v1);
		return;
	}
}
