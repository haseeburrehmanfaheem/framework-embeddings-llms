The method requestCreateSessionWithManager has the following code snippet:

This is path 1 for the API with depth 2:
public void requestCreateSessionWithManager(IMediaRouter2Manager p1, int p2, RoutingSessionInfo p3, MediaRoute2Info p4){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	Object v3 = Objects.requireNonNull(p3, "oldSession must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	Object v7 = this.mAllManagerRecords.get(v6);
	if (v7 != 0) {
		String v8 = p3.getClientPackageName();
		MediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$ManagerRecord.mUserRecord.findRouterRecordLocked(v8);
		if (v9 != 0) {
			long v10 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);
			if (MediaRouter2ServiceImpl$ManagerRecord.mLastSessionCreationRequest == 0) {
				int v11 = MediaRouter2ServiceImpl.toOriginalRequestId(MediaRouter2ServiceImpl$SessionCreationRequest.mManagerRequestId);
				MediaRouter2ServiceImpl$UserHandler.-$$Nest$mnotifyRequestFailedToManager(MediaRouter2ServiceImpl$UserRecord.mHandler, MediaRouter2ServiceImpl$ManagerRecord.mManager, v11, 0);
				MediaRouter2ServiceImpl$ManagerRecord.mLastSessionCreationRequest = 0;
				MediaRouter2ServiceImpl$SessionCreationRequest v13 = new MediaRouter2ServiceImpl$SessionCreationRequest(v9,0,v10,p3,p4);
				MediaRouter2ServiceImpl$ManagerRecord.mLastSessionCreationRequest = v13;
				MediaRouter2ServiceImpl$$ExternalSyntheticLambda26 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda26();
				Long v17 = Long.valueOf(v10);
				Message v18 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v17, v9, v7, p3, p4);
				boolean v19 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v18);
				Binder.restoreCallingIdentity(v4);
				return;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void requestCreateSessionWithManager(IMediaRouter2Manager p1, int p2, RoutingSessionInfo p3, MediaRoute2Info p4){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	Object v3 = Objects.requireNonNull(p3, "oldSession must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	Object v7 = this.mAllManagerRecords.get(v6);
	if (v7 != 0) {
		String v8 = p3.getClientPackageName();
		MediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$ManagerRecord.mUserRecord.findRouterRecordLocked(v8);
		if (v9 != 0) {
			MediaRouter2ServiceImpl$ManagerRecord.mManager.notifyRequestFailed(p2, 0);
			Binder.restoreCallingIdentity(v4);
			return;
		}
	}
}
This is path 3 for the API with depth 2:
public void requestCreateSessionWithManager(IMediaRouter2Manager p1, int p2, RoutingSessionInfo p3, MediaRoute2Info p4){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	Object v3 = Objects.requireNonNull(p3, "oldSession must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	Object v7 = this.mAllManagerRecords.get(v6);
	if (v7 != 0) {
		String v8 = p3.getClientPackageName();
		MediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$ManagerRecord.mUserRecord.findRouterRecordLocked(v8);
		if (v9 != 0) {
			MediaRouter2ServiceImpl$ManagerRecord.mManager.notifyRequestFailed(p2, 0);
			Binder.restoreCallingIdentity(v4);
			return;
		}
	}
}

and the following sink code:
['Object v2 = Objects.requireNonNull(p1, "manager must not be null");\nObject v3 = Objects.requireNonNull(p3, "oldSession must not be null");\nIBinder v6 = p1.asBinder();\nMediaRouter2ServiceImpl$RouterRecord v9 = MediaRouter2ServiceImpl$ManagerRecord.mUserRecord.findRouterRecordLocked(v8);\nlong v10 = MediaRouter2ServiceImpl.toUniqueRequestId(MediaRouter2ServiceImpl$ManagerRecord.mManagerId, p2);\nMediaRouter2ServiceImpl$SessionCreationRequest v13 = new MediaRouter2ServiceImpl$SessionCreationRequest(v9,0,v10,p3,p4);\nMessage v18 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v17, v9, v7, p3, p4);']

The method requestCreateSessionWithManager has the following similar APIs:

- API Name: setRouteVolumeWithRouter2(Landroid/media/IMediaRouter2;Landroid/media/MediaRoute2Info;I)V with Similarity Score: 0.7469187378883362
  - Access Control Level: NONE and the following code:
IBinder v6 = p1.asBinder();
Object v7 = this.mAllRouterRecords.get(v6);
Message v12 = PooledLambda.obtainMessage(v8, MediaRouter2ServiceImpl$UserRecord.mHandler, v10, p2, v11);
boolean v13 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v12);

- API Name: transferToRouteWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.7400518655776978
  - Access Control Level: NONE and the following code:
Object v2 = Objects.requireNonNull(p1, "router must not be null");
Object v3 = Objects.requireNonNull(p3, "route must not be null");
boolean v4 = TextUtils.isEmpty(p2);
long v5 = Binder.clearCallingIdentity();
IBinder v7 = p1.asBinder();
Object v8 = this.mAllRouterRecords.get(v7);

