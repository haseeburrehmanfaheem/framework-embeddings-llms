This is path 1 for the API with depth 2:
public void registerRouter2(IMediaRouter2 p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			if ( >= v4.length) {
				boolean v5 = v4[].equals(p2);
				if (v5 == 0) {
					if ( >= v4.length) {
						boolean v6 = v4[].equals(p2);
						if (v6 == 0) {
							boolean v2 = 1;
							if (v2 == 0) {
								if (v15 != 0) {
									long v16 = Binder.clearCallingIdentity();
									IBinder v18 = p1.asBinder();
									Object v19 = this.mAllRouterRecords.get(v18);
									if (v19 == 0) {
										MediaRouter2ServiceImpl$UserRecord v20 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v13);
										MediaRouter2ServiceImpl$RouterRecord v21 = new MediaRouter2ServiceImpl$RouterRecord(MediaRouter2ServiceImpl,v20,p1,v10,v11,p2,,);
										v18.linkToDeath(v21, 0);
										boolean v24 = MediaRouter2ServiceImpl$UserRecord.mRouterRecords.add(v21);
										Object v25 = this.mAllRouterRecords.put(v18, v21);
										MediaRouter2ServiceImpl$$ExternalSyntheticLambda8 v26 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda8();
										Message v28 = PooledLambda.obtainMessage(v26, MediaRouter2ServiceImpl$UserRecord.mHandler, v21);
										boolean v29 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v28);
										Binder.restoreCallingIdentity(v16);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void registerRouter2(IMediaRouter2 p1, String p2){
	int v1 = Binder.getCallingUid();
	if (p2 == 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		String v4 = v3.getPackagesForUid(v1);
		if (v4 == 0) {
			if ( >= v4.length) {
				boolean v5 = v4[].equals(p2);
				if (v5 == 0) {
					if ( >= v4.length) {
						boolean v6 = v4[].equals(p2);
						if (v6 == 0) {
							boolean v2 = 1;
							if (v2 == 0) {
								if (v15 != 0) {
									long v16 = Binder.clearCallingIdentity();
									MediaRouter2ServiceImpl.registerRouter2Locked(p1, v10, v11, p2, v13, , );
									Binder.restoreCallingIdentity(v16);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void registerRouter2(IMediaRouter2 p1, String p2){
	int v1 = Binder.getCallingUid();
	boolean v2 = p0.validatePackageName(v1, p2);
	if (v2 == 0) {
		this.mService2.registerRouter2(p1, p2);
		return;
	}
}
