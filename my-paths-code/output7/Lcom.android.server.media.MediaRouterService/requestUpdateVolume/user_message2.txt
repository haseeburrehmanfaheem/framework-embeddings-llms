The method requestUpdateVolume has the following code snippet:

This is path 1 for the API with depth 1:
public void requestUpdateVolume(IMediaRouterClient p1, String p2, int p3){
	if (p1 == 0) {
		if (p2 == 0) {
			long v1 = Binder.clearCallingIdentity();
			IBinder v3 = p1.asBinder();
			Object v4 = this.mAllClientRecords.get(v3);
			if (v4 == 0) {
				Message v5 = MediaRouterService$UserRecord.mHandler.obtainMessage(7, p3, 0, p2);
				v5.sendToTarget();
				Binder.restoreCallingIdentity(v1);
				return;
			}
		}
	}
}

and the following sink code:
['Message v5 = MediaRouterService$UserRecord.mHandler.obtainMessage(7, p3, 0, p2);\nv5.sendToTarget();', 'p0.requestUpdateVolumeLocked(p1, p2, p3);']

The method requestUpdateVolume has the following similar APIs:

- API Name: requestSetVolume(Landroid/media/IMediaRouterClient;Ljava/lang/String;I)V with Similarity Score: 0.9513335227966309
  - Access Control Level: NONE and the following code:
p0.requestSetVolumeLocked(p1, p2, p3);

- API Name: setSelectedRoute(Landroid/media/IMediaRouterClient;Ljava/lang/String;Z)V with Similarity Score: 0.8680542707443237
  - Access Control Level: NONE and the following code:
MediaRouterService$ClientRecord.mSelectedRouteId = p2;
Message v10 = MediaRouterService$UserRecord.mHandler.obtainMessage(5, );
v10.sendToTarget();
Message v12 = MediaRouterService$UserRecord.mHandler.obtainMessage(4, );
v12.sendToTarget();

