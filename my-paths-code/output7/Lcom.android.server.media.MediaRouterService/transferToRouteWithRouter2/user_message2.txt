The method transferToRouteWithRouter2 has the following code snippet:

This is path 1 for the API with depth 2:
public void transferToRouteWithRouter2(IMediaRouter2 p1, String p2, MediaRoute2Info p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p3, "route must not be null");
	boolean v4 = TextUtils.isEmpty(p2);
	if (v4 != 0) {
		long v5 = Binder.clearCallingIdentity();
		IBinder v7 = p1.asBinder();
		Object v8 = this.mAllRouterRecords.get(v7);
		if (v8 != 0) {
			Binder.restoreCallingIdentity(v5);
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void transferToRouteWithRouter2(IMediaRouter2 p1, String p2, MediaRoute2Info p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p3, "route must not be null");
	boolean v4 = TextUtils.isEmpty(p2);
	if (v4 != 0) {
		long v5 = Binder.clearCallingIdentity();
		IBinder v7 = p1.asBinder();
		Object v8 = this.mAllRouterRecords.get(v7);
		if (v8 != 0) {
			SystemMediaRoute2Provider v9 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
			MediaRoute2Info v10 = v9.getDefaultRoute();
			String v11 = v10.getId();
			boolean v12 = p3.isSystemRoute();
			if (v12 == 0) {
				if (MediaRouter2ServiceImpl$RouterRecord.mHasModifyAudioRoutingPermission != 0) {
					String v13 = p3.getId();
					boolean v14 = TextUtils.equals(v13, v11);
					if (v14 != 0) {
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda18 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda18();
						int v17 = MediaRouter2ServiceImpl.toOriginalRequestId(-1);
						Integer v18 = Integer.valueOf(v17);
						Message v19 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v8, v18);
						boolean v20 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v19);
						Binder.restoreCallingIdentity(v5);
						return;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void transferToRouteWithRouter2(IMediaRouter2 p1, String p2, MediaRoute2Info p3){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p3, "route must not be null");
	boolean v4 = TextUtils.isEmpty(p2);
	if (v4 != 0) {
		long v5 = Binder.clearCallingIdentity();
		IBinder v7 = p1.asBinder();
		Object v8 = this.mAllRouterRecords.get(v7);
		if (v8 != 0) {
			SystemMediaRoute2Provider v9 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
			MediaRoute2Info v10 = v9.getDefaultRoute();
			String v11 = v10.getId();
			boolean v12 = p3.isSystemRoute();
			if (v12 == 0) {
				if (MediaRouter2ServiceImpl$RouterRecord.mHasModifyAudioRoutingPermission != 0) {
					String v13 = p3.getId();
					boolean v14 = TextUtils.equals(v13, v11);
					if (v14 != 0) {
						MediaRouter2ServiceImpl$$ExternalSyntheticLambda19 v15 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda19();
						Long v17 = Long.valueOf(-1);
						Message v18 = PooledLambda.obtainMessage(v15, MediaRouter2ServiceImpl$UserRecord.mHandler, v17, v8, p2, p3);
						boolean v19 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v18);
						Binder.restoreCallingIdentity(v5);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = Objects.requireNonNull(p1, "router must not be null");\nObject v3 = Objects.requireNonNull(p3, "route must not be null");\nboolean v4 = TextUtils.isEmpty(p2);\nlong v5 = Binder.clearCallingIdentity();\nMediaRouter2ServiceImpl.transferToRouteWithRouter2Locked(p1, p2, p3);\nBinder.restoreCallingIdentity(v5);', 'Object v2 = Objects.requireNonNull(p1, "router must not be null");\nObject v3 = Objects.requireNonNull(p3, "route must not be null");\nboolean v4 = TextUtils.isEmpty(p2);\nlong v5 = Binder.clearCallingIdentity();\nIBinder v7 = p1.asBinder();\nObject v8 = this.mAllRouterRecords.get(v7);', 'this.mService2.transferToRouteWithRouter2(p1, p2, p3);']

The method transferToRouteWithRouter2 has the following similar APIs:

- API Name: transferToRouteWithManager(Landroid/media/IMediaRouter2Manager;ILjava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.9244867563247681
  - Access Control Level: NONE and the following code:
this.mService2.transferToRouteWithManager(p1, p2, p3, p4);

- API Name: selectRouteWithRouter2(Landroid/media/IMediaRouter2;Ljava/lang/String;Landroid/media/MediaRoute2Info;)V with Similarity Score: 0.8933872580528259
  - Access Control Level: NONE and the following code:
this.mService2.selectRouteWithRouter2(p1, p2, p3);

