This is path 1 for the API with depth 2:
public void setRouteVolumeWithManager(IMediaRouter2Manager p1, int p2, MediaRoute2Info p3, int p4){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	Object v3 = Objects.requireNonNull(p3, "route must not be null");
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	Object v7 = this.mAllManagerRecords.get(v6);
	if (v7 != 0) {
		Binder.restoreCallingIdentity(v4);
		return;
	}
}


This is path 2 for the API with depth 1:
public void setRouteVolumeWithManager(IMediaRouter2Manager p1, int p2, MediaRoute2Info p3, int p4){
	Object v2 = Objects.requireNonNull(p1, "manager must not be null");
	Object v3 = Objects.requireNonNull(p3, "route must not be null");
	long v4 = Binder.clearCallingIdentity();
	MediaRouter2ServiceImpl.setRouteVolumeWithManagerLocked(p2, p1, p3, p4);
	Binder.restoreCallingIdentity(v4);
	return;
}


This is path 3 for the API with depth 0:
public void setRouteVolumeWithManager(IMediaRouter2Manager p1, int p2, MediaRoute2Info p3, int p4){
	this.mService2.setRouteVolumeWithManager(p1, p2, p3, p4);
	return;
}
