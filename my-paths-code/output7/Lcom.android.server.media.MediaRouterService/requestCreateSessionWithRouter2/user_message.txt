This is path 1 for the API with depth 2:
public void requestCreateSessionWithRouter2(IMediaRouter2 p1, int p2, long p3, RoutingSessionInfo p4, MediaRoute2Info p5, Bundle p6){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p4, "oldSession must not be null");
	Object v4 = Objects.requireNonNull(p5, "route must not be null");
	long v5 = Binder.clearCallingIdentity();
	IBinder v7 = p1.asBinder();
	Object v8 = this.mAllRouterRecords.get(v7);
	if (v8 != 0) {
		if ((p3 < 0) == 0) {
			int v9 = MediaRouter2ServiceImpl.toRequesterId(p3);
			MediaRouter2ServiceImpl$ManagerRecord v10 = MediaRouter2ServiceImpl$UserRecord.mHandler.findManagerWithId(v9);
			if (v10 == 0) {
				if (MediaRouter2ServiceImpl$ManagerRecord.mLastSessionCreationRequest != 0) {
					String v11 = MediaRouter2ServiceImpl$SessionCreationRequest.mOldSession.getId();
					String v12 = p4.getId();
					boolean v13 = TextUtils.equals(v11, v12);
					if (v13 != 0) {
						String v14 = MediaRouter2ServiceImpl$SessionCreationRequest.mRoute.getId();
						String v15 = p5.getId();
						boolean v16 = TextUtils.equals(v14, v15);
						if (v16 != 0) {
							if (MediaRouter2ServiceImpl$RouterRecord.mHasModifyAudioRoutingPermission != 0) {
								boolean v17 = MediaRouter2ServiceImpl$SessionCreationRequest.mRoute.isSystemRoute();
								if (v17 == 0) {
									boolean v18 = p5.isSystemRoute();
									if (v18 == 0) {
										MediaRouter2ServiceImpl$UserHandler.-$$Nest$mnotifySessionCreationFailedToRouter(MediaRouter2ServiceImpl$UserRecord.mHandler, v8, p2);
										Binder.restoreCallingIdentity(v5);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void requestCreateSessionWithRouter2(IMediaRouter2 p1, int p2, long p3, RoutingSessionInfo p4, MediaRoute2Info p5, Bundle p6){
	Object v2 = Objects.requireNonNull(p1, "router must not be null");
	Object v3 = Objects.requireNonNull(p4, "oldSession must not be null");
	Object v4 = Objects.requireNonNull(p5, "route must not be null");
	long v5 = Binder.clearCallingIdentity();
	MediaRouter2ServiceImpl.requestCreateSessionWithRouter2Locked(p2, p3, p1, p4, p5, p6);
	Binder.restoreCallingIdentity(v5);
	return;
}


This is path 3 for the API with depth 0:
public void requestCreateSessionWithRouter2(IMediaRouter2 p1, int p2, long p3, RoutingSessionInfo p4, MediaRoute2Info p5, Bundle p6){
	this.mService2.requestCreateSessionWithRouter2(p1, p2, p3, p4, p5, p6);
	return;
}
