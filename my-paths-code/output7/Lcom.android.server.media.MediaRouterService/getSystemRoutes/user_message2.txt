The method getSystemRoutes has the following code snippet:

This is path 1 for the API with depth 2:
public List getSystemRoutes(){
	if (v5 != 0) {
		long v6 = Binder.clearCallingIdentity();
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda3 v13 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda3();
		Message v15 = PooledLambda.obtainMessage(v13, MediaRouter2ServiceImpl$UserRecord.mHandler);
		boolean v16 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v15);
		MediaRouter2ServiceImpl$UserRecord v7 = ;
		if ( == 0) {
			SystemMediaRoute2Provider v17 = this.mSystemProvider;
			MediaRoute2ProviderInfo v18 = this.mProviderInfo;
			if (v18 == 0) {
				Collection v20 = this.mRoutes.values();
				Collection v19 = v20;
				ArrayList v21 = new ArrayList();
				Binder.restoreCallingIdentity(v6);
				List v1 = v21;
				return v1;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getSystemRoutes(){
	if (v5 != 0) {
		long v6 = Binder.clearCallingIdentity();
		MediaRouter2ServiceImpl$$ExternalSyntheticLambda3 v13 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda3();
		Message v15 = PooledLambda.obtainMessage(v13, MediaRouter2ServiceImpl$UserRecord.mHandler);
		boolean v16 = MediaRouter2ServiceImpl$UserRecord.mHandler.sendMessage(v15);
		MediaRouter2ServiceImpl$UserRecord v7 = ;
		if ( == 0) {
			SystemMediaRoute2Provider v17 = this.mSystemProvider;
			MediaRoute2ProviderInfo v18 = this.mProviderInfo;
			if (v18 == 0) {
				List v19 = Collections.emptyList();
				ArrayList v20 = new ArrayList();
				Binder.restoreCallingIdentity(v6);
				List v1 = v20;
				return v1;
			}
		}
	}
}

and the following sink code:
['MediaRouter2ServiceImpl$UserRecord v7 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v4);\nSystemMediaRoute2Provider v8 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);\nMediaRoute2ProviderInfo v9 = v8.getProviderInfo();\nCollection v10 = v9.getRoutes();\nArrayList v11 = new ArrayList();\nreturn v1;', 'long v6 = Binder.clearCallingIdentity();\nMediaRouter2ServiceImpl$$ExternalSyntheticLambda3 v13 = new MediaRouter2ServiceImpl$$ExternalSyntheticLambda3();\nMessage v15 = PooledLambda.obtainMessage(v13, MediaRouter2ServiceImpl$UserRecord.mHandler);\nArrayList v21 = new ArrayList();\nreturn v1;', 'List v1 = this.mService2.getSystemRoutes();\nreturn v1;']

The method getSystemRoutes has the following similar APIs:

- API Name: getSystemSessionInfo()Landroid/media/RoutingSessionInfo; with Similarity Score: 0.9395541548728943
  - Access Control Level: SYS_OR_SIG and the following code:
MediaRouter2ServiceImpl$UserRecord v7 = MediaRouter2ServiceImpl.getOrCreateUserRecordLocked(v4);
SystemMediaRoute2Provider v8 = MediaRouter2ServiceImpl$UserHandler.-$$Nest$fgetmSystemProvider(MediaRouter2ServiceImpl$UserRecord.mHandler);
List v9 = v8.getSessionInfos();
RoutingSessionInfo$Builder v11 = new RoutingSessionInfo$Builder(v12);
Object v12 = v9.get(0);
RoutingSessionInfo$Builder v14 = v11.setClientPackageName(0);
RoutingSessionInfo v15 = v14.build();

- API Name: requestSetVolume(Landroid/media/IMediaRouterClient;Ljava/lang/String;I)V with Similarity Score: 0.8003705143928528
  - Access Control Level: NONE and the following code:
long v1 = Binder.clearCallingIdentity();
Message v5 = MediaRouterService$UserRecord.mHandler.obtainMessage(6, p3, 0, p2);
v5.sendToTarget();
Binder.restoreCallingIdentity(v1);

