The method registerNetworkScoreCache has the following code snippet:

This is path 1 for the API with depth 1:
public void registerNetworkScoreCache(int p1, INetworkScoreCache p2, int p3){
	long v3 = Binder.clearCallingIdentity();
	Integer v4 = Integer.valueOf(p1);
	Object v5 = this.mScoreCaches.get(v4);
	if (v5 != 0) {
		RemoteCallbackList v6 = new RemoteCallbackList();
		Integer v8 = Integer.valueOf(p1);
		Object v9 = this.mScoreCaches.put(v8, v6);
		Integer v10 = Integer.valueOf(p3);
		boolean v11 = .register(p2, v10);
		if (v11 != 0) {
			int v12 = .getRegisteredCallbackCount();
			if (v12 != 0) {
				Integer v13 = Integer.valueOf(p1);
				Object v14 = this.mScoreCaches.remove(v13);
				if (v15 == 0) {
					Binder.restoreCallingIdentity(v3);
					return;
				}
			}
		}
	}
}

and the following sink code:
['Integer v4 = Integer.valueOf(p1);\nObject v5 = this.mScoreCaches.get(v4);\nRemoteCallbackList v6 = new RemoteCallbackList();\nInteger v8 = Integer.valueOf(p1);\nObject v9 = this.mScoreCaches.put(v8, v6);\nInteger v10 = Integer.valueOf(p3);\nboolean v11 = .register(p2, v10);', 'p0.enforceSystemOnly();\nlong v2 = Binder.clearCallingIdentity();\nInteger v3 = Integer.valueOf(p1);\nObject v4 = this.mScoreCaches.get(v3);\nRemoteCallbackList v5 = new RemoteCallbackList();\nInteger v7 = Integer.valueOf(p1);\nObject v8 = this.mScoreCaches.put(v7, v5);\nInteger v9 = Integer.valueOf(p3);\nboolean v10 = .register(p2, v9);']

The method registerNetworkScoreCache has the following similar APIs:

- API Name: unregisterNetworkScoreCache(ILandroid/net/INetworkScoreCache;)V with Similarity Score: 0.9174111485481262
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v3 = Integer.valueOf(p1);
Object v4 = this.mScoreCaches.get(v3);
boolean v5 = v4.unregister(p2);
int v6 = v4.getRegisteredCallbackCount();
Object v8 = this.mScoreCaches.remove(v7);

- API Name: unregisterNetworkScoreCache(ILandroid/net/INetworkScoreCache;)V with Similarity Score: 0.8813323974609375
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v3 = Integer.valueOf(p1);
Object v4 = this.mScoreCaches.get(v3);
boolean v5 = v4.unregister(p2);
int v6 = v4.getRegisteredCallbackCount();
Object v8 = this.mScoreCaches.remove(v7);

