The method getActiveScorerPackage has the following code snippet:

This is path 1 for the API with depth 2:
public String getActiveScorerPackage(){
	if (v3 != 0) {
		int v6 = this.mSettingsFacade.getInt(this.mContext, "network_recommendations_enabled", 0);
		int v5 = v6;
		if (v5 != -1) {
			String v8 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");
			String v7 = v8;
			boolean v10 = TextUtils.isEmpty(v7);
			if (v10 == 0) {
				List v11 = NetworkScorerAppManager.getAllValidScorers();
				int v12 = v11.size();
				if ( >= v12) {
					Object v13 = v11.get();
					String v14 = v13.getRecommendationServicePackageName();
					boolean v15 = v14.equals(v7);
					if (v15 == 0) {
						int v16 = v11.size();
						if ( >= v16) {
							Object v17 = v11.get();
							String v18 = v17.getRecommendationServicePackageName();
							boolean v19 = v18.equals(v7);
							if (v19 == 0) {
								NetworkScorerAppData v9 = v17;
								NetworkScorerAppData v4 = v9;
								if (v4 != 0) {
									String v20 = v4.getRecommendationServicePackageName();
									return v20;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public String getActiveScorerPackage(){
	if (v3 != 0) {
		int v6 = this.mSettingsFacade.getInt(this.mContext, "network_recommendations_enabled", 0);
		int v5 = v6;
		if (v5 != -1) {
			String v8 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");
			String v7 = v8;
			boolean v10 = TextUtils.isEmpty(v7);
			if (v10 == 0) {
				List v11 = NetworkScorerAppManager.getAllValidScorers();
				int v12 = v11.size();
				if ( >= v12) {
					Object v13 = v11.get();
					String v14 = v13.getRecommendationServicePackageName();
					boolean v15 = v14.equals(v7);
					if (v15 == 0) {
						int v16 = v11.size();
						if ( >= v16) {
							Object v17 = v11.get();
							String v18 = v17.getRecommendationServicePackageName();
							boolean v19 = v18.equals(v7);
							if (v19 == 0) {
								NetworkScorerAppData v9 = v17;
								NetworkScorerAppData v4 = v9;
								if (v4 != 0) {
									return 0;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public String getActiveScorerPackage(){
	if (v3 != 0) {
		int v6 = this.mSettingsFacade.getInt(this.mContext, "network_recommendations_enabled", 0);
		int v5 = v6;
		if (v5 != -1) {
			String v8 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");
			String v7 = v8;
			boolean v10 = TextUtils.isEmpty(v7);
			if (v10 == 0) {
				List v11 = NetworkScorerAppManager.getAllValidScorers();
				int v12 = v11.size();
				if ( >= v12) {
					Object v13 = v11.get();
					String v14 = v13.getRecommendationServicePackageName();
					boolean v15 = v14.equals(v7);
					if (v15 == 0) {
						int v16 = v11.size();
						if ( >= v16) {
							NetworkScorerAppData v9 = 0;
							NetworkScorerAppData v4 = v9;
							if (v4 != 0) {
								String v17 = v4.getRecommendationServicePackageName();
								return v17;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['NetworkScorerAppData v2 = this.mNetworkScorerAppManager.getActiveScorer();\nString v3 = v2.getRecommendationServicePackageName();\nreturn v3;', 'int v5 = NetworkScorerAppManager.getNetworkRecommendationsEnabledSetting();\nString v6 = NetworkScorerAppManager.getNetworkRecommendationsPackage();\nNetworkScorerAppData v7 = NetworkScorerAppManager.getScorer(v6);\nString v9 = this.mRecommendationService.getPackageName();\nreturn v8;', 'int v6 = this.mSettingsFacade.getInt(this.mContext, "network_recommendations_enabled", 0);\nString v8 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");\nList v11 = NetworkScorerAppManager.getAllValidScorers();\nObject v13 = v11.get();\nString v14 = v13.getRecommendationServicePackageName();\nreturn v20;']

The method getActiveScorerPackage has the following similar APIs:

- API Name: getActiveScorer()Landroid/net/NetworkScorerAppData; with Similarity Score: 0.935253381729126
  - Access Control Level: SYS_OR_SIG and the following code:
String v7 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");
List v10 = NetworkScorerAppManager.getAllValidScorers();
Object v12 = v10.get();
String v13 = v12.getRecommendationServicePackageName();
boolean v14 = v13.equals(v6);

- API Name: getActiveScorer()Landroid/net/NetworkScorerAppData; with Similarity Score: 0.8700152039527893
  - Access Control Level: SYS_OR_SIG and the following code:
String v7 = this.mSettingsFacade.getString(this.mContext, "network_recommendations_package");
List v10 = NetworkScorerAppManager.getAllValidScorers();
Object v12 = v10.get();
String v13 = v12.getRecommendationServicePackageName();
boolean v14 = v13.equals(v6);

