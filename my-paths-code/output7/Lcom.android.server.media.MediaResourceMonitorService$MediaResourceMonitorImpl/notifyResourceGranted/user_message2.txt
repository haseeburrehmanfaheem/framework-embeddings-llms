The method notifyResourceGranted has the following code snippet:

This is path 1 for the API with depth 0:
public void notifyResourceGranted(int p1, int p2){
	Binder.restoreCallingIdentity(v11);
	return;
}
This is path 2 for the API with depth 0:
public void notifyResourceGranted(int p1, int p2){
	Context v13 = this.this$0.getContext();
	int v14 = ActivityManager.getCurrentUser();
	UserHandle v15 = UserHandle.of(v14);
	Context v16 = v13.createContextAsUser(v15, 0);
	Object v17 = v16.getSystemService(UserManage.class);
	List v18 = v17.getEnabledProfiles();
	boolean v19 = v18.isEmpty();
	if (v19 == 0) {
		Binder.restoreCallingIdentity(v11);
		return;
	}
}
This is path 3 for the API with depth 0:
public void notifyResourceGranted(int p1, int p2){
	Context v13 = this.this$0.getContext();
	int v14 = ActivityManager.getCurrentUser();
	UserHandle v15 = UserHandle.of(v14);
	Context v16 = v13.createContextAsUser(v15, 0);
	Object v17 = v16.getSystemService(UserManage.class);
	List v18 = v17.getEnabledProfiles();
	boolean v19 = v18.isEmpty();
	if (v19 == 0) {
		Intent v20 = new Intent("android.intent.action.MEDIA_RESOURCE_GRANTED");
		Intent v22 = v20.putExtra("android.intent.extra.PACKAGES", v12);
		Intent v23 = v20.putExtra("android.intent.extra.MEDIA_RESOURCE_TYPE", p2);
		Iterator v24 = v18.iterator();
		boolean v25 = v24.hasNext();
		if (v25 == 0) {
			Object v26 = v24.next();
			Context v27 = this.this$0.getContext();
			v27.sendBroadcastAsUser(v20, v26, "android.permission.RECEIVE_MEDIA_RESOURCE_USAGE");
			boolean v29 = v24.hasNext();
			if (v29 == 0) {
				Binder.restoreCallingIdentity(v11);
				return;
			}
		}
	}
}

and the following sink code:
['Intent v20 = new Intent("android.intent.action.MEDIA_RESOURCE_GRANTED");\nIntent v22 = v20.putExtra("android.intent.extra.PACKAGES", v12);\nIntent v23 = v20.putExtra("android.intent.extra.MEDIA_RESOURCE_TYPE", p2);\nContext v27 = this.this$0.getContext();\nv27.sendBroadcastAsUser(v20, v26, "android.permission.RECEIVE_MEDIA_RESOURCE_USAGE");']

The method notifyResourceGranted has the following similar APIs:

- API Name: setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V with Similarity Score: 0.8565289974212646
  - Access Control Level: SYS_OR_SIG and the following code:
Intent v29 = new Intent("android.intent.action.APPLICATION_RESTRICTIONS_CHANGED");
Intent v31 = v29.setPackage(p1);
Intent v32 = v29.addFlags(1073741824);
UserHandle v33 = UserHandle.of(p3);
this.mContext.sendBroadcastAsUser(v29, v33);

- API Name: requestChannelBrowsable(Landroid/net/Uri;I)V with Similarity Score: 0.8074592351913452
  - Access Control Level: NONE and the following code:
String v5 = v3.getPackagesForUid(v4);
int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
Intent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
v21 = v12.putExtra("android.media.tv.extra.PACKAGE_NAME", v1);
UserHandle v25 = new UserHandle(v8);
v24.sendBroadcastAsUser(v12, v25);

