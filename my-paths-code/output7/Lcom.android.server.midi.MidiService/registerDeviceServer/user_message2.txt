The method registerDeviceServer has the following code snippet:

This is path 1 for the API with depth 2:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	if ( >= 16) {
		this.mNextDeviceId = (this.mNextDeviceId + 1);
		MidiDeviceInfo v9 = new MidiDeviceInfo(p7,this.mNextDeviceId,p2,p3,p4,p5,p6,0,p8);
		if (p1 == 0) {
			p1.setDeviceInfo(v9);
			if (p7 != 3) {
				if ( != 0) {
					MidiService$Device v12 = new MidiService$Device(MidiService,p1,v9,0,v1);
					Object v14 = this.mDevicesByInfo.put(v9, );
					if ( == 0) {
						Collection v15 = this.mClients.values();
						Iterator v16 = v15.iterator();
						boolean v17 = v16.hasNext();
						if (v17 == 0) {
							Object v18 = v16.next();
							boolean v20 = .isUidAllowed(this.mUid);
							if (v20 != 0) {
								MidiDeviceInfo v21 = .getDeviceInfo();
								Collection v22 = this.mListeners.values();
								Iterator v23 = v22.iterator();
								boolean v24 = v23.hasNext();
								if (v24 == 0) {
									Object v25 = v23.next();
									v25.onDeviceAdded(v21);
									boolean v27 = v23.hasNext();
									if (v27 == 0) {
										boolean v28 = v16.hasNext();
										if (v28 == 0) {
											MidiDeviceInfo v2 = v9;
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public MidiDeviceInfo registerDeviceServer(IMidiDeviceServer p1, int p2, int p3, String p4, String p5, Bundle p6, int p7, int p8){
	if ( >= 16) {
		this.mNextDeviceId = (this.mNextDeviceId + 1);
		MidiDeviceInfo v9 = new MidiDeviceInfo(p7,this.mNextDeviceId,p2,p3,p4,p5,p6,0,p8);
		if (p1 == 0) {
			p1.setDeviceInfo(v9);
			if (p7 != 3) {
				if ( != 0) {
					MidiService$Device v12 = new MidiService$Device(MidiService,p1,v9,0,v1);
					Object v14 = this.mDevicesByInfo.put(v9, );
					if ( == 0) {
						Collection v15 = this.mClients.values();
						Iterator v16 = v15.iterator();
						boolean v17 = v16.hasNext();
						if (v17 == 0) {
							Object v18 = v16.next();
							boolean v20 = .isUidAllowed(this.mUid);
							if (v20 != 0) {
								boolean v21 = v16.hasNext();
								if (v21 == 0) {
									MidiDeviceInfo v2 = v9;
									return v2;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['MidiDeviceInfo v9 = new MidiDeviceInfo(p7, this.mNextDeviceId, p2, p3, p4, p5, p6, 0, p8);\nthis.mNextDeviceId = (this.mNextDeviceId + 1);\np1.setDeviceInfo(v9);\nObject v14 = this.mDevicesByInfo.put(v9, /* some value */);\nMidiDeviceInfo v2 = v9;\nreturn v2;', 'MidiDeviceInfo v9 = new MidiDeviceInfo(p7, this.mNextDeviceId, p2, p3, p4, p5, p6, 0, p8);\np1.setDeviceInfo(v9);\nObject v16 = this.mDevicesByInfo.put(v9, /* some value */);\nMidiDeviceInfo v2 = v9;\nreturn v2;', 'MidiDeviceInfo v2 = p0.addDeviceLocked(p7, p2, p3, p4, p5, p6, p1, 0, 0, v1, p8);\nreturn v2;']

The method registerDeviceServer has the following similar APIs:

- API Name: getDeviceStatus(Landroid/media/midi/MidiDeviceInfo;)Landroid/media/midi/MidiDeviceStatus; with Similarity Score: 0.8172383308410645
  - Access Control Level: NONE and the following code:
Object v1 = this.mDevicesByInfo.get(p1);
if (v1 == 0) {
int v2 = Binder.getCallingUid();
boolean v4 = this.mDeviceInfo.isPrivate();
if (v4 == 0) {
MidiDeviceStatus v5 = this.mDeviceStatus;
return v5;

- API Name: getDeviceStatus(Landroid/media/midi/MidiDeviceInfo;)Landroid/media/midi/MidiDeviceStatus; with Similarity Score: 0.8076069951057434
  - Access Control Level: NONE and the following code:
Object v1 = this.mDevicesByInfo.get(p1);
boolean v3 = v1.isUidAllowed(v2);
if (v3 == 0) {
MidiDeviceStatus v4 = v1.getDeviceStatus();
return v4;

