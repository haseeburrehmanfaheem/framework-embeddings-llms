The method startProtoDump has the following code snippet:

This is path 1 for the API with depth 2:
public void startProtoDump(byte[] p1, int p2, String p3){
	if (p1 != 0) {
		if (p2 == 2) {
			if (this.sInstance != 0) {
				boolean v3 = ActivityThread.isSystem();
				boolean v2 = v3;
				if (v2 == 0) {
					ImeTracingServerImpl v4 = new ImeTracingServerImpl();
					this.sInstance = ;
					ImeTracing v1 = this.sInstance;
					boolean v6 = v1.isAvailable();
					if (v6 == 0) {
						boolean v7 = v1.isEnabled();
						if (v7 != 0) {
							ProtoOutputStream v8 = new ProtoOutputStream();
							if (p2 == 0) {
								if (p2 == 1) {
									if (p2 == 2) {
										long v10 = v8.start(2246267895810);
										long v11 = SystemClock.elapsedRealtimeNanos();
										v8.write(1125281431553, v11);
										v8.write(1138166333442, p3);
										p0.dumpDebug(v8, 1146756268035);
										v8.end(v10);
										v1.addToBuffer(v8, p2);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void startProtoDump(byte[] p1, int p2, String p3){
	if (p1 != 0) {
		if (p2 == 2) {
			if (this.sInstance != 0) {
				boolean v3 = ActivityThread.isSystem();
				boolean v2 = v3;
				if (v2 == 0) {
					ImeTracingClientImpl v4 = new ImeTracingClientImpl();
					this.sInstance = ;
					ImeTracing v1 = this.sInstance;
					boolean v6 = v1.isAvailable();
					if (v6 == 0) {
						boolean v7 = v1.isEnabled();
						if (v7 != 0) {
							ProtoOutputStream v8 = new ProtoOutputStream();
							if (p2 == 0) {
								if (p2 == 1) {
									if (p2 == 2) {
										long v10 = v8.start(2246267895810);
										long v11 = SystemClock.elapsedRealtimeNanos();
										v8.write(1125281431553, v11);
										v8.write(1138166333442, p3);
										p0.dumpDebug(v8, 1146756268035);
										v8.end(v10);
										v1.addToBuffer(v8, p2);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void startProtoDump(byte[] p1, int p2, String p3){
	if (p1 != 0) {
		if (p2 == 2) {
			if (this.sInstance != 0) {
				boolean v3 = ActivityThread.isSystem();
				boolean v2 = v3;
				if (v2 == 0) {
					ImeTracingServerImpl v4 = new ImeTracingServerImpl();
					this.sInstance = ;
					ImeTracing v1 = this.sInstance;
					boolean v6 = v1.isAvailable();
					if (v6 == 0) {
						boolean v7 = v1.isEnabled();
						if (v7 != 0) {
							ProtoOutputStream v8 = new ProtoOutputStream();
							if (p2 == 0) {
								if (p2 == 1) {
									long v10 = v8.start(2246267895810);
									long v11 = SystemClock.elapsedRealtimeNanos();
									v8.write(1125281431553, v11);
									v8.write(1138166333442, p3);
									v8.write(1146756268035, p1);
									v8.end(v10);
									v1.addToBuffer(v8, p2);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ImeTracingServerImpl v4 = new ImeTracingServerImpl();\nProtoOutputStream v8 = new ProtoOutputStream();\nlong v10 = v8.start(2246267895810);\nv8.write(1125281431553, SystemClock.elapsedRealtimeNanos());\nv8.write(1138166333442, p3);\np0.dumpDebug(v8, 1146756268035);\nv8.end(v10);\nv1.addToBuffer(v8, p2);']

The method startProtoDump has the following similar APIs:

- API Name: startImeTrace()V with Similarity Score: 0.845699667930603
  - Access Control Level: NONE and the following code:
ImeTracingServerImpl v4 = new ImeTracingServerImpl();
this.sInstance = ;
ImeTracing v1 = this.sInstance;
v1.startTrace(0);

- API Name: stopImeTrace()V with Similarity Score: 0.7826676368713379
  - Access Control Level: NONE and the following code:
if (this.sInstance != 0) {
ImeTracingServerImpl v4 = new ImeTracingServerImpl();
this.sInstance = ;
ImeTracing v1 = this.sInstance;
v1.stopTrace(0);

