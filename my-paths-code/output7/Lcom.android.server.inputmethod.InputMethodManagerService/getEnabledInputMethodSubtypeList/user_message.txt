This is path 1 for the API with depth 2:
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mCurrentUserId;
	Object v5 = this.sLocalServiceObjects.get(UserManagerInterna.class);
	Object v4 = v5;
	if (v1 != -1) {
		if (v1 != -2) {
			if (v1 >= 0) {
				boolean v6 = v4.exists(v1);
				if (v6 == 0) {
					[I v7 = new [I(1);
					[I v3 = v7;
					if (v3.length == 1) {
						long v8 = Binder.clearCallingIdentity();
						String v12 = this.mBindingController.getSelectedMethodId();
						String v11 = v12;
						if (p1 != 0) {
							if (v11 == 0) {
								Object v13 = this.mMethodMap.get(v11);
								if ( != 0) {
									List v15 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked();
									if (p2 == 0) {
										boolean v16 = v15.isEmpty();
										if (v16 == 0) {
											Resources v17 = this.mContext.getResources();
											ArrayList v18 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v17, );
											List v19 = InputMethodSubtype.sort(this.mContext, 0, , );
											List v14 = v19;
											List v9 = v14;
											Binder.restoreCallingIdentity(v8);
											return v9;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mCurrentUserId;
	0.print("User #");
	0.print(v1);
	0.println(" does not exit.");
	[I v9 = new [I(0);
	[I v3 = v9;
	if (v3.length == 1) {
		long v10 = Binder.clearCallingIdentity();
		String v13 = InputMethodManagerService.getSelectedMethodIdLocked();
		if (p1 != 0) {
			if (v13 == 0) {
				Object v14 = this.mMethodMap.get(v13);
				if ( != 0) {
					List v15 = this.mSettings.getEnabledInputMethodSubtypeListLocked(this.mContext, , p2);
					List v11 = v15;
					Binder.restoreCallingIdentity(v10);
					return v11;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mSettings.getCurrentUserId();
	[I v3 = InputMethodUtils.resolveUserId(v1, v2, 0);
	if (v3.length == 1) {
		long v4 = Binder.clearCallingIdentity();
		List v5 = p0.getEnabledInputMethodSubtypeListLocked(p1, p2, v3[0]);
		Binder.restoreCallingIdentity(v4);
		return v5;
	}
}
