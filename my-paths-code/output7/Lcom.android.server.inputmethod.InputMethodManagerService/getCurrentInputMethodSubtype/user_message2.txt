The method getCurrentInputMethodSubtype has the following code snippet:

This is path 1 for the API with depth 2:
public InputMethodSubtype getCurrentInputMethodSubtype(){
	if (v5 != 0) {
		String v9 = Debug.getCallers(10);
		boolean v1 = 0;
		if (v1 != 0) {
			String v15 = this.mBindingController.getSelectedMethodId();
			String v14 = v15;
			if (v14 != 0) {
				int v17 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
				if (v17 == -1) {
					boolean v16 = ;
					Object v18 = this.mMethodMap.get(v14);
					if (v18 == 0) {
						int v19 = v18.getSubtypeCount();
						if (v19 != 0) {
							if (v16 == 0) {
								if (this.mCurrentSubtype == 0) {
									int v20 = this.mSubtypeHashCode;
									int v22 = InputMethodUtils.getSubtypeIdFromHashCode(v18, v20);
									if (v22 == -1) {
										boolean v21 = ;
										if (v21 != 0) {
											Object v24 = this.mMethodMap.get(v14);
											if (v24 != 0) {
												int v25 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
												int v26 = InputMethodUtils.getSubtypeIdFromHashCode(v24, v25);
												int v23 = v26;
												if (v23 != -1) {
													List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18);
													if (1 == 0) {
														boolean v29 = v28.isEmpty();
														if (v29 == 0) {
															Resources v30 = this.mContext.getResources();
															ArrayList v31 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v30, v18);
															List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, );
															List v27 = v32;
															int v33 = v27.size();
															if (v33 != 1) {
																int v34 = v27.size();
																if (v34 <= 1) {
																	if (v27 == 0) {
																		int v36 = v27.size();
																		if (v36 != 0) {
																			boolean v37 = TextUtils.isEmpty(0);
																			if (v37 == 0) {
																				Configuration v38 = this.mRes.getConfiguration();
																				String v39 = Configuration.locale.toString();
																				String v40 = InputMethodUtils.getLanguageFromLocaleString();
																				int v41 = v27.size();
																				if ( >= v41) {
																					Object v42 = v27.get();
																					String v43 = v42.getLocale();
																					String v44 = InputMethodUtils.getLanguageFromLocaleString(v43);
																					if ("keyboard" == 0) {
																						Object v45 = v27.get();
																						String v46 = v45.getMode();
																						boolean v47 = v46.equalsIgnoreCase("keyboard");
																						if (v47 == 0) {
																							if ( != 0) {
																								boolean v48 = .equals(v43);
																								if (v48 == 0) {
																									if ( != 0) {
																										boolean v49 = v40.equals(v44);
																										if (v49 == 0) {
																											if ( >= v41) {
																												if ( != 0) {
																													if (1 == 0) {
																														InputMethodSubtype v35 = ;
																														this.mCurrentSubtype = v35;
																														if (v35 != 0) {
																															if (v27 == 0) {
																																int v51 = v27.size();
																																if (v51 != 0) {
																																	boolean v52 = TextUtils.isEmpty(0);
																																	if (v52 == 0) {
																																		Configuration v53 = this.mRes.getConfiguration();
																																		String v54 = Configuration.locale.toString();
																																		String v55 = InputMethodUtils.getLanguageFromLocaleString();
																																		int v56 = v27.size();
																																		if ( >= v56) {
																																			Object v57 = v27.get();
																																			String v58 = v57.getLocale();
																																			String v59 = InputMethodUtils.getLanguageFromLocaleString(v58);
																																			if (0 == 0) {
																																				Object v60 = v27.get();
																																				String v61 = v60.getMode();
																																				boolean v62 = v61.equalsIgnoreCase(0);
																																				if (v62 == 0) {
																																					if ( != 0) {
																																						boolean v63 = .equals(v58);
																																						if (v63 == 0) {
																																							if ( != 0) {
																																								boolean v64 = v55.equals(v59);
																																								if (v64 == 0) {
																																									if ( >= v56) {
																																										if ( != 0) {
																																											if (1 == 0) {
																																												InputMethodSubtype v50 = ;
																																												this.mCurrentSubtype = v50;
																																												InputMethodSubtype v13 = this.mCurrentSubtype;
																																												return v13;
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public InputMethodSubtype getCurrentInputMethodSubtype(){
	if (v5 != 0) {
		String v9 = Debug.getCallers(10);
		boolean v1 = 0;
		if (v1 != 0) {
			String v15 = this.mBindingController.getSelectedMethodId();
			String v14 = v15;
			if (v14 != 0) {
				int v17 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
				if (v17 == -1) {
					boolean v16 = ;
					Object v18 = this.mMethodMap.get(v14);
					if (v18 == 0) {
						int v19 = v18.getSubtypeCount();
						if (v19 != 0) {
							if (v16 == 0) {
								if (this.mCurrentSubtype == 0) {
									int v20 = this.mSubtypeHashCode;
									int v22 = InputMethodUtils.getSubtypeIdFromHashCode(v18, v20);
									if (v22 == -1) {
										boolean v21 = ;
										if (v21 != 0) {
											Object v24 = this.mMethodMap.get(v14);
											if (v24 != 0) {
												int v25 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
												int v26 = InputMethodUtils.getSubtypeIdFromHashCode(v24, v25);
												int v23 = v26;
												if (v23 != -1) {
													List v28 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v18);
													if (1 == 0) {
														boolean v29 = v28.isEmpty();
														if (v29 == 0) {
															Resources v30 = this.mContext.getResources();
															ArrayList v31 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v30, v18);
															List v32 = InputMethodSubtype.sort(this.mContext, 0, v18, );
															List v27 = v32;
															int v33 = v27.size();
															if (v33 != 1) {
																int v34 = v27.size();
																if (v34 <= 1) {
																	if (v27 == 0) {
																		int v36 = v27.size();
																		if (v36 != 0) {
																			boolean v37 = TextUtils.isEmpty(0);
																			if (v37 == 0) {
																				Configuration v38 = this.mRes.getConfiguration();
																				String v39 = Configuration.locale.toString();
																				String v40 = InputMethodUtils.getLanguageFromLocaleString();
																				int v41 = v27.size();
																				if ( >= v41) {
																					Object v42 = v27.get();
																					String v43 = v42.getLocale();
																					String v44 = InputMethodUtils.getLanguageFromLocaleString(v43);
																					if ("keyboard" == 0) {
																						Object v45 = v27.get();
																						String v46 = v45.getMode();
																						boolean v47 = v46.equalsIgnoreCase("keyboard");
																						if (v47 == 0) {
																							if ( != 0) {
																								boolean v48 = .equals(v43);
																								if (v48 == 0) {
																									if ( != 0) {
																										boolean v49 = v40.equals(v44);
																										if (v49 == 0) {
																											if ( >= v41) {
																												if ( != 0) {
																													if (1 == 0) {
																														InputMethodSubtype v35 = ;
																														this.mCurrentSubtype = v35;
																														if (v35 != 0) {
																															if (v27 == 0) {
																																int v51 = v27.size();
																																if (v51 != 0) {
																																	boolean v52 = TextUtils.isEmpty(0);
																																	if (v52 == 0) {
																																		Configuration v53 = this.mRes.getConfiguration();
																																		String v54 = Configuration.locale.toString();
																																		String v55 = InputMethodUtils.getLanguageFromLocaleString();
																																		int v56 = v27.size();
																																		if ( >= v56) {
																																			Object v57 = v27.get();
																																			String v58 = v57.getLocale();
																																			String v59 = InputMethodUtils.getLanguageFromLocaleString(v58);
																																			if (0 == 0) {
																																				Object v60 = v27.get();
																																				String v61 = v60.getMode();
																																				boolean v62 = v61.equalsIgnoreCase(0);
																																				if (v62 == 0) {
																																					if ( != 0) {
																																						boolean v63 = .equals(v58);
																																						if (v63 == 0) {
																																							if ( != 0) {
																																								boolean v64 = v55.equals(v59);
																																								if (v64 == 0) {
																																									if ( >= v56) {
																																										if ( != 0) {
																																											if (1 == 0) {
																																												InputMethodSubtype v50 = ;
																																												this.mCurrentSubtype = v50;
																																												InputMethodSubtype v13 = this.mCurrentSubtype;
																																												return v13;
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public InputMethodSubtype getCurrentInputMethodSubtype(){
	if (v5 != 0) {
		boolean v1 = 1;
		if (v1 != 0) {
			String v8 = this.mBindingController.getSelectedMethodId();
			String v7 = v8;
			if (v7 != 0) {
				int v10 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
				if (v10 == -1) {
					boolean v9 = ;
					Object v11 = this.mMethodMap.get(v7);
					if (v11 == 0) {
						int v12 = v11.getSubtypeCount();
						if (v12 != 0) {
							if (v9 == 0) {
								if (this.mCurrentSubtype == 0) {
									int v13 = this.mSubtypeHashCode;
									int v15 = InputMethodUtils.getSubtypeIdFromHashCode(v11, v13);
									if (v15 == -1) {
										boolean v14 = ;
										if (v14 != 0) {
											Object v17 = this.mMethodMap.get(v7);
											if (v17 != 0) {
												int v18 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();
												int v19 = InputMethodUtils.getSubtypeIdFromHashCode(v17, v18);
												int v16 = v19;
												if (v16 != -1) {
													List v21 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodSubtypeListLocked(v11);
													if (1 == 0) {
														boolean v22 = v21.isEmpty();
														if (v22 == 0) {
															Resources v23 = this.mContext.getResources();
															ArrayList v24 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v23, v11);
															List v25 = InputMethodSubtype.sort(this.mContext, 0, v11, );
															List v20 = v25;
															int v26 = v20.size();
															if (v26 != 1) {
																int v27 = v20.size();
																if (v27 <= 1) {
																	if (v20 == 0) {
																		int v29 = v20.size();
																		if (v29 != 0) {
																			boolean v30 = TextUtils.isEmpty(0);
																			if (v30 == 0) {
																				Configuration v31 = this.mRes.getConfiguration();
																				String v32 = Configuration.locale.toString();
																				String v33 = InputMethodUtils.getLanguageFromLocaleString();
																				int v34 = v20.size();
																				if ( >= v34) {
																					Object v35 = v20.get();
																					String v36 = v35.getLocale();
																					String v37 = InputMethodUtils.getLanguageFromLocaleString(v36);
																					if ("keyboard" == 0) {
																						Object v38 = v20.get();
																						String v39 = v38.getMode();
																						boolean v40 = v39.equalsIgnoreCase("keyboard");
																						if (v40 == 0) {
																							if ( != 0) {
																								boolean v41 = .equals(v36);
																								if (v41 == 0) {
																									if ( != 0) {
																										boolean v42 = v33.equals(v37);
																										if (v42 == 0) {
																											if ( >= v34) {
																												if ( != 0) {
																													if (1 == 0) {
																														InputMethodSubtype v28 = ;
																														this.mCurrentSubtype = v28;
																														if (v28 != 0) {
																															if (v20 == 0) {
																																int v44 = v20.size();
																																if (v44 != 0) {
																																	boolean v45 = TextUtils.isEmpty(0);
																																	if (v45 == 0) {
																																		Configuration v46 = this.mRes.getConfiguration();
																																		String v47 = Configuration.locale.toString();
																																		String v48 = InputMethodUtils.getLanguageFromLocaleString();
																																		int v49 = v20.size();
																																		if ( >= v49) {
																																			Object v50 = v20.get();
																																			String v51 = v50.getLocale();
																																			String v52 = InputMethodUtils.getLanguageFromLocaleString(v51);
																																			if (0 == 0) {
																																				Object v53 = v20.get();
																																				String v54 = v53.getMode();
																																				boolean v55 = v54.equalsIgnoreCase(0);
																																				if (v55 == 0) {
																																					if ( != 0) {
																																						boolean v56 = .equals(v51);
																																						if (v56 == 0) {
																																							if ( != 0) {
																																								boolean v57 = v48.equals(v52);
																																								if (v57 == 0) {
																																									if ( >= v49) {
																																										if ( != 0) {
																																											if (1 == 0) {
																																												InputMethodSubtype v43 = ;
																																												this.mCurrentSubtype = v43;
																																												InputMethodSubtype v6 = this.mCurrentSubtype;
																																												return v6;
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['String v14 = this.mBindingController.getSelectedMethodId();\nint v17 = InputMethodUtils$InputMethodSettings.getSelectedInputMethodSubtypeHashCode();\nObject v18 = this.mMethodMap.get(v14);\nthis.mCurrentSubtype = v35;', 'String v9 = Debug.getCallers(10);\nboolean v1 = 0;\nif (v1 != 0) {', 'InputMethodSubtype v2 = p0.getCurrentInputMethodSubtypeLocked();\nreturn v2;']

The method getCurrentInputMethodSubtype has the following similar APIs:

- API Name: getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype; with Similarity Score: 0.8023792505264282
  - Access Control Level: SYS_OR_SIG and the following code:
Pair v2 = this.mSettings.getLastInputMethodAndSubtypeLocked();
Object v5 = this.mMethodMap.get(Pair.first);
int v6 = Integer.parseInt(Pair.second);
int v7 = InputMethodUtils.getSubtypeIdFromHashCode(v5, v6);

- API Name: getLastInputMethodSubtype()Landroid/view/inputmethod/InputMethodSubtype; with Similarity Score: 0.7975586652755737
  - Access Control Level: SYS_OR_SIG and the following code:
Pair v2 = this.mSettings.getLastInputMethodAndSubtypeLocked();
Object v5 = this.mMethodMap.get(Pair.first);
int v6 = Integer.parseInt(Pair.second);
int v7 = InputMethodUtils.getSubtypeIdFromHashCode(v5, v6);

