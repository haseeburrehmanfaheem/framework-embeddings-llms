This is path 1 for the API with depth 1:
public void setAdditionalInputMethodSubtypes(String p1, InputMethodSubtype p2){
	boolean v1 = TextUtils.isEmpty(p1);
	if (v1 != 0) {
		if (p2 != 0) {
			ArrayList v2 = new ArrayList();
			if ( >= p2.length) {
				boolean v4 = v2.contains(p2[]);
				if (v4 != 0) {
					boolean v5 = v2.add(p2[]);
					if ( >= p2.length) {
						if (v10 != 0) {
							String v14 = Debug.getCallers(10);
							boolean v6 = 0;
							if (v6 != 0) {
								if (this.mSystemReady != 0) {
									Object v18 = this.mMethodMap.get(p1);
									if (v18 != 0) {
										int v19 = Binder.getCallingUid();
										String v20 = this.mIPackageManager.getPackagesForUid(v19);
										if (v20 == 0) {
											if ( >= v20.length) {
												String v21 = v18.getPackageName();
												boolean v22 = v20[].equals(v21);
												if (v22 == 0) {
													if ( >= v20.length) {
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 0:
public void setAdditionalInputMethodSubtypes(String p1, InputMethodSubtype p2){
	boolean v1 = TextUtils.isEmpty(p1);
	if (v1 != 0) {
		if (p2 != 0) {
			ArrayList v2 = new ArrayList();
			if ( >= p2.length) {
				boolean v4 = v2.contains(p2[]);
				if (v4 != 0) {
					boolean v5 = v2.add(p2[]);
					if ( >= p2.length) {
						boolean v6 = p0.calledFromValidUserLocked();
						if (v6 != 0) {
							if (this.mSystemReady != 0) {
								Object v7 = this.mMethodMap.get(p1);
								if (v7 != 0) {
									int v8 = Binder.getCallingUid();
									String v9 = this.mIPackageManager.getPackagesForUid(v8);
									if (v9 == 0) {
										if ( >= v9.length) {
											String v10 = v7.getPackageName();
											boolean v11 = v9[].equals(v10);
											if (v11 == 0) {
												if ( >= v9.length) {
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 1:
public void setAdditionalInputMethodSubtypes(String p1, InputMethodSubtype p2){
	boolean v1 = TextUtils.isEmpty(p1);
	if (v1 != 0) {
		if (p2 != 0) {
			ArrayList v2 = new ArrayList();
			if ( >= p2.length) {
				boolean v4 = v2.contains(p2[]);
				if (v4 != 0) {
					boolean v5 = v2.add(p2[]);
					if ( >= p2.length) {
						if (v10 != 0) {
							boolean v6 = 1;
							if (v6 != 0) {
								if (this.mSystemReady != 0) {
									Object v11 = this.mMethodMap.get(p1);
									if (v11 != 0) {
										int v12 = Binder.getCallingUid();
										String v13 = this.mIPackageManager.getPackagesForUid(v12);
										if (v13 == 0) {
											if ( >= v13.length) {
												String v14 = v11.getPackageName();
												boolean v15 = v13[].equals(v14);
												if (v15 == 0) {
													if ( >= v13.length) {
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
