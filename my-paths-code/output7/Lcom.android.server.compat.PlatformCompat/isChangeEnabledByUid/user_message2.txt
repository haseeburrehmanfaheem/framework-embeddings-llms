The method isChangeEnabledByUid has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isChangeEnabledByUid(long p1, int p2){
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	if (v3 == 0) {
		if (v3.length != 0) {
			if ( >= v3.length) {
				int v4 = UserHandle.getUserId(p2);
				Object v8 = LocalServices.getService(PackageManagerInterna.class);
				int v9 = Process.myUid();
				ApplicationInfo v10 = v8.getApplicationInfo(p2, 0, v9, p3);
				ApplicationInfo v7 = v10;
				if (v7 != 0) {
					Long v12 = Long.valueOf(p1);
					Object v13 = this.mChanges.get(v12);
					if (v13 != 0) {
						boolean v14 = v13.willBeEnabled(p2);
						boolean v11 = v14;
						boolean v5 = v11;
						if ( >= v3.length) {
							return ;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isChangeEnabledByUid(long p1, int p2){
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	if (v3 == 0) {
		if (v3.length != 0) {
			if ( >= v3.length) {
				int v4 = UserHandle.getUserId(p2);
				Object v8 = LocalServices.getService(PackageManagerInterna.class);
				int v9 = Process.myUid();
				ApplicationInfo v10 = v8.getApplicationInfo(p2, 0, v9, p3);
				ApplicationInfo v7 = v10;
				if (v7 != 0) {
					boolean v12 = PlatformCompat.isChangeEnabledInternalNoLogging(p1, v7);
					if (v7 == 0) {
						if (v12 == 0) {
							PlatformCompat.reportChangeInternal(p1, ApplicationInfo.uid, );
							boolean v11 = v12;
							boolean v5 = v11;
							if ( >= v3.length) {
								return ;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean isChangeEnabledByUid(long p1, int p2){
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	if (v3 == 0) {
		if (v3.length != 0) {
			if ( >= v3.length) {
				int v4 = UserHandle.getUserId(p2);
				Object v8 = LocalServices.getService(PackageManagerInterna.class);
				int v9 = Process.myUid();
				ApplicationInfo v10 = v8.getApplicationInfo(p2, 0, v9, p3);
				ApplicationInfo v7 = v10;
				if (v7 != 0) {
					Long v12 = Long.valueOf(p1);
					Object v13 = this.mChanges.get(v12);
					if (v13 != 0) {
						boolean v11 = 1;
						boolean v5 = v11;
						if ( >= v3.length) {
							return ;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['PackageManager v2 = this.mContext.getPackageManager();\nString v3 = v2.getPackagesForUid(p2);\nint v4 = UserHandle.getUserId(p2);\nObject v8 = LocalServices.getService(PackageManagerInternal.class);\nApplicationInfo v10 = v8.getApplicationInfo(p2, 0, v9, p3);\nLong v12 = Long.valueOf(p1);\nObject v13 = this.mChanges.get(v12);\nboolean v14 = v13.willBeEnabled(p2);', 'PackageManager v2 = this.mContext.getPackageManager();\nString v3 = v2.getPackagesForUid(p2);\nint v4 = UserHandle.getUserId(p2);\nApplicationInfo v7 = PlatformCompat.getApplicationInfo(v3[], v4);\nboolean v8 = this.mCompatConfig.willChangeBeEnabled(p1, v3[]);', 'PackageManager v2 = this.mContext.getPackageManager();\nString v3 = v2.getPackagesForUid(p2);\nint v4 = UserHandle.getUserId(p2);\nboolean v5 = p0.isChangeEnabledByPackageName(p1, v3[], v4);']

The method isChangeEnabledByUid has the following similar APIs:

- API Name: isChangeEnabledByUid(JI)Z with Similarity Score: 0.9911782741546631
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v2 = this.mContext.getPackageManager();
String v3 = v2.getPackagesForUid(p2);
int v4 = UserHandle.getUserId(p2);
ApplicationInfo v7 = PlatformCompat.getApplicationInfo(v3[], v4);
boolean v8 = this.mCompatConfig.willChangeBeEnabled(p1, v3[]);

- API Name: isChangeEnabledByUid(JI)Z with Similarity Score: 0.9738956689834595
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v2 = this.mContext.getPackageManager();
String v3 = v2.getPackagesForUid(p2);
int v4 = UserHandle.getUserId(p2);
boolean v5 = p0.isChangeEnabledByPackageName(p1, v3[], v4);

