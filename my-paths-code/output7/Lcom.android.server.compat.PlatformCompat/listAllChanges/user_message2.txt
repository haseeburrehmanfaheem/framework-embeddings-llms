The method listAllChanges has the following code snippet:

This is path 1 for the API with depth 1:
public CompatibilityChangeInfo listAllChanges(){
	int v3 = this.mChanges.size();
	CompatibilityChangeInfo v4 = new CompatibilityChangeInfo(v3);
	Collection v5 = this.mChanges.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		CompatibilityChangeInfo v9 = new CompatibilityChangeInfo(v8);
		boolean v11 = v6.hasNext();
		if (v11 == 0) {
			CompatibilityChangeInfo v2 = v4;
			return v2;
		}
	}
}

and the following sink code:
['CompatibilityChangeInfo v2 = this.mCompatConfig.dumpChanges();\nreturn v2;', 'int v3 = this.mChanges.size();\nCompatibilityChangeInfo v4 = new CompatibilityChangeInfo(v3);\nreturn v2;']

The method listAllChanges has the following similar APIs:

- API Name: listUIChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; with Similarity Score: 0.962494432926178
  - Access Control Level: SYS_OR_SIG and the following code:
CompatibilityChangeInfo v3 = this.mCompatConfig.dumpChanges();
Stream v4 = Arrays.stream(v1);
return v10;

- API Name: getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig; with Similarity Score: 0.8832776546478271
  - Access Control Level: SYS_OR_SIG and the following code:
HashSet v3 = new HashSet();
Collection v7 = this.mChanges.values();
Iterator v8 = v7.iterator();
long v12 = v10.getId();
Long v13 = Long.valueOf(v12);
boolean v14 = v3.add(v13);
Compatibility$ChangeConfig v17 = new Compatibility$ChangeConfig(v3,v5);
CompatibilityChangeConfig v16 = new CompatibilityChangeConfig(v17);
return v16;

