The method isChangeEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isChangeEnabled(long p1, ApplicationInfo p2){
	boolean v4 = this.mCompatConfig.isChangeEnabled(p1, p2);
	boolean v3 = v4;
	if (p2 == 0) {
		if (v3 == 0) {
			this.mChangeReporter.reportChange(ApplicationInfo.uid, p1, );
			boolean v2 = v3;
			return v2;
		}
	}
}

and the following sink code:
['boolean v4 = this.mCompatConfig.isChangeEnabled(p1, p2);\nboolean v3 = v4;\nif (p2 == 0) {\nif (v3 == 0) {\nthis.mChangeReporter.reportChange(ApplicationInfo.uid, p1, );', 'boolean v3 = PlatformCompat.isChangeEnabledInternalNoLogging(p1, p2);\nif (p2 == 0) {\nif (v3 == 0) {\nPlatformCompat.reportChangeInternal(p1, ApplicationInfo.uid, );', 'boolean v2 = p0.isChangeEnabledInternal(p1, p2);\nreturn v2;']

The method isChangeEnabled has the following similar APIs:

- API Name: isChangeEnabledByUid(JI)Z with Similarity Score: 0.7979926466941833
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = this.mPlatformCompat.isChangeEnabledByUid(p1, p2);

- API Name: isChangeEnabledByPackageName(JLjava/lang/String;I)Z with Similarity Score: 0.797937273979187
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = this.mPlatformCompat.isChangeEnabledByPackageName(p1, p2, p3);

