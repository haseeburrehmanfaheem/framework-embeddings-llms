The method getAppConfig has the following code snippet:

This is path 1 for the API with depth 2:
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	HashSet v3 = new HashSet();
	HashSet v5 = new HashSet();
	Collection v7 = this.mChanges.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		Object v10 = v8.next();
		if (p1 != 0) {
			if (ApplicationInfo.packageName == 0) {
				Object v12 = this.mEvaluatedOverrides.get(ApplicationInfo.packageName);
				if (v12 == 0) {
					boolean v13 = CompatChange.getDisabled();
					if (v13 == 0) {
						int v14 = CompatChange.getEnableSinceTargetSdk();
						if (v14 == -1) {
							int v15 = this.mAndroidBuildClassifier.platformTargetSdk();
							int v16 = Math.min(ApplicationInfo.targetSdkVersion, v15);
							if (v16 == ApplicationInfo.targetSdkVersion) {
								int v17 = CompatChange.getEnableSinceTargetSdk();
								if ( < v17) {
									boolean v11 = ;
									if (v11 == 0) {
										long v18 = this.mChangeId;
										Long v19 = Long.valueOf(v18);
										boolean v20 = v3.add(v19);
										boolean v21 = v8.hasNext();
										if (v21 == 0) {
											CompatibilityChangeConfig v22 = new CompatibilityChangeConfig(v23);
											Compatibility$ChangeConfig v23 = new Compatibility$ChangeConfig(v3,v5);
											CompatibilityChangeConfig v2 = v22;
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	HashSet v3 = new HashSet();
	HashSet v5 = new HashSet();
	Collection v7 = this.mChanges.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	if (v9 == 0) {
		Object v10 = v8.next();
		if (p1 != 0) {
			if (ApplicationInfo.packageName == 0) {
				Object v12 = this.mEvaluatedOverrides.get(ApplicationInfo.packageName);
				if (v12 == 0) {
					boolean v13 = CompatChange.getDisabled();
					if (v13 == 0) {
						int v14 = CompatChange.getEnableSinceTargetSdk();
						if (v14 == -1) {
							int v15 = this.mAndroidBuildClassifier.platformTargetSdk();
							int v16 = Math.min(ApplicationInfo.targetSdkVersion, v15);
							if (v16 == ApplicationInfo.targetSdkVersion) {
								int v17 = CompatChange.getEnableSinceTargetSdk();
								if ( < v17) {
									boolean v11 = ;
									if (v11 == 0) {
										long v18 = this.mChangeId;
										Long v19 = Long.valueOf(v18);
										boolean v20 = v5.add(v19);
										boolean v21 = v8.hasNext();
										if (v21 == 0) {
											CompatibilityChangeConfig v22 = new CompatibilityChangeConfig(v23);
											Compatibility$ChangeConfig v23 = new Compatibility$ChangeConfig(v3,v5);
											CompatibilityChangeConfig v2 = v22;
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['HashSet v3 = new HashSet();\nCollection v7 = this.mChanges.values();\nIterator v8 = v7.iterator();\nlong v12 = v10.getId();\nLong v13 = Long.valueOf(v12);\nboolean v14 = v3.add(v13);\nCompatibility$ChangeConfig v17 = new Compatibility$ChangeConfig(v3,v5);\nCompatibilityChangeConfig v16 = new CompatibilityChangeConfig(v17);\nreturn v16;', 'HashSet v3 = new HashSet();\nCollection v7 = this.mChanges.values();\nIterator v8 = v7.iterator();\nObject v10 = v8.next();\nboolean v11 = v10.isEnabled(p1, this.mAndroidBuildClassifier);\nlong v12 = v10.getId();\nLong v13 = Long.valueOf(v12);\nboolean v14 = v3.add(v13);\nCompatibility$ChangeConfig v17 = new Compatibility$ChangeConfig(v3,v5);\nCompatibilityChangeConfig v16 = new CompatibilityChangeConfig(v17);\nreturn v16;', 'CompatibilityChangeConfig v2 = this.mCompatConfig.getAppConfig(p1);\nreturn v2;']

The method getAppConfig has the following similar APIs:

- API Name: listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; with Similarity Score: 0.8832776546478271
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = this.mChanges.size();
CompatibilityChangeInfo v4 = new CompatibilityChangeInfo(v3);
return v2;

- API Name: setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V with Similarity Score: 0.7963653802871704
  - Access Control Level: SYS_OR_SIG and the following code:
CompatibilityOverrideConfig v28 = new CompatibilityOverrideConfig(v2);
this.mCompatConfig.addPackageOverrides(v28, p2, 0);

