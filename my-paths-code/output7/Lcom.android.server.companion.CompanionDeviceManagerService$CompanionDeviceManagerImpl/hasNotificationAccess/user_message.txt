This is path 1 for the API with depth 2:
public boolean hasNotificationAccess(ComponentName p1){
	String v1 = p1.getPackageName();
	Context v6 = this.this$0.getContext();
	PackageInfo v8 = PackageUtils.getPackageInfo(v6, v3, p1);
	if (PackageInfo.reqFeatures == 0) {
		if ( >= PackageInfo.reqFeatures.length) {
			boolean v9 = "android.software.companion_device_setup".equals(FeatureInfo.name);
			if (v9 == 0) {
				if ( >= PackageInfo.reqFeatures.length) {
					boolean v10 = "android.software.companion_device_setup".equals(FeatureInfo.name);
					if (v10 == 0) {
						AssociationStoreImpl v11 = this.mAssociationStore;
						List v13 = AssociationStoreImpl.getAssociationsForUser(v3);
						AssociationStoreImpl$$ExternalSyntheticLambda0 v14 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
						List v16 = CollectionUtils.filter(v13, v14);
						List v17 = Collections.unmodifiableList(v16);
						List v12 = v17;
						boolean v18 = ArrayUtils.isEmpty(v12);
						Preconditions.checkState((v18 ^ 1), "App must have an association before calling this API");
						Context v20 = this.this$0.getContext();
						Object v21 = v20.getSystemService(NotificationManage.class);
						boolean v22 = v21.isNotificationListenerAccessGranted(p1);
						return v22;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean hasNotificationAccess(ComponentName p1){
	String v1 = p1.getPackageName();
	Context v6 = this.this$0.getContext();
	Object v7 = v6.getSystemService(NotificationManage.class);
	boolean v8 = v7.isNotificationListenerAccessGranted(p1);
	return v8;
}


This is path 3 for the API with depth 0:
public boolean hasNotificationAccess(ComponentName p1){
	String v1 = p1.getPackageName();
	p0.checkCanCallNotificationApi(v1);
	Context v3 = this.this$0.getContext();
	Object v4 = v3.getSystemService(NotificationManage.class);
	boolean v5 = v4.isNotificationListenerAccessGranted(p1);
	return v5;
}
