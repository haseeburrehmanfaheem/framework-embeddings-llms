The method hasNotificationAccess has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasNotificationAccess(ComponentName p1){
	String v1 = p1.getPackageName();
	Context v6 = this.this$0.getContext();
	PackageInfo v8 = PackageUtils.getPackageInfo(v6, v3, p1);
	if (PackageInfo.reqFeatures == 0) {
		if ( >= PackageInfo.reqFeatures.length) {
			boolean v9 = "android.software.companion_device_setup".equals(FeatureInfo.name);
			if (v9 == 0) {
				if ( >= PackageInfo.reqFeatures.length) {
					boolean v10 = "android.software.companion_device_setup".equals(FeatureInfo.name);
					if (v10 == 0) {
						AssociationStoreImpl v11 = this.mAssociationStore;
						List v13 = AssociationStoreImpl.getAssociationsForUser(v3);
						AssociationStoreImpl$$ExternalSyntheticLambda0 v14 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
						List v16 = CollectionUtils.filter(v13, v14);
						List v17 = Collections.unmodifiableList(v16);
						List v12 = v17;
						boolean v18 = ArrayUtils.isEmpty(v12);
						Preconditions.checkState((v18 ^ 1), "App must have an association before calling this API");
						Context v20 = this.this$0.getContext();
						Object v21 = v20.getSystemService(NotificationManage.class);
						boolean v22 = v21.isNotificationListenerAccessGranted(p1);
						return v22;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v7 = v6.getSystemService(NotificationManage.class);\nboolean v8 = v7.isNotificationListenerAccessGranted(p1);\nreturn v8;', 'Object v4 = v3.getSystemService(NotificationManage.class);\nboolean v5 = v4.isNotificationListenerAccessGranted(p1);\nreturn v5;', 'AssociationStoreImpl v11 = this.mAssociationStore;\nList v13 = AssociationStoreImpl.getAssociationsForUser(v3);\nAssociationStoreImpl$$ExternalSyntheticLambda0 v14 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);\nObject v21 = v20.getSystemService(NotificationManage.class);\nboolean v22 = v21.isNotificationListenerAccessGranted(p1);\nreturn v22;']

The method hasNotificationAccess has the following similar APIs:

- API Name: getAssociations(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.8625295758247375
  - Access Control Level: SYS_OR_SIG and the following code:
AssociationStoreImpl v19 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
List v22 = AssociationStoreImpl.getAssociationsForUserLocked(p1);
List v21 = v22;
AssociationStoreImpl$$ExternalSyntheticLambda0 v23 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
int v26 = CollectionUtils.size(v21);
Object v27 = v21.get();
boolean v28 = v23.test(v27);
ArrayList v29 = ArrayUtils.add(, v27);
List v31 = CollectionUtils.emptyIfNull();
List v25 = v31;
List v32 = Collections.unmodifiableList(v25);
List v20 = v32;
return v20;

- API Name: getAssociations(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.8515166640281677
  - Access Control Level: SYS_OR_SIG and the following code:
AssociationStoreImpl v13 = this.mAssociationStore;
List v15 = AssociationStoreImpl.getAssociationsForUser(p2);
AssociationStoreImpl$$ExternalSyntheticLambda0 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
List v18 = CollectionUtils.filter(v15, v16);
List v19 = Collections.unmodifiableList(v18);
List v14 = v19;
return v14;

