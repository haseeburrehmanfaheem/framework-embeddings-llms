The method getAssociations has the following code snippet:

This is path 1 for the API with depth 2:
public List getAssociations(String p1, int p2){
	Context v1 = this.this$0.getContext();
	boolean v4 = PermissionsUtils.checkCallerIsSystemOr(p2, p3);
	if (v4 == 0) {
		boolean v5 = PermissionsUtils.checkCallerCanInteractWithUserId(p1, p2);
		if (v5 != 0) {
			boolean v6 = PermissionsUtils.checkCallerCanManageCompanionDevice(p1);
			boolean v3 = v6;
			if (v3 == 0) {
				Context v7 = this.this$0.getContext();
				boolean v8 = PermissionsUtils.checkCallerCanManageCompanionDevice(v7);
				if (v8 != 0) {
					Context v9 = this.this$0.getContext();
					PackageManager v12 = p1.getPackageManager();
					PackageManager$PackageInfoFlags v13 = PackageManager$PackageInfoFlags.of(20480);
					PackageUtils$$ExternalSyntheticLambda0 v14 = new PackageUtils$$ExternalSyntheticLambda0(v12,p3,v13,p2);
					Object v16 = Binder.withCleanCallingIdentity(v14);
					PackageInfo v11 = v16;
					if (PackageInfo.reqFeatures == 0) {
						if ( >= PackageInfo.reqFeatures.length) {
							boolean v17 = "android.software.companion_device_setup".equals(FeatureInfo.name);
							if (v17 == 0) {
								if ( >= PackageInfo.reqFeatures.length) {
									boolean v18 = "android.software.companion_device_setup".equals(FeatureInfo.name);
									if (v18 == 0) {
										AssociationStoreImpl v19 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
										List v22 = AssociationStoreImpl.getAssociationsForUserLocked(p1);
										List v21 = v22;
										AssociationStoreImpl$$ExternalSyntheticLambda0 v23 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
										int v26 = CollectionUtils.size(v21);
										if ( >= v26) {
											Object v27 = v21.get();
											boolean v28 = v23.test(v27);
											if (v28 == 0) {
												ArrayList v29 = ArrayUtils.add(, v27);
												int v30 = CollectionUtils.size(v21);
												if ( >= v30) {
													List v31 = CollectionUtils.emptyIfNull();
													List v25 = v31;
													List v32 = Collections.unmodifiableList(v25);
													List v20 = v32;
													return v20;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getAssociations(String p1, int p2){
	Context v1 = this.this$0.getContext();
	boolean v4 = PermissionsUtils.checkCallerIsSystemOr(p2, p3);
	if (v4 == 0) {
		boolean v5 = PermissionsUtils.checkCallerCanInteractWithUserId(p1, p2);
		if (v5 != 0) {
			boolean v3 = 0;
			if (v3 == 0) {
				Context v6 = this.this$0.getContext();
				boolean v7 = PermissionsUtils.checkCallerCanManageCompanionDevice(v6);
				if (v7 != 0) {
					Context v8 = this.this$0.getContext();
					PackageManager v11 = p1.getPackageManager();
					PackageManager$PackageInfoFlags v12 = PackageManager$PackageInfoFlags.of(20480);
					PackageUtils$$ExternalSyntheticLambda0 v13 = new PackageUtils$$ExternalSyntheticLambda0(v11,p3,v12,p2);
					Object v15 = Binder.withCleanCallingIdentity(v13);
					PackageInfo v10 = v15;
					if (PackageInfo.reqFeatures == 0) {
						if ( >= PackageInfo.reqFeatures.length) {
							boolean v16 = "android.software.companion_device_setup".equals(FeatureInfo.name);
							if (v16 == 0) {
								if ( >= PackageInfo.reqFeatures.length) {
									boolean v17 = "android.software.companion_device_setup".equals(FeatureInfo.name);
									if (v17 == 0) {
										AssociationStoreImpl v18 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
										List v21 = AssociationStoreImpl.getAssociationsForUserLocked(p1);
										List v20 = v21;
										AssociationStoreImpl$$ExternalSyntheticLambda0 v22 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
										int v25 = CollectionUtils.size(v20);
										if ( >= v25) {
											Object v26 = v20.get();
											boolean v27 = v22.test(v26);
											if (v27 == 0) {
												ArrayList v28 = ArrayUtils.add(, v26);
												int v29 = CollectionUtils.size(v20);
												if ( >= v29) {
													List v30 = CollectionUtils.emptyIfNull();
													List v24 = v30;
													List v31 = Collections.unmodifiableList(v24);
													List v19 = v31;
													return v19;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getAssociations(String p1, int p2){
	Context v1 = this.this$0.getContext();
	boolean v4 = PermissionsUtils.checkCallerIsSystemOr(p2, p3);
	if (v4 == 0) {
		boolean v3 = 1;
		if (v3 == 0) {
			Context v5 = this.this$0.getContext();
			boolean v6 = PermissionsUtils.checkCallerCanManageCompanionDevice(v5);
			if (v6 != 0) {
				Context v7 = this.this$0.getContext();
				PackageManager v10 = p1.getPackageManager();
				PackageManager$PackageInfoFlags v11 = PackageManager$PackageInfoFlags.of(20480);
				PackageUtils$$ExternalSyntheticLambda0 v12 = new PackageUtils$$ExternalSyntheticLambda0(v10,p3,v11,p2);
				Object v14 = Binder.withCleanCallingIdentity(v12);
				PackageInfo v9 = v14;
				if (PackageInfo.reqFeatures == 0) {
					if ( >= PackageInfo.reqFeatures.length) {
						boolean v15 = "android.software.companion_device_setup".equals(FeatureInfo.name);
						if (v15 == 0) {
							if ( >= PackageInfo.reqFeatures.length) {
								boolean v16 = "android.software.companion_device_setup".equals(FeatureInfo.name);
								if (v16 == 0) {
									AssociationStoreImpl v17 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);
									List v20 = AssociationStoreImpl.getAssociationsForUserLocked(p1);
									List v19 = v20;
									AssociationStoreImpl$$ExternalSyntheticLambda0 v21 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
									int v24 = CollectionUtils.size(v19);
									if ( >= v24) {
										Object v25 = v19.get();
										boolean v26 = v21.test(v25);
										if (v26 == 0) {
											ArrayList v27 = ArrayUtils.add(, v25);
											int v28 = CollectionUtils.size(v19);
											if ( >= v28) {
												List v29 = CollectionUtils.emptyIfNull();
												List v23 = v29;
												List v30 = Collections.unmodifiableList(v23);
												List v18 = v30;
												return v18;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['AssociationStoreImpl v19 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);\nList v22 = AssociationStoreImpl.getAssociationsForUserLocked(p1);\nList v21 = v22;\nAssociationStoreImpl$$ExternalSyntheticLambda0 v23 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);\nint v26 = CollectionUtils.size(v21);\nObject v27 = v21.get();\nboolean v28 = v23.test(v27);\nArrayList v29 = ArrayUtils.add(, v27);\nList v31 = CollectionUtils.emptyIfNull();\nList v25 = v31;\nList v32 = Collections.unmodifiableList(v25);\nList v20 = v32;\nreturn v20;', 'AssociationStoreImpl v13 = this.mAssociationStore;\nList v15 = AssociationStoreImpl.getAssociationsForUser(p2);\nAssociationStoreImpl$$ExternalSyntheticLambda0 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);\nList v18 = CollectionUtils.filter(v15, v16);\nList v19 = Collections.unmodifiableList(v18);\nList v14 = v19;\nreturn v14;', 'AssociationStoreImpl v7 = CompanionDeviceManagerService.-$$Nest$fgetmAssociationStore(this.this$0);\nList v8 = v7.getAssociationsForPackage(p2, p1);\nreturn v8;']

The method getAssociations has the following similar APIs:

- API Name: isDeviceAssociatedForWifiConnection(Ljava/lang/String;Ljava/lang/String;I)Z with Similarity Score: 0.925523579120636
  - Access Control Level: SYS_OR_SIG and the following code:
List v8 = AssociationStoreImpl.getAssociationsForUser(p3);
AssociationStoreImpl$$ExternalSyntheticLambda0 v9 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);

- API Name: isDeviceAssociatedForWifiConnection(Ljava/lang/String;Ljava/lang/String;I)Z with Similarity Score: 0.9226233959197998
  - Access Control Level: SYS_OR_SIG and the following code:
List v9 = AssociationStoreImpl.getAssociationsForUserLocked(p1);
AssociationStoreImpl$$ExternalSyntheticLambda0 v10 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);

