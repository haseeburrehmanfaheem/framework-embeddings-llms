The method canPairWithoutPrompt has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canPairWithoutPrompt(String p1, String p2, int p3){
	AssociationStoreImpl v1 = this.mAssociationStore;
	MacAddress v4 = MacAddress.fromString(p3);
	Object v5 = this.mAddressMap.get(v4);
	if (v5 != 0) {
		ArrayList v6 = new ArrayList(v7);
		int v7 = v5.size();
		Iterator v9 = v5.iterator();
		boolean v10 = v9.hasNext();
		if (v10 == 0) {
			Object v11 = v9.next();
			Object v12 = this.mIdMap.get(v11);
			boolean v13 = v6.add(v12);
			boolean v14 = v9.hasNext();
			if (v14 == 0) {
				List v15 = Collections.unmodifiableList(v6);
				List v3 = v15;
				AssociationStoreImpl$$ExternalSyntheticLambda2 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);
				boolean v19 = CollectionUtils.isEmpty(v3);
				if (v19 == 0) {
					int v20 = v3.size();
					if ( >= v20) {
						Object v21 = v3.get();
						boolean v22 = v16.test(v21);
						if (v22 == 0) {
							int v23 = v3.size();
							if ( >= v23) {
								Object v24 = v3.get();
								boolean v25 = v16.test(v24);
								if (v25 == 0) {
									Object v18 = v24;
									AssociationInfo v2 = v18;
									if (v2 != 0) {
										long v26 = System.currentTimeMillis();
										long v27 = v2.getTimeApprovedMs();
										if (((v26 - v27) < 600000) >= 0) {
											return ;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean canPairWithoutPrompt(String p1, String p2, int p3){
	AssociationStoreImpl v1 = this.mAssociationStore;
	MacAddress v4 = MacAddress.fromString(p3);
	Object v5 = this.mAddressMap.get(v4);
	if (v5 != 0) {
		ArrayList v6 = new ArrayList(v7);
		int v7 = v5.size();
		Iterator v9 = v5.iterator();
		boolean v10 = v9.hasNext();
		if (v10 == 0) {
			Object v11 = v9.next();
			Object v12 = this.mIdMap.get(v11);
			boolean v13 = v6.add(v12);
			boolean v14 = v9.hasNext();
			if (v14 == 0) {
				List v15 = Collections.unmodifiableList(v6);
				List v3 = v15;
				AssociationStoreImpl$$ExternalSyntheticLambda2 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);
				boolean v19 = CollectionUtils.isEmpty(v3);
				if (v19 == 0) {
					int v20 = v3.size();
					if ( >= v20) {
						Object v21 = v3.get();
						boolean v22 = v16.test(v21);
						if (v22 == 0) {
							int v23 = v3.size();
							if ( >= v23) {
								Object v18 = 0;
								AssociationInfo v2 = v18;
								if (v2 != 0) {
									long v24 = System.currentTimeMillis();
									long v25 = v2.getTimeApprovedMs();
									if (((v24 - v25) < 600000) >= 0) {
										return ;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean canPairWithoutPrompt(String p1, String p2, int p3){
	AssociationStoreImpl v1 = this.mAssociationStore;
	MacAddress v4 = MacAddress.fromString(p3);
	Object v5 = this.mAddressMap.get(v4);
	if (v5 != 0) {
		ArrayList v6 = new ArrayList(v7);
		int v7 = v5.size();
		Iterator v9 = v5.iterator();
		boolean v10 = v9.hasNext();
		if (v10 == 0) {
			Object v11 = v9.next();
			Object v12 = this.mIdMap.get(v11);
			boolean v13 = v6.add(v12);
			boolean v14 = v9.hasNext();
			if (v14 == 0) {
				List v15 = Collections.unmodifiableList(v6);
				List v3 = v15;
				AssociationStoreImpl$$ExternalSyntheticLambda2 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);
				boolean v19 = CollectionUtils.isEmpty(v3);
				if (v19 == 0) {
					int v20 = v3.size();
					if ( >= v20) {
						Object v21 = v3.get();
						boolean v22 = v16.test(v21);
						if (v22 == 0) {
							int v23 = v3.size();
							if ( >= v23) {
								Object v24 = v3.get();
								boolean v25 = v16.test(v24);
								if (v25 == 0) {
									Object v18 = v24;
									AssociationInfo v2 = v18;
									if (v2 != 0) {
										return 0;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['MacAddress v4 = MacAddress.fromString(p3);\nObject v5 = this.mAddressMap.get(v4);\nAssociationStoreImpl$$ExternalSyntheticLambda2 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);', 'List v3 = AssociationStoreImpl.getAssociationsByAddress(p2);\nAssociationStoreImpl$$ExternalSyntheticLambda2 v4 = new AssociationStoreImpl$$ExternalSyntheticLambda2(p3,p1);\nObject v6 = CollectionUtils.find(v3, v4);', 'AssociationInfo v2 = v1.getAssociationsForPackageWithAddress(p3, p1, p2);']

The method canPairWithoutPrompt has the following similar APIs:

- API Name: isDeviceAssociatedForWifiConnection(Ljava/lang/String;Ljava/lang/String;I)Z with Similarity Score: 0.8904051780700684
  - Access Control Level: SYS_OR_SIG and the following code:
List v8 = AssociationStoreImpl.getAssociationsForUser(p3);
AssociationStoreImpl$$ExternalSyntheticLambda0 v9 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);

- API Name: getAssociations(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.8702802658081055
  - Access Control Level: SYS_OR_SIG and the following code:
AssociationStoreImpl v13 = this.mAssociationStore;
List v15 = AssociationStoreImpl.getAssociationsForUser(p2);
AssociationStoreImpl$$ExternalSyntheticLambda0 v16 = new AssociationStoreImpl$$ExternalSyntheticLambda0(p1);
List v18 = CollectionUtils.filter(v15, v16);
List v19 = Collections.unmodifiableList(v18);
List v14 = v19;
return v14;

