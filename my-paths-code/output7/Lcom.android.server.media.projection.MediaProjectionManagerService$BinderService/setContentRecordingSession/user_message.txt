This is path 1 for the API with depth 2:
public void setContentRecordingSession(ContentRecordingSession p1, IMediaProjection p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	IBinder v4 = p2.asBinder();
	boolean v6 = this.this$0.isValidMediaProjection(v4);
	boolean v5 = v6;
	boolean v3 = v5;
	if (v3 == 0) {
		Object v7 = LocalServices.getService(WindowManagerInterna.class);
		boolean v8 = v7.setContentRecordingSession(p1);
		if (v8 != 0) {
			MediaProjectionManagerService$MediaProjection v9 = MediaProjectionManagerService.-$$Nest$fgetmProjectionGrant(this.this$0);
			if (v9 == 0) {
				MediaProjectionManagerService$MediaProjection v10 = MediaProjectionManagerService.-$$Nest$fgetmProjectionGrant(this.this$0);
				Object v12 = this.mLock;
				IBinder v13 = IMediaProjection$Stub;
				boolean v15 = this.this$0.isValidMediaProjection(v13);
				boolean v14 = v15;
				if (v14 != 0) {
					int v19 = Binder.getCallingUid();
					int v22 = Binder.getCallingPid();
					Binder.restoreCallingIdentity(v1);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setContentRecordingSession(ContentRecordingSession p1, IMediaProjection p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	IBinder v4 = p2.asBinder();
	boolean v5 = MediaProjectionManagerService.-$$Nest$misValidMediaProjection(this.this$0, v4);
	boolean v3 = v5;
	if (v3 == 0) {
		Object v7 = this.sLocalServiceObjects.get(WindowManagerInterna.class);
		Object v6 = v7;
		boolean v8 = v6.setContentRecordingSession(p1);
		if (v8 != 0) {
			MediaProjectionManagerService$MediaProjection v9 = this.mProjectionGrant;
			if (v9 == 0) {
				MediaProjectionManagerService$MediaProjection v10 = this.mProjectionGrant;
				Object v12 = MediaProjectionManagerService.-$$Nest$fgetmLock(this.this$0);
				IBinder v13 = MediaProjectionManagerService$MediaProjection.asBinder();
				boolean v14 = MediaProjectionManagerService.-$$Nest$misValidMediaProjection(this.this$0, v13);
				if (v14 != 0) {
					int v18 = Binder.getCallingUid();
					int v21 = Binder.getCallingPid();
					Binder.restoreCallingIdentity(v1);
					return;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setContentRecordingSession(ContentRecordingSession p1, IMediaProjection p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = MediaProjectionManagerService.-$$Nest$fgetmLock(this.this$0);
	boolean v3 = p0.isValidMediaProjection(p2);
	if (v3 == 0) {
		Object v4 = LocalServices.getService(WindowManagerInterna.class);
		boolean v5 = v4.setContentRecordingSession(p1);
		if (v5 != 0) {
			MediaProjectionManagerService$MediaProjection v6 = MediaProjectionManagerService.-$$Nest$fgetmProjectionGrant(this.this$0);
			if (v6 == 0) {
				MediaProjectionManagerService$MediaProjection v7 = MediaProjectionManagerService.-$$Nest$fgetmProjectionGrant(this.this$0);
				v7.stop();
				Binder.restoreCallingIdentity(v1);
				return;
			}
		}
	}
}
