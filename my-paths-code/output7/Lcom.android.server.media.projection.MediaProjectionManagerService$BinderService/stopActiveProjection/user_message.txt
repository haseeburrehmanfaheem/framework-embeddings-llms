This is path 1 for the API with depth 2:
public void stopActiveProjection(){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionManagerService$MediaProjection v4 = this.mProjectionGrant;
		if (v4 == 0) {
			MediaProjectionManagerService$MediaProjection v5 = this.mProjectionGrant;
			Object v7 = this.mLock;
			IBinder v8 = IMediaProjection$Stub;
			boolean v10 = this.this$0.isValidMediaProjection(v8);
			boolean v9 = v10;
			if (v9 != 0) {
				int v14 = Binder.getCallingUid();
				int v17 = Binder.getCallingPid();
				Binder.restoreCallingIdentity(v3);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void stopActiveProjection(){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionManagerService$MediaProjection v4 = this.mProjectionGrant;
		if (v4 == 0) {
			MediaProjectionManagerService$MediaProjection v5 = this.mProjectionGrant;
			Object v7 = MediaProjectionManagerService.-$$Nest$fgetmLock(this.this$0);
			IBinder v8 = MediaProjectionManagerService$MediaProjection.asBinder();
			boolean v9 = MediaProjectionManagerService.-$$Nest$misValidMediaProjection(this.this$0, v8);
			if (v9 != 0) {
				int v13 = Binder.getCallingUid();
				int v16 = Binder.getCallingPid();
				Binder.restoreCallingIdentity(v3);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void stopActiveProjection(){
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		MediaProjectionManagerService$MediaProjection v4 = MediaProjectionManagerService.-$$Nest$fgetmProjectionGrant(this.this$0);
		if (v4 == 0) {
			MediaProjectionManagerService$MediaProjection v5 = MediaProjectionManagerService.-$$Nest$fgetmProjectionGrant(this.this$0);
			v5.stop();
			Binder.restoreCallingIdentity(v3);
			return;
		}
	}
}
