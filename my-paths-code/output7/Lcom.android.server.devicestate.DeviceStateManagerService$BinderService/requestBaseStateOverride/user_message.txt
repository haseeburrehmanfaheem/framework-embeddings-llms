This is path 1 for the API with depth 2:
public void requestBaseStateOverride(IBinder p1, int p2, int p3){
	if (p1 == 0) {
		long v4 = Binder.clearCallingIdentity();
		Optional v7 = DeviceStateManagerService.getStateLocked(p2);
		boolean v8 = v7.isPresent();
		if (v8 == 0) {
			Object v9 = this.mProcessRecords.get(p4);
			if (v9 == 0) {
				boolean v10 = this.mOverrideRequestController.hasRequest(p5, 1);
				if (v10 != 0) {
					OverrideRequest v11 = new OverrideRequest(p5,p4,p2,p3,1);
					this.mOverrideRequestController.addBaseStateRequest(v11);
					Binder.restoreCallingIdentity(v4);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void requestBaseStateOverride(IBinder p1, int p2, int p3){
	if (p1 == 0) {
		long v4 = Binder.clearCallingIdentity();
		this.this$0.requestBaseStateOverrideInternal(p2, p3, v1, p1);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}


This is path 3 for the API with depth 0:
public void requestBaseStateOverride(IBinder p1, int p2, int p3){
	if (p1 == 0) {
		long v4 = Binder.clearCallingIdentity();
		DeviceStateManagerService.-$$Nest$mrequestBaseStateOverrideInternal(this.this$0, p2, p3, v1, p1);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}
