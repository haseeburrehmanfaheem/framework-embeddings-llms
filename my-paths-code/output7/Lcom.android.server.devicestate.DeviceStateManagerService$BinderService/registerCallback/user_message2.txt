The method registerCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void registerCallback(IDeviceStateManagerCallback p1){
	if (p1 == 0) {
		int v1 = Binder.getCallingPid();
		long v2 = Binder.clearCallingIdentity();
		boolean v5 = this.mProcessRecords.contains(p2);
		if (v5 != 0) {
			DeviceStateManagerService$ProcessRecord v6 = new DeviceStateManagerService$ProcessRecord(p3,p2,v7,this.mHandler);
			DeviceStateManagerService$$ExternalSyntheticLambda2 v7 = new DeviceStateManagerService$$ExternalSyntheticLambda2(DeviceStateManagerService);
			IBinder v10 = p3.asBinder();
			v10.linkToDeath(v6, 0);
			this.mProcessRecords.put(p2, v6);
			boolean v13 = this.mCommittedState.isPresent();
			if (v13 == 0) {
				DeviceStateInfo v14 = DeviceStateManagerService.getDeviceStateInfoLocked();
				if ( == 0) {
					v6.notifyDeviceStateInfoAsync();
					Binder.restoreCallingIdentity(v2);
					return;
				}
			}
		}
	}
}

and the following sink code:
['DeviceStateManagerService$ProcessRecord v6 = new DeviceStateManagerService$ProcessRecord(p3,p2,v7,this.mHandler);\nIBinder v10 = p3.asBinder();\nv10.linkToDeath(v6, 0);\nthis.mProcessRecords.put(p2, v6);\nboolean v13 = this.mCommittedState.isPresent();\nif (v13 == 0) {\nDeviceStateInfo v14 = DeviceStateManagerService.getDeviceStateInfoLocked();\nif ( == 0) {\nv6.notifyDeviceStateInfoAsync();', 'this.this$0.registerProcess(v1, p1);', 'DeviceStateManagerService.-$$Nest$mregisterProcess(this.this$0, v1, p1);']

The method registerCallback has the following similar APIs:

- API Name: setDeviceStatus(Landroid/media/midi/IMidiDeviceServer;Landroid/media/midi/MidiDeviceStatus;)V with Similarity Score: 0.7136029005050659
  - Access Control Level: SYS_OR_SIG and the following code:
v2.setDeviceStatus(p2);
p0.notifyDeviceStatusChanged(v2, p2);

- API Name: unregisterDevicePresenceListenerService(Ljava/lang/String;Ljava/lang/String;I)V with Similarity Score: 0.7073119878768921
  - Access Control Level: SYS_OR_SIG and the following code:
p0.registerDevicePresenceListenerActive(p2, p1, 0);

