The method isAudioPlaybackCaptureAllowed has the following code snippet:

This is path 1 for the API with depth 2:
public [Z isAudioPlaybackCaptureAllowed(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v4 = Thread.holdsLock(this.mLock);
	if (v4 == 0) {
		Object v5 = this.sSnapshot.get();
		int v6 = this.sSnapshotPendingVersion.get();
		if (v5 == 0) {
			int v7 = v5.getVersion();
			if (v7 != v6) {
				Object v8 = this.sSnapshot.get();
				int v9 = this.sSnapshotPendingVersion.get();
				if (v8 == 0) {
					int v10 = v8.getVersion();
					if (v10 != v9) {
						int v11 = this.sSnapshotPendingVersion.get();
						long v13 = SystemClock.currentTimeMicro();
						if (v8 != 0) {
							PackageManagerService$Snapshot v14 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v16 = new ComputerEngine(v14,v11);
							long v18 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v13, v18, );
								Computer v12 = v16;
								this.sSnapshot.set(v12);
								Computer v21 = v12.use();
								Computer v3 = v21;
								[Z v22 = new [Z(p1.length);
								if ( < 0) {
									ApplicationInfo v23 = v3.getApplicationInfo(p1[], 0, v2);
									if (v23 == 0) {
										boolean v24 = v23.isAudioPlaybackCaptureAllowed();
										if (v24 == 0) {
											if ( < 0) {
												return v22;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public [Z isAudioPlaybackCaptureAllowed(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v4 = Thread.holdsLock(this.mLock);
	if (v4 == 0) {
		Object v5 = this.sSnapshot.get();
		int v6 = this.sSnapshotPendingVersion.get();
		if (v5 == 0) {
			int v7 = v5.getVersion();
			if (v7 != v6) {
				Object v8 = this.sSnapshot.get();
				int v9 = this.sSnapshotPendingVersion.get();
				if (v8 == 0) {
					int v10 = v8.getVersion();
					if (v10 != v9) {
						int v11 = this.sSnapshotPendingVersion.get();
						long v13 = SystemClock.currentTimeMicro();
						if (v8 != 0) {
							int v14 = v8.getUsed();
							PackageManagerService$Snapshot v15 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v17 = new ComputerEngine(v15,v11);
							long v19 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v13, v19, );
								Computer v12 = v17;
								this.sSnapshot.set(v12);
								Computer v22 = v12.use();
								Computer v3 = v22;
								[Z v23 = new [Z(p1.length);
								if ( < 0) {
									ApplicationInfo v24 = v3.getApplicationInfo(p1[], 0, v2);
									if (v24 == 0) {
										boolean v25 = v24.isAudioPlaybackCaptureAllowed();
										if (v25 == 0) {
											if ( < 0) {
												return v23;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v1 = Binder.getCallingUid();\nint v2 = UserHandle.getUserId(v1);\nComputer v3 = this.mPm.snapshotComputer();\n[Z v4 = new [Z(p1.length);\nApplicationInfo v5 = v3.getApplicationInfo(p1[], 0, v2);\nboolean v6 = v5.isAudioPlaybackCaptureAllowed();', 'Object v5 = this.sSnapshot.get();\nint v6 = this.sSnapshotPendingVersion.get();\nPackageManagerService$Snapshot v14 = new PackageManagerService$Snapshot(PackageManagerService,2);\nComputerEngine v16 = new ComputerEngine(v14,v11);', 'this.mSnapshotStatistics.rebuild(v13, v18, );\nComputer v12 = v16;\nthis.sSnapshot.set(v12);\nComputer v21 = v12.use();']

The method isAudioPlaybackCaptureAllowed has the following similar APIs:

- API Name: getAllPackages()[Ljava/lang/String; with Similarity Score: 0.9471617937088013
  - Access Control Level: NONE and the following code:
Object v3 = this.sSnapshot.get();
int v4 = this.sSnapshotPendingVersion.get();
if (v6 != 0) {
PackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);
ComputerEngine v14 = new ComputerEngine(v12,v9);
List v20 = v1.getAllPackages();
String v21 = new String(0);
Object v22 = v20.toArray(v21);
return v22;

- API Name: getVersionCodeForPackage(Ljava/lang/String;)J with Similarity Score: 0.8559301495552063
  - Access Control Level: NONE and the following code:
int v1 = Binder.getCallingUid();
int v2 = UserHandle.getUserId(v1);
Computer v3 = this.mPm.snapshotComputer();
PackageInfo v4 = v3.getPackageInfo(p1, 0, v2);
return v4.getLongVersionCode();

