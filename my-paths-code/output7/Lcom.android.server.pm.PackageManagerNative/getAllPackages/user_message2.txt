The method getAllPackages has the following code snippet:

This is path 1 for the API with depth 2:
public String getAllPackages(){
	boolean v2 = Thread.holdsLock(this.mLock);
	if (v2 == 0) {
		Object v3 = this.sSnapshot.get();
		int v4 = this.sSnapshotPendingVersion.get();
		if (v3 == 0) {
			int v5 = v3.getVersion();
			if (v5 != v4) {
				Object v6 = this.sSnapshot.get();
				int v7 = this.sSnapshotPendingVersion.get();
				if (v6 == 0) {
					int v8 = v6.getVersion();
					if (v8 != v7) {
						int v9 = this.sSnapshotPendingVersion.get();
						long v11 = SystemClock.currentTimeMicro();
						if (v6 != 0) {
							PackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v14 = new ComputerEngine(v12,v9);
							long v16 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v11, v16, );
								Computer v10 = v14;
								this.sSnapshot.set(v10);
								Computer v19 = v10.use();
								Computer v1 = v19;
								List v20 = v1.getAllPackages();
								String v21 = new String(0);
								Object v22 = v20.toArray(v21);
								return v22;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public String getAllPackages(){
	boolean v2 = Thread.holdsLock(this.mLock);
	if (v2 == 0) {
		Object v3 = this.sSnapshot.get();
		int v4 = this.sSnapshotPendingVersion.get();
		if (v3 == 0) {
			int v5 = v3.getVersion();
			if (v5 != v4) {
				Object v6 = this.sSnapshot.get();
				int v7 = this.sSnapshotPendingVersion.get();
				if (v6 == 0) {
					int v8 = v6.getVersion();
					if (v8 != v7) {
						int v9 = this.sSnapshotPendingVersion.get();
						long v11 = SystemClock.currentTimeMicro();
						if (v6 != 0) {
							int v12 = v6.getUsed();
							PackageManagerService$Snapshot v13 = new PackageManagerService$Snapshot(PackageManagerService,2);
							ComputerEngine v15 = new ComputerEngine(v13,v9);
							long v17 = SystemClock.currentTimeMicro();
							if (this.mSnapshotStatistics == 0) {
								this.mSnapshotStatistics.rebuild(v11, v17, );
								Computer v10 = v15;
								this.sSnapshot.set(v10);
								Computer v20 = v10.use();
								Computer v1 = v20;
								List v21 = v1.getAllPackages();
								String v22 = new String(0);
								Object v23 = v21.toArray(v22);
								return v23;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.sSnapshot.get();\nint v4 = this.sSnapshotPendingVersion.get();\nif (v6 != 0) {\nPackageManagerService$Snapshot v12 = new PackageManagerService$Snapshot(PackageManagerService,2);\nComputerEngine v14 = new ComputerEngine(v12,v9);\nList v20 = v1.getAllPackages();\nString v21 = new String(0);\nObject v22 = v20.toArray(v21);\nreturn v22;', 'Object v3 = this.sSnapshot.get();\nint v4 = this.sSnapshotPendingVersion.get();\nComputer v10 = PackageManagerService.rebuildSnapshot(v6, v9);\nthis.sSnapshot.set(v10);\nComputer v12 = v10.use();\nList v13 = v1.getAllPackages();\nString v14 = new String(0);\nObject v15 = v13.toArray(v14);\nreturn v15;', 'Computer v1 = this.mPm.snapshotComputer();\nList v2 = v1.getAllPackages();\nString v3 = new String(0);\nObject v4 = v2.toArray(v3);\nreturn v4;']

The method getAllPackages has the following similar APIs:

- API Name: isAudioPlaybackCaptureAllowed([Ljava/lang/String;)[Z with Similarity Score: 0.9471617937088013
  - Access Control Level: NONE and the following code:
Object v5 = this.sSnapshot.get();
int v6 = this.sSnapshotPendingVersion.get();
PackageManagerService$Snapshot v14 = new PackageManagerService$Snapshot(PackageManagerService,2);
ComputerEngine v16 = new ComputerEngine(v14,v11);

- API Name: prepare()V with Similarity Score: 0.846684992313385
  - Access Control Level: NONE and the following code:
Computer v12 = PackageManagerService.rebuildSnapshot(v8, v11);
ArrayMap v15 = v3.getPackageStates();
Collection v16 = v15.values();

