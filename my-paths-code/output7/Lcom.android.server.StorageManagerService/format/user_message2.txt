The method format has the following code snippet:

This is path 1 for the API with depth 2:
public void format(String p1){
	Object v3 = this.mVolumes.get(p1);
	if (v3 == 0) {
		VolumeInfo v2 = v3;
		this.mVold.format(VolumeInfo.id, "auto");
		boolean v5 = TextUtils.isEmpty(VolumeInfo.fsUuid);
		if (v5 != 0) {
			Object v8 = Objects.requireNonNull(VolumeInfo.fsUuid);
			Object v9 = this.mRecords.remove(VolumeInfo.fsUuid);
			if (v9 == 0) {
				boolean v10 = TextUtils.isEmpty(VolumeRecord.partGuid);
				if (v10 != 0) {
					Message v11 = this.mHandler.obtainMessage(9, v9);
					v11.sendToTarget();
					this.mCallbacks.notifyVolumeForgotten(p1);
					boolean v15 = Objects.equals(this.mPrimaryStorageUuid, VolumeInfo.fsUuid);
					if (v15 == 0) {
						boolean v17 = SystemProperties.getBoolean("ro.vold.primary_physical", 0);
						if (v17 == 0) {
							String v16 = StorageManager.UUID_PRIVATE_INTERNAL;
							this.mPrimaryStorageUuid = v16;
							Message v18 = this.mHandler.obtainMessage(10);
							v18.sendToTarget();
							FileOutputStream v21 = this.mSettingsFile.startWrite();
							TypedXmlSerializer v22 = Xml.resolveSerializer(v21);
							if ( == 0) {
								this.mSettingsFile.failWrite();
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void format(String p1){
	Object v3 = this.mVolumes.get(p1);
	if (v3 == 0) {
		VolumeInfo v2 = v3;
		this.mVold.format(VolumeInfo.id, "auto");
		boolean v5 = TextUtils.isEmpty(VolumeInfo.fsUuid);
		if (v5 != 0) {
			Object v8 = Objects.requireNonNull(VolumeInfo.fsUuid);
			Object v9 = this.mRecords.remove(VolumeInfo.fsUuid);
			if (v9 == 0) {
				boolean v10 = TextUtils.isEmpty(VolumeRecord.partGuid);
				if (v10 != 0) {
					Message v11 = this.mHandler.obtainMessage(9, v9);
					v11.sendToTarget();
					this.mCallbacks.notifyVolumeForgotten(p1);
					boolean v15 = Objects.equals(this.mPrimaryStorageUuid, VolumeInfo.fsUuid);
					if (v15 == 0) {
						boolean v17 = SystemProperties.getBoolean("ro.vold.primary_physical", 0);
						if (v17 == 0) {
							String v16 = "primary_physical";
							this.mPrimaryStorageUuid = v16;
							Message v18 = this.mHandler.obtainMessage(10);
							v18.sendToTarget();
							FileOutputStream v21 = this.mSettingsFile.startWrite();
							TypedXmlSerializer v22 = Xml.resolveSerializer(v21);
							if ( == 0) {
								this.mSettingsFile.failWrite();
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void format(String p1){
	Object v3 = this.mVolumes.get(p1);
	if (v3 == 0) {
		VolumeInfo v2 = v3;
		this.mVold.format(VolumeInfo.id, "auto");
		boolean v5 = TextUtils.isEmpty(VolumeInfo.fsUuid);
		if (v5 != 0) {
			Object v8 = Objects.requireNonNull(VolumeInfo.fsUuid);
			Object v9 = this.mRecords.remove(VolumeInfo.fsUuid);
			if (v9 == 0) {
				boolean v10 = TextUtils.isEmpty(VolumeRecord.partGuid);
				if (v10 != 0) {
					Message v11 = this.mHandler.obtainMessage(9, v9);
					v11.sendToTarget();
					this.mCallbacks.notifyVolumeForgotten(p1);
					boolean v15 = Objects.equals(this.mPrimaryStorageUuid, VolumeInfo.fsUuid);
					if (v15 == 0) {
						boolean v17 = SystemProperties.getBoolean("ro.vold.primary_physical", 0);
						if (v17 == 0) {
							String v16 = StorageManager.UUID_PRIVATE_INTERNAL;
							this.mPrimaryStorageUuid = v16;
							Message v18 = this.mHandler.obtainMessage(10);
							v18.sendToTarget();
							FileOutputStream v21 = this.mSettingsFile.startWrite();
							TypedXmlSerializer v22 = Xml.resolveSerializer(v21);
							if ( == 0) {
								this.mSettingsFile.failWrite();
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mVolumes.get(p1);\nVolumeInfo v2 = v3;\nthis.mVold.format(VolumeInfo.id, "auto");']

The method format has the following similar APIs:

- API Name: mount(Ljava/lang/String;)V with Similarity Score: 0.7854076027870178
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mVolumes.get(p1);
VolumeInfo v2 = v3;
Object v5 = this.mContext.getSystemService(UserManage.class);

- API Name: setPrimaryStorageUuid(Ljava/lang/String;Landroid/content/pm/IPackageMoveObserver;)V with Similarity Score: 0.7289457321166992
  - Access Control Level: SYS_OR_SIG and the following code:
VolumeInfo v32 = v29.findVolumeByUuid(p1);
StringBuilder v33 = new StringBuilder();
String v35 = v32.getId();
String v36 = v35.replace("private", "emulated");
StringBuilder v37 = v33.append(v36);
StringBuilder v38 = v33.append(";");
StringBuilder v39 = v33.append(this.mCurrentUserId);
String v40 = v33.toString();
VolumeInfo v41 = v29.findVolumeById(v40);

