The method getAllocatableBytes has the following code snippet:

This is path 1 for the API with depth 2:
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	Object v4 = this.mContext.getSystemService(AppOpsManage.class);
	long v5 = Binder.clearCallingIdentity();
	boolean v6 = v4.isOperationActive(26, v1, p3);
	if (v6 == 0) {
		Binder.restoreCallingIdentity(v5);
		int v2 = ;
		Object v15 = this.mContext.getSystemService(StorageManage.class);
		Object v16 = this.mContext.getSystemService(StorageStatsManage.class);
		long v17 = Binder.clearCallingIdentity();
		File v18 = v15.findPathForUuid(p1);
		if ((v2 & 16) != 0) {
			long v19 = v18.getUsableSpace();
			long v20 = v15.getStorageLowBytes(v18);
			long v21 = v15.getStorageFullBytes(v18);
			if ((v2 & 8) != 0) {
				UUID v23 = StorageManager.convert(p1);
				String v25 = StorageManager.convert(v23);
				String v26 = this.mContext.getOpPackageName();
				boolean v27 = this.mService.isQuotaSupported(v25, v26);
				boolean v24 = v27;
				boolean v22 = v24;
				if (v22 == 0) {
					UUID v29 = StorageManager.convert(p1);
					String v31 = StorageManager.convert(v29);
					String v32 = this.mContext.getOpPackageName();
					long v33 = this.mService.getCacheBytes(v31, v32);
					long v30 = v33;
					long v28 = v30;
					long v34 = v15.getStorageCacheBytes(v18, v2);
					long v35 = Math.max(0, (v28 - v34));
					if ((v2 & 1) == 0) {
						long v36 = Math.max(0, (( + ) - ));
						Binder.restoreCallingIdentity(v17);
						return v36;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public long getAllocatableBytes(String p1, int p2, String p3){
	int v1 = Binder.getCallingUid();
	Object v4 = this.mContext.getSystemService(AppOpsManage.class);
	long v5 = Binder.clearCallingIdentity();
	boolean v6 = v4.isOperationActive(26, v1, p3);
	if (v6 == 0) {
		Binder.restoreCallingIdentity(v5);
		int v2 = ;
		Object v15 = this.mContext.getSystemService(StorageManage.class);
		Object v16 = this.mContext.getSystemService(StorageStatsManage.class);
		long v17 = Binder.clearCallingIdentity();
		File v18 = v15.findPathForUuid(p1);
		if ((v2 & 16) != 0) {
			long v19 = v18.getUsableSpace();
			long v20 = v15.getStorageLowBytes(v18);
			long v21 = v15.getStorageFullBytes(v18);
			if ((v2 & 8) != 0) {
				UUID v23 = StorageManager.convert(p1);
				String v25 = StorageManager.convert(v23);
				String v26 = this.mContext.getOpPackageName();
				boolean v27 = this.mService.isQuotaSupported(v25, v26);
				boolean v24 = v27;
				boolean v22 = v24;
				if (v22 == 0) {
					UUID v29 = StorageManager.convert(p1);
					String v31 = StorageManager.convert(v29);
					String v32 = this.mContext.getOpPackageName();
					long v33 = this.mService.getCacheBytes(v31, v32);
					long v30 = v33;
					long v28 = v30;
					long v34 = v15.getStorageCacheBytes(v18, v2);
					long v35 = Math.max(0, (v28 - v34));
					if ((v2 & 1) == 0) {
						long v36 = Math.max(0, (( + ) - ));
						Binder.restoreCallingIdentity(v17);
						return v36;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v15 = this.mContext.getSystemService(StorageManage.class);\nFile v18 = v15.findPathForUuid(p1);\nlong v19 = v18.getUsableSpace();\nlong v20 = v15.getStorageLowBytes(v18);\nlong v21 = v15.getStorageFullBytes(v18);\nreturn Math.max(0, (( + ) - ));', 'UUID v23 = StorageManager.convert(p1);\nboolean v24 = v4.isQuotaSupported(v25, v26);\nlong v27 = StorageStatsManager.getCacheBytes(v26);\nlong v28 = v15.getStorageCacheBytes(v18, v2);\nlong v29 = Math.max(0, (v25 - v28));', 'int v2 = p0.adjustAllocateFlags(p2, v1, p3);\nObject v3 = this.mContext.getSystemService(StorageManage.class);\nFile v6 = v3.findPathForUuid(p1);\nlong v7 = v6.getUsableSpace();\nreturn Math.max(0, (( + ) - ));']

The method getAllocatableBytes has the following similar APIs:

- API Name: allocateBytes(Ljava/lang/String;JILjava/lang/String;)V with Similarity Score: 0.8892459869384766
  - Access Control Level: SYS_OR_SIG and the following code:
int v17 = StorageManagerService.adjustAllocateFlags((v2 | 8), v16, p4);
File v21 = v18.findPathForUuid(p1);
long v22 = v21.getUsableSpace();

- API Name: getFreeBytes(Ljava/lang/String;Ljava/lang/String;)J with Similarity Score: 0.8378491401672363
  - Access Control Level: NONE and the following code:
File v2 = this.mStorage.findPathForUuid(p1);
boolean v3 = p0.isQuotaSupported(p1, "android");
long v4 = p0.getCacheBytes(p1, "android");
long v5 = this.mStorage.getStorageCacheBytes(v2, 0);
long v6 = Math.max(0, (v4 - v5));
long v7 = v2.getUsableSpace();
return (v7 + v6);

