The method disableAppDataIsolation has the following code snippet:

This is path 1 for the API with depth 0:
public void disableAppDataIsolation(String p1, int p2, int p3){
	String v2 = this.mPmInternal.getSharedUserPackagesForPackage(p1, p3);
	int v3 = this.mPmInternal.getPackageUid(p1, 0, p3);
	if (v2.length == 0) {
		this.mVold.unmountAppStorageDirs(v3, p2, );
		return;
	}
}
This is path 2 for the API with depth 0:
public void disableAppDataIsolation(String p1, int p2, int p3){
	String v2 = this.mPmInternal.getSharedUserPackagesForPackage(p1, p3);
	int v3 = this.mPmInternal.getPackageUid(p1, 0, p3);
	if (v2.length == 0) {
		String v4 = new String(1);
		this.mVold.unmountAppStorageDirs(v3, p2, );
		return;
	}
}

and the following sink code:
['String v2 = this.mPmInternal.getSharedUserPackagesForPackage(p1, p3);\nint v3 = this.mPmInternal.getPackageUid(p1, 0, p3);\nthis.mVold.unmountAppStorageDirs(v3, p2, );']

The method disableAppDataIsolation has the following similar APIs:

- API Name: setAccountVisibility(Landroid/accounts/Account;Ljava/lang/String;I)Z with Similarity Score: 0.7312047481536865
  - Access Control Level: SYS_OR_SIG and the following code:
String v10 = this.mPackageManager.getPackagesForUid(v3);
PackageInfo v11 = this.mPackageManager.getPackageInfo(v10[], 0);

- API Name: fixupAppDir(Ljava/lang/String;)V with Similarity Score: 0.7046741247177124
  - Access Control Level: NONE and the following code:
String v3 = v1.group(2);
int v5 = Integer.parseInt(v4);
PackageManager v7 = this.mContext.getPackageManager();
int v8 = v7.getPackageUidAsUser(v6, v5);
StringBuilder v9 = new StringBuilder();
StringBuilder v11 = v9.append(p1);
StringBuilder v12 = v9.append("/");
String v13 = v9.toString();
this.mVold.fixupAppDir(v13, v8);

