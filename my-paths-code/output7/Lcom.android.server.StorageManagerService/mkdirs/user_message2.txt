The method mkdirs has the following code snippet:

This is path 1 for the API with depth 0:
public void mkdirs(String p1, String p2){
	PackageManager v13 = this.mContext.getPackageManager();
	PackageManager$Property v14 = v13.getProperty("android.internal.PROPERTY_NO_APP_DATA_STORAGE", p1);
	File v15 = new File(p2);
	File v17 = v15.getCanonicalFile();
	String v18 = v17.getAbsolutePath();
	boolean v19 = v18.endsWith("/");
	if (v19 != 0) {
		StringBuilder v20 = new StringBuilder();
		StringBuilder v22 = v20.append(v18);
		StringBuilder v23 = v20.append("/");
		String v24 = v20.toString();
		Matcher v25 = this.KNOWN_APP_DIR_PATHS.matcher();
		boolean v26 = v25.matches();
		if (v26 == 0) {
			String v27 = v25.group(3);
			boolean v28 = v27.equals(p1);
			if (v28 == 0) {
				String v29 = v25.group(2);
				if (v29 == 0) {
					String v30 = v25.group(2);
					if (v30 != 0) {
						this.mVold.setupAppDir(, v1);
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 0:
public void mkdirs(String p1, String p2){
	PackageManager v13 = this.mContext.getPackageManager();
	PackageManager$Property v14 = v13.getProperty("android.internal.PROPERTY_NO_APP_DATA_STORAGE", p1);
	File v15 = new File(p2);
	File v17 = v15.getCanonicalFile();
	String v18 = v17.getAbsolutePath();
	boolean v19 = v18.endsWith("/");
	if (v19 != 0) {
		Matcher v20 = this.KNOWN_APP_DIR_PATHS.matcher();
		boolean v21 = v20.matches();
		if (v21 == 0) {
			String v22 = v20.group(3);
			boolean v23 = v22.equals(p1);
			if (v23 == 0) {
				String v24 = v20.group(2);
				if (v24 == 0) {
					String v25 = v20.group(2);
					String v26 = Integer.toString(v2);
					boolean v27 = v25.equals(v26);
					if (v27 == 0) {
						String v28 = v20.group(2);
						if (v28 != 0) {
							this.mVold.setupAppDir(, v1);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['PackageManager v13 = this.mContext.getPackageManager();\nPackageManager$Property v14 = v13.getProperty("android.internal.PROPERTY_NO_APP_DATA_STORAGE", p1);\nFile v15 = new File(p2);', 'String v18 = v17.getAbsolutePath();\nboolean v19 = v18.endsWith("/");\nMatcher v20 = this.KNOWN_APP_DIR_PATHS.matcher();\nboolean v21 = v20.matches();', 'this.mVold.setupAppDir(, v1);']

The method mkdirs has the following similar APIs:

- API Name: isChangeEnabledByUid(JI)Z with Similarity Score: 0.7744635343551636
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v3 = this.mContext.getPackageManager();
String v4 = v3.getPackagesForUid(p2);
int v5 = UserHandle.getUserId(p2);
ApplicationInfo v8 = PlatformCompat.getApplicationInfo(v4[], v5);
boolean v9 = this.mCompatConfig.willChangeBeEnabled(p1, v4[]);

- API Name: isChangeEnabledByUid(JI)Z with Similarity Score: 0.773384690284729
  - Access Control Level: SYS_OR_SIG and the following code:
PackageManager v2 = this.mContext.getPackageManager();
String v3 = v2.getPackagesForUid(p2);
int v4 = UserHandle.getUserId(p2);
ApplicationInfo v7 = PlatformCompat.getApplicationInfo(v3[], v4);
boolean v8 = this.mCompatConfig.willChangeBeEnabled(p1, v3[]);

