The method getCacheQuotaBytes has the following code snippet:

This is path 1 for the API with depth 1:
public long getCacheQuotaBytes(String p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mContext.getSystemService(StorageStatsManage.class);
	String v6 = this.mContext.getOpPackageName();
	long v7 = this.mService.getCacheQuotaBytes(p1, p2, v6);
	long v5 = v7;
	Binder.restoreCallingIdentity(v3);
	return v5;
}

and the following sink code:
['long v7 = this.mService.getCacheQuotaBytes(p1, p2, v6);\nlong v5 = v7;\nreturn v5;', 'long v5 = v4.getCacheQuotaBytes(p1, p2);\nreturn v5;']

The method getCacheQuotaBytes has the following similar APIs:

- API Name: getAllocatableBytes(Ljava/lang/String;ILjava/lang/String;)J with Similarity Score: 0.7381431460380554
  - Access Control Level: SYS_OR_SIG and the following code:
UUID v23 = StorageManager.convert(p1);
boolean v24 = v4.isQuotaSupported(v25, v26);
long v27 = StorageStatsManager.getCacheBytes(v26);
long v28 = v15.getStorageCacheBytes(v18, v2);
long v29 = Math.max(0, (v25 - v28));

- API Name: getFreeBytes(Ljava/lang/String;Ljava/lang/String;)J with Similarity Score: 0.7208951711654663
  - Access Control Level: NONE and the following code:
File v2 = this.mStorage.findPathForUuid(p1);
boolean v3 = p0.isQuotaSupported(p1, "android");
long v4 = p0.getCacheBytes(p1, "android");
long v5 = this.mStorage.getStorageCacheBytes(v2, 0);
long v6 = Math.max(0, (v4 - v5));
long v7 = v2.getUsableSpace();
return (v7 + v6);

