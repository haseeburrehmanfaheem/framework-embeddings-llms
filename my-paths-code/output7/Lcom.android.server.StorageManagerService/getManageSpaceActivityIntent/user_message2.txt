The method getManageSpaceActivityIntent has the following code snippet:

This is path 1 for the API with depth 2:
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	if (v2 == 0) {
		IAppOpsService v4 = this.mIAppOpsService;
		int v5 = v4.checkOperation(92, v1, v2[0]);
		if (v5 != 3) {
			if (v5 != 0) {
				boolean v3 = ;
				if (v3 == 0) {
					int v6 = UserHandle.getUserId(v1);
					ApplicationInfo v7 = this.mIPackageManager.getApplicationInfo(p1, 0, v6);
					if (v7 == 0) {
						if (ApplicationInfo.manageSpaceActivityName != 0) {
							long v8 = Binder.clearCallingIdentity();
							Context v9 = this.mContext.createPackageContext(p1, 0);
							Intent v10 = new Intent("android.intent.action.VIEW");
							Intent v12 = v10.setClassName(p1, ApplicationInfo.manageSpaceActivityName);
							Intent v13 = v10.setFlags(268435456);
							ActivityOptions v14 = ActivityOptions.makeBasic();
							v14.setIgnorePendingIntentCreatorForegroundState(1);
							Bundle v16 = v14.toBundle();
							PendingIntent v17 = PendingIntent.getActivity(v9, p2, v10, 1409286144, v16);
							Binder.restoreCallingIdentity(v8);
							return v17;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public PendingIntent getManageSpaceActivityIntent(String p1, int p2){
	int v1 = Binder.getCallingUidOrThrow();
	String v2 = this.mIPackageManager.getPackagesForUid(v1);
	if (v2 == 0) {
		IAppOpsService v4 = this.mIAppOpsService;
		int v5 = v4.checkOperation(92, v1, v2[0]);
		if (v5 != 3) {
			if (v5 != 0) {
				boolean v3 = ;
				if (v3 == 0) {
					int v6 = UserHandle.getUserId(v1);
					ApplicationInfo v7 = this.mIPackageManager.getApplicationInfo(p1, 0, v6);
					if (v7 == 0) {
						if (ApplicationInfo.manageSpaceActivityName != 0) {
							return 0;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['long v8 = Binder.clearCallingIdentity();\nContext v7 = this.mContext.createPackageContext(p1, 0);\nIntent v8 = new Intent("android.intent.action.VIEW");\nIntent v10 = v8.setClassName(p1, ApplicationInfo.manageSpaceActivityName);\nIntent v11 = v8.setFlags(268435456);\nActivityOptions v12 = ActivityOptions.makeBasic();\nv12.setIgnorePendingIntentCreatorForegroundState(1);\nBundle v14 = v12.toBundle();\nPendingIntent v15 = PendingIntent.getActivity(v7, p2, v8, 1409286144, v14);\nBinder.restoreCallingIdentity(v6);\nreturn v15;']

The method getManageSpaceActivityIntent has the following similar APIs:

- API Name: startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V with Similarity Score: 0.7563876509666443
  - Access Control Level: SYS_OR_SIG and the following code:
Intent v26 = new Intent();
Intent v28 = v26.setAction("android.intent.action.MAIN");
Intent v29 = v26.addCategory("android.intent.category.LAUNCHER");
p0.verifyActivityCanHandleIntentAndExported(v16, p4, v9, p5);

- API Name: requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z with Similarity Score: 0.7528666257858276
  - Access Control Level: SYS_OR_SIG and the following code:
Object v1 = Objects.requireNonNull(p1);
int v2 = Binder.getCallingUid();
PackageManagerInternal v4 = p0.getPackageManagerInternal();
ComponentName v5 = v4.getSystemUiServiceComponent();
UserInfo.flags = (UserInfo.flags ^ 128);
Intent v84 = new Intent();

