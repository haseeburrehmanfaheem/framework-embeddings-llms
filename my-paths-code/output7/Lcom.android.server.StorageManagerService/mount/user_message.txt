This is path 1 for the API with depth 2:
public void mount(String p1){
	Object v3 = this.mVolumes.get(p1);
	if (v3 == 0) {
		VolumeInfo v2 = v3;
		Object v5 = this.mContext.getSystemService(UserManage.class);
		if (VolumeInfo.disk == 0) {
			if ((this.flags & 8) == 0) {
				boolean v6 = ;
				if (v6 == 0) {
					UserHandle v7 = Binder.getCallingUserHandle();
					boolean v8 = v5.hasUserRestriction("no_usb_file_transfer", v7);
					if (VolumeInfo.type == 0) {
						if (VolumeInfo.type == 1) {
							if (VolumeInfo.type != 5) {
								UserHandle v9 = Binder.getCallingUserHandle();
								boolean v10 = v5.hasUserRestriction("no_physical_media", v9);
								if ( != 0) {
									if ( == 0) {
										boolean v4 = ;
										if (v4 != 0) {
											p0.mount(v2);
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void mount(String p1){
	Object v3 = this.mVolumes.get(p1);
	if (v3 == 0) {
		VolumeInfo v2 = v3;
		Object v5 = this.mContext.getSystemService(UserManage.class);
		if (VolumeInfo.disk == 0) {
			boolean v6 = VolumeInfo.disk.isUsb();
			if (v6 == 0) {
				UserHandle v7 = Binder.getCallingUserHandle();
				boolean v8 = v5.hasUserRestriction("no_usb_file_transfer", v7);
				if (VolumeInfo.type == 0) {
					if (VolumeInfo.type == 1) {
						if (VolumeInfo.type != 5) {
							UserHandle v9 = Binder.getCallingUserHandle();
							boolean v10 = v5.hasUserRestriction("no_physical_media", v9);
							if ( != 0) {
								if ( == 0) {
									boolean v4 = ;
									if (v4 != 0) {
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void mount(String p1){
	VolumeInfo v2 = p0.findVolumeByIdOrThrow(p1);
	boolean v3 = p0.isMountDisallowed(v2);
	if (v3 != 0) {
		p0.mount(v2);
		return;
	}
}
