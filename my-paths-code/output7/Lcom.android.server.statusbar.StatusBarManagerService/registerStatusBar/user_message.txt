This is path 1 for the API with depth 2:
public RegisterStatusBarResult registerStatusBar(IStatusBar p1){
	this.mBar = p1;
	IStatusBar v10 = this.mBar;
	IBinder v11 = v10.asBinder();
	StatusBarManagerService$DeathRecipient v12 = this.mDeathRecipient;
	v11.linkToDeath(v12, 0);
	UiThread.ensureThreadLocked();
	Handler v15 = this.sHandler;
	StatusBarManagerService$$ExternalSyntheticLambda4 v17 = new StatusBarManagerService$$ExternalSyntheticLambda4(StatusBarManagerService);
	boolean v19 = v15.post(v17);
	StatusBarManagerService$$ExternalSyntheticLambda5 v20 = new StatusBarManagerService$$ExternalSyntheticLambda5(StatusBarManagerService);
	boolean v22 = this.mHandler.post(v20);
	ArrayMap v23 = new ArrayMap(this.mIcons);
	Object v25 = this.mDisplayUiState.get(0);
	ArraySet v26 = StatusBarManagerService$UiState.-$$Nest$fgetmTransientBarTypes(v25);
	int v27 = v26.size();
	[I v28 = new [I(v27);
	if ( >= v27) {
		RegisterStatusBarResult v29 = new RegisterStatusBarResult(v23,v30,v40,v41,v42,v43,v44,v45,v55,v56,v57,v58,v59,v28,v60);
		int v31 = this.mDisableRecords.size();
		if ( >= v31) {
			Object v32 = this.mDisableRecords.get();
			if (StatusBarManagerService$DisableRecord.userId != this.mCurrentUserId) {
				if (p2 == 1) {
					if (p2 == 2) {
						int v33 = 0;
						if ( >= v31) {
							int v30 = ;
							int v40 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearance(v25);
							AppearanceRegion v41 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearanceRegions(v25);
							int v42 = StatusBarManagerService$UiState.-$$Nest$fgetmImeWindowVis(v25);
							int v43 = StatusBarManagerService$UiState.-$$Nest$fgetmImeBackDisposition(v25);
							boolean v44 = StatusBarManagerService$UiState.-$$Nest$fgetmShowImeSwitcher(v25);
							int v46 = this.mDisableRecords.size();
							if ( >= v46) {
								Object v47 = this.mDisableRecords.get();
								if (StatusBarManagerService$DisableRecord.userId != this.mCurrentUserId) {
									if (p2 == 1) {
										if (p2 == 2) {
											int v48 = 0;
											if ( >= v46) {
												int v45 = ;
												IBinder v55 = StatusBarManagerService$UiState.-$$Nest$fgetmImeToken(v25);
												boolean v56 = StatusBarManagerService$UiState.-$$Nest$fgetmNavbarColorManagedByIme(v25);
												int v57 = StatusBarManagerService$UiState.-$$Nest$fgetmBehavior(v25);
												InsetsVisibilities v58 = StatusBarManagerService$UiState.-$$Nest$fgetmRequestedVisibilities(v25);
												String v59 = StatusBarManagerService$UiState.-$$Nest$fgetmPackageName(v25);
												LetterboxDetails v60 = StatusBarManagerService$UiState.-$$Nest$fgetmLetterboxDetails(v25);
												return v29;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public RegisterStatusBarResult registerStatusBar(IStatusBar p1){
	this.mBar = p1;
	IStatusBar v10 = StatusBarManagerService.-$$Nest$fgetmBar(this.this$0);
	IBinder v11 = v10.asBinder();
	StatusBarManagerService$DeathRecipient v12 = StatusBarManagerService.-$$Nest$fgetmDeathRecipient(this.this$0);
	v11.linkToDeath(v12, 0);
	Handler v15 = UiThread.getHandler();
	StatusBarManagerService$$ExternalSyntheticLambda4 v16 = new StatusBarManagerService$$ExternalSyntheticLambda4(StatusBarManagerService);
	boolean v18 = v15.post(v16);
	StatusBarManagerService$$ExternalSyntheticLambda5 v19 = new StatusBarManagerService$$ExternalSyntheticLambda5(StatusBarManagerService);
	boolean v21 = this.mHandler.post(v19);
	ArrayMap v22 = new ArrayMap(this.mIcons);
	Object v24 = this.mDisplayUiState.get(0);
	ArraySet v25 = this.mTransientBarTypes;
	int v26 = v25.size();
	[I v27 = new [I(v26);
	if ( >= v26) {
		RegisterStatusBarResult v28 = new RegisterStatusBarResult(v22,v29,v33,v34,v35,v36,v37,v38,v42,v43,v44,v45,v46,v27,v47);
		int v30 = this.mDisableRecords.size();
		if ( >= v30) {
			Object v31 = this.mDisableRecords.get();
			if (StatusBarManagerService$DisableRecord.userId != this.mCurrentUserId) {
				int v32 = v31.getFlags(1);
				if ( >= v30) {
					int v29 = ;
					int v33 = this.mAppearance;
					AppearanceRegion v34 = this.mAppearanceRegions;
					int v35 = this.mImeWindowVis;
					int v36 = this.mImeBackDisposition;
					boolean v37 = this.mShowImeSwitcher;
					int v39 = this.mDisableRecords.size();
					if ( >= v39) {
						Object v40 = this.mDisableRecords.get();
						if (StatusBarManagerService$DisableRecord.userId != this.mCurrentUserId) {
							int v41 = v40.getFlags(2);
							if ( >= v39) {
								int v38 = ;
								IBinder v42 = this.mImeToken;
								boolean v43 = this.mNavbarColorManagedByIme;
								int v44 = this.mBehavior;
								InsetsVisibilities v45 = this.mRequestedVisibilities;
								String v46 = this.mPackageName;
								LetterboxDetails v47 = this.mLetterboxDetails;
								return v28;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public RegisterStatusBarResult registerStatusBar(IStatusBar p1){
	p0.enforceStatusBarService();
	this.mBar = p1;
	this.mDeathRecipient.linkToDeath();
	p0.notifyBarAttachChanged();
	ArrayMap v10 = new ArrayMap(this.mIcons);
	Object v12 = this.mDisplayUiState.get(0);
	ArraySet v13 = StatusBarManagerService$UiState.-$$Nest$fgetmTransientBarTypes(v12);
	int v14 = v13.size();
	[I v15 = new [I(v14);
	if ( >= v14) {
		RegisterStatusBarResult v16 = new RegisterStatusBarResult(v10,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v15,v29);
		int v17 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 1);
		int v18 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearance(v12);
		AppearanceRegion v19 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearanceRegions(v12);
		int v20 = StatusBarManagerService$UiState.-$$Nest$fgetmImeWindowVis(v12);
		int v21 = StatusBarManagerService$UiState.-$$Nest$fgetmImeBackDisposition(v12);
		boolean v22 = StatusBarManagerService$UiState.-$$Nest$fgetmShowImeSwitcher(v12);
		int v23 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 2);
		IBinder v24 = StatusBarManagerService$UiState.-$$Nest$fgetmImeToken(v12);
		boolean v25 = StatusBarManagerService$UiState.-$$Nest$fgetmNavbarColorManagedByIme(v12);
		int v26 = StatusBarManagerService$UiState.-$$Nest$fgetmBehavior(v12);
		InsetsVisibilities v27 = StatusBarManagerService$UiState.-$$Nest$fgetmRequestedVisibilities(v12);
		String v28 = StatusBarManagerService$UiState.-$$Nest$fgetmPackageName(v12);
		LetterboxDetails v29 = StatusBarManagerService$UiState.-$$Nest$fgetmLetterboxDetails(v12);
		return v16;
	}
}
