The method expandNotificationsPanel has the following code snippet:

This is path 1 for the API with depth 2:
public void expandNotificationsPanel(){
	Object v4 = this.mDisplayUiState.get(0);
	int v6 = v4.getDisabled2();
	int v5 = v6;
	if ((v5 & 4) != 4) {
		boolean v3 = ;
		if (v3 == 0) {
			if (this.mBar == 0) {
				this.mBar.animateExpandNotificationsPanel();
				return;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void expandNotificationsPanel(){
	Object v4 = this.mDisplayUiState.get(0);
	int v6 = v4.getDisabled2();
	int v5 = v6;
	if ((v5 & 4) != 4) {
		boolean v3 = ;
		if (v3 == 0) {
			return;
		}
	}
}

and the following sink code:
['p0.enforceExpandStatusBar();\nboolean v2 = p0.isDisable2FlagSet(4);', 'Object v4 = this.mDisplayUiState.get(0);\nint v6 = v4.getDisabled2();', 'Object v4 = this.mDisplayUiState.get(0);\nint v5 = StatusBarManagerService$UiState.-$$Nest$mgetDisabled2(v4);']

The method expandNotificationsPanel has the following similar APIs:

- API Name: collapsePanels()V with Similarity Score: 0.8128923177719116
  - Access Control Level: SYS_OR_SIG and the following code:
StatusBarManagerService.enforceExpandStatusBar();
boolean v7 = this.mActivityTaskManager.canCloseSystemDialogs(v3, v2);

- API Name: togglePanel()V with Similarity Score: 0.8089421391487122
  - Access Control Level: SYS_OR_SIG and the following code:
StatusBarManagerService.enforceExpandStatusBar();
boolean v7 = this.mActivityTaskManager.canCloseSystemDialogs(v3, v2);
if (v7 != 0) { ... }
this.mBar.togglePanel();

