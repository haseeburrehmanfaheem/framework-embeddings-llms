The method getActiveSource has the following code snippet:

This is path 1 for the API with depth 2:
public HdmiDeviceInfo getActiveSource(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4);
	HdmiCecLocalDevicePlayback v6 = v7;
	if (v6 == 0) {
		HdmiCecLocalDevice v9 = this.mHdmiCecNetwork.getLocalDevice(4);
		HdmiCecLocalDevicePlayback v8 = v9;
		boolean v10 = v8.isActiveSource();
		if (v10 == 0) {
			HdmiCecLocalDevice$ActiveSource v11 = this.mActiveSource;
			boolean v13 = HdmiUtils.isValidAddress(this.logicalAddress);
			boolean v12 = v13;
			if (v12 == 0) {
				HdmiCecLocalDevice v15 = this.mHdmiCecNetwork.getLocalDevice(0);
				HdmiCecLocalDeviceTv v14 = v15;
				if (v14 == 0) {
					HdmiCecLocalDevice v17 = this.mHdmiCecNetwork.getLocalDevice(0);
					HdmiCecLocalDeviceTv v16 = v17;
					int v18 = v16.getActivePath();
					if (v18 == 65535) {
						Iterator v20 = this.mSafeAllDeviceInfos.iterator();
						boolean v21 = v20.hasNext();
						if (v21 == 0) {
							HdmiDeviceInfo v19 = 0;
							if (v19 == 0) {
								HdmiCecLocalDevice v23 = this.mHdmiCecNetwork.getLocalDevice(0);
								HdmiCecLocalDeviceTv v22 = v23;
								int v24 = v22.getActivePortId();
								HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0);
								HdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18);
								HdmiDeviceInfo$Builder v29 = v28.setPortId(v24);
								HdmiDeviceInfo$Builder v30 = v29.setVendorId(0);
								StringBuilder v31 = new StringBuilder();
								StringBuilder v33 = v31.append("HDMI");
								StringBuilder v34 = v33.append(v24);
								String v35 = v34.toString();
								HdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35);
								HdmiDeviceInfo v37 = v36.build();
								HdmiDeviceInfo v25 = v37;
								HdmiDeviceInfo v5 = ;
								return v5;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public HdmiDeviceInfo getActiveSource(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	HdmiCecLocalDevice v7 = this.mHdmiCecNetwork.getLocalDevice(4);
	HdmiCecLocalDevicePlayback v6 = v7;
	if (v6 == 0) {
		HdmiCecLocalDevice v9 = this.mHdmiCecNetwork.getLocalDevice(4);
		HdmiCecLocalDevicePlayback v8 = v9;
		boolean v10 = v8.isActiveSource();
		if (v10 == 0) {
			HdmiCecLocalDevice$ActiveSource v11 = this.mActiveSource;
			boolean v13 = HdmiUtils.isValidAddress(this.logicalAddress);
			boolean v12 = v13;
			if (v12 == 0) {
				Iterator v15 = this.mSafeAllDeviceInfos.iterator();
				boolean v16 = v15.hasNext();
				if (v16 == 0) {
					Object v17 = v15.next();
					boolean v18 = v17.isCecDevice();
					if (v18 == 0) {
						boolean v19 = v15.hasNext();
						if (v19 == 0) {
							HdmiDeviceInfo v14 = 0;
							if (v14 == 0) {
								int v21 = this.mHdmiCecNetwork.physicalAddressToPortId(HdmiCecLocalDevice$ActiveSource.physicalAddress);
								int v20 = v21;
								HdmiDeviceInfo$Builder v23 = new HdmiDeviceInfo$Builder(2,0);
								HdmiDeviceInfo$Builder v25 = v23.setPhysicalAddress(HdmiCecLocalDevice$ActiveSource.physicalAddress);
								HdmiDeviceInfo$Builder v26 = v25.setPortId(v20);
								HdmiDeviceInfo$Builder v27 = v26.setVendorId(0);
								StringBuilder v28 = new StringBuilder();
								StringBuilder v30 = v28.append("HDMI");
								StringBuilder v31 = v30.append(v20);
								String v32 = v31.toString();
								HdmiDeviceInfo$Builder v33 = v27.setDisplayName(v32);
								HdmiDeviceInfo v34 = v33.build();
								HdmiDeviceInfo v22 = v34;
								HdmiDeviceInfo v5 = v22;
								return v5;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['HdmiDeviceInfo$Builder v26 = new HdmiDeviceInfo$Builder(2,0);\nHdmiDeviceInfo$Builder v28 = v26.setPhysicalAddress(v18);\nHdmiDeviceInfo$Builder v29 = v28.setPortId(v24);\nHdmiDeviceInfo$Builder v30 = v29.setVendorId(0);\nStringBuilder v31 = new StringBuilder();\nStringBuilder v33 = v31.append("HDMI");\nStringBuilder v34 = v33.append(v24);\nString v35 = v34.toString();\nHdmiDeviceInfo$Builder v36 = v30.setDisplayName(v35);\nHdmiDeviceInfo v37 = v36.build();', 'HdmiDeviceInfo v12 = this.mHdmiCecNetwork.getSafeDeviceInfoByPath(v11);\nHdmiDeviceInfo v15 = HdmiDeviceInfo.hardwarePort(v11, v14);', 'HdmiDeviceInfo v2 = this.this$0.getActiveSource();\nreturn v2;']

The method getActiveSource has the following similar APIs:

- API Name: addHardwareDevice(I)V with Similarity Score: 0.7681806683540344
  - Access Control Level: NONE and the following code:
TvInputHardwareInfo$Builder v1 = new TvInputHardwareInfo$Builder();
TvInputHardwareInfo$Builder v3 = v1.deviceId(p1);
TvInputHardwareInfo$Builder v4 = v3.type(9);
TvInputHardwareInfo v8 = v7.build();
v9.onDeviceAvailable(v8, 0);

- API Name: addHardwareDevice(I)V with Similarity Score: 0.761987566947937
  - Access Control Level: NONE and the following code:
Integer v4 = Integer.valueOf(p1);
this.mDeviceId = v4;
TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
int v16 = this.mDeviceId.intValue();
TvInputHardwareInfo.-$$Nest$fputmDeviceId(v14, v16);
TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);

