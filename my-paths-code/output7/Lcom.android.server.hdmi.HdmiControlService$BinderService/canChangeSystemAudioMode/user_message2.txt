The method canChangeSystemAudioMode has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canChangeSystemAudioMode(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	Object v7 = this.mLocalDevices.get(0);
	HdmiCecLocalDevice v6 = v7;
	HdmiCecLocalDeviceTv v5 = v6;
	if (v5 != 0) {
		HdmiCecNetwork v10 = HdmiCecLocalDevice.mService.getHdmiCecNetwork();
		HdmiDeviceInfo v11 = v10.getSafeCecDeviceInfo(5);
		HdmiDeviceInfo v9 = v11;
		if (v9 == 0) {
			boolean v8 = ;
			return v8;
		}
	}
}
This is path 2 for the API with depth 2:
public boolean canChangeSystemAudioMode(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	Object v7 = this.mLocalDevices.get(0);
	HdmiCecLocalDevice v6 = v7;
	HdmiCecLocalDeviceTv v5 = v6;
	if (v5 != 0) {
		return 0;
	}
}

and the following sink code:
['HdmiControlService.setWorkSourceUidToCallingUid();\nObject v7 = this.mLocalDevices.get(0);\nHdmiCecLocalDevice v6 = v7;\nHdmiCecLocalDeviceTv v5 = v6;', 'this.this$0.initBinderCall();\nHdmiCecLocalDevice v4 = this.mHdmiCecNetwork.getLocalDevice(0);\nHdmiCecLocalDeviceTv v3 = v4;', 'HdmiControlService.-$$Nest$minitBinderCall(this.this$0);\nHdmiCecLocalDeviceTv v2 = this.this$0.tv();\nboolean v3 = v2.hasSystemAudioDevice();']

The method canChangeSystemAudioMode has the following similar APIs:

- API Name: addSystemAudioModeChangeListener(Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener;)V with Similarity Score: 0.8175085783004761
  - Access Control Level: SYS_OR_SIG and the following code:
HdmiControlService.setWorkSourceUidToCallingUid();

- API Name: setSystemAudioModeOnForAudioOnlySource()V with Similarity Score: 0.8110849857330322
  - Access Control Level: SYS_OR_SIG and the following code:
HdmiControlService.setWorkSourceUidToCallingUid();
HdmiControlService$BinderService$24 v5 = new HdmiControlService$BinderService$24(p0);
this.this$0.runOnServiceThread(v5);

