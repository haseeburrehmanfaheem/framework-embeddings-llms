This is path 1 for the API with depth 2:
public void createSession(String p1, ITextToSpeechSessionCallback p2){
	Object v1 = AbstractMasterSystemService.mLock;
	int v2 = UserHandle.getCallingUserId();
	AbstractPerUserSystemService v4 = this.this$0.getServiceForUserLocked(v2);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		Context v7 = this.mMaster.getContext();
		Context v6 = v7;
		TextToSpeechManagerPerUserService$TextToSpeechSessionConnection v9 = new TextToSpeechManagerPerUserService$TextToSpeechSessionConnection(v6,AbstractPerUserSystemService.mUserId,p1,p2);
		v9.start();
		return;
	}
}


This is path 2 for the API with depth 1:
public void createSession(String p1, ITextToSpeechSessionCallback p2){
	Object v1 = AbstractMasterSystemService.mLock;
	int v2 = UserHandle.getCallingUserId();
	AbstractPerUserSystemService v4 = this.this$0.getServiceForUserLocked(v2);
	AbstractPerUserSystemService v3 = v4;
	if (v3 == 0) {
		TextToSpeechManagerService$TextToSpeechManagerServiceStub$$ExternalSyntheticLambda0 v5 = new TextToSpeechManagerService$TextToSpeechManagerServiceStub$$ExternalSyntheticLambda0(p2);
		v5.runOrThrow();
		return;
	}
}


This is path 3 for the API with depth 0:
public void createSession(String p1, ITextToSpeechSessionCallback p2){
	Object v1 = TextToSpeechManagerService.access$000(this.this$0);
	int v2 = UserHandle.getCallingUserId();
	AbstractPerUserSystemService v3 = TextToSpeechManagerService.access$100(this.this$0, v2);
	if (v3 == 0) {
		TextToSpeechManagerService$TextToSpeechManagerServiceStub$$ExternalSyntheticLambda0 v4 = new TextToSpeechManagerService$TextToSpeechManagerServiceStub$$ExternalSyntheticLambda0(p2);
		TextToSpeechManagerPerUserService.runSessionCallbackMethod(v4);
		return;
	}
}
