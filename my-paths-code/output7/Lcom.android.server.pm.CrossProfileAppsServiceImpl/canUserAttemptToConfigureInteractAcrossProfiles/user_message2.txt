The method canUserAttemptToConfigureInteractAcrossProfiles has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	UserManager v3 = this.mInjector.getUserManager();
	[I v4 = v3.getProfileIds(v1, 0);
	if (v4.length >= 2) {
		if ( >= v4.length) {
			boolean v6 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[]);
			if (v6 == 0) {
				if ( >= v4.length) {
					boolean v7 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[]);
					if (v7 == 0) {
						boolean v5 = 1;
						if (v5 == 0) {
							String v8 = AppOpsManager.opToPermission(93);
							if (v9 != 0) {
								boolean v2 = (v10 ^ 1);
								return v2;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	UserManager v3 = this.mInjector.getUserManager();
	[I v4 = v3.getProfileIds(v1, 0);
	if (v4.length >= 2) {
		if ( >= v4.length) {
			boolean v6 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[]);
			if (v6 == 0) {
				if ( >= v4.length) {
					boolean v7 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4[]);
					if (v7 == 0) {
						boolean v5 = 1;
						if (v5 == 0) {
							String v8 = AppOpsManager.opToPermission(93);
							if (v9 != 0) {
								boolean v2 = 0;
								return v2;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v5 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4);\nString v8 = AppOpsManager.opToPermission(93);\nreturn v2;', 'int v1 = this.mInjector.getCallingUserId();\nI v4 = v3.getProfileIds(v1, 0);\nboolean v5 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4);', 'boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);\nreturn v2;']

The method canUserAttemptToConfigureInteractAcrossProfiles has the following similar APIs:

- API Name: canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z with Similarity Score: 0.9119925498962402
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = this.mInjector.getCallingUserId();
boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);
return v2;

- API Name: canRequestInteractAcrossProfiles(Ljava/lang/String;)Z with Similarity Score: 0.9014654755592346
  - Access Control Level: NONE and the following code:
UserManager v7 = this.mInjector.getUserManager();
int v8 = this.mInjector.getCallingUserId();
[I v9 = v7.getEnabledProfileIds(v8);
boolean v11 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v9[]);

