The method getTargetUserProfiles has the following code snippet:

This is path 1 for the API with depth 2:
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	DevicePolicyEventLogger v7 = new DevicePolicyEventLogger(125);
	DevicePolicyEventLogger v6 = v7;
	String v9 = new String(1);
	this.mStringArrayValue = v9;
	DevicePolicyEventLogger v10 = DevicePolicyEventLogger;
	if (this.mStringArrayValue != 0) {
		byte[] v12 = 0;
		StatsEvent$Builder v14 = StatsEvent.newBuilder();
		StatsEvent$Builder v15 = v14.setAtomId(103);
		StatsEvent$Builder v16 = v14.writeInt(this.mEventId);
		StatsEvent$Builder v17 = v14.writeString(this.mAdminPackageName);
		StatsEvent$Builder v18 = v14.writeInt(this.mIntValue);
		StatsEvent$Builder v19 = v14.writeBoolean(this.mBooleanValue);
		StatsEvent$Builder v20 = v14.writeLong(this.mTimePeriodMs);
		if (v12 != 0) {
			[B v21 = new [B(0);
			StatsEvent$Builder v22 = v14.writeByteArray();
			StatsEvent$Builder v23 = v14.usePooledBuffer();
			StatsEvent v24 = v14.build();
			StatsLog.write(v24);
			int v26 = this.mInjector.getCallingUserId();
			List v27 = p0.getTargetUserProfilesUnchecked(p1, v26);
			return v27;
		}
	}
}
This is path 2 for the API with depth 2:
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	DevicePolicyEventLogger v7 = new DevicePolicyEventLogger(125);
	DevicePolicyEventLogger v6 = v7;
	String v9 = new String(1);
	this.mStringArrayValue = v9;
	DevicePolicyEventLogger v10 = DevicePolicyEventLogger;
	if (this.mStringArrayValue != 0) {
		StringList v13 = new StringList();
		StringList.stringValue = this.mStringArrayValue;
		byte[] v15 = MessageNano.toByteArray(v13);
		byte[] v12 = v15;
		StatsEvent$Builder v17 = StatsEvent.newBuilder();
		StatsEvent$Builder v18 = v17.setAtomId(103);
		StatsEvent$Builder v19 = v17.writeInt(this.mEventId);
		StatsEvent$Builder v20 = v17.writeString(this.mAdminPackageName);
		StatsEvent$Builder v21 = v17.writeInt(this.mIntValue);
		StatsEvent$Builder v22 = v17.writeBoolean(this.mBooleanValue);
		StatsEvent$Builder v23 = v17.writeLong(this.mTimePeriodMs);
		if (v12 != 0) {
			[B v24 = new [B(0);
			StatsEvent$Builder v25 = v17.writeByteArray();
			StatsEvent$Builder v26 = v17.usePooledBuffer();
			StatsEvent v27 = v17.build();
			StatsLog.write(v27);
			int v29 = this.mInjector.getCallingUserId();
			List v30 = p0.getTargetUserProfilesUnchecked(p1, v29);
			return v30;
		}
	}
}

and the following sink code:
['List v27 = p0.getTargetUserProfilesUnchecked(p1, v26);\nObject v18 = this.mInjector.withCleanCallingIdentity(v16);\nList v15 = v18;\nList v8 = p0.getTargetUserProfilesUnchecked(p1, v7);', 'CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v16 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(CrossProfileAppsServiceImpl,v14,p1);']

The method getTargetUserProfiles has the following similar APIs:

- API Name: resetInteractAcrossProfilesAppOps(Ljava/util/List;)V with Similarity Score: 0.9595426321029663
  - Access Control Level: NONE and the following code:
CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1 v1 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1(p0);
p1.forEach(v1);

- API Name: startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V with Similarity Score: 0.874132513999939
  - Access Control Level: SYS_OR_SIG and the following code:
CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6 v19 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6(CrossProfileAppsServiceImpl,v11,v7,p5);
this.mInjector.withCleanCallingIdentity(v19);
ActivityTaskManagerInternal v22 = this.mInjector.getActivityTaskManagerInternal();
int v23 = v22.startActivityAsUser(p1, p2, p3, v11, p6, 0, p7, p5);

