The method canRequestInteractAcrossProfiles has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canRequestInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	UserManager v7 = this.mInjector.getUserManager();
	int v8 = this.mInjector.getCallingUserId();
	[I v9 = v7.getEnabledProfileIds(v8);
	if (v9.length >= 2) {
		if ( >= v9.length) {
			boolean v11 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v9[]);
			if (v11 == 0) {
				if ( >= v9.length) {
					boolean v12 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v9[]);
					if (v12 == 0) {
						boolean v10 = 1;
						if (v10 == 0) {
							String v13 = AppOpsManager.opToPermission(93);
							boolean v6 = v14;
							return v6;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean canRequestInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	UserManager v7 = this.mInjector.getUserManager();
	int v8 = this.mInjector.getCallingUserId();
	[I v9 = v7.getEnabledProfileIds(v8);
	if (v9.length >= 2) {
		if ( >= v9.length) {
			boolean v11 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v9[]);
			if (v11 == 0) {
				if ( >= v9.length) {
					boolean v12 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v9[]);
					if (v12 == 0) {
						boolean v10 = 1;
						if (v10 == 0) {
							boolean v6 = 0;
							return v6;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserManager v7 = this.mInjector.getUserManager();\nint v8 = this.mInjector.getCallingUserId();\n[I v9 = v7.getEnabledProfileIds(v8);\nboolean v11 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v9[]);', 'UserManager v7 = this.mInjector.getUserManager();\nint v8 = this.mInjector.getCallingUserId();\n[I v9 = v7.getEnabledProfileIds(v8);\nboolean v10 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v9);', 'p0.verifyCallingPackage(p1);\nboolean v3 = p0.canRequestInteractAcrossProfilesUnchecked(p1);']

The method canRequestInteractAcrossProfiles has the following similar APIs:

- API Name: canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z with Similarity Score: 0.9014654755592346
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = this.mInjector.getCallingUserId();
I v4 = v3.getProfileIds(v1, 0);
boolean v5 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4);

- API Name: canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z with Similarity Score: 0.8905788660049438
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = this.mInjector.getCallingUserId();
I v4 = v3.getProfileIds(v1, 0);
boolean v5 = CrossProfileAppsServiceImpl.isProfileOwner(p1, v4);

