The method clearStatuses has the following code snippet:

This is path 1 for the API with depth 2:
public void clearStatuses(String p1, int p2, String p3){
	IActivityManager v3 = ActivityManager.getService();
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = v3.handleIncomingUser(v4, v5, p2, 1, 1, "", 0);
	int v2 = p2;
	int v1 = v2;
	DataManager v12 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
	PackageData v15 = DataManager.getPackage(p1, p2);
	if (v15 == 0) {
		ConversationStore v16 = v15.getConversationStore();
		if (v16 == 0) {
			ConversationStore v14 = v16;
			ConversationInfo v18 = v14.getConversation(p3);
			if (v18 == 0) {
				ConversationInfo v17 = v18;
				ConversationInfo$Builder v19 = new ConversationInfo$Builder(v17);
				this.mCurrStatuses.clear();
				if (0 == 0) {
					Iterator v23 = 0.iterator();
					boolean v24 = v23.hasNext();
					if (v24 == 0) {
						Object v25 = v23.next();
						String v26 = v25.getId();
						Object v27 = this.mCurrStatuses.put(v26, v25);
						boolean v28 = v23.hasNext();
						if (v28 == 0) {
							ConversationInfo$Builder v21 = ConversationInfo$Builder;
							Object v30 = Objects.requireNonNull(this.mShortcutId);
							ConversationInfo v31 = new ConversationInfo(ConversationInfo$Builder,0);
							ConversationInfo v29 = v31;
							v14.addOrUpdate(v29);
							String v35 = v29.getShortcutId();
							ConversationChannel v36 = DataManager.getConversationChannel(p1, p2, v35, v29);
							if (v36 == 0) {
								ConversationChannel v37 = new ConversationChannel(1);
								List v38 = Arrays.asList(v37);
								DataManager.notifyConversationsListeners(v38);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void clearStatuses(String p1, int p2, String p3){
	IActivityManager v3 = ActivityManager.getService();
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = v3.handleIncomingUser(v4, v5, p2, 1, 1, "", 0);
	int v2 = v6;
	int v1 = v2;
	DataManager v12 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
	PackageData v15 = DataManager.getPackage(p1, p2);
	if (v15 == 0) {
		ConversationStore v16 = v15.getConversationStore();
		if (v16 == 0) {
			ConversationStore v14 = v16;
			ConversationInfo v18 = v14.getConversation(p3);
			if (v18 == 0) {
				ConversationInfo v17 = v18;
				ConversationInfo$Builder v19 = new ConversationInfo$Builder(v17);
				this.mCurrStatuses.clear();
				if (0 == 0) {
					Iterator v23 = 0.iterator();
					boolean v24 = v23.hasNext();
					if (v24 == 0) {
						Object v25 = v23.next();
						String v26 = v25.getId();
						Object v27 = this.mCurrStatuses.put(v26, v25);
						boolean v28 = v23.hasNext();
						if (v28 == 0) {
							ConversationInfo$Builder v21 = ConversationInfo$Builder;
							Object v30 = Objects.requireNonNull(this.mShortcutId);
							ConversationInfo v31 = new ConversationInfo(ConversationInfo$Builder,0);
							ConversationInfo v29 = v31;
							v14.addOrUpdate(v29);
							String v35 = v29.getShortcutId();
							ConversationChannel v36 = DataManager.getConversationChannel(p1, p2, v35, v29);
							if (v36 == 0) {
								ConversationChannel v37 = new ConversationChannel(1);
								List v38 = Arrays.asList(v37);
								DataManager.notifyConversationsListeners(v38);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['DataManager v12 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);\nPackageData v15 = DataManager.getPackage(p1, p2);\nConversationStore v16 = v15.getConversationStore();\nConversationInfo v18 = v14.getConversation(p3);\nthis.mCurrStatuses.clear();\nConversationInfo$Builder v19 = new ConversationInfo$Builder(v17);\nv14.addOrUpdate(v29);', 'int v2 = this.this$0.handleIncomingUser(p2);\nthis.this$0.checkCallerIsSameApp(p1);\nConversationStore v7 = DataManager.getConversationStoreOrThrow(p1, p2);\nConversationInfo v8 = DataManager.getConversationInfoOrThrow(v7, p3);\nConversationInfo$Builder v9 = new ConversationInfo$Builder(v8);\nConversationInfo$Builder v11 = v9.setStatuses(0);\nDataManager.updateConversationStoreThenNotifyListeners(v7, v12, p1, p2);', 'int v1 = PeopleService.-$$Nest$mhandleIncomingUser(this.this$0, p2);\nPeopleService.-$$Nest$mcheckCallerIsSameApp(this.this$0, p1);\nv3.clearStatuses(p1, p2, p3);']

The method clearStatuses has the following similar APIs:

- API Name: addOrUpdateStatus(Ljava/lang/String;ILjava/lang/String;Landroid/app/people/ConversationStatus;)V with Similarity Score: 0.9777480363845825
  - Access Control Level: SYS_OR_SIG and the following code:
DataManager v14 = PeopleService.-$$Nest$fgetmDataManager(this.this$0);
PackageData v17 = DataManager.getPackage(p1, p2);
ConversationStore v18 = v17.getConversationStore();
ConversationInfo v20 = v16.getConversation(p3);
ConversationInfo$Builder v21 = new ConversationInfo$Builder(v19);
Object v25 = this.mCurrStatuses.put(v24, p4);
ConversationInfo v28 = new ConversationInfo(ConversationInfo$Builder,0);
v16.addOrUpdate(v26);

- API Name: addOrUpdateStatus(Ljava/lang/String;ILjava/lang/String;Landroid/app/people/ConversationStatus;)V with Similarity Score: 0.9692257642745972
  - Access Control Level: SYS_OR_SIG and the following code:
int v2 = this.this$0.handleIncomingUser(p2);
this.this$0.checkCallerIsSameApp(p1);
ConversationInfo$Builder v11 = new ConversationInfo$Builder(v10);
ConversationInfo$Builder v13 = v11.addOrUpdateStatus(p4);
DataManager.updateConversationStoreThenNotifyListeners(v9, v14, p1, p2);

