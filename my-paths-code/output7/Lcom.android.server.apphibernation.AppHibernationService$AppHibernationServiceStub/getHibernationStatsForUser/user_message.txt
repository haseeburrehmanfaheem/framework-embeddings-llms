This is path 1 for the API with depth 2:
public Map getHibernationStatsForUser(List p1, int p2){
	if (p1 == 0) {
		ArraySet v1 = new ArraySet(p1);
		int v9 = Binder.getCallingUid();
		int v10 = Binder.getCallingPid();
		int v11 = this.mIActivityManager.handleIncomingUser(v10, v9, p2, 0, 1, "getHibernationStatsForUser", 0);
		int v8 = v11;
		boolean v13 = this.mUserManager.isUserUnlockingOrUnlocked(v8);
		if (v13 != 0) {
			boolean v14 = this.mUserStates.contains(v8);
			if (v14 != 0) {
				if (1 == 0) {
					boolean v12 = 0;
					if (v12 != 0) {
						Object v18 = this.mUserStates.get(v8);
						if ( == 0) {
							Iterator v19 = .iterator();
							boolean v20 = v19.hasNext();
							if (v20 == 0) {
								Object v21 = v19.next();
								int v22 = Binder.getCallingUid();
								boolean v23 = this.mPackageManagerInternal.canQueryPackage(v22, v21);
								if (v23 != 0) {
									boolean v24 = this.mGlobalHibernationStates.containsKey(v21);
									if (v24 == 0) {
										boolean v25 = v18.containsKey(v21);
										if (v25 != 0) {
											Object v26 = this.mGlobalHibernationStates.get(v21);
											Object v27 = v18.get(v21);
											HibernationStats v28 = new HibernationStats((GlobalLevelState.savedByte + UserLevelState.savedByte));
											Object v30 = v4.put(v21, v28);
											boolean v31 = v19.hasNext();
											if (v31 == 0) {
												Map v3 = v4;
												return v3;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public Map getHibernationStatsForUser(List p1, int p2){
	if (p1 == 0) {
		ArraySet v1 = new ArraySet(p1);
		int v8 = AppHibernationService.handleIncomingUser(p2, "getHibernationStatsForUser");
		boolean v9 = AppHibernationService.checkUserStatesExist(v8, "getHibernationStatsForUser", 1);
		if (v9 != 0) {
			Object v10 = this.mUserStates.get(v8);
			if ( == 0) {
				Iterator v11 = .iterator();
				boolean v12 = v11.hasNext();
				if (v12 == 0) {
					Object v13 = v11.next();
					int v14 = Binder.getCallingUid();
					boolean v15 = this.mPackageManagerInternal.canQueryPackage(v14, v13);
					if (v15 != 0) {
						boolean v16 = this.mGlobalHibernationStates.containsKey(v13);
						if (v16 == 0) {
							boolean v17 = v10.containsKey(v13);
							if (v17 != 0) {
								Object v18 = this.mGlobalHibernationStates.get(v13);
								Object v19 = v10.get(v13);
								HibernationStats v20 = new HibernationStats((GlobalLevelState.savedByte + UserLevelState.savedByte));
								Object v22 = v4.put(v13, v20);
								boolean v23 = v11.hasNext();
								if (v23 == 0) {
									Map v3 = v4;
									return v3;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public Map getHibernationStatsForUser(List p1, int p2){
	if (p1 == 0) {
		ArraySet v1 = new ArraySet(p1);
		Map v3 = this.mService.getHibernationStatsForUser(, p2);
		return v3;
	}
}
