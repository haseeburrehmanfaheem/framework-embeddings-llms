This is path 1 for the API with depth 2:
public String getTranscodingSessionId(int p1){
	[B v2 = new [B(12);
	SecureRandom v3 = this.mSecureRandom;
	v3.nextBytes(v2);
	String v5 = Base64.encodeToString(v2, 11);
	MediaMetrics$Item v6 = new MediaMetrics$Item("metrics.manager");
	if ("create" instanceof Integer == 0) {
		if ("create" instanceof Long == 0) {
			if ("create" instanceof Double == 0) {
				String v9 = MediaMetrics$Property.EVENT.getName();
				double v10 = "create".doubleValue();
				MediaMetrics$Item v11 = MediaMetrics$Item.putDouble(v9, v10);
				MediaMetrics$Item v8 = MediaMetrics$Item;
				if (v5 instanceof Integer == 0) {
					if (v5 instanceof Long == 0) {
						if (v5 instanceof Double == 0) {
							String v13 = MediaMetrics$Property.LOG_SESSION_ID.getName();
							double v14 = v5.doubleValue();
							MediaMetrics$Item v15 = MediaMetrics$Item.putDouble(v13, v14);
							MediaMetrics$Item v12 = MediaMetrics$Item;
							MediaMetrics$Item.updateHeader();
							int v18 = this.mBuffer.limit();
							int v19 = MediaMetrics.-$$Nest$smnative_submit_bytebuffer(this.mBuffer, v18);
							if (v19 < 0) {
								boolean v16 = ;
								String v1 = v5;
								return v1;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public String getTranscodingSessionId(int p1){
	[B v2 = new [B(12);
	SecureRandom v3 = MediaMetricsManagerService.-$$Nest$fgetmSecureRandom(this.this$0);
	v3.nextBytes(v2);
	String v5 = Base64.encodeToString(v2, 11);
	MediaMetrics$Item v6 = new MediaMetrics$Item("metrics.manager");
	MediaMetrics$Item v8 = v6.set(MediaMetrics$Property.EVENT, "create");
	MediaMetrics$Item v9 = v8.set(MediaMetrics$Property.LOG_SESSION_ID, v5);
	boolean v10 = v9.record();
	String v1 = v5;
	return v1;
}


This is path 3 for the API with depth 0:
public String getTranscodingSessionId(int p1){
	String v1 = p0.getSessionIdInternal(p1);
	return v1;
}
