This is path 1 for the API with depth 2:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		boolean v17 = this.mUnlockedUsers.get(p1);
		if (v17 == 0) {
			boolean v18 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
			boolean v16 = v18;
			if (v16 == 0) {
				if ((p2 & 2) == 0) {
					if ((p2 & 4) == 0) {
						if ((p2 & 1) == 0) {
							if ((p2 & 8) == 0) {
								if ( == 0) {
									if ( == 0) {
										if ( == 0) {
											ShortcutService$$ExternalSyntheticLambda19 v19 = new ShortcutService$$ExternalSyntheticLambda19(((( | ) | ) | ));
											ArrayList v22 = new ArrayList();
											ShortcutUser v25 = ShortcutService.getUserShortcutsLocked(p2);
											ShortcutPackage v26 = v25.getPackageShortcuts(p1);
											ShortcutUser v27 = v26.getUser();
											v27.onCalledByPublisher(p1);
											ShortcutPackage v24 = v26;
											ShortcutPackage.findAll(v22, p4, p3, 0, 0, 0);
											ParceledListSlice v31 = new ParceledListSlice(v32);
											int v33 = v22.size();
											if ( < 0) {
												Object v34 = v22.get();
												v34.setReturnedByServer();
												if ( < 0) {
													List v32 = v22;
													ParceledListSlice v21 = v31;
													return v21;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	int v6 = ShortcutService.injectGetPackageUid(p1, p3);
	if (v6 != v4) {
		boolean v7 = ShortcutService.isEphemeralApp(p1, p3);
		Preconditions.checkState((v7 ^ 1), "Ephemeral apps can't use ShortcutManager");
		boolean v10 = ShortcutService.isUserUnlockedL(p3);
		if (v10 == 0) {
			if ((p2 & 2) == 0) {
				if ((p2 & 4) == 0) {
					if ((p2 & 1) == 0) {
						if ((p2 & 8) == 0) {
							if ( == 0) {
								if ( == 0) {
									if ( == 0) {
										ShortcutService$$ExternalSyntheticLambda19 v11 = new ShortcutService$$ExternalSyntheticLambda19(((( | ) | ) | ));
										ArrayList v14 = new ArrayList();
										ShortcutPackage v16 = ShortcutService.getPackageShortcutsForPublisherLocked(p1, p3);
										v16.findAll(v14, v11, 9);
										ParceledListSlice v18 = new ParceledListSlice(v19);
										List v19 = ShortcutService.setReturnedByServer(v14);
										ParceledListSlice v13 = v18;
										return v13;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getShortcuts(String p1, int p2, int p3){
	p0.verifyCaller(p1, p3);
	p0.throwIfUserLockedL(p3);
	if ((p2 & 2) == 0) {
		if ((p2 & 4) == 0) {
			if ((p2 & 1) == 0) {
				if ((p2 & 8) == 0) {
					if ( == 0) {
						if ( == 0) {
							if ( == 0) {
								ShortcutService$$ExternalSyntheticLambda19 v3 = new ShortcutService$$ExternalSyntheticLambda19(((( | ) | ) | ));
								ParceledListSlice v5 = p0.getShortcutsWithQueryLocked(p1, p3, 9, v3);
								return v5;
							}
						}
					}
				}
			}
		}
	}
}
