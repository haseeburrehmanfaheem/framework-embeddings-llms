This is path 1 for the API with depth 2:
public void reportShortcutUsed(String p1, String p2, int p3){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		Object v15 = Objects.requireNonNull(p2);
		boolean v18 = this.mUnlockedUsers.get(p1);
		if (v18 == 0) {
			boolean v19 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
			boolean v17 = v19;
			if (v17 == 0) {
				boolean v22 = ShortcutService.isUserUnlockedL(p2);
				if (v22 != 0) {
					if (p2 == this.mLastLockedUser) {
						ShortcutService.wtf("User still locked");
						this.mLastLockedUser = p2;
						Object v24 = this.mUsers.get(p2);
						if (v24 != 0) {
							ShortcutUser v25 = ShortcutService.loadUserLocked(p2);
							if (v25 != 0) {
								ShortcutUser v26 = new ShortcutUser(ShortcutService,p2);
								this.mUsers.put(p2, );
								ShortcutService.checkPackageChanges(p2);
								ShortcutUser v21 = ;
								ShortcutPackage v31 = ShortcutUser.getPackageShortcutsIfExists(p1);
								if (v31 != 0) {
									ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
									Object v34 = this.mPackages.put(p1, v32);
									ShortcutPackage v30 = ;
									ShortcutUser v35 = this.mShortcutUser;
									ShortcutUser.detectLocaleChange();
									ShortcutUser.rescanPackageIfNeeded(p1, 0);
									ShortcutPackage v20 = v30;
									ShortcutInfo v39 = v20.findShortcutById(p2);
									if (v39 != 0) {
										long v42 = Binder.clearCallingIdentity();
										long v41 = v42;
										this.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);
										Binder.restoreCallingIdentity(v41);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void reportShortcutUsed(String p1, String p2, int p3){
	int v6 = ShortcutService.injectGetPackageUid(p1, p3);
	if (v6 != v4) {
		boolean v7 = ShortcutService.isEphemeralApp(p1, p3);
		Preconditions.checkState((v7 ^ 1), "Ephemeral apps can't use ShortcutManager");
		Object v9 = Objects.requireNonNull(p2);
		boolean v11 = ShortcutService.isUserUnlockedL(p3);
		if (v11 == 0) {
			ShortcutUser v13 = ShortcutService.getUserShortcutsLocked(p3);
			ShortcutPackage v14 = v13.getPackageShortcuts(p1);
			ShortcutUser v15 = v14.getUser();
			v15.onCalledByPublisher(p1);
			ShortcutPackage v12 = v14;
			ShortcutInfo v17 = v12.findShortcutById(p2);
			if (v17 != 0) {
				long v19 = ShortcutService.injectClearCallingIdentity();
				this.mUsageStatsManagerInternal.reportShortcutUsage(p1, p2, p3);
				ShortcutService.injectRestoreCallingIdentity(v19);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void reportShortcutUsed(String p1, String p2, int p3){
	p0.verifyCaller(p1, p3);
	Object v2 = Objects.requireNonNull(p2);
	p0.throwIfUserLockedL(p3);
	ShortcutPackage v4 = p0.getPackageShortcutsForPublisherLocked(p1, p3);
	ShortcutInfo v5 = v4.findShortcutById(p2);
	if (v5 != 0) {
		return;
	}
}
