The method isRequestPinItemSupported has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isRequestPinItemSupported(int p1, int p2){
	boolean v2 = v4;
	if (v2 == 0) {
		long v5 = p0.injectClearCallingIdentity();
		int v8 = this.mService.getParentOrSelfUserId(p1);
		String v9 = this.mService.getDefaultLauncher(v8);
		if (v9 != 0) {
			ComponentName v10 = this.mService.injectGetPinConfirmationActivity(v9, v8, p2);
			if (v10 != 0) {
				Pair v7 = ;
				if (v7 == 0) {
					boolean v6 = ;
					p0.injectRestoreCallingIdentity(v5);
					return v6;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isRequestPinItemSupported(int p1, int p2){
	boolean v2 = v4;
	if (v2 == 0) {
		long v5 = p0.injectClearCallingIdentity();
		int v8 = this.mService.getParentOrSelfUserId(p1);
		String v9 = this.mService.getDefaultLauncher(v8);
		if (v9 != 0) {
			ComponentName v10 = this.mService.injectGetPinConfirmationActivity(v9, v8, p2);
			if (v10 != 0) {
				Integer v11 = Integer.valueOf(v8);
				Pair v12 = Pair.create(v10, v11);
				Pair v7 = ;
				if (v7 == 0) {
					boolean v6 = ;
					p0.injectRestoreCallingIdentity(v5);
					return v6;
				}
			}
		}
	}
}

and the following sink code:
['int v8 = this.mService.getParentOrSelfUserId(p1);\nString v9 = this.mService.getDefaultLauncher(v8);\nComponentName v10 = this.mService.injectGetPinConfirmationActivity(v9, v8, p2);', 'Pair v6 = ShortcutRequestPinProcessor.getRequestPinConfirmationActivity(p1, p2);', 'boolean v3 = this.mShortcutRequestPinProcessor.isRequestPinItemSupported(p1, p2);\nreturn v3;']

The method isRequestPinItemSupported has the following similar APIs:

- API Name: startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V with Similarity Score: 0.7449692487716675
  - Access Control Level: SYS_OR_SIG and the following code:
p0.verifyActivityCanHandleIntent(v11, v7, p5);
ActivityTaskManagerInternal v19 = this.mInjector.getActivityTaskManagerInternal();
int v20 = v19.startActivityAsUser(p1, p2, p3, v11, p6, 0, p7, p5);

- API Name: requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z with Similarity Score: 0.7138948440551758
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v17 = this.mLockPatternUtils.isManagedProfileWithUnifiedChallenge(p3);
int v19 = UserInfo.id;
boolean v22 = v18.isDeviceLocked(v19);
IActivityManager v31 = ActivityManager.getService();
int v32 = v31.stopUser(p3, 1, 0);

