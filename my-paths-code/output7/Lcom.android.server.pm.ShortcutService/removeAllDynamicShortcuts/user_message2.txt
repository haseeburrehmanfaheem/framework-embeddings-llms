The method removeAllDynamicShortcuts has the following code snippet:

This is path 1 for the API with depth 2:
public void removeAllDynamicShortcuts(String p1, int p2){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		ArrayList v15 = new ArrayList();
		boolean v19 = this.mUnlockedUsers.get(p1);
		if (v19 == 0) {
			boolean v20 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
			boolean v18 = v20;
			if (v18 == 0) {
				boolean v23 = ShortcutService.isUserUnlockedL(p2);
				if (v23 != 0) {
					if (p2 == this.mLastLockedUser) {
						ShortcutService.wtf("User still locked");
						this.mLastLockedUser = p2;
						Object v25 = this.mUsers.get(p2);
						if (v25 != 0) {
							ShortcutUser v26 = ShortcutService.loadUserLocked(p2);
							if (v26 != 0) {
								ShortcutUser v27 = new ShortcutUser(ShortcutService,p2);
								this.mUsers.put(p2, );
								ShortcutService.checkPackageChanges(p2);
								ShortcutUser v22 = ;
								ShortcutPackage v32 = ShortcutUser.getPackageShortcutsIfExists(p1);
								if (v32 != 0) {
									ShortcutPackage v33 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
									Object v35 = this.mPackages.put(p1, v33);
									ShortcutPackage v31 = ;
									ShortcutUser v36 = this.mShortcutUser;
									ShortcutUser.detectLocaleChange();
									ShortcutUser.rescanPackageIfNeeded(p1, 0);
									ShortcutPackage v21 = v31;
									ShortcutService$$ExternalSyntheticLambda17 v40 = new ShortcutService$$ExternalSyntheticLambda17();
									ShortcutPackageInfo v44 = ShortcutPackage.getPackageInfo();
									boolean v45 = v44.isShadow();
									if (v45 == 0) {
										if (0 != 0) {
											int v46 = ShortcutPackage.getPackageUserId();
											ShortcutLauncher v47 = ShortcutUser.mService.getLauncherShortcutsLocked(0, v46, 0);
											String v48 = ShortcutPackage.getPackageName();
											int v49 = ShortcutPackage.getPackageUserId();
											ArraySet v50 = v47.getPinnedShortcutIds(v48, v49);
											ShortcutPackage$$ExternalSyntheticLambda2 v51 = new ShortcutPackage$$ExternalSyntheticLambda2(ShortcutPackage,p1,p2,p3,0,,0);
											ShortcutPackage.forEachShortcut(v51);
											long v56 = System.currentTimeMillis();
											long v55 = v56;
											int v57 = this.mShortcuts.size();
											if ( < 0) {
												Object v58 = this.mShortcuts.valueAt();
												boolean v60 = ShortcutInfo.hasFlags(1);
												boolean v59 = v60;
												if (v59 == 0) {
													boolean v62 = ShortcutInfo.isDisabledForRestoreIssue(this.mDisabledReason);
													boolean v61 = (v62 ^ 1);
													if (v61 == 0) {
														this.mLastChangedTimestamp = v55;
														this.mFlags = (this.mFlags & (~1));
														this.mRank = 0;
														if ( < 0) {
															boolean v67 = ShortcutPackage.isAppSearchEnabled();
															if (v67 != 0) {
																ShortcutPackage$$ExternalSyntheticLambda17 v68 = new ShortcutPackage$$ExternalSyntheticLambda17(ShortcutPackage);
																ShortcutPackage.runAsSystem(v68);
																if ( == 0) {
																	ArrayList v72 = new ArrayList(1);
																	ShortcutPackage$$ExternalSyntheticLambda35 v74 = new ShortcutPackage$$ExternalSyntheticLambda35(v72);
																	ShortcutPackage.forEachShortcut(v74);
																	boolean v77 = v72.isEmpty();
																	if (v77 != 0) {
																		int v78 = v72.size();
																		if ( < 0) {
																			Object v79 = v72.get();
																			String v80 = v79.getId();
																			ShortcutInfo v81 = ShortcutPackage.forceDeleteShortcutInner(v80);
																			if ( < 0) {
																				List v71 = v72;
																				List v54 = v71;
																				ArraySet v83 = new ArraySet();
																				boolean v86 = CollectionUtils.isEmpty(p1);
																				if (v86 == 0) {
																					int v87 = p1.size();
																					if ( >= v87) {
																						Object v88 = p1.get();
																						String v89 = v88.getId();
																						boolean v90 = v83.add(v89);
																						if ( >= v87) {
																							ArraySet v91 = new ArraySet();
																							boolean v94 = CollectionUtils.isEmpty(p2);
																							if (v94 == 0) {
																								int v95 = p2.size();
																								if ( >= v95) {
																									Object v96 = p2.get();
																									String v97 = v96.getId();
																									boolean v98 = v91.add(v97);
																									if ( >= v95) {
																										if (p4 != 0) {
																											boolean v100 = CollectionUtils.isEmpty(v83);
																											if (v100 == 0) {
																												boolean v101 = CollectionUtils.isEmpty(v91);
																												if (v101 == 0) {
																													ArraySet v102 = new ArraySet();
																													boolean v104 = CollectionUtils.isEmpty(v83);
																													if (v104 != 0) {
																														v102.addAll(v83);
																														boolean v106 = CollectionUtils.isEmpty(v91);
																														if (v106 != 0) {
																															v102.addAll(v91);
																															boolean v108 = CollectionUtils.isEmpty(p3);
																															if (v108 != 0) {
																																ShortcutService$$ExternalSyntheticLambda23 v109 = new ShortcutService$$ExternalSyntheticLambda23(v102);
																																boolean v111 = p3.removeIf(v109);
																																ArrayList v112 = new ArrayList();
																																ShortcutService$$ExternalSyntheticLambda24 v114 = new ShortcutService$$ExternalSyntheticLambda24(v102);
																																p4.findAll(v112, v114, 4);
																																List v99 = v112;
																																List v82 = v99;
																																Object v118 = Objects.requireNonNull(v21);
																																String v119 = this.mPackageName;
																																int v120 = this.mPackageUserId;
																																ShortcutService$$ExternalSyntheticLambda28 v122 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v120,v119);
																																Runnable v121 = v122;
																																Object v125 = Objects.requireNonNull(p1);
																																Object v126 = Objects.requireNonNull(v121);
																																this.mHandler.removeCallbacksAndMessages(p1);
																																boolean v128 = this.mHandler.postDelayed(v121, p1, 100);
																																List v130 = ShortcutService.removeNonKeyFields(p2);
																																List v131 = ShortcutService.removeNonKeyFields(p3);
																																UserHandle v132 = UserHandle.of(v120);
																																ShortcutService$$ExternalSyntheticLambda26 v133 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v120,v130,v119,v132,v131);
																																ShortcutService.injectPostToHandler(v133);
																																ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
																																boolean v139 = 0;
																																if (v139 == 0) {
																																	ShortcutService$$ExternalSyntheticLambda25 v141 = new ShortcutService$$ExternalSyntheticLambda25();
																																	ShortcutService.forEachLoadedUserLocked(v141);
																																	return;
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void removeAllDynamicShortcuts(String p1, int p2){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = -1;
	if (v6 != v4) {
		ApplicationInfo v12 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v13 = ShortcutService.isEphemeralApp(v12);
		boolean v11 = v13;
		Preconditions.checkState((v11 ^ 1), "Ephemeral apps can't use ShortcutManager");
		ArrayList v15 = new ArrayList();
		boolean v19 = this.mUnlockedUsers.get(p1);
		if (v19 == 0) {
			boolean v18 = 1;
			if (v18 == 0) {
				boolean v22 = ShortcutService.isUserUnlockedL(p2);
				if (v22 != 0) {
					if (p2 == this.mLastLockedUser) {
						ShortcutService.wtf("User still locked");
						this.mLastLockedUser = p2;
						Object v24 = this.mUsers.get(p2);
						if (v24 != 0) {
							ShortcutUser v25 = ShortcutService.loadUserLocked(p2);
							if (v25 != 0) {
								ShortcutUser v26 = new ShortcutUser(ShortcutService,p2);
								this.mUsers.put(p2, );
								ShortcutService.checkPackageChanges(p2);
								ShortcutUser v21 = ;
								ShortcutPackage v31 = ShortcutUser.getPackageShortcutsIfExists(p1);
								if (v31 != 0) {
									ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
									Object v34 = this.mPackages.put(p1, v32);
									ShortcutPackage v30 = ;
									ShortcutUser v35 = this.mShortcutUser;
									ShortcutUser.detectLocaleChange();
									ShortcutUser.rescanPackageIfNeeded(p1, 0);
									ShortcutPackage v20 = v30;
									ShortcutService$$ExternalSyntheticLambda17 v39 = new ShortcutService$$ExternalSyntheticLambda17();
									ShortcutPackageInfo v43 = ShortcutPackage.getPackageInfo();
									boolean v44 = v43.isShadow();
									if (v44 == 0) {
										if (0 != 0) {
											int v45 = ShortcutPackage.getPackageUserId();
											ShortcutLauncher v46 = ShortcutUser.mService.getLauncherShortcutsLocked(0, v45, 0);
											String v47 = ShortcutPackage.getPackageName();
											int v48 = ShortcutPackage.getPackageUserId();
											ArraySet v49 = v46.getPinnedShortcutIds(v47, v48);
											ShortcutPackage$$ExternalSyntheticLambda2 v50 = new ShortcutPackage$$ExternalSyntheticLambda2(ShortcutPackage,p1,p2,p3,0,,0);
											ShortcutPackage.forEachShortcut(v50);
											long v55 = System.currentTimeMillis();
											long v54 = v55;
											int v56 = this.mShortcuts.size();
											if ( < 0) {
												Object v57 = this.mShortcuts.valueAt();
												boolean v59 = ShortcutInfo.hasFlags(1);
												boolean v58 = v59;
												if (v58 == 0) {
													boolean v61 = ShortcutInfo.isDisabledForRestoreIssue(this.mDisabledReason);
													boolean v60 = (v61 ^ 1);
													if (v60 == 0) {
														this.mLastChangedTimestamp = v54;
														this.mFlags = (this.mFlags & (~1));
														this.mRank = 0;
														if ( < 0) {
															boolean v66 = ShortcutPackage.isAppSearchEnabled();
															if (v66 != 0) {
																ShortcutPackage$$ExternalSyntheticLambda17 v67 = new ShortcutPackage$$ExternalSyntheticLambda17(ShortcutPackage);
																ShortcutPackage.runAsSystem(v67);
																if ( == 0) {
																	ArrayList v71 = new ArrayList(1);
																	ShortcutPackage$$ExternalSyntheticLambda35 v73 = new ShortcutPackage$$ExternalSyntheticLambda35(v71);
																	ShortcutPackage.forEachShortcut(v73);
																	boolean v76 = v71.isEmpty();
																	if (v76 != 0) {
																		int v77 = v71.size();
																		if ( < 0) {
																			Object v78 = v71.get();
																			String v79 = v78.getId();
																			ShortcutInfo v80 = ShortcutPackage.forceDeleteShortcutInner(v79);
																			if ( < 0) {
																				List v70 = v71;
																				List v53 = v70;
																				ArraySet v82 = new ArraySet();
																				boolean v85 = CollectionUtils.isEmpty(p1);
																				if (v85 == 0) {
																					int v86 = p1.size();
																					if ( >= v86) {
																						Object v87 = p1.get();
																						String v88 = v87.getId();
																						boolean v89 = v82.add(v88);
																						if ( >= v86) {
																							ArraySet v90 = new ArraySet();
																							boolean v93 = CollectionUtils.isEmpty(p2);
																							if (v93 == 0) {
																								int v94 = p2.size();
																								if ( >= v94) {
																									Object v95 = p2.get();
																									String v96 = v95.getId();
																									boolean v97 = v90.add(v96);
																									if ( >= v94) {
																										if (p4 != 0) {
																											boolean v99 = CollectionUtils.isEmpty(v82);
																											if (v99 == 0) {
																												boolean v100 = CollectionUtils.isEmpty(v90);
																												if (v100 == 0) {
																													ArraySet v101 = new ArraySet();
																													boolean v103 = CollectionUtils.isEmpty(v82);
																													if (v103 != 0) {
																														v101.addAll(v82);
																														boolean v105 = CollectionUtils.isEmpty(v90);
																														if (v105 != 0) {
																															v101.addAll(v90);
																															boolean v107 = CollectionUtils.isEmpty(p3);
																															if (v107 != 0) {
																																ShortcutService$$ExternalSyntheticLambda23 v108 = new ShortcutService$$ExternalSyntheticLambda23(v101);
																																boolean v110 = p3.removeIf(v108);
																																ArrayList v111 = new ArrayList();
																																ShortcutService$$ExternalSyntheticLambda24 v113 = new ShortcutService$$ExternalSyntheticLambda24(v101);
																																p4.findAll(v111, v113, 4);
																																List v98 = v111;
																																List v81 = v98;
																																Object v117 = Objects.requireNonNull(v20);
																																String v118 = this.mPackageName;
																																int v119 = this.mPackageUserId;
																																ShortcutService$$ExternalSyntheticLambda28 v121 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v119,v118);
																																Runnable v120 = v121;
																																Object v124 = Objects.requireNonNull(p1);
																																Object v125 = Objects.requireNonNull(v120);
																																this.mHandler.removeCallbacksAndMessages(p1);
																																boolean v127 = this.mHandler.postDelayed(v120, p1, 100);
																																List v129 = ShortcutService.removeNonKeyFields(p2);
																																List v130 = ShortcutService.removeNonKeyFields(p3);
																																UserHandle v131 = UserHandle.of(v119);
																																ShortcutService$$ExternalSyntheticLambda26 v132 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v119,v129,v118,v131,v130);
																																ShortcutService.injectPostToHandler(v132);
																																ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
																																boolean v138 = 0;
																																if (v138 == 0) {
																																	ShortcutService$$ExternalSyntheticLambda25 v140 = new ShortcutService$$ExternalSyntheticLambda25();
																																	ShortcutService.forEachLoadedUserLocked(v140);
																																	return;
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void removeAllDynamicShortcuts(String p1, int p2){
	long v7 = ShortcutService.injectClearCallingIdentity();
	int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
	ShortcutService.injectRestoreCallingIdentity(v7);
	int v6 = v8;
	if (v6 != v4) {
		ApplicationInfo v11 = ShortcutService.getApplicationInfo(p1, p2);
		boolean v12 = ShortcutService.isEphemeralApp(v11);
		boolean v10 = v12;
		Preconditions.checkState((v10 ^ 1), "Ephemeral apps can't use ShortcutManager");
		ArrayList v14 = new ArrayList();
		boolean v18 = this.mUnlockedUsers.get(p1);
		if (v18 == 0) {
			boolean v19 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
			boolean v17 = v19;
			if (v17 == 0) {
				boolean v22 = ShortcutService.isUserUnlockedL(p2);
				if (v22 != 0) {
					if (p2 == this.mLastLockedUser) {
						ShortcutService.wtf("User still locked");
						this.mLastLockedUser = p2;
						Object v24 = this.mUsers.get(p2);
						if (v24 != 0) {
							ShortcutUser v25 = ShortcutService.loadUserLocked(p2);
							if (v25 != 0) {
								ShortcutUser v26 = new ShortcutUser(ShortcutService,p2);
								this.mUsers.put(p2, );
								ShortcutService.checkPackageChanges(p2);
								ShortcutUser v21 = ;
								ShortcutPackage v31 = ShortcutUser.getPackageShortcutsIfExists(p1);
								if (v31 != 0) {
									ShortcutPackage v32 = new ShortcutPackage(ShortcutUser,this.mUserId,p1);
									Object v34 = this.mPackages.put(p1, v32);
									ShortcutPackage v30 = ;
									ShortcutUser v35 = this.mShortcutUser;
									ShortcutUser.detectLocaleChange();
									ShortcutUser.rescanPackageIfNeeded(p1, 0);
									ShortcutPackage v20 = v30;
									ShortcutService$$ExternalSyntheticLambda17 v39 = new ShortcutService$$ExternalSyntheticLambda17();
									ShortcutPackageInfo v43 = ShortcutPackage.getPackageInfo();
									boolean v44 = v43.isShadow();
									if (v44 == 0) {
										if (0 != 0) {
											int v45 = ShortcutPackage.getPackageUserId();
											ShortcutLauncher v46 = ShortcutUser.mService.getLauncherShortcutsLocked(0, v45, 0);
											String v47 = ShortcutPackage.getPackageName();
											int v48 = ShortcutPackage.getPackageUserId();
											ArraySet v49 = v46.getPinnedShortcutIds(v47, v48);
											ShortcutPackage$$ExternalSyntheticLambda2 v50 = new ShortcutPackage$$ExternalSyntheticLambda2(ShortcutPackage,p1,p2,p3,0,,0);
											ShortcutPackage.forEachShortcut(v50);
											long v55 = System.currentTimeMillis();
											long v54 = v55;
											int v56 = this.mShortcuts.size();
											if ( < 0) {
												Object v57 = this.mShortcuts.valueAt();
												boolean v59 = ShortcutInfo.hasFlags(1);
												boolean v58 = v59;
												if (v58 == 0) {
													boolean v61 = ShortcutInfo.isDisabledForRestoreIssue(this.mDisabledReason);
													boolean v60 = (v61 ^ 1);
													if (v60 == 0) {
														this.mLastChangedTimestamp = v54;
														this.mFlags = (this.mFlags & (~1));
														this.mRank = 0;
														if ( < 0) {
															boolean v66 = ShortcutPackage.isAppSearchEnabled();
															if (v66 != 0) {
																ShortcutPackage$$ExternalSyntheticLambda17 v67 = new ShortcutPackage$$ExternalSyntheticLambda17(ShortcutPackage);
																ShortcutPackage.runAsSystem(v67);
																if ( == 0) {
																	ArrayList v71 = new ArrayList(1);
																	ShortcutPackage$$ExternalSyntheticLambda35 v73 = new ShortcutPackage$$ExternalSyntheticLambda35(v71);
																	ShortcutPackage.forEachShortcut(v73);
																	boolean v76 = v71.isEmpty();
																	if (v76 != 0) {
																		int v77 = v71.size();
																		if ( < 0) {
																			Object v78 = v71.get();
																			String v79 = v78.getId();
																			ShortcutInfo v80 = ShortcutPackage.forceDeleteShortcutInner(v79);
																			if ( < 0) {
																				List v70 = v71;
																				List v53 = v70;
																				ArraySet v82 = new ArraySet();
																				boolean v85 = CollectionUtils.isEmpty(p1);
																				if (v85 == 0) {
																					int v86 = p1.size();
																					if ( >= v86) {
																						Object v87 = p1.get();
																						String v88 = v87.getId();
																						boolean v89 = v82.add(v88);
																						if ( >= v86) {
																							ArraySet v90 = new ArraySet();
																							boolean v93 = CollectionUtils.isEmpty(p2);
																							if (v93 == 0) {
																								int v94 = p2.size();
																								if ( >= v94) {
																									Object v95 = p2.get();
																									String v96 = v95.getId();
																									boolean v97 = v90.add(v96);
																									if ( >= v94) {
																										if (p4 != 0) {
																											boolean v99 = CollectionUtils.isEmpty(v82);
																											if (v99 == 0) {
																												boolean v100 = CollectionUtils.isEmpty(v90);
																												if (v100 == 0) {
																													ArraySet v101 = new ArraySet();
																													boolean v103 = CollectionUtils.isEmpty(v82);
																													if (v103 != 0) {
																														v101.addAll(v82);
																														boolean v105 = CollectionUtils.isEmpty(v90);
																														if (v105 != 0) {
																															v101.addAll(v90);
																															boolean v107 = CollectionUtils.isEmpty(p3);
																															if (v107 != 0) {
																																ShortcutService$$ExternalSyntheticLambda23 v108 = new ShortcutService$$ExternalSyntheticLambda23(v101);
																																boolean v110 = p3.removeIf(v108);
																																ArrayList v111 = new ArrayList();
																																ShortcutService$$ExternalSyntheticLambda24 v113 = new ShortcutService$$ExternalSyntheticLambda24(v101);
																																p4.findAll(v111, v113, 4);
																																List v98 = v111;
																																List v81 = v98;
																																Object v117 = Objects.requireNonNull(v20);
																																String v118 = this.mPackageName;
																																int v119 = this.mPackageUserId;
																																ShortcutService$$ExternalSyntheticLambda28 v121 = new ShortcutService$$ExternalSyntheticLambda28(ShortcutService,v119,v118);
																																Runnable v120 = v121;
																																Object v124 = Objects.requireNonNull(p1);
																																Object v125 = Objects.requireNonNull(v120);
																																this.mHandler.removeCallbacksAndMessages(p1);
																																boolean v127 = this.mHandler.postDelayed(v120, p1, 100);
																																List v129 = ShortcutService.removeNonKeyFields(p2);
																																List v130 = ShortcutService.removeNonKeyFields(p3);
																																UserHandle v131 = UserHandle.of(v119);
																																ShortcutService$$ExternalSyntheticLambda26 v132 = new ShortcutService$$ExternalSyntheticLambda26(ShortcutService,v119,v129,v118,v131,v130);
																																ShortcutService.injectPostToHandler(v132);
																																ShortcutUser.mService.injectPostToHandlerDebounced(this.mSaveShortcutPackageRunner, this.mSaveShortcutPackageRunner);
																																boolean v138 = 0;
																																if (v138 == 0) {
																																	ShortcutService$$ExternalSyntheticLambda25 v140 = new ShortcutService$$ExternalSyntheticLambda25();
																																	ShortcutService.forEachLoadedUserLocked(v140);
																																	return;
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['long v7 = ShortcutService.injectClearCallingIdentity();\nint v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);\nShortcutUser v27 = new ShortcutUser(ShortcutService,p2);', 'p0.verifyCaller(p1, p2);\nShortcutPackage v5 = p0.getPackageShortcutsForPublisherLocked(p1, p2);\nv5.deleteAllDynamicShortcuts();', 'int v6 = ShortcutService.injectGetPackageUid(p1, p2);\nShortcutUser v14 = ShortcutService.getUserShortcutsLocked(p2);\nv14.getPackageShortcuts(p1)']

The method removeAllDynamicShortcuts has the following similar APIs:

- API Name: removeLongLivedShortcuts(Ljava/lang/String;Ljava/util/List;I)V with Similarity Score: 0.9975000619888306
  - Access Control Level: SYS_OR_SIG and the following code:
long v7 = ShortcutService.injectClearCallingIdentity();
int v8 = this.mIPackageManager.getPackageUid(p1, 795136, p2);
ShortcutUser v26 = new ShortcutUser(ShortcutService,p2);

- API Name: pushDynamicShortcut(Ljava/lang/String;Landroid/content/pm/ShortcutInfo;I)V with Similarity Score: 0.9731158018112183
  - Access Control Level: SYS_OR_SIG and the following code:
int v6 = ShortcutService.injectGetPackageUid(p1, p3);
ShortcutUser v17 = ShortcutService.getUserShortcutsLocked(p3);
ShortcutPackage v18 = v17.getPackageShortcuts(p1);

