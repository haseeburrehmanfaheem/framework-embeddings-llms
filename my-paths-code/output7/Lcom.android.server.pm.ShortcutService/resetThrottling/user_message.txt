This is path 1 for the API with depth 2:
public void resetThrottling(){
	boolean v2 = v4;
	if (v2 != 0) {
		int v6 = ShortcutService.injectBinderCallingUid();
		if (v6 == 2000) {
			if (v6 != 0) {
				boolean v5 = ;
				if (v5 == 0) {
					int v9 = IShortcutService$Stub.getCallingUid();
					int v8 = v9;
					int v10 = UserHandle.getUserId(v8);
					int v7 = v10;
					boolean v13 = this.mUnlockedUsers.get(p1);
					if (v13 == 0) {
						boolean v14 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
						boolean v12 = v14;
						if (v12 != 0) {
							boolean v16 = ShortcutService.isUserUnlockedL(p1);
							if (v16 != 0) {
								if (p1 == this.mLastLockedUser) {
									ShortcutService.wtf("User still locked");
									this.mLastLockedUser = p1;
									Object v18 = this.mUsers.get(p1);
									if (v18 != 0) {
										ShortcutUser v19 = ShortcutService.loadUserLocked(p1);
										if (v19 != 0) {
											ShortcutUser v20 = new ShortcutUser(ShortcutService,p1);
											this.mUsers.put(p1, );
											ShortcutService.checkPackageChanges(p1);
											ShortcutUser v15 = ;
											int v25 = this.mPackages.size();
											if ( < 0) {
												Object v26 = this.mPackages.valueAt();
												v26.resetThrottling();
												if ( < 0) {
													ShortcutService.scheduleSaveInner(p1);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void resetThrottling(){
	boolean v2 = ShortcutService.isCallerSystem();
	if (v2 != 0) {
		boolean v3 = ShortcutService.isCallerShell();
		if (v3 == 0) {
			int v5 = ShortcutService.injectBinderCallingUid();
			int v6 = UserHandle.getUserId(v5);
			int v4 = v6;
			boolean v8 = ShortcutService.isUserUnlockedL(v4);
			if (v8 != 0) {
				ShortcutUser v9 = ShortcutService.getUserShortcutsLocked(v4);
				v9.resetThrottling();
				ShortcutService.scheduleSaveUser(v4);
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void resetThrottling(){
	p0.enforceSystemOrShell();
	int v2 = p0.getCallingUserId();
	p0.resetThrottlingInner(v2);
	return;
}
