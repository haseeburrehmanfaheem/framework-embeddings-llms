The method expireRollbackForPackage has the following code snippet:

This is path 1 for the API with depth 2:
public void expireRollbackForPackage(String p1){
	RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);
	Handler v7 = RollbackManagerServiceImpl.getHandler();
	Looper v8 = v7.getLooper();
	boolean v9 = v8.isCurrentThread();
	Preconditions.checkState((v9 ^ 1));
	CompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);
	Object v12 = v11.get();
	return;
}

and the following sink code:
['RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);\nCompletableFuture v11 = CompletableFuture.runAsync(v3, this.mExecutor);\nObject v12 = v11.get();', 'RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);\nCompletableFuture v7 = CompletableFuture.runAsync(v3, this.mExecutor);\nObject v8 = v7.get();', 'RollbackManagerServiceImpl$$ExternalSyntheticLambda7 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda7(p0,p1);\np0.awaitResult(v3);']

The method expireRollbackForPackage has the following similar APIs:

- API Name: notifyStagedSession(I)I with Similarity Score: 0.9824186563491821
  - Access Control Level: SYS_OR_SIG and the following code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1);
CompletableFuture v7 = CompletableFuture.supplyAsync(v3, this.mExecutor);
Object v8 = v7.get();
int v9 = v8.intValue();
return v9;

- API Name: notifyStagedSession(I)I with Similarity Score: 0.9817450642585754
  - Access Control Level: SYS_OR_SIG and the following code:
RollbackManagerServiceImpl$$ExternalSyntheticLambda9 v3 = new RollbackManagerServiceImpl$$ExternalSyntheticLambda9(p0,p1);
CompletableFuture v7 = CompletableFuture.supplyAsync(v3, this.mExecutor);
Object v8 = v7.get();
int v9 = v8.intValue();
return v9;

