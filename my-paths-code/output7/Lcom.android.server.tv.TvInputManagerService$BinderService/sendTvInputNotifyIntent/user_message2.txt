The method sendTvInputNotifyIntent has the following code snippet:

This is path 1 for the API with depth 2:
public void sendTvInputNotifyIntent(Intent p1, int p2){
	if (v2 != 0) {
		String v3 = p1.getPackage();
		boolean v4 = TextUtils.isEmpty(v3);
		if (v4 != 0) {
			String v5 = p1.getAction();
			int v6 = v5.hashCode();
			int v7 = v5.hashCode();
			boolean v8 = v5.equals("android.media.tv.action.WATCH_NEXT_PROGRAM_BROWSABLE_DISABLED");
			if (v8 != 0) {
				long v9 = p1.getLongExtra("android.media.tv.extra.PREVIEW_PROGRAM_ID", -1);
				if ((v9 < 0) < 0) {
					long v10 = p1.getLongExtra("android.media.tv.extra.WATCH_NEXT_PROGRAM_ID", -1);
					if ((v10 < 0) < 0) {
						int v11 = Binder.getCallingPid();
						int v12 = Binder.getCallingUid();
						int v15 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
						int v14 = v15;
						int v13 = v14;
						long v16 = Binder.clearCallingIdentity();
						Context v17 = this.this$0.getContext();
						UserHandle v18 = new UserHandle(v13);
						v17.sendBroadcastAsUser(p1, v18);
						Binder.restoreCallingIdentity(v16);
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void sendTvInputNotifyIntent(Intent p1, int p2){
	if (v2 != 0) {
		String v3 = p1.getPackage();
		boolean v4 = TextUtils.isEmpty(v3);
		if (v4 != 0) {
			String v5 = p1.getAction();
			int v6 = v5.hashCode();
			int v7 = v5.hashCode();
			long v8 = p1.getLongExtra("android.media.tv.extra.PREVIEW_PROGRAM_ID", -1);
			if ((v8 < 0) < 0) {
				long v9 = p1.getLongExtra("android.media.tv.extra.WATCH_NEXT_PROGRAM_ID", -1);
				if ((v9 < 0) < 0) {
					int v10 = Binder.getCallingPid();
					int v11 = Binder.getCallingUid();
					int v14 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
					int v13 = v14;
					int v12 = v13;
					long v15 = Binder.clearCallingIdentity();
					Context v16 = this.this$0.getContext();
					UserHandle v17 = new UserHandle(v12);
					v16.sendBroadcastAsUser(p1, v17);
					Binder.restoreCallingIdentity(v15);
					return;
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void sendTvInputNotifyIntent(Intent p1, int p2){
	if (v2 != 0) {
		String v3 = p1.getPackage();
		boolean v4 = TextUtils.isEmpty(v3);
		if (v4 != 0) {
			String v5 = p1.getAction();
			int v6 = v5.hashCode();
			int v7 = v5.hashCode();
			boolean v8 = v5.equals("android.media.tv.action.WATCH_NEXT_PROGRAM_BROWSABLE_DISABLED");
			if (v8 != 0) {
				long v9 = p1.getLongExtra("android.media.tv.extra.PREVIEW_PROGRAM_ID", -1);
				if ((v9 < 0) < 0) {
					int v10 = Binder.getCallingPid();
					int v11 = Binder.getCallingUid();
					int v14 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
					int v13 = v14;
					int v12 = v13;
					long v15 = Binder.clearCallingIdentity();
					Context v16 = this.this$0.getContext();
					UserHandle v17 = new UserHandle(v12);
					v16.sendBroadcastAsUser(p1, v17);
					Binder.restoreCallingIdentity(v15);
					return;
				}
			}
		}
	}
}

and the following sink code:
['String v3 = p1.getPackage();\nboolean v4 = TextUtils.isEmpty(v3);\nString v5 = p1.getAction();\nint v6 = v5.hashCode();\nboolean v8 = v5.equals("android.media.tv.action.WATCH_NEXT_PROGRAM_BROWSABLE_DISABLED");\nlong v9 = p1.getLongExtra("android.media.tv.extra.PREVIEW_PROGRAM_ID", -1);\nlong v10 = p1.getLongExtra("android.media.tv.extra.WATCH_NEXT_PROGRAM_ID", -1);\nint v11 = Binder.getCallingPid();\nint v12 = Binder.getCallingUid();\nUserHandle v16 = new UserHandle(v13);\nv15.sendBroadcastAsUser(p1, v16);']

The method sendTvInputNotifyIntent has the following similar APIs:

- API Name: requestChannelBrowsable(Landroid/net/Uri;I)V with Similarity Score: 0.7679302096366882
  - Access Control Level: NONE and the following code:
String v5 = v3.getPackagesForUid(v4);
int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
Intent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
v21 = v12.putExtra("android.media.tv.extra.PACKAGE_NAME", v1);
UserHandle v25 = new UserHandle(v8);
v24.sendBroadcastAsUser(v12, v25);

- API Name: setAutoRevokeExempted(Ljava/lang/String;ZI)Z with Similarity Score: 0.7286423444747925
  - Access Control Level: SYS_OR_SIG and the following code:
Object v1 = Objects.requireNonNull(p1);
AndroidPackage v2 = this.mPackageManagerInt.getPackage(p1);
int v3 = Binder.getCallingUid();
boolean v6 = this.mPackageManagerInt.isCallerInstallerOfRecord(v2, v3);
int v8 = v2.getUid();
int v9 = UserHandle.getUid(p3, v8);
String v10 = v2.getPackageName();
int v11 = this.mAppOpsManager.checkOpNoThrow(98, v9, v10);
this.mAppOpsManager.setMode(97, v9, v13);

