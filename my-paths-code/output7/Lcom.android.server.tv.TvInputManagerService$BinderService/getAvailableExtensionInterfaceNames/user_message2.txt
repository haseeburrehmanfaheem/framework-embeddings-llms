The method getAvailableExtensionInterfaceNames has the following code snippet:

This is path 1 for the API with depth 2:
public List getAvailableExtensionInterfaceNames(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v3 = Binder.getCallingPid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);
		Object v16 = v15.get(p1);
		if (v16 == 0) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetserviceStateMap(v9);
			TvInputInfo v18 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(v16);
			ComponentName v19 = v18.getComponent();
			Object v20 = v17.get(v19);
			if (v20 == 0) {
				boolean v21 = TvInputManagerService$ServiceState.-$$Nest$fgetisHardware(v20);
				if (v21 == 0) {
					ITvInputService v22 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
					if (v22 == 0) {
						ITvInputService v23 = TvInputManagerService$ServiceState.-$$Nest$fgetservice(v20);
						if ( == 0) {
							ArrayList v24 = new ArrayList();
							Binder.restoreCallingIdentity(v7);
							return v24;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);\nTvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);\nMap v15 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v9);\nObject v16 = v15.get(p1);', 'TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);\nthis.mUserStates.put(p2, v12);', 'ArrayList v24 = new ArrayList();\nBinder.restoreCallingIdentity(v7);\nreturn v24;']

The method getAvailableExtensionInterfaceNames has the following similar APIs:

- API Name: getTvInputState(Ljava/lang/String;I)I with Similarity Score: 0.9820108413696289
  - Access Control Level: NONE and the following code:
int v4 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
Map v14 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v8);

- API Name: unregisterCallback(Landroid/media/tv/ITvInputManagerCallback;I)V with Similarity Score: 0.9257488250732422
  - Access Control Level: NONE and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v11);
RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
boolean v15 = v14.unregister(p1);
Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
Object v17 = v16.remove(p1);

