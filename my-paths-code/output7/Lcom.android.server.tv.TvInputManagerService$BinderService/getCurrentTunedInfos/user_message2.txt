The method getCurrentTunedInfos has the following code snippet:

This is path 1 for the API with depth 2:
public List getCurrentTunedInfos(int p1){
	if (v2 != 0) {
		int v3 = Binder.getCallingPid();
		int v4 = Binder.getCallingUid();
		int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
		int v6 = v7;
		int v5 = v6;
		Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
		TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
		if (v11 != 0) {
			TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
			this.mUserStates.put(p2, v12);
			TvInputManagerService$UserState v10 = ;
			TvInputManagerService$UserState v9 = v10;
			ArrayList v17 = new ArrayList();
			Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);
			Collection v21 = v20.values();
			Iterator v22 = v21.iterator();
			boolean v23 = v22.hasNext();
			if (v23 == 0) {
				Object v24 = v22.next();
				boolean v25 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v24);
				if (v25 == 0) {
					int v26 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v24);
					if (v26 != p4) {
						Integer v27 = Integer.valueOf(0);
						TunedInfo v28 = new TunedInfo(v29,,v31,v32,v33,,v34);
						String v29 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v24);
						if (v19 == 0) {
							Uri v30 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v24);
							boolean v31 = TvInputManagerService$SessionState.-$$Nest$fgetisRecordingSession(v24);
							boolean v32 = TvInputManagerService$SessionState.-$$Nest$fgetisVisible(v24);
							boolean v33 = TvInputManagerService$SessionState.-$$Nest$fgetisMainSession(v24);
							int v34 = .intValue();
							boolean v36 = v17.add(v28);
							boolean v37 = v22.hasNext();
							if (v37 == 0) {
								List v16 = v17;
								List v15 = v16;
								return v15;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getCurrentTunedInfos(int p1){
	if (v2 != 0) {
		int v3 = Binder.getCallingPid();
		int v4 = Binder.getCallingUid();
		int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
		int v6 = v7;
		int v5 = v6;
		Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
		TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
		if (v11 != 0) {
			TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
			this.mUserStates.put(p2, v12);
			TvInputManagerService$UserState v10 = ;
			TvInputManagerService$UserState v9 = v10;
			ArrayList v17 = new ArrayList();
			Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);
			Collection v21 = v20.values();
			Iterator v22 = v21.iterator();
			boolean v23 = v22.hasNext();
			if (v23 == 0) {
				Object v24 = v22.next();
				boolean v25 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v24);
				if (v25 == 0) {
					int v26 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v24);
					if (v26 != p4) {
						Map v27 = TvInputManagerService$UserState.-$$Nest$fgetmAppTagMap(p2);
						int v28 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v24);
						Integer v29 = Integer.valueOf(v28);
						Object v30 = v27.get(v29);
						if (v30 != 0) {
							ComponentName v31 = TvInputManagerService$SessionState.-$$Nest$fgetcomponentName(v24);
							String v32 = v31.getPackageName();
							boolean v33 = TvInputManagerService.isSystemApp(v32);
							if (v33 == 0) {
								TunedInfo v34 = new TunedInfo(v35,,v37,v38,v39,,v40);
								String v35 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v24);
								if (v19 == 0) {
									Uri v36 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v24);
									boolean v37 = TvInputManagerService$SessionState.-$$Nest$fgetisRecordingSession(v24);
									boolean v38 = TvInputManagerService$SessionState.-$$Nest$fgetisVisible(v24);
									boolean v39 = TvInputManagerService$SessionState.-$$Nest$fgetisMainSession(v24);
									int v40 = .intValue();
									boolean v42 = v17.add(v34);
									boolean v43 = v22.hasNext();
									if (v43 == 0) {
										List v16 = v17;
										List v15 = v16;
										return v15;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getCurrentTunedInfos(int p1){
	if (v2 != 0) {
		int v3 = Binder.getCallingPid();
		int v4 = Binder.getCallingUid();
		int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
		int v6 = v7;
		int v5 = v6;
		Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
		TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
		if (v11 != 0) {
			TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
			this.mUserStates.put(p2, v12);
			TvInputManagerService$UserState v10 = ;
			TvInputManagerService$UserState v9 = v10;
			ArrayList v17 = new ArrayList();
			Map v20 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(p2);
			Collection v21 = v20.values();
			Iterator v22 = v21.iterator();
			boolean v23 = v22.hasNext();
			if (v23 == 0) {
				Object v24 = v22.next();
				boolean v25 = TvInputManagerService$SessionState.-$$Nest$fgetisCurrent(v24);
				if (v25 == 0) {
					int v26 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v24);
					if (v26 != p4) {
						Map v27 = TvInputManagerService$UserState.-$$Nest$fgetmAppTagMap(p2);
						int v28 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(v24);
						Integer v29 = Integer.valueOf(v28);
						Object v30 = v27.get(v29);
						if (v30 != 0) {
							ComponentName v31 = TvInputManagerService$SessionState.-$$Nest$fgetcomponentName(v24);
							String v32 = v31.getPackageName();
							boolean v33 = TvInputManagerService.isSystemApp(v32);
							if (v33 == 0) {
								TunedInfo v34 = new TunedInfo(v35,,v37,v38,v39,,v40);
								String v35 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v24);
								if (v19 == 0) {
									Uri v36 = TvInputManagerService$SessionState.-$$Nest$fgetcurrentChannel(v24);
									boolean v37 = TvInputManagerService$SessionState.-$$Nest$fgetisRecordingSession(v24);
									boolean v38 = TvInputManagerService$SessionState.-$$Nest$fgetisVisible(v24);
									boolean v39 = TvInputManagerService$SessionState.-$$Nest$fgetisMainSession(v24);
									int v40 = .intValue();
									boolean v42 = v17.add(v34);
									boolean v43 = v22.hasNext();
									if (v43 == 0) {
										List v16 = v17;
										List v15 = v16;
										return v15;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);\nTunedInfo v28 = new TunedInfo(v29, ,v31,v32,v33,,v34);\nthis.mUserStates.put(p2, v12);', 'int v6 = this.this$0.resolveCallingUserId(v3, v4, p1, "getTvCurrentChannelInfos");\nList v11 = this.this$0.getCurrentTunedInfosInternalLocked(v8, v3, v4);', 'int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v3, v4, p1, "getTvCurrentChannelInfos");\nList v8 = TvInputManagerService.-$$Nest$mgetCurrentTunedInfosInternalLocked(this.this$0, v7, v3, v4);']

The method getCurrentTunedInfos has the following similar APIs:

- API Name: getAvailableExtensionInterfaceNames(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.8423998951911926
  - Access Control Level: SYS_OR_SIG and the following code:
TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v12);

- API Name: removeBlockedRating(Ljava/lang/String;I)V with Similarity Score: 0.8369720578193665
  - Access Control Level: SYS_OR_SIG and the following code:
TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
this.mUserStates.put(p2, v12);
PersistentDataStore v15 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v9);
TvContentRating v16 = TvContentRating.unflattenFromString(p1);
boolean v21 = this.mBlockedRatings.remove(v16);

