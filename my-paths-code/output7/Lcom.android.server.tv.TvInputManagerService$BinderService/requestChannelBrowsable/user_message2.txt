The method requestChannelBrowsable has the following code snippet:

This is path 1 for the API with depth 2:
public void requestChannelBrowsable(Uri p1, int p2){
	Context v2 = this.mContext;
	PackageManager v3 = v2.getPackageManager();
	int v4 = Binder.getCallingUid();
	String v5 = v3.getPackagesForUid(v4);
	if (v5 == 0) {
		if (v5.length <= 0) {
			String v1 = v5[0];
			int v6 = Binder.getCallingPid();
			int v7 = Binder.getCallingUid();
			int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
			int v9 = v10;
			int v8 = v9;
			long v11 = Binder.clearCallingIdentity();
			Intent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
			Context v14 = this.this$0.getContext();
			PackageManager v15 = v14.getPackageManager();
			List v16 = v15.queryBroadcastReceivers(v12, 0);
			if (v16 == 0) {
				Iterator v17 = v16.iterator();
				boolean v18 = v17.hasNext();
				if (v18 == 0) {
					Object v19 = v17.next();
					long v20 = ContentUris.parseId(p1);
					Intent v21 = v12.putExtra("android.media.tv.extra.CHANNEL_ID", v20);
					Intent v22 = v12.putExtra("android.media.tv.extra.PACKAGE_NAME", v1);
					Intent v23 = v12.setPackage(ActivityInfo.packageName);
					Context v24 = this.this$0.getContext();
					UserHandle v25 = new UserHandle(v8);
					v24.sendBroadcastAsUser(v12, v25);
					boolean v28 = v17.hasNext();
					if (v28 == 0) {
						Binder.restoreCallingIdentity(v11);
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void requestChannelBrowsable(Uri p1, int p2){
	Context v2 = this.mContext;
	PackageManager v3 = v2.getPackageManager();
	int v4 = Binder.getCallingUid();
	String v5 = v3.getPackagesForUid(v4);
	if (v5 == 0) {
		if (v5.length <= 0) {
			String v1 = "unknown";
			int v6 = Binder.getCallingPid();
			int v7 = Binder.getCallingUid();
			int v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
			int v9 = v10;
			int v8 = v9;
			long v11 = Binder.clearCallingIdentity();
			Intent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
			Context v14 = this.this$0.getContext();
			PackageManager v15 = v14.getPackageManager();
			List v16 = v15.queryBroadcastReceivers(v12, 0);
			if (v16 == 0) {
				Iterator v17 = v16.iterator();
				boolean v18 = v17.hasNext();
				if (v18 == 0) {
					Object v19 = v17.next();
					long v20 = ContentUris.parseId(p1);
					Intent v21 = v12.putExtra("android.media.tv.extra.CHANNEL_ID", v20);
					Intent v22 = v12.putExtra("android.media.tv.extra.PACKAGE_NAME", v1);
					Intent v23 = v12.setPackage(ActivityInfo.packageName);
					Context v24 = this.this$0.getContext();
					UserHandle v25 = new UserHandle(v8);
					v24.sendBroadcastAsUser(v12, v25);
					boolean v28 = v17.hasNext();
					if (v28 == 0) {
						Binder.restoreCallingIdentity(v11);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['String v5 = v3.getPackagesForUid(v4);\nint v10 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);\nIntent v12 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");\nv21 = v12.putExtra("android.media.tv.extra.PACKAGE_NAME", v1);\nUserHandle v25 = new UserHandle(v8);\nv24.sendBroadcastAsUser(v12, v25);', 'int v9 = this.this$0.resolveCallingUserId(v6, v7, p2, "requestChannelBrowsable");\nIntent v11 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");\nv20 = v11.putExtra("android.media.tv.extra.CHANNEL_ID", v19);\nv21 = v11.putExtra("android.media.tv.extra.PACKAGE_NAME", v1);\nUserHandle v24 = new UserHandle(v8);\nv23.sendBroadcastAsUser(v11, v24);', 'String v1 = p0.getCallingPackageName();\nint v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "requestChannelBrowsable");\nIntent v6 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");\nv15 = v6.putExtra("android.media.tv.extra.CHANNEL_ID", v14);\nv16 = v6.putExtra("android.media.tv.extra.PACKAGE_NAME", v1);\nUserHandle v19 = new UserHandle(v4);\nv18.sendBroadcastAsUser(v6, v19);']

The method requestChannelBrowsable has the following similar APIs:

- API Name: notifyResourceGranted(II)V with Similarity Score: 0.8074592351913452
  - Access Control Level: NONE and the following code:
Intent v20 = new Intent("android.intent.action.MEDIA_RESOURCE_GRANTED");
Intent v22 = v20.putExtra("android.intent.extra.PACKAGES", v12);
Intent v23 = v20.putExtra("android.intent.extra.MEDIA_RESOURCE_TYPE", p2);
Context v27 = this.this$0.getContext();
v27.sendBroadcastAsUser(v20, v26, "android.permission.RECEIVE_MEDIA_RESOURCE_USAGE");

- API Name: requestBroadcastInfo(Landroid/os/IBinder;Landroid/media/tv/BroadcastInfoRequest;I)V with Similarity Score: 0.7749274969100952
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
TvInputManagerService$SessionState v11 = TvInputManagerService.getSessionStateLocked(p2, p3, v10);
ITvInputSession v14 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2);
v12.requestBroadcastInfo(p2);

