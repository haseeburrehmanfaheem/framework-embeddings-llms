This is path 1 for the API with depth 2:
public boolean isSingleSessionActive(int p1){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v7 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v6 = v7;
	int v5 = v6;
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		Map v15 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
		int v16 = v15.size();
		if (v16 != 1) {
			Map v17 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
			int v18 = v17.size();
			if (v18 != 2) {
				Map v19 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v9);
				Collection v20 = v19.values();
				TvInputManagerService$SessionState v21 = new TvInputManagerService$SessionState(2);
				Object v22 = v20.toArray(v21);
				IBinder v23 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v22[0]);
				if (v23 != 0) {
					IBinder v24 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v22[1]);
					if (v24 == 0) {
						Binder.restoreCallingIdentity(v2);
						return ;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isSingleSessionActive(int p1){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v6 = this.this$0.resolveCallingUserId(v4, v3, p1, "isSingleSessionActive");
	int v5 = v6;
	Object v7 = this.mLock;
	TvInputManagerService$UserState v9 = this.this$0.getOrCreateUserStateLocked(v5);
	TvInputManagerService$UserState v8 = v9;
	Map v10 = this.sessionStateMap;
	int v11 = v10.size();
	if (v11 != 1) {
		Map v12 = this.sessionStateMap;
		int v13 = v12.size();
		if (v13 != 2) {
			Map v14 = this.sessionStateMap;
			Collection v15 = v14.values();
			TvInputManagerService$SessionState v16 = new TvInputManagerService$SessionState(2);
			Object v17 = v15.toArray(v16);
			IBinder v18 = this.hardwareSessionToken;
			if (v18 != 0) {
				IBinder v19 = this.hardwareSessionToken;
				if (v19 == 0) {
					Binder.restoreCallingIdentity(v2);
					return ;
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isSingleSessionActive(int p1){
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p1, "isSingleSessionActive");
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);
	Map v8 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
	int v9 = v8.size();
	if (v9 != 1) {
		Map v10 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
		int v11 = v10.size();
		if (v11 != 2) {
			Map v12 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
			Collection v13 = v12.values();
			TvInputManagerService$SessionState v14 = new TvInputManagerService$SessionState(2);
			Object v15 = v13.toArray(v14);
			IBinder v16 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v15[0]);
			if (v16 != 0) {
				IBinder v17 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v15[1]);
				if (v17 == 0) {
					Binder.restoreCallingIdentity(v2);
					return ;
				}
			}
		}
	}
}
