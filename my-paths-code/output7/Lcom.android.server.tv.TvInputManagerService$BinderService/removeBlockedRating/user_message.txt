This is path 1 for the API with depth 2:
public void removeBlockedRating(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v6 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v5 = v6;
	int v4 = v5;
	long v7 = Binder.clearCallingIdentity();
	Object v8 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v11 = TvInputManagerService.getUserStateLocked(p2);
	if (v11 != 0) {
		TvInputManagerService$UserState v12 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v12);
		TvInputManagerService$UserState v10 = ;
		TvInputManagerService$UserState v9 = v10;
		PersistentDataStore v15 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v9);
		TvContentRating v16 = TvContentRating.unflattenFromString(p1);
		if (this.mLoaded != 0) {
			PersistentDataStore.load();
			this.mLoaded = 1;
			if (v16 == 0) {
				boolean v20 = this.mBlockedRatings.contains(v16);
				if (v20 == 0) {
					boolean v21 = this.mBlockedRatings.remove(v16);
					this.mBlockedRatingsChanged = 1;
					this.mHandler.removeCallbacks(this.mSaveRunnable);
					boolean v24 = this.mHandler.post(this.mSaveRunnable);
					Binder.restoreCallingIdentity(v7);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void removeBlockedRating(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v5 = this.this$0.resolveCallingUserId(v2, v3, p2, "removeBlockedRating");
	int v4 = v5;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = this.mLock;
	TvInputManagerService$UserState v9 = this.this$0.getOrCreateUserStateLocked(v4);
	TvInputManagerService$UserState v8 = v9;
	PersistentDataStore v10 = this.persistentDataStore;
	boolean v12 = TextUtils.isEmpty(p1);
	if (v12 != 0) {
		String v13 = p1.split("/");
		if (v13.length < 3) {
			if (v13.length <= 3) {
				String v14 = new String((v13.length - 3));
				System.arraycopy(v13, 3, v14, 0, v14.length);
				TvContentRating v16 = new TvContentRating(v13[0],v13[1],v13[2],v14);
				TvContentRating v11 = v16;
				PersistentDataStore.loadIfNeeded();
				if (v11 == 0) {
					boolean v20 = this.mBlockedRatings.contains(v11);
					if (v20 == 0) {
						boolean v21 = this.mBlockedRatings.remove(v11);
						this.mBlockedRatingsChanged = 1;
						PersistentDataStore.postSave();
						Binder.restoreCallingIdentity(v6);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void removeBlockedRating(String p1, int p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "removeBlockedRating");
	long v5 = Binder.clearCallingIdentity();
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v4);
	PersistentDataStore v8 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v7);
	TvContentRating v9 = TvContentRating.unflattenFromString(p1);
	v8.removeBlockedRating(v9);
	Binder.restoreCallingIdentity(v5);
	return;
}
