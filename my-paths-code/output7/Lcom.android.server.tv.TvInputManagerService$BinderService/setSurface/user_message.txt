This is path 1 for the API with depth 2:
public void setSurface(IBinder p1, Surface p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	Object v10 = this.mUserStates.get(p2);
	TvInputManagerService$UserState v9 = v10;
	TvInputManagerService$UserState v8 = v9;
	TvInputManagerService$UserState v13 = TvInputManagerService.getOrCreateUserStateLocked(p4);
	TvInputManagerService$SessionState v14 = TvInputManagerService.getSessionStateLocked(p2, p3, v13);
	TvInputManagerService$SessionState v12 = v14;
	TvInputManagerService$SessionState v11 = v12;
	IBinder v15 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v11);
	if (v15 != 0) {
		ITvInputSession v18 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p2);
		if (v18 == 0) {
			ITvInputSession v17 = v18;
			ITvInputSession v16 = v17;
			v16.setSurface(p2);
			if (p2 != 0) {
				boolean v20 = TvInputManagerService$SessionState.-$$Nest$fgetisVisible(v11);
				if (v20 == ) {
					TvInputManagerService$SessionState.-$$Nest$fputisVisible(v11, );
					if (v32 == 0) {
						int v33 = Pair.first.intValue();
						int v34 = Pair.second.intValue();
						List v35 = TvInputManagerService.getCurrentTunedInfosInternalLocked(p2, v33, v34);
						v27.onCurrentTunedInfosUpdated(v35);
						RemoteCallbackList v37 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(p2);
						v37.finishBroadcast();
						if (p2 == 0) {
							p2.release();
							if ( == 0) {
								if (p2 != 0) {
									if (p2 == 0) {
										Map v42 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(p2);
										String v43 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(p1);
										Object v44 = v42.get(v43);
										TvInputManagerService$TvInputState v41 = v44;
										TvInputManagerService$TvInputState v40 = v41;
										if (p4 == 0) {
											int v47 = TvInputManagerService$TvInputState.-$$Nest$fgetuid(p4);
											TvInputInfo v48 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(p4);
											int v49 = v48.getType();
											if (v49 != 0) {
												int v50 = TvInputManagerService$TvInputState.-$$Nest$fgetinputNumber(p4);
												TvInputInfo v51 = TvInputManagerService$TvInputState.-$$Nest$fgetinfo(p4);
												HdmiDeviceInfo v52 = v51.getHdmiDeviceInfo();
												if (v52 == 0) {
													int v53 = v52.getPortId();
													[I v54 = new [I(2);
													int v55 = TvInputManagerService$SessionState.-$$Nest$fgetcallingUid(p3);
													String v56 = new String(2);
													String v57 = TvInputManagerService$SessionState.-$$Nest$fgetsessionId(p3);
													FrameworkStatsLog.write(327, v54, v56, p2, v57, , , );
													Binder.restoreCallingIdentity(v6);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setSurface(IBinder p1, Surface p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.this$0.resolveCallingUserId(v2, v1, p3, "setSurface");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mLock;
	TvInputManagerService$UserState v8 = this.this$0.getUserStateLocked(p3);
	TvInputManagerService$UserState v7 = v8;
	TvInputManagerService$SessionState v10 = this.this$0.getSessionStateLocked(p1, v1, v3);
	TvInputManagerService$SessionState v9 = v10;
	IBinder v11 = this.hardwareSessionToken;
	if (v11 != 0) {
		ITvInputSession v13 = this.this$0.getSessionLocked(v9);
		ITvInputSession v12 = v13;
		v12.setSurface(p2);
		if (p2 != 0) {
			boolean v15 = this.isVisible;
			if (v15 == ) {
				this.isVisible = ;
				this.this$0.notifyCurrentChannelInfosUpdatedLocked(v7);
				if (p2 == 0) {
					p2.release();
					if ( == 0) {
						if (p2 != 0) {
							TvInputManagerService$TvInputState v21 = TvInputManagerService.getTvInputState(, );
							TvInputManagerService$TvInputState v20 = v21;
							this.this$0.logTuneStateChanged(, , v20);
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setSurface(IBinder p1, Surface p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "setSurface");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetUserStateLocked(this.this$0, p3);
	TvInputManagerService$SessionState v7 = TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v3);
	IBinder v8 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v7);
	if (v8 != 0) {
		ITvInputSession v9 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, v7);
		v9.setSurface(p2);
		if (p2 != 0) {
			boolean v11 = TvInputManagerService$SessionState.-$$Nest$fgetisVisible(v7);
			if (v11 == ) {
				TvInputManagerService$SessionState.-$$Nest$fputisVisible(v7, );
				TvInputManagerService.-$$Nest$mnotifyCurrentChannelInfosUpdatedLocked(this.this$0, v6);
				if (p2 == 0) {
					p2.release();
					if ( == 0) {
						if (p2 != 0) {
							TvInputManagerService$TvInputState v15 = TvInputManagerService.-$$Nest$smgetTvInputState(, );
							TvInputManagerService.-$$Nest$mlogTuneStateChanged(this.this$0, , , v15);
							Binder.restoreCallingIdentity(v4);
							return;
						}
					}
				}
			}
		}
	}
}
