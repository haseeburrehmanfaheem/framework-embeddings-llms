The method openDvbDevice has the following code snippet:

This is path 1 for the API with depth 1:
public ParcelFileDescriptor openDvbDevice(DvbDeviceInfo p1, int p2){
	if (v2 != 0) {
		File v3 = new File("/dev");
		String v5 = v3.list();
		if ( >= v5.length) {
			boolean v6 = TextUtils.equals("dvb", v5[]);
			if (v6 == 0) {
				File v7 = new File("/dev/dvb");
				String v9 = v7.list();
				if ( >= v9.length) {
					if ( == 0) {
						long v10 = Binder.clearCallingIdentity();
						if (p2 == 0) {
							if (p2 == 1) {
								if (p2 != 2) {
									if ( == 0) {
										Object v11 = new Object(2);
										int v12 = this.mAdapterId;
										Integer v13 = Integer.valueOf(v12);
										int v14 = this.mDeviceId;
										Integer v15 = Integer.valueOf(v14);
										String v16 = String.format(, v11);
										File v17 = new File();
										Binder.restoreCallingIdentity(v10);
										return 0;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v12 = p1.getAdapterId();\nint v14 = p1.getDeviceId();\nInteger v13 = Integer.valueOf(v12);\nInteger v15 = Integer.valueOf(v14);\nString v16 = String.format(, v11);']

The method openDvbDevice has the following similar APIs:

- API Name: addHardwareDevice(I)V with Similarity Score: 0.7573664784431458
  - Access Control Level: NONE and the following code:
Integer v4 = Integer.valueOf(p1);
this.mDeviceId = v4;
TvInputHardwareInfo v14 = new TvInputHardwareInfo(0);
int v16 = this.mDeviceId.intValue();
TvInputHardwareInfo.-$$Nest$fputmDeviceId(v14, v16);
TvInputHardwareManager$Connection v29 = new TvInputHardwareManager$Connection(TvInputHardwareManager,v11);

- API Name: getPhysicalAddress()I with Similarity Score: 0.7028000354766846
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = v3.getPhysicalAddress();
return v4;

