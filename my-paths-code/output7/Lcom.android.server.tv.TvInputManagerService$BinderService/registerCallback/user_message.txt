This is path 1 for the API with depth 2:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v5 = ActivityManager.handleIncomingUser(p2, p3, p4, 0, 0, p5, 0);
	int v4 = v5;
	int v3 = v4;
	long v6 = Binder.clearCallingIdentity();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v10 = TvInputManagerService.getUserStateLocked(p2);
	if (v10 != 0) {
		TvInputManagerService$UserState v11 = new TvInputManagerService$UserState(this.mContext,p2,0);
		this.mUserStates.put(p2, v11);
		TvInputManagerService$UserState v9 = ;
		TvInputManagerService$UserState v8 = v9;
		RemoteCallbackList v14 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v8);
		boolean v15 = v14.register(p1);
		if (v15 != 0) {
			Map v16 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v8);
			Integer v17 = Integer.valueOf(v1);
			Integer v18 = Integer.valueOf(v2);
			Pair v19 = Pair.create(v17, v18);
			Object v20 = v16.put(p1, v19);
			Binder.restoreCallingIdentity(v6);
			return;
		}
	}
}


This is path 2 for the API with depth 1:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.this$0.resolveCallingUserId(v1, v2, p2, "registerCallback");
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mLock;
	TvInputManagerService$UserState v8 = this.this$0.getOrCreateUserStateLocked(v3);
	TvInputManagerService$UserState v7 = v8;
	RemoteCallbackList v9 = this.mCallbacks;
	boolean v10 = v9.register(p1);
	if (v10 != 0) {
		Map v11 = this.callbackPidUidMap;
		Integer v12 = Integer.valueOf(v1);
		Integer v13 = Integer.valueOf(v2);
		Pair v14 = Pair.create(v12, v13);
		Object v15 = v11.put(p1, v14);
		Binder.restoreCallingIdentity(v5);
		return;
	}
}


This is path 3 for the API with depth 0:
public void registerCallback(ITvInputManagerCallback p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "registerCallback");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	RemoteCallbackList v7 = TvInputManagerService$UserState.-$$Nest$fgetmCallbacks(v6);
	boolean v8 = v7.register(p1);
	if (v8 != 0) {
		Map v9 = TvInputManagerService$UserState.-$$Nest$fgetcallbackPidUidMap(v6);
		Integer v10 = Integer.valueOf(v1);
		Integer v11 = Integer.valueOf(v2);
		Pair v12 = Pair.create(v10, v11);
		Object v13 = v9.put(p1, v12);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}
