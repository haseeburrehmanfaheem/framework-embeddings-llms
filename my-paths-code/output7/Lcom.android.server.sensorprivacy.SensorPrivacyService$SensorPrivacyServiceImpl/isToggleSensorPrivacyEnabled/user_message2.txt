The method isToggleSensorPrivacyEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isToggleSensorPrivacyEnabled(int p1, int p2){
	int v2 = this.mCurrentUser;
	SensorState v3 = this.mSensorPrivacyStateController.getState(p1, v2, p2);
	int v5 = this.mStateType;
	if (v5 != 1) {
		boolean v4 = ;
		return v4;
	}
}

and the following sink code:
['int v2 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);\nSensorState v3 = this.mSensorPrivacyStateController.getState(p1, v2, p2);\nboolean v4 = v3.isEnabled();\nreturn v4;', 'int v2 = this.mCurrentUser;\nSensorState v3 = this.mSensorPrivacyStateController.getState(p1, v2, p2);']

The method isToggleSensorPrivacyEnabled has the following similar APIs:

- API Name: isCombinedToggleSensorPrivacyEnabled(I)Z with Similarity Score: 0.901045560836792
  - Access Control Level: SYS_OR_SIG and the following code:
SensorState v4 = this.mSensorPrivacyStateController.getState(1, v3, p1);
boolean v5 = v4.isEnabled();
int v8 = SensorPrivacyService.-$$Nest$fgetmCurrentUser(this.this$0);
SensorState v9 = this.mSensorPrivacyStateController.getState(2, v8, p1);
boolean v10 = v9.isEnabled();

- API Name: isSensorPrivacyEnabled()Z with Similarity Score: 0.8653292655944824
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = this.mSensorPrivacyStateController.getAllSensorState();
return v2;

