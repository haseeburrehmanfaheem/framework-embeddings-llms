The method getShortcutIconFd has the following code snippet:

This is path 1 for the API with depth 2:
public ParcelFileDescriptor getShortcutIconFd(String p1, String p2, String p3, int p4){
	int v4 = ILauncherApps$Stub.getCallingUid();
	int v3 = v4;
	int v6 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	int v7 = UserHandle.getUserId(v6);
	int v5 = v7;
	int v9 = ILauncherApps$Stub.getCallingPid();
	int v8 = v9;
	if (p1 != v5) {
		if (v11 == 0) {
			long v12 = LauncherAppsService$LauncherAppsImpl.injectClearCallingIdentity();
			UserInfo v13 = this.mUm.getUserInfo(v5);
			if (v13 == 0) {
				boolean v14 = v13.isProfile();
				if (v14 == 0) {
					LauncherAppsService$LauncherAppsImpl.injectRestoreCallingIdentity(v12);
					boolean v10 = 0;
					boolean v2 = v10;
					if (v2 != 0) {
						AndroidFuture v26 = new AndroidFuture();
						int v30 = ILauncherApps$Stub.getCallingUid();
						int v29 = v30;
						int v31 = UserHandle.getUserId(v29);
						int v28 = v31;
						this.mShortcutServiceInternal.getShortcutIconFdAsync(v28, p1, p2, p3, p4, v26);
						Object v33 = v26.get();
						return v33;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public ParcelFileDescriptor getShortcutIconFd(String p1, String p2, String p3, int p4){
	int v4 = ILauncherApps$Stub.getCallingUid();
	int v3 = v4;
	int v6 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	int v7 = UserHandle.getUserId(v6);
	int v5 = v7;
	int v9 = ILauncherApps$Stub.getCallingPid();
	int v8 = v9;
	if (p1 != v5) {
		if (v11 == 0) {
			long v12 = LauncherAppsService$LauncherAppsImpl.injectClearCallingIdentity();
			UserInfo v13 = this.mUm.getUserInfo(v5);
			if (v13 == 0) {
				boolean v14 = v13.isProfile();
				if (v14 == 0) {
					LauncherAppsService$LauncherAppsImpl.injectRestoreCallingIdentity(v12);
					boolean v16 = this.mUserManagerInternal.isProfileAccessible(v5, p1, p2, 1);
					boolean v10 = v16;
					boolean v2 = v10;
					if (v2 != 0) {
						AndroidFuture v17 = new AndroidFuture();
						int v21 = ILauncherApps$Stub.getCallingUid();
						int v20 = v21;
						int v22 = UserHandle.getUserId(v20);
						int v19 = v22;
						this.mShortcutServiceInternal.getShortcutIconFdAsync(v19, p1, p2, p3, p4, v17);
						Object v24 = v17.get();
						return v24;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public ParcelFileDescriptor getShortcutIconFd(String p1, String p2, String p3, int p4){
	int v4 = ILauncherApps$Stub.getCallingUid();
	int v3 = v4;
	int v6 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	int v7 = UserHandle.getUserId(v6);
	int v5 = v7;
	int v9 = ILauncherApps$Stub.getCallingPid();
	int v8 = v9;
	if (p1 != v5) {
		if (v11 == 0) {
			long v12 = LauncherAppsService$LauncherAppsImpl.injectClearCallingIdentity();
			UserInfo v13 = this.mUm.getUserInfo(v5);
			if (v13 == 0) {
				boolean v14 = v13.isProfile();
				if (v14 == 0) {
					LauncherAppsService$LauncherAppsImpl.injectRestoreCallingIdentity(v12);
					boolean v10 = 0;
					boolean v2 = v10;
					if (v2 != 0) {
						return 0;
					}
				}
			}
		}
	}
}

and the following sink code:
['int v30 = ILauncherApps$Stub.getCallingUid();\nint v31 = UserHandle.getUserId(v29);\nthis.mShortcutServiceInternal.getShortcutIconFdAsync(v28, p1, p2, p3, p4, v26);\nObject v33 = v26.get();\nreturn v33;', 'int v10 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();\nint v11 = UserHandle.getUserId(v10);\nthis.mShortcutServiceInternal.getShortcutIconFdAsync(v9, p1, p2, p3, p4, v7);\nObject v13 = v7.get();\nreturn v13;', 'int v5 = p0.getCallingUserId();\nthis.mShortcutServiceInternal.getShortcutIconFdAsync(v5, p1, p2, p3, p4, v3);\nObject v7 = v3.get();\nreturn v7;']

The method getShortcutIconFd has the following similar APIs:

- API Name: getShortcutIconUri(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.8941084742546082
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
boolean v6 = LauncherAppsService$LauncherAppsImpl.canAccessProfile(v3, v4, v5, p4, "Cannot access shortcuts");
AndroidFuture v7 = new AndroidFuture();
this.mShortcutServiceInternal.getShortcutIconUriAsync(v9, p1, p2, p3, p4, v7);
Object v13 = v7.get();
return v13;

- API Name: getShortcutIconUri(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.8928375244140625
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = ILauncherApps$Stub.getCallingUid();
int v6 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
int v7 = UserHandle.getUserId(v6);
long v12 = LauncherAppsService$LauncherAppsImpl.injectClearCallingIdentity();
UserInfo v13 = this.mUm.getUserInfo(v5);
AndroidFuture v26 = new AndroidFuture();
this.mShortcutServiceInternal.getShortcutIconUriAsync(v28, p1, p2, p3, p4, v26);
Object v33 = v26.get();
return v33;

