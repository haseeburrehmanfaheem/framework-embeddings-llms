The method getShortcutIconResId has the following code snippet:

This is path 1 for the API with depth 2:
public int getShortcutIconResId(String p1, String p2, String p3, int p4){
	int v4 = ILauncherApps$Stub.getCallingUid();
	int v3 = v4;
	int v6 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	int v7 = UserHandle.getUserId(v6);
	int v5 = v7;
	int v9 = ILauncherApps$Stub.getCallingPid();
	int v8 = v9;
	if (p1 != v5) {
		if (v11 == 0) {
			long v12 = LauncherAppsService$LauncherAppsImpl.injectClearCallingIdentity();
			UserInfo v13 = this.mUm.getUserInfo(v5);
			if (v13 == 0) {
				boolean v14 = v13.isProfile();
				if (v14 == 0) {
					LauncherAppsService$LauncherAppsImpl.injectRestoreCallingIdentity(v12);
					boolean v10 = 0;
					boolean v2 = v10;
					if (v2 != 0) {
						int v28 = ILauncherApps$Stub.getCallingUid();
						int v27 = v28;
						int v29 = UserHandle.getUserId(v27);
						int v26 = v29;
						int v30 = this.mShortcutServiceInternal.getShortcutIconResId(v26, p1, p2, p3, p4);
						return v30;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getShortcutIconResId(String p1, String p2, String p3, int p4){
	int v4 = ILauncherApps$Stub.getCallingUid();
	int v3 = v4;
	int v6 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	int v7 = UserHandle.getUserId(v6);
	int v5 = v7;
	int v9 = ILauncherApps$Stub.getCallingPid();
	int v8 = v9;
	if (p1 != v5) {
		if (v11 == 0) {
			long v12 = LauncherAppsService$LauncherAppsImpl.injectClearCallingIdentity();
			UserInfo v13 = this.mUm.getUserInfo(v5);
			if (v13 == 0) {
				boolean v14 = v13.isProfile();
				if (v14 == 0) {
					LauncherAppsService$LauncherAppsImpl.injectRestoreCallingIdentity(v12);
					boolean v16 = this.mUserManagerInternal.isProfileAccessible(v5, p1, p2, 1);
					boolean v10 = v16;
					boolean v2 = v10;
					if (v2 != 0) {
						int v19 = ILauncherApps$Stub.getCallingUid();
						int v18 = v19;
						int v20 = UserHandle.getUserId(v18);
						int v17 = v20;
						int v21 = this.mShortcutServiceInternal.getShortcutIconResId(v17, p1, p2, p3, p4);
						return v21;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int getShortcutIconResId(String p1, String p2, String p3, int p4){
	int v4 = ILauncherApps$Stub.getCallingUid();
	int v3 = v4;
	int v6 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	int v7 = UserHandle.getUserId(v6);
	int v5 = v7;
	int v9 = ILauncherApps$Stub.getCallingPid();
	int v8 = v9;
	if (p1 != v5) {
		if (v11 == 0) {
			long v12 = LauncherAppsService$LauncherAppsImpl.injectClearCallingIdentity();
			UserInfo v13 = this.mUm.getUserInfo(v5);
			if (v13 == 0) {
				boolean v14 = v13.isProfile();
				if (v14 == 0) {
					LauncherAppsService$LauncherAppsImpl.injectRestoreCallingIdentity(v12);
					boolean v10 = 0;
					boolean v2 = v10;
					if (v2 != 0) {
						return 0;
					}
				}
			}
		}
	}
}

and the following sink code:
['int v30 = this.mShortcutServiceInternal.getShortcutIconResId(v26, p1, p2, p3, p4);\nreturn v30;', 'boolean v6 = LauncherAppsService$LauncherAppsImpl.canAccessProfile(v3, v4, v5, p4, "Cannot access shortcuts");\nint v10 = this.mShortcutServiceInternal.getShortcutIconResId(v7, p1, p2, p3, p4);\nreturn v10;', 'boolean v2 = p0.canAccessProfile(p4, "Cannot access shortcuts");\nint v4 = this.mShortcutServiceInternal.getShortcutIconResId(v3, p1, p2, p3, p4);\nreturn v4;']

The method getShortcutIconResId has the following similar APIs:

- API Name: getShortcutIconUri(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.9296398758888245
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = p0.canAccessProfile(p4, "Cannot access shortcuts");
AndroidFuture v3 = new AndroidFuture();
this.mShortcutServiceInternal.getShortcutIconUriAsync(v5, p1, p2, p3, p4, v3);
Object v7 = v3.get();
return v7;

- API Name: getShortcutIconUri(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.9272634983062744
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
boolean v6 = LauncherAppsService$LauncherAppsImpl.canAccessProfile(v3, v4, v5, p4, "Cannot access shortcuts");
AndroidFuture v7 = new AndroidFuture();
this.mShortcutServiceInternal.getShortcutIconUriAsync(v9, p1, p2, p3, p4, v7);
Object v13 = v7.get();
return v13;

