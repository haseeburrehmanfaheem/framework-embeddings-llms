This is path 1 for the API with depth 2:
public ParceledListSlice getAllSessions(String p1){
	int v3 = ILauncherApps$Stub.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	int v6 = this.mIPM.getPackageUid(p1, 794624, v5);
	if ( >= 0) {
		if ( != v2) {
			ArrayList v7 = new ArrayList();
			int v11 = ILauncherApps$Stub.getCallingUid();
			int v10 = v11;
			int v12 = UserHandle.getUserId(v10);
			int v9 = v12;
			[I v13 = this.mUm.getEnabledProfileIds(v9);
			int v14 = Binder.getCallingUid();
			long v15 = Binder.clearCallingIdentity();
			if ( >= v13.length) {
				PackageInstallerService v16 = p0.getPackageInstallerService();
				ArrayList v21 = new ArrayList();
				int v23 = this.mSessions.size();
				if ( >= v23) {
					Object v24 = this.mSessions.valueAt();
					if (PackageInstallerSession.userId != v13[]) {
						if (this.mParentSessionId == -1) {
							boolean v25 = ;
							if (v25 != 0) {
								boolean v26 = PackageInstaller$SessionParams.isStaged;
								if (v26 == 0) {
									boolean v27 = this.mDestroyed;
									if (v27 != 0) {
										boolean v29 = PackageInstallerSession.shouldScrubData(v18);
										PackageInstaller$SessionInfo v30 = PackageInstallerSession.generateInfoInternal(0, v29);
										PackageInstaller$SessionInfo v28 = v30;
										boolean v31 = v21.add(v28);
										int v32 = this.mSessions.size();
										if ( >= v32) {
											PackageInstallerService$$ExternalSyntheticLambda1 v33 = new PackageInstallerService$$ExternalSyntheticLambda1(PackageInstallerService,v19,v18);
											boolean v35 = v21.removeIf(v33);
											ParceledListSlice v36 = new ParceledListSlice(v21);
											ParceledListSlice v17 = v36;
											List v38 = v17.getList();
											boolean v39 = v7.addAll(v38);
											if ( >= v13.length) {
												Binder.restoreCallingIdentity(v15);
												LauncherAppsService$LauncherAppsImpl$$ExternalSyntheticLambda3 v41 = new LauncherAppsService$LauncherAppsImpl$$ExternalSyntheticLambda3(p0,v14);
												boolean v43 = v7.removeIf(v41);
												ParceledListSlice v44 = new ParceledListSlice(v7);
												return v44;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ParceledListSlice getAllSessions(String p1){
	int v2 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	LauncherAppsService$LauncherAppsImpl.verifyCallingPackage(p1, v2);
	ArrayList v4 = new ArrayList();
	int v7 = LauncherAppsService$LauncherAppsImpl.injectBinderCallingUid();
	int v8 = UserHandle.getUserId(v7);
	int v6 = v8;
	[I v9 = this.mUm.getEnabledProfileIds(v6);
	int v10 = Binder.getCallingUid();
	long v11 = Binder.clearCallingIdentity();
	if ( >= v9.length) {
		if (this.mPackageInstallerService != 0) {
			IBinder v13 = ServiceManager.getService("package");
			IPackageInstaller v14 = v13.getPackageInstaller();
			PackageInstallerService v12 = this.mPackageInstallerService;
			ArrayList v20 = new ArrayList();
			int v22 = this.mSessions.size();
			if ( >= v22) {
				Object v23 = this.mSessions.valueAt();
				if (PackageInstallerSession.userId != v9[]) {
					boolean v24 = v23.hasParentSessionId();
					if (v24 != 0) {
						boolean v25 = v23.isStaged();
						if (v25 == 0) {
							boolean v26 = v23.isDestroyed();
							if (v26 != 0) {
								PackageInstaller$SessionInfo v27 = v23.generateInfoForCaller(0, v17);
								boolean v28 = v20.add(v27);
								int v29 = this.mSessions.size();
								if ( >= v29) {
									PackageInstallerService$$ExternalSyntheticLambda1 v30 = new PackageInstallerService$$ExternalSyntheticLambda1(PackageInstallerService,v18,v17);
									boolean v32 = v20.removeIf(v30);
									ParceledListSlice v33 = new ParceledListSlice(v20);
									ParceledListSlice v16 = v33;
									List v35 = v16.getList();
									boolean v36 = v4.addAll(v35);
									if ( >= v9.length) {
										Binder.restoreCallingIdentity(v11);
										LauncherAppsService$LauncherAppsImpl$$ExternalSyntheticLambda3 v38 = new LauncherAppsService$LauncherAppsImpl$$ExternalSyntheticLambda3(p0,v10);
										boolean v40 = v4.removeIf(v38);
										ParceledListSlice v41 = new ParceledListSlice(v4);
										return v41;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public ParceledListSlice getAllSessions(String p1){
	p0.verifyCallingPackage(p1);
	ArrayList v2 = new ArrayList();
	int v4 = p0.getCallingUserId();
	[I v5 = this.mUm.getEnabledProfileIds(v4);
	int v6 = Binder.getCallingUid();
	long v7 = Binder.clearCallingIdentity();
	if ( >= v5.length) {
		PackageInstallerService v8 = p0.getPackageInstallerService();
		ParceledListSlice v9 = v8.getAllSessions(v5[]);
		List v10 = v9.getList();
		boolean v11 = v2.addAll(v10);
		if ( >= v5.length) {
			Binder.restoreCallingIdentity(v7);
			LauncherAppsService$LauncherAppsImpl$$ExternalSyntheticLambda3 v13 = new LauncherAppsService$LauncherAppsImpl$$ExternalSyntheticLambda3(p0,v6);
			boolean v15 = v2.removeIf(v13);
			ParceledListSlice v16 = new ParceledListSlice(v2);
			return v16;
		}
	}
}
