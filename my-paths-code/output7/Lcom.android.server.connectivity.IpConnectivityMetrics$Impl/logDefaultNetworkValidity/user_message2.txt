The method logDefaultNetworkValidity has the following code snippet:

This is path 1 for the API with depth 2:
public void logDefaultNetworkValidity(boolean p1){
	Context v1 = this.this$0.getContext();
	long v3 = SystemClock.elapsedRealtime();
	if (p1 != 0) {
		if (this.mIsCurrentlyValid == 0) {
			this.mIsCurrentlyValid = 0;
			DefaultNetworkEvent.validatedMs = (DefaultNetworkEvent.validatedMs + (p1 - this.mLastValidationTimeMs));
			if (p1 == 0) {
				if (this.mIsCurrentlyValid != 0) {
					this.mIsCurrentlyValid = 1;
					this.mLastValidationTimeMs = v3;
					return;
				}
			}
		}
	}
}

and the following sink code:
['if (p1 != 0) {\nthis.mIsCurrentlyValid = 0;\nDefaultNetworkEvent.validatedMs = (DefaultNetworkEvent.validatedMs + (p1 - this.mLastValidationTimeMs));\nthis.mLastValidationTimeMs = v3;', 'if (this.mIsCurrentlyValid == 0) {\nthis.mIsCurrentlyValid = 0;\nDefaultNetworkMetrics.updateValidationTime(v3);', 'IpConnectivityMetrics.mDefaultNetworkMetrics.logDefaultNetworkValidity(v3, p1);']

The method logDefaultNetworkValidity has the following similar APIs:

- API Name: addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z with Similarity Score: 0.727132260799408
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = IpConnectivityMetrics.mNetdListener.addNetdEventCallback(p1, p2);
return v2;

- API Name: startWatchlistLogging()Z with Similarity Score: 0.7063605785369873
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);
if (v3 == 0) {
this.mIsLoggingEnabled = 1;
boolean v2 = 1;
return v2;

