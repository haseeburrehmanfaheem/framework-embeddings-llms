The method logEvent has the following code snippet:

This is path 1 for the API with depth 2:
public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	this.mEventLog.append(p2);
	int v6 = this.mBuffer.size();
	if (p2 != 0) {
		boolean v7 = IpConnectivityMetrics.isRateLimited(p2);
		if (v7 == 0) {
			int v4 = -1;
			int v3 = v4;
			return v3;
		}
	}
}
This is path 2 for the API with depth 2:
public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	this.mEventLog.append(p2);
	int v6 = this.mBuffer.size();
	if (p2 != 0) {
		boolean v7 = IpConnectivityMetrics.isRateLimited(p2);
		if (v7 == 0) {
			if ((this.mCapacity - v6) != 0) {
				this.mDropped = (this.mDropped + 1);
				int v4 = 0;
				int v3 = v4;
				return v3;
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	this.mEventLog.append(p2);
	int v6 = this.mBuffer.size();
	if (p2 != 0) {
		boolean v7 = IpConnectivityMetrics.isRateLimited(p2);
		if (v7 == 0) {
			if ((this.mCapacity - v6) != 0) {
				boolean v8 = this.mBuffer.add(p2);
				int v4 = ((this.mCapacity - v6) + -1);
				int v3 = v4;
				return v3;
			}
		}
	}
}

and the following sink code:
['this.mEventLog.append(p1);\nreturn v3;', 'int v4 = this.this$0.append(p1);\nreturn v3;', 'int v3 = IpConnectivityMetrics.-$$Nest$mappend(this.this$0, p1);\nreturn v3;']

The method logEvent has the following similar APIs:

- API Name: isUserRunning(I)Z with Similarity Score: 0.7889609336853027
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = v4.get(p1, -1);

- API Name: isUserUnlockingOrUnlocked(I)Z with Similarity Score: 0.7889609336853027
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = v4.get(p1, -1);

