This is path 1 for the API with depth 2:
public void onPendingSaveUi(int p1, IBinder p2){
	Object v1 = Objects.requireNonNull(p2, "token");
	if (p1 == 1) {
		if (p1 != 2) {
			Object v2 = new Object(1);
			Integer v3 = Integer.valueOf(p1);
			Preconditions.checkArgument(, "invalid operation: %d", v2);
			Object v5 = AbstractMasterSystemService.mLock;
			int v6 = UserHandle.getCallingUserId();
			AbstractPerUserSystemService v8 = this.this$0.peekServiceForUserLocked(v6);
			AbstractPerUserSystemService v7 = v8;
			if (v7 == 0) {
				if (Helper.sVerbose == 0) {
					int v18 = this.mSessions.size();
					if ( < 0) {
						Object v19 = this.mSessions.valueAt();
						boolean v21 = Session.isSaveUiPendingLocked();
						if (v21 == 0) {
							IBinder v22 = this.mPendingSaveUi.getToken();
							boolean v23 = p2.equals(v22);
							if (v23 == 0) {
								boolean v20 = ;
								if (v20 == 0) {
									if ( < 0) {
										Object v24 = this.mSessions.valueAt();
										boolean v26 = Session.isSaveUiPendingLocked();
										if (v26 == 0) {
											IBinder v27 = this.mPendingSaveUi.getToken();
											boolean v28 = p2.equals(v27);
											if (v28 == 0) {
												boolean v25 = ;
												if (v25 == 0) {
													AutoFillUI v30 = Session.getUiForShowing();
													v30.onPendingSaveUi(p1, p2);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void onPendingSaveUi(int p1, IBinder p2){
	Object v1 = Objects.requireNonNull(p2, "token");
	if (p1 == 1) {
		if (p1 != 2) {
			Object v2 = new Object(1);
			Integer v3 = Integer.valueOf(p1);
			Preconditions.checkArgument(, "invalid operation: %d", v2);
			Object v5 = AbstractMasterSystemService.mLock;
			int v6 = UserHandle.getCallingUserId();
			AbstractPerUserSystemService v8 = this.this$0.peekServiceForUserLocked(v6);
			AbstractPerUserSystemService v7 = v8;
			if (v7 == 0) {
				if (Helper.sVerbose == 0) {
					int v18 = this.mSessions.size();
					if ( < 0) {
						Object v19 = this.mSessions.valueAt();
						boolean v20 = v19.isSaveUiPendingForTokenLocked(p2);
						if (v20 == 0) {
							if ( < 0) {
								if (Helper.sDebug == 0) {
									String v26 = DebugUtils.flagsToString(AutofillManage.class, "PENDING_UI_OPERATION_", p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void onPendingSaveUi(int p1, IBinder p2){
	Object v1 = Objects.requireNonNull(p2, "token");
	if (p1 == 1) {
		if (p1 != 2) {
			Object v2 = new Object(1);
			Integer v3 = Integer.valueOf(p1);
			Preconditions.checkArgument(, "invalid operation: %d", v2);
			Object v5 = AutofillManagerService.access$5100(this.this$0);
			int v6 = UserHandle.getCallingUserId();
			AbstractPerUserSystemService v7 = AutofillManagerService.access$5200(this.this$0, v6);
			if (v7 == 0) {
				v7.onPendingSaveUi(p1, p2);
				return;
			}
		}
	}
}
