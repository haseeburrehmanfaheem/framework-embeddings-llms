This is path 1 for the API with depth 2:
public void restoreSession(int p1, IBinder p2, IBinder p3, IResultReceiver p4){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = Objects.requireNonNull(p2, "activityToken");
	Object v3 = Objects.requireNonNull(p3, "appCallback");
	Object v4 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v6 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v5 = v6;
	if (v5 == 0) {
		int v7 = IAutoFillManager$Stub.getCallingUid();
		Object v9 = this.mSessions.get(p1);
		if (v9 == 0) {
			if (v7 == Session.uid) {
				if (this.mDestroyed == 0) {
					this.mActivityToken = p3;
					Session.setClientLocked(p4);
					Session.updateTrackedIdsLocked();
					boolean v8 = 1;
					AutofillManagerService.send(p2, p3);
					return;
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void restoreSession(int p1, IBinder p2, IBinder p3, IResultReceiver p4){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = Objects.requireNonNull(p2, "activityToken");
	Object v3 = Objects.requireNonNull(p3, "appCallback");
	Object v4 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v6 = this.this$0.peekServiceForUserLocked(v1);
	AbstractPerUserSystemService v5 = v6;
	if (v5 == 0) {
		int v7 = IAutoFillManager$Stub.getCallingUid();
		Object v9 = this.mSessions.get(p1);
		if (v9 == 0) {
			if (v7 == Session.uid) {
				v9.switchActivity(p2, p3);
				boolean v8 = 1;
				this.this$0.send(p4, );
				return;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void restoreSession(int p1, IBinder p2, IBinder p3, IResultReceiver p4){
	int v1 = UserHandle.getCallingUserId();
	Object v2 = Objects.requireNonNull(p2, "activityToken");
	Object v3 = Objects.requireNonNull(p3, "appCallback");
	Object v4 = AutofillManagerService.access$3500(this.this$0);
	AbstractPerUserSystemService v5 = AutofillManagerService.access$3600(this.this$0, v1);
	if (v5 == 0) {
		if (Helper.sVerbose == 0) {
			AutofillManagerService.-$$Nest$msend(this.this$0, p4, );
			return;
		}
	}
}
