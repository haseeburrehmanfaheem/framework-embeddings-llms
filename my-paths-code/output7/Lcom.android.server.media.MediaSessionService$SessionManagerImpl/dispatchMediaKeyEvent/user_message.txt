This is path 1 for the API with depth 2:
public void dispatchMediaKeyEvent(String p1, boolean p2, KeyEvent p3, boolean p4){
	if (v22 != 0) {
		MediaSessionService$FullUserRecord v23 = this.mCurrentFullUserRecord;
		IOnMediaKeyListener v24 = this.mOnMediaKeyListener;
		if (v24 == 0) {
			MediaSessionService$FullUserRecord v26 = this.mCurrentFullUserRecord;
			MediaSessionRecordImpl v28 = v26.getMediaButtonSessionLocked();
			MediaSessionRecordImpl v27 = v28;
			if (v27 instanceof MediaSession2Record == 0) {
				MediaKeyDispatcher v29 = this.mCustomMediaKeyDispatcher;
				if (v29 == 0) {
					MediaKeyDispatcher v30 = this.mCustomMediaKeyDispatcher;
					MediaSession$Token v31 = v30.getMediaSession(p3, v4, p2);
					if (v31 == 0) {
						MediaSessionRecord v33 = this.this$0.getMediaSessionRecordLocked(v31);
						MediaSessionRecord v32 = v33;
						if ( != 0) {
							MediaKeyDispatcher v34 = this.mCustomMediaKeyDispatcher;
							PendingIntent v35 = v34.getMediaButtonReceiver(p3, v4, p2);
							if (v35 == 0) {
								Context v36 = this.mContext;
								MediaSessionService$FullUserRecord v37 = this.mCurrentFullUserRecord;
								int v38 = this.mFullUserId;
								if (v35 != 0) {
									int v40 = MediaButtonReceiverHolder.getComponentType(v35);
									ComponentName v41 = MediaButtonReceiverHolder.getComponentName(v35, v40);
									if (v41 == 0) {
										MediaButtonReceiverHolder v48 = new MediaButtonReceiverHolder(v38,v35,"");
										MediaButtonReceiverHolder v39 = v48;
										if ( != 0) {
											if ( != 0) {
												if ( == 0) {
													if ( == 0) {
														if (p4 == 0) {
															if (p2 == 0) {
																Context v50 = this.mContext;
																if (p4 == 0) {
																	MediaSessionService$MessageHandler v51 = this.mHandler;
																	long v52 = this.sMediaButtonReceiverFgsAllowlistDurationMs;
																	Intent v54 = new Intent("android.intent.action.MEDIA_BUTTON");
																	Intent v56 = v54.addFlags(268435456);
																	Intent v57 = v54.putExtra("android.intent.extra.KEY_EVENT", p5);
																	Intent v58 = v54.putExtra("android.intent.extra.PACKAGE_NAME", );
																	BroadcastOptions v59 = BroadcastOptions.makeBasic();
																	v59.setTemporaryAppAllowlist(v52, 0, 313, "");
																	v59.setBackgroundActivityStartsAllowed(1);
																	if (this.mPendingIntent == 0) {
																		if (this.mComponentName == 0) {
																			Intent v72 = v54.setComponent(this.mComponentName);
																			UserHandle v73 = UserHandle.of(this.mUserId);
																			if (this.mComponentType == 2) {
																				if (this.mComponentType == 3) {
																					Bundle v74 = v59.toBundle();
																					v50.sendBroadcastAsUser(v54, v73, 0, v74);
																					boolean v53 = 0;
																					if (v53 == 0) {
																						Binder.restoreCallingIdentity(v5);
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void dispatchMediaKeyEvent(String p1, boolean p2, KeyEvent p3, boolean p4){
	if (v22 != 0) {
		MediaSessionService$FullUserRecord v23 = this.mCurrentFullUserRecord;
		IOnMediaKeyListener v24 = this.mOnMediaKeyListener;
		if (v24 == 0) {
			MediaSessionService$FullUserRecord v26 = MediaSessionService.-$$Nest$fgetmCurrentFullUserRecord(this.this$0);
			MediaSessionRecordImpl v27 = MediaSessionService$FullUserRecord.-$$Nest$mgetMediaButtonSessionLocked(v26);
			if (v27 instanceof MediaSession2Record == 0) {
				MediaKeyDispatcher v28 = MediaSessionService.-$$Nest$fgetmCustomMediaKeyDispatcher(this.this$0);
				if (v28 == 0) {
					MediaKeyDispatcher v29 = MediaSessionService.-$$Nest$fgetmCustomMediaKeyDispatcher(this.this$0);
					MediaSession$Token v30 = v29.getMediaSession(p3, v4, p2);
					if (v30 == 0) {
						MediaSessionRecord v31 = MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, v30);
						if ( != 0) {
							MediaKeyDispatcher v32 = MediaSessionService.-$$Nest$fgetmCustomMediaKeyDispatcher(this.this$0);
							PendingIntent v33 = v32.getMediaButtonReceiver(p3, v4, p2);
							if (v33 == 0) {
								Context v34 = MediaSessionService.-$$Nest$fgetmContext(this.this$0);
								MediaSessionService$FullUserRecord v35 = MediaSessionService.-$$Nest$fgetmCurrentFullUserRecord(this.this$0);
								int v36 = MediaSessionService$FullUserRecord.-$$Nest$fgetmFullUserId(v35);
								MediaButtonReceiverHolder v37 = MediaButtonReceiverHolder.create(v34, v36, v33, "");
								if ( != 0) {
									if ( != 0) {
										if ( == 0) {
											if ( == 0) {
												if (p4 == 0) {
													if (p2 == 0) {
														Context v38 = MediaSessionService.-$$Nest$fgetmContext(this.this$0);
														if (p4 == 0) {
															MediaSessionService$MessageHandler v39 = MediaSessionService.-$$Nest$fgetmHandler(this.this$0);
															long v40 = MediaSessionDeviceConfig.getMediaButtonReceiverFgsAllowlistDurationMs();
															boolean v41 = .send(v38, p3, , , this.mKeyEventReceiver, v39, v40);
															if (v41 == 0) {
																Binder.restoreCallingIdentity(v5);
																return;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void dispatchMediaKeyEvent(String p1, boolean p2, KeyEvent p3, boolean p4){
	if (v22 != 0) {
		MediaSessionService$FullUserRecord v23 = MediaSessionService.-$$Nest$fgetmCurrentFullUserRecord(this.this$0);
		IOnMediaKeyListener v24 = MediaSessionService$FullUserRecord.-$$Nest$fgetmOnMediaKeyListener(v23);
		if (v24 == 0) {
			p0.dispatchMediaKeyEventLocked(p1, v3, v4, p2, p3, p4);
			Binder.restoreCallingIdentity(v5);
			return;
		}
	}
}
