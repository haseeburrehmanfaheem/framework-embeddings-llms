The method dispatchAdjustVolume has the following code snippet:

This is path 1 for the API with depth 2:
public void dispatchAdjustVolume(String p1, String p2, int p3, int p4, int p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	boolean v7 = this.this$0.isGlobalPriorityActiveLocked();
	boolean v6 = v7;
	if (v6 == 0) {
		MediaSessionRecord v8 = this.mGlobalPrioritySession;
		boolean v9 = MediaSessionService$SessionManagerImpl.isValidLocalStreamType(p3);
		if (v9 == 0) {
			boolean v10 = AudioSystem.isStreamActive(p3, 0);
			if (v10 == 0) {
				if ( == 0) {
					if ( == 0) {
						if (0 == 0) {
							boolean v25 = AudioSystem.isStreamActive(3, 0);
							if (v25 != 0) {
								MediaSessionService$MessageHandler v26 = this.mHandler;
								MediaSessionService$SessionManagerImpl$3 v27 = new MediaSessionService$SessionManagerImpl$3(MediaSessionService$SessionManagerImpl,0,p2,v2,v1,p3,p4,p5,p1);
								boolean v29 = v26.post(v27);
								Binder.restoreCallingIdentity(v3);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void dispatchAdjustVolume(String p1, String p2, int p3, int p4, int p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	boolean v7 = this.this$0.isGlobalPriorityActiveLocked();
	boolean v6 = v7;
	if (v6 == 0) {
		MediaSessionRecord v8 = this.mGlobalPrioritySession;
		boolean v9 = MediaSessionService$SessionManagerImpl.isValidLocalStreamType(p3);
		if (v9 == 0) {
			boolean v10 = AudioSystem.isStreamActive(p3, 0);
			if (v10 == 0) {
				if ( == 0) {
					if ( == 0) {
						if (0 == 0) {
							boolean v25 = AudioSystem.isStreamActive(3, 0);
							if (v25 != 0) {
								Binder.restoreCallingIdentity(v3);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v1 = Binder.getCallingPid();\nint v2 = Binder.getCallingUid();\nlong v3 = Binder.clearCallingIdentity();\nMediaSessionService$SessionManagerImpl$3 v27 = new MediaSessionService$SessionManagerImpl$3(MediaSessionService$SessionManagerImpl,0,p2,v2,v1,p3,p4,p5,p1);\nboolean v29 = v26.post(v27);', 'p0.dispatchAdjustVolumeLocked(p1, p2, v1, v2, 0, p3, p4, p5, 0);']

The method dispatchAdjustVolume has the following similar APIs:

- API Name: getMediaKeyEventSessionPackageName(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.9212104082107544
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingPid();
int v2 = Binder.getCallingUid();
UserHandle v3 = UserHandle.getUserHandleForUid(v2);
long v5 = Binder.clearCallingIdentity();
MediaButtonReceiverHolder v23 = MediaSessionService$FullUserRecord.-$$Nest$fgetmLastMediaButtonReceiverHolder(v15);
String v25 = v24.getPackageName();
Binder.restoreCallingIdentity(v5);
return v25;

- API Name: getMediaKeyEventSession(Ljava/lang/String;)Landroid/media/session/MediaSession$Token; with Similarity Score: 0.9030392169952393
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingPid();
int v2 = Binder.getCallingUid();
UserHandle v3 = UserHandle.getUserHandleForUid(v2);
int v4 = v3.getIdentifier();
this.this$0.enforcePackageName(p1, v2);
MediaSessionService$FullUserRecord v11 = this.this$0.getFullUserRecordLocked(v4);
MediaSessionRecordImpl v13 = v10.getMediaButtonSessionLocked();
if (v12 instanceof MediaSessionRecord == 0) {
MediaSession$Token v14 = this.mSessionToken;
Binder.restoreCallingIdentity(v5);
return v14;

