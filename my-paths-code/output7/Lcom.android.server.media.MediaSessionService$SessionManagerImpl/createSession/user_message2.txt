The method createSession has the following code snippet:

This is path 1 for the API with depth 2:
public ISession createSession(String p1, ISessionCallback p2, String p3, Bundle p4, int p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	if (v10 == 0) {
		int v11 = p0.handleIncomingUser(v1, v2, p5, p1);
		if (p2 == 0) {
			if (this.mCustomMediaSessionPolicyProvider == 0) {
				int v14 = this.mCustomMediaSessionPolicyProvider.getSessionPoliciesForApplication(p3, p5);
				MediaSessionService$FullUserRecord v15 = MediaSessionService.getFullUserRecordLocked(p4);
				if (v15 == 0) {
					SparseIntArray v16 = MediaSessionService$FullUserRecord.-$$Nest$fgetmUidToSessionCount(v15);
					int v17 = v16.get(p3, 0);
					if (v17 < 100) {
						if (v18 == 0) {
							MediaSessionRecord v19 = new MediaSessionRecord(p2,p3,p4,p5,p6,p7,p8,MediaSessionService,v20,);
							Looper v20 = this.mRecordThread.getLooper();
							SparseIntArray v22 = MediaSessionService$FullUserRecord.-$$Nest$fgetmUidToSessionCount(v15);
							v22.put(p3, (v17 + 1));
							MediaSessionStack v24 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v15);
							v24.addSession(v19);
							this.mHandler.postSessionsChanged(v19);
							if (this.DEBUG == 0) {
								MediaSessionRecord v13 = v19;
								MediaSessionRecord v12 = v13;
								if (v12 == 0) {
									ISession v35 = v12.getSessionBinder();
									if (v35 == 0) {
										Binder.restoreCallingIdentity(v3);
										return v35;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['MediaSessionRecord v19 = new MediaSessionRecord(p2,p3,p4,p5,p6,p7,p8,MediaSessionService,v20);\nSparseIntArray v22 = MediaSessionService$FullUserRecord.-$$Nest$fgetmUidToSessionCount(v15);\nv22.put(p3, (v17 + 1));\nMediaSessionStack v24 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v15);\nv24.addSession(v19);\nthis.mHandler.postSessionsChanged(v19);', 'MediaSessionRecord v14 = this.this$0.createSessionInternal(v1, v2, v6, p1, p2, p3, p4);\nISession v15 = this.mSession;', 'MediaSessionRecord v6 = MediaSessionService.-$$Nest$mcreateSessionInternal(this.this$0, v1, v2, v5, p1, p2, p3, p4);\nISession v7 = v6.getSessionBinder();']

The method createSession has the following similar APIs:

- API Name: dispatchMediaKeyEventToSessionAsSystemService(Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)Z with Similarity Score: 0.8715822100639343
  - Access Control Level: SYS_OR_SIG and the following code:
MediaSessionRecord v5 = MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p3);

- API Name: dispatchMediaKeyEventToSessionAsSystemService(Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)Z with Similarity Score: 0.8391842246055603
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = p2.getUid();
UserHandle v8 = UserHandle.getUserHandleForUid(v7);
int v9 = v8.getIdentifier();
MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
MediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
MediaSessionRecord v12 = v11.getMediaSessionRecord(p2);

