The method dispatchMediaKeyEventToSessionAsSystemService has the following code snippet:

This is path 1 for the API with depth 2:
public boolean dispatchMediaKeyEventToSessionAsSystemService(String p1, KeyEvent p2, MediaSession$Token p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = p2.getUid();
	UserHandle v8 = UserHandle.getUserHandleForUid(v7);
	int v9 = v8.getIdentifier();
	MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
	if (v10 == 0) {
		MediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
		MediaSessionRecord v12 = v11.getMediaSessionRecord(p2);
		MediaSessionRecord v6 = v12;
		MediaSessionRecord v5 = v6;
		if (v5 != 0) {
			int v31 = p5.getKeyCode();
			boolean v32 = KeyEvent.isMediaSessionKey(v31);
			if (v32 == 0) {
				StringBuilder v33 = new StringBuilder();
				StringBuilder v35 = v33.append("action=");
				int v36 = p5.getAction();
				String v37 = KeyEvent.actionToString(v36);
				StringBuilder v38 = v33.append(v37);
				StringBuilder v39 = v33.append(";code=");
				int v40 = p5.getKeyCode();
				String v41 = KeyEvent.keyCodeToString(v40);
				StringBuilder v42 = v33.append(v41);
				String v43 = v33.toString();
				MediaSessionService v44 = MediaSessionRecord.-$$Nest$fgetmService(this.this$0);
				int v45 = this.this$0.getUid();
				String v46 = this.this$0.getPackageName();
				v44.tempAllowlistTargetPkgIfPossible(v45, v46, p2, p3, p1, v43);
				if (p4 == 0) {
					Context v48 = MediaSessionRecord.-$$Nest$fgetmContext(this.this$0);
					String v49 = v48.getPackageName();
					int v50 = Process.myPid();
					Intent v51 = MediaSessionRecord$SessionCb.createMediaButtonIntent(p5);
					this.mCb.onMediaButton(v49, v50, 1000, v51, p6, p7);
					boolean v30 = 1;
					boolean v29 = v30;
					Binder.restoreCallingIdentity(v3);
					return v29;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean dispatchMediaKeyEventToSessionAsSystemService(String p1, KeyEvent p2, MediaSession$Token p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = p2.getUid();
	UserHandle v8 = UserHandle.getUserHandleForUid(v7);
	int v9 = v8.getIdentifier();
	MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
	if (v10 == 0) {
		MediaSessionRecord v6 = 0;
		MediaSessionRecord v5 = v6;
		if (v5 != 0) {
			int v29 = p5.getKeyCode();
			boolean v30 = KeyEvent.isMediaSessionKey(v29);
			if (v30 == 0) {
				StringBuilder v31 = new StringBuilder();
				StringBuilder v33 = v31.append("action=");
				int v34 = p5.getAction();
				String v35 = KeyEvent.actionToString(v34);
				StringBuilder v36 = v31.append(v35);
				StringBuilder v37 = v31.append(";code=");
				int v38 = p5.getKeyCode();
				String v39 = KeyEvent.keyCodeToString(v38);
				StringBuilder v40 = v31.append(v39);
				String v41 = v31.toString();
				MediaSessionService v42 = MediaSessionRecord.-$$Nest$fgetmService(this.this$0);
				int v43 = this.this$0.getUid();
				String v44 = this.this$0.getPackageName();
				v42.tempAllowlistTargetPkgIfPossible(v43, v44, p2, p3, p1, v41);
				if (p4 == 0) {
					Context v46 = MediaSessionRecord.-$$Nest$fgetmContext(this.this$0);
					String v47 = v46.getPackageName();
					int v48 = Process.myPid();
					Intent v49 = MediaSessionRecord$SessionCb.createMediaButtonIntent(p5);
					this.mCb.onMediaButton(v47, v48, 1000, v49, p6, p7);
					boolean v28 = 1;
					boolean v27 = v28;
					Binder.restoreCallingIdentity(v3);
					return v27;
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean dispatchMediaKeyEventToSessionAsSystemService(String p1, KeyEvent p2, MediaSession$Token p3){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = this.mLock;
	int v7 = p2.getUid();
	UserHandle v8 = UserHandle.getUserHandleForUid(v7);
	int v9 = v8.getIdentifier();
	MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
	if (v10 == 0) {
		MediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
		MediaSessionRecord v12 = v11.getMediaSessionRecord(p2);
		MediaSessionRecord v6 = v12;
		MediaSessionRecord v5 = v6;
		if (v5 != 0) {
			int v31 = p5.getKeyCode();
			boolean v32 = KeyEvent.isMediaSessionKey(v31);
			if (v32 == 0) {
				StringBuilder v33 = new StringBuilder();
				StringBuilder v35 = v33.append("action=");
				int v36 = p5.getAction();
				String v37 = KeyEvent.actionToString(v36);
				StringBuilder v38 = v33.append(v37);
				StringBuilder v39 = v33.append(";code=");
				int v40 = p5.getKeyCode();
				String v41 = KeyEvent.keyCodeToString(v40);
				StringBuilder v42 = v33.append(v41);
				String v43 = v33.toString();
				MediaSessionService v44 = MediaSessionRecord.-$$Nest$fgetmService(this.this$0);
				int v45 = this.this$0.getUid();
				String v46 = this.this$0.getPackageName();
				v44.tempAllowlistTargetPkgIfPossible(v45, v46, p2, p3, p1, v43);
				if (p4 == 0) {
					Intent v48 = MediaSessionRecord$SessionCb.createMediaButtonIntent(p5);
					this.mCb.onMediaButton(p1, p2, p3, v48, p6, p7);
					boolean v30 = 1;
					boolean v29 = v30;
					Binder.restoreCallingIdentity(v3);
					return v29;
				}
			}
		}
	}
}

and the following sink code:
['int v7 = p2.getUid();\nUserHandle v8 = UserHandle.getUserHandleForUid(v7);\nint v9 = v8.getIdentifier();\nMediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);\nMediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);\nMediaSessionRecord v12 = v11.getMediaSessionRecord(p2);', 'MediaSessionRecord v6 = this.this$0.getMediaSessionRecordLocked(p3);\nboolean v24 = this.mSessionCb.sendMediaButton(p1, v1, v2, 1, p2, 0, 0);', 'MediaSessionRecord v5 = MediaSessionService.-$$Nest$mgetMediaSessionRecordLocked(this.this$0, p3);']

The method dispatchMediaKeyEventToSessionAsSystemService has the following similar APIs:

- API Name: setSessionPolicies(Landroid/media/session/MediaSession$Token;I)V with Similarity Score: 0.9248054027557373
  - Access Control Level: NONE and the following code:
int v5 = p2.getUid();
UserHandle v6 = UserHandle.getUserHandleForUid(v5);
int v7 = v6.getIdentifier();
MediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);
v3.setSessionPolicies(p2);

- API Name: createSession(Ljava/lang/String;Landroid/media/session/ISessionCallback;Ljava/lang/String;Landroid/os/Bundle;I)Landroid/media/session/ISession; with Similarity Score: 0.8715822100639343
  - Access Control Level: SYS_OR_SIG and the following code:
MediaSessionRecord v6 = MediaSessionService.-$$Nest$mcreateSessionInternal(this.this$0, v1, v2, v5, p1, p2, p3, p4);
ISession v7 = v6.getSessionBinder();

