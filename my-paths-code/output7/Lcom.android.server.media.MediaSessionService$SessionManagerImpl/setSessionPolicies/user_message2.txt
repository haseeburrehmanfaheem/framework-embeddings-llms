The method setSessionPolicies has the following code snippet:

This is path 1 for the API with depth 2:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	int v5 = p2.getUid();
	UserHandle v6 = UserHandle.getUserHandleForUid(v5);
	int v7 = v6.getIdentifier();
	MediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);
	if (v8 == 0) {
		MediaSessionStack v9 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v8);
		MediaSessionRecord v10 = v9.getMediaSessionRecord(p2);
		MediaSessionRecord v4 = v10;
		MediaSessionRecord v3 = v4;
		int v11 = v3.getUserId();
		int v14 = this.mFullUserIds.get(p2, -1);
		if (v14 >= 0) {
			Object v15 = this.mUserRecords.get(v14);
			MediaSessionService$FullUserRecord v13 = v15;
			MediaSessionService$FullUserRecord v12 = v13;
			if (v12 == 0) {
				v3.setSessionPolicies(p2);
				MediaSessionStack v17 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v12);
				int v19 = this.mPolicies;
				if ((v19 & 2) == 0) {
					if (this.DEBUG == 0) {
						String v24 = MediaSessionStack.getCallers(2);
						List v28 = this.mAudioPlayerStateMonitor.getSortedAudioPlaybackClientUids();
						int v29 = v28.size();
						if ( >= v29) {
							Object v30 = v28.get();
							int v31 = v30.intValue();
							MediaSessionRecordImpl v32 = MediaSessionStack.findMediaButtonSession(v31);
							if (v32 != 0) {
								if (this.DEBUG == 0) {
									int v33 = v28.size();
									if ( >= v33) {
										Object v34 = v28.get();
										int v35 = v34.intValue();
										MediaSessionRecordImpl v36 = MediaSessionStack.findMediaButtonSession(v35);
										if (v36 != 0) {
											int v37 = v36.getSessionPolicies();
											if ((v37 & 2) == 0) {
												if (this.DEBUG == 0) {
													if ( != 0) {
														int v38 = v36.getUid();
														this.mAudioPlayerStateMonitor.cleanUpAudioPlaybackUids(v38);
														if (v36 == this.mMediaButtonSession) {
															MediaSessionStack.updateMediaButtonSession(v36);
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	int v5 = p2.getUid();
	UserHandle v6 = UserHandle.getUserHandleForUid(v5);
	int v7 = v6.getIdentifier();
	MediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);
	if (v8 == 0) {
		MediaSessionRecord v4 = 0;
		MediaSessionRecord v3 = v4;
		int v9 = v3.getUserId();
		int v12 = this.mFullUserIds.get(p2, -1);
		if (v12 >= 0) {
			Object v13 = this.mUserRecords.get(v12);
			MediaSessionService$FullUserRecord v11 = v13;
			MediaSessionService$FullUserRecord v10 = v11;
			if (v10 == 0) {
				v3.setSessionPolicies(p2);
				MediaSessionStack v15 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
				int v17 = this.mPolicies;
				if ((v17 & 2) == 0) {
					if (this.DEBUG == 0) {
						String v22 = MediaSessionStack.getCallers(2);
						List v26 = this.mAudioPlayerStateMonitor.getSortedAudioPlaybackClientUids();
						int v27 = v26.size();
						if ( >= v27) {
							Object v28 = v26.get();
							int v29 = v28.intValue();
							MediaSessionRecordImpl v30 = MediaSessionStack.findMediaButtonSession(v29);
							if (v30 != 0) {
								if (this.DEBUG == 0) {
									int v31 = v26.size();
									if ( >= v31) {
										Object v32 = v26.get();
										int v33 = v32.intValue();
										MediaSessionRecordImpl v34 = MediaSessionStack.findMediaButtonSession(v33);
										if (v34 != 0) {
											int v35 = v34.getSessionPolicies();
											if ((v35 & 2) == 0) {
												if (this.DEBUG == 0) {
													if ( != 0) {
														int v36 = v34.getUid();
														this.mAudioPlayerStateMonitor.cleanUpAudioPlaybackUids(v36);
														if (v34 == this.mMediaButtonSession) {
															MediaSessionStack.updateMediaButtonSession(v34);
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void setSessionPolicies(MediaSession$Token p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mLock;
	int v5 = p2.getUid();
	UserHandle v6 = UserHandle.getUserHandleForUid(v5);
	int v7 = v6.getIdentifier();
	MediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);
	if (v8 == 0) {
		MediaSessionStack v9 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v8);
		MediaSessionRecord v10 = v9.getMediaSessionRecord(p2);
		MediaSessionRecord v4 = v10;
		MediaSessionRecord v3 = v4;
		int v11 = v3.getUserId();
		int v14 = this.mFullUserIds.get(p2, -1);
		if (v14 >= 0) {
			MediaSessionService$FullUserRecord v13 = 0;
			MediaSessionService$FullUserRecord v12 = v13;
			if (v12 == 0) {
				v3.setSessionPolicies(p2);
				MediaSessionStack v16 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v12);
				int v18 = this.mPolicies;
				if ((v18 & 2) == 0) {
					if (this.DEBUG == 0) {
						String v23 = MediaSessionStack.getCallers(2);
						List v27 = this.mAudioPlayerStateMonitor.getSortedAudioPlaybackClientUids();
						int v28 = v27.size();
						if ( >= v28) {
							Object v29 = v27.get();
							int v30 = v29.intValue();
							MediaSessionRecordImpl v31 = MediaSessionStack.findMediaButtonSession(v30);
							if (v31 != 0) {
								if (this.DEBUG == 0) {
									int v32 = v27.size();
									if ( >= v32) {
										Object v33 = v27.get();
										int v34 = v33.intValue();
										MediaSessionRecordImpl v35 = MediaSessionStack.findMediaButtonSession(v34);
										if (v35 != 0) {
											int v36 = v35.getSessionPolicies();
											if ((v36 & 2) == 0) {
												if (this.DEBUG == 0) {
													if ( != 0) {
														int v37 = v35.getUid();
														this.mAudioPlayerStateMonitor.cleanUpAudioPlaybackUids(v37);
														if (v35 == this.mMediaButtonSession) {
															MediaSessionStack.updateMediaButtonSession(v35);
															Binder.restoreCallingIdentity(v1);
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['MediaSessionRecord v4 = this.this$0.getMediaSessionRecordLocked(p1);\nv3.setSessionPolicies(p2);', 'int v5 = p2.getUid();\nUserHandle v6 = UserHandle.getUserHandleForUid(v5);\nint v7 = v6.getIdentifier();\nMediaSessionService$FullUserRecord v8 = MediaSessionService.getFullUserRecordLocked(v7);\nv3.setSessionPolicies(p2);', 'this.mPolicies = p2;\nMediaSessionStack v9 = this.mPriorityStack;']

The method setSessionPolicies has the following similar APIs:

- API Name: dispatchMediaKeyEventToSessionAsSystemService(Ljava/lang/String;Landroid/view/KeyEvent;Landroid/media/session/MediaSession$Token;)Z with Similarity Score: 0.9248054027557373
  - Access Control Level: SYS_OR_SIG and the following code:
int v7 = p2.getUid();
UserHandle v8 = UserHandle.getUserHandleForUid(v7);
int v9 = v8.getIdentifier();
MediaSessionService$FullUserRecord v10 = MediaSessionService.getFullUserRecordLocked(v9);
MediaSessionStack v11 = MediaSessionService$FullUserRecord.-$$Nest$fgetmPriorityStack(v10);
MediaSessionRecord v12 = v11.getMediaSessionRecord(p2);

- API Name: getSessionPolicies(Landroid/media/session/MediaSession$Token;)I with Similarity Score: 0.9055119752883911
  - Access Control Level: NONE and the following code:
MediaSessionRecord v3 = this.this$0.getMediaSessionRecordLocked(p1);
int v4 = this.mPolicies;
return v4;

