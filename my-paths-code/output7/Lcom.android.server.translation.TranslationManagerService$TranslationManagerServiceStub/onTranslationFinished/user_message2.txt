The method onTranslationFinished has the following code snippet:

This is path 1 for the API with depth 2:
public void onTranslationFinished(boolean p1, IBinder p2, ComponentName p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	Context v6 = this.mMaster.getContext();
	Context v5 = v6;
	int v7 = this.mUserId;
	if (p3 == 0) {
		PackageManager v9 = v5.getPackageManager();
		String v10 = p3.getPackageName();
		ApplicationInfo v11 = v9.getApplicationInfoAsUser(v10, 0, v7);
		int v8 = ;
		String v18 = p3.getPackageName();
		if (p1 == 0) {
			boolean v19 = this.mWaitingFinishedCallbackActivities.contains(p2);
			if (v19 == 0) {
				Bundle v21 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);
				int v22 = this.mCallbacks.getRegisteredCallbackCount();
				if (v22 != 0) {
					List v23 = TranslationManagerServiceImpl.getEnabledInputMethods();
					TranslationManagerServiceImpl$$ExternalSyntheticLambda0 v24 = new TranslationManagerServiceImpl$$ExternalSyntheticLambda0(TranslationManagerServiceImpl,v8,v21,v23);
					this.mCallbacks.broadcast(v24);
					boolean v27 = this.mWaitingFinishedCallbackActivities.remove(p2);
					return;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void onTranslationFinished(boolean p1, IBinder p2, ComponentName p3, int p4){
	Object v1 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
	AbstractPerUserSystemService v2 = v3;
	Context v6 = this.mMaster.getContext();
	Context v5 = v6;
	int v7 = this.mUserId;
	if (p3 == 0) {
		PackageManager v9 = v5.getPackageManager();
		String v10 = p3.getPackageName();
		ApplicationInfo v11 = v9.getApplicationInfoAsUser(v10, 0, v7);
		int v8 = ;
		String v18 = p3.getPackageName();
		if (p1 == 0) {
			Bundle v20 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);
			int v21 = this.mCallbacks.getRegisteredCallbackCount();
			if (v21 != 0) {
				List v22 = TranslationManagerServiceImpl.getEnabledInputMethods();
				TranslationManagerServiceImpl$$ExternalSyntheticLambda0 v23 = new TranslationManagerServiceImpl$$ExternalSyntheticLambda0(TranslationManagerServiceImpl,v8,v20,v22);
				this.mCallbacks.broadcast(v23);
				boolean v26 = this.mWaitingFinishedCallbackActivities.remove(p2);
				return;
			}
		}
	}
}

and the following sink code:
['AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);\nPackageManager v9 = v5.getPackageManager();\nApplicationInfo v11 = v9.getApplicationInfoAsUser(v10, 0, v7);\nBundle v21 = TranslationManagerServiceImpl.createResultForCallback(3, 0, 0, v18);\nthis.mCallbacks.broadcast(v24);', 'int v7 = TranslationManagerServiceImpl.getAppUidByComponentName(v5, p3, v6);\nTranslationManagerServiceImpl.invokeCallbacks(3, 0, 0, v8, v7);', 'v2.onTranslationFinishedLocked(p1, p2, p3);']

The method onTranslationFinished has the following similar APIs:

- API Name: getServiceSettingsActivity(Lcom/android/internal/os/IResultReceiver;I)V with Similarity Score: 0.8529062271118164
  - Access Control Level: NONE and the following code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p2);
String v5 = this.mTranslationServiceInfo.getSettingsActivity();
ComponentName v7 = new ComponentName(ServiceInfo.packageName,v5);
PendingIntent v23 = PendingIntent.getActivityAsUser(v20, 0, v16, 67108864, 0, v21);
Bundle v25 = new Bundle();
v25.putParcelable("EXTRA", v23);
p1.send(1, v24);

- API Name: onTranslationCapabilitiesRequest(IILandroid/os/ResultReceiver;I)V with Similarity Score: 0.8442343473434448
  - Access Control Level: NONE and the following code:
AbstractPerUserSystemService v3 = this.this$0.getServiceForUserLocked(p4);
String v6 = AbstractMasterSystemService.mServiceNameResolver.getDefaultServiceName(p2);
int v11 = Binder.getCallingUid();
RemoteTranslationService v29 = new RemoteTranslationService(v30,v28,AbstractPerUserSystemService.mUserId,0,this.mRemoteServiceCallback);

