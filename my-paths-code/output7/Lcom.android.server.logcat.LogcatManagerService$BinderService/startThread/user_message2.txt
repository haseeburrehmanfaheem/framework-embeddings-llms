The method startThread has the following code snippet:

This is path 1 for the API with depth 1:
public void startThread(int p1, int p2, int p3, int p4){
	LogcatManagerService$LogAccessRequest v1 = new LogcatManagerService$LogAccessRequest(p1,p2,p3,p4,0);
	Handler v3 = this.mHandler;
	Message v4 = v3.obtainMessage(0, v1);
	Handler v5 = this.mHandler;
	Supplier v6 = this.mClock;
	Object v7 = v6.get();
	long v8 = v7.longValue();
	boolean v9 = v5.sendMessageAtTime(v4, v8);
	return;
}

and the following sink code:
['LogcatManagerService$LogAccessRequest v1 = new LogcatManagerService$LogAccessRequest(p1,p2,p3,p4,0);\nHandler v3 = this.mHandler;\nMessage v4 = v3.obtainMessage(0, v1);\nHandler v5 = this.mHandler;\nboolean v9 = v5.sendMessageAtTime(v4, v8);']

The method startThread has the following similar APIs:

- API Name: finishThread(IIII)V with Similarity Score: 0.9662788510322571
  - Access Control Level: NONE and the following code:
LogcatManagerService$LogAccessRequest v1 = new LogcatManagerService$LogAccessRequest(p1,p2,p3,p4,0);
Message v4 = v3.obtainMessage(3, v1);
boolean v9 = v5.sendMessageAtTime(v4, v8);

