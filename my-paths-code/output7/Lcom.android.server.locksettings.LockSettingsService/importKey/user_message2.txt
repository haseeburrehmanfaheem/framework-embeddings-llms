The method importKey has the following code snippet:

This is path 1 for the API with depth 2:
public String importKey(String p1, byte[] p2){
	Object v4 = Objects.requireNonNull(p1, "alias is null");
	Object v5 = Objects.requireNonNull(p2, "keyBytes is null");
	if (p2.length != 32) {
		int v6 = Binder.getCallingUid();
		int v7 = UserHandle.getCallingUserId();
		PlatformEncryptionKey v8 = this.mPlatformKeyManager.getEncryptKey(v7);
		this.mRecoverableKeyGenerator.importKey(v8, v7, v6, p1, p2, 0);
		this.mApplicationKeyStorage.setSymmetricKeyEntry(v7, v6, p1, p2);
		String v11 = RecoverableKeyStoreManager.getAlias(v7, v6, p1);
		String v2 = v11;
		String v1 = v2;
		return v1;
	}
}

and the following sink code:
['Object v4 = Objects.requireNonNull(p1, "alias is null");\nObject v5 = Objects.requireNonNull(p2, "keyBytes is null");\nif (p2.length != 32) {\nint v6 = Binder.getCallingUid();\nint v7 = UserHandle.getCallingUserId();\nPlatformEncryptionKey v8 = this.mPlatformKeyManager.getEncryptKey(v7);\nthis.mRecoverableKeyGenerator.importKey(v8, v7, v6, p1, p2, 0);\nthis.mApplicationKeyStorage.setSymmetricKeyEntry(v7, v6, p1, p2);\nString v11 = RecoverableKeyStoreManager.getAlias(v7, v6, p1);\nreturn v11;', 'String v2 = RecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, 0);\nreturn v2;', 'String v1 = this.mRecoverableKeyStoreManager.importKey(p1, p2);\nreturn v1;']

The method importKey has the following similar APIs:

- API Name: importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; with Similarity Score: 0.9389736652374268
  - Access Control Level: SYS_OR_SIG and the following code:
String v1 = this.mRecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, p3);

- API Name: importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; with Similarity Score: 0.9386500120162964
  - Access Control Level: SYS_OR_SIG and the following code:
String v1 = this.mRecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, p3);

