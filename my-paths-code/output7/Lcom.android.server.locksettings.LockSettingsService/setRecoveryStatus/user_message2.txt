The method setRecoveryStatus has the following code snippet:

This is path 1 for the API with depth 2:
public void setRecoveryStatus(String p1, int p2){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	int v4 = Binder.getCallingUid();
	SQLiteDatabase v6 = this.mKeyStoreDbHelper.getWritableDatabase();
	ContentValues v7 = new ContentValues();
	Integer v9 = Integer.valueOf(p2);
	v7.put("recovery_status", v9);
	String v11 = new String(2);
	String v12 = String.valueOf(v4);
	int v13 = v6.update("keys", v7, "uid = ? AND alias = ?", v11);
	int v5 = v13;
	if ((v5 < 0) < 0) {
		return;
	}
}

and the following sink code:
['SQLiteDatabase v6 = this.mKeyStoreDbHelper.getWritableDatabase();\nContentValues v7 = new ContentValues();\nInteger v9 = Integer.valueOf(p2);\nv7.put("recovery_status", v9);\nString v11 = new String(2);\nint v13 = v6.update("keys", v7, "uid = ? AND alias = ?", v11);', 'int v4 = Binder.getCallingUid();\nint v5 = this.mDatabase.setRecoveryStatus(v4, p1, p2);', 'this.mRecoverableKeyStoreManager.setRecoveryStatus(p1, p2);']

The method setRecoveryStatus has the following similar APIs:

- API Name: setRecoverySecretTypes([I)V with Similarity Score: 0.8834837675094604
  - Access Control Level: SYS_OR_SIG and the following code:
SQLiteDatabase v7 = this.mKeyStoreDbHelper.getReadableDatabase();
Cursor v12 = v7.query("recovery_service_metadata", v8, "user_id = ? AND uid = ?", v9, 0, 0, 0);
ContentValues v32 = new ContentValues();
v32.put("secret_types", v40);
int v46 = v31.update("recovery_service_metadata", v32, "user_id = ? AND uid = ?", v43);

- API Name: setRecoverySecretTypes([I)V with Similarity Score: 0.8508747220039368
  - Access Control Level: SYS_OR_SIG and the following code:
this.mRecoverableKeyStoreManager.setRecoverySecretTypes(p1);

