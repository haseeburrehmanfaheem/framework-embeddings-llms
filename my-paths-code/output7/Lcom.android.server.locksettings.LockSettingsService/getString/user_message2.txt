The method getString has the following code snippet:

This is path 1 for the API with depth 2:
public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = "legacy_lock_pattern_enabled".equals(p1);
		if (v3 == 0) {
			boolean v5 = this.mCache.hasKeyValue(, p3);
			if (v5 == 0) {
				String v6 = this.mCache.peekKeyValue(, p2, p3);
				String v4 = v6;
				String v2 = v4;
				return v2;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = "legacy_lock_pattern_enabled".equals(p1);
		if (v3 == 0) {
			boolean v5 = this.mCache.hasKeyValue(, p3);
			if (v5 == 0) {
				int v6 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);
				SQLiteDatabase v7 = this.mOpenHelper.getReadableDatabase();
				String v8 = new String(2);
				String v9 = Integer.toString(p3);
				Cursor v10 = v7.query("locksettings", this.COLUMNS_FOR_QUERY, "user=? AND name=?", v8, 0, 0, 0);
				if (v10 == 0) {
					boolean v11 = v10.moveToFirst();
					if (v11 == 0) {
						String v12 = v10.getString(0);
						v10.close();
						this.mCache.putKeyValueIfUnchanged(, , p3, v6);
						if ( != this.DEFAULT) {
							String v4 = ;
							String v2 = v4;
							return v2;
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = "legacy_lock_pattern_enabled".equals(p1);
		if (v3 == 0) {
			boolean v5 = this.mCache.hasKeyValue(, p3);
			if (v5 == 0) {
				int v6 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);
				SQLiteDatabase v7 = this.mOpenHelper.getReadableDatabase();
				String v8 = new String(2);
				String v9 = Integer.toString(p3);
				Cursor v10 = v7.query("locksettings", this.COLUMNS_FOR_QUERY, "user=? AND name=?", v8, 0, 0, 0);
				if (v10 == 0) {
					boolean v11 = v10.moveToFirst();
					if (v11 == 0) {
						String v12 = v10.getString(0);
						v10.close();
						this.mCache.putKeyValueIfUnchanged(, , p3, v6);
						if ( != this.DEFAULT) {
							String v4 = ;
							String v2 = v4;
							return v2;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v5 = this.mCache.hasKeyValue(, p3);\nString v6 = this.mCache.peekKeyValue(, p2, p3);\nString v4 = v6;\nString v2 = v4;\nreturn v2;', 'String v4 = LockSettingsStorage.readKeyValue(, p2, p3);\nString v2 = v4;\nreturn v2;', 'String v2 = this.mStorage.getString(p1, p2, p3);\nreturn v2;']

The method getString has the following similar APIs:

- API Name: getLong(Ljava/lang/String;JI)J with Similarity Score: 0.9739087820053101
  - Access Control Level: SYS_OR_SIG and the following code:
String v5 = LockSettingsStorage.readKeyValue(, 0, p3);
long v2 = ;
return v2;

- API Name: getLong(Ljava/lang/String;JI)J with Similarity Score: 0.9484301805496216
  - Access Control Level: SYS_OR_SIG and the following code:
String v3 = LockSettingsStorage.getString(p1, 0, p3);
long v2 = ;
return v2;

