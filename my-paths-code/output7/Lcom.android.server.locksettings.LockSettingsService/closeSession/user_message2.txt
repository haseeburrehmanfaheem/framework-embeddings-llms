The method closeSession has the following code snippet:

This is path 1 for the API with depth 2:
public void closeSession(String p1){
	Object v3 = Objects.requireNonNull(p1, "invalid session");
	int v4 = Binder.getCallingUid();
	Object v6 = this.mSessionsByUid.get(v4);
	if (v6 != 0) {
		return;
	}
}
This is path 2 for the API with depth 2:
public void closeSession(String p1){
	Object v3 = Objects.requireNonNull(p1, "invalid session");
	int v4 = Binder.getCallingUid();
	Object v6 = this.mSessionsByUid.get(v4);
	if (v6 != 0) {
		Object v7 = this.mSessionsByUid.get(v4);
		RecoverySessionStorage$$ExternalSyntheticLambda0 v8 = new RecoverySessionStorage$$ExternalSyntheticLambda0(p1);
		boolean v10 = v7.removeIf(v8);
		return;
	}
}

and the following sink code:
['this.mRecoverableKeyStoreManager.closeSession(p1);', 'int v4 = Binder.getCallingUid();\nthis.mRecoverySessionStorage.remove(v4, p1);']

The method closeSession has the following similar APIs:

- API Name: removeKey(Ljava/lang/String;)V with Similarity Score: 0.8779990673065186
  - Access Control Level: SYS_OR_SIG and the following code:
this.mRecoverableKeyStoreManager.removeKey(p1);

- API Name: setRecoveryStatus(Ljava/lang/String;I)V with Similarity Score: 0.8212866187095642
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = Binder.getCallingUid();
int v5 = this.mDatabase.setRecoveryStatus(v4, p1, p2);

