The method removeWeakEscrowToken has the following code snippet:

This is path 1 for the API with depth 2:
public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		long v8 = LockSettingsService.getLong("sp-handle", 0, p2);
		long v7 = v8;
		if ((p1 < v7) != 0) {
			Integer v10 = Integer.valueOf(p2);
			boolean v11 = this.tokenMap.containsKey(v10);
			if (v11 != 0) {
				Integer v12 = Integer.valueOf(p2);
				Object v13 = this.tokenMap.get(v12);
				Long v14 = Long.valueOf(p1);
				Object v15 = v13.remove(v14);
				if (v15 == 0) {
					boolean v9 = ;
					if (v9 == 0) {
						boolean v17 = SyntheticPasswordManager.hasState("spblob", p1, p2);
						boolean v16 = v17;
						if (v16 == 0) {
							byte[] v19 = SyntheticPasswordManager.loadState("spblob", p1, p2);
							SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);
							SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
							SyntheticPasswordManager.destroyState("secdis", p1, p2);
							if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 2) {
								SyntheticPasswordManager.notifyWeakEscrowTokenRemovedListeners(p1, p2);
								boolean v6 = 1;
								Binder.restoreCallingIdentity(v5);
								return v6;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature("android.hardware.type.automotive");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		long v8 = LockSettingsService.getLong("sp-handle", 0, p2);
		long v7 = v8;
		if ((p1 < v7) != 0) {
			Integer v10 = Integer.valueOf(p2);
			boolean v11 = this.tokenMap.containsKey(v10);
			if (v11 != 0) {
				boolean v9 = 0;
				if (v9 == 0) {
					boolean v13 = SyntheticPasswordManager.hasState("spblob", p1, p2);
					boolean v12 = v13;
					if (v12 == 0) {
						byte[] v15 = SyntheticPasswordManager.loadState("spblob", p1, p2);
						SyntheticPasswordManager$SyntheticPasswordBlob v16 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v15);
						SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
						SyntheticPasswordManager.destroyState("secdis", p1, p2);
						if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 2) {
							SyntheticPasswordManager.notifyWeakEscrowTokenRemovedListeners(p1, p2);
							boolean v6 = 1;
							Binder.restoreCallingIdentity(v5);
							return v6;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['long v8 = LockSettingsService.getLong("sp-handle", 0, p2);\nboolean v17 = SyntheticPasswordManager.hasState("spblob", p1, p2);\nbyte[] v19 = SyntheticPasswordManager.loadState("spblob", p1, p2);\nSyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);\nSyntheticPasswordManager.destroySyntheticPassword(p1, p2);\nSyntheticPasswordManager.destroyState("secdis", p1, p2);', 'Integer v10 = Integer.valueOf(p2);\nboolean v11 = this.tokenMap.containsKey(v10);\nObject v13 = this.tokenMap.get(v12);\nLong v14 = Long.valueOf(p1);\nObject v15 = v13.remove(v14);', 'long v7 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);\nboolean v8 = this.mSpManager.removePendingToken(p1, p2);', 'boolean v9 = this.mSpManager.existsHandle(p1, p2);\nthis.mSpManager.destroyTokenBasedSyntheticPassword(p1, p2);', 'p0.checkManageWeakEscrowTokenMethodUsage();\nboolean v3 = p0.removeEscrowToken(p1, p2);']

The method removeWeakEscrowToken has the following similar APIs:

- API Name: hasPendingEscrowToken(I)Z with Similarity Score: 0.8720424771308899
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v3 = Integer.valueOf(p1);
boolean v4 = this.tokenMap.containsKey(v3);

- API Name: getCredentialType(I)I with Similarity Score: 0.8710253238677979
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);
long v16 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
int v2 = v17; return v2;

