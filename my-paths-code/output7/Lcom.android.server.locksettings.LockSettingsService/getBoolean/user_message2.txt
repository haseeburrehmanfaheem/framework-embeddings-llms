The method getBoolean has the following code snippet:

This is path 1 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p1 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = ;
						if (v4 == 0) {
							long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
							long v6 = v7;
							byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);
							if (v9 != 0) {
								int v8 = -1;
								if (v8 == 2) {
									long v17 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
									int v16 = v17;
									boolean v19 = LockPatternUtils.isQualityAlphabeticPassword(v16);
									if (v19 == 0) {
										boolean v20 = LockPatternUtils.isQualityNumericPin(v16);
										if (v20 == 0) {
											int v18 = 3;
											int v3 = v18;
											if (v3 != 1) {
												return ;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p1 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = ;
						if (v4 == 0) {
							long v7 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
							int v6 = v7;
							if (v6 != 65536) {
								String v9 = LockSettingsStorage.getLockPatternFilename(p1);
								boolean v10 = LockSettingsStorage.hasFile(v9);
								boolean v8 = v10;
								if (v8 == 0) {
									if (v6 < 131072) {
										String v12 = LockSettingsStorage.getLockPasswordFilename(p1);
										boolean v13 = LockSettingsStorage.hasFile(v12);
										boolean v11 = v13;
										if (v11 == 0) {
											boolean v15 = LockPatternUtils.isQualityAlphabeticPassword(v6);
											if (v15 == 0) {
												boolean v16 = LockPatternUtils.isQualityNumericPin(v6);
												if (v16 == 0) {
													int v14 = 3;
													int v3 = v14;
													if (v3 != 1) {
														return ;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			boolean v5 = "legacy_lock_pattern_enabled".equals(p1);
			if (v5 == 0) {
				String v6 = LockSettingsStorage.readKeyValue(, 0, p3);
				String v4 = v6;
				boolean v7 = TextUtils.isEmpty(v4);
				if (v7 == 0) {
					boolean v8 = v4.equals("1");
					if (v8 != 0) {
						boolean v9 = v4.equals("true");
						if (v9 == 0) {
							boolean v3 = ;
							return v3;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();\nlong v7 = LockSettingsService.getLong("sp-handle", 0, p1);\nbyte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);\nlong v17 = this.mStorage.getLong("lockscreen.password_type", 0, p1);', 'boolean v4 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p3);\nint v5 = LockSettingsService.getKeyguardStoredQuality(p3);\nboolean v6 = this.mStorage.hasPattern(p3);\nboolean v7 = this.mStorage.hasPassword(p3);', 'int v3 = p0.getCredentialTypeInternal(p3);']

The method getBoolean has the following similar APIs:

- API Name: getCredentialType(I)I with Similarity Score: 0.9588590264320374
  - Access Control Level: SYS_OR_SIG and the following code:
int v2 = p0.getCredentialTypeInternal(p1); return v2;

- API Name: getCredentialType(I)I with Similarity Score: 0.9276578426361084
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p1);
int v4 = LockSettingsService.getKeyguardStoredQuality(p1);
boolean v5 = this.mStorage.hasPattern(p1);
int v7 = LockSettingsService.pinOrPasswordQualityToCredentialType(v4); int v2 = v7; return v2;

