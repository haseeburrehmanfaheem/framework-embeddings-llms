This is path 1 for the API with depth 2:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p1 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = ;
						if (v4 == 0) {
							long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
							long v6 = v7;
							byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);
							if (v9 != 0) {
								int v8 = -1;
								if (v8 == 2) {
									long v17 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
									int v16 = v17;
									boolean v19 = LockPatternUtils.isQualityAlphabeticPassword(v16);
									if (v19 == 0) {
										boolean v20 = LockPatternUtils.isQualityNumericPin(v16);
										if (v20 == 0) {
											int v18 = 3;
											int v3 = v18;
											if (v3 != 1) {
												return ;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			boolean v4 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p3);
			if (v4 == 0) {
				int v5 = LockSettingsService.getKeyguardStoredQuality(p3);
				if (v5 != 65536) {
					boolean v6 = this.mStorage.hasPattern(p3);
					if (v6 == 0) {
						if (v5 < 131072) {
							boolean v7 = this.mStorage.hasPassword(p3);
							if (v7 == 0) {
								int v8 = LockSettingsService.pinOrPasswordQualityToCredentialType(v5);
								int v3 = v8;
								if (v3 != 1) {
									return ;
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = "lock_pattern_autolock".equals(p1);
	if (v2 == 0) {
		int v3 = p0.getCredentialTypeInternal(p3);
		if (v3 != 1) {
			return ;
		}
	}
}
