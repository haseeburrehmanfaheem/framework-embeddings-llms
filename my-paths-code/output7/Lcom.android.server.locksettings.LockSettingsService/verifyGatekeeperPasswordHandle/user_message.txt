This is path 1 for the API with depth 2:
public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		if (this.mGateKeeperService == 0) {
			IBinder v4 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
			if (v4 == 0) {
				LockSettingsService$GateKeeperDiedRecipient v5 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
				v4.linkToDeath(v5, 0);
				if (v4 != 0) {
					IInterface v10 = v4.queryLocalInterface("android.service.gatekeeper.IGateKeeperService");
					if (v10 == 0) {
						if (v10 instanceof IGateKeeperService == 0) {
							IGateKeeperService$Stub$Proxy v11 = new IGateKeeperService$Stub$Proxy(v4);
							IGateKeeperService v9 = v11;
							this.mGateKeeperService = v9;
							IGateKeeperService v3 = v9;
							byte[] v15 = SyntheticPasswordManager.loadState("handle", 0, p4);
							byte[] v14 = v15;
							if (v14 != 0) {
								GateKeeperResponse v16 = v3.verifyChallenge(p3, p2, v14, v2);
								int v17 = this.mResponseCode;
								if (v17 != 0) {
									VerifyCredentialResponse$Builder v18 = new VerifyCredentialResponse$Builder();
									byte[] v20 = this.mPayload;
									this.mGatekeeperHAT = v20;
									VerifyCredentialResponse$Builder v21 = VerifyCredentialResponse$Builder;
									VerifyCredentialResponse v23 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0);
									VerifyCredentialResponse v22 = v23;
									boolean v25 = this.mShouldReEnroll;
									if (v25 == 0) {
										GateKeeperResponse v26 = v3.enroll(p3, v14, v14, v2);
										int v27 = this.mResponseCode;
										if (v27 != 0) {
											byte[] v28 = this.mPayload;
											SyntheticPasswordManager.saveState("handle", v28, 0, p4);
											VerifyCredentialResponse v31 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
											byte[] v32 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
											if (v32 != 0) {
												GateKeeperResponse v33 = v3.verifyChallenge(p3, p2, v32, v2);
												int v34 = v33.getResponseCode();
												if (v34 != 0) {
													VerifyCredentialResponse$Builder v35 = new VerifyCredentialResponse$Builder();
													byte[] v37 = v33.getPayload();
													VerifyCredentialResponse$Builder v38 = v35.setGatekeeperHAT(v37);
													VerifyCredentialResponse v39 = v38.build();
													boolean v40 = v33.getShouldReEnroll();
													if (v40 == 0) {
														GateKeeperResponse v41 = v3.enroll(p3, v32, v32, v2);
														int v42 = .getResponseCode();
														if (v42 != 0) {
															VerifyCredentialResponse v13 = v39;
															return v31;
															return ;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		if (this.mGateKeeperService == 0) {
			IBinder v4 = ServiceManager.getService("android.service.gatekeeper.IGateKeeperService");
			if (v4 == 0) {
				LockSettingsService$GateKeeperDiedRecipient v5 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
				v4.linkToDeath(v5, 0);
				IGateKeeperService v9 = IGateKeeperService$Stub.asInterface(v4);
				this.mGateKeeperService = v9;
				IGateKeeperService v3 = v9;
				byte[] v11 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
				if (v11 != 0) {
					GateKeeperResponse v12 = v3.verifyChallenge(p3, p2, v11, v2);
					int v13 = v12.getResponseCode();
					if (v13 != 0) {
						VerifyCredentialResponse$Builder v14 = new VerifyCredentialResponse$Builder();
						byte[] v16 = v12.getPayload();
						VerifyCredentialResponse$Builder v17 = v14.setGatekeeperHAT(v16);
						VerifyCredentialResponse v18 = v17.build();
						boolean v19 = v12.getShouldReEnroll();
						if (v19 == 0) {
							GateKeeperResponse v20 = v3.enroll(p3, v11, v11, v2);
							int v21 = .getResponseCode();
							if (v21 != 0) {
								VerifyCredentialResponse v10 = v18;
								return ;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		return ;
	}
}
