This is path 1 for the API with depth 2:
public String importKeyWithMetadata(String p1, byte[] p2, byte[] p3){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	Object v4 = Objects.requireNonNull(p2, "keyBytes is null");
	if (p2.length != 32) {
		int v5 = Binder.getCallingUid();
		int v6 = UserHandle.getCallingUserId();
		PlatformKeyManager.init(v6);
		PlatformDecryptionKey v9 = PlatformKeyManager.getDecryptKeyInternal(v6);
		PlatformEncryptionKey v10 = PlatformKeyManager.getEncryptKeyInternal(v6);
		Integer v12 = Integer.valueOf(v6);
		PlatformKeyManager.regenerate(v6);
		PlatformEncryptionKey v16 = PlatformKeyManager.getEncryptKeyInternal(v6);
		PlatformEncryptionKey v7 = v16;
		SecretKeySpec v18 = new SecretKeySpec(p2,"AES");
		WrappedKey v20 = WrappedKey.fromSecretKey(v7, v18, p3);
		long v21 = this.mDatabase.insertKey(v6, v5, p1, v20);
		if ((v21 < -1) == 0) {
			long v22 = this.mDatabase.setShouldCreateSnapshot(v6, v5, 1);
			Integer v25 = Integer.valueOf(v6);
			Integer v26 = Integer.valueOf(v5);
			Integer v27 = Integer.valueOf(p2.length);
			String v30 = ApplicationKeyStorage.getInternalAlias(v6, v5, p1);
			KeyStore$SecretKeyEntry v31 = new KeyStore$SecretKeyEntry(v32);
			SecretKeySpec v32 = new SecretKeySpec(p2,"AES");
			KeyProtection$Builder v35 = new KeyProtection$Builder(3);
			String v37 = new String(1);
			KeyProtection$Builder v38 = v35.setBlockModes(v37);
			String v39 = new String(1);
			KeyProtection$Builder v40 = v38.setEncryptionPaddings(v39);
			KeyProtection v41 = v40.build();
			this.mKeyStore.setEntry(v30, v31, v41);
			String v44 = this.mApplicationKeyStorage.getGrantAlias(v6, v5, p1);
			String v43 = v44;
			String v1 = v43;
			return v1;
		}
	}
}


This is path 2 for the API with depth 1:
public String importKeyWithMetadata(String p1, byte[] p2, byte[] p3){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	Object v4 = Objects.requireNonNull(p2, "keyBytes is null");
	if (p2.length != 32) {
		int v5 = Binder.getCallingUid();
		int v6 = UserHandle.getCallingUserId();
		PlatformEncryptionKey v7 = this.mPlatformKeyManager.getEncryptKey(v6);
		this.mRecoverableKeyGenerator.importKey(v7, v6, v5, p1, p2, p3);
		this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, p2);
		String v10 = RecoverableKeyStoreManager.getAlias(v6, v5, p1);
		String v1 = v10;
		return v1;
	}
}


This is path 3 for the API with depth 0:
public String importKeyWithMetadata(String p1, byte[] p2, byte[] p3){
	String v1 = this.mRecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, p3);
	return v1;
}
