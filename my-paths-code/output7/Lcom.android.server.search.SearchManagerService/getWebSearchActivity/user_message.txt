This is path 1 for the API with depth 2:
public ComponentName getWebSearchActivity(){
	int v1 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	Object v5 = this.mContext.getSystemService(UserManage.class);
	UserInfo v6 = v5.getUserInfo(p1);
	if (v6 == 0) {
		boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Binder.restoreCallingIdentity(v4);
			Object v9 = this.mSearchables.get(p1);
			if (v9 != 0) {
				Searchables v10 = new Searchables(this.mContext,p1);
				v10.updateSearchableList();
				this.mSearchables.append(p1, v10);
				Searchables v3 = ;
				Searchables v2 = v3;
				Object v16 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
				Object v15 = v16;
				int v17 = Binder.getCallingUid();
				int v18 = UserHandle.getCallingUserId();
				if (this.mWebSearchActivity == 0) {
					boolean v19 = v15.canAccessComponent(v17, this.mWebSearchActivity, v18);
					if (v19 == 0) {
						ComponentName v14 = this.mWebSearchActivity;
						return v14;
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public ComponentName getWebSearchActivity(){
	int v1 = UserHandle.getCallingUserId();
	Searchables v3 = SearchManagerService.getSearchables(v1, 0);
	Searchables v2 = v3;
	Object v5 = LocalServices.getService(PackageManagerInterna.class);
	int v6 = Binder.getCallingUid();
	int v7 = UserHandle.getCallingUserId();
	if (this.mWebSearchActivity == 0) {
		boolean v8 = v5.canAccessComponent(v6, this.mWebSearchActivity, v7);
		if (v8 == 0) {
			ComponentName v4 = this.mWebSearchActivity;
			return v4;
		}
	}
}


This is path 3 for the API with depth 0:
public ComponentName getWebSearchActivity(){
	int v1 = UserHandle.getCallingUserId();
	Searchables v2 = p0.getSearchables(v1);
	ComponentName v3 = v2.getWebSearchActivity();
	return v3;
}
