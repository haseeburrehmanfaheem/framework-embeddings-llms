The method getSearchableInfo has the following code snippet:

This is path 1 for the API with depth 2:
public SearchableInfo getSearchableInfo(ComponentName p1){
	if (p1 != 0) {
		int v1 = UserHandle.getCallingUserId();
		long v4 = Binder.clearCallingIdentity();
		Object v5 = this.mContext.getSystemService(UserManage.class);
		UserInfo v6 = v5.getUserInfo(p1);
		if (v6 == 0) {
			boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
			if (v7 == 0) {
				Binder.restoreCallingIdentity(v4);
				Object v9 = this.mSearchables.get(p1);
				if (v9 != 0) {
					Searchables v10 = new Searchables(this.mContext,p1);
					v10.updateSearchableList();
					this.mSearchables.append(p1, v10);
					Searchables v3 = ;
					Searchables v2 = v3;
					Object v15 = this.mSearchablesMap.get(p1);
					if (v15 == 0) {
						ActivityInfo v16 = this.mPm.getActivityInfo(p1, 128, this.mUserId);
						if (ActivityInfo.metaData == 0) {
							String v17 = ActivityInfo.metaData.getString("android.app.default_searchable");
							if ( != 0) {
								if (ApplicationInfo.metaData == 0) {
									String v18 = ApplicationInfo.metaData.getString("android.app.default_searchable");
									if ( == 0) {
										boolean v19 = .equals("*");
										if (v19 == 0) {
											String v20 = p1.getPackageName();
											char v21 = .charAt(0);
											if (v21 != 46) {
												ComponentName v22 = new ComponentName(v20,);
												Object v24 = this.mSearchablesMap.get();
												if (v24 == 0) {
													Object v25 = this.mSearchablesMap.put(p1, v24);
													if (v24 == 0) {
														Object v27 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
														Object v26 = v27;
														int v28 = Binder.getCallingUid();
														ComponentName v29 = v24.getSearchActivity();
														int v30 = UserHandle.getCallingUserId();
														boolean v31 = v26.canAccessComponent(v28, v29, v30);
														if (v31 == 0) {
															SearchableInfo v14 = v24;
															return v14;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public SearchableInfo getSearchableInfo(ComponentName p1){
	if (p1 != 0) {
		int v1 = UserHandle.getCallingUserId();
		long v4 = Binder.clearCallingIdentity();
		Object v5 = this.mContext.getSystemService(UserManage.class);
		UserInfo v6 = v5.getUserInfo(p1);
		if (v6 == 0) {
			boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
			if (v7 == 0) {
				Binder.restoreCallingIdentity(v4);
				Object v9 = this.mSearchables.get(p1);
				if (v9 != 0) {
					if (0 == 0) {
						v9.updateSearchableList();
						Searchables v3 = ;
						Searchables v2 = v3;
						Object v12 = this.mSearchablesMap.get(p1);
						if (v12 == 0) {
							ActivityInfo v13 = this.mPm.getActivityInfo(p1, 128, this.mUserId);
							if (ActivityInfo.metaData == 0) {
								String v14 = ActivityInfo.metaData.getString("android.app.default_searchable");
								if ( != 0) {
									if (ApplicationInfo.metaData == 0) {
										String v15 = ApplicationInfo.metaData.getString("android.app.default_searchable");
										if ( == 0) {
											boolean v16 = .equals("*");
											if (v16 == 0) {
												String v17 = p1.getPackageName();
												char v18 = .charAt(0);
												if (v18 != 46) {
													ComponentName v19 = new ComponentName(v17,);
													Object v21 = this.mSearchablesMap.get();
													if (v21 == 0) {
														Object v22 = this.mSearchablesMap.put(p1, v21);
														if (v21 == 0) {
															Object v24 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
															Object v23 = v24;
															int v25 = Binder.getCallingUid();
															ComponentName v26 = v21.getSearchActivity();
															int v27 = UserHandle.getCallingUserId();
															boolean v28 = v23.canAccessComponent(v25, v26, v27);
															if (v28 == 0) {
																SearchableInfo v11 = v21;
																return v11;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public SearchableInfo getSearchableInfo(ComponentName p1){
	if (p1 != 0) {
		int v1 = UserHandle.getCallingUserId();
		long v4 = Binder.clearCallingIdentity();
		Object v5 = this.mContext.getSystemService(UserManage.class);
		UserInfo v6 = v5.getUserInfo(p1);
		if (v6 == 0) {
			boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
			if (v7 == 0) {
				Binder.restoreCallingIdentity(v4);
				Object v9 = this.mSearchables.get(p1);
				if (v9 != 0) {
					Searchables v10 = new Searchables(this.mContext,p1);
					v10.updateSearchableList();
					this.mSearchables.append(p1, v10);
					Searchables v3 = ;
					Searchables v2 = v3;
					Object v15 = this.mSearchablesMap.get(p1);
					if (v15 == 0) {
						Object v17 = this.sLocalServiceObjects.get(PackageManagerInterna.class);
						Object v16 = v17;
						int v18 = Binder.getCallingUid();
						ComponentName v19 = v15.getSearchActivity();
						int v20 = UserHandle.getCallingUserId();
						boolean v21 = v16.canAccessComponent(v18, v19, v20);
						if (v21 == 0) {
							SearchableInfo v14 = v15;
							return v14;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v1 = UserHandle.getCallingUserId();\nObject v5 = this.mContext.getSystemService(UserManage.class);\nUserInfo v6 = v5.getUserInfo(p1);\nboolean v7 = v5.isUserUnlockingOrUnlocked(p1);\nSearchables v10 = new Searchables(this.mContext,p1);\nthis.mSearchables.append(p1, v10);\nObject v15 = this.mSearchablesMap.get(p1);\nObject v25 = this.mSearchablesMap.put(p1, v24);\nSearchableInfo v14 = v24;\nreturn v14;']

The method getSearchableInfo has the following similar APIs:

- API Name: getGlobalSearchActivities()Ljava/util/List; with Similarity Score: 0.9240764379501343
  - Access Control Level: NONE and the following code:
int v1 = UserHandle.getCallingUserId();
Object v5 = this.mContext.getSystemService(UserManage.class);
UserInfo v6 = v5.getUserInfo(p1);
Searchables v10 = new Searchables(this.mContext,p1);
v10.updateSearchableList();
this.mSearchables.append(p1, v10);
ArrayList v16 = new ArrayList(v17);
Iterator v22 = this.mGlobalSearchActivities.iterator();
return v14;

- API Name: isHibernatingForUser(Ljava/lang/String;I)Z with Similarity Score: 0.7895438075065613
  - Access Control Level: SYS_OR_SIG and the following code:
int v12 = this.mIActivityManager.handleIncomingUser(v11, v10, p2, 0, 1, "isHibernatingForUser", 0);
boolean v14 = this.mUserManager.isUserUnlockingOrUnlocked(v9);
if (v14 != 0) {
boolean v15 = this.mUserStates.contains(v9);
Object v19 = this.mUserStates.get(v9);
Object v20 = v19.get(p1);

