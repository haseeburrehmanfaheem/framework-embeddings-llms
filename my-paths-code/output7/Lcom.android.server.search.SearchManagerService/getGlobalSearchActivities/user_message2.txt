The method getGlobalSearchActivities has the following code snippet:

This is path 1 for the API with depth 2:
public List getGlobalSearchActivities(){
	int v1 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	Object v5 = this.mContext.getSystemService(UserManage.class);
	UserInfo v6 = v5.getUserInfo(p1);
	if (v6 == 0) {
		boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Binder.restoreCallingIdentity(v4);
			Object v9 = this.mSearchables.get(p1);
			if (v9 != 0) {
				Searchables v10 = new Searchables(this.mContext,p1);
				v10.updateSearchableList();
				this.mSearchables.append(p1, v10);
				Searchables v3 = ;
				Searchables v2 = v3;
				if (this.mGlobalSearchActivities != 0) {
					ArrayList v16 = new ArrayList(v17);
					int v17 = this.mGlobalSearchActivities.size();
					Object v19 = LocalServices.getService(PackageManagerInterna.class);
					int v20 = Binder.getCallingUid();
					int v21 = UserHandle.getCallingUserId();
					Iterator v22 = this.mGlobalSearchActivities.iterator();
					boolean v23 = v22.hasNext();
					if (v23 == 0) {
						Object v24 = v22.next();
						ComponentName v25 = ResolveInfo.activityInfo.getComponentName();
						boolean v26 = v19.canAccessComponent(v20, v25, v21);
						if (v26 == 0) {
							boolean v27 = v16.add(v24);
							boolean v28 = v22.hasNext();
							if (v28 == 0) {
								ArrayList v15 = v16;
								ArrayList v14 = v15;
								return v14;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getGlobalSearchActivities(){
	int v1 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	Object v5 = this.mContext.getSystemService(UserManage.class);
	UserInfo v6 = v5.getUserInfo(p1);
	if (v6 == 0) {
		boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Binder.restoreCallingIdentity(v4);
			Object v9 = this.mSearchables.get(p1);
			if (v9 != 0) {
				if (0 == 0) {
					v9.updateSearchableList();
					Searchables v3 = ;
					Searchables v2 = v3;
					if (this.mGlobalSearchActivities != 0) {
						ArrayList v13 = new ArrayList(v14);
						int v14 = this.mGlobalSearchActivities.size();
						Object v16 = LocalServices.getService(PackageManagerInterna.class);
						int v17 = Binder.getCallingUid();
						int v18 = UserHandle.getCallingUserId();
						Iterator v19 = this.mGlobalSearchActivities.iterator();
						boolean v20 = v19.hasNext();
						if (v20 == 0) {
							Object v21 = v19.next();
							ComponentName v22 = ResolveInfo.activityInfo.getComponentName();
							boolean v23 = v16.canAccessComponent(v17, v22, v18);
							if (v23 == 0) {
								boolean v24 = v13.add(v21);
								boolean v25 = v19.hasNext();
								if (v25 == 0) {
									ArrayList v12 = v13;
									ArrayList v11 = v12;
									return v11;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getGlobalSearchActivities(){
	int v1 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	Object v5 = this.mContext.getSystemService(UserManage.class);
	UserInfo v6 = v5.getUserInfo(p1);
	if (v6 == 0) {
		boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Binder.restoreCallingIdentity(v4);
			Object v9 = this.mSearchables.get(p1);
			if (v9 != 0) {
				Searchables v10 = new Searchables(this.mContext,p1);
				v10.updateSearchableList();
				this.mSearchables.append(p1, v10);
				Searchables v3 = ;
				Searchables v2 = v3;
				if (this.mGlobalSearchActivities != 0) {
					ArrayList v15 = 0;
					ArrayList v14 = v15;
					return v14;
				}
			}
		}
	}
}

and the following sink code:
['int v1 = UserHandle.getCallingUserId();\nObject v5 = this.mContext.getSystemService(UserManage.class);\nUserInfo v6 = v5.getUserInfo(p1);\nSearchables v10 = new Searchables(this.mContext,p1);\nv10.updateSearchableList();\nthis.mSearchables.append(p1, v10);\nArrayList v16 = new ArrayList(v17);\nIterator v22 = this.mGlobalSearchActivities.iterator();\nreturn v14;', 'int v1 = UserHandle.getCallingUserId();\nSearchables v3 = SearchManagerService.getSearchables(v1, 0);\nArrayList v5 = Searchables.createFilterdResolveInfoList(this.mGlobalSearchActivities);\nreturn v4;', 'int v1 = UserHandle.getCallingUserId();\nSearchables v2 = p0.getSearchables(v1);\nArrayList v3 = v2.getGlobalSearchActivities();\nreturn v3;']

The method getGlobalSearchActivities has the following similar APIs:

- API Name: getSearchableInfo(Landroid/content/ComponentName;)Landroid/app/SearchableInfo; with Similarity Score: 0.9240764379501343
  - Access Control Level: NONE and the following code:
int v1 = UserHandle.getCallingUserId();
Object v5 = this.mContext.getSystemService(UserManage.class);
UserInfo v6 = v5.getUserInfo(p1);
boolean v7 = v5.isUserUnlockingOrUnlocked(p1);
Searchables v10 = new Searchables(this.mContext,p1);
this.mSearchables.append(p1, v10);
Object v15 = this.mSearchablesMap.get(p1);
Object v25 = this.mSearchablesMap.put(p1, v24);
SearchableInfo v14 = v24;
return v14;

- API Name: startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I with Similarity Score: 0.838914692401886
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = UserHandle.getCallingUserId();
SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p11);
if (v4 == 0) { ... }
boolean v8 = ActivityTaskManagerService.isCallerRecents(v7);
long v9 = Binder.clearCallingIdentity();
ActivityOptions v12 = v4.getOriginalOptions();
boolean v13 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v12);
return v2;

