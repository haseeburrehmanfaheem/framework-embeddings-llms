The method getPrimaryClipDescription has the following code snippet:

This is path 1 for the API with depth 2:
public ClipDescription getPrimaryClipDescription(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	if ( != 0) {
		boolean v9 = ;
		boolean v8 = v9;
		if (v8 == 0) {
			long v20 = Binder.clearCallingIdentity();
			Context v21 = ClipboardService.getContext();
			Object v22 = v21.getSystemService(KeyguardManage.class);
			if (v22 == 0) {
				boolean v23 = v22.isDeviceLocked(p2);
				if (v23 == 0) {
					Binder.restoreCallingIdentity(v20);
					boolean v19 = ;
					boolean v18 = v19;
					if (v18 == 0) {
						Object v25 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v28 = this.mClipboards.get(p2);
						if (v28 != 0) {
							ClipboardService$PerUserClipboard v29 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v29);
							ClipboardService$PerUserClipboard v27 = ;
							ClipboardService$PerUserClipboard v26 = v27;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								ClipDescription v32 = ClipboardService$PerUserClipboard.primaryClip.getDescription();
								return ;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public ClipDescription getPrimaryClipDescription(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	if ( != 0) {
		boolean v9 = ;
		boolean v8 = v9;
		if (v8 == 0) {
			long v20 = Binder.clearCallingIdentity();
			Context v21 = ClipboardService.getContext();
			Object v22 = v21.getSystemService(KeyguardManage.class);
			if (v22 == 0) {
				boolean v23 = v22.isDeviceLocked(p2);
				if (v23 == 0) {
					Binder.restoreCallingIdentity(v20);
					boolean v19 = ;
					boolean v18 = v19;
					if (v18 == 0) {
						Object v25 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v28 = this.mClipboards.get(p2);
						if (v28 != 0) {
							ClipboardService$PerUserClipboard v29 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v29);
							ClipboardService$PerUserClipboard v27 = ;
							ClipboardService$PerUserClipboard v26 = v27;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								ClipDescription v32 = ClipboardService$PerUserClipboard.primaryClip.getDescription();
								return ;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public ClipDescription getPrimaryClipDescription(String p1, String p2, int p3){
	int v3 = ClipboardService.getIntendingUserId(p2, p3);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getAppId(v4);
	int v6 = UserHandle.getUid(v3, v5);
	int v2 = v6;
	int v1 = v2;
	int v7 = UserHandle.getUserId(v1);
	if ( != 0) {
		boolean v9 = ;
		boolean v8 = v9;
		if (v8 == 0) {
			long v20 = Binder.clearCallingIdentity();
			Context v21 = ClipboardService.getContext();
			Object v22 = v21.getSystemService(KeyguardManage.class);
			if (v22 == 0) {
				boolean v23 = v22.isDeviceLocked(p2);
				if (v23 == 0) {
					Binder.restoreCallingIdentity(v20);
					boolean v19 = ;
					boolean v18 = v19;
					if (v18 == 0) {
						return 0;
					}
				}
			}
		}
	}
}

and the following sink code:
['int v2 = this.this$0.getIntendingUid(p1, p3);\nboolean v5 = this.this$0.clipboardAccessAllowed(29, p1, p2, v1, v3, 0);\nif (v4 == 0) { ... }\nClipDescription v11 = this.mClipDescription;\nreturn;', 'int v3 = ClipboardService.getIntendingUserId(p2, p3);\nlong v20 = Binder.clearCallingIdentity();\nObject v22 = v21.getSystemService(KeyguardManage.class);\nif (v23 == 0) { ... }\nClipDescription v32 = ClipboardService$PerUserClipboard.primaryClip.getDescription();', 'int v1 = ClipboardService.-$$Nest$mgetIntendingUid(this.this$0, p1, p3);\nboolean v3 = ClipboardService.-$$Nest$mclipboardAccessAllowed(this.this$0, 29, p1, p2, v1, v2, 0);\nif (v3 == 0) { ... }\nClipDescription v7 = ClipboardService$PerUserClipboard.primaryClip.getDescription();']

The method getPrimaryClipDescription has the following similar APIs:

- API Name: getPrimaryClip(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ClipData; with Similarity Score: 0.9306007027626038
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = ClipboardService.-$$Nest$mgetIntendingUid(this.this$0, p1, p3);
ClipboardService$PerUserClipboard v7 = ClipboardService.-$$Nest$mgetClipboardLocked(this.this$0, v2);
if (ClipboardService$PerUserClipboard.primaryClip == 0) { ... }
return ClipboardService$PerUserClipboard.primaryClip;

- API Name: getPrimaryClipSource(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.9271458983421326
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = ClipboardService.getIntendingUserId(p2, p3);
int v6 = Binder.getCallingUid();
int v7 = UserHandle.getAppId(v6);
int v8 = UserHandle.getUid(v5, v7);
long v22 = Binder.clearCallingIdentity();
Context v23 = ClipboardService.getContext();
Object v24 = v23.getSystemService(KeyguardManage.class);
ClipboardService$PerUserClipboard v31 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
this.mClipboards.put(p2, v31);
return ClipboardService$PerUserClipboard.mPrimaryClipPackage;

