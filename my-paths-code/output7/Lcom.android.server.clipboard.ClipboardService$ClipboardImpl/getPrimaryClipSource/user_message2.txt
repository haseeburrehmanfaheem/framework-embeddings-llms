The method getPrimaryClipSource has the following code snippet:

This is path 1 for the API with depth 2:
public String getPrimaryClipSource(String p1, String p2, int p3){
	int v5 = ClipboardService.getIntendingUserId(p2, p3);
	int v6 = Binder.getCallingUid();
	int v7 = UserHandle.getAppId(v6);
	int v8 = UserHandle.getUid(v5, v7);
	int v4 = v8;
	int v3 = v4;
	int v9 = UserHandle.getUserId(v3);
	if ( != 0) {
		boolean v11 = ;
		boolean v10 = v11;
		if (v10 == 0) {
			long v22 = Binder.clearCallingIdentity();
			Context v23 = ClipboardService.getContext();
			Object v24 = v23.getSystemService(KeyguardManage.class);
			if (v24 == 0) {
				boolean v25 = v24.isDeviceLocked(p2);
				if (v25 == 0) {
					Binder.restoreCallingIdentity(v22);
					boolean v21 = ;
					boolean v20 = v21;
					if (v20 == 0) {
						Object v27 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v30 = this.mClipboards.get(p2);
						if (v30 != 0) {
							ClipboardService$PerUserClipboard v31 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v31);
							ClipboardService$PerUserClipboard v29 = ;
							ClipboardService$PerUserClipboard v28 = v29;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								return ClipboardService$PerUserClipboard.mPrimaryClipPackage;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public String getPrimaryClipSource(String p1, String p2, int p3){
	int v5 = ClipboardService.getIntendingUserId(p2, p3);
	int v6 = Binder.getCallingUid();
	int v7 = UserHandle.getAppId(v6);
	int v8 = UserHandle.getUid(v5, v7);
	int v4 = v8;
	int v3 = v4;
	int v9 = UserHandle.getUserId(v3);
	if ( != 0) {
		boolean v11 = ;
		boolean v10 = v11;
		if (v10 == 0) {
			long v22 = Binder.clearCallingIdentity();
			Context v23 = ClipboardService.getContext();
			Object v24 = v23.getSystemService(KeyguardManage.class);
			if (v24 == 0) {
				boolean v25 = v24.isDeviceLocked(p2);
				if (v25 == 0) {
					Binder.restoreCallingIdentity(v22);
					boolean v21 = ;
					boolean v20 = v21;
					if (v20 == 0) {
						Object v27 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v30 = this.mClipboards.get(p2);
						if (v30 != 0) {
							ClipboardService$PerUserClipboard v31 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v31);
							ClipboardService$PerUserClipboard v29 = ;
							ClipboardService$PerUserClipboard v28 = v29;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								return ClipboardService$PerUserClipboard.mPrimaryClipPackage;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public String getPrimaryClipSource(String p1, String p2, int p3){
	int v5 = ClipboardService.getIntendingUserId(p2, p3);
	int v6 = Binder.getCallingUid();
	int v7 = UserHandle.getAppId(v6);
	int v8 = UserHandle.getUid(v5, v7);
	int v4 = v8;
	int v3 = v4;
	int v9 = UserHandle.getUserId(v3);
	if ( != 0) {
		boolean v11 = ;
		boolean v10 = v11;
		if (v10 == 0) {
			long v22 = Binder.clearCallingIdentity();
			Context v23 = ClipboardService.getContext();
			Object v24 = v23.getSystemService(KeyguardManage.class);
			if (v24 == 0) {
				boolean v25 = v24.isDeviceLocked(p2);
				if (v25 == 0) {
					Binder.restoreCallingIdentity(v22);
					boolean v21 = ;
					boolean v20 = v21;
					if (v20 == 0) {
						Object v27 = ClipboardService.-$$Nest$fgetmLock(this.this$0);
						Object v30 = this.mClipboards.get(p2);
						if (v30 != 0) {
							ClipboardService$PerUserClipboard v31 = new ClipboardService$PerUserClipboard(ClipboardService,p2);
							this.mClipboards.put(p2, v31);
							ClipboardService$PerUserClipboard v29 = ;
							ClipboardService$PerUserClipboard v28 = v29;
							if (ClipboardService$PerUserClipboard.primaryClip == 0) {
								return 0;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v5 = ClipboardService.getIntendingUserId(p2, p3);\nint v6 = Binder.getCallingUid();\nint v7 = UserHandle.getAppId(v6);\nint v8 = UserHandle.getUid(v5, v7);\nlong v22 = Binder.clearCallingIdentity();\nContext v23 = ClipboardService.getContext();\nObject v24 = v23.getSystemService(KeyguardManage.class);\nClipboardService$PerUserClipboard v31 = new ClipboardService$PerUserClipboard(ClipboardService,p2);\nthis.mClipboards.put(p2, v31);\nreturn ClipboardService$PerUserClipboard.mPrimaryClipPackage;', 'int v4 = this.this$0.getIntendingUid(p1, p3);\nint v5 = UserHandle.getUserId(v3);\nboolean v7 = this.this$0.clipboardAccessAllowed(29, p1, p2, v3, v5, 0);\nClipboardService$PerUserClipboard v12 = this.this$0.getClipboardLocked(v5);\nreturn ClipboardService$PerUserClipboard.mPrimaryClipPackage;', 'int v3 = ClipboardService.-$$Nest$mgetIntendingUid(this.this$0, p1, p3);\nboolean v5 = ClipboardService.-$$Nest$mclipboardAccessAllowed(this.this$0, 29, p1, p2, v3, v4, 0);\nClipboardService$PerUserClipboard v8 = ClipboardService.-$$Nest$mgetClipboardLocked(this.this$0, v4);\nreturn ClipboardService$PerUserClipboard.mPrimaryClipPackage;']

The method getPrimaryClipSource has the following similar APIs:

- API Name: getPrimaryClipDescription(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ClipDescription; with Similarity Score: 0.9271458983421326
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = ClipboardService.getIntendingUserId(p2, p3);
long v20 = Binder.clearCallingIdentity();
Object v22 = v21.getSystemService(KeyguardManage.class);
if (v23 == 0) { ... }
ClipDescription v32 = ClipboardService$PerUserClipboard.primaryClip.getDescription();

- API Name: getPrimaryClipDescription(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ClipDescription; with Similarity Score: 0.9262102842330933
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = ClipboardService.-$$Nest$mgetIntendingUid(this.this$0, p1, p3);
boolean v3 = ClipboardService.-$$Nest$mclipboardAccessAllowed(this.this$0, 29, p1, p2, v1, v2, 0);
if (v3 == 0) { ... }
ClipDescription v7 = ClipboardService$PerUserClipboard.primaryClip.getDescription();

