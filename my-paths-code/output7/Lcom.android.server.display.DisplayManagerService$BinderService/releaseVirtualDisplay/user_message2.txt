The method releaseVirtualDisplay has the following code snippet:

This is path 1 for the API with depth 2:
public void releaseVirtualDisplay(IVirtualDisplayCallback p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v2 = p1.asBinder();
	if (this.mVirtualDisplayAdapter != 0) {
		DisplayDevice v5 = this.mVirtualDisplayAdapter.releaseVirtualDisplayLocked(p2);
		if (v5 == 0) {
			this.mDisplayDeviceRepo.onDisplayDeviceEvent(v5, 3);
			Binder.restoreCallingIdentity(v1);
			return;
		}
	}
}

and the following sink code:
['this.this$0.releaseVirtualDisplayInternal(v2);', 'DisplayManagerService.-$$Nest$mreleaseVirtualDisplayInternal(this.this$0, v2);', 'DisplayDevice v5 = this.mVirtualDisplayAdapter.releaseVirtualDisplayLocked(p2);\nthis.mDisplayDeviceRepo.onDisplayDeviceEvent(v5, 3);']

The method releaseVirtualDisplay has the following similar APIs:

- API Name: resizeVirtualDisplay(Landroid/hardware/display/IVirtualDisplayCallback;III)V with Similarity Score: 0.817607045173645
  - Access Control Level: NONE and the following code:
DisplayManagerService.-$$Nest$mresizeVirtualDisplayInternal(this.this$0, v2, p2, p3, p4);

- API Name: resizeVirtualDisplay(Landroid/hardware/display/IVirtualDisplayCallback;III)V with Similarity Score: 0.7844381332397461
  - Access Control Level: NONE and the following code:
this.this$0.resizeVirtualDisplayInternal(v2, p2, p3, p4);

