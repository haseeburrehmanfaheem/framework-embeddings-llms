The method getBrightnessConfigurationForDisplay has the following code snippet:

This is path 1 for the API with depth 2:
public BrightnessConfiguration getBrightnessConfigurationForDisplay(String p1, int p2){
	long v6 = Binder.clearCallingIdentity();
	Object v9 = this.mContext.getSystemService(UserManage.class);
	UserManager v8 = v9;
	UserManager v7 = v8;
	int v10 = v7.getUserSerialNumber(p2);
	DisplayManagerService$SyncRoot v11 = DisplayManagerService.-$$Nest$fgetmSyncRoot(this.this$0);
	BrightnessConfiguration v14 = this.mPersistentDataStore.getBrightnessConfigurationForDisplayLocked(p2, p3);
	if (v14 != 0) {
		BrightnessConfiguration v15 = this.mPersistentDataStore.getBrightnessConfiguration(p3);
		BrightnessConfiguration v13 = ;
		BrightnessConfiguration v12 = v13;
		if (v12 != 0) {
			DisplayDevice v18 = this.mDisplayDeviceRepo.getByUniqueIdLocked(p2);
			LogicalDisplay v19 = this.mLogicalDisplayMapper.getDisplayLocked(v18);
			if (v19 == 0) {
				int v20 = v19.getDisplayIdLocked();
				Object v21 = this.mDisplayPowerControllers.get(v20);
				DisplayPowerController v17 = v21;
				DisplayPowerController v16 = v17;
				if (v16 == 0) {
					if (this.mAutomaticBrightnessController != 0) {
						BrightnessConfiguration v24 = this.mInteractiveModeBrightnessMapper.getDefaultConfig();
						BrightnessConfiguration v23 = v24;
						BrightnessConfiguration v22 = v23;
						Binder.restoreCallingIdentity(v6);
						return ;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public BrightnessConfiguration getBrightnessConfigurationForDisplay(String p1, int p2){
	long v6 = Binder.clearCallingIdentity();
	Object v9 = this.mContext.getSystemService(UserManage.class);
	UserManager v8 = v9;
	UserManager v7 = v8;
	int v10 = v7.getUserSerialNumber(p2);
	DisplayManagerService$SyncRoot v11 = DisplayManagerService.-$$Nest$fgetmSyncRoot(this.this$0);
	BrightnessConfiguration v14 = this.mPersistentDataStore.getBrightnessConfigurationForDisplayLocked(p2, p3);
	if (v14 != 0) {
		BrightnessConfiguration v15 = this.mPersistentDataStore.getBrightnessConfiguration(p3);
		BrightnessConfiguration v13 = ;
		BrightnessConfiguration v12 = v13;
		if (v12 != 0) {
			DisplayDevice v18 = this.mDisplayDeviceRepo.getByUniqueIdLocked(p2);
			LogicalDisplay v19 = this.mLogicalDisplayMapper.getDisplayLocked(v18);
			if (v19 == 0) {
				DisplayPowerController v17 = 0;
				DisplayPowerController v16 = v17;
				if (v16 == 0) {
					if (this.mAutomaticBrightnessController != 0) {
						BrightnessConfiguration v22 = this.mInteractiveModeBrightnessMapper.getDefaultConfig();
						BrightnessConfiguration v21 = v22;
						BrightnessConfiguration v20 = v21;
						Binder.restoreCallingIdentity(v6);
						return ;
					}
				}
			}
		}
	}
}

and the following sink code:
['int v10 = v7.getUserSerialNumber(p2);\nBrightnessConfiguration v14 = this.mPersistentDataStore.getBrightnessConfigurationForDisplayLocked(p2, p3);', 'int v9 = v7.getUserSerialNumber(p2);\nBrightnessConfiguration v12 = this.this$0.getBrightnessConfigForDisplayWithPdsFallbackLocked(p1, v9);', 'int v8 = v7.getUserSerialNumber(p2);\nBrightnessConfiguration v10 = DisplayManagerService.-$$Nest$mgetBrightnessConfigForDisplayWithPdsFallbackLocked(this.this$0, p1, v8);']

The method getBrightnessConfigurationForDisplay has the following similar APIs:

- API Name: getBrightnessConfigurationForUser(I)Landroid/hardware/display/BrightnessConfiguration; with Similarity Score: 0.9710339903831482
  - Access Control Level: SYS_OR_SIG and the following code:
int v16 = v14.getUserSerialNumber(p1);
BrightnessConfiguration v19 = this.this$0.getBrightnessConfigForDisplayWithPdsFallbackLocked(p1, v16);
return v18;

- API Name: getBrightnessConfigurationForUser(I)Landroid/hardware/display/BrightnessConfiguration; with Similarity Score: 0.9625337719917297
  - Access Control Level: SYS_OR_SIG and the following code:
int v15 = v14.getUserSerialNumber(p1);
BrightnessConfiguration v17 = DisplayManagerService.-$$Nest$mgetBrightnessConfigForDisplayWithPdsFallbackLocked(this.this$0, v6, v15);
return v7;

