The method registerCallback has the following code snippet:

This is path 1 for the API with depth 2:
public void registerCallback(IDisplayManagerCallback p1){
	if (p1 == 0) {
		int v2 = Binder.getCallingPid();
		int v3 = Binder.getCallingUid();
		long v4 = Binder.clearCallingIdentity();
		this.this$0.registerCallbackInternal(p1, v2, v3, p2);
		Binder.restoreCallingIdentity(v4);
		return;
	}
}

and the following sink code:
['int v2 = Binder.getCallingPid();\nint v3 = Binder.getCallingUid();\nlong v4 = Binder.clearCallingIdentity();\nthis.this$0.registerCallbackInternal(p1, v2, v3, p2);', 'int v2 = Binder.getCallingPid();\nint v3 = Binder.getCallingUid();\nlong v4 = Binder.clearCallingIdentity();\nDisplayManagerService.-$$Nest$mregisterCallbackInternal(this.this$0, p1, v2, v3, 7);', 'p0.registerCallbackWithEventMask(p1, 7);']

The method registerCallback has the following similar APIs:

- API Name: addCallback(Landroid/media/projection/IMediaProjectionWatcherCallback;)V with Similarity Score: 0.8775894045829773
  - Access Control Level: SYS_OR_SIG and the following code:
long v3 = Binder.clearCallingIdentity();
this.this$0.addCallback(p1);
Binder.restoreCallingIdentity(v3);

- API Name: registerUiTranslationStateCallback(Landroid/os/IRemoteCallback;I)V with Similarity Score: 0.865150511264801
  - Access Control Level: NONE and the following code:
int v4 = Binder.getCallingUid();
Integer v6 = Integer.valueOf(v4);
boolean v7 = this.mCallbacks.register(p1, v6);

