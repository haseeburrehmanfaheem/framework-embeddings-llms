The method getTaskDescription has the following code snippet:

This is path 1 for the API with depth 2:
public ActivityManager$TaskDescription getTaskDescription(int p1){
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v9 = PooledLambda.__(Tas.class);
			Integer v10 = Integer.valueOf(p1);
			PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
			Task v12 = RootWindowContainer.getTask(v11);
			v11.recycle();
			if (v12 == 0) {
				if (0 == 0) {
					Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0);
					if (v14 == 0) {
						Task v15 = v12.getRootTask();
						if (v15 == v14) {
							if (0 == 0) {
								boolean v16 = v12.reparent(v14, 0, , 1, 1, "anyTaskForId");
								Task v6 = v12;
								Task v5 = v6;
								if (v5 == 0) {
									ActivityManager$TaskDescription v17 = v5.getTaskDescription();
									return v17;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerThreadPriorityBooster.boost();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
			Integer v11 = Integer.valueOf(p1);
			PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
			Task v13 = RootWindowContainer.getTask(v12);
			v12.recycle();
			if (v13 == 0) {
				if (0 == 0) {
					Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
					if (v15 == 0) {
						Task v16 = v13.getRootTask();
						if (v16 == v15) {
							if (0 == 0) {
								boolean v17 = v13.reparent(v15, 0, , 1, 1, "anyTaskForId");
								Task v7 = v13;
								Task v6 = v7;
								if (v6 == 0) {
									ActivityManager$TaskDescription v18 = v6.getTaskDescription();
									return v18;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public ActivityManager$TaskDescription getTaskDescription(int p1){
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v9 = PooledLambda.__(Tas.class);
			Integer v10 = Integer.valueOf(p1);
			PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
			Task v12 = RootWindowContainer.getTask(v11);
			v11.recycle();
			if (v12 == 0) {
				if (0 == 0) {
					Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0);
					if (v14 == 0) {
						Task v15 = v12.getRootTask();
						if (v15 == v14) {
							if (0 == 0) {
								boolean v16 = v12.reparent(v14, 0, , 1, 1, "anyTaskForId");
								Task v6 = v12;
								Task v5 = v6;
								if (v5 == 0) {
									ActivityManager$TaskDescription v17 = v5.getTaskDescription();
									WindowManagerThreadPriorityBooster.reset();
									return v17;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);\nActivityManager$TaskDescription v4 = v3.getTaskDescription();\nreturn v4;', 'Task v5 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);\nActivityManager$TaskDescription v6 = this.mTaskDescription;\nreturn v6;', 'Task v12 = RootWindowContainer.getTask(v11);\nActivityManager$TaskDescription v17 = v5.getTaskDescription();\nreturn v17;']

The method getTaskDescription has the following similar APIs:

- API Name: onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V with Similarity Score: 0.8926892280578613
  - Access Control Level: SYS_OR_SIG and the following code:
Task v5 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
ActivityRecord v6 = Task.getActivity(v7);

- API Name: getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo; with Similarity Score: 0.8852803111076355
  - Access Control Level: SYS_OR_SIG and the following code:
Task v6 = RootWindowContainer.getRootTask(p1, p2, p3);
ActivityTaskManager$RootTaskInfo v7 = RootWindowContainer.getRootTaskInfo(v6);
return v5;

