This is path 1 for the API with depth 2:
public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.mAmInternal.handleIncomingUser(v1, v2, p2, 0, 0, "getTaskDescriptionIcon", 0);
	int v3 = v4;
	File v5 = new File(p1);
	File v7 = new File(v8,v12);
	File v9 = new File(v10,"recent_images");
	File v10 = Environment.getDataSystemCeDirectory(v3);
	File v8 = v9;
	String v12 = v5.getName();
	String v14 = v7.getPath();
	boolean v15 = v14.equals(p1);
	if (v15 == 0) {
		boolean v16 = p1.contains("_activity_icon_");
		if (v16 == 0) {
			Bitmap v19 = TaskPersister.getImageFromWriteQueue(p1);
			if (v19 == 0) {
				Bitmap v18 = v19;
				Bitmap v17 = v18;
				return v17;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.mAmInternal.handleIncomingUser(v1, v2, p2, 0, 0, "getTaskDescriptionIcon", 0);
	int v3 = v4;
	File v5 = new File(p1);
	File v7 = new File(v8,v12);
	File v9 = new File(v10,"recent_images");
	File v10 = Environment.getDataSystemCeDirectory(v3);
	File v8 = v9;
	String v12 = v5.getName();
	String v14 = v7.getPath();
	boolean v15 = v14.equals(p1);
	if (v15 == 0) {
		boolean v16 = p1.contains("_activity_icon_");
		if (v16 == 0) {
			Bitmap v18 = this.mTaskPersister.getTaskDescriptionIcon(p1);
			Bitmap v17 = v18;
			return v17;
		}
	}
}


This is path 3 for the API with depth 0:
public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = p0.handleIncomingUser(v1, v2, p2, "getTaskDescriptionIcon");
	File v4 = new File(p1);
	File v6 = new File(v7,v8);
	File v7 = TaskPersister.getUserImagesDir(v3);
	String v8 = v4.getName();
	String v10 = v6.getPath();
	boolean v11 = v10.equals(p1);
	if (v11 == 0) {
		boolean v12 = p1.contains("_activity_icon_");
		if (v12 == 0) {
			Bitmap v13 = this.mRecentTasks.getTaskDescriptionIcon(p1);
			return v13;
		}
	}
}
