The method updateConfiguration has the following code snippet:

This is path 1 for the API with depth 2:
public boolean updateConfiguration(Configuration p1){
	if (this.mWindowManager != 0) {
		if (p1 != 0) {
			this.sThreadPriorityBooster.boost();
			if (this.mDisplayReady != 0) {
				Configuration v9 = new Configuration();
				DisplayContent v11 = this.mRoot.getDisplayContent(p1);
				v11.computeScreenConfiguration(v9);
				Configuration v8 = v9;
				this.sThreadPriorityBooster.reset();
				Configuration v5 = v8;
				ActivityTaskManagerService$$ExternalSyntheticLambda8 v15 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
				Integer v17 = Integer.valueOf(0);
				Message v18 = PooledLambda.obtainMessage(v15, this.mAmInternal, v17);
				boolean v19 = this.mH.sendMessage(v18);
				long v20 = Binder.clearCallingIdentity();
				if ( == 0) {
					Settings$System.clearConfiguration();
					boolean v22 = p0.updateConfigurationLocked(, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
					if (ActivityTaskManagerService$UpdateConfigurationResult.changes == 0) {
						Binder.restoreCallingIdentity(v20);
						return ;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean updateConfiguration(Configuration p1){
	WindowManagerThreadPriorityBooster.boost();
	if (this.mWindowManager != 0) {
		if (p1 != 0) {
			this.sThreadPriorityBooster.boost();
			if (this.mDisplayReady != 0) {
				Configuration v10 = new Configuration();
				DisplayContent v12 = this.mRoot.getDisplayContent(p1);
				v12.computeScreenConfiguration(v10);
				Configuration v9 = v10;
				this.sThreadPriorityBooster.reset();
				Configuration v6 = v9;
				ActivityTaskManagerService$$ExternalSyntheticLambda8 v16 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
				Integer v18 = Integer.valueOf(0);
				Message v19 = PooledLambda.obtainMessage(v16, this.mAmInternal, v18);
				boolean v20 = this.mH.sendMessage(v19);
				long v21 = Binder.clearCallingIdentity();
				if ( == 0) {
					Settings$System.clearConfiguration();
					boolean v23 = p0.updateConfigurationLocked(, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
					if (ActivityTaskManagerService$UpdateConfigurationResult.changes == 0) {
						Binder.restoreCallingIdentity(v21);
						return ;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean updateConfiguration(Configuration p1){
	if (this.mWindowManager != 0) {
		if (p1 != 0) {
			this.sThreadPriorityBooster.boost();
			if (this.mDisplayReady != 0) {
				Configuration v9 = new Configuration();
				DisplayContent v11 = this.mRoot.getDisplayContent(p1);
				v11.computeScreenConfiguration(v9);
				Configuration v8 = v9;
				this.sThreadPriorityBooster.reset();
				Configuration v5 = v8;
				ActivityTaskManagerService$$ExternalSyntheticLambda8 v15 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
				Integer v17 = Integer.valueOf(0);
				Message v18 = PooledLambda.obtainMessage(v15, this.mAmInternal, v17);
				boolean v19 = this.mH.sendMessage(v18);
				long v20 = Binder.clearCallingIdentity();
				if ( == 0) {
					Settings$System.clearConfiguration();
					boolean v22 = p0.updateConfigurationLocked(, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
					if (ActivityTaskManagerService$UpdateConfigurationResult.changes == 0) {
						Binder.restoreCallingIdentity(v20);
						WindowManagerThreadPriorityBooster.reset();
						return ;
					}
				}
			}
		}
	}
}

and the following sink code:
['Configuration v9 = new Configuration();\nv11.computeScreenConfiguration(v9);\nActivityTaskManagerService$$ExternalSyntheticLambda8 v15 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();\nMessage v18 = PooledLambda.obtainMessage(v15, this.mAmInternal, v17);\nboolean v19 = this.mH.sendMessage(v18);', 'Configuration v6 = WindowManagerService.computeNewConfigurationLocked(0);\nActivityTaskManagerService$$ExternalSyntheticLambda8 v8 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();\nMessage v11 = PooledLambda.obtainMessage(v8, this.mAmInternal, v10);\nboolean v12 = this.mH.sendMessage(v11);', 'Configuration v3 = this.mWindowManager.computeNewConfiguration(0);\nActivityTaskManagerService$$ExternalSyntheticLambda8 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();\nMessage v7 = PooledLambda.obtainMessage(v4, this.mAmInternal, v6);\nboolean v8 = this.mH.sendMessage(v7);']

The method updateConfiguration has the following similar APIs:

- API Name: keyguardGoingAway(I)V with Similarity Score: 0.7501670718193054
  - Access Control Level: SYS_OR_SIG and the following code:
long v4 = Binder.clearCallingIdentity();
WindowManagerService.boostPriorityForLockedSection();
ActivityTaskManagerService$$ExternalSyntheticLambda1 v17 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
this.mRootWindowContainer.forAllDisplays(v17);

- API Name: updateConfiguration(Landroid/app/time/TimeZoneConfiguration;)Z with Similarity Score: 0.7435169816017151
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = this.mCallerIdentityInjector.getCallingUserId();
int v5 = ActivityManager.handleIncomingUser(v3, v4, v1, 0, 0, "updateConfiguration", 0);
boolean v9 = this.mServiceConfigAccessor.updateConfiguration(v5, p1);

