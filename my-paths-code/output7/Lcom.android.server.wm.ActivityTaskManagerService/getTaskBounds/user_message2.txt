The method getTaskBounds has the following code snippet:

This is path 1 for the API with depth 2:
public Rect getTaskBounds(int p1){
	long v2 = Binder.clearCallingIdentity();
	Rect v3 = new Rect();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v10 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v12 = PooledLambda.__(Tas.class);
			Integer v13 = Integer.valueOf(p1);
			PooledPredicate v14 = PooledLambda.obtainPredicate(v10, v12, v13);
			Task v15 = RootWindowContainer.getTask(v14);
			v14.recycle();
			if (v15 == 0) {
				if (0 == 0) {
					Task v17 = RootWindowContainer.getOrCreateRootTask(0, 0, v15, 0);
					if (v17 == 0) {
						Task v18 = v15.getRootTask();
						if (v18 == v17) {
							if (0 == 0) {
								boolean v19 = v15.reparent(v17, 0, , 1, 1, "anyTaskForId");
								Task v9 = v15;
								Task v8 = v9;
								if (v8 != 0) {
									Binder.restoreCallingIdentity(v2);
									return v3;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public Rect getTaskBounds(int p1){
	long v2 = Binder.clearCallingIdentity();
	Rect v3 = new Rect();
	WindowManagerThreadPriorityBooster.boost();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
			Integer v14 = Integer.valueOf(p1);
			PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
			Task v16 = RootWindowContainer.getTask(v15);
			v15.recycle();
			if (v16 == 0) {
				if (0 == 0) {
					Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
					if (v18 == 0) {
						Task v19 = v16.getRootTask();
						if (v19 == v18) {
							if (0 == 0) {
								boolean v20 = v16.reparent(v18, 0, , 1, 1, "anyTaskForId");
								Task v10 = v16;
								Task v9 = v10;
								if (v9 != 0) {
									Binder.restoreCallingIdentity(v2);
									return v3;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public Rect getTaskBounds(int p1){
	long v2 = Binder.clearCallingIdentity();
	Rect v3 = new Rect();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v10 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v12 = PooledLambda.__(Tas.class);
			Integer v13 = Integer.valueOf(p1);
			PooledPredicate v14 = PooledLambda.obtainPredicate(v10, v12, v13);
			Task v15 = RootWindowContainer.getTask(v14);
			v14.recycle();
			if (v15 == 0) {
				if (0 == 0) {
					Task v17 = RootWindowContainer.getOrCreateRootTask(0, 0, v15, 0);
					if (v17 == 0) {
						Task v18 = v15.getRootTask();
						if (v18 == v17) {
							if (0 == 0) {
								boolean v19 = v15.reparent(v17, 0, , 1, 1, "anyTaskForId");
								Task v9 = v15;
								Task v8 = v9;
								if (v8 != 0) {
									WindowManagerThreadPriorityBooster.reset();
									Binder.restoreCallingIdentity(v2);
									return v3;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Rect v3 = new Rect();\nPooledPredicate v14 = PooledLambda.obtainPredicate(v10, v12, v13);\nTask v15 = RootWindowContainer.getTask(v14);\nboolean v19 = v15.reparent(v17, 0, , 1, 1, "anyTaskForId");\nreturn v3;', 'Rect v3 = new Rect();\nTask v8 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);\nRect v10 = v7.getBounds();\nv3.set(v10);\nreturn v3;', 'Rect v3 = new Rect();\nTask v6 = this.mRootWindowContainer.anyTaskForId(p1, 1);\nreturn v3;']

The method getTaskBounds has the following similar APIs:

- API Name: takeTaskSnapshot(I)Landroid/window/TaskSnapshot; with Similarity Score: 0.874381422996521
  - Access Control Level: SYS_OR_SIG and the following code:
Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);

- API Name: setTaskResizeable(II)V with Similarity Score: 0.8607734441757202
  - Access Control Level: SYS_OR_SIG and the following code:
Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);

