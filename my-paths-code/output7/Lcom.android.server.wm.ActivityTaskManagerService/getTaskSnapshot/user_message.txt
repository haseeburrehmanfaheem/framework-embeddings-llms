This is path 1 for the API with depth 2:
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	if (p2 == 2) {
		if (0 != 0) {
			AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
			ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
			Integer v11 = Integer.valueOf(p1);
			PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
			Task v13 = RootWindowContainer.getTask(v12);
			v12.recycle();
			if (v13 == 0) {
				if (0 == 0) {
					Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
					if (v15 == 0) {
						Task v16 = v13.getRootTask();
						if (v16 == v15) {
							if (0 == 0) {
								boolean v17 = v13.reparent(v15, 0, , 1, 1, "anyTaskForId");
								Task v7 = v13;
								Task v6 = v7;
								if (v6 != 0) {
									if (p2 == 0) {
										boolean v22 = this.mEnableLowResSnapshots;
										if (v22 == 0) {
											WindowManagerService.boostPriorityForLockedSection();
											Integer v25 = Integer.valueOf(p1);
											Object v26 = this.mRunningCache.get(v25);
											if (v26 == 0) {
												WindowManagerService.resetPriorityAfterLockedSection();
												if (p3 != 0) {
													TaskSnapshot v28 = TaskSnapshotCache.tryRestoreFromDisk(p1, p2, );
													TaskSnapshot v23 = v28;
													TaskSnapshot v21 = v23;
													if (v21 != 0) {
														if (p3 == 0) {
															long v31 = Binder.clearCallingIdentity();
															this.sThreadPriorityBooster.boost();
															Task v35 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
															Task v34 = v35;
															if (v34 == 0) {
																int v37 = this.mChildren.size();
																if ( < 0) {
																	Object v38 = this.mChildren.get();
																	boolean v39 = v38.isVisible();
																	if (v39 == 0) {
																		if ( < 0) {
																			Object v40 = this.mChildren.get();
																			boolean v41 = v40.isVisible();
																			if (v41 == 0) {
																				boolean v36 = 1;
																				if (v36 != 0) {
																					if (0 == 0) {
																						int v43 = TaskSnapshotController.getSnapshotMode(v34);
																						if (v43 == 0) {
																							if (v43 == 1) {
																								if (v43 == 2) {
																									TaskSnapshot v42 = ;
																									this.sThreadPriorityBooster.reset();
																									Binder.restoreCallingIdentity(v31);
																									TaskSnapshot v29 = ;
																									Binder.restoreCallingIdentity(v2);
																									return ;
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	if (v5 != 0) {
		this.sThreadPriorityBooster.reset();
		if (p2 == 0) {
			boolean v10 = this.mPersister.enableLowResSnapshots();
			if (v10 == 0) {
				TaskSnapshot v11 = this.mCache.getSnapshot(p1, Task.mUserId, 1, );
				TaskSnapshot v9 = v11;
				if (v9 != 0) {
					if (p3 == 0) {
						long v14 = Binder.clearCallingIdentity();
						WindowManagerService.boostPriorityForLockedSection();
						Task v16 = this.mRootWindowContainer.anyTaskForId(p1, 1);
						if (v16 == 0) {
							boolean v17 = v16.isVisible();
							if (v17 != 0) {
								WindowManagerService.resetPriorityAfterLockedSection();
								Binder.restoreCallingIdentity(v14);
								TaskSnapshot v12 = ;
								Binder.restoreCallingIdentity(v2);
								return ;
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	if (v4 != 0) {
		WindowManagerService.resetPriorityAfterLockedSection();
		TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
		if (v6 != 0) {
			if (p3 == 0) {
				TaskSnapshot v7 = p0.takeTaskSnapshot(p1);
				Binder.restoreCallingIdentity(v2);
				return ;
			}
		}
	}
}
