The method startNextMatchingActivity has the following code snippet:

This is path 1 for the API with depth 2:
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	if (p2 == 0) {
		boolean v1 = p2.hasFileDescriptors();
		if (v1 != 0) {
			if (p3 == 0) {
				SafeActivityOptions v3 = new SafeActivityOptions(v4);
				if (p1 == 0) {
					ActivityOptions v5 = new ActivityOptions(p1);
					ActivityOptions v4 = ;
					SafeActivityOptions v2 = ;
					if (p1 != 0) {
						Object v13 = ActivityRecord$Token.mActivityRef.get();
						if (v13 == 0) {
							Task v14 = v13.getRootTask();
							if (v14 != 0) {
								ActivityRecord v12 = ;
								if (v12 == 0) {
									if (this.task == 0) {
										Task v16 = this.task.getRootTask();
										Task v15 = ;
										if (v12 != 0) {
											boolean v18 = v12.isDescendantOf(Task);
											if (v18 == 0) {
												ActivityRecord v17 = v12;
												ActivityRecord v11 = ;
												if (v11 != 0) {
													boolean v20 = ActivityRecord.hasProcess();
													if (v20 == 0) {
														if (this.mThread == 0) {
															boolean v21 = ;
															if (v21 == 0) {
																boolean v19 = ;
																if (v19 != 0) {
																	Intent v22 = new Intent(p2);
																	Uri v24 = ActivityRecord.intent.getData();
																	String v25 = ActivityRecord.intent.getType();
																	Intent v26 = v22.setDataAndType(v24, v25);
																	Intent v27 = v22.setComponent(0);
																	int v28 = v22.getFlags();
																	if ((v28 & 8) == 0) {
																		IPackageManager v29 = AppGlobals.getPackageManager();
																		int v30 = UserHandle.getCallingUserId();
																		ParceledListSlice v31 = v29.queryIntentActivities(v22, ActivityRecord.resolvedType, 66560, v30);
																		if ( != 0) {
																			if (v2 == 0) {
																				if (this.mOriginalOptions == 0) {
																					ActivityOptions.abort(this.mOriginalOptions);
																					if (this.mCallerOptions == 0) {
																						ActivityOptions.abort(this.mCallerOptions);
																						if ( == 0) {
																							return 0;
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	if (p2 == 0) {
		boolean v1 = p2.hasFileDescriptors();
		if (v1 != 0) {
			if (p3 == 0) {
				SafeActivityOptions v3 = new SafeActivityOptions(v4);
				if (p1 == 0) {
					ActivityOptions v5 = new ActivityOptions(p1);
					ActivityOptions v4 = ;
					SafeActivityOptions v2 = ;
					WindowManagerThreadPriorityBooster.boost();
					if (p1 != 0) {
						Object v14 = ActivityRecord$Token.mActivityRef.get();
						if (v14 == 0) {
							Task v15 = v14.getRootTask();
							if (v15 != 0) {
								ActivityRecord v13 = ;
								if (v13 == 0) {
									if (this.task == 0) {
										Task v17 = this.task.getRootTask();
										Task v16 = ;
										if (v13 != 0) {
											boolean v19 = v13.isDescendantOf(Task);
											if (v19 == 0) {
												ActivityRecord v18 = v13;
												ActivityRecord v12 = ;
												if (v12 != 0) {
													boolean v21 = ActivityRecord.hasProcess();
													if (v21 == 0) {
														if (this.mThread == 0) {
															boolean v22 = ;
															if (v22 == 0) {
																boolean v20 = ;
																if (v20 != 0) {
																	Intent v23 = new Intent(p2);
																	Uri v25 = ActivityRecord.intent.getData();
																	String v26 = ActivityRecord.intent.getType();
																	Intent v27 = v23.setDataAndType(v25, v26);
																	Intent v28 = v23.setComponent(0);
																	int v29 = v23.getFlags();
																	if ((v29 & 8) == 0) {
																		IPackageManager v30 = AppGlobals.getPackageManager();
																		int v31 = UserHandle.getCallingUserId();
																		ParceledListSlice v32 = v30.queryIntentActivities(v23, ActivityRecord.resolvedType, 66560, v31);
																		if ( != 0) {
																			if (v2 == 0) {
																				if (this.mOriginalOptions == 0) {
																					ActivityOptions.abort(this.mOriginalOptions);
																					if (this.mCallerOptions == 0) {
																						ActivityOptions.abort(this.mCallerOptions);
																						if ( == 0) {
																							return 0;
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	if (p2 == 0) {
		boolean v1 = p2.hasFileDescriptors();
		if (v1 != 0) {
			if (p3 == 0) {
				SafeActivityOptions v3 = new SafeActivityOptions(v4);
				if (p1 == 0) {
					ActivityOptions v5 = new ActivityOptions(p1);
					ActivityOptions v4 = ;
					SafeActivityOptions v2 = ;
					if (p1 != 0) {
						Object v13 = ActivityRecord$Token.mActivityRef.get();
						if (v13 == 0) {
							Task v14 = v13.getRootTask();
							if (v14 != 0) {
								ActivityRecord v12 = ;
								if (v12 == 0) {
									if (this.task == 0) {
										Task v16 = this.task.getRootTask();
										Task v15 = ;
										if (v12 != 0) {
											boolean v18 = v12.isDescendantOf(Task);
											if (v18 == 0) {
												ActivityRecord v17 = 0;
												ActivityRecord v11 = ;
												if (v11 != 0) {
													boolean v20 = ActivityRecord.hasProcess();
													if (v20 == 0) {
														if (this.mThread == 0) {
															boolean v21 = ;
															if (v21 == 0) {
																boolean v19 = ;
																if (v19 != 0) {
																	Intent v22 = new Intent(p2);
																	Uri v24 = ActivityRecord.intent.getData();
																	String v25 = ActivityRecord.intent.getType();
																	Intent v26 = v22.setDataAndType(v24, v25);
																	Intent v27 = v22.setComponent(0);
																	int v28 = v22.getFlags();
																	if ((v28 & 8) == 0) {
																		IPackageManager v29 = AppGlobals.getPackageManager();
																		int v30 = UserHandle.getCallingUserId();
																		ParceledListSlice v31 = v29.queryIntentActivities(v22, ActivityRecord.resolvedType, 66560, v30);
																		if ( != 0) {
																			if (v2 == 0) {
																				if (this.mOriginalOptions == 0) {
																					ActivityOptions.abort(this.mOriginalOptions);
																					if (this.mCallerOptions == 0) {
																						ActivityOptions.abort(this.mCallerOptions);
																						if ( == 0) {
																							return 0;
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Intent v22 = new Intent(p2);\nUri v24 = ActivityRecord.intent.getData();\nString v25 = ActivityRecord.intent.getType();\nIntent v26 = v22.setDataAndType(v24, v25);\nIntent v27 = v22.setComponent(0);', 'SafeActivityOptions v3 = new SafeActivityOptions(v4);\nActivityOptions v5 = new ActivityOptions(p1);', 'ActivityRecord v9 = ActivityRecord.forTokenLocked(p1);\nTask v10 = v9.getRootTask();', 'Intent v6 = new Intent(p2);\nUri v8 = ActivityRecord.intent.getData();\nString v9 = ActivityRecord.intent.getType();\nIntent v10 = v6.setDataAndType(v8, v9);']

The method startNextMatchingActivity has the following similar APIs:

- API Name: moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V with Similarity Score: 0.8837620615959167
  - Access Control Level: SYS_OR_SIG and the following code:
ActivityOptions v11 = ActivityOptions.fromBundle(p5);
SafeActivityOptions v10 = new SafeActivityOptions(v11);

- API Name: stopSystemLockTaskMode()V with Similarity Score: 0.8779789209365845
  - Access Control Level: SYS_OR_SIG and the following code:
ActivityRecord v6 = ActivityRecord.forTokenLocked(0);
v8.stopLockTaskMode(, 1, v3);

