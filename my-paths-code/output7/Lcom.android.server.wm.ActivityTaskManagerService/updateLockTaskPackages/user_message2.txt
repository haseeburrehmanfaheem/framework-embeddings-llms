The method updateLockTaskPackages has the following code snippet:

This is path 1 for the API with depth 2:
public void updateLockTaskPackages(int p1, String p2){
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v6 = Arrays.toString(p2);
		String v7 = String.valueOf(v6);
		Object v8 = new Object(2);
		Long v9 = Long.valueOf(p1);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
			File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v12;
			ProtoLogImpl v11 = this.sServiceInstance;
			boolean v19 = p1.isLogToProto();
			if (v19 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v21 = p1.isLogToLogcat();
				if (v21 == 0) {
					String v22 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
					LockTaskController v24 = p0.getLockTaskController();
					this.mLockTaskPackages.put(p1, p2);
					int v27 = this.mLockTaskModeTasks.size();
					if ( < 0) {
						Object v28 = this.mLockTaskModeTasks.get();
						if (Task.mLockTaskAuth == 2) {
							if (Task.mLockTaskAuth != 3) {
								ActivityRecord v30 = Task.getRootActivity();
								Task.setLockTaskAuth(v30);
								if (Task.mLockTaskAuth == 2) {
									if (Task.mLockTaskAuth != 3) {
										if (this.mLockTaskModeState != 1) {
											if (Task.mUserId != p1) {
												if ( < 0) {
													LockTaskController$$ExternalSyntheticLambda0 v32 = new LockTaskController$$ExternalSyntheticLambda0();
													ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v32);
													int v36 = RootWindowContainer.getChildCount();
													if ( < 0) {
														WindowContainer v37 = RootWindowContainer.getChildAt();
														ActivityRecord v38 = v37.topRunningActivity();
														if (v38 == 0) {
															if ( < 0) {
																WindowContainer v39 = RootWindowContainer.getChildAt();
																ActivityRecord v40 = v39.topRunningActivity();
																if (v40 == 0) {
																	ActivityRecord v35 = v40;
																	if (v35 == 0) {
																		Task v41 = this.task;
																		boolean v42 = this.mLockTaskModeTasks.isEmpty();
																		if (v42 == 0) {
																			if ( == 0) {
																				return;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerThreadPriorityBooster.boost();
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v7 = Arrays.toString(p2);
		String v8 = String.valueOf(v7);
		Object v9 = new Object(2);
		Long v10 = Long.valueOf(p1);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v13 = new ProtoLogImpl(v14,1048576,v16);
			File v14 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v16 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v13;
			ProtoLogImpl v12 = this.sServiceInstance;
			boolean v20 = p1.isLogToProto();
			if (v20 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v22 = p1.isLogToLogcat();
				if (v22 == 0) {
					String v23 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v23, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
					LockTaskController v25 = p0.getLockTaskController();
					this.mLockTaskPackages.put(p1, p2);
					int v28 = this.mLockTaskModeTasks.size();
					if ( < 0) {
						Object v29 = this.mLockTaskModeTasks.get();
						if (Task.mLockTaskAuth == 2) {
							if (Task.mLockTaskAuth != 3) {
								ActivityRecord v31 = Task.getRootActivity();
								Task.setLockTaskAuth(v31);
								if (Task.mLockTaskAuth == 2) {
									if (Task.mLockTaskAuth != 3) {
										if (this.mLockTaskModeState != 1) {
											if (Task.mUserId != p1) {
												if ( < 0) {
													LockTaskController$$ExternalSyntheticLambda0 v33 = new LockTaskController$$ExternalSyntheticLambda0();
													ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v33);
													int v37 = RootWindowContainer.getChildCount();
													if ( < 0) {
														WindowContainer v38 = RootWindowContainer.getChildAt();
														ActivityRecord v39 = v38.topRunningActivity();
														if (v39 == 0) {
															if ( < 0) {
																WindowContainer v40 = RootWindowContainer.getChildAt();
																ActivityRecord v41 = v40.topRunningActivity();
																if (v41 == 0) {
																	ActivityRecord v36 = v41;
																	if (v36 == 0) {
																		Task v42 = this.task;
																		boolean v43 = this.mLockTaskModeTasks.isEmpty();
																		if (v43 == 0) {
																			if ( == 0) {
																				return;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void updateLockTaskPackages(int p1, String p2){
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v6 = Arrays.toString(p2);
		String v7 = String.valueOf(v6);
		Object v8 = new Object(2);
		Long v9 = Long.valueOf(p1);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
			File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v12;
			ProtoLogImpl v11 = this.sServiceInstance;
			boolean v19 = p1.isLogToProto();
			if (v19 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v21 = p1.isLogToLogcat();
				if (v21 == 0) {
					String v22 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
					LockTaskController v24 = p0.getLockTaskController();
					this.mLockTaskPackages.put(p1, p2);
					int v27 = this.mLockTaskModeTasks.size();
					if ( < 0) {
						Object v28 = this.mLockTaskModeTasks.get();
						if (Task.mLockTaskAuth == 2) {
							if (Task.mLockTaskAuth != 3) {
								ActivityRecord v30 = Task.getRootActivity();
								Task.setLockTaskAuth(v30);
								if (Task.mLockTaskAuth == 2) {
									if (Task.mLockTaskAuth != 3) {
										if (this.mLockTaskModeState != 1) {
											if (Task.mUserId != p1) {
												if ( < 0) {
													LockTaskController$$ExternalSyntheticLambda0 v32 = new LockTaskController$$ExternalSyntheticLambda0();
													ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v32);
													int v36 = RootWindowContainer.getChildCount();
													if ( < 0) {
														WindowContainer v37 = RootWindowContainer.getChildAt();
														ActivityRecord v38 = v37.topRunningActivity();
														if (v38 == 0) {
															if ( < 0) {
																WindowContainer v39 = RootWindowContainer.getChildAt();
																ActivityRecord v40 = v39.topRunningActivity();
																if (v40 == 0) {
																	ActivityRecord v35 = v40;
																	if (v35 == 0) {
																		Task v41 = this.task;
																		boolean v42 = this.mLockTaskModeTasks.isEmpty();
																		if (v42 == 0) {
																			if ( == 0) {
																				WindowManagerThreadPriorityBooster.reset();
																				return;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['LockTaskController v9 = p0.getLockTaskController();\nv9.updateLockTaskPackages(p1, p2);', 'this.mLockTaskPackages.put(p1, p2);']

The method updateLockTaskPackages has the following similar APIs:

- API Name: updateLockTaskFeatures(II)V with Similarity Score: 0.8984665870666504
  - Access Control Level: SYS_OR_SIG and the following code:
this.mLockTaskFeatures.put(p1, p2);

- API Name: updateLockTaskFeatures(II)V with Similarity Score: 0.8015446662902832
  - Access Control Level: SYS_OR_SIG and the following code:
v9.updateLockTaskFeatures(p1, p2);

