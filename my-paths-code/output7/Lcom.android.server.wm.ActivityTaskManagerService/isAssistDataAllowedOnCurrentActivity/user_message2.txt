The method isAssistDataAllowedOnCurrentActivity has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isAssistDataAllowedOnCurrentActivity(){
	int v6 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v7 = RootWindowContainer.getChildAt();
		Task v8 = v7.getFocusedRootTask();
		if (v8 == 0) {
			if ( < 0) {
				WindowContainer v9 = RootWindowContainer.getChildAt();
				Task v10 = v9.getFocusedRootTask();
				if (v10 == 0) {
					Task v5 = v10;
					Task v4 = v5;
					if (v4 == 0) {
						boolean v11 = v4.isActivityTypeAssistant();
						if (v11 == 0) {
							ActivityRecord v14 = TaskFragment.getTopNonFinishingActivity(1, 1);
							ActivityRecord v13 = v14;
							ActivityRecord v12 = v13;
							if (v12 != 0) {
								Object v20 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
								Object v19 = v20;
								if (v19 == 0) {
									DevicePolicyCache$EmptyDevicePolicyCache v21 = this.INSTANCE;
									DevicePolicyCache v18 = ;
									boolean v22 = v18.isScreenCaptureAllowed(ActivityRecord.mUserId);
									return v22;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerThreadPriorityBooster.boost();
	int v7 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v8 = RootWindowContainer.getChildAt();
		Task v9 = v8.getFocusedRootTask();
		if (v9 == 0) {
			if ( < 0) {
				WindowContainer v10 = RootWindowContainer.getChildAt();
				Task v11 = v10.getFocusedRootTask();
				if (v11 == 0) {
					Task v6 = v11;
					Task v5 = v6;
					if (v5 == 0) {
						boolean v12 = v5.isActivityTypeAssistant();
						if (v12 == 0) {
							ActivityRecord v15 = TaskFragment.getTopNonFinishingActivity(1, 1);
							ActivityRecord v14 = v15;
							ActivityRecord v13 = v14;
							if (v13 != 0) {
								Object v21 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
								Object v20 = v21;
								if (v20 == 0) {
									DevicePolicyCache$EmptyDevicePolicyCache v22 = this.INSTANCE;
									DevicePolicyCache v19 = ;
									boolean v23 = v19.isScreenCaptureAllowed(ActivityRecord.mUserId);
									return v23;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean isAssistDataAllowedOnCurrentActivity(){
	int v6 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v7 = RootWindowContainer.getChildAt();
		Task v8 = v7.getFocusedRootTask();
		if (v8 == 0) {
			if ( < 0) {
				WindowContainer v9 = RootWindowContainer.getChildAt();
				Task v10 = v9.getFocusedRootTask();
				if (v10 == 0) {
					Task v5 = v10;
					Task v4 = v5;
					if (v4 == 0) {
						boolean v11 = v4.isActivityTypeAssistant();
						if (v11 == 0) {
							ActivityRecord v14 = TaskFragment.getTopNonFinishingActivity(1, 1);
							ActivityRecord v13 = v14;
							ActivityRecord v12 = v13;
							if (v12 != 0) {
								WindowManagerThreadPriorityBooster.reset();
								Object v21 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
								Object v20 = v21;
								if (v20 == 0) {
									DevicePolicyCache$EmptyDevicePolicyCache v22 = this.INSTANCE;
									DevicePolicyCache v19 = ;
									boolean v23 = v19.isScreenCaptureAllowed(ActivityRecord.mUserId);
									return v23;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v20 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);\nDevicePolicyCache v18 = ;\nboolean v22 = v18.isScreenCaptureAllowed(ActivityRecord.mUserId);', 'Object v11 = LocalServices.getService(DevicePolicyManagerInterna.class);\nDevicePolicyCache v12 = v11.getDevicePolicyCache();\nboolean v13 = v10.isScreenCaptureAllowed(ActivityRecord.mUserId);', 'DevicePolicyCache v6 = DevicePolicyCache.getInstance();\nboolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);']

The method isAssistDataAllowedOnCurrentActivity has the following similar APIs:

- API Name: removeAccountAsUser(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;ZI)V with Similarity Score: 0.812540590763092
  - Access Control Level: SYS_OR_SIG and the following code:
Object v38 = LocalServices.getService(DevicePolicyManagerInterna.class);
boolean v39 = v38.isActiveProfileOwner(v1);
boolean v40 = v38.isActiveDeviceOwner(v1);

- API Name: removeAccountAsUser(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;ZI)V with Similarity Score: 0.8087788820266724
  - Access Control Level: SYS_OR_SIG and the following code:
Object v38 = LocalServices.getService(DevicePolicyManagerInterna.class);
boolean v39 = v38.isActiveProfileOwner(v1);
boolean v40 = v38.isActiveDeviceOwner(v1);

