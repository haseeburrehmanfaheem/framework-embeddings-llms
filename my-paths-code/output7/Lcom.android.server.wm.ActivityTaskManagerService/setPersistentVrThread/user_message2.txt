The method setPersistentVrThread has the following code snippet:

This is path 1 for the API with depth 2:
public void setPersistentVrThread(int p1){
	if (v1 != 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
		if (v4 == 0) {
			int v8 = Binder.getCallingPid();
			WindowProcessController v9 = this.mProcessMap.getProcess(v8);
			if ((this.mVrState & 2) == 0) {
				boolean v11 = ;
				if (v11 != 0) {
					if (v9 != 0) {
						if (p1 == 0) {
							boolean v13 = Process.isThreadInProcess(p2, p1);
							if (v13 == 0) {
								boolean v15 = VrController.hasPersistentVrFlagSet();
								if (v15 != 0) {
									if (0 != 0) {
										int v14 = this.mVrRenderThreadTid;
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setPersistentVrThread(int p1){
	if (v1 != 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
		if (v4 == 0) {
			WindowManagerThreadPriorityBooster.boost();
			int v9 = Binder.getCallingPid();
			WindowProcessController v10 = this.mProcessMap.getProcess(v9);
			if ((this.mVrState & 2) == 0) {
				boolean v12 = ;
				if (v12 != 0) {
					if (v10 != 0) {
						if (p1 == 0) {
							boolean v14 = Process.isThreadInProcess(p2, p1);
							if (v14 == 0) {
								boolean v16 = VrController.hasPersistentVrFlagSet();
								if (v16 != 0) {
									if (0 != 0) {
										int v15 = this.mVrRenderThreadTid;
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void setPersistentVrThread(int p1){
	if (v1 != 0) {
		PackageManager v3 = this.mContext.getPackageManager();
		boolean v4 = v3.hasSystemFeature("android.hardware.vr.high_performance");
		if (v4 == 0) {
			int v8 = Binder.getCallingPid();
			WindowProcessController v9 = this.mProcessMap.getProcess(v8);
			if ((this.mVrState & 2) == 0) {
				boolean v11 = ;
				if (v11 != 0) {
					if (v9 != 0) {
						if (p1 == 0) {
							boolean v13 = Process.isThreadInProcess(p2, p1);
							if (v13 == 0) {
								boolean v15 = VrController.hasPersistentVrFlagSet();
								if (v15 != 0) {
									if (0 != 0) {
										int v14 = this.mVrRenderThreadTid;
										WindowManagerThreadPriorityBooster.reset();
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['VrController.enforceThreadInProcess(p1, v7);\nint v13 = VrController.setPersistentVrRenderThreadLocked(p1, 0);', 'this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);']

The method setPersistentVrThread has the following similar APIs:

- API Name: setVrThread(I)V with Similarity Score: 0.7356283068656921
  - Access Control Level: NONE and the following code:
WindowProcessController v4 = this.mProcessMap.getProcess(v3);
this.mVrController.setVrThreadLocked(p1, v3, v4);

- API Name: setVrThread(I)V with Similarity Score: 0.7172144651412964
  - Access Control Level: NONE and the following code:
WindowProcessController v4 = this.mProcessMap.getProcess(v3);
this.mVrController.setVrThreadLocked(p1, v3, v4);

