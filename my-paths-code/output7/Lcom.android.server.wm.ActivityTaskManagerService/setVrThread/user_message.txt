This is path 1 for the API with depth 2:
public void setVrThread(int p1){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature("android.hardware.vr.high_performance");
	if (v3 == 0) {
		int v7 = Binder.getCallingPid();
		WindowProcessController v8 = this.mProcessMap.getProcess(v7);
		if ((this.mVrState & 2) == 0) {
			boolean v10 = ;
			if (v10 == 0) {
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setVrThread(int p1){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature("android.hardware.vr.high_performance");
	if (v3 == 0) {
		this.sThreadPriorityBooster.boost();
		int v6 = Binder.getCallingPid();
		Object v8 = this.mPidMap.get(v6);
		WindowProcessController v7 = v8;
		boolean v10 = VrController.hasPersistentVrFlagSet();
		if (v10 == 0) {
			this.sThreadPriorityBooster.reset();
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void setVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = Binder.getCallingPid();
	WindowProcessController v4 = this.mProcessMap.getProcess(v3);
	this.mVrController.setVrThreadLocked(p1, v3, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
