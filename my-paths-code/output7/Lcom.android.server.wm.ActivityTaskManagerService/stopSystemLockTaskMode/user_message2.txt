The method stopSystemLockTaskMode has the following code snippet:

This is path 1 for the API with depth 2:
public void stopSystemLockTaskMode(){
	int v3 = Binder.getCallingUid();
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	if (0 == 0) {
		if (p1 != 0) {
			Object v8 = ActivityRecord$Token.mActivityRef.get();
			if (v8 == 0) {
				Task v9 = v8.getRootTask();
				if (v9 != 0) {
					ActivityRecord v7 = ;
					if (v7 != 0) {
						Task v10 = this.task;
						LockTaskController v11 = this.mLockTaskController;
						if (this.mLockTaskModeState != 0) {
							if (p2 == 0) {
								if ( == 0) {
									if (v3 == Task.mLockTaskUid) {
										if (Task.mLockTaskUid != 0) {
											if (v3 != Task.effectiveUid) {
												LockTaskController.clearLockedTask();
												this.sThreadPriorityBooster.reset();
												Object v16 = this.mContext.getSystemService("telecom");
												if (v16 == 0) {
													ITelecomService v18 = TelecomManager.getTelecomService();
													if (v18 == 0) {
														String v19 = this.mContext.getOpPackageName();
														String v20 = this.mContext.getAttributionTag();
														v18.showInCallScreen(0, v19, v20);
														Binder.restoreCallingIdentity(v4);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void stopSystemLockTaskMode(){
	int v3 = Binder.getCallingUid();
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	if (0 == 0) {
		if (p1 != 0) {
			ActivityRecord v7 = 0;
			if (v7 != 0) {
				Task v14 = this.task;
				LockTaskController v15 = this.mLockTaskController;
				if (this.mLockTaskModeState != 0) {
					if (p2 == 0) {
						if ( == 0) {
							if (v3 == Task.mLockTaskUid) {
								if (Task.mLockTaskUid != 0) {
									if (v3 != Task.effectiveUid) {
										LockTaskController.clearLockedTask();
										this.sThreadPriorityBooster.reset();
										Object v20 = this.mContext.getSystemService("telecom");
										if (v20 == 0) {
											ITelecomService v22 = TelecomManager.getTelecomService();
											if (v22 == 0) {
												String v23 = this.mContext.getOpPackageName();
												String v24 = this.mContext.getAttributionTag();
												v22.showInCallScreen(0, v23, v24);
												Binder.restoreCallingIdentity(v4);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v3 = Binder.getCallingUid();\nLockTaskController v11 = this.mLockTaskController;\nif (this.mLockTaskModeState != 0) { ... }\nLockTaskController.clearLockedTask();', 'ActivityRecord v6 = ActivityRecord.forTokenLocked(0);\nv8.stopLockTaskMode(, 1, v3);', 'p0.stopLockTaskModeInternal(0, 1);']

The method stopSystemLockTaskMode has the following similar APIs:

- API Name: startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z with Similarity Score: 0.8779789209365845
  - Access Control Level: NONE and the following code:
ActivityRecord v9 = ActivityRecord.forTokenLocked(p1);
Task v10 = v9.getRootTask();

- API Name: getLockTaskModeState()I with Similarity Score: 0.8218039870262146
  - Access Control Level: NONE and the following code:
int v2 = this.mLockTaskModeState;
return v2;

