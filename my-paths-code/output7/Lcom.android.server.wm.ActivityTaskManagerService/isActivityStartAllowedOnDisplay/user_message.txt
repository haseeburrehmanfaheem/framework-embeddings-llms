This is path 1 for the API with depth 2:
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	if (-10000 == -10000) {
		if (p4 < 0) {
			int v5 = ;
			ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5);
			ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0);
			ActivityInfo v6 = v8;
			ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4);
			ActivityInfo v4 = v9;
			if (p1 != 0) {
				if (ActivityTaskManagerService.mSupportsMultiDisplay != 0) {
					boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4);
					if (v15 != 0) {
						DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
						if (v16 == 0) {
							boolean v17 = DisplayContent.mDwpcHelper.hasController();
							if (v17 == 0) {
								ArrayList v18 = new ArrayList();
								if (p4 == 0) {
									boolean v20 = v18.add(p4);
									if (0 == 0) {
										ActivityTaskSupervisor$$ExternalSyntheticLambda6 v21 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v18);
										0.forAllActivities(v21);
										int v24 = v16.getWindowingMode();
										boolean v25 = DisplayContent.mDwpcHelper.canContainActivities(v18, v24);
										if (v25 != 0) {
											boolean v14 = 0;
											boolean v13 = v14;
											Binder.restoreCallingIdentity(v3);
											return v13;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = ActivityStarter.computeResolveFilterUid(v1, v1, -10000);
	ActivityInfo v6 = this.mTaskSupervisor.resolveActivity(p2, p3, 0, 0, p4, v5);
	ActivityInfo v7 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v7;
	this.sThreadPriorityBooster.boost();
	boolean v11 = ActivityTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, 0, v4);
	boolean v10 = v11;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return v10;
}


This is path 3 for the API with depth 0:
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	ActivityInfo v4 = p0.resolveActivityInfoForIntent(p2, p3, p4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	boolean v6 = this.mTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
