The method setRunningRemoteTransitionDelegate has the following code snippet:

This is path 1 for the API with depth 2:
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	Object v11 = this.mPidMap.get(p1);
	WindowProcessController v10 = v11;
	if (v10 != 0) {
		WindowProcessController v9 = 0;
		if (v9 == 0) {
			boolean v12 = v9.isRunningRemoteTransition();
			if (v12 == 0) {
				if (p1 != 0) {
					IBinder v14 = p1.asBinder();
					ArrayMap v15 = this.mMap;
					int v16 = v15.size();
					if ( < 0) {
						Object v17 = v15.valueAt();
						int v18 = v17.size();
						if ( < 0) {
							Object v19 = v17.valueAt();
							if (this.mThread == 0) {
								boolean v20 = ;
								if (v20 == 0) {
									IApplicationThread v21 = this.mThread;
									IBinder v22 = v21.asBinder();
									if (v22 != v14) {
										if ( < 0) {
											Object v23 = v17.valueAt();
											if (this.mThread == 0) {
												boolean v24 = ;
												if (v24 == 0) {
													IApplicationThread v25 = this.mThread;
													IBinder v26 = v25.asBinder();
													if (v26 != v14) {
														WindowProcessController v13 = v23;
														if (v13 != 0) {
															if (1 != 0) {
																int v28 = this.mDelegateProcesses.size();
																if ( < 0) {
																	Object v29 = this.mDelegateProcesses.valueAt();
																	if (TransitionController$RemotePlayer$DelegateProcess.mProc != v13) {
																		if ( < 0) {
																			Object v30 = this.mDelegateProcesses.valueAt();
																			if (TransitionController$RemotePlayer$DelegateProcess.mProc != v13) {
																				Object v31 = this.mDelegateProcesses.removeAt();
																				if ( != 0) {
																					if (this.mRunningRemoteAnimation != 0) {
																						this.mRunningRemoteAnimation = 0;
																						WindowProcessController.updateRunningRemoteOrRecentsAnimation();
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerThreadPriorityBooster.boost();
	Object v12 = this.mPidMap.get(p1);
	WindowProcessController v11 = v12;
	if (v11 != 0) {
		WindowProcessController v10 = 0;
		if (v10 == 0) {
			boolean v13 = v10.isRunningRemoteTransition();
			if (v13 == 0) {
				if (p1 != 0) {
					IBinder v15 = p1.asBinder();
					ArrayMap v16 = this.mMap;
					int v17 = v16.size();
					if ( < 0) {
						Object v18 = v16.valueAt();
						int v19 = v18.size();
						if ( < 0) {
							Object v20 = v18.valueAt();
							if (this.mThread == 0) {
								boolean v21 = ;
								if (v21 == 0) {
									IApplicationThread v22 = this.mThread;
									IBinder v23 = v22.asBinder();
									if (v23 != v15) {
										if ( < 0) {
											Object v24 = v18.valueAt();
											if (this.mThread == 0) {
												boolean v25 = ;
												if (v25 == 0) {
													IApplicationThread v26 = this.mThread;
													IBinder v27 = v26.asBinder();
													if (v27 != v15) {
														WindowProcessController v14 = v24;
														if (v14 != 0) {
															if (1 != 0) {
																int v29 = this.mDelegateProcesses.size();
																if ( < 0) {
																	Object v30 = this.mDelegateProcesses.valueAt();
																	if (TransitionController$RemotePlayer$DelegateProcess.mProc != v14) {
																		if ( < 0) {
																			Object v31 = this.mDelegateProcesses.valueAt();
																			if (TransitionController$RemotePlayer$DelegateProcess.mProc != v14) {
																				Object v32 = this.mDelegateProcesses.removeAt();
																				if ( != 0) {
																					if (this.mRunningRemoteAnimation != 0) {
																						this.mRunningRemoteAnimation = 0;
																						WindowProcessController.updateRunningRemoteOrRecentsAnimation();
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	Object v11 = this.mPidMap.get(p1);
	WindowProcessController v10 = v11;
	if (v10 != 0) {
		WindowProcessController v9 = 0;
		if (v9 == 0) {
			boolean v12 = v9.isRunningRemoteTransition();
			if (v12 == 0) {
				if (p1 != 0) {
					IBinder v14 = p1.asBinder();
					ArrayMap v15 = this.mMap;
					int v16 = v15.size();
					if ( < 0) {
						Object v17 = v15.valueAt();
						int v18 = v17.size();
						if ( < 0) {
							Object v19 = v17.valueAt();
							if (this.mThread == 0) {
								boolean v20 = ;
								if (v20 == 0) {
									IApplicationThread v21 = this.mThread;
									IBinder v22 = v21.asBinder();
									if (v22 != v14) {
										if ( < 0) {
											Object v23 = v17.valueAt();
											if (this.mThread == 0) {
												boolean v24 = ;
												if (v24 == 0) {
													IApplicationThread v25 = this.mThread;
													IBinder v26 = v25.asBinder();
													if (v26 != v14) {
														WindowProcessController v13 = v23;
														if (v13 != 0) {
															if (1 != 0) {
																int v28 = this.mDelegateProcesses.size();
																if ( < 0) {
																	Object v29 = this.mDelegateProcesses.valueAt();
																	if (TransitionController$RemotePlayer$DelegateProcess.mProc != v13) {
																		if ( < 0) {
																			Object v30 = this.mDelegateProcesses.valueAt();
																			if (TransitionController$RemotePlayer$DelegateProcess.mProc != v13) {
																				Object v31 = this.mDelegateProcesses.removeAt();
																				if ( != 0) {
																					if (this.mRunningRemoteAnimation != 0) {
																						this.mRunningRemoteAnimation = 0;
																						WindowProcessController.updateRunningRemoteOrRecentsAnimation();
																						WindowManagerThreadPriorityBooster.reset();
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v4 = Binder.getCallingPid();\nint v5 = Binder.getCallingUid();', 'WindowProcessController v10 = this.mPidMap.get(p1);', 'this.sThreadPriorityBooster.boost();', 'WindowManagerService.boostPriorityForLockedSection();\nWindowProcessController v7 = p0.getProcessController(v4, v5);']

The method setRunningRemoteTransitionDelegate has the following similar APIs:

- API Name: getAuthToken(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZZLandroid/os/Bundle;)V with Similarity Score: 0.977679431438446
  - Access Control Level: NONE and the following code:
int v16 = Binder.getCallingUid();
int v19 = Binder.getCallingPid();

- API Name: isHigherPriority(Landroid/media/tv/tunerresourcemanager/ResourceClientProfile;Landroid/media/tv/tunerresourcemanager/ResourceClientProfile;)Z with Similarity Score: 0.9519420266151428
  - Access Control Level: SYS_OR_SIG and the following code:
int v13 = Binder.getCallingPid();
int v14 = Binder.getCallingPid();

