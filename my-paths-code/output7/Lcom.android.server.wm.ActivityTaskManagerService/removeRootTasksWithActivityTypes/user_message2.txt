The method removeRootTasksWithActivityTypes has the following code snippet:

This is path 1 for the API with depth 2:
public void removeRootTasksWithActivityTypes([I p1){
	long v5 = Binder.clearCallingIdentity();
	int v8 = this.mChildren.size();
	int v7 = v8;
	if ( < 0) {
		Object v10 = this.mChildren.get();
		WindowContainer v9 = v10;
		if (p1 == 0) {
			if (p1.length != 0) {
				ArrayList v12 = new ArrayList();
				DisplayContent$$ExternalSyntheticLambda23 v14 = new DisplayContent$$ExternalSyntheticLambda23(p1,v12);
				DisplayContent.forAllRootTasks(v14);
				int v17 = v12.size();
				if ( < 0) {
					Object v18 = v12.get();
					RootWindowContainer.mTaskSupervisor.removeRootTask(v18);
					if ( < 0) {
						if ( < 0) {
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void removeRootTasksWithActivityTypes([I p1){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	int v9 = this.mChildren.size();
	int v8 = v9;
	if ( < 0) {
		Object v11 = this.mChildren.get();
		WindowContainer v10 = v11;
		if (p1 == 0) {
			if (p1.length != 0) {
				ArrayList v13 = new ArrayList();
				DisplayContent$$ExternalSyntheticLambda23 v15 = new DisplayContent$$ExternalSyntheticLambda23(p1,v13);
				DisplayContent.forAllRootTasks(v15);
				int v18 = v13.size();
				if ( < 0) {
					Object v19 = v13.get();
					RootWindowContainer.mTaskSupervisor.removeRootTask(v19);
					if ( < 0) {
						if ( < 0) {
							Binder.restoreCallingIdentity(v6);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void removeRootTasksWithActivityTypes([I p1){
	long v5 = Binder.clearCallingIdentity();
	int v8 = this.mChildren.size();
	int v7 = v8;
	if ( < 0) {
		Object v10 = this.mChildren.get();
		WindowContainer v9 = v10;
		if (p1 == 0) {
			if (p1.length != 0) {
				ArrayList v12 = new ArrayList();
				DisplayContent$$ExternalSyntheticLambda23 v14 = new DisplayContent$$ExternalSyntheticLambda23(p1,v12);
				DisplayContent.forAllRootTasks(v14);
				int v17 = v12.size();
				if ( < 0) {
					Object v18 = v12.get();
					RootWindowContainer.mTaskSupervisor.removeRootTask(v18);
					if ( < 0) {
						if ( < 0) {
							Binder.restoreCallingIdentity(v5);
							WindowManagerThreadPriorityBooster.reset();
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ArrayList v12 = new ArrayList();\nDisplayContent$$ExternalSyntheticLambda23 v14 = new DisplayContent$$ExternalSyntheticLambda23(p1,v12);\nDisplayContent.forAllRootTasks(v14);\nObject v18 = v12.get();\nRootWindowContainer.mTaskSupervisor.removeRootTask(v18);', 'this.sThreadPriorityBooster.boost();\nlong v4 = Binder.clearCallingIdentity();\nint v6 = RootWindowContainer.getChildCount();\nWindowContainer v7 = RootWindowContainer.getChildAt();\nv7.removeRootTasksWithActivityTypes(p1);', 'WindowManagerService.boostPriorityForLockedSection();\nlong v3 = Binder.clearCallingIdentity();\nthis.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);']

The method removeRootTasksWithActivityTypes has the following similar APIs:

- API Name: moveTaskToRootTask(IIZ)V with Similarity Score: 0.9164218902587891
  - Access Control Level: SYS_OR_SIG and the following code:
WindowManagerService.boostPriorityForLockedSection();
long v3 = Binder.clearCallingIdentity();
Task v4 = this.mRootWindowContainer.anyTaskForId(p1);

- API Name: finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V with Similarity Score: 0.9097170829772949
  - Access Control Level: NONE and the following code:
this.sThreadPriorityBooster.boost();
long v3 = Binder.clearCallingIdentity();
RootWindowContainer$$ExternalSyntheticLambda5 v5 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
RootWindowContainer.forAllRootTasks(v5);

