The method getFrontActivityScreenCompatMode has the following code snippet:

This is path 1 for the API with depth 2:
public int getFrontActivityScreenCompatMode(){
	if (v3 != 0) {
		int v9 = RootWindowContainer.getChildCount();
		if ( < 0) {
			WindowContainer v10 = RootWindowContainer.getChildAt();
			Task v11 = v10.getFocusedRootTask();
			if (v11 == 0) {
				if ( < 0) {
					WindowContainer v12 = RootWindowContainer.getChildAt();
					Task v13 = v12.getFocusedRootTask();
					if (v13 == 0) {
						Task v8 = v13;
						Task v7 = v8;
						if (v7 == 0) {
							ActivityRecord v16 = TaskFragment.topRunningActivity(0, 1);
							ActivityRecord v15 = v16;
							ActivityRecord v14 = v15;
							if ( != 0) {
								boolean v19 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
								float v20 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
								Configuration v21 = this.mService.getGlobalConfiguration();
								CompatibilityInfo v22 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v19,v20);
								CompatibilityInfo v18 = v22;
								boolean v24 = v18.alwaysSupportsScreen();
								if (v24 == 0) {
									boolean v25 = v18.neverSupportsScreen();
									if (v25 == 0) {
										int v27 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
										if ((v27 & 2) == 0) {
											boolean v26 = ;
											int v17 = v26;
											return v17;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getFrontActivityScreenCompatMode(){
	if (v3 != 0) {
		WindowManagerThreadPriorityBooster.boost();
		int v10 = RootWindowContainer.getChildCount();
		if ( < 0) {
			WindowContainer v11 = RootWindowContainer.getChildAt();
			Task v12 = v11.getFocusedRootTask();
			if (v12 == 0) {
				if ( < 0) {
					WindowContainer v13 = RootWindowContainer.getChildAt();
					Task v14 = v13.getFocusedRootTask();
					if (v14 == 0) {
						Task v9 = v14;
						Task v8 = v9;
						if (v8 == 0) {
							ActivityRecord v17 = TaskFragment.topRunningActivity(0, 1);
							ActivityRecord v16 = v17;
							ActivityRecord v15 = v16;
							if ( != 0) {
								boolean v20 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
								float v21 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
								Configuration v22 = this.mService.getGlobalConfiguration();
								CompatibilityInfo v23 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v20,v21);
								CompatibilityInfo v19 = v23;
								boolean v25 = v19.alwaysSupportsScreen();
								if (v25 == 0) {
									boolean v26 = v19.neverSupportsScreen();
									if (v26 == 0) {
										int v28 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
										if ((v28 & 2) == 0) {
											boolean v27 = ;
											int v18 = v27;
											return v18;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int getFrontActivityScreenCompatMode(){
	if (v3 != 0) {
		int v9 = RootWindowContainer.getChildCount();
		if ( < 0) {
			WindowContainer v10 = RootWindowContainer.getChildAt();
			Task v11 = v10.getFocusedRootTask();
			if (v11 == 0) {
				if ( < 0) {
					WindowContainer v12 = RootWindowContainer.getChildAt();
					Task v13 = v12.getFocusedRootTask();
					if (v13 == 0) {
						Task v8 = v13;
						Task v7 = v8;
						if (v7 == 0) {
							ActivityRecord v16 = TaskFragment.topRunningActivity(0, 1);
							ActivityRecord v15 = v16;
							ActivityRecord v14 = v15;
							if ( != 0) {
								boolean v19 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
								float v20 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
								Configuration v21 = this.mService.getGlobalConfiguration();
								CompatibilityInfo v22 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v19,v20);
								CompatibilityInfo v18 = v22;
								boolean v24 = v18.alwaysSupportsScreen();
								if (v24 == 0) {
									boolean v25 = v18.neverSupportsScreen();
									if (v25 == 0) {
										int v27 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
										if ((v27 & 2) == 0) {
											boolean v26 = ;
											int v17 = v26;
											WindowManagerThreadPriorityBooster.reset();
											return v17;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();\nCompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);\nreturn v10;', 'p0.getTopDisplayFocusedRootTask();\nthis.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);\nreturn v5;', 'int v9 = RootWindowContainer.getChildCount();\nTask v11 = v10.getFocusedRootTask();\nCompatibilityInfo v22 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v19,v20);']

The method getFrontActivityScreenCompatMode has the following similar APIs:

- API Name: getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo; with Similarity Score: 0.9199395179748535
  - Access Control Level: SYS_OR_SIG and the following code:
Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
ActivityTaskManager$RootTaskInfo v9 = RootWindowContainer.getRootTaskInfo(v8);

- API Name: setFrontActivityScreenCompatMode(I)V with Similarity Score: 0.9038490653038025
  - Access Control Level: SYS_OR_SIG and the following code:
Task v5 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
ActivityRecord v7 = TaskFragment.topRunningActivity(0);
int v9 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
CompatibilityInfo v10 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
Integer v20 = Integer.valueOf();
Object v21 = this.mPackages.put(ApplicationInfo.packageName, v20);

