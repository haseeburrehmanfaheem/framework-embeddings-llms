The method getFocusedRootTaskInfo has the following code snippet:

This is path 1 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt();
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			if ( < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt();
				Task v12 = v11.getFocusedRootTask();
				if (v12 == 0) {
					Task v7 = v12;
					Task v6 = v7;
					if (v6 == 0) {
						int v15 = RootWindowContainer.getChildCount();
						if ( < 0) {
							WindowContainer v16 = RootWindowContainer.getChildAt();
							Task v17 = v16.getRootTask(p1);
							if (v17 == 0) {
								if ( < 0) {
									WindowContainer v18 = RootWindowContainer.getChildAt();
									Task v19 = v18.getRootTask(p1);
									if (v19 == 0) {
										Task v14 = v19;
										if (v14 == 0) {
											ActivityTaskManager$RootTaskInfo v21 = new ActivityTaskManager$RootTaskInfo();
											v14.fillTaskInfo(v21);
											DisplayContent v24 = v14.getDisplayContent();
											if (v24 != 0) {
												[I v25 = new [I(1);
												[Z v26 = new [Z(1);
												RootWindowContainer$$ExternalSyntheticLambda21 v27 = new RootWindowContainer$$ExternalSyntheticLambda21(v14,v26,v25);
												boolean v29 = v24.forAllRootTasks(v27, 0);
												if (v26[0] == 0) {
													ActivityTaskManager$RootTaskInfo.position = ;
													boolean v30 = v14.shouldBeVisible(0);
													ActivityTaskManager$RootTaskInfo.visible = v30;
													v14.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
													int v32 = v14.getDescendantTaskCount();
													[I v33 = new [I(v32);
													ActivityTaskManager$RootTaskInfo.childTaskIds = v33;
													String v34 = new String(v32);
													ActivityTaskManager$RootTaskInfo.childTaskNames = v34;
													Rect v35 = new Rect(v32);
													ActivityTaskManager$RootTaskInfo.childTaskBounds = v35;
													[I v36 = new [I(v32);
													ActivityTaskManager$RootTaskInfo.childTaskUserIds = v36;
													[I v37 = new [I(1);
													RootWindowContainer$$ExternalSyntheticLambda22 v38 = new RootWindowContainer$$ExternalSyntheticLambda22();
													ArgumentPlaceholder v40 = PooledLambda.__(Tas.class);
													PooledConsumer v41 = PooledLambda.obtainConsumer(v38, v40, v21, v37);
													v14.forAllLeafTasks(v41, 0);
													v41.recycle();
													ActivityRecord v44 = v14.topRunningActivity();
													if (v44 == 0) {
														ComponentName v45 = ActivityRecord.intent.getComponent();
														ActivityTaskManager$RootTaskInfo.topActivity = ;
														ActivityTaskManager$RootTaskInfo v20 = v21;
														ActivityTaskManager$RootTaskInfo v13 = v20;
														Binder.restoreCallingIdentity(v2);
														return ;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	int v9 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v10 = RootWindowContainer.getChildAt();
		Task v11 = v10.getFocusedRootTask();
		if (v11 == 0) {
			if ( < 0) {
				WindowContainer v12 = RootWindowContainer.getChildAt();
				Task v13 = v12.getFocusedRootTask();
				if (v13 == 0) {
					Task v8 = v13;
					Task v7 = v8;
					if (v7 == 0) {
						int v16 = RootWindowContainer.getChildCount();
						if ( < 0) {
							WindowContainer v17 = RootWindowContainer.getChildAt();
							Task v18 = v17.getRootTask(p1);
							if (v18 == 0) {
								if ( < 0) {
									WindowContainer v19 = RootWindowContainer.getChildAt();
									Task v20 = v19.getRootTask(p1);
									if (v20 == 0) {
										Task v15 = v20;
										if (v15 == 0) {
											ActivityTaskManager$RootTaskInfo v22 = new ActivityTaskManager$RootTaskInfo();
											v15.fillTaskInfo(v22);
											DisplayContent v25 = v15.getDisplayContent();
											if (v25 != 0) {
												[I v26 = new [I(1);
												[Z v27 = new [Z(1);
												RootWindowContainer$$ExternalSyntheticLambda21 v28 = new RootWindowContainer$$ExternalSyntheticLambda21(v15,v27,v26);
												boolean v30 = v25.forAllRootTasks(v28, 0);
												if (v27[0] == 0) {
													ActivityTaskManager$RootTaskInfo.position = ;
													boolean v31 = v15.shouldBeVisible(0);
													ActivityTaskManager$RootTaskInfo.visible = v31;
													v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
													int v33 = v15.getDescendantTaskCount();
													[I v34 = new [I(v33);
													ActivityTaskManager$RootTaskInfo.childTaskIds = v34;
													String v35 = new String(v33);
													ActivityTaskManager$RootTaskInfo.childTaskNames = v35;
													Rect v36 = new Rect(v33);
													ActivityTaskManager$RootTaskInfo.childTaskBounds = v36;
													[I v37 = new [I(v33);
													ActivityTaskManager$RootTaskInfo.childTaskUserIds = v37;
													[I v38 = new [I(1);
													RootWindowContainer$$ExternalSyntheticLambda22 v39 = new RootWindowContainer$$ExternalSyntheticLambda22();
													ArgumentPlaceholder v41 = PooledLambda.__(Tas.class);
													PooledConsumer v42 = PooledLambda.obtainConsumer(v39, v41, v22, v38);
													v15.forAllLeafTasks(v42, 0);
													v42.recycle();
													ActivityRecord v45 = v15.topRunningActivity();
													if (v45 == 0) {
														ComponentName v46 = ActivityRecord.intent.getComponent();
														ActivityTaskManager$RootTaskInfo.topActivity = ;
														ActivityTaskManager$RootTaskInfo v21 = v22;
														ActivityTaskManager$RootTaskInfo v14 = v21;
														Binder.restoreCallingIdentity(v2);
														return ;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v2 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt();
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			if ( < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt();
				Task v12 = v11.getFocusedRootTask();
				if (v12 == 0) {
					Task v7 = v12;
					Task v6 = v7;
					if (v6 == 0) {
						int v15 = RootWindowContainer.getChildCount();
						if ( < 0) {
							WindowContainer v16 = RootWindowContainer.getChildAt();
							Task v17 = v16.getRootTask(p1);
							if (v17 == 0) {
								if ( < 0) {
									WindowContainer v18 = RootWindowContainer.getChildAt();
									Task v19 = v18.getRootTask(p1);
									if (v19 == 0) {
										Task v14 = v19;
										if (v14 == 0) {
											ActivityTaskManager$RootTaskInfo v21 = new ActivityTaskManager$RootTaskInfo();
											v14.fillTaskInfo(v21);
											DisplayContent v24 = v14.getDisplayContent();
											if (v24 != 0) {
												[I v25 = new [I(1);
												[Z v26 = new [Z(1);
												RootWindowContainer$$ExternalSyntheticLambda21 v27 = new RootWindowContainer$$ExternalSyntheticLambda21(v14,v26,v25);
												boolean v29 = v24.forAllRootTasks(v27, 0);
												if (v26[0] == 0) {
													ActivityTaskManager$RootTaskInfo.position = ;
													boolean v30 = v14.shouldBeVisible(0);
													ActivityTaskManager$RootTaskInfo.visible = v30;
													v14.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
													int v32 = v14.getDescendantTaskCount();
													[I v33 = new [I(v32);
													ActivityTaskManager$RootTaskInfo.childTaskIds = v33;
													String v34 = new String(v32);
													ActivityTaskManager$RootTaskInfo.childTaskNames = v34;
													Rect v35 = new Rect(v32);
													ActivityTaskManager$RootTaskInfo.childTaskBounds = v35;
													[I v36 = new [I(v32);
													ActivityTaskManager$RootTaskInfo.childTaskUserIds = v36;
													[I v37 = new [I(1);
													RootWindowContainer$$ExternalSyntheticLambda22 v38 = new RootWindowContainer$$ExternalSyntheticLambda22();
													ArgumentPlaceholder v40 = PooledLambda.__(Tas.class);
													PooledConsumer v41 = PooledLambda.obtainConsumer(v38, v40, v21, v37);
													v14.forAllLeafTasks(v41, 0);
													v41.recycle();
													ActivityRecord v44 = v14.topRunningActivity();
													if (v44 == 0) {
														ComponentName v45 = ActivityRecord.intent.getComponent();
														ActivityTaskManager$RootTaskInfo.topActivity = ;
														ActivityTaskManager$RootTaskInfo v20 = v21;
														ActivityTaskManager$RootTaskInfo v13 = v20;
														WindowManagerThreadPriorityBooster.reset();
														Binder.restoreCallingIdentity(v2);
														return ;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Task v10 = v9.getFocusedRootTask();\nActivityTaskManager$RootTaskInfo v21 = new ActivityTaskManager$RootTaskInfo();\nv14.fillTaskInfo(v21);', 'Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();\nActivityTaskManager$RootTaskInfo v9 = RootWindowContainer.getRootTaskInfo(v8);', 'Task v4 = p0.getTopDisplayFocusedRootTask();\nActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);']

The method getFocusedRootTaskInfo has the following similar APIs:

- API Name: getFrontActivityScreenCompatMode()I with Similarity Score: 0.9199395179748535
  - Access Control Level: SYS_OR_SIG and the following code:
Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
CompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
return v10;

- API Name: getFrontActivityScreenCompatMode()I with Similarity Score: 0.9001429677009583
  - Access Control Level: SYS_OR_SIG and the following code:
Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
CompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
return v10;

