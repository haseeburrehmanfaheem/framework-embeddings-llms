This is path 1 for the API with depth 2:
public void setFrontActivityScreenCompatMode(int p1){
	int v7 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v8 = RootWindowContainer.getChildAt();
		Task v9 = v8.getFocusedRootTask();
		if (v9 == 0) {
			if ( < 0) {
				WindowContainer v10 = RootWindowContainer.getChildAt();
				Task v11 = v10.getFocusedRootTask();
				if (v11 == 0) {
					Task v6 = v11;
					Task v5 = v6;
					if (v5 == 0) {
						ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);
						ActivityRecord v13 = v14;
						ActivityRecord v12 = v13;
						if ( != 0) {
							Object v17 = this.mPackages.get(ApplicationInfo.packageName);
							if (v17 == 0) {
								int v18 = v17.intValue();
								int v16 = ;
								if (p1 == 0) {
									if (p1 == 1) {
										if (p1 == 2) {
											if ((v16 & 2) != 0) {
												if ( == 0) {
													boolean v20 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
													float v21 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
													Configuration v22 = this.mService.getGlobalConfiguration();
													CompatibilityInfo v23 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v20,v21);
													CompatibilityInfo v19 = v23;
													boolean v25 = v19.alwaysSupportsScreen();
													if (v25 == 0) {
														boolean v33 = v19.neverSupportsScreen();
														if (v33 == 0) {
															if ( == v16) {
																if ( == 0) {
																	Integer v34 = Integer.valueOf();
																	Object v35 = this.mPackages.put(ApplicationInfo.packageName, v34);
																	boolean v37 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
																	float v38 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
																	Configuration v39 = this.mService.getGlobalConfiguration();
																	CompatibilityInfo v40 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v37,v38);
																	CompatibilityInfo v36 = v40;
																	this.mHandler.removeMessages(300);
																	Message v44 = this.mHandler.obtainMessage(300);
																	boolean v45 = this.mHandler.sendMessageDelayed(v44, 10000);
																	Task v47 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
																	Task v46 = v47;
																	ActivityRecord v49 = Task.topRunningActivity();
																	Task$$ExternalSyntheticLambda28 v50 = new Task$$ExternalSyntheticLambda28();
																	ArgumentPlaceholder v52 = PooledLambda.__(ActivityRecor.class);
																	PooledConsumer v53 = PooledLambda.obtainConsumer(v50, v52, v49, ApplicationInfo.packageName);
																	Task.forAllActivities(v53);
																	v53.recycle();
																	ActivityRecord v48 = v49;
																	SparseArray v56 = this.mPidMap;
																	int v57 = v56.size();
																	if ( < 0) {
																		if (v48 == 0) {
																			boolean v59 = ActivityRecord.ensureActivityConfiguration(0, 0, 0);
																			boolean v58 = v59;
																			Task.ensureActivitiesVisible(v48, 0, 0, 1);
																			return;
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setFrontActivityScreenCompatMode(int p1){
	this.sThreadPriorityBooster.boost();
	Task v5 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v5;
	if (v4 == 0) {
		ActivityRecord v7 = TaskFragment.topRunningActivity(0);
		ActivityRecord v6 = v7;
		if ( != 0) {
			int v9 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
			if (p1 == 0) {
				if (p1 == 1) {
					if (p1 == 2) {
						if ((v9 & 2) != 0) {
							if ( == 0) {
								CompatibilityInfo v10 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
								boolean v11 = v10.alwaysSupportsScreen();
								if (v11 == 0) {
									boolean v19 = v10.neverSupportsScreen();
									if (v19 == 0) {
										if ( == v9) {
											if ( == 0) {
												Integer v20 = Integer.valueOf();
												Object v21 = this.mPackages.put(ApplicationInfo.packageName, v20);
												CompatibilityInfo v22 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
												CompatModePackages.scheduleWrite();
												Task v24 = this.mService.getTopDisplayFocusedRootTask();
												ActivityRecord v25 = v24.restartPackage(ApplicationInfo.packageName);
												SparseArray v26 = ActivityTaskManagerService.mProcessMap.getPidMap();
												int v27 = v26.size();
												if ( < 0) {
													if (v25 == 0) {
														boolean v28 = v25.ensureActivityConfiguration(0, 0);
														v24.ensureActivitiesVisible(v25, 0, 0);
														this.sThreadPriorityBooster.reset();
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	if (v3 == 0) {
		ActivityRecord v4 = v3.topRunningActivity();
		if ( != 0) {
			this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
			WindowManagerService.resetPriorityAfterLockedSection();
			return;
		}
	}
}
