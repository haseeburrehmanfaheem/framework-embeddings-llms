This is path 1 for the API with depth 2:
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	TransitionController v7 = this.mTransitionController;
	TransitionController v6 = v7;
	Transition v9 = p1;
	if (v9 == 0) {
		boolean v10 = this.mPlayingTransitions.contains(v9);
		if (v10 != 0) {
			if (this.mNavBarAttachedToApp != 0) {
				this.mNavBarAttachedToApp = 0;
				if (this.mRecentsDisplayId != -1) {
					if (TransitionController.mStatusBar == 0) {
						TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
						DisplayContent v13 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
						DisplayPolicy v14 = v13.getDisplayPolicy();
						WindowState v15 = v14.getNavigationBar();
						if (v15 != 0) {
							v15.setSurfaceTranslationY(0);
							if (WindowState.mToken != 0) {
								SurfaceControl$Transaction v17 = v13.getPendingTransaction();
								WindowContainer v18 = WindowState.mToken.getParent();
								SurfaceControl v19 = WindowState.mToken.getSurfaceControl();
								int v20 = WindowState.mToken.getLastLayer();
								SurfaceControl$Transaction v21 = v17.setLayer(v19, v20);
								int v22 = this.mTargets.size();
								if ( >= v22) {
									Object v23 = this.mTargets.get();
									Task v24 = v23.asTask();
									if (v24 == 0) {
										boolean v25 = v24.isActivityTypeHomeOrRecents();
										if (v25 != 0) {
											int v26 = this.mTargets.size();
											if ( >= v26) {
												if ( == 0) {
													SurfaceControl v27 = WindowState.mToken.getSurfaceControl();
													SurfaceControl v28 = v18.getSurfaceControl();
													SurfaceControl$Transaction v29 = v17.reparent(v27, v28);
													Binder.restoreCallingIdentity(v2);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	TransitionController v6 = this.mWindowOrganizerController.getTransitionController();
	TransitionController v5 = v6;
	Transition v8 = Transition.fromBinder(p1);
	if (v8 == 0) {
		boolean v9 = this.mPlayingTransitions.contains(v8);
		if (v9 != 0) {
			v8.legacyRestoreNavigationBarFromApp();
			this.sThreadPriorityBooster.reset();
			Binder.restoreCallingIdentity(v2);
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	TransitionController v4 = p0.getTransitionController();
	v4.legacyDetachNavigationBarFromApp(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
