The method unhandledBack has the following code snippet:

This is path 1 for the API with depth 2:
public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt();
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			if ( < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt();
				Task v12 = v11.getFocusedRootTask();
				if (v12 == 0) {
					Task v7 = v12;
					Task v6 = v7;
					if (v6 == 0) {
						WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
						ActivityRecord v17 = WindowContainer.getActivity(v15, 1);
						ActivityRecord v14 = v17;
						if (v14 == 0) {
							int v19 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
							int v18 = v19;
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void unhandledBack(){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	int v9 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v10 = RootWindowContainer.getChildAt();
		Task v11 = v10.getFocusedRootTask();
		if (v11 == 0) {
			if ( < 0) {
				WindowContainer v12 = RootWindowContainer.getChildAt();
				Task v13 = v12.getFocusedRootTask();
				if (v13 == 0) {
					Task v8 = v13;
					Task v7 = v8;
					if (v7 == 0) {
						WindowContainer$$ExternalSyntheticLambda2 v16 = new WindowContainer$$ExternalSyntheticLambda2();
						ActivityRecord v18 = WindowContainer.getActivity(v16, 1);
						ActivityRecord v15 = v18;
						if (v15 == 0) {
							int v20 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
							int v19 = v20;
							Binder.restoreCallingIdentity(v6);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt();
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			if ( < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt();
				Task v12 = v11.getFocusedRootTask();
				if (v12 == 0) {
					Task v7 = v12;
					Task v6 = v7;
					if (v6 == 0) {
						WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
						ActivityRecord v17 = WindowContainer.getActivity(v15, 1);
						ActivityRecord v14 = v17;
						if (v14 == 0) {
							int v19 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
							int v18 = v19;
							Binder.restoreCallingIdentity(v5);
							WindowManagerThreadPriorityBooster.reset();
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();\nTask v5 = v6;\nif (v5 == 0) {\nActivityRecord v8 = Task.getTopMostActivity();\nif (v8 == 0) {\nint v9 = v8.finishIfPossible("unhandled-back", 1);', 'Task v4 = p0.getTopDisplayFocusedRootTask();\nif (v4 == 0) {\nv4.unhandledBackLocked();', 'long v5 = Binder.clearCallingIdentity();\nint v8 = RootWindowContainer.getChildCount();\nif ( < 0) {\nWindowContainer v9 = RootWindowContainer.getChildAt();\nTask v10 = v9.getFocusedRootTask();\n...\nActivityRecord v17 = WindowContainer.getActivity(v15, 1);']

The method unhandledBack has the following similar APIs:

- API Name: isTopActivityImmersive()Z with Similarity Score: 0.8993899822235107
  - Access Control Level: SYS_OR_SIG and the following code:
int v9 = RootWindowContainer.getChildCount();
WindowContainer v10 = RootWindowContainer.getChildAt();
Task v11 = v10.getFocusedRootTask();
ActivityRecord v16 = TaskFragment.topRunningActivity(0, 1);

- API Name: getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo; with Similarity Score: 0.8846265077590942
  - Access Control Level: SYS_OR_SIG and the following code:
Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
ActivityTaskManager$RootTaskInfo v9 = RootWindowContainer.getRootTaskInfo(v8);

