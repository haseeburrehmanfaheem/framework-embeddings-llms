This is path 1 for the API with depth 2:
public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	if ( < 0) {
		WindowContainer v9 = RootWindowContainer.getChildAt();
		Task v10 = v9.getFocusedRootTask();
		if (v10 == 0) {
			if ( < 0) {
				WindowContainer v11 = RootWindowContainer.getChildAt();
				Task v12 = v11.getFocusedRootTask();
				if (v12 == 0) {
					Task v7 = v12;
					Task v6 = v7;
					if (v6 == 0) {
						WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
						ActivityRecord v17 = WindowContainer.getActivity(v15, 1);
						ActivityRecord v14 = v17;
						if (v14 == 0) {
							int v19 = ActivityRecord.finishIfPossible(0, 0, 0, "unhandled-back", 1);
							int v18 = v19;
							Binder.restoreCallingIdentity(v5);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void unhandledBack(){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v5 = v6;
	if (v5 == 0) {
		ActivityRecord v8 = Task.getTopMostActivity();
		if (v8 == 0) {
			int v9 = v8.finishIfPossible("unhandled-back", 1);
			Binder.restoreCallingIdentity(v4);
			this.sThreadPriorityBooster.reset();
			return;
		}
	}
}


This is path 3 for the API with depth 0:
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	if (v4 == 0) {
		v4.unhandledBackLocked();
		Binder.restoreCallingIdentity(v3);
		WindowManagerService.resetPriorityAfterLockedSection();
		return;
	}
}
