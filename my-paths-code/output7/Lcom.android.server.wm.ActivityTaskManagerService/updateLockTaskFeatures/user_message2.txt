The method updateLockTaskFeatures has the following code snippet:

This is path 1 for the API with depth 2:
public void updateLockTaskFeatures(int p1, int p2){
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v6 = Integer.toHexString(p2);
		String v7 = String.valueOf(v6);
		Object v8 = new Object(2);
		Long v9 = Long.valueOf(p1);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
			File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v12;
			ProtoLogImpl v11 = this.sServiceInstance;
			boolean v19 = p1.isLogToProto();
			if (v19 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v21 = p1.isLogToLogcat();
				if (v21 == 0) {
					String v22 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
					LockTaskController v24 = p0.getLockTaskController();
					int v27 = this.mLockTaskFeatures.get(p1, 0);
					int v26 = v27;
					if (p2 != v26) {
						this.mLockTaskFeatures.put(p1, p2);
						boolean v29 = this.mLockTaskModeTasks.isEmpty();
						if (v29 != 0) {
							Object v30 = this.mLockTaskModeTasks.get(0);
							if (p1 != Task.mUserId) {
								LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
								boolean v33 = this.mHandler.post(v31);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerThreadPriorityBooster.boost();
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v7 = Integer.toHexString(p2);
		String v8 = String.valueOf(v7);
		Object v9 = new Object(2);
		Long v10 = Long.valueOf(p1);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v13 = new ProtoLogImpl(v14,1048576,v16);
			File v14 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v16 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v13;
			ProtoLogImpl v12 = this.sServiceInstance;
			boolean v20 = p1.isLogToProto();
			if (v20 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v22 = p1.isLogToLogcat();
				if (v22 == 0) {
					String v23 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v23, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
					LockTaskController v25 = p0.getLockTaskController();
					int v28 = this.mLockTaskFeatures.get(p1, 0);
					int v27 = v28;
					if (p2 != v27) {
						this.mLockTaskFeatures.put(p1, p2);
						boolean v30 = this.mLockTaskModeTasks.isEmpty();
						if (v30 != 0) {
							Object v31 = this.mLockTaskModeTasks.get(0);
							if (p1 != Task.mUserId) {
								LockTaskController$$ExternalSyntheticLambda1 v32 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
								boolean v34 = this.mHandler.post(v32);
								return;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void updateLockTaskFeatures(int p1, int p2){
	if (ProtoLogCache.WM_DEBUG_LOCKTASK_enabled == 0) {
		String v6 = Integer.toHexString(p2);
		String v7 = String.valueOf(v6);
		Object v8 = new Object(2);
		Long v9 = Long.valueOf(p1);
		if (this.sServiceInstance != 0) {
			ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
			File v13 = new File("/data/misc/wmtrace/wm_log.winscope");
			ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
			this.sServiceInstance = v12;
			ProtoLogImpl v11 = this.sServiceInstance;
			boolean v19 = p1.isLogToProto();
			if (v19 == 0) {
				BaseProtoLogImpl.logToProto(p2, p3, p5);
				boolean v21 = p1.isLogToLogcat();
				if (v21 == 0) {
					String v22 = p1.getTag();
					BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
					LockTaskController v24 = p0.getLockTaskController();
					int v27 = this.mLockTaskFeatures.get(p1, 0);
					int v26 = v27;
					if (p2 != v26) {
						this.mLockTaskFeatures.put(p1, p2);
						boolean v29 = this.mLockTaskModeTasks.isEmpty();
						if (v29 != 0) {
							Object v30 = this.mLockTaskModeTasks.get(0);
							if (p1 != Task.mUserId) {
								LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
								boolean v33 = this.mHandler.post(v31);
								WindowManagerThreadPriorityBooster.reset();
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v27 = this.mLockTaskFeatures.get(p1, 0);\nif (p2 != v26) {\nthis.mLockTaskFeatures.put(p1, p2);', 'LockTaskController v24 = p0.getLockTaskController();\nint v27 = this.mLockTaskFeatures.get(p1, 0);\nif (p2 != v26) {\nthis.mLockTaskFeatures.put(p1, p2);', 'LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);\nboolean v33 = this.mHandler.post(v31);', 'this.mLockTaskFeatures.put(p1, p2);', 'v9.updateLockTaskFeatures(p1, p2);']

The method updateLockTaskFeatures has the following similar APIs:

- API Name: updateLockTaskPackages(I[Ljava/lang/String;)V with Similarity Score: 0.8984665870666504
  - Access Control Level: SYS_OR_SIG and the following code:
this.mLockTaskPackages.put(p1, p2);

- API Name: updateLockTaskPackages(I[Ljava/lang/String;)V with Similarity Score: 0.8015446662902832
  - Access Control Level: SYS_OR_SIG and the following code:
LockTaskController v9 = p0.getLockTaskController();
v9.updateLockTaskPackages(p1, p2);

