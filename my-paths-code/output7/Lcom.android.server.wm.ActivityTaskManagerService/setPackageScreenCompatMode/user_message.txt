This is path 1 for the API with depth 2:
public void setPackageScreenCompatMode(String p1, int p2){
	IPackageManager v7 = ActivityThread.getPackageManager();
	IPackageManager v6 = v7;
	ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);
	if ( != 0) {
		int v10 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
		if (p2 == 0) {
			if (p2 == 1) {
				if (p2 == 2) {
					if ((v10 & 2) != 0) {
						if ( == 0) {
							CompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked();
							boolean v12 = v11.alwaysSupportsScreen();
							if (v12 == 0) {
								boolean v20 = v11.neverSupportsScreen();
								if (v20 == 0) {
									if ( == v10) {
										if ( == 0) {
											Integer v21 = Integer.valueOf();
											Object v22 = this.mPackages.put(ApplicationInfo.packageName, v21);
											CompatibilityInfo v23 = CompatModePackages.compatibilityInfoForPackageLocked();
											CompatModePackages.scheduleWrite();
											Task v25 = this.mService.getTopDisplayFocusedRootTask();
											ActivityRecord v26 = v25.restartPackage(ApplicationInfo.packageName);
											SparseArray v27 = ActivityTaskManagerService.mProcessMap.getPidMap();
											int v28 = v27.size();
											if ( < 0) {
												if (v26 == 0) {
													boolean v29 = v26.ensureActivityConfiguration(0, 0);
													v25.ensureActivitiesVisible(v26, 0, 0);
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void setPackageScreenCompatMode(String p1, int p2){
	this.sThreadPriorityBooster.boost();
	IPackageManager v5 = AppGlobals.getPackageManager();
	ApplicationInfo v6 = v5.getApplicationInfo(p1, 0, 0);
	if ( != 0) {
		this.sThreadPriorityBooster.reset();
		return;
	}
}


This is path 3 for the API with depth 0:
public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
