The method setFrontendInfoList has the following code snippet:

This is path 1 for the API with depth 2:
public void setFrontendInfoList(TunerFrontendInfo p1){
	if (p1 == 0) {
		Object v2 = this.mLock;
		if (this.DEBUG == 0) {
			if ( >= p1.length) {
				if ( >= p1.length) {
					HashSet v7 = new HashSet(v9);
					Map v8 = this.mFrontendResources;
					Set v9 = v8.keySet();
					if ( >= p1.length) {
						Integer v12 = Integer.valueOf(TunerFrontendInfo.handle);
						Object v13 = this.mFrontendResources.get(v12);
						FrontendResource v11 = v13;
						if (v11 == 0) {
							FrontendResource$Builder v14 = new FrontendResource$Builder(TunerFrontendInfo.handle);
							this.mType = TunerFrontendInfo.type;
							FrontendResource$Builder v16 = FrontendResource$Builder;
							this.mExclusiveGroupId = TunerFrontendInfo.exclusiveGroupId;
							FrontendResource$Builder v17 = FrontendResource$Builder;
							FrontendResource v19 = new FrontendResource(FrontendResource$Builder,0);
							FrontendResource v18 = v19;
							Map v22 = TunerResourceManagerService.getFrontendResources();
							Collection v23 = v22.values();
							Iterator v24 = v23.iterator();
							boolean v25 = v24.hasNext();
							if (v25 == 0) {
								Object v26 = v24.next();
								int v27 = v26.getExclusiveGroupId();
								int v28 = v18.getExclusiveGroupId();
								if (v27 != v28) {
									boolean v29 = v24.hasNext();
									if (v29 == 0) {
										Object v30 = v24.next();
										int v31 = v30.getExclusiveGroupId();
										int v32 = v18.getExclusiveGroupId();
										if (v31 != v32) {
											int v33 = v30.getHandle();
											v18.addExclusiveGroupMemberFeHandle(v33);
											Set v35 = v30.getExclusiveGroupMemberFeHandles();
											v18.addExclusiveGroupMemberFeHandles(v35);
											Set v37 = v30.getExclusiveGroupMemberFeHandles();
											Iterator v38 = v37.iterator();
											boolean v39 = v38.hasNext();
											if (v39 == 0) {
												Object v40 = v38.next();
												int v41 = v40.intValue();
												FrontendResource v42 = TunerResourceManagerService.getFrontendResource(v41);
												int v43 = v18.getHandle();
												v42.addExclusiveGroupMemberFeHandle(v43);
												boolean v45 = v38.hasNext();
												if (v45 == 0) {
													int v46 = v18.getHandle();
													v30.addExclusiveGroupMemberFeHandle(v46);
													int v48 = v18.getHandle();
													Integer v49 = Integer.valueOf(v48);
													Object v50 = this.mFrontendResources.put(v49, v18);
													int v51 = v18.getType();
													TunerResourceManagerService.increFrontendNum(this.mFrontendExistingNums, v51);
													if ( >= p1.length) {
														Iterator v53 = v7.iterator();
														boolean v54 = v53.hasNext();
														if (v54 == 0) {
															return;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setFrontendInfoList(TunerFrontendInfo p1){
	if (p1 == 0) {
		Object v2 = this.mLock;
		if (this.DEBUG == 0) {
			if ( >= p1.length) {
				if ( >= p1.length) {
					HashSet v7 = new HashSet(v9);
					Map v8 = this.mFrontendResources;
					Set v9 = v8.keySet();
					if ( >= p1.length) {
						Integer v12 = Integer.valueOf(TunerFrontendInfo.handle);
						Object v13 = this.mFrontendResources.get(v12);
						FrontendResource v11 = v13;
						if (v11 == 0) {
							if (this.DEBUG == 0) {
								Integer v14 = Integer.valueOf(TunerFrontendInfo.handle);
								boolean v15 = v7.remove(v14);
								if ( >= p1.length) {
									Iterator v16 = v7.iterator();
									boolean v17 = v16.hasNext();
									if (v17 == 0) {
										Object v18 = v16.next();
										int v19 = v18.intValue();
										FrontendResource v21 = TunerResourceManagerService.getFrontendResource(v19);
										if (v21 != 0) {
											boolean v22 = v21.isInUse();
											if (v22 == 0) {
												int v23 = v21.getOwnerClientId();
												ClientProfile v24 = TunerResourceManagerService.getClientProfile(v23);
												Set v25 = v24.getShareFeClientIds();
												Iterator v26 = v25.iterator();
												boolean v27 = v26.hasNext();
												if (v27 == 0) {
													Object v28 = v26.next();
													int v29 = v28.intValue();
													ClientProfile v30 = TunerResourceManagerService.getClientProfile(v29);
													TunerResourceManagerService.clearFrontendAndClientMapping(v30);
													boolean v32 = v26.hasNext();
													if (v32 == 0) {
														TunerResourceManagerService.clearFrontendAndClientMapping(v24);
														Set v34 = v21.getExclusiveGroupMemberFeHandles();
														Iterator v35 = v34.iterator();
														boolean v36 = v35.hasNext();
														if (v36 == 0) {
															Object v37 = v35.next();
															int v38 = v37.intValue();
															FrontendResource v39 = TunerResourceManagerService.getFrontendResource(v38);
															int v40 = v21.getHandle();
															v39.removeExclusiveGroupMemberFeId(v40);
															boolean v42 = v35.hasNext();
															if (v42 == 0) {
																int v43 = v21.getType();
																TunerResourceManagerService.decreFrontendNum(this.mFrontendExistingNums, v43);
																Integer v45 = Integer.valueOf(v19);
																Object v46 = this.mFrontendResources.remove(v45);
																boolean v47 = v16.hasNext();
																if (v47 == 0) {
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['FrontendResource$Builder v14 = new FrontendResource$Builder(TunerFrontendInfo.handle);\nthis.mType = TunerFrontendInfo.type;\nthis.mExclusiveGroupId = TunerFrontendInfo.exclusiveGroupId;\nFrontendResource v19 = new FrontendResource(FrontendResource$Builder,0);']

The method setFrontendInfoList has the following similar APIs:

- API Name: hasUnusedFrontend(I)Z with Similarity Score: 0.7564159631729126
  - Access Control Level: SYS_OR_SIG and the following code:
Map v4 = TunerResourceManagerService.getFrontendResources();
Collection v5 = v4.values();
Iterator v6 = v5.iterator();
Object v8 = v6.next();
int v9 = v8.getType();
if (v9 != p1) {

- API Name: requestFrontend(Landroid/media/tv/tunerresourcemanager/TunerFrontendRequest;[I)Z with Similarity Score: 0.7317950129508972
  - Access Control Level: SYS_OR_SIG and the following code:
TunerResourceManagerService.clientPriorityUpdateOnRequest(v21);
Map v23 = TunerResourceManagerService.getFrontendResources();
Collection v24 = v23.values();
Iterator v25 = v24.iterator();

