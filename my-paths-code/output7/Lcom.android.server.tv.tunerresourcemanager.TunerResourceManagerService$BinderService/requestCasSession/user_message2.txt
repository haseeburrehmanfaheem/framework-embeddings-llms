The method requestCasSession has the following code snippet:

This is path 1 for the API with depth 2:
public boolean requestCasSession(CasSessionRequest p1, [I p2){
	if (p2 == 0) {
		Object v2 = this.mLock;
		Set v4 = this.mClientProfiles.keySet();
		Integer v5 = Integer.valueOf(CasSessionRequest.clientId);
		boolean v6 = v4.contains(v5);
		boolean v3 = v6;
		if (v3 == 0) {
			if (this.DEBUG == 0) {
				Integer v16 = Integer.valueOf(CasSessionRequest.casSystemId);
				Object v17 = this.mCasResources.get(v16);
				CasResource v15 = v17;
				if (v15 != 0) {
					CasResource$Builder v18 = new CasResource$Builder(CasSessionRequest.casSystemId);
					this.mMaxSessionNum = 2147483647;
					CasResource$Builder v20 = CasResource$Builder;
					CasResource v22 = new CasResource(CasResource$Builder);
					CasResource v21 = v22;
					int v25 = v21.getSystemId();
					Integer v26 = Integer.valueOf(v25);
					Object v27 = this.mCasResources.put(v26, v21);
					Integer v29 = Integer.valueOf(CasSessionRequest.clientId);
					Object v30 = this.mClientProfiles.get(v29);
					ClientProfile v28 = v30;
					boolean v32 = v28.isPriorityOverwritten();
					if (v32 == 0) {
						int v33 = v28.getProcessId();
						boolean v34 = TunerResourceManagerService.checkIsForeground(v33);
						int v35 = v28.getUseCase();
						int v36 = TunerResourceManagerService.getClientPriority(v35, v34);
						v28.setPriority(v36);
						if (this.mAvailableSessionNum != 0) {
							boolean v38 = ;
							if (v38 != 0) {
								Set v40 = this.mOwnerClientIdsToSessionNum.keySet();
								Set v39 = v40;
								Iterator v41 = v39.iterator();
								boolean v42 = v41.hasNext();
								if (v42 == 0) {
									Object v43 = v41.next();
									int v44 = v43.intValue();
									ClientProfile v46 = TunerResourceManagerService.getClientProfile(v44);
									TunerResourceManagerService.clientPriorityUpdateOnRequest(v46);
									int v48 = v46.getPriority();
									int v45 = v48;
									if ( <= v45) {
										boolean v49 = v41.hasNext();
										if (v49 == 0) {
											if ( <= -1) {
												int v50 = (this.mPriority - this.mNiceValue);
												if (v50 <= ) {
													Binder.allowBlockingForCurrentThread();
													ClientProfile v53 = TunerResourceManagerService.getClientProfile();
													if (v53 != 0) {
														Set v54 = v53.getShareFeClientIds();
														Iterator v55 = v54.iterator();
														boolean v56 = v55.hasNext();
														if (v56 == 0) {
															Object v57 = v55.next();
															int v58 = v57.intValue();
															Integer v59 = Integer.valueOf(v58);
															Object v60 = this.mListeners.get(v59);
															IResourcesReclaimListener v61 = v60.getListener();
															v61.onReclaimResources();
															ClientProfile v63 = TunerResourceManagerService.getClientProfile(v58);
															TunerResourceManagerService.clearAllResourcesAndClientMapping(v63);
															boolean v65 = v55.hasNext();
															if (v65 == 0) {
																if (this.DEBUG == 0) {
																	Integer v74 = Integer.valueOf();
																	Object v75 = this.mListeners.get(v74);
																	IResourcesReclaimListener v76 = v75.getListener();
																	v76.onReclaimResources();
																	TunerResourceManagerService.clearAllResourcesAndClientMapping(v53);
																	boolean v51 = 1;
																	if (v51 != 0) {
																		boolean v7 = 0;
																		return v7;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean requestCasSession(CasSessionRequest p1, [I p2){
	if (p2 == 0) {
		Object v2 = this.mLock;
		Set v4 = this.mClientProfiles.keySet();
		Integer v5 = Integer.valueOf(CasSessionRequest.clientId);
		boolean v6 = v4.contains(v5);
		boolean v3 = v6;
		if (v3 == 0) {
			if (this.DEBUG == 0) {
				Integer v16 = Integer.valueOf(CasSessionRequest.casSystemId);
				Object v17 = this.mCasResources.get(v16);
				CasResource v15 = v17;
				if (v15 != 0) {
					CasResource$Builder v18 = new CasResource$Builder(CasSessionRequest.casSystemId);
					this.mMaxSessionNum = 2147483647;
					CasResource$Builder v20 = CasResource$Builder;
					CasResource v22 = new CasResource(CasResource$Builder);
					CasResource v21 = v22;
					int v25 = v21.getSystemId();
					Integer v26 = Integer.valueOf(v25);
					Object v27 = this.mCasResources.put(v26, v21);
					Integer v29 = Integer.valueOf(CasSessionRequest.clientId);
					Object v30 = this.mClientProfiles.get(v29);
					ClientProfile v28 = v30;
					boolean v32 = v28.isPriorityOverwritten();
					if (v32 == 0) {
						if (this.mAvailableSessionNum != 0) {
							boolean v33 = ;
							if (v33 != 0) {
								Set v35 = this.mOwnerClientIdsToSessionNum.keySet();
								Set v34 = v35;
								Iterator v36 = v34.iterator();
								boolean v37 = v36.hasNext();
								if (v37 == 0) {
									Object v38 = v36.next();
									int v39 = v38.intValue();
									ClientProfile v41 = TunerResourceManagerService.getClientProfile(v39);
									TunerResourceManagerService.clientPriorityUpdateOnRequest(v41);
									int v43 = v41.getPriority();
									int v40 = v43;
									if ( <= v40) {
										boolean v44 = v36.hasNext();
										if (v44 == 0) {
											if ( <= -1) {
												int v45 = (this.mPriority - this.mNiceValue);
												if (v45 <= ) {
													Binder.allowBlockingForCurrentThread();
													ClientProfile v48 = TunerResourceManagerService.getClientProfile();
													if (v48 != 0) {
														Set v49 = v48.getShareFeClientIds();
														Iterator v50 = v49.iterator();
														boolean v51 = v50.hasNext();
														if (v51 == 0) {
															Object v52 = v50.next();
															int v53 = v52.intValue();
															Integer v54 = Integer.valueOf(v53);
															Object v55 = this.mListeners.get(v54);
															IResourcesReclaimListener v56 = v55.getListener();
															v56.onReclaimResources();
															ClientProfile v58 = TunerResourceManagerService.getClientProfile(v53);
															TunerResourceManagerService.clearAllResourcesAndClientMapping(v58);
															boolean v60 = v50.hasNext();
															if (v60 == 0) {
																if (this.DEBUG == 0) {
																	Integer v69 = Integer.valueOf();
																	Object v70 = this.mListeners.get(v69);
																	IResourcesReclaimListener v71 = v70.getListener();
																	v71.onReclaimResources();
																	TunerResourceManagerService.clearAllResourcesAndClientMapping(v48);
																	boolean v46 = 1;
																	if (v46 != 0) {
																		boolean v7 = 0;
																		return v7;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Integer v5 = Integer.valueOf(CasSessionRequest.clientId);\nSet v4 = this.mClientProfiles.keySet();\nboolean v6 = v4.contains(v5);\nCasResource$Builder v18 = new CasResource$Builder(CasSessionRequest.casSystemId);\nthis.mMaxSessionNum = 2147483647;\nCasResource v22 = new CasResource(CasResource$Builder);', 'CasResource v15 = TunerResourceManagerService.getCasResource(CasSessionRequest.casSystemId);\nCasResource$Builder v16 = new CasResource$Builder(CasSessionRequest.casSystemId);\nCasResource$Builder v18 = v16.maxSessionNum(2147483647);\nClientProfile v21 = TunerResourceManagerService.getClientProfile(CasSessionRequest.clientId);\nTunerResourceManagerService.clientPriorityUpdateOnRequest(v21);', 'boolean v3 = this.this$0.checkClientExists(CasSessionRequest.clientId);\nboolean v4 = this.this$0.requestCasSessionInternal(p1, p2);']

The method requestCasSession has the following similar APIs:

- API Name: updateCasInfo(II)V with Similarity Score: 0.922097384929657
  - Access Control Level: SYS_OR_SIG and the following code:
CasResource$Builder v15 = new CasResource$Builder(p1);
CasResource$Builder v17 = v15.maxSessionNum(p2);
CasResource v18 = v17.build();
TunerResourceManagerService.addCasResource(v18);

- API Name: updateCasInfo(II)V with Similarity Score: 0.8451874852180481
  - Access Control Level: SYS_OR_SIG and the following code:
Integer v14 = Integer.valueOf(p1);
Object v15 = this.mCasResources.get(v14);
CasResource$Builder v19 = new CasResource$Builder(p1);
this.mMaxSessionNum = p2;
CasResource v23 = new CasResource(CasResource$Builder);
int v32 = v22.getSystemId();
Integer v33 = Integer.valueOf(v32);
Object v34 = this.mCasResources.put(v33, v22);

