This is path 1 for the API with depth 2:
public void releaseLnb(int p1, int p2){
	if (p3 == -1) {
		if (((-16777216 & p3) >> 24) == p2) {
			boolean v4 = 0;
			boolean v3 = v4;
			if (v3 == 0) {
				Object v5 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
				boolean v6 = this.this$0.checkClientExists(p2);
				if (v6 == 0) {
					LnbResource v7 = this.this$0.getLnbResource(p1);
					if (v7 == 0) {
						int v8 = v7.getOwnerClientId();
						if (v8 != p2) {
							if (this.DEBUG == 0) {
								int v13 = this.mHandle;
								int v19 = p1.getOwnerClientId();
								ClientProfile v20 = TunerResourceManagerService.getClientProfile(v19);
								p1.removeOwner();
								int v22 = p1.getHandle();
								v20.releaseLnb(v22);
								return;
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void releaseLnb(int p1, int p2){
	boolean v4 = this.this$0.validateResourceHandle(3, p1);
	boolean v3 = v4;
	if (v3 == 0) {
		Object v5 = this.mLock;
		Set v7 = this.mClientProfiles.keySet();
		Integer v8 = Integer.valueOf(p2);
		boolean v9 = v7.contains(v8);
		boolean v6 = v9;
		if (v6 == 0) {
			Integer v11 = Integer.valueOf(p1);
			Object v12 = this.mLnbResources.get(v11);
			LnbResource v10 = v12;
			if (v10 == 0) {
				int v13 = this.mOwnerClientId;
				if (v13 != p2) {
					if (this.DEBUG == 0) {
						int v18 = v10.getHandle();
						TunerResourceManagerService.updateLnbClientMappingOnRelease(v10);
						return;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void releaseLnb(int p1, int p2){
	boolean v3 = TunerResourceManagerService.-$$Nest$mvalidateResourceHandle(this.this$0, 3, p1);
	if (v3 == 0) {
		Object v4 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
		boolean v5 = this.this$0.checkClientExists(p2);
		if (v5 == 0) {
			LnbResource v6 = this.this$0.getLnbResource(p1);
			if (v6 == 0) {
				int v7 = v6.getOwnerClientId();
				if (v7 != p2) {
					this.this$0.releaseLnbInternal(v6);
					return;
				}
			}
		}
	}
}
