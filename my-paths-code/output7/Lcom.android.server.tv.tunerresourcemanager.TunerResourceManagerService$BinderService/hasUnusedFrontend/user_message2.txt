The method hasUnusedFrontend has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasUnusedFrontend(int p1){
	Object v2 = this.mLock;
	Map v4 = this.mFrontendResources;
	Collection v5 = v4.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		int v9 = this.mType;
		if (v9 != p1) {
			boolean v10 = this.mIsInUse;
			if (v10 != 0) {
				boolean v11 = v6.hasNext();
				if (v11 == 0) {
					Object v12 = v6.next();
					int v13 = this.mType;
					if (v13 != p1) {
						boolean v14 = this.mIsInUse;
						if (v14 != 0) {
							boolean v3 = 1;
							return v3;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean hasUnusedFrontend(int p1){
	Object v2 = this.mLock;
	Map v4 = this.mFrontendResources;
	Collection v5 = v4.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	if (v7 == 0) {
		Object v8 = v6.next();
		int v9 = this.mType;
		if (v9 != p1) {
			boolean v10 = this.mIsInUse;
			if (v10 != 0) {
				boolean v11 = v6.hasNext();
				if (v11 == 0) {
					boolean v3 = 0;
					return v3;
				}
			}
		}
	}
}

and the following sink code:
['boolean v3 = this.this$0.hasUnusedFrontendInternal(p1);\nreturn v3;', 'Map v4 = TunerResourceManagerService.getFrontendResources();\nCollection v5 = v4.values();\nIterator v6 = v5.iterator();\nObject v8 = v6.next();\nint v9 = v8.getType();\nif (v9 != p1) {']

The method hasUnusedFrontend has the following similar APIs:

- API Name: requestFrontend(Landroid/media/tv/tunerresourcemanager/TunerFrontendRequest;[I)Z with Similarity Score: 0.8382018804550171
  - Access Control Level: SYS_OR_SIG and the following code:
TunerResourceManagerService.clientPriorityUpdateOnRequest(v21);
Map v23 = TunerResourceManagerService.getFrontendResources();
Collection v24 = v23.values();
Iterator v25 = v24.iterator();

- API Name: isLowestPriority(II)Z with Similarity Score: 0.8257339000701904
  - Access Control Level: SYS_OR_SIG and the following code:
TunerResourceManagerService.getClientProfile(p1);
int v10 = v8.getPriority();
Map v11 = TunerResourceManagerService.getFrontendResources();
Collection v12 = v11.values();

