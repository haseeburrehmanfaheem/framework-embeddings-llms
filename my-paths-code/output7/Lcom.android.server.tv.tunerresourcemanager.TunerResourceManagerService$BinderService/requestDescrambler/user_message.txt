This is path 1 for the API with depth 2:
public boolean requestDescrambler(TunerDescramblerRequest p1, [I p2){
	if (p2 == 0) {
		Object v3 = this.mLock;
		Set v5 = this.mClientProfiles.keySet();
		Integer v6 = Integer.valueOf(TunerDescramblerRequest.clientId);
		boolean v7 = v5.contains(v6);
		boolean v4 = v7;
		if (v4 == 0) {
			if (this.DEBUG == 0) {
				this.mResourceRequestCount = (this.mResourceRequestCount + 1);
				int v16 = ((65535 & this.mResourceRequestCount) | (((2 & 255) << 24) | (0 << 16)));
				boolean v8 = 1;
				return v8;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean requestDescrambler(TunerDescramblerRequest p1, [I p2){
	if (p2 == 0) {
		Object v3 = this.mLock;
		Set v5 = this.mClientProfiles.keySet();
		Integer v6 = Integer.valueOf(TunerDescramblerRequest.clientId);
		boolean v7 = v5.contains(v6);
		boolean v4 = v7;
		if (v4 == 0) {
			if (this.DEBUG == 0) {
				int v16 = TunerResourceManagerService.generateResourceHandle(2, 0);
				boolean v8 = 1;
				return v8;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean requestDescrambler(TunerDescramblerRequest p1, [I p2){
	if (p2 == 0) {
		Object v3 = TunerResourceManagerService.-$$Nest$fgetmLock(this.this$0);
		boolean v4 = this.this$0.checkClientExists(TunerDescramblerRequest.clientId);
		if (v4 == 0) {
			boolean v5 = this.this$0.requestDescramblerInternal(p1, p2);
			return v5;
		}
	}
}
