This is path 1 for the API with depth 2:
public boolean allocateSpaceForUpdate(String p1){
	String v4 = SystemProperties.get("ro.apex.updatable");
	Boolean v5 = ApexProperties.tryParseBoolean(v4);
	Optional v6 = Optional.ofNullable(v5);
	Optional v3 = v6;
	Object v7 = v3.orElse(Boolean.FALSE);
	boolean v8 = v7.booleanValue();
	boolean v2 = v8;
	if (v2 != 0) {
		long v9 = Binder.clearCallingIdentity();
		CompressedApexInfoList v10 = RecoverySystemService.getCompressedApexInfoList(p1);
		if (v10 != 0) {
			ApexManager v11 = ApexManager.getInstance();
			v11.reserveSpaceForCompressedApex(v10);
			RuntimeException v13 = caughtException.rethrowAsRuntimeException();
			Binder.restoreCallingIdentity(v9);
			return 0;
		}
	}
}


This is path 2 for the API with depth 1:
public boolean allocateSpaceForUpdate(String p1){
	Optional v3 = ApexProperties.updatable();
	Object v4 = v3.orElse(Boolean.FALSE);
	boolean v5 = v4.booleanValue();
	boolean v2 = v5;
	if (v2 != 0) {
		long v6 = Binder.clearCallingIdentity();
		ZipFile v8 = new ZipFile(p1);
		ZipEntry v10 = v8.getEntry("apex_info.pb");
		if (v10 != 0) {
			long v11 = v10.getSize();
			if ((v11 < 2457600) >= 0) {
				long v12 = v10.getSize();
				if ((v12 < 0) != 0) {
					CompressedApexInfoList v13 = new CompressedApexInfoList();
					CompressedApexInfo v15 = new CompressedApexInfo(0);
					CompressedApexInfoList.apexInfos = v15;
					v8.close();
					CompressedApexInfoList v7 = v13;
					if (v7 != 0) {
						Object v18 = this.sApexManagerSingleton.get();
						ApexManager v17 = v18;
						v17.reserveSpaceForCompressedApex(v7);
						RuntimeException v20 = caughtException.rethrowAsRuntimeException();
						Binder.restoreCallingIdentity(v6);
						return 0;
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	if (v2 != 0) {
		long v3 = Binder.clearCallingIdentity();
		CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
		if (v4 != 0) {
			ApexManager v5 = ApexManager.getInstance();
			v5.reserveSpaceForCompressedApex(v4);
			RuntimeException v7 = caughtException.rethrowAsRuntimeException();
			Binder.restoreCallingIdentity(v3);
			return 0;
		}
	}
}
