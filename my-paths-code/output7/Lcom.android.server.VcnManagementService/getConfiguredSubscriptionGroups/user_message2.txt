The method getConfiguredSubscriptionGroups has the following code snippet:

This is path 1 for the API with depth 2:
public List getConfiguredSubscriptionGroups(String p1){
	int v7 = Binder.getCallingUid();
	int v6 = v7;
	if (v6 == 1000) {
		UserHandle v8 = UserHandle.getUserHandleForUid(v6);
		boolean v9 = v8.isSystem();
		if (v9 == 0) {
			ArrayList v10 = new ArrayList();
			Set v12 = this.mConfigs.keySet();
			Iterator v13 = v12.iterator();
			boolean v14 = v13.hasNext();
			if (v14 == 0) {
				Object v15 = v13.next();
				if (v16 != 0) {
					long v18 = Binder.clearCallingIdentity();
					Object v19 = this.mConfigs.get(v15);
					if (v19 == 0) {
						String v20 = this.mPackageName;
						boolean v21 = p1.equals(v20);
						if (v21 == 0) {
							Binder.restoreCallingIdentity(v18);
							boolean v17 = 1;
							if (v17 == 0) {
								boolean v23 = v10.add(v15);
								boolean v24 = v13.hasNext();
								if (v24 == 0) {
									return v10;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getConfiguredSubscriptionGroups(String p1){
	int v7 = Binder.getCallingUid();
	int v6 = v7;
	if (v6 == 1000) {
		UserHandle v8 = UserHandle.getUserHandleForUid(v6);
		boolean v9 = v8.isSystem();
		if (v9 == 0) {
			ArrayList v10 = new ArrayList();
			Set v12 = this.mConfigs.keySet();
			Iterator v13 = v12.iterator();
			boolean v14 = v13.hasNext();
			if (v14 == 0) {
				Object v15 = v13.next();
				if (v16 != 0) {
					long v18 = Binder.clearCallingIdentity();
					Object v19 = this.mConfigs.get(v15);
					if (v19 == 0) {
						String v20 = this.mPackageName;
						boolean v21 = p1.equals(v20);
						if (v21 == 0) {
							Binder.restoreCallingIdentity(v18);
							boolean v17 = 0;
							if (v17 == 0) {
								boolean v23 = v10.add(v15);
								boolean v24 = v13.hasNext();
								if (v24 == 0) {
									return v10;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ArrayList v10 = new ArrayList();\nSet v12 = this.mConfigs.keySet();\nIterator v13 = v12.iterator();\nboolean v21 = p1.equals(v20);\nboolean v23 = v10.add(v15);\nreturn v10;', 'ArrayList v9 = new ArrayList();\nSet v11 = this.mConfigs.keySet();\nIterator v12 = v11.iterator();\nString v19 = v18.getProvisioningPackageName();\nboolean v20 = p1.equals(v19);\nboolean v22 = v9.add(v14);\nreturn v9;', 'ArrayList v6 = new ArrayList();\nSet v8 = this.mConfigs.keySet();\nIterator v9 = v8.iterator();\nboolean v13 = p0.isProvisioningPackageForConfig(v11, p1);\nboolean v14 = v6.add(v11);\nreturn v6;']

The method getConfiguredSubscriptionGroups has the following similar APIs:

- API Name: clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V with Similarity Score: 0.8507997989654541
  - Access Control Level: NONE and the following code:
Object v19 = this.mConfigs.get(p1);
String v20 = v19.getProvisioningPackageName();
boolean v21 = p2.equals(v20);

- API Name: clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V with Similarity Score: 0.7905332446098328
  - Access Control Level: NONE and the following code:
Object v19 = this.mConfigs.get(p1);
String v20 = v19.getProvisioningPackageName();
boolean v21 = p2.equals(v20);

