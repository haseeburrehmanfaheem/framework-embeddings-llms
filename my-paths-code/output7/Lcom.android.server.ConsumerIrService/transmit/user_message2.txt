The method transmit has the following code snippet:

This is path 1 for the API with depth 0:
public void transmit(String p1, int p2, [I p3){
	if (v1 != 0) {
		if ( >= p3.length) {
			if (p3[] <= 0) {
				if ( >= p3.length) {
					if (( < 2000000) > 0) {
						p0.throwIfNoIrEmitter();
						if (this.mAidlService == 0) {
							this.mAidlService.transmit(p2, p3);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 0:
public void transmit(String p1, int p2, [I p3){
	if (v1 != 0) {
		if ( >= p3.length) {
			if (p3[] <= 0) {
				if ( >= p3.length) {
					if (( < 2000000) > 0) {
						p0.throwIfNoIrEmitter();
						if (this.mAidlService == 0) {
							int v3 = ConsumerIrService.halTransmit(p2, p3);
							if (v3 >= 0) {
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['this.mAidlService.transmit(p2, p3);\nint v3 = ConsumerIrService.halTransmit(p2, p3);', 'p0.throwIfNoIrEmitter();']

The method transmit has the following similar APIs:

- API Name: transferOwner(III)Z with Similarity Score: 0.7014266848564148
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v13 = TunerResourceManagerService.transferFeCiCamOwner(p2, p3);
boolean v12 = v13;

