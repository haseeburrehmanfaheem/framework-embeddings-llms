The method getMaximumDataBlockSize has the following code snippet:

This is path 1 for the API with depth 2:
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	if (p2 != this.mAllowedUid) {
		long v6 = PersistentDataBlockService.getBlockDeviceSize();
		if (((((((v6 - 8) - 32) - 10000) - 1000) - 1) < 102400) > 0) {
			long v5 = ;
			long v4 = v5;
			return v4;
		}
	}
}

and the following sink code:
['int v1 = Binder.getCallingUid();\nthis.this$0.enforceUid(v1);\nlong v5 = this.this$0.doGetMaximumDataBlockSize();\nreturn v5;', 'int v1 = Binder.getCallingUid();\nPersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);\nlong v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);\nreturn v3;', 'int v1 = Binder.getCallingUid();\nif (p2 != this.mAllowedUid) {\nlong v6 = PersistentDataBlockService.getBlockDeviceSize();\nreturn v4;']

The method getMaximumDataBlockSize has the following similar APIs:

- API Name: getDataBlockSize()I with Similarity Score: 0.8476960062980652
  - Access Control Level: SYS_OR_SIG and the following code:
int v4 = Binder.getCallingUid();
this.this$0.enforceUid(v4);

- API Name: openDevice(Landroid/os/IBinder;Landroid/media/midi/MidiDeviceInfo;Landroid/media/midi/IMidiDeviceOpenCallback;)V with Similarity Score: 0.8281216025352478
  - Access Control Level: NONE and the following code:
int v20 = Binder.getCallingUid();
boolean v16 = v8.isUidAllowed(v15);

