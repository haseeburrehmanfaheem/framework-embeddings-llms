The method read has the following code snippet:

This is path 1 for the API with depth 2:
public byte[] read(){
	int v1 = Binder.getCallingUid();
	if (p2 != this.mAllowedUid) {
		[B v6 = new [B(32);
		byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6);
		if (v7 == 0) {
			boolean v8 = Arrays.equals(v6, v7);
			if (v8 != 0) {
				PersistentDataBlockService.formatPartitionLocked(0);
				boolean v5 = 0;
				boolean v4 = v5;
				if (v4 != 0) {
					DataInputStream v11 = new DataInputStream(v12);
					FileInputStream v12 = new FileInputStream(v13);
					File v13 = new File(v14);
					String v14 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
					Object v18 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
					int v19 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v11);
					if (v19 != 0) {
						[B v20 = new [B(v19);
						int v21 = v11.read(v20, 0, v19);
						if (v21 >= v19) {
							v11.close();
							return v20;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public byte[] read(){
	int v1 = Binder.getCallingUid();
	if (p2 != this.mAllowedUid) {
		[B v6 = new [B(32);
		byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6);
		if (v7 == 0) {
			boolean v8 = Arrays.equals(v6, v7);
			if (v8 != 0) {
				PersistentDataBlockService.formatPartitionLocked(0);
				boolean v5 = 0;
				boolean v4 = v5;
				if (v4 != 0) {
					DataInputStream v11 = new DataInputStream(v12);
					FileInputStream v12 = new FileInputStream(v13);
					File v13 = new File(v14);
					String v14 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
					Object v18 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
					int v19 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v11);
					if (v19 != 0) {
						[B v20 = new [B(0);
						v11.close();
						return v20;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public byte[] read(){
	int v1 = Binder.getCallingUid();
	if (p2 != this.mAllowedUid) {
		[B v6 = new [B(32);
		byte[] v7 = PersistentDataBlockService.computeDigestLocked(v6);
		if (v7 == 0) {
			boolean v8 = Arrays.equals(v6, v7);
			if (v8 != 0) {
				boolean v5 = 1;
				boolean v4 = v5;
				if (v4 != 0) {
					DataInputStream v9 = new DataInputStream(v10);
					FileInputStream v10 = new FileInputStream(v11);
					File v11 = new File(v12);
					String v12 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
					Object v16 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
					int v17 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v9);
					if (v17 != 0) {
						[B v18 = new [B(v17);
						int v19 = v9.read(v18, 0, v17);
						if (v19 >= v17) {
							v9.close();
							return v18;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['DataInputStream v11 = new DataInputStream(v12);\nFileInputStream v12 = new FileInputStream(v13);\nint v19 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v11);\n[B v20 = new [B(v19);\nint v21 = v11.read(v20, 0, v19);\nreturn v20;', 'DataInputStream v6 = new DataInputStream(v7);\nFileInputStream v7 = new FileInputStream(v8);\nint v15 = this.this$0.getTotalDataSizeLocked(v6);\n[B v16 = new [B(v14);\nint v17 = v6.read(v16, 0, v14);\nreturn v16;', 'DataInputStream v4 = new DataInputStream(v5);\nFileInputStream v5 = new FileInputStream(v6);\nint v12 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v4);\n[B v13 = new [B(v12);\nint v14 = v4.read(v13, 0, v12);\nreturn v13;']

The method read has the following similar APIs:

- API Name: getDataBlockSize()I with Similarity Score: 0.8030987977981567
  - Access Control Level: SYS_OR_SIG and the following code:
String v10 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
File v9 = new File(v10);
FileInputStream v8 = new FileInputStream(v9);
DataInputStream v7 = new DataInputStream(v8);

- API Name: getDataBlockSize()I with Similarity Score: 0.7822321653366089
  - Access Control Level: SYS_OR_SIG and the following code:
String v10 = PersistentDataBlockService.-$$Nest$fgetmDataBlockFile(this.this$0);
File v9 = new File(v10);
FileInputStream v8 = new FileInputStream(v9);
DataInputStream v7 = new DataInputStream(v8);

