The method setOemUnlockAllowedByCarrier has the following code snippet:

This is path 1 for the API with depth 2:
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	int v4 = UserHandle.getCallingUserId();
	long v5 = Binder.clearCallingIdentity();
	UserManager v6 = UserManager.get(this.mContext);
	boolean v7 = v6.isUserAdmin(v4);
	if (v7 == 0) {
		Binder.restoreCallingIdentity(v5);
		long v9 = Binder.clearCallingIdentity();
		OemLock v10 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
		v10.setOemUnlockAllowedByCarrier(p1, p2);
		Binder.restoreCallingIdentity(v9);
		return;
	}
}

and the following sink code:
['long v5 = Binder.clearCallingIdentity();\nOemLock v10 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);\nv10.setOemUnlockAllowedByCarrier(p1, p2);\nBinder.restoreCallingIdentity(v9);', 'this.this$0.enforceUserIsAdmin();\nlong v4 = Binder.clearCallingIdentity();\nOemLock v5 = this.mOemLock;\nv5.setOemUnlockAllowedByCarrier(p1, p2);\nBinder.restoreCallingIdentity(v4);', 'OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);\nlong v3 = Binder.clearCallingIdentity();\nOemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);\nv4.setOemUnlockAllowedByCarrier(p1, p2);\nBinder.restoreCallingIdentity(v3);']

The method setOemUnlockAllowedByCarrier has the following similar APIs:

- API Name: isOemUnlockAllowedByUser()Z with Similarity Score: 0.9115631580352783
  - Access Control Level: SYS_OR_SIG and the following code:
long v2 = Binder.clearCallingIdentity();
OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
boolean v4 = v3.isOemUnlockAllowedByDevice();
return v4;

- API Name: isOemUnlockAllowedByUser()Z with Similarity Score: 0.876649796962738
  - Access Control Level: SYS_OR_SIG and the following code:
long v2 = Binder.clearCallingIdentity();
OemLock v3 = this.mOemLock;
boolean v4 = v3.isOemUnlockAllowedByDevice();
return v4;

