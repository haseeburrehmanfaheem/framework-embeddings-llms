The method suggestContentSelections has the following code snippet:

This is path 1 for the API with depth 2:
public void suggestContentSelections(int p1, SelectionsRequest p2, ISelectionsCallback p3){
	int v1 = UserHandle.getCallingUserId();
	if (v5 == 0) {
		boolean v6 = AbstractMasterSystemService.mServiceNameResolver.isTemporary(p2);
		if (v6 != 0) {
			int v7 = Binder.getCallingUid();
			boolean v8 = this.mActivityTaskManagerInternal.isCallerRecents(v7);
			if (v8 == 0) {
				Object v9 = ContentSuggestionsManagerService.access$400(this.this$0);
				AbstractPerUserSystemService v10 = ContentSuggestionsManagerService.access$500(this.this$0, p1);
				if (v10 == 0) {
					if (this.mRemoteService != 0) {
						String v13 = ContentSuggestionsPerUserService.getComponentNameLocked();
						if (v13 != 0) {
							ComponentName v14 = ComponentName.unflattenFromString(v13);
							RemoteContentSuggestionsService v15 = new RemoteContentSuggestionsService(v16,v14,AbstractPerUserSystemService.mUserId,v17,v19,AbstractMasterSystemService.verbose);
							Context v16 = ContentSuggestionsPerUserService.getContext();
							ContentSuggestionsPerUserService$1 v17 = new ContentSuggestionsPerUserService$1(ContentSuggestionsPerUserService);
							boolean v19 = AbstractPerUserSystemService.mMaster.isBindInstantServiceAllowed();
							this.mRemoteService = v15;
							RemoteContentSuggestionsService v12 = this.mRemoteService;
							if (v12 == 0) {
								RemoteContentSuggestionsService$$ExternalSyntheticLambda2 v22 = new RemoteContentSuggestionsService$$ExternalSyntheticLambda2(p1,p2);
								RemoteContentSuggestionsService.scheduleAsyncRequest(v22);
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['AbstractPerUserSystemService v10 = ContentSuggestionsManagerService.access$500(this.this$0, p1);\nif (v10 == 0) {\nRemoteContentSuggestionsService v15 = new RemoteContentSuggestionsService(v16,v14,AbstractPerUserSystemService.mUserId,v17,v19,AbstractMasterSystemService.verbose);\nthis.mRemoteService = v15;', 'int v1 = UserHandle.getCallingUserId();\nthis.this$0.enforceCaller(v1, "suggestContentSelections");']

The method suggestContentSelections has the following similar APIs:

- API Name: notifyInteraction(ILjava/lang/String;Landroid/os/Bundle;)V with Similarity Score: 0.8715697526931763
  - Access Control Level: SYS_OR_SIG and the following code:
RemoteContentSuggestionsService v15 = new RemoteContentSuggestionsService(v16,v14,AbstractPerUserSystemService.mUserId,v17,v19,AbstractMasterSystemService.verbose);
this.mRemoteService = v15;

- API Name: notifyInteraction(ILjava/lang/String;Landroid/os/Bundle;)V with Similarity Score: 0.8153214454650879
  - Access Control Level: SYS_OR_SIG and the following code:
AbstractPerUserSystemService v6 = this.this$0.getServiceForUserLocked(p1);
if (v5 == 0) {
RemoteContentSuggestionsService v8 = ContentSuggestionsPerUserService.ensureRemoteServiceLocked();
if (v8 == 0) {
v8.notifyInteraction(p2, p3);

