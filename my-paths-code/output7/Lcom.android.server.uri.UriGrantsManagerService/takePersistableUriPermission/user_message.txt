This is path 1 for the API with depth 2:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	GrantUri v7 = new GrantUri(p4,p1,128);
	if (v6 == 0) {
		if ((UriPermission.persistableModeFlags & p2) != p2) {
			if (v9 == 0) {
				if ((UriPermission.persistableModeFlags & p2) != p2) {
					if ( != 0) {
						if ( == 0) {
							if ( == 0) {
								if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
									String v14 = Integer.toHexString((p2 & 3));
									String v17 = Integer.toHexString(this.persistableModeFlags);
									boolean v10 = 0;
									if ( == 0) {
										if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
											String v26 = Integer.toHexString((p2 & 3));
											String v29 = Integer.toHexString(this.persistableModeFlags);
											boolean v22 = 0;
											Object v35 = this.mGrantedUriPermissions.get();
											if (v35 != 0) {
												int v36 = v35.size();
												if (v36 >= 512) {
													ArrayList v38 = new ArrayList();
													ArrayList v37 = v38;
													Collection v40 = v35.values();
													Iterator v41 = v40.iterator();
													boolean v42 = v41.hasNext();
													if (v42 == 0) {
														Object v43 = v41.next();
														if (UriPermission.persistedModeFlags == 0) {
															boolean v44 = v37.add(v43);
															boolean v45 = v41.hasNext();
															if (v45 == 0) {
																int v46 = v37.size();
																if ((v46 - 512) > 0) {
																	UriPermission$PersistedTimeComparator v47 = new UriPermission$PersistedTimeComparator();
																	Collections.sort(v37, v47);
																	if ( >= (v46 - 512)) {
																		Object v50 = v37.get();
																		this.persistedModeFlags = ((~(-1 & 3)) & this.persistedModeFlags);
																		if (((~(-1 & 3)) & this.persistedModeFlags) != 0) {
																			this.persistedCreateTime = 0;
																			UriPermission.updateModeFlags();
																			if (this.persistedModeFlags == this.persistedModeFlags) {
																				boolean v51 = ;
																				if ( >= (v46 - 512)) {
																					boolean v34 = 1;
																					if ((v34 | ) == 0) {
																						p0.schedulePersistUriGrants();
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	GrantUri v7 = new GrantUri(p4,p1,128);
	if (v6 == 0) {
		if ((UriPermission.persistableModeFlags & p2) != p2) {
			if (v9 == 0) {
				if ((UriPermission.persistableModeFlags & p2) != p2) {
					if ( != 0) {
						if ( == 0) {
							if ( == 0) {
								if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
									String v14 = Integer.toHexString((p2 & 3));
									String v17 = Integer.toHexString(this.persistableModeFlags);
									boolean v10 = 0;
									if ( == 0) {
										if (((p2 & 3) & this.persistableModeFlags) == (p2 & 3)) {
											String v26 = Integer.toHexString((p2 & 3));
											String v29 = Integer.toHexString(this.persistableModeFlags);
											boolean v22 = 0;
											Object v35 = this.mGrantedUriPermissions.get();
											if (v35 != 0) {
												int v36 = v35.size();
												if (v36 >= 512) {
													ArrayList v37 = Lists.newArrayList();
													Collection v38 = v35.values();
													Iterator v39 = v38.iterator();
													boolean v40 = v39.hasNext();
													if (v40 == 0) {
														Object v41 = v39.next();
														if (UriPermission.persistedModeFlags == 0) {
															boolean v42 = v37.add(v41);
															boolean v43 = v39.hasNext();
															if (v43 == 0) {
																int v44 = v37.size();
																if ((v44 - 512) > 0) {
																	UriPermission$PersistedTimeComparator v45 = new UriPermission$PersistedTimeComparator();
																	Collections.sort(v37, v45);
																	if ( >= (v44 - 512)) {
																		Object v48 = v37.get();
																		boolean v49 = v48.releasePersistableModes(-1);
																		if ( >= (v44 - 512)) {
																			boolean v34 = 1;
																			if ((v34 | ) == 0) {
																				boolean v52 = this.mH.hasMessages(1);
																				if (v52 != 0) {
																					Message v53 = this.mH.obtainMessage(1);
																					boolean v54 = this.mH.sendMessageDelayed(v53, 10000);
																					return;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void takePersistableUriPermission(Uri p1, int p2, String p3, int p4){
	int v2 = this.mPmInternal.getPackageUid(p3, 0, p4);
	int v3 = Preconditions.checkFlagsArgument(p2, 3);
	GrantUri v4 = new GrantUri(p4,p1,0);
	GrantUri v7 = new GrantUri(p4,p1,128);
	if (v6 == 0) {
		if ((UriPermission.persistableModeFlags & p2) != p2) {
			if (v9 == 0) {
				if ((UriPermission.persistableModeFlags & p2) != p2) {
					if ( != 0) {
						if ( == 0) {
							if ( == 0) {
								boolean v10 = v6.takePersistableModes(p2);
								if ( == 0) {
									boolean v11 = v9.takePersistableModes(p2);
									boolean v12 = p0.maybePrunePersistedUriGrantsLocked();
									if ((v12 | ) == 0) {
										p0.schedulePersistUriGrants();
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
