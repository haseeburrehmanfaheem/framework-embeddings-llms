The method isContentCaptureFeatureEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public void isContentCaptureFeatureEnabled(IResultReceiver p1){
	Object v1 = AbstractMasterSystemService.mLock;
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);
	p3.run();
	String v7 = caughtException.getMessage();
	Bundle v8 = SyncResultReceiver.bundleFor(v7);
	p2.send(-1, v8);
	boolean v5 = 1;
	boolean v4 = v5;
	if (v4 == 0) {
		int v17 = UserHandle.getCallingUserId();
		boolean v18 = ContentCaptureManagerService.-$$Nest$fgetmDisabledByDeviceConfig(this.this$0);
		if (v18 != 0) {
			if (this.mDisabledBySettings == 0) {
				boolean v21 = this.mDisabledBySettings.get(p2);
				if (v21 == 0) {
					boolean v20 = ;
					boolean v19 = v20;
					if (v19 != 0) {
						if ( == 0) {
							p1.send(, 0);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void isContentCaptureFeatureEnabled(IResultReceiver p1){
	Object v1 = AbstractMasterSystemService.mLock;
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);
	p3.run();
	String v7 = caughtException.getMessage();
	Bundle v8 = SyncResultReceiver.bundleFor(v7);
	p2.send(-1, v8);
	boolean v5 = 1;
	boolean v4 = v5;
	if (v4 == 0) {
		int v17 = UserHandle.getCallingUserId();
		boolean v18 = ContentCaptureManagerService.-$$Nest$fgetmDisabledByDeviceConfig(this.this$0);
		if (v18 != 0) {
			if (this.mDisabledBySettings == 0) {
				boolean v21 = this.mDisabledBySettings.get(p2);
				if (v21 == 0) {
					boolean v20 = ;
					boolean v19 = v20;
					if (v19 != 0) {
						if ( == 0) {
							p1.send(, 0);
							return;
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void isContentCaptureFeatureEnabled(IResultReceiver p1){
	Object v1 = AbstractMasterSystemService.mLock;
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);
	p3.run();
	String v7 = caughtException.getMessage();
	Bundle v8 = SyncResultReceiver.bundleFor(v7);
	p2.send(-1, v8);
	boolean v5 = 1;
	boolean v4 = v5;
	if (v4 == 0) {
		int v10 = UserHandle.getCallingUserId();
		boolean v11 = ContentCaptureManagerService.-$$Nest$fgetmDisabledByDeviceConfig(this.this$0);
		if (v11 != 0) {
			if (this.mDisabledBySettings == 0) {
				boolean v14 = this.mDisabledBySettings.get(p2);
				if (v14 == 0) {
					boolean v13 = ;
					boolean v12 = v13;
					if (v12 != 0) {
						if ( == 0) {
							p1.send(, 0);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);\nboolean v5 = this.this$0.throwsSecurityException(p1, v2);\nint v6 = UserHandle.getCallingUserId();\nboolean v7 = this.mDisabledByDeviceConfig;\nboolean v9 = this.this$0.isDisabledBySettingsLocked(v6);\np1.send(, 0);', 'Object v1 = AbstractMasterSystemService.mLock;\nContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);\np3.run();\nString v7 = caughtException.getMessage();\nBundle v8 = SyncResultReceiver.bundleFor(v7);\np2.send(-1, v8);', 'Object v1 = ContentCaptureManagerService.access$1100(this.this$0);\nContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1 v2 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda1(p0);\nboolean v4 = ContentCaptureManagerService.-$$Nest$mthrowsSecurityException(this.this$0, p1, v2);\nint v5 = UserHandle.getCallingUserId();\nboolean v6 = ContentCaptureManagerService.-$$Nest$fgetmDisabledByDeviceConfig(this.this$0);\nboolean v7 = ContentCaptureManagerService.-$$Nest$misDisabledBySettingsLocked(this.this$0, v5);']

The method isContentCaptureFeatureEnabled has the following similar APIs:

- API Name: getContentCaptureConditions(Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;)V with Similarity Score: 0.8385943174362183
  - Access Control Level: NONE and the following code:
ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0(p0,p1);
int v16 = UserHandle.getCallingUserId();
AbstractPerUserSystemService v18 = ContentCaptureManagerService.access$1500(this.this$0, v16);
ArraySet v19 = v18.getContentCaptureConditionsLocked(p1);
ArrayList v20 = ContentCaptureHelper.toList(v19);
Bundle v21 = SyncResultReceiver.bundleFor();
p2.send(0, v21);

- API Name: getContentCaptureConditions(Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;)V with Similarity Score: 0.8107180595397949
  - Access Control Level: NONE and the following code:
ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0(p0,p1);
int v16 = UserHandle.getCallingUserId();
AbstractPerUserSystemService v18 = ContentCaptureManagerService.access$1500(this.this$0, v16);
ArraySet v19 = v18.getContentCaptureConditionsLocked(p1);
ArrayList v20 = ContentCaptureHelper.toList(v19);
Bundle v21 = SyncResultReceiver.bundleFor();
p2.send(0, v21);

