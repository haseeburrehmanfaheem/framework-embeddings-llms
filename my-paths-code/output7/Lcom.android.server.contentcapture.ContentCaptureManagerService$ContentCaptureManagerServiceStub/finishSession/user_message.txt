This is path 1 for the API with depth 2:
public void finishSession(int p1){
	Integer v1 = Integer.valueOf(p1);
	Object v2 = Objects.requireNonNull(v1);
	int v3 = UserHandle.getCallingUserId();
	Object v4 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v6 = this.this$0.getServiceForUserLocked(v3);
	AbstractPerUserSystemService v5 = v6;
	boolean v8 = ContentCapturePerUserService.isEnabledLocked();
	if (v8 != 0) {
		Object v9 = this.mSessions.get(p1);
		if (v9 != 0) {
			if (AbstractMasterSystemService.verbose == 0) {
				ContentCaptureServerSession.destroyLocked(1);
				this.mService.removeSessionLocked(this.mId);
				return;
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void finishSession(int p1){
	Integer v1 = Integer.valueOf(p1);
	Object v2 = Objects.requireNonNull(v1);
	int v3 = UserHandle.getCallingUserId();
	Object v4 = AbstractMasterSystemService.mLock;
	AbstractPerUserSystemService v6 = this.this$0.getServiceForUserLocked(v3);
	AbstractPerUserSystemService v5 = v6;
	boolean v8 = ContentCapturePerUserService.isEnabledLocked();
	if (v8 != 0) {
		return;
	}
}


This is path 3 for the API with depth 0:
public void finishSession(int p1){
	Integer v1 = Integer.valueOf(p1);
	Object v2 = Objects.requireNonNull(v1);
	int v3 = UserHandle.getCallingUserId();
	Object v4 = ContentCaptureManagerService.access$200(this.this$0);
	AbstractPerUserSystemService v5 = ContentCaptureManagerService.access$300(this.this$0, v3);
	v5.finishSessionLocked(p1);
	return;
}
