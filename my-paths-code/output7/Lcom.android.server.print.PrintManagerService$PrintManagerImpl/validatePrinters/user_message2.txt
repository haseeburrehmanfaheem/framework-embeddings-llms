The method validatePrinters has the following code snippet:

This is path 1 for the API with depth 2:
public void validatePrinters(List p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						boolean v16 = this.mActiveServices.isEmpty();
						if (v16 == 0) {
							if (this.mPrinterDiscoverySession != 0) {
								if (this.mIsDestroyed == 0) {
									ArrayList v18 = new ArrayList(p1);
									boolean v20 = v18.isEmpty();
									if (v20 != 0) {
										Iterator v21 = v18.iterator();
										ArrayList v22 = new ArrayList();
										boolean v24 = v21.hasNext();
										if (v24 == 0) {
											Object v25 = v21.next();
											if (v25 == 0) {
												boolean v26 = v22.isEmpty();
												if (v26 == 0) {
													ComponentName v27 = v25.getServiceName();
													boolean v28 = v27.equals();
													if (v28 == 0) {
														boolean v29 = v22.add(v25);
														v21.remove();
														boolean v31 = v21.hasNext();
														if (v31 == 0) {
															ArrayMap v32 = UserState.-$$Nest$fgetmActiveServices(this.this$0);
															Object v33 = v32.get();
															if (v33 == 0) {
																Handler v34 = Handler.getMain();
																UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda0 v35 = new UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda0();
																Message v37 = PooledLambda.obtainMessage(v35, UserState$PrinterDiscoverySessionMediator, v33, v22);
																boolean v38 = v34.sendMessage(v37);
																boolean v39 = v18.isEmpty();
																if (v39 != 0) {
																	Binder.restoreCallingIdentity(v13);
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void validatePrinters(List p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						boolean v16 = this.mActiveServices.isEmpty();
						if (v16 == 0) {
							if (this.mPrinterDiscoverySession != 0) {
								if (this.mIsDestroyed == 0) {
									ArrayList v18 = new ArrayList(p1);
									boolean v20 = v18.isEmpty();
									if (v20 != 0) {
										Iterator v21 = v18.iterator();
										ArrayList v22 = new ArrayList();
										boolean v24 = v21.hasNext();
										if (v24 == 0) {
											Object v25 = v21.next();
											if (v25 == 0) {
												boolean v26 = v22.isEmpty();
												if (v26 == 0) {
													boolean v27 = v22.add(v25);
													ComponentName v28 = v25.getServiceName();
													v21.remove();
													boolean v30 = v21.hasNext();
													if (v30 == 0) {
														ArrayMap v31 = UserState.-$$Nest$fgetmActiveServices(this.this$0);
														Object v32 = v31.get();
														if (v32 == 0) {
															Handler v33 = Handler.getMain();
															UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda0 v34 = new UserState$PrinterDiscoverySessionMediator$$ExternalSyntheticLambda0();
															Message v36 = PooledLambda.obtainMessage(v34, UserState$PrinterDiscoverySessionMediator, v32, v22);
															boolean v37 = v33.sendMessage(v36);
															boolean v38 = v18.isEmpty();
															if (v38 != 0) {
																Binder.restoreCallingIdentity(v13);
																return;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);\nthis.mUserStates.put(p1, v9);', 'UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);\nthis.mPrinterDiscoverySession.validatePrintersLocked(v1);']

The method validatePrinters has the following similar APIs:

- API Name: stopPrinterStateTracking(Landroid/print/PrinterId;I)V with Similarity Score: 1.0
  - Access Control Level: NONE and the following code:
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);

- API Name: getPrintJobInfos(II)Ljava/util/List; with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);

