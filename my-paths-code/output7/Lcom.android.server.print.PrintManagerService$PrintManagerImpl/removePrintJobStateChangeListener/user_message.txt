This is path 1 for the API with depth 2:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintJobStateChangeListenerRecords != 0) {
							int v16 = this.mPrintJobStateChangeListenerRecords.size();
							if ( >= v16) {
								Object v17 = this.mPrintJobStateChangeListenerRecords.get();
								IBinder v18 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
								IBinder v19 = p1.asBinder();
								boolean v20 = v18.equals(v19);
								if (v20 == 0) {
									if ( >= v16) {
										Object v21 = this.mPrintJobStateChangeListenerRecords.get();
										IBinder v22 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
										IBinder v23 = p1.asBinder();
										boolean v24 = v22.equals(v23);
										if (v24 == 0) {
											v21.destroy();
											Object v26 = this.mPrintJobStateChangeListenerRecords.remove();
											boolean v27 = this.mPrintJobStateChangeListenerRecords.isEmpty();
											if (v27 == 0) {
												this.mPrintJobStateChangeListenerRecords = 0;
												Binder.restoreCallingIdentity(v13);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	UserState v6 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
	UserState v5 = v6;
	long v7 = Binder.clearCallingIdentity();
	UserState.throwIfDestroyedLocked();
	if (this.mPrintJobStateChangeListenerRecords != 0) {
		int v10 = this.mPrintJobStateChangeListenerRecords.size();
		if ( >= v10) {
			Object v11 = this.mPrintJobStateChangeListenerRecords.get();
			IBinder v12 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
			IBinder v13 = p1.asBinder();
			boolean v14 = v12.equals(v13);
			if (v14 == 0) {
				if ( >= v10) {
					Object v15 = this.mPrintJobStateChangeListenerRecords.get();
					IBinder v16 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
					IBinder v17 = p1.asBinder();
					boolean v18 = v16.equals(v17);
					if (v18 == 0) {
						v15.destroy();
						Object v20 = this.mPrintJobStateChangeListenerRecords.remove();
						boolean v21 = this.mPrintJobStateChangeListenerRecords.isEmpty();
						if (v21 == 0) {
							this.mPrintJobStateChangeListenerRecords = 0;
							Binder.restoreCallingIdentity(v7);
							return;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	UserState v5 = p0.getOrCreateUserStateLocked(v2, 0);
	long v6 = Binder.clearCallingIdentity();
	v5.removePrintJobStateChangeListener(p1);
	Binder.restoreCallingIdentity(v6);
	return;
}
