The method removePrintJobStateChangeListener has the following code snippet:

This is path 1 for the API with depth 2:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintJobStateChangeListenerRecords != 0) {
							int v16 = this.mPrintJobStateChangeListenerRecords.size();
							if ( >= v16) {
								Object v17 = this.mPrintJobStateChangeListenerRecords.get();
								IBinder v18 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
								IBinder v19 = p1.asBinder();
								boolean v20 = v18.equals(v19);
								if (v20 == 0) {
									if ( >= v16) {
										Object v21 = this.mPrintJobStateChangeListenerRecords.get();
										IBinder v22 = UserState$PrintJobStateChangeListenerRecord.listener.asBinder();
										IBinder v23 = p1.asBinder();
										boolean v24 = v22.equals(v23);
										if (v24 == 0) {
											v21.destroy();
											Object v26 = this.mPrintJobStateChangeListenerRecords.remove();
											boolean v27 = this.mPrintJobStateChangeListenerRecords.isEmpty();
											if (v27 == 0) {
												this.mPrintJobStateChangeListenerRecords = 0;
												Binder.restoreCallingIdentity(v13);
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void removePrintJobStateChangeListener(IPrintJobStateChangeListener p1, int p2){
	if (1 == 0) {
		boolean v7 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v7 == 0) {
			Object v8 = this.mUserStates.get(p1);
			if (v8 != 0) {
				UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v9);
				if (p2 != 0) {
					.increasePriority();
					UserState v6 = ;
					UserState v5 = v6;
					long v13 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintJobStateChangeListenerRecords != 0) {
							Binder.restoreCallingIdentity(v13);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserState v5 = p0.getOrCreateUserStateLocked(v2, 0);\nv5.removePrintJobStateChangeListener(p1);']

The method removePrintJobStateChangeListener has the following similar APIs:

- API Name: addPrintJobStateChangeListener(Landroid/print/IPrintJobStateChangeListener;II)V with Similarity Score: 0.898749589920044
  - Access Control Level: SYS_OR_SIG and the following code:
UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v2, 0, 1);
UserState$2 v13 = new UserState$2(UserState,p1,v5);
boolean v15 = this.mPrintJobStateChangeListenerRecords.add(v13);

- API Name: restartPrintJob(Landroid/print/PrintJobId;II)V with Similarity Score: 0.8934059143066406
  - Access Control Level: SYS_OR_SIG and the following code:
UserState v6 = p0.getOrCreateUserStateLocked(v2, 0);
v6.restartPrintJob(p1, v5);

