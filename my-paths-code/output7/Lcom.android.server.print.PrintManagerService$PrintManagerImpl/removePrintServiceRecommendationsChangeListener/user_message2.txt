The method removePrintServiceRecommendationsChangeListener has the following code snippet:

This is path 1 for the API with depth 2:
public void removePrintServiceRecommendationsChangeListener(IRecommendationsChangeListener p1, int p2){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(p1);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v10);
				if (p2 != 0) {
					.increasePriority();
					UserState v7 = ;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintServiceRecommendationsChangeListenerRecords != 0) {
							int v17 = this.mPrintServiceRecommendationsChangeListenerRecords.size();
							if ( >= v17) {
								Object v18 = this.mPrintServiceRecommendationsChangeListenerRecords.get();
								IBinder v19 = UserState$ListenerRecord.listener.asBinder();
								IBinder v20 = p1.asBinder();
								boolean v21 = v19.equals(v20);
								if (v21 == 0) {
									if ( >= v17) {
										Object v22 = this.mPrintServiceRecommendationsChangeListenerRecords.get();
										IBinder v23 = UserState$ListenerRecord.listener.asBinder();
										IBinder v24 = p1.asBinder();
										boolean v25 = v23.equals(v24);
										if (v25 == 0) {
											v22.destroy();
											Object v27 = this.mPrintServiceRecommendationsChangeListenerRecords.remove();
											boolean v28 = this.mPrintServiceRecommendationsChangeListenerRecords.isEmpty();
											if (v28 == 0) {
												this.mPrintServiceRecommendationsChangeListenerRecords = 0;
												this.mPrintServiceRecommendations = 0;
												if (this.mService == 0) {
													this.mService.registerCallbacks(0);
													this.mService = 0;
													if (this.mIsBound == 0) {
														this.mContext.unbindService(this.mConnection);
														this.mIsBound = 0;
														this.mPrintServiceRecommendationsService = 0;
														Binder.restoreCallingIdentity(v14);
														return;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void removePrintServiceRecommendationsChangeListener(IRecommendationsChangeListener p1, int p2){
	if (1 == 0) {
		boolean v8 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
		if (v8 == 0) {
			Object v9 = this.mUserStates.get(p1);
			if (v9 != 0) {
				UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);
				this.mUserStates.put(p1, v10);
				if (p2 != 0) {
					.increasePriority();
					UserState v7 = ;
					UserState v6 = v7;
					long v14 = Binder.clearCallingIdentity();
					if (this.mDestroyed != 0) {
						if (this.mPrintServiceRecommendationsChangeListenerRecords != 0) {
							Binder.restoreCallingIdentity(v14);
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserState v10 = new UserState(this.mContext,p1,this.mLock,p2);\nthis.mUserStates.put(p1, v10);', 'UserState v7 = PrintManagerService$PrintManagerImpl.getOrCreateUserStateLocked(v3, 0, 1);\nv16.destroy();\nObject v21 = this.mPrintServiceRecommendationsChangeListenerRecords.remove();', 'UserState v6 = p0.getOrCreateUserStateLocked(v3, 0);\nv6.removePrintServiceRecommendationsChangeListener(p1);']

The method removePrintServiceRecommendationsChangeListener has the following similar APIs:

- API Name: validatePrinters(Ljava/util/List;I)V with Similarity Score: 0.9918122291564941
  - Access Control Level: NONE and the following code:
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);

- API Name: stopPrinterStateTracking(Landroid/print/PrinterId;I)V with Similarity Score: 0.9918122291564941
  - Access Control Level: NONE and the following code:
UserState v9 = new UserState(this.mContext,p1,this.mLock,p2);
this.mUserStates.put(p1, v9);

