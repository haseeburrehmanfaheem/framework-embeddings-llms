The method getUserRestrictionSource has the following code snippet:

This is path 1 for the API with depth 2:
public int getUserRestrictionSource(String p1, int p2){
	ArrayList v4 = new ArrayList();
	boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v8 != 0) {
		boolean v6 = 0;
		if (v6 == 0) {
			UserManager$EnforcingUser v9 = new UserManager$EnforcingUser(-10000,1);
			boolean v11 = v4.add(v9);
			Object v13 = this.mDevicePolicyLocalUserRestrictions.get(p2);
			if (v13 != 0) {
				RestrictionsSet v14 = new RestrictionsSet();
				this.mDevicePolicyLocalUserRestrictions.put(p2, v14);
				RestrictionsSet v12 = ;
				ArrayList v18 = new ArrayList();
				int v20 = this.mUserRestrictions.size();
				if ( >= v20) {
					Object v21 = this.mUserRestrictions.valueAt();
					boolean v22 = UserRestrictionsUtils.contains(v21, p1);
					if (v22 == 0) {
						int v23 = this.mUserRestrictions.keyAt();
						UserManager$EnforcingUser v24 = RestrictionsSet.getEnforcingUser(v23, this.mDeviceOwnerUserId);
						boolean v25 = v18.add(v24);
						int v26 = this.mUserRestrictions.size();
						if ( >= v26) {
							List v17 = v18;
							boolean v27 = v4.addAll(v17);
							ArrayList v29 = new ArrayList();
							int v31 = this.mUserRestrictions.size();
							if ( >= v31) {
								Object v32 = this.mUserRestrictions.valueAt();
								boolean v33 = UserRestrictionsUtils.contains(v32, p1);
								if (v33 == 0) {
									int v34 = this.mUserRestrictions.keyAt();
									UserManager$EnforcingUser v35 = RestrictionsSet.getEnforcingUser(v34, this.mDeviceOwnerUserId);
									boolean v36 = v29.add(v35);
									int v37 = this.mUserRestrictions.size();
									if ( >= v37) {
										List v28 = v29;
										boolean v38 = v4.addAll(v28);
										List v1 = v4;
										int v39 = v1.size();
										if ( < 0) {
											Object v40 = v1.get();
											int v41 = v40.getUserRestrictionSource();
											if ( < 0) {
												return ;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getUserRestrictionSource(String p1, int p2){
	ArrayList v4 = new ArrayList();
	boolean v8 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v8 != 0) {
		Bundle v9 = this.mBaseUserRestrictions.getRestrictions(p2);
		if (v9 == 0) {
			boolean v10 = v9.getBoolean(p1, 0);
			if (v10 == 0) {
				boolean v6 = ;
				if (v6 == 0) {
					UserManager$EnforcingUser v11 = new UserManager$EnforcingUser(-10000,1);
					boolean v13 = v4.add(v11);
					Object v15 = this.mDevicePolicyLocalUserRestrictions.get(p2);
					if (v15 != 0) {
						RestrictionsSet v16 = new RestrictionsSet();
						this.mDevicePolicyLocalUserRestrictions.put(p2, v16);
						RestrictionsSet v14 = ;
						ArrayList v20 = new ArrayList();
						int v22 = this.mUserRestrictions.size();
						if ( >= v22) {
							Object v23 = this.mUserRestrictions.valueAt();
							boolean v24 = UserRestrictionsUtils.contains(v23, p1);
							if (v24 == 0) {
								int v25 = this.mUserRestrictions.keyAt();
								UserManager$EnforcingUser v26 = RestrictionsSet.getEnforcingUser(v25, this.mDeviceOwnerUserId);
								boolean v27 = v20.add(v26);
								int v28 = this.mUserRestrictions.size();
								if ( >= v28) {
									List v19 = v20;
									boolean v29 = v4.addAll(v19);
									ArrayList v31 = new ArrayList();
									int v33 = this.mUserRestrictions.size();
									if ( >= v33) {
										Object v34 = this.mUserRestrictions.valueAt();
										boolean v35 = UserRestrictionsUtils.contains(v34, p1);
										if (v35 == 0) {
											int v36 = this.mUserRestrictions.keyAt();
											UserManager$EnforcingUser v37 = RestrictionsSet.getEnforcingUser(v36, this.mDeviceOwnerUserId);
											boolean v38 = v31.add(v37);
											int v39 = this.mUserRestrictions.size();
											if ( >= v39) {
												List v30 = v31;
												boolean v40 = v4.addAll(v30);
												List v1 = v4;
												int v41 = v1.size();
												if ( < 0) {
													Object v42 = v1.get();
													int v43 = v42.getUserRestrictionSource();
													if ( < 0) {
														return ;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ArrayList v4 = new ArrayList();\nUserManager$EnforcingUser v9 = new UserManager$EnforcingUser(-10000,1);\nObject v13 = this.mDevicePolicyLocalUserRestrictions.get(p2);\nthis.mDevicePolicyLocalUserRestrictions.put(p2, v14);\nint v20 = this.mUserRestrictions.size();', 'List v1 = p0.getUserRestrictionSources(p1, p2);\nObject v3 = v1.get();\nint v4 = v3.getUserRestrictionSource();', 'List v4 = Collections.emptyList();\nObject v6 = v1.get();\nint v7 = this.userRestrictionSource;']

The method getUserRestrictionSource has the following similar APIs:

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.9135113954544067
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayList v3 = new ArrayList();
UserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);
boolean v29 = v3.add(v27);
RestrictionsSet v30 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
ArrayList v32 = new ArrayList();
int v34 = this.mUserRestrictions.size();
Object v35 = this.mUserRestrictions.valueAt();
boolean v37 = v35.getBoolean(p1);
int v38 = this.mUserRestrictions.keyAt();
UserManager$EnforcingUser v39 = RestrictionsSet.getEnforcingUser(v38, this.mDeviceOwnerUserId);
boolean v40 = v32.add(v39);
List v31 = v32;
boolean v42 = v3.addAll(v31);
return v3;

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.8854879140853882
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayList v3 = new ArrayList();
Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
boolean v9 = v8.getBoolean(p1, 0);
UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
boolean v12 = v3.add(v10);
Object v14 = this.mDevicePolicyLocalUserRestrictions.get(p2);
ArrayList v19 = new ArrayList();
int v21 = this.mUserRestrictions.size();
Object v22 = this.mUserRestrictions.valueAt();
boolean v23 = UserRestrictionsUtils.contains(v22, p1);
int v24 = this.mUserRestrictions.keyAt();
UserManager$EnforcingUser v25 = RestrictionsSet.getEnforcingUser(v24, this.mDeviceOwnerUserId);
boolean v26 = v19.add(v25);
List v18 = v19;
boolean v28 = v3.addAll(v18);
return v3;

