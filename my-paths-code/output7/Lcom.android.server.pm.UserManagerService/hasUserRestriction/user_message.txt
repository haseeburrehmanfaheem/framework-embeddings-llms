This is path 1 for the API with depth 2:
public boolean hasUserRestriction(String p1, int p2){
	boolean v4 = this.USER_RESTRICTIONS.contains(p1);
	if (v4 != 0) {
		int v5 = Binder.getCallingUid();
		IPackageManager v6 = AppGlobals.getPackageManager();
		String v7 = v6.getPackagesForUid(v5);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						boolean v17 = UserRestrictionsUtils.isSystemApp(v5, );
						if (v17 == 0) {
							boolean v3 = 0;
							if (v3 != 0) {
								Bundle v21 = this.this$0.getEffectiveUserRestrictions(p2);
								Bundle v20 = v21;
								if (v20 == 0) {
									boolean v22 = v20.getBoolean(p1);
									if (v22 == 0) {
										boolean v2 = ;
										return v2;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean hasUserRestriction(String p1, int p2){
	boolean v3 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v3 != 0) {
		Bundle v4 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
		if (v4 == 0) {
			boolean v5 = v4.getBoolean(p1);
			if (v5 == 0) {
				boolean v2 = ;
				return v2;
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean hasUserRestriction(String p1, int p2){
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
