This is path 1 for the API with depth 2:
public boolean isSameProfileGroup(int p1, int p2){
	if (p1 != p2) {
		Object v4 = this.mUsers.get(p1);
		if (v4 == 0) {
			if (UserInfo.partial == 0) {
				boolean v5 = this.mRemovingUserIds.get(p1);
				if (v5 != 0) {
					UserInfo v3 = 0;
					if (v3 == 0) {
						if (UserInfo.profileGroupId != -10000) {
							Object v13 = this.mUsers.get(p2);
							if (v13 == 0) {
								if (UserInfo.partial == 0) {
									boolean v14 = this.mRemovingUserIds.get(p2);
									if (v14 != 0) {
										UserInfo v12 = 0;
										if (v12 == 0) {
											if (UserInfo.profileGroupId != -10000) {
												if (UserInfo.profileGroupId != UserInfo.profileGroupId) {
													boolean v2 = ;
													return v2;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean isSameProfileGroup(int p1, int p2){
	if (p1 != p2) {
		UserInfo v3 = UserManagerService.getUserInfoLU(p1);
		if (v3 == 0) {
			if (UserInfo.profileGroupId != -10000) {
				UserInfo v4 = UserManagerService.getUserInfoLU(p2);
				if (v4 == 0) {
					if (UserInfo.profileGroupId != -10000) {
						if (UserInfo.profileGroupId != UserInfo.profileGroupId) {
							boolean v2 = ;
							return v2;
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean isSameProfileGroup(int p1, int p2){
	if (p1 != p2) {
		boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
		return v2;
	}
}
