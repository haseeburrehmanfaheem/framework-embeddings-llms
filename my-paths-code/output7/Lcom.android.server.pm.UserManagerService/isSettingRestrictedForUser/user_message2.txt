The method isSettingRestrictedForUser has the following code snippet:

This is path 1 for the API with depth 1:
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = p1.startsWith("data_roaming");
	if (v6 == 0) {
		boolean v7 = "0".equals(p3);
		if (v7 == 0) {
			UserHandle v8 = UserHandle.of(p2);
			boolean v9 = v4.hasUserRestriction(, v8);
			boolean v2 = v9;
			return v2;
		}
	}
}
This is path 2 for the API with depth 1:
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	Object v3 = Objects.requireNonNull(p1);
	Object v4 = this.mContext.getSystemService(UserManage.class);
	int v5 = p1.hashCode();
	boolean v6 = "0".equals(p3);
	if (v6 == 0) {
		UserHandle v7 = UserHandle.of(p2);
		boolean v8 = v4.hasUserRestriction(, v7);
		boolean v2 = v8;
		return v2;
	}
}

and the following sink code:
['Object v3 = Objects.requireNonNull(p1);\nint v5 = p1.hashCode();\nboolean v6 = p1.startsWith("data_roaming");\nUserHandle v8 = UserHandle.of(p2);\nboolean v9 = v4.hasUserRestriction(, v8);\nreturn v9;', 'Object v3 = Objects.requireNonNull(p1);\nint v5 = p1.hashCode();\nboolean v6 = "0".equals(p3);\nUserHandle v7 = UserHandle.of(p2);\nboolean v8 = v4.hasUserRestriction(, v7);\nreturn v8;', 'boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);\nreturn v2;']

The method isSettingRestrictedForUser has the following similar APIs:

- API Name: hasBaseUserRestriction(Ljava/lang/String;I)Z with Similarity Score: 0.731063723564148
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
boolean v4 = v3.getBoolean(p1, 0);

- API Name: removeUser(I)Z with Similarity Score: 0.7179248929023743
  - Access Control Level: SYS_OR_SIG and the following code:
String v8 = p0.getUserRemovalRestriction(p1);
int v9 = UserHandle.getCallingUserId();
Bundle v10 = p0.getUserRestrictions(v9);
boolean v11 = v10.getBoolean(v8, 0);

