The method getCredentialOwnerProfile has the following code snippet:

This is path 1 for the API with depth 2:
public int getCredentialOwnerProfile(int p1){
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	if (v2 != 0) {
		Object v5 = this.mUsers.get(p1);
		if (v5 == 0) {
			if (UserInfo.partial == 0) {
				boolean v6 = this.mRemovingUserIds.get(p1);
				if (v6 != 0) {
					UserInfo v4 = 0;
					if (v4 != 0) {
						if (UserInfo.profileGroupId == p1) {
							if (UserInfo.profileGroupId != -10000) {
								Object v14 = this.mUsers.get(UserInfo.profileGroupId);
								if (v14 == 0) {
									if (UserInfo.partial == 0) {
										boolean v15 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
										if (v15 != 0) {
											UserInfo v13 = 0;
											UserInfo v3 = v13;
											if (v3 == 0) {
												return UserInfo.id;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getCredentialOwnerProfile(int p1){
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	if (v2 != 0) {
		Object v5 = this.mUsers.get(p1);
		if (v5 == 0) {
			if (UserInfo.partial == 0) {
				boolean v6 = this.mRemovingUserIds.get(p1);
				if (v6 != 0) {
					UserInfo v4 = 0;
					if (v4 != 0) {
						if (UserInfo.profileGroupId == p1) {
							if (UserInfo.profileGroupId != -10000) {
								Object v14 = this.mUsers.get(UserInfo.profileGroupId);
								if (v14 == 0) {
									if (UserInfo.partial == 0) {
										boolean v15 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
										if (v15 != 0) {
											UserInfo v13 = 0;
											UserInfo v3 = v13;
											if (v3 == 0) {
												return p1;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int getCredentialOwnerProfile(int p1){
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	if (v2 != 0) {
		Object v5 = this.mUsers.get(p1);
		if (v5 == 0) {
			if (UserInfo.partial == 0) {
				boolean v6 = this.mRemovingUserIds.get(p1);
				if (v6 != 0) {
					if (v5 == 0) {
						UserInfo v4 = ;
						if (v4 != 0) {
							if (UserInfo.profileGroupId == p1) {
								if (UserInfo.profileGroupId != -10000) {
									Object v8 = this.mUsers.get(UserInfo.profileGroupId);
									if (v8 == 0) {
										if (UserInfo.partial == 0) {
											boolean v9 = this.mRemovingUserIds.get(UserInfo.profileGroupId);
											if (v9 != 0) {
												UserInfo v7 = 0;
												UserInfo v3 = v7;
												if (v3 == 0) {
													return UserInfo.id;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);\nUserInfo v4 = UserManagerService.getUserInfoLU(p1);\nif (v4 != 0) {\n  if (UserInfo.profileGroupId == p1) {\n    if (UserInfo.profileGroupId != -10000) {\n      UserInfo v5 = UserManagerService.getUserInfoLU(UserInfo.profileGroupId);\n      UserInfo v3 = v5;\n      if (v3 == 0) { return UserInfo.id; }', 'boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);\nUserInfo v3 = p0.getProfileParentLU(p1);\nif (v3 == 0) { return UserInfo.id; }']

The method getCredentialOwnerProfile has the following similar APIs:

- API Name: getSeparateProfileChallengeEnabled(I)Z with Similarity Score: 0.7776852250099182
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = p0.getSeparateProfileChallengeEnabledInternal(p1);
return v2;

- API Name: getProfileParentId(I)I with Similarity Score: 0.7718818187713623
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v5 = this.this$0.getProfileParentLU(p1);
if (v4 != 0) {
int v2 = p1;
return v2;

