The method setUserEphemeral has the following code snippet:

This is path 1 for the API with depth 1:
public boolean setUserEphemeral(int p1, boolean p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		if ((UserInfo.flags & 256) == 0) {
			if ((UserInfo.flags & 8192) == 0) {
				if ( == 0) {
					if (p2 != 0) {
						if ( == p2) {
							if (p2 == 0) {
								UserInfo.flags = (UserInfo.flags | 256);
								if ( == 0) {
									AtomicFile v4 = new AtomicFile(v5);
									File v5 = new File(this.mUsersDir,v10);
									StringBuilder v6 = new StringBuilder();
									StringBuilder v8 = v6.append(UserInfo.id);
									StringBuilder v9 = v6.append(".xml");
									String v10 = v6.toString();
									FileOutputStream v13 = v4.startWrite();
									UserManagerService.writeUserLP(, v13);
									v4.finishWrite(v13);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public boolean setUserEphemeral(int p1, boolean p2){
	Object v2 = this.mUsers.get(p1);
	if (v2 != 0) {
		if ((UserInfo.flags & 256) == 0) {
			if ((UserInfo.flags & 8192) == 0) {
				if ( == 0) {
					if (p2 != 0) {
						if ( == p2) {
							if (p2 == 0) {
								UserInfo.flags = (UserInfo.flags & -257);
								if ( == 0) {
									AtomicFile v4 = new AtomicFile(v5);
									File v5 = new File(this.mUsersDir,v10);
									StringBuilder v6 = new StringBuilder();
									StringBuilder v8 = v6.append(UserInfo.id);
									StringBuilder v9 = v6.append(".xml");
									String v10 = v6.toString();
									FileOutputStream v13 = v4.startWrite();
									UserManagerService.writeUserLP(, v13);
									v4.finishWrite(v13);
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nif (p2 != 0) {\nif ( == p2) {\nif (p2 == 0) {\nUserInfo.flags = (UserInfo.flags | 256);\nAtomicFile v4 = new AtomicFile(v5);\nFile v5 = new File(this.mUsersDir,v10);\nStringBuilder v6 = new StringBuilder();\nStringBuilder v8 = v6.append(UserInfo.id);\nStringBuilder v9 = v6.append(".xml");\nString v10 = v6.toString();\nFileOutputStream v13 = v4.startWrite();\nUserManagerService.writeUserLP(, v13);\nv4.finishWrite(v13);', 'Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nif (p2 != 0) {\nif ( == p2) {\nif (p2 == 0) {\nUserInfo.flags = (UserInfo.flags | 256);\np0.writeUserLP();', 'Object v2 = this.mUsers.get(p1);\nif ((UserInfo.flags & 256) == 0) {\nif ((UserInfo.flags & 8192) == 0) {\nif (p2 != 0) {\nif ( == p2) {\nif (p2 == 0) {\nUserInfo.flags = (UserInfo.flags & -257);\np0.writeUserLP();']

The method setUserEphemeral has the following similar APIs:

- API Name: setUserEnabled(I)V with Similarity Score: 0.8752084970474243
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
if ((this.flags & 64) == 64) {
UserInfo.flags = (UserInfo.flags ^ 64);
AtomicFile v10 = new AtomicFile(v11);
FileOutputStream v19 = v10.startWrite();
UserManagerService.writeUserLP(v6, v19);

- API Name: setUserEnabled(I)V with Similarity Score: 0.8692487478256226
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
if ((this.flags & 64) == 64) {
UserInfo.flags = (UserInfo.flags ^ 64);
AtomicFile v16 = new AtomicFile(v17);
FileOutputStream v25 = v16.startWrite();
UserManagerService.writeUserLP(v12, v25);

