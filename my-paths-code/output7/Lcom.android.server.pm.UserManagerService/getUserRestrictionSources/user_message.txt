This is path 1 for the API with depth 2:
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v8 = this.USER_RESTRICTIONS.contains(p1);
	if (v8 != 0) {
		int v9 = Binder.getCallingUid();
		IPackageManager v10 = AppGlobals.getPackageManager();
		String v11 = v10.getPackagesForUid(v9);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						boolean v21 = UserRestrictionsUtils.isSystemApp(v9, );
						if (v21 == 0) {
							boolean v7 = 0;
							if (v7 != 0) {
								Object v25 = this.mUserRestrictions.get(p2);
								Bundle v24 = v25;
								if (v24 == 0) {
									boolean v26 = v24.getBoolean(p1, 0);
									if (v26 == 0) {
										boolean v5 = ;
										if (v5 == 0) {
											UserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);
											boolean v29 = v3.add(v27);
											RestrictionsSet v30 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
											ArrayList v32 = new ArrayList();
											int v34 = this.mUserRestrictions.size();
											if ( >= v34) {
												Object v35 = this.mUserRestrictions.valueAt();
												if (v35 == 0) {
													boolean v37 = v35.getBoolean(p1);
													if (v37 == 0) {
														boolean v36 = ;
														if (v36 == 0) {
															int v38 = this.mUserRestrictions.keyAt();
															UserManager$EnforcingUser v39 = RestrictionsSet.getEnforcingUser(v38, this.mDeviceOwnerUserId);
															boolean v40 = v32.add(v39);
															int v41 = this.mUserRestrictions.size();
															if ( >= v41) {
																List v31 = v32;
																boolean v42 = v3.addAll(v31);
																ArrayList v44 = new ArrayList();
																int v46 = this.mUserRestrictions.size();
																if ( >= v46) {
																	Object v47 = this.mUserRestrictions.valueAt();
																	if (v47 == 0) {
																		boolean v49 = v47.getBoolean(p1);
																		if (v49 == 0) {
																			boolean v48 = ;
																			if (v48 == 0) {
																				int v50 = this.mUserRestrictions.keyAt();
																				UserManager$EnforcingUser v51 = RestrictionsSet.getEnforcingUser(v50, this.mDeviceOwnerUserId);
																				boolean v52 = v44.add(v51);
																				int v53 = this.mUserRestrictions.size();
																				if ( >= v53) {
																					List v43 = v44;
																					boolean v54 = v3.addAll(v43);
																					return v3;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v7 = UserRestrictionsUtils.isValidRestriction(p1);
	if (v7 != 0) {
		Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
		if (v8 == 0) {
			boolean v9 = v8.getBoolean(p1, 0);
			if (v9 == 0) {
				boolean v5 = ;
				if (v5 == 0) {
					UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
					boolean v12 = v3.add(v10);
					Object v14 = this.mDevicePolicyLocalUserRestrictions.get(p2);
					if (v14 != 0) {
						RestrictionsSet v15 = new RestrictionsSet();
						this.mDevicePolicyLocalUserRestrictions.put(p2, v15);
						RestrictionsSet v13 = ;
						ArrayList v19 = new ArrayList();
						int v21 = this.mUserRestrictions.size();
						if ( >= v21) {
							Object v22 = this.mUserRestrictions.valueAt();
							boolean v23 = UserRestrictionsUtils.contains(v22, p1);
							if (v23 == 0) {
								int v24 = this.mUserRestrictions.keyAt();
								UserManager$EnforcingUser v25 = RestrictionsSet.getEnforcingUser(v24, this.mDeviceOwnerUserId);
								boolean v26 = v19.add(v25);
								int v27 = this.mUserRestrictions.size();
								if ( >= v27) {
									List v18 = v19;
									boolean v28 = v3.addAll(v18);
									ArrayList v30 = new ArrayList();
									int v32 = this.mUserRestrictions.size();
									if ( >= v32) {
										Object v33 = this.mUserRestrictions.valueAt();
										boolean v34 = UserRestrictionsUtils.contains(v33, p1);
										if (v34 == 0) {
											int v35 = this.mUserRestrictions.keyAt();
											UserManager$EnforcingUser v36 = RestrictionsSet.getEnforcingUser(v35, this.mDeviceOwnerUserId);
											boolean v37 = v30.add(v36);
											int v38 = this.mUserRestrictions.size();
											if ( >= v38) {
												List v29 = v30;
												boolean v39 = v3.addAll(v29);
												return v3;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public List getUserRestrictionSources(String p1, int p2){
	List v3 = Collections.emptyList();
	return v3;
}
