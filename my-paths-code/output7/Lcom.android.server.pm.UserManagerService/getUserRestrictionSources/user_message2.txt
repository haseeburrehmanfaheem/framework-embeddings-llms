The method getUserRestrictionSources has the following code snippet:

This is path 1 for the API with depth 2:
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v8 = this.USER_RESTRICTIONS.contains(p1);
	if (v8 != 0) {
		int v9 = Binder.getCallingUid();
		IPackageManager v10 = AppGlobals.getPackageManager();
		String v11 = v10.getPackagesForUid(v9);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						boolean v21 = UserRestrictionsUtils.isSystemApp(v9, );
						if (v21 == 0) {
							boolean v7 = 0;
							if (v7 != 0) {
								Object v25 = this.mUserRestrictions.get(p2);
								Bundle v24 = v25;
								if (v24 == 0) {
									boolean v26 = v24.getBoolean(p1, 0);
									if (v26 == 0) {
										boolean v5 = ;
										if (v5 == 0) {
											UserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);
											boolean v29 = v3.add(v27);
											RestrictionsSet v30 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
											ArrayList v32 = new ArrayList();
											int v34 = this.mUserRestrictions.size();
											if ( >= v34) {
												Object v35 = this.mUserRestrictions.valueAt();
												if (v35 == 0) {
													boolean v37 = v35.getBoolean(p1);
													if (v37 == 0) {
														boolean v36 = ;
														if (v36 == 0) {
															int v38 = this.mUserRestrictions.keyAt();
															UserManager$EnforcingUser v39 = RestrictionsSet.getEnforcingUser(v38, this.mDeviceOwnerUserId);
															boolean v40 = v32.add(v39);
															int v41 = this.mUserRestrictions.size();
															if ( >= v41) {
																List v31 = v32;
																boolean v42 = v3.addAll(v31);
																ArrayList v44 = new ArrayList();
																int v46 = this.mUserRestrictions.size();
																if ( >= v46) {
																	Object v47 = this.mUserRestrictions.valueAt();
																	if (v47 == 0) {
																		boolean v49 = v47.getBoolean(p1);
																		if (v49 == 0) {
																			boolean v48 = ;
																			if (v48 == 0) {
																				int v50 = this.mUserRestrictions.keyAt();
																				UserManager$EnforcingUser v51 = RestrictionsSet.getEnforcingUser(v50, this.mDeviceOwnerUserId);
																				boolean v52 = v44.add(v51);
																				int v53 = this.mUserRestrictions.size();
																				if ( >= v53) {
																					List v43 = v44;
																					boolean v54 = v3.addAll(v43);
																					return v3;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v3 = new ArrayList();
	boolean v8 = this.USER_RESTRICTIONS.contains(p1);
	if (v8 != 0) {
		int v9 = Binder.getCallingUid();
		IPackageManager v10 = AppGlobals.getPackageManager();
		String v11 = v10.getPackagesForUid(v9);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						boolean v21 = UserRestrictionsUtils.isSystemApp(v9, );
						if (v21 == 0) {
							boolean v7 = 0;
							if (v7 != 0) {
								boolean v5 = 0;
								if (v5 == 0) {
									UserManager$EnforcingUser v24 = new UserManager$EnforcingUser(-10000,1);
									boolean v26 = v3.add(v24);
									RestrictionsSet v27 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
									ArrayList v29 = new ArrayList();
									int v31 = this.mUserRestrictions.size();
									if ( >= v31) {
										Object v32 = this.mUserRestrictions.valueAt();
										if (v32 == 0) {
											boolean v34 = v32.getBoolean(p1);
											if (v34 == 0) {
												boolean v33 = ;
												if (v33 == 0) {
													int v35 = this.mUserRestrictions.keyAt();
													UserManager$EnforcingUser v36 = RestrictionsSet.getEnforcingUser(v35, this.mDeviceOwnerUserId);
													boolean v37 = v29.add(v36);
													int v38 = this.mUserRestrictions.size();
													if ( >= v38) {
														List v28 = v29;
														boolean v39 = v3.addAll(v28);
														ArrayList v41 = new ArrayList();
														int v43 = this.mUserRestrictions.size();
														if ( >= v43) {
															Object v44 = this.mUserRestrictions.valueAt();
															if (v44 == 0) {
																boolean v46 = v44.getBoolean(p1);
																if (v46 == 0) {
																	boolean v45 = ;
																	if (v45 == 0) {
																		int v47 = this.mUserRestrictions.keyAt();
																		UserManager$EnforcingUser v48 = RestrictionsSet.getEnforcingUser(v47, this.mDeviceOwnerUserId);
																		boolean v49 = v41.add(v48);
																		int v50 = this.mUserRestrictions.size();
																		if ( >= v50) {
																			List v40 = v41;
																			boolean v51 = v3.addAll(v40);
																			return v3;
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['ArrayList v3 = new ArrayList();\nUserManager$EnforcingUser v27 = new UserManager$EnforcingUser(-10000,1);\nboolean v29 = v3.add(v27);\nRestrictionsSet v30 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);\nArrayList v32 = new ArrayList();\nint v34 = this.mUserRestrictions.size();\nObject v35 = this.mUserRestrictions.valueAt();\nboolean v37 = v35.getBoolean(p1);\nint v38 = this.mUserRestrictions.keyAt();\nUserManager$EnforcingUser v39 = RestrictionsSet.getEnforcingUser(v38, this.mDeviceOwnerUserId);\nboolean v40 = v32.add(v39);\nList v31 = v32;\nboolean v42 = v3.addAll(v31);\nreturn v3;', 'ArrayList v3 = new ArrayList();\nBundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);\nboolean v9 = v8.getBoolean(p1, 0);\nUserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);\nboolean v12 = v3.add(v10);\nObject v14 = this.mDevicePolicyLocalUserRestrictions.get(p2);\nArrayList v19 = new ArrayList();\nint v21 = this.mUserRestrictions.size();\nObject v22 = this.mUserRestrictions.valueAt();\nboolean v23 = UserRestrictionsUtils.contains(v22, p1);\nint v24 = this.mUserRestrictions.keyAt();\nUserManager$EnforcingUser v25 = RestrictionsSet.getEnforcingUser(v24, this.mDeviceOwnerUserId);\nboolean v26 = v19.add(v25);\nList v18 = v19;\nboolean v28 = v3.addAll(v18);\nreturn v3;', 'List v3 = Collections.emptyList();\nreturn v3;']

The method getUserRestrictionSources has the following similar APIs:

- API Name: getUserRestrictionSource(Ljava/lang/String;I)I with Similarity Score: 0.9135113954544067
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayList v4 = new ArrayList();
UserManager$EnforcingUser v9 = new UserManager$EnforcingUser(-10000,1);
Object v13 = this.mDevicePolicyLocalUserRestrictions.get(p2);
this.mDevicePolicyLocalUserRestrictions.put(p2, v14);
int v20 = this.mUserRestrictions.size();

- API Name: getUserRestrictionSource(Ljava/lang/String;I)I with Similarity Score: 0.8854879140853882
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayList v4 = new ArrayList();
UserManager$EnforcingUser v9 = new UserManager$EnforcingUser(-10000,1);
Object v13 = this.mDevicePolicyLocalUserRestrictions.get(p2);
this.mDevicePolicyLocalUserRestrictions.put(p2, v14);
int v20 = this.mUserRestrictions.size();

