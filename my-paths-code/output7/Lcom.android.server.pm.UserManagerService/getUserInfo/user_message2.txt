The method getUserInfo has the following code snippet:

This is path 1 for the API with depth 2:
public UserInfo getUserInfo(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if (UserInfo.name != 0) {
						if (UserInfo.id != 0) {
							boolean v13 = UserManager.isUserTypeGuest(this.userType);
							boolean v12 = v13;
							if (v12 == 0) {
								String v15 = this.mContext.getString(17040437);
								String v14 = v15;
								if ( == 0) {
									UserInfo v16 = new UserInfo(v2);
									UserInfo.name = ;
									UserInfo v11 = v16;
									return v11;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public UserInfo getUserInfo(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				if (v3 == 0) {
					UserInfo v2 = ;
					if (v2 == 0) {
						if (UserInfo.name != 0) {
							if (UserInfo.id != 0) {
								boolean v7 = UserManager.isUserTypeGuest(this.userType);
								boolean v6 = v7;
								if (v6 == 0) {
									String v9 = this.mContext.getString(17040437);
									String v8 = v9;
									if ( == 0) {
										UserInfo v10 = new UserInfo(v2);
										UserInfo.name = ;
										UserInfo v5 = v10;
										return v5;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public UserInfo getUserInfo(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if (UserInfo.name != 0) {
						if (UserInfo.id != 0) {
							boolean v13 = UserManager.isUserTypeGuest(this.userType);
							boolean v12 = v13;
							if (v12 == 0) {
								String v15 = this.mContext.getString(17040437);
								String v14 = v15;
								if ( == 0) {
									UserInfo v11 = v2;
									return v11;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mUsers.get(p1);\nboolean v4 = this.mRemovingUserIds.get(p1);\nboolean v13 = UserManager.isUserTypeGuest(this.userType);\nUserInfo v16 = new UserInfo(v2);\nreturn v11;', 'Object v3 = this.mUsers.get(p1);\nboolean v4 = this.mRemovingUserIds.get(p1);\nboolean v12 = v2.isGuest();\nUserInfo v14 = new UserInfo(v2);\nreturn v11;', 'UserInfo v2 = p0.getUserInfoLU(p1);\nUserInfo v3 = p0.userWithName(v2);\nreturn v3;']

The method getUserInfo has the following similar APIs:

- API Name: canHaveRestrictedProfile(I)Z with Similarity Score: 0.9301655888557434
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
boolean v12 = UserInfo.isProfile();
boolean v13 = UserInfo.isGuest();
boolean v14 = UserInfo.isRestricted();

- API Name: canHaveRestrictedProfile(I)Z with Similarity Score: 0.929155170917511
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
boolean v12 = UserInfo.isProfile();
boolean v13 = UserInfo.isGuest();
boolean v14 = UserInfo.isRestricted();

