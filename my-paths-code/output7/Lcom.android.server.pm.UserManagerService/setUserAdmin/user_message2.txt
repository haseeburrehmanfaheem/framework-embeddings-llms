The method setUserAdmin has the following code snippet:

This is path 1 for the API with depth 1:
public void setUserAdmin(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if ((this.flags & 2) != 2) {
						boolean v11 = ;
						if (v11 == 0) {
							UserInfo.flags = (UserInfo.flags ^ 2);
							Object v13 = this.mUsers.get(UserInfo.id);
							if (v13 == 0) {
								if (UserInfo.partial == 0) {
									boolean v14 = this.mRemovingUserIds.get(UserInfo.id);
									if (v14 != 0) {
										UserManagerService$UserData v12 = 0;
										AtomicFile v16 = new AtomicFile(v17);
										File v17 = new File(this.mUsersDir,v22);
										StringBuilder v18 = new StringBuilder();
										StringBuilder v20 = v18.append(UserInfo.id);
										StringBuilder v21 = v18.append(".xml");
										String v22 = v18.toString();
										FileOutputStream v25 = v16.startWrite();
										UserManagerService.writeUserLP(v12, v25);
										v16.finishWrite(v25);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 1:
public void setUserAdmin(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if ((this.flags & 2) != 2) {
						boolean v11 = ;
						if (v11 == 0) {
							UserInfo.flags = (UserInfo.flags ^ 2);
							Object v13 = this.mUsers.get(UserInfo.id);
							if (v13 == 0) {
								if (UserInfo.partial == 0) {
									boolean v14 = this.mRemovingUserIds.get(UserInfo.id);
									if (v14 != 0) {
										UserManagerService$UserData v12 = v13;
										AtomicFile v16 = new AtomicFile(v17);
										File v17 = new File(this.mUsersDir,v22);
										StringBuilder v18 = new StringBuilder();
										StringBuilder v20 = v18.append(UserInfo.id);
										StringBuilder v21 = v18.append(".xml");
										String v22 = v18.toString();
										FileOutputStream v25 = v16.startWrite();
										UserManagerService.writeUserLP(v12, v25);
										v16.finishWrite(v25);
										return;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['UserInfo v2 = p0.getUserInfoLU(p1);\nboolean v3 = v2.isAdmin();\nUserInfo.flags = (UserInfo.flags ^ 2);\nUserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);\np0.writeUserLP(v4);', 'Object v3 = this.mUsers.get(p1);\nboolean v4 = this.mRemovingUserIds.get(p1);\nif ((this.flags & 2) != 2) {\nUserInfo.flags = (UserInfo.flags ^ 2);\nAtomicFile v16 = new AtomicFile(v17);\nFileOutputStream v25 = v16.startWrite();\nUserManagerService.writeUserLP(v12, v25);\nv16.finishWrite(v25);']

The method setUserAdmin has the following similar APIs:

- API Name: setUserEnabled(I)V with Similarity Score: 0.9944548606872559
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
if ((this.flags & 64) == 64) {
UserInfo.flags = (UserInfo.flags ^ 64);
AtomicFile v16 = new AtomicFile(v17);
FileOutputStream v25 = v16.startWrite();
UserManagerService.writeUserLP(v12, v25);

- API Name: setUserEnabled(I)V with Similarity Score: 0.9895904064178467
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUsers.get(p1);
boolean v4 = this.mRemovingUserIds.get(p1);
if ((this.flags & 64) == 64) {
UserInfo.flags = (UserInfo.flags ^ 64);
AtomicFile v10 = new AtomicFile(v11);
FileOutputStream v19 = v10.startWrite();
UserManagerService.writeUserLP(v6, v19);

