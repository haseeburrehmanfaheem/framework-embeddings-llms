This is path 1 for the API with depth 2:
public boolean canHaveRestrictedProfile(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					if ((this.flags & 4096) == 0) {
						boolean v12 = ;
						if (v12 != 0) {
							boolean v14 = UserManager.isUserTypeGuest(this.userType);
							boolean v13 = v14;
							if (v13 != 0) {
								boolean v16 = UserManager.isUserTypeRestricted(this.userType);
								boolean v15 = v16;
								if (v15 == 0) {
									boolean v11 = 0;
									if (v11 != 0) {
										boolean v17 = v2.isAdmin();
										if (v17 != 0) {
											return 0;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 2 for the API with depth 1:
public boolean canHaveRestrictedProfile(int p1){
	Object v3 = this.mUsers.get(p1);
	if (v3 == 0) {
		if (UserInfo.partial == 0) {
			boolean v4 = this.mRemovingUserIds.get(p1);
			if (v4 != 0) {
				UserInfo v2 = 0;
				if (v2 == 0) {
					boolean v12 = UserInfo.isProfile();
					if (v12 != 0) {
						boolean v13 = UserInfo.isGuest();
						if (v13 != 0) {
							boolean v14 = UserInfo.isRestricted();
							if (v14 == 0) {
								boolean v11 = 0;
								if (v11 != 0) {
									if ((this.flags & 2) != 2) {
										boolean v15 = ;
										if (v15 != 0) {
											return 0;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


This is path 3 for the API with depth 0:
public boolean canHaveRestrictedProfile(int p1){
	UserInfo v2 = p0.getUserInfoLU(p1);
	if (v2 == 0) {
		boolean v3 = v2.canHaveProfile();
		if (v3 != 0) {
			boolean v4 = v2.isAdmin();
			if (v4 != 0) {
				return 0;
			}
		}
	}
}
