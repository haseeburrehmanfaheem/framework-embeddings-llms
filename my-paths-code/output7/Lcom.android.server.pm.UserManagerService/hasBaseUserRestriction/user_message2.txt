The method hasBaseUserRestriction has the following code snippet:

This is path 1 for the API with depth 2:
public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						if (v18 == 0) {
							if ( != 0) {
								IPackageManager v19 = AppGlobals.getPackageManager();
								if ( >= .length) {
									int v20 = UserHandle.getUserId(v4);
									ApplicationInfo v21 = v19.getApplicationInfo([], 794624, v20);
									if ( >= .length) {
										int v22 = UserHandle.getUserId(v4);
										ApplicationInfo v23 = v19.getApplicationInfo([], 794624, v22);
										if (v23 == 0) {
											boolean v24 = v23.isSystemApp();
											if (v24 == 0) {
												boolean v17 = 1;
												if (v17 == 0) {
													boolean v2 = 0;
													if (v2 != 0) {
														Bundle v27 = this.mBaseUserRestrictions.getRestrictions(p2);
														if (v27 == 0) {
															boolean v28 = v27.getBoolean(p1, 0);
															if (v28 == 0) {
																return ;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						if (v18 == 0) {
							if ( != 0) {
								IPackageManager v19 = AppGlobals.getPackageManager();
								if ( >= .length) {
									int v20 = UserHandle.getUserId(v4);
									ApplicationInfo v21 = v19.getApplicationInfo([], 794624, v20);
									if ( >= .length) {
										boolean v17 = 0;
										if (v17 == 0) {
											boolean v2 = 0;
											if (v2 != 0) {
												Bundle v24 = this.mBaseUserRestrictions.getRestrictions(p2);
												if (v24 == 0) {
													boolean v25 = v24.getBoolean(p1, 0);
													if (v25 == 0) {
														return ;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean hasBaseUserRestriction(String p1, int p2){
	boolean v3 = this.USER_RESTRICTIONS.contains(p1);
	if (v3 != 0) {
		int v4 = Binder.getCallingUid();
		IPackageManager v6 = ActivityThread.getPackageManager();
		IPackageManager v5 = v6;
		String v7 = v5.getPackagesForUid(v4);
		if ( == 0) {
			if (.length <= 0) {
				if (.length <= 1) {
					if (p1 == 0) {
						if (v18 == 0) {
							if ( != 0) {
								IPackageManager v19 = AppGlobals.getPackageManager();
								if ( >= .length) {
									int v20 = UserHandle.getUserId(v4);
									ApplicationInfo v21 = v19.getApplicationInfo([], 794624, v20);
									if ( >= .length) {
										int v22 = UserHandle.getUserId(v4);
										ApplicationInfo v23 = v19.getApplicationInfo([], 794624, v22);
										if (v23 == 0) {
											boolean v24 = v23.isSystemApp();
											if (v24 == 0) {
												boolean v17 = 1;
												if (v17 == 0) {
													boolean v2 = 0;
													if (v2 != 0) {
														return 0;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);\nBundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);\nboolean v4 = v3.getBoolean(p1, 0);']

The method hasBaseUserRestriction has the following similar APIs:

- API Name: hasUserRestriction(Ljava/lang/String;I)Z with Similarity Score: 0.9389773011207581
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v3 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v4 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
boolean v5 = v4.getBoolean(p1);

- API Name: hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z with Similarity Score: 0.9183417558670044
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
List v2 = p0.getUsers(1);
Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);

