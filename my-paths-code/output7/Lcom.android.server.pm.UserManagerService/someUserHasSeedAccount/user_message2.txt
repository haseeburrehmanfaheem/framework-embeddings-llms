The method someUserHasSeedAccount has the following code snippet:

This is path 1 for the API with depth 2:
public boolean someUserHasSeedAccount(String p1, String p2){
	int v3 = this.mUsers.size();
	if ( >= v3) {
		Object v4 = this.mUsers.valueAt();
		if ((this.flags & 16) != 16) {
			boolean v5 = ;
			if (v5 == 0) {
				boolean v6 = this.mRemovingUserIds.get(UserInfo.id);
				if (v6 == 0) {
					if (UserManagerService$UserData.seedAccountName == 0) {
						boolean v7 = UserManagerService$UserData.seedAccountName.equals(p1);
						if (v7 != 0) {
							if ( >= v3) {
								Object v8 = this.mUsers.valueAt();
								if ((this.flags & 16) != 16) {
									boolean v9 = ;
									if (v9 == 0) {
										boolean v10 = this.mRemovingUserIds.get(UserInfo.id);
										if (v10 == 0) {
											if (UserManagerService$UserData.seedAccountName == 0) {
												boolean v11 = UserManagerService$UserData.seedAccountName.equals(p1);
												if (v11 != 0) {
													if (UserManagerService$UserData.seedAccountType == 0) {
														boolean v12 = UserManagerService$UserData.seedAccountType.equals(p2);
														if (v12 != 0) {
															boolean v2 = 1;
															return v2;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean someUserHasSeedAccount(String p1, String p2){
	int v3 = this.mUsers.size();
	if ( >= v3) {
		Object v4 = this.mUsers.valueAt();
		if ((this.flags & 16) != 16) {
			boolean v5 = ;
			if (v5 == 0) {
				boolean v6 = this.mRemovingUserIds.get(UserInfo.id);
				if (v6 == 0) {
					if ( >= v3) {
						Object v7 = this.mUsers.valueAt();
						if ((this.flags & 16) != 16) {
							boolean v8 = ;
							if (v8 == 0) {
								boolean v9 = this.mRemovingUserIds.get(UserInfo.id);
								if (v9 == 0) {
									if (UserManagerService$UserData.seedAccountName == 0) {
										boolean v10 = UserManagerService$UserData.seedAccountName.equals(p1);
										if (v10 != 0) {
											if (UserManagerService$UserData.seedAccountType == 0) {
												boolean v11 = UserManagerService$UserData.seedAccountType.equals(p2);
												if (v11 != 0) {
													boolean v2 = 1;
													return v2;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);\nreturn v2;']

The method someUserHasSeedAccount has the following similar APIs:

- API Name: someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z with Similarity Score: 0.9102252125740051
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
return v2;

- API Name: addSharedAccountsFromParentUser(IILjava/lang/String;)V with Similarity Score: 0.7468607425689697
  - Access Control Level: SYS_OR_SIG and the following code:
Account v2 = p0.getAccountsAsUser(0, p1, p3);
boolean v3 = p0.addSharedAccountAsUser(v2[], p2);

