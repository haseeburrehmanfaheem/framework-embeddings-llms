The method canAddMoreUsersOfType has the following code snippet:

This is path 1 for the API with depth 2:
public boolean canAddMoreUsersOfType(String p1){
	Object v2 = this.mUserTypes.get(p1);
	if (v2 == 0) {
		boolean v4 = this.mEnabled;
		if (v4 != 0) {
			int v5 = this.mMaxAllowed;
			if (v5 != -1) {
				String v6 = this.mName;
				int v8 = this.mUsers.size();
				if ( >= v8) {
					Object v9 = this.mUsers.valueAt();
					boolean v10 = UserInfo.userType.equals(v6);
					if (v10 == 0) {
						if (UserInfo.guestToRemove != 0) {
							boolean v11 = this.mRemovingUserIds.get(UserInfo.id);
							if (v11 != 0) {
								if (UserInfo.preCreated != 0) {
									if ( >= v8) {
										int v7 = ;
										if (v7 >= v5) {
											boolean v3 = ;
											if (v3 == 0) {
												return ;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean canAddMoreUsersOfType(String p1){
	Object v2 = this.mUserTypes.get(p1);
	if (v2 == 0) {
		boolean v4 = this.mEnabled;
		if (v4 != 0) {
			int v5 = this.mMaxAllowed;
			if (v5 != -1) {
				boolean v3 = 1;
				if (v3 == 0) {
					return ;
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mUserTypes.get(p1);\nif (v2 == 0) {\nboolean v4 = this.mEnabled;\nint v5 = this.mMaxAllowed;\nString v6 = this.mName;\nint v8 = this.mUsers.size();', 'Object v2 = this.mUserTypes.get(p1);\nif (v2 == 0) {\nboolean v4 = v2.isEnabled();\nint v5 = v2.getMaxAllowed();\nString v6 = v2.getName();\nint v7 = UserManagerService.getNumberOfUsersOfType(v6);', 'Object v2 = this.mUserTypes.get(p1);\nboolean v3 = p0.canAddMoreUsersOfType(v2);']

The method canAddMoreUsersOfType has the following similar APIs:

- API Name: canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z with Similarity Score: 0.8683863282203674
  - Access Control Level: SYS_OR_SIG and the following code:
Object v3 = this.mUserTypes.get(p1);
if (v3 == 0) {
boolean v4 = v3.isEnabled();
if (v4 != 0) {
boolean v5 = v3.isManagedProfile();
PackageManager v6 = this.mContext.getPackageManager();
boolean v7 = v6.hasSystemFeature("android.software.managed_users");
UserInfo v8 = UserManagerService.getUserInfoLU(p2);
[I v10 = UserManagerService.getProfileIds(p2, p1, 0);

- API Name: getRemainingCreatableUserCount(Ljava/lang/String;)I with Similarity Score: 0.8518216013908386
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUserTypes.get(p1);
boolean v3 = v2.isEnabled();
int v4 = p0.getAliveUsersExcludingGuestsCountLU();
boolean v5 = UserManager.isUserTypeGuest(p1);
int v10 = v2.getMaxAllowed();
int v11 = v2.getMaxAllowed();
int v12 = p0.getNumberOfUsersOfType(p1);
int v13 = Math.min(, );
int v14 = Math.max(0, v13);
return v14;

