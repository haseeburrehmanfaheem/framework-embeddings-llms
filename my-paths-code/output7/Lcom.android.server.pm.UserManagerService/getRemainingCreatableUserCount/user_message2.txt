The method getRemainingCreatableUserCount has the following code snippet:

This is path 1 for the API with depth 2:
public int getRemainingCreatableUserCount(String p1){
	Object v2 = this.mUserTypes.get(p1);
	if (v2 == 0) {
		boolean v3 = this.mEnabled;
		if (v3 != 0) {
			int v5 = this.mUsers.size();
			if ( >= v5) {
				Object v6 = this.mUsers.valueAt();
				boolean v7 = this.mRemovingUserIds.get(UserInfo.id);
				if (v7 != 0) {
					boolean v9 = UserManager.isUserTypeGuest(this.userType);
					boolean v8 = v9;
					if (v8 != 0) {
						if (UserInfo.preCreated != 0) {
							if ( >= v5) {
								int v4 = ;
								boolean v10 = UserManager.isUserTypeGuest(p1);
								if (v10 != 0) {
									boolean v11 = UserManager.isUserTypeDemo(p1);
									if (v11 == 0) {
										boolean v12 = v2.isManagedProfile();
										if (v12 == 0) {
											PackageManager v13 = this.mContext.getPackageManager();
											boolean v14 = v13.hasSystemFeature("android.software.managed_users");
											if (v14 != 0) {
												if ( > 0) {
													if (v4 != 1) {
														if (( & ) == 0) {
															if ( > 0) {
																int v15 = v2.getMaxAllowed();
																if (v15 != -1) {
																	int v16 = v2.getMaxAllowed();
																	int v17 = p0.getNumberOfUsersOfType(p1);
																	int v18 = Math.min(, );
																	int v19 = Math.max(0, v18);
																	return v19;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public int getRemainingCreatableUserCount(String p1){
	Object v2 = this.mUserTypes.get(p1);
	if (v2 == 0) {
		boolean v3 = this.mEnabled;
		if (v3 != 0) {
			int v5 = this.mUsers.size();
			if ( >= v5) {
				Object v6 = this.mUsers.valueAt();
				boolean v7 = this.mRemovingUserIds.get(UserInfo.id);
				if (v7 != 0) {
					boolean v9 = UserManager.isUserTypeGuest(this.userType);
					boolean v8 = v9;
					if (v8 != 0) {
						if (UserInfo.preCreated != 0) {
							if ( >= v5) {
								int v4 = ;
								boolean v10 = UserManager.isUserTypeGuest(p1);
								if (v10 != 0) {
									boolean v11 = UserManager.isUserTypeDemo(p1);
									if (v11 == 0) {
										boolean v12 = v2.isManagedProfile();
										if (v12 == 0) {
											PackageManager v13 = this.mContext.getPackageManager();
											boolean v14 = v13.hasSystemFeature("android.software.managed_users");
											if (v14 != 0) {
												if ( > 0) {
													if (v4 != 1) {
														if (( & ) == 0) {
															if ( > 0) {
																int v15 = v2.getMaxAllowed();
																if (v15 != -1) {
																	int v16 = Math.min(, );
																	int v17 = Math.max(0, v16);
																	return v17;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public int getRemainingCreatableUserCount(String p1){
	Object v2 = this.mUserTypes.get(p1);
	if (v2 == 0) {
		boolean v3 = this.mEnabled;
		if (v3 != 0) {
			int v5 = this.mUsers.size();
			if ( >= v5) {
				Object v6 = this.mUsers.valueAt();
				boolean v7 = this.mRemovingUserIds.get(UserInfo.id);
				if (v7 != 0) {
					boolean v9 = UserManager.isUserTypeGuest(this.userType);
					boolean v8 = v9;
					if (v8 != 0) {
						if (UserInfo.preCreated != 0) {
							if ( >= v5) {
								int v4 = ;
								boolean v10 = UserManager.isUserTypeGuest(p1);
								if (v10 != 0) {
									boolean v11 = UserManager.isUserTypeDemo(p1);
									if (v11 == 0) {
										boolean v12 = v2.isManagedProfile();
										if (v12 == 0) {
											PackageManager v13 = this.mContext.getPackageManager();
											boolean v14 = v13.hasSystemFeature("android.software.managed_users");
											if (v14 != 0) {
												if ( > 0) {
													if (v4 != 1) {
														if (( & ) == 0) {
															if ( > 0) {
																return 0;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v2 = this.mUserTypes.get(p1);\nboolean v3 = v2.isEnabled();\nint v4 = p0.getAliveUsersExcludingGuestsCountLU();\nboolean v5 = UserManager.isUserTypeGuest(p1);\nint v10 = v2.getMaxAllowed();\nint v11 = v2.getMaxAllowed();\nint v12 = p0.getNumberOfUsersOfType(p1);\nint v13 = Math.min(, );\nint v14 = Math.max(0, v13);\nreturn v14;']

The method getRemainingCreatableUserCount has the following similar APIs:

- API Name: canAddMoreUsersOfType(Ljava/lang/String;)Z with Similarity Score: 0.8518216013908386
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUserTypes.get(p1);
if (v2 == 0) {
boolean v4 = v2.isEnabled();
int v5 = v2.getMaxAllowed();
String v6 = v2.getName();
int v7 = UserManagerService.getNumberOfUsersOfType(v6);

- API Name: canAddMoreUsersOfType(Ljava/lang/String;)Z with Similarity Score: 0.8352767825126648
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUserTypes.get(p1);
if (v2 == 0) {
boolean v4 = this.mEnabled;
int v5 = this.mMaxAllowed;
String v6 = this.mName;
int v8 = this.mUsers.size();

