The method getUserRestrictions has the following code snippet:

This is path 1 for the API with depth 2:
public Bundle getUserRestrictions(int p1){
	Object v4 = this.mUserRestrictions.get(p1);
	Bundle v3 = v4;
	if (v3 != 0) {
		Bundle v6 = this.mBaseUserRestrictions.getRestrictions(p1);
		Bundle v7 = UserRestrictionsUtils.nonNull(v6);
		Bundle v8 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
		RestrictionsSet v9 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
		boolean v10 = BundleUtils.isEmpty(v8);
		if (v10 == 0) {
			boolean v11 = v9.isEmpty();
			if (v11 == 0) {
				Bundle v12 = BundleUtils.clone(v7);
				UserRestrictionsUtils.merge(v12, v8);
				Bundle v14 = v9.mergeAll();
				UserRestrictionsUtils.merge(v12, v14);
				Bundle v5 = v12;
				Object v17 = this.mUserRestrictions.get(p1);
				boolean v18 = UserRestrictionsUtils.areEqual(v17, v5);
				if ((v18 ^ 1) != 0) {
					boolean v19 = BundleUtils.isEmpty(v5);
					if (v19 != 0) {
						this.mUserRestrictions.put(p1, v5);
						boolean v16 = 1;
						Bundle v2 = ;
						Bundle v21 = BundleUtils.clone(v2);
						return v21;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public Bundle getUserRestrictions(int p1){
	Object v4 = this.mUserRestrictions.get(p1);
	Bundle v3 = v4;
	if (v3 != 0) {
		Bundle v6 = this.mBaseUserRestrictions.getRestrictions(p1);
		Bundle v7 = UserRestrictionsUtils.nonNull(v6);
		Bundle v8 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
		RestrictionsSet v9 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
		boolean v10 = BundleUtils.isEmpty(v8);
		if (v10 == 0) {
			boolean v11 = v9.isEmpty();
			if (v11 == 0) {
				Bundle v12 = BundleUtils.clone(v7);
				UserRestrictionsUtils.merge(v12, v8);
				Bundle v14 = v9.mergeAll();
				UserRestrictionsUtils.merge(v12, v14);
				Bundle v5 = v12;
				Object v17 = this.mUserRestrictions.get(p1);
				boolean v18 = UserRestrictionsUtils.areEqual(v17, v5);
				if ((v18 ^ 1) != 0) {
					boolean v19 = BundleUtils.isEmpty(v5);
					if (v19 != 0) {
						this.mUserRestrictions.delete(p1);
						boolean v16 = 1;
						Bundle v2 = ;
						Bundle v21 = BundleUtils.clone(v2);
						return v21;
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v4 = this.mUserRestrictions.get(p1);\nBundle v6 = this.mBaseUserRestrictions.getRestrictions(p1);\nRestrictionsSet v9 = UserManagerService.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);\nthis.mUserRestrictions.put(p1, v5);\nBundle v12 = BundleUtils.clone(v7);\nreturn v21;', 'Bundle v3 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);\nBundle v4 = UserManagerService.computeEffectiveUserRestrictionsLR(p1);\nboolean v5 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v4);', 'Bundle v2 = p0.getEffectiveUserRestrictions(p1);\nBundle v3 = BundleUtils.clone(v2);\nreturn v3;']

The method getUserRestrictions has the following similar APIs:

- API Name: setUserRestriction(Ljava/lang/String;ZI)V with Similarity Score: 0.8853171467781067
  - Access Control Level: SYS_OR_SIG and the following code:
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
Bundle v4 = BundleUtils.clone(v3);
v4.putBoolean(p1, p2);
p0.updateUserRestrictionsInternalLR(v4, p3);

- API Name: getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; with Similarity Score: 0.8828731775283813
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayList v3 = new ArrayList();
Bundle v8 = this.mBaseUserRestrictions.getRestrictions(p2);
boolean v9 = v8.getBoolean(p1, 0);
UserManager$EnforcingUser v10 = new UserManager$EnforcingUser(-10000,1);
boolean v12 = v3.add(v10);
Object v14 = this.mDevicePolicyLocalUserRestrictions.get(p2);
ArrayList v19 = new ArrayList();
int v21 = this.mUserRestrictions.size();
Object v22 = this.mUserRestrictions.valueAt();
boolean v23 = UserRestrictionsUtils.contains(v22, p1);
int v24 = this.mUserRestrictions.keyAt();
UserManager$EnforcingUser v25 = RestrictionsSet.getEnforcingUser(v24, this.mDeviceOwnerUserId);
boolean v26 = v19.add(v25);
List v18 = v19;
boolean v28 = v3.addAll(v18);
return v3;

