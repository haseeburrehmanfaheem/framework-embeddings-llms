The method startInstallation has the following code snippet:

This is path 1 for the API with depth 2:
public boolean startInstallation(String p1){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		if (v2 != 0) {
			IInterface v4 = v2.queryLocalInterface("android.gsi.IGsiService");
			if (v4 == 0) {
				if (v4 instanceof IGsiService == 0) {
					IGsiService$Stub$Proxy v5 = new IGsiService$Stub$Proxy(v2);
					IGsiService v3 = v5;
					IGsiService v1 = v3;
					this.mGsiService = v1;
					String v7 = SystemProperties.get("os.aot.path");
					boolean v8 = v7.isEmpty();
					if (v8 == 0) {
						int v9 = UserHandle.myUserId();
						Object v10 = this.mContext.getSystemService(StorageManage.class);
						List v11 = v10.getVolumes();
						Iterator v12 = v11.iterator();
						boolean v13 = v12.hasNext();
						if (v13 == 0) {
							Object v14 = v12.next();
							int v15 = v14.getType();
							if (v15 == 0) {
								boolean v16 = v12.hasNext();
								if (v16 == 0) {
									boolean v17 = .isEmpty();
									if (v17 == 0) {
										StringBuilder v18 = new StringBuilder();
										StringBuilder v20 = v18.append("/data/gsi/");
										StringBuilder v21 = v18.append(p1);
										String v22 = v18.toString();
										this.mInstallPath = ;
										this.mDsuSlot = p1;
										int v29 = v1.openInstall();
										if (v29 == 0) {
											return 0;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean startInstallation(String p1){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		if (v2 != 0) {
			IInterface v4 = v2.queryLocalInterface("android.gsi.IGsiService");
			if (v4 == 0) {
				if (v4 instanceof IGsiService == 0) {
					IGsiService v3 = v4;
					IGsiService v1 = v3;
					this.mGsiService = v1;
					String v5 = SystemProperties.get("os.aot.path");
					boolean v6 = v5.isEmpty();
					if (v6 == 0) {
						int v7 = UserHandle.myUserId();
						Object v8 = this.mContext.getSystemService(StorageManage.class);
						List v9 = v8.getVolumes();
						Iterator v10 = v9.iterator();
						boolean v11 = v10.hasNext();
						if (v11 == 0) {
							Object v12 = v10.next();
							int v13 = v12.getType();
							if (v13 == 0) {
								boolean v14 = v10.hasNext();
								if (v14 == 0) {
									boolean v15 = .isEmpty();
									if (v15 == 0) {
										StringBuilder v16 = new StringBuilder();
										StringBuilder v18 = v16.append("/data/gsi/");
										StringBuilder v19 = v16.append(p1);
										String v20 = v16.toString();
										this.mInstallPath = ;
										this.mDsuSlot = p1;
										int v27 = v1.openInstall();
										if (v27 == 0) {
											return 0;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean startInstallation(String p1){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		if (v2 != 0) {
			IInterface v4 = v2.queryLocalInterface("android.gsi.IGsiService");
			if (v4 == 0) {
				if (v4 instanceof IGsiService == 0) {
					IGsiService$Stub$Proxy v5 = new IGsiService$Stub$Proxy(v2);
					IGsiService v3 = v5;
					IGsiService v1 = v3;
					this.mGsiService = v1;
					String v7 = SystemProperties.get("os.aot.path");
					boolean v8 = v7.isEmpty();
					if (v8 == 0) {
						int v9 = UserHandle.myUserId();
						Object v10 = this.mContext.getSystemService(StorageManage.class);
						List v11 = v10.getVolumes();
						Iterator v12 = v11.iterator();
						boolean v13 = v12.hasNext();
						if (v13 == 0) {
							Object v14 = v12.next();
							int v15 = v14.getType();
							if (v15 == 0) {
								boolean v16 = v14.isMountedWritable();
								if (v16 != 0) {
									boolean v17 = v12.hasNext();
									if (v17 == 0) {
										boolean v18 = .isEmpty();
										if (v18 == 0) {
											this.mInstallPath = ;
											this.mDsuSlot = p1;
											int v25 = v1.openInstall();
											if (v25 == 0) {
												return 0;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['IBinder v2 = ServiceManager.waitForService("gsiservice");\nIGsiService v1 = IGsiService$Stub.asInterface(v2);\nthis.mGsiService = v1;\nStringBuilder v15 = new StringBuilder();\nStringBuilder v17 = v15.append("/data/gsi/");\nStringBuilder v18 = v15.append(p1);\nString v19 = v15.toString();\nthis.mInstallPath = ;\nthis.mDsuSlot = p1;\nint v26 = v1.openInstall();']

The method startInstallation has the following similar APIs:

- API Name: finishInstallation()Z with Similarity Score: 0.8079732060432434
  - Access Control Level: NONE and the following code:
IBinder v2 = ServiceManager.waitForService("gsiservice");
IGsiService v3 = IGsiService$Stub.asInterface(v2);
IGsiService v1 = v3;
int v4 = v1.closeInstall();

- API Name: getInstallationProgress()Landroid/gsi/GsiProgress; with Similarity Score: 0.8024364113807678
  - Access Control Level: NONE and the following code:
IBinder v2 = ServiceManager.waitForService("gsiservice");
IGsiService v3 = IGsiService$Stub.asInterface(v2);
IGsiService v1 = v3;
GsiProgress v4 = v1.getInstallProgress();
return v4;

