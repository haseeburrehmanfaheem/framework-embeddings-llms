The method setEnable has the following code snippet:

This is path 1 for the API with depth 2:
public boolean setEnable(boolean p1, boolean p2){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		if (v2 != 0) {
			IInterface v4 = v2.queryLocalInterface("android.gsi.IGsiService");
			if (v4 == 0) {
				if (v4 instanceof IGsiService == 0) {
					IGsiService$Stub$Proxy v5 = new IGsiService$Stub$Proxy(v2);
					IGsiService v3 = v5;
					IGsiService v1 = v3;
					if (p1 == 0) {
						if (this.mDsuSlot != 0) {
							String v7 = v1.getActiveDsuSlot();
							this.mDsuSlot = v7;
							DynamicSystemService$GsiServiceCallback v8 = new DynamicSystemService$GsiServiceCallback(p0);
							v1.enableGsiAsync(p2, this.mDsuSlot, v8);
							v8.wait(8192);
							int v12 = v8.getResult();
							if (v12 != 0) {
								return ;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean setEnable(boolean p1, boolean p2){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		if (v2 != 0) {
			IInterface v4 = v2.queryLocalInterface("android.gsi.IGsiService");
			if (v4 == 0) {
				if (v4 instanceof IGsiService == 0) {
					IGsiService v3 = v4;
					IGsiService v1 = v3;
					if (p1 == 0) {
						if (this.mDsuSlot != 0) {
							String v5 = v1.getActiveDsuSlot();
							this.mDsuSlot = v5;
							DynamicSystemService$GsiServiceCallback v6 = new DynamicSystemService$GsiServiceCallback(p0);
							v1.enableGsiAsync(p2, this.mDsuSlot, v6);
							v6.wait(8192);
							int v10 = v6.getResult();
							if (v10 != 0) {
								return ;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean setEnable(boolean p1, boolean p2){
	if (this.mGsiService == 0) {
		IBinder v2 = ServiceManager.waitForService("gsiservice");
		if (v2 != 0) {
			IGsiService v3 = 0;
			IGsiService v1 = v3;
			if (p1 == 0) {
				if (this.mDsuSlot != 0) {
					String v4 = v1.getActiveDsuSlot();
					this.mDsuSlot = v4;
					DynamicSystemService$GsiServiceCallback v5 = new DynamicSystemService$GsiServiceCallback(p0);
					v1.enableGsiAsync(p2, this.mDsuSlot, v5);
					v5.wait(8192);
					int v9 = v5.getResult();
					if (v9 != 0) {
						return ;
					}
				}
			}
		}
	}
}

and the following sink code:
['IGsiService v1 = p0.getGsiService();\nString v2 = v1.getActiveDsuSlot();\nDynamicSystemService$GsiServiceCallback v3 = new DynamicSystemService$GsiServiceCallback(p0);\nv1.enableGsiAsync(p2, this.mDsuSlot, v3);']

The method setEnable has the following similar APIs:

- API Name: remove()Z with Similarity Score: 0.823573648929596
  - Access Control Level: NONE and the following code:
DynamicSystemService$GsiServiceCallback v1 = new DynamicSystemService$GsiServiceCallback(p0);
IBinder v4 = ServiceManager.waitForService("gsiservice");
IGsiService v5 = 0;
IGsiService v3 = v5;
v3.removeGsiAsync(v1);
v1.wait(8192);

- API Name: remove()Z with Similarity Score: 0.8218874931335449
  - Access Control Level: NONE and the following code:
DynamicSystemService$GsiServiceCallback v1 = new DynamicSystemService$GsiServiceCallback(p0);
IGsiService v3 = p0.getGsiService();
v3.removeGsiAsync(v1);
v1.wait(8192);
int v6 = v1.getResult();

