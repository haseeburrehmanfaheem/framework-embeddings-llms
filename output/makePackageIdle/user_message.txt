// Method: makePackageIdle
// Service: ActivityManagerService_3

public void makePackageIdle() {
    int var37 = Binder.getCallingPid();
    UserController var38 = this.mUserController;
    int var40 = Binder.getCallingUid();
    int var45 = var38.handleIncomingUser(var37,var40,param3,1,2,makePackageIdle,0);
    long var47 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var50 = AppGlobals.getPackageManager();
    int var54 = var50.getPackageUid(param2,268443648,0);
    PowerManagerInternal var69 = this.mLocalPowerManager;
    PowerManagerInternal var70 = this.mLocalPowerManager;
    var70.startUidChanges();
    int var75 = UserHandle.getAppId(var57);
    ProcessList var76 = this.mProcessList;
    ActiveUids var77 = var76.mActiveUids;
    int var79 = var77.size();
    var81 = var79 add -1;
    ProcessList var82 = this.mProcessList;
    ActiveUids var83 = var82.mActiveUids;
    UidRecord var85 = var83.valueAt(var134);
    long var86 = var85.lastBackgroundTime;
    var88 = var86 lt 0;
    boolean var89 = var85.idle;
    int var90 = var85.uid;
    int var92 = UserHandle.getAppId(var90);
    int var93 = var85.uid;
    int var95 = UserHandle.getUserId(var93);
    int var99 = var85.uid;
    var85.idle = 1;
    var85.setIdle = 1;
    int var106 = var85.uid;
    String var108 = UserHandle.formatUid(var106);
    int var125 = var85.uid;
    doStopUidLocked(var125,var85);
    ActiveServices var4 = this.mServices;
    var4.stopInBackgroundLocked(param2);
    SparseArray var3 = this.mServiceMap;
    int var5 = UserHandle.getUserId(param2);
    Object var7 = var3.get(var5);
    ActiveServices$ServiceMap var8 = (ActiveServices$ServiceMap) var7;
    ArrayMap var10 = var8.mServicesByInstanceName;
    int var12 = var10.size();
    var14 = var12 add -1;
    ArrayMap var15 = var8.mServicesByInstanceName;
    Object var17 = var15.valueAt(var85);
    ServiceRecord var18 = (ServiceRecord) var17;
    ApplicationInfo var19 = var18.appInfo;
    int var20 = var19.uid;
    boolean var21 = var18.startRequested;
    ActivityManagerService var22 = this.mAm;
    ApplicationInfo var23 = var18.appInfo;
    int var24 = var23.uid;
    String var25 = var18.packageName;
    ApplicationInfo var26 = var18.appInfo;
    int var27 = var26.targetSdkVersion;
    int var30 = var22.getAppStartModeLocked(var24,var25,var27,-1,0,0,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    boolean var13 = var11.idle;
    PackageManagerInternal var16 = getPackageManagerInternalLocked();
    int var18 = UserHandle.getUserId(param2);
    boolean var20 = var16.isPackageEphemeral(var18,param3);
    int var27 = appRestrictedInBackgroundLocked(param2,param3,param4);
    ActivityManagerService$PidMap var32 = this.mPidsSelfLocked;
    ActivityManagerService$PidMap var33 = this.mPidsSelfLocked;
    ProcessRecord var35 = var33.get(param5);
    int var42 = var35.getCurProcState();
    boolean var44 = ActivityManager.isProcStateBackground(var42);{boolean var44 = ActivityManager.isProcStateBackground(var42);};
    int 0<PATH_SEP>int var37 = Binder.getCallingPid();
    UserController var38 = this.mUserController;
    int var40 = Binder.getCallingUid();
    int var45 = var38.handleIncomingUser(var37,var40,param3,1,2,makePackageIdle,0);
    long var47 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var50 = AppGlobals.getPackageManager();
    int var54 = var50.getPackageUid(param2,268443648,0);
    PowerManagerInternal var69 = this.mLocalPowerManager;
    PowerManagerInternal var70 = this.mLocalPowerManager;
    var70.startUidChanges();
    int var75 = UserHandle.getAppId(var57);
    ProcessList var76 = this.mProcessList;
    ActiveUids var77 = var76.mActiveUids;
    int var79 = var77.size();
    var81 = var79 add -1;
    ProcessList var82 = this.mProcessList;
    ActiveUids var83 = var82.mActiveUids;
    UidRecord var85 = var83.valueAt(var134);
    long var86 = var85.lastBackgroundTime;
    var88 = var86 lt 0;
    boolean var89 = var85.idle;
    int var90 = var85.uid;
    int var92 = UserHandle.getAppId(var90);
    int var93 = var85.uid;
    int var95 = UserHandle.getUserId(var93);
    int var99 = var85.uid;
    var85.idle = 1;
    var85.setIdle = 1;
    int var106 = var85.uid;
    String var108 = UserHandle.formatUid(var106);
    int var125 = var85.uid;
    doStopUidLocked(var125,var85);
    ActiveServices var4 = this.mServices;
    var4.stopInBackgroundLocked(param2);
    SparseArray var3 = this.mServiceMap;
    int var5 = UserHandle.getUserId(param2);
    Object var7 = var3.get(var5);
    ActiveServices$ServiceMap var8 = (ActiveServices$ServiceMap) var7;
    ArrayMap var10 = var8.mServicesByInstanceName;
    int var12 = var10.size();
    var14 = var12 add -1;
    ArrayMap var15 = var8.mServicesByInstanceName;
    Object var17 = var15.valueAt(var85);
    ServiceRecord var18 = (ServiceRecord) var17;
    ApplicationInfo var19 = var18.appInfo;
    int var20 = var19.uid;
    boolean var21 = var18.startRequested;
    ActivityManagerService var22 = this.mAm;
    ApplicationInfo var23 = var18.appInfo;
    int var24 = var23.uid;
    String var25 = var18.packageName;
    ApplicationInfo var26 = var18.appInfo;
    int var27 = var26.targetSdkVersion;
    int var30 = var22.getAppStartModeLocked(var24,var25,var27,-1,0,0,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    boolean var13 = var11.idle;
    boolean var14 = var11.ephemeral;
    int var25 = appServicesRestrictedInBackgroundLocked(param2,param3,param4);
    int var28<PATH_SEP>int var37 = Binder.getCallingPid();
    UserController var38 = this.mUserController;
    int var40 = Binder.getCallingUid();
    int var45 = var38.handleIncomingUser(var37,var40,param3,1,2,makePackageIdle,0);
    long var47 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var50 = AppGlobals.getPackageManager();
    int var54 = var50.getPackageUid(param2,268443648,0);
    PowerManagerInternal var69 = this.mLocalPowerManager;
    PowerManagerInternal var70 = this.mLocalPowerManager;
    var70.startUidChanges();
    int var75 = UserHandle.getAppId(var57);
    ProcessList var76 = this.mProcessList;
    ActiveUids var77 = var76.mActiveUids;
    int var79 = var77.size();
    var81 = var79 add -1;
    ProcessList var82 = this.mProcessList;
    ActiveUids var83 = var82.mActiveUids;
    UidRecord var85 = var83.valueAt(var134);
    long var86 = var85.lastBackgroundTime;
    var88 = var86 lt 0;
    boolean var89 = var85.idle;
    int var90 = var85.uid;
    int var92 = UserHandle.getAppId(var90);
    int var93 = var85.uid;
    int var95 = UserHandle.getUserId(var93);
    int var99 = var85.uid;
    var85.idle = 1;
    var85.setIdle = 1;
    int var106 = var85.uid;
    String var108 = UserHandle.formatUid(var106);
    int var125 = var85.uid;
    doStopUidLocked(var125,var85);
    ActiveServices var4 = this.mServices;
    var4.stopInBackgroundLocked(param2);
    SparseArray var3 = this.mServiceMap;
    int var5 = UserHandle.getUserId(param2);
    Object var7 = var3.get(var5);
    ActiveServices$ServiceMap var8 = (ActiveServices$ServiceMap) var7;
    ArrayMap var10 = var8.mServicesByInstanceName;
    int var12 = var10.size();
    var14 = var12 add -1;
    ArrayMap var15 = var8.mServicesByInstanceName;
    Object var17 = var15.valueAt(var85);
    ServiceRecord var18 = (ServiceRecord) var17;
    ApplicationInfo var19 = var18.appInfo;
    int var20 = var19.uid;
    boolean var21 = var18.startRequested;
    ActivityManagerService var22 = this.mAm;
    ApplicationInfo var23 = var18.appInfo;
    int var24 = var23.uid;
    String var25 = var18.packageName;
    ApplicationInfo var26 = var18.appInfo;
    int var27 = var26.targetSdkVersion;
    int var30 = var22.getAppStartModeLocked(var24,var25,var27,-1,0,0,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    boolean var13 = var11.idle;
    int 0<PATH_SEP>int var37 = Binder.getCallingPid();
    UserController var38 = this.mUserController;
    int var40 = Binder.getCallingUid();
    int var45 = var38.handleIncomingUser(var37,var40,param3,1,2,makePackageIdle,0);
    long var47 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var50 = AppGlobals.getPackageManager();
    int var54 = var50.getPackageUid(param2,268443648,0);
    PowerManagerInternal var69 = this.mLocalPowerManager;
    PowerManagerInternal var70 = this.mLocalPowerManager;
    var70.startUidChanges();
    int var75 = UserHandle.getAppId(var57);
    ProcessList var76 = this.mProcessList;
    ActiveUids var77 = var76.mActiveUids;
    int var79 = var77.size();
    var81 = var79 add -1;
    ProcessList var82 = this.mProcessList;
    ActiveUids var83 = var82.mActiveUids;
    UidRecord var85 = var83.valueAt(var134);
    long var86 = var85.lastBackgroundTime;
    var88 = var86 lt 0;
    boolean var89 = var85.idle;
    int var90 = var85.uid;
    int var92 = UserHandle.getAppId(var90);
    int var93 = var85.uid;
    int var95 = UserHandle.getUserId(var93);
    int var99 = var85.uid;
    var85.idle = 1;
    var85.setIdle = 1;
    int var106 = var85.uid;
    String var108 = UserHandle.formatUid(var106);
    int var125 = var85.uid;
    doStopUidLocked(var125,var85);
    ActiveServices var4 = this.mServices;
    var4.stopInBackgroundLocked(param2);
    SparseArray var3 = this.mServiceMap;
    int var5 = UserHandle.getUserId(param2);
    Object var7 = var3.get(var5);
    ActiveServices$ServiceMap var8 = (ActiveServices$ServiceMap) var7;
    ArrayMap var10 = var8.mServicesByInstanceName;
    int var12 = var10.size();
    var14 = var12 add -1;
    ArrayMap var15 = var8.mServicesByInstanceName;
    Object var17 = var15.valueAt(var85);
    ServiceRecord var18 = (ServiceRecord) var17;
    ApplicationInfo var19 = var18.appInfo;
    int var20 = var19.uid;
    boolean var21 = var18.startRequested;
    ActivityManagerService var22 = this.mAm;
    ApplicationInfo var23 = var18.appInfo;
    int var24 = var23.uid;
    String var25 = var18.packageName;
    ApplicationInfo var26 = var18.appInfo;
    int var27 = var26.targetSdkVersion;
    int var30 = var22.getAppStartModeLocked(var24,var25,var27,-1,0,0,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    boolean var13 = var11.idle;
    boolean var14 = var11.ephemeral;
    int var27 = appRestrictedInBackgroundLocked(param2,param3,param4);
    ActivityManagerService$PidMap var32 = this.mPidsSelfLocked;
    ActivityManagerService$PidMap var33 = this.mPidsSelfLocked;
    ProcessRecord var35 = var33.get(param5);
    int var42 = var35.getCurProcState();
    boolean var44 = ActivityManager.isProcStateBackground(var42);{boolean var44 = ActivityManager.isProcStateBackground(var42);};
    int var28;
}