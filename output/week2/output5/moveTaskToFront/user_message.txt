// API: moveTaskToFront
// Service: ActivityManagerService_6

public void moveTaskToFront() {
    ActivityTaskManagerService var7 = this.mActivityTaskManager;
    var7.moveTaskToFront(param2,param3,param4,param5,param6);
    ActivityManagerInternal var7 = this.mAmInternal;
    WindowManagerGlobalLock var11 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    SafeActivityOptions var14 = SafeActivityOptions.fromBundle(param6);
    moveTaskToFrontLocked(param2,param3,param4,param5,var14,0);
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    lcom/android/server/wm/activitytaskmanagerservice;
    issameapp(iljava/lang/string;)z >(3) { CONDITIONAL BRANCH INSTRUCTION };
    long var41 = Binder.clearCallingIdentity();
    WindowProcessController var43 = getProcessController(param2);
    ActivityStartController var49 = getActivityStartController();
    ActivityStarter var52 = var49.obtainStarter(0,moveTaskToFront);
    boolean var54 = var52.shouldAbortBackgroundActivityStart(var11,var9,param3,-1,-1,var45,0,0,0);
    int var12 = UserHandle.getAppId(param2);
    boolean 0<PATH_SEP>ActivityTaskManagerService var7 = this.mActivityTaskManager;
    var7.moveTaskToFront(param2,param3,param4,param5,param6);
    ActivityManagerInternal var7 = this.mAmInternal;
    WindowManagerGlobalLock var11 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    SafeActivityOptions var14 = SafeActivityOptions.fromBundle(param6);
    moveTaskToFrontLocked(param2,param3,param4,param5,var14,0);
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    lcom/android/server/wm/activitytaskmanagerservice;
    issameapp(iljava/lang/string;)z >(3) { CONDITIONAL BRANCH INSTRUCTION };
    long var41 = Binder.clearCallingIdentity();
    WindowProcessController var43 = getProcessController(param2);
    ActivityStartController var49 = getActivityStartController();
    ActivityStarter var52 = var49.obtainStarter(0,moveTaskToFront);
    boolean var54 = var52.shouldAbortBackgroundActivityStart(var11,var9,param3,-1,-1,var45,0,0,0);
    int var12 = UserHandle.getAppId(param2);
    ActivityTaskManagerService var16 = this.mService;
    int var18 = var16.getUidState(param2);
    ActivityTaskManagerService var19 = this.mService;
    WindowManagerService var20 = var19.mWindowManager;
    RootWindowContainer var21 = var20.mRoot;
    int var45 = UserHandle.getAppId(param5);
    ActivityTaskManagerService var47 = this.mService;
    int var49 = UserHandle.getUserId(param5);
    boolean var51 = var47.isAssociatedCompanionApp(var49,param5);
    ActivityTaskManagerService var56 = this.mService;
    ActivityStackSupervisor var60 = this.mSupervisor;
    RecentTasks var61 = var60.mRecentTasks;
    boolean var63 = var61.isCallerRecents(param2);{boolean var63 = var61.isCallerRecents(param2);};
    ActivityTaskManagerService var64 = this.mService;
    boolean var66 = var64.isDeviceOwner(param2);
    int var68 = UserHandle.getUserId(param2);
    ActivityTaskManagerService var69 = this.mService;
    boolean var71 = var69.isAssociatedCompanionApp(var68,param2);
    boolean var81 = var75.areBackgroundActivityStartsAllowed();
    ActivityTaskManagerService var82 = this.mService;
    WindowProcessControllerMap var83 = var82.mProcessMap;
    ArraySet var85 = var83.getProcesses(var76);
    ActivityTaskManagerService var109 = this.mService;
    ActivityTaskManagerService var177 = this.mService;
    ActivityStackSupervisor var180 = this.mSupervisor;
    boolean 1<PATH_SEP>ActivityTaskManagerService var7 = this.mActivityTaskManager;
    var7.moveTaskToFront(param2,param3,param4,param5,param6);
    ActivityManagerInternal var7 = this.mAmInternal;
    WindowManagerGlobalLock var11 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    SafeActivityOptions var14 = SafeActivityOptions.fromBundle(param6);
    moveTaskToFrontLocked(param2,param3,param4,param5,var14,0);
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    lcom/android/server/wm/activitytaskmanagerservice;
    issameapp(iljava/lang/string;)z >(3) { CONDITIONAL BRANCH INSTRUCTION };
    long var41 = Binder.clearCallingIdentity();
    WindowProcessController var43 = getProcessController(param2);
    ActivityStartController var49 = getActivityStartController();
    ActivityStarter var52 = var49.obtainStarter(0,moveTaskToFront);
    boolean var54 = var52.shouldAbortBackgroundActivityStart(var11,var9,param3,-1,-1,var45,0,0,0);
    int var12 = UserHandle.getAppId(param2);
    ActivityTaskManagerService var16 = this.mService;
    int var18 = var16.getUidState(param2);
    ActivityTaskManagerService var19 = this.mService;
    WindowManagerService var20 = var19.mWindowManager;
    RootWindowContainer var21 = var20.mRoot;
    int var45 = UserHandle.getAppId(param5);
    ActivityTaskManagerService var47 = this.mService;
    int var49 = UserHandle.getUserId(param5);
    boolean var51 = var47.isAssociatedCompanionApp(var49,param5);
    ActivityTaskManagerService var56 = this.mService;
    ActivityStackSupervisor var60 = this.mSupervisor;
    RecentTasks var61 = var60.mRecentTasks;
    boolean var63 = var61.isCallerRecents(param2);{boolean var63 = var61.isCallerRecents(param2);};
    ActivityTaskManagerService var64 = this.mService;
    boolean var66 = var64.isDeviceOwner(param2);
    int var68 = UserHandle.getUserId(param2);
    ActivityTaskManagerService var69 = this.mService;
    boolean var71 = var69.isAssociatedCompanionApp(var68,param2);
    ActivityTaskManagerService var72 = this.mService;
    WindowProcessController var74 = var72.getProcessController(param6,param5);
    ActivityTaskManagerService var109 = this.mService;
    ActivityTaskManagerService var177 = this.mService;
    ActivityStackSupervisor var180 = this.mSupervisor;
    boolean 1<PATH_SEP>ActivityTaskManagerService var7 = this.mActivityTaskManager;
    var7.moveTaskToFront(param2,param3,param4,param5,param6);
    ActivityManagerInternal var7 = this.mAmInternal;
    WindowManagerGlobalLock var11 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    SafeActivityOptions var14 = SafeActivityOptions.fromBundle(param6);
    moveTaskToFrontLocked(param2,param3,param4,param5,var14,0);
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    lcom/android/server/wm/activitytaskmanagerservice;
    issameapp(iljava/lang/string;)z >(3) { CONDITIONAL BRANCH INSTRUCTION };
    long var41 = Binder.clearCallingIdentity();
    WindowProcessController var43 = getProcessController(param2);
    ActivityStartController var49 = getActivityStartController();
    ActivityStarter var52 = var49.obtainStarter(0,moveTaskToFront);
    boolean var54 = var52.shouldAbortBackgroundActivityStart(var11,var9,param3,-1,-1,var45,0,0,0);
    int var12 = UserHandle.getAppId(param2);
    ActivityTaskManagerService var16 = this.mService;
    int var18 = var16.getUidState(param2);
    ActivityTaskManagerService var19 = this.mService;
    WindowManagerService var20 = var19.mWindowManager;
    RootWindowContainer var21 = var20.mRoot;
    int var45 = UserHandle.getAppId(param5);
    ActivityTaskManagerService var47 = this.mService;
    int var49 = UserHandle.getUserId(param5);
    boolean var51 = var47.isAssociatedCompanionApp(var49,param5);
    ActivityTaskManagerService var56 = this.mService;
    ActivityStackSupervisor var60 = this.mSupervisor;
    RecentTasks var61 = var60.mRecentTasks;
    boolean var63 = var61.isCallerRecents(param2);{boolean var63 = var61.isCallerRecents(param2);};
    ActivityTaskManagerService var64 = this.mService;
    boolean var66 = var64.isDeviceOwner(param2);
    int var68 = UserHandle.getUserId(param2);
    ActivityTaskManagerService var69 = this.mService;
    boolean var71 = var69.isAssociatedCompanionApp(var68,param2);
    boolean var81 = var75.areBackgroundActivityStartsAllowed();
    ActivityTaskManagerService var82 = this.mService;
    WindowProcessControllerMap var83 = var82.mProcessMap;
    ArraySet var85 = var83.getProcesses(var76);
    int var87 = var85.size();
    var89 = var87 add -1;
    Object var91 = var85.valueAt(var99);
    WindowProcessController var92 = (WindowProcessController) var91;
    boolean var94 = var92.areBackgroundActivityStartsAllowed();
}