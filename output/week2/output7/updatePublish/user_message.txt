// API: updatePublish
// Service: WifiAwareServiceImpl_4

public void updatePublish() {
    WifiAwareStateManager var11 = this.mStateManager;
    Characteristics var13 = var11.getCharacteristics();
    Context var14 = this.mContext;
    PackageManager var16 = var14.getPackageManager();
    boolean var19 = var16.hasSystemFeature(android.hardware.wifi.rtt);
    assertValid(var13,var19);{assertValid(var13,var19);};
    int var22 = getMockableCallingUid();
    enforceClientValidity(var22,param2);{enforceClientValidity(var22,param2);};
    WifiAwareStateManager var24 = this.mStateManager;
    var24.updatePublish(param2,param3,param4);
    WifiAwareStateManager$WifiAwareStateMachine var5 = this.mSm;
    Message var8 = var5.obtainMessage(1);
    var8.arg1 = 104;<PATH_SEP>WifiAwareStateManager var11 = this.mStateManager;
    Characteristics var13 = var11.getCharacteristics();
    Context var14 = this.mContext;
    PackageManager var16 = var14.getPackageManager();
    boolean var19 = var16.hasSystemFeature(android.hardware.wifi.rtt);
    assertValid(var13,var19);{assertValid(var13,var19);};
    int var22 = getMockableCallingUid();
    enforceClientValidity(var22,param2);{enforceClientValidity(var22,param2);};
    WifiAwareStateManager var24 = this.mStateManager;
    var24.updatePublish(param2,param3,param4);
    WifiAwareStateManager$WifiAwareStateMachine var5 = this.mSm;
    Message var8 = var5.obtainMessage(1);
    var8.arg1 = 104;
    var8.arg2 = param2;
    var8.obj = param4;<PATH_SEP>WifiAwareStateManager var11 = this.mStateManager;
    Characteristics var13 = var11.getCharacteristics();
    Context var14 = this.mContext;
    PackageManager var16 = var14.getPackageManager();
    boolean var19 = var16.hasSystemFeature(android.hardware.wifi.rtt);
    assertValid(var13,var19);{assertValid(var13,var19);};
    int var22 = getMockableCallingUid();
    enforceClientValidity(var22,param2);{enforceClientValidity(var22,param2);};
    WifiAwareStateManager var24 = this.mStateManager;
    var24.updatePublish(param2,param3,param4);
    WifiAwareStateManager$WifiAwareStateMachine var5 = this.mSm;
    Message var8 = var5.obtainMessage(1);
    var8.arg1 = 104;
    var8.arg2 = param2;
    var8.obj = param4;
    Bundle var11 = var8.getData();
    var11.putInt(session_id,param3);
    WifiAwareStateManager$WifiAwareStateMachine var14 = this.mSm;
    var14.sendMessage(var8);
    StateMachine$SmHandler var3 = this.mSmHandler;
    boolean var6 = var3.sendMessage(param2);<PATH_SEP>WifiAwareStateManager var11 = this.mStateManager;
    Characteristics var13 = var11.getCharacteristics();
    Context var14 = this.mContext;
    PackageManager var16 = var14.getPackageManager();
    boolean var19 = var16.hasSystemFeature(android.hardware.wifi.rtt);
    assertValid(var13,var19);{assertValid(var13,var19);};
    int var22 = getMockableCallingUid();
    enforceClientValidity(var22,param2);{enforceClientValidity(var22,param2);};
    WifiAwareStateManager var24 = this.mStateManager;
    var24.updatePublish(param2,param3,param4);
    WifiAwareStateManager$WifiAwareStateMachine var5 = this.mSm;
    Message var8 = var5.obtainMessage(1);
    var8.arg1 = 104;
    var8.arg2 = param2;
    var8.obj = param4;
    Bundle var11 = var8.getData();
    var11.putInt(session_id,param3);
}