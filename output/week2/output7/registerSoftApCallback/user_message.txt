// API: registerSoftApCallback
// Service: WifiServiceImpl_4

public void registerSoftApCallback() {
    boolean var13 = this.mVerboseLoggingEnabled;
    int var19 = Binder.getCallingUid();
    20 = conversion(J) 19;
    WifiInjector var26 = this.mWifiInjector;
    Handler var28 = var26.getClientModeImplHandler();
    -$$Lambda$WifiServiceImpl$WH1yXObMcpzajFG1KwwEOakTA7o var29 = new -$$Lambda$WifiServiceImpl$WH1yXObMcpzajFG1KwwEOakTA7o();
    boolean var32 = var28.post(var29);<PATH_SEP>boolean var13 = this.mVerboseLoggingEnabled;
    int var19 = Binder.getCallingUid();
    20 = conversion(J) 19;
    WifiInjector var26 = this.mWifiInjector;
    Handler var28 = var26.getClientModeImplHandler();
    ClientModeImpl var2 = this.mClientModeImpl;
    Handler var4 = var2.getHandler();
    Landroid/os/Handler var4<PATH_SEP>boolean var13 = this.mVerboseLoggingEnabled;
    WifiInjector var26 = this.mWifiInjector;
    Handler var28 = var26.getClientModeImplHandler();
    -$$Lambda$WifiServiceImpl$WH1yXObMcpzajFG1KwwEOakTA7o var29 = new -$$Lambda$WifiServiceImpl$WH1yXObMcpzajFG1KwwEOakTA7o();
    boolean var32 = var28.post(var29);<PATH_SEP>boolean var13 = this.mVerboseLoggingEnabled;
    int var19 = Binder.getCallingUid();
    20 = conversion(J) 19;
    WifiInjector var26 = this.mWifiInjector;
    Handler var28 = var26.getClientModeImplHandler();
    ClientModeImpl var2 = this.mClientModeImpl;
    Handler var4 = var2.getHandler();
    StateMachine$SmHandler var2 = this.mSmHandler;
    Landroid/os/Handler var2;
}