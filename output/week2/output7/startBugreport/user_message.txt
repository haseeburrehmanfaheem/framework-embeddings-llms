// API: startBugreport
// Service: BugreportManagerServiceImpl_7

public void startBugreport() {
    Context var8 = this.mContext;
    Object var13 = Preconditions.checkNotNull(param3);{Object var13 = Preconditions.checkNotNull(param3);};
    Object var15 = Preconditions.checkNotNull(param4);{Object var15 = Preconditions.checkNotNull(param4);};
    Object var17 = Preconditions.checkNotNull(param7);{Object var17 = Preconditions.checkNotNull(param7);};
    validateBugreportMode(param6);{validateBugreportMode(param6);};
    long var20 = Binder.clearCallingIdentity();
    Binder.restoreCallingIdentity(var20);
    int var26 = Binder.getCallingUid();
    AppOpsManager var27 = this.mAppOps;
    ArraySet var29 = this.mBugreportWhitelistedPackages;
    boolean var31 = var29.contains(param3);
    Object var44 = this.mLock;
    startBugreportLocked(var26,param3,param4,param5,param6,param7);
    boolean var9 = isDumpstateBinderServiceRunningLocked();{boolean var9 = isDumpstateBinderServiceRunningLocked();};
    IDumpstate var13 = startAndGetDumpstateBinderServiceLocked();<PATH_SEP>Context var8 = this.mContext;
    Object var13 = Preconditions.checkNotNull(param3);{Object var13 = Preconditions.checkNotNull(param3);};
    Object var15 = Preconditions.checkNotNull(param4);{Object var15 = Preconditions.checkNotNull(param4);};
    Object var17 = Preconditions.checkNotNull(param7);{Object var17 = Preconditions.checkNotNull(param7);};
    validateBugreportMode(param6);{validateBugreportMode(param6);};
    long var20 = Binder.clearCallingIdentity();
    Binder.restoreCallingIdentity(var20);
    int var26 = Binder.getCallingUid();
    AppOpsManager var27 = this.mAppOps;
    ArraySet var29 = this.mBugreportWhitelistedPackages;
    boolean var31 = var29.contains(param3);
    Object var44 = this.mLock;
    startBugreportLocked(var26,param3,param4,param5,param6,param7);
    boolean var9 = isDumpstateBinderServiceRunningLocked();{boolean var9 = isDumpstateBinderServiceRunningLocked();};
    IDumpstate var13 = startAndGetDumpstateBinderServiceLocked();
    SystemProperties.set(ctl.start,bugreportd);
    Landroid/os/IDumpstate var45<PATH_SEP>Context var8 = this.mContext;
    Object var13 = Preconditions.checkNotNull(param3);{Object var13 = Preconditions.checkNotNull(param3);};
    Object var15 = Preconditions.checkNotNull(param4);{Object var15 = Preconditions.checkNotNull(param4);};
    Object var17 = Preconditions.checkNotNull(param7);{Object var17 = Preconditions.checkNotNull(param7);};
    validateBugreportMode(param6);{validateBugreportMode(param6);};
    long var20 = Binder.clearCallingIdentity();
    Binder.restoreCallingIdentity(var20);
    int var26 = Binder.getCallingUid();
    AppOpsManager var27 = this.mAppOps;
    ArraySet var29 = this.mBugreportWhitelistedPackages;
    boolean var31 = var29.contains(param3);
    Object var44 = this.mLock;
    startBugreportLocked(var26,param3,param4,param5,param6,param7);
    boolean var9 = isDumpstateBinderServiceRunningLocked();{boolean var9 = isDumpstateBinderServiceRunningLocked();};
    IDumpstate var13 = startAndGetDumpstateBinderServiceLocked();
    BugreportManagerServiceImpl$DumpstateListener var14 = new BugreportManagerServiceImpl$DumpstateListener();
    var13.startBugreport(param2,param3,param4,param5,param6,var14);<PATH_SEP>Context var8 = this.mContext;
    Object var13 = Preconditions.checkNotNull(param3);{Object var13 = Preconditions.checkNotNull(param3);};
    Object var15 = Preconditions.checkNotNull(param4);{Object var15 = Preconditions.checkNotNull(param4);};
    Object var17 = Preconditions.checkNotNull(param7);{Object var17 = Preconditions.checkNotNull(param7);};
    validateBugreportMode(param6);{validateBugreportMode(param6);};
    long var20 = Binder.clearCallingIdentity();
    Binder.restoreCallingIdentity(var20);
    int var26 = Binder.getCallingUid();
    AppOpsManager var27 = this.mAppOps;
    ArraySet var29 = this.mBugreportWhitelistedPackages;
    boolean var31 = var29.contains(param3);
    Object var44 = this.mLock;
    startBugreportLocked(var26,param3,param4,param5,param6,param7);
    boolean var9 = isDumpstateBinderServiceRunningLocked();{boolean var9 = isDumpstateBinderServiceRunningLocked();};
    reportError(param7,5);
}