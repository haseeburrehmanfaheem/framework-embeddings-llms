// API: checkSlicePermission
// Service: SliceManagerService_7

public void checkSlicePermission() {
    int var9 = UserHandle.getUserId(param6);
    boolean var13 = hasFullSliceAccess(param4,var9);{boolean var13 = hasFullSliceAccess(param4,var9);};
    SlicePermissionManager var14 = this.mPermissions;
    enforceOwner(param3,param2,var9);{enforceOwner(param3,param2,var9);};
    18 = arraylength 7;
    19 = arrayload 7[25];
    Context var20 = this.mContext;
    int var36 = ContentProvider.getUserIdFromUri(param2,var9);
    String var38 = getProviderPkg(param2,var36);
    SlicePermissionManager var39 = this.mPermissions;
    var39.grantSliceAccess(param4,var9,var38,var36,param2);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    ArrayMap var3 = this.mCachedClients;
    ArrayMap var4 = this.mCachedClients;
    Object var6 = var4.get(param2);
    SliceClientPermissions var7 = (SliceClientPermissions) var6;
    String var12 = SliceClientPermissions.getFileName(param2);
    SlicePermissionManager$ParserHolder var14 = getParser(var12);
    XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);{XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);};
    SliceClientPermissions var18 = SliceClientPermissions.createFrom(var16,this);
    int var4 = getEventType();
    String var7 = getName();
    boolean var10 = equals(var7);
    int var18 = getDepth();
    SlicePermissionManager$PkgUser var19 = new SlicePermissionManager$PkgUser();
    String var20 = NAMESPACE;
    String var23 = getAttributeValue(var20,pkg);
    SliceClientPermissions var25 = new SliceClientPermissions();
    String var27 = NAMESPACE;
    String var30 = getAttributeValue(var27,fullAccess);
    int var34 = Integer.parseInt(var32);
    var25.mHasFullAccess = var36;
    int var38 = next();
    int var40 = getDepth();
    int var42 = getEventType();
    String var44 = getName();
    boolean var47 = equals(var44);
    SlicePermissionManager$PkgUser var48 = new SlicePermissionManager$PkgUser();
    String var49 = NAMESPACE;
    String var51 = getAttributeValue(var49,pkg);
    SliceClientPermissions$SliceAuthority var53 = new SliceClientPermissions$SliceAuthority();
    String var54 = NAMESPACE;
    String var56 = getAttributeValue(var54,authority);
    var53.readFrom(this);
    ArrayMap var59 = var25.mAuths;
    SlicePermissionManager$PkgUser var60 = new SlicePermissionManager$PkgUser();
    String var62 = var53.getAuthority();
    int var64 = var48.getUserId();
    Object var67 = var59.put(var60,var53);<PATH_SEP>int var9 = UserHandle.getUserId(param6);
    boolean var13 = hasFullSliceAccess(param4,var9);{boolean var13 = hasFullSliceAccess(param4,var9);};
    SlicePermissionManager var14 = this.mPermissions;
    enforceOwner(param3,param2,var9);{enforceOwner(param3,param2,var9);};
    18 = arraylength 7;
    19 = arrayload 7[25];
    Context var20 = this.mContext;
    int var36 = ContentProvider.getUserIdFromUri(param2,var9);
    String var38 = getProviderPkg(param2,var36);
    SlicePermissionManager var39 = this.mPermissions;
    var39.grantSliceAccess(param4,var9,var38,var36,param2);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    ArrayMap var3 = this.mCachedClients;
    ArrayMap var4 = this.mCachedClients;
    Object var6 = var4.get(param2);
    SliceClientPermissions var7 = (SliceClientPermissions) var6;
    String var12 = SliceClientPermissions.getFileName(param2);
    SlicePermissionManager$ParserHolder var14 = getParser(var12);
    XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);{XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);};
    SliceClientPermissions var18 = SliceClientPermissions.createFrom(var16,this);
    ArrayMap var19 = this.mCachedClients;
    ArrayMap var20 = this.mCachedClients;
    Object var22 = var20.put(param2,var18);<PATH_SEP>int var9 = UserHandle.getUserId(param6);
    boolean var13 = hasFullSliceAccess(param4,var9);{boolean var13 = hasFullSliceAccess(param4,var9);};
    SlicePermissionManager var14 = this.mPermissions;
    enforceOwner(param3,param2,var9);{enforceOwner(param3,param2,var9);};
    18 = arraylength 7;
    19 = arrayload 7[25];
    Context var20 = this.mContext;
    int var36 = ContentProvider.getUserIdFromUri(param2,var9);
    String var38 = getProviderPkg(param2,var36);
    SlicePermissionManager var39 = this.mPermissions;
    var39.grantSliceAccess(param4,var9,var38,var36,param2);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    ArrayMap var3 = this.mCachedClients;
    ArrayMap var4 = this.mCachedClients;
    Object var6 = var4.get(param2);
    SliceClientPermissions var7 = (SliceClientPermissions) var6;
    String var12 = SliceClientPermissions.getFileName(param2);
    Object var3 = new Object(1);
    String var5 = toString();
    arraystore 3[6] = 5;
    String var9 = String.format(client_%s,var3);
    Ljava/lang/String var9<PATH_SEP>int var9 = UserHandle.getUserId(param6);
    boolean var13 = hasFullSliceAccess(param4,var9);{boolean var13 = hasFullSliceAccess(param4,var9);};
    SlicePermissionManager var14 = this.mPermissions;
    enforceOwner(param3,param2,var9);{enforceOwner(param3,param2,var9);};
    18 = arraylength 7;
    19 = arrayload 7[25];
    Context var20 = this.mContext;
    int var36 = ContentProvider.getUserIdFromUri(param2,var9);
    String var38 = getProviderPkg(param2,var36);
    SlicePermissionManager var39 = this.mPermissions;
    var39.grantSliceAccess(param4,var9,var38,var36,param2);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    var12.grantUri(param6,var9);
    SliceProviderPermissions var15 = getProvider(var9);
    ArrayMap var3 = this.mCachedProviders;
    ArrayMap var4 = this.mCachedProviders;
    Object var6 = var4.get(param2);
    SliceProviderPermissions var7 = (SliceProviderPermissions) var6;
    String var12 = SliceProviderPermissions.getFileName(param2);
    SlicePermissionManager$ParserHolder var14 = getParser(var12);
    XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);{XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);};
    SliceProviderPermissions var18 = SliceProviderPermissions.createFrom(var16,this);
    int var4 = getEventType();
    String var7 = getName();
    boolean var10 = equals(var7);
    int var18 = getDepth();
    SlicePermissionManager$PkgUser var19 = new SlicePermissionManager$PkgUser();
    String var20 = NAMESPACE;
    String var23 = getAttributeValue(var20,pkg);
    SliceProviderPermissions var25 = new SliceProviderPermissions();
    int var28 = next();
    int var30 = getDepth();
    Lcom/android/server/slice/SliceProviderPermissions var25;
}