// API: updateRotation
// Service: WindowManagerService_3

public void updateRotation() {
    updateRotationUnchecked(param2,param3);
    Trace.traceBegin(32,updateRotation);
    long var8 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var9 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var12 = this.mRoot;
    WindowList var13 = var12.mChildren;
    int var15 = var13.size();
    RootWindowContainer var16 = this.mRoot;
    WindowList var17 = var16.mChildren;
    Object var19 = var17.get(var35);
    DisplayContent var20 = (DisplayContent) var19;
    Trace.traceBegin(32,updateRotation: display);
    boolean var24 = var20.updateRotationUnchecked();
    boolean var4 = updateRotationUnchecked(0);
    int var4 = this.mDeferredRotationPauseCount;
    WindowManagerService var5 = this.mWmService;
    WindowAnimator var6 = var5.mAnimator;
    int var7 = this.mDisplayId;
    ScreenRotationAnimation var9 = var6.getScreenRotationAnimationLocked(var7);
    boolean var11 = var9.isAnimating();
    WindowManagerService var15 = this.mWmService;
    boolean var16 = var15.mDisplayFrozen;
    WindowManagerService var17 = this.mWmService;
    boolean var18 = var17.mDisplayEnabled;
    int var19 = this.mRotation;
    int var20 = this.mLastOrientation;
    DisplayRotation var21 = this.mDisplayRotation;
    int var23 = var21.rotationForOrientation(var20,var19);
    DisplayPolicy var24 = this.mDisplayPolicy;
    DisplayRotation var25 = this.mDisplayRotation;
    boolean var27 = var24.shouldRotateSeamlessly(var25,var19,var23);
    -$$Lambda$DisplayContent$05CtqlkxQvjLanO8D5BmaCdILKQ var28 = INSTANCE;
    WindowState var30 = getWindow(var28);
    boolean var32 = hasPinnedStack();
    WindowManagerService var34 = this.mWmService;
    ArraySet var35 = var34.mSessions;
    int var37 = var35.size();
    WindowManagerService var38 = this.mWmService;
    ArraySet var39 = var38.mSessions;
    Object var41 = var39.valueAt(var47);
    Session var42 = (Session) var41;
    boolean var44 = var42.hasAlertWindowSurfaces();
    int var56 = DisplayContent.deltaRotation(var23,var19);
    this.mWaitingForConfig = 1;
    this.mRotation = var23;
    WindowManagerService var59 = this.mWmService;
    var59.mWindowsFreezingScreen = 1;
    WindowManagerService var60 = this.mWmService;
    WindowManagerService$H var61 = var60.mH;
    var61.sendNewMessageDelayed(11,this,2000);
    setLayoutNeeded();
    [I var66 = new [I(2);
    DisplayPolicy var67 = this.mDisplayPolicy;
    var67.selectRotationAnimationLw(var66);
    WindowManagerService var71 = this.mWmService;
    72 = arrayload 66[3];
    73 = arrayload 66[58];
    var71.startFreezingDisplayLocked(var72,var73,this);
    boolean 1;
}