// API: getSharedLibraries
// Service: PackageManagerService_4

public void getSharedLibraries() {
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    int var13 = Binder.getCallingUid();
    String var15 = getInstantAppPackageName(var13);
    int var17 = updateFlagsForPackage(param3,param4,0);
    Context var18 = this.mContext;
    Context var23 = this.mContext;
    Context var29 = this.mContext;
    Context var33 = this.mContext;
    ArrayMap var47 = this.mPackages;
    ArrayMap var48 = this.mSharedLibraries;
    int var50 = var48.size();
    ArrayMap var51 = this.mSharedLibraries;
    Object var53 = var51.valueAt(var131);
    LongSparseArray var54 = (LongSparseArray) var53;
    int var56 = var54.size();
    Object var58 = var54.valueAt(var119);
    SharedLibraryInfo var59 = (SharedLibraryInfo) var58;
    boolean var61 = var59.isStatic();
    long var66 = Binder.clearCallingIdentity();
    VersionedPackage var68 = var59.getDeclaringPackage();
    var69 = var17 or 67108864;
    PackageInfo var71 = getPackageInfoVersioned(var68,var69,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    int var54 = var49.size();
    int var59 = var12.size();
    Object var61 = var12.valueAt(var92);
    SharedLibraryInfo var62 = (SharedLibraryInfo) var61;
    VersionedPackage var72 = var62.getDeclaringPackage();
    long var74 = var72.getLongVersionCode();
    var76 = param3 lt -1;
    var77 = var74 lt param3;
    String var103 = var62.getPackageName();
    Ljava/lang/String var103<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    int var13 = Binder.getCallingUid();
    String var15 = getInstantAppPackageName(var13);
    int var17 = updateFlagsForPackage(param3,param4,0);
    Context var18 = this.mContext;
    Context var23 = this.mContext;
    Context var29 = this.mContext;
    Context var33 = this.mContext;
    ArrayMap var47 = this.mPackages;
    ArrayMap var48 = this.mSharedLibraries;
    int var50 = var48.size();
    ArrayMap var51 = this.mSharedLibraries;
    Object var53 = var51.valueAt(var131);
    LongSparseArray var54 = (LongSparseArray) var53;
    int var56 = var54.size();
    Object var58 = var54.valueAt(var119);
    SharedLibraryInfo var59 = (SharedLibraryInfo) var58;
    boolean var61 = var59.isStatic();
    long var66 = Binder.clearCallingIdentity();
    VersionedPackage var68 = var59.getDeclaringPackage();
    var69 = var17 or 67108864;
    PackageInfo var71 = getPackageInfoVersioned(var68,var69,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    int var54 = var49.size();
    Ljava/lang/String var8<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    int var13 = Binder.getCallingUid();
    String var15 = getInstantAppPackageName(var13);
    int var17 = updateFlagsForPackage(param3,param4,0);
    Context var18 = this.mContext;
    Context var23 = this.mContext;
    Context var29 = this.mContext;
    Context var33 = this.mContext;
    ArrayMap var47 = this.mPackages;
    ArrayMap var48 = this.mSharedLibraries;
    int var50 = var48.size();
    ArrayMap var51 = this.mSharedLibraries;
    Object var53 = var51.valueAt(var131);
    LongSparseArray var54 = (LongSparseArray) var53;
    int var56 = var54.size();
    Object var58 = var54.valueAt(var119);
    SharedLibraryInfo var59 = (SharedLibraryInfo) var58;
    boolean var61 = var59.isStatic();
    long var66 = Binder.clearCallingIdentity();
    VersionedPackage var68 = var59.getDeclaringPackage();
    var69 = var17 or 67108864;
    PackageInfo var71 = getPackageInfoVersioned(var68,var69,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    LongSparseLongArray var21 = new LongSparseLongArray();
    Object var24 = var12.valueAt(0);
    SharedLibraryInfo var25 = (SharedLibraryInfo) var24;
    String var27 = var25.getName();
    int var29 = Binder.getCallingUid();
    String var31 = getPackagesForUid(var29);
    32 = arraylength 31;
    int var59 = var12.size();
    String var101 = var91.getPackageName();
    Ljava/lang/String var101<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var11 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    int var13 = Binder.getCallingUid();
    String var15 = getInstantAppPackageName(var13);
    int var17 = updateFlagsForPackage(param3,param4,0);
    Context var18 = this.mContext;
    Context var23 = this.mContext;
    Context var29 = this.mContext;
    Context var33 = this.mContext;
    ArrayMap var47 = this.mPackages;
    ArrayMap var48 = this.mSharedLibraries;
    int var50 = var48.size();
    ArrayMap var51 = this.mSharedLibraries;
    Object var53 = var51.valueAt(var131);
    LongSparseArray var54 = (LongSparseArray) var53;
    int var56 = var54.size();
    Object var58 = var54.valueAt(var119);
    SharedLibraryInfo var59 = (SharedLibraryInfo) var58;
    boolean var61 = var59.isStatic();
    long var66 = Binder.clearCallingIdentity();
    VersionedPackage var68 = var59.getDeclaringPackage();
    var69 = var17 or 67108864;
    PackageInfo var71 = getPackageInfoVersioned(var68,var69,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    int var59 = var12.size();
    String var101 = var91.getPackageName();
    Ljava/lang/String var101;
}