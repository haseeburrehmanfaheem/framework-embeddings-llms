// API: getActiveNetworkInfoForUid
// Service: ConnectivityService_3

public void getActiveNetworkInfoForUid() {
    NetworkState var6 = getUnfilteredActiveNetworkState(param2);
    filterNetworkStateForUid(var6,param2,param3);
    NetworkInfo var6 = param2.networkInfo;
    LinkProperties var7 = param2.linkProperties;
    LinkProperties var8 = param2.linkProperties;
    boolean var10 = isNetworkWithLinkPropertiesBlocked(var8,param3,param4);
    NetworkInfo var11 = param2.networkInfo;
    NetworkInfo$DetailedState var12 = BLOCKED;
    var11.setDetailedState(var12,0,0);
    SparseArray var16 = this.mVpns;
    LockdownVpnTracker var17 = this.mLockdownTracker;
    LockdownVpnTracker var18 = this.mLockdownTracker;
    NetworkInfo var19 = param2.networkInfo;
    var18.augmentNetworkInfo(var19);
    boolean var4 = isConnected();
    Vpn var6 = this.mVpn;
    NetworkInfo var8 = var6.getNetworkInfo();
    NetworkInfo var2 = this.mNetworkInfo;
    Landroid/net/NetworkInfo var2<PATH_SEP>NetworkState var6 = getUnfilteredActiveNetworkState(param2);
    NetworkAgentInfo var4 = getDefaultNetwork();
    Network var6 = getVpnUnderlyingNetworks(param2);
    SparseArray var3 = this.mVpns;
    boolean var4 = this.mLockdownEnabled;
    int var7 = UserHandle.getUserId(param2);
    SparseArray var8 = this.mVpns;
    Object var10 = var8.get(var7);
    Vpn var11 = (Vpn) var10;
    boolean var13 = var11.appliesToUid(param2);
    boolean var4 = isRunningLocked();
    NetworkCapabilities var6 = this.mNetworkCapabilities;
    boolean var8 = var6.appliesToUid(param2);
    boolean var8<PATH_SEP>NetworkState var6 = getUnfilteredActiveNetworkState(param2);
    NetworkAgentInfo var4 = getDefaultNetwork();
    Network var6 = getVpnUnderlyingNetworks(param2);
    SparseArray var3 = this.mVpns;
    boolean var4 = this.mLockdownEnabled;
    int var7 = UserHandle.getUserId(param2);
    SparseArray var8 = this.mVpns;
    Object var10 = var8.get(var7);
    Vpn var11 = (Vpn) var10;
    boolean var13 = var11.appliesToUid(param2);
    Network var18 = var11.getUnderlyingNetworks();
    boolean var3 = isRunningLocked();
    VpnConfig var5 = this.mConfig;
    Network var6 = var5.underlyingNetworks;
    NetworkState var6 = getUnfilteredActiveNetworkState(param2);
    filterNetworkStateForUid(var6,param2,param3);
    NetworkInfo var6 = param2.networkInfo;
    LinkProperties var7 = param2.linkProperties;
    LinkProperties var8 = param2.linkProperties;
    boolean var10 = isNetworkWithLinkPropertiesBlocked(var8,param3,param4);
    SparseArray var6 = this.mVpns;
    SparseArray var7 = this.mVpns;
    int var9 = UserHandle.getUserId(param3);
    Object var11 = var7.get(var9);
    Vpn var12 = (Vpn) var11;
    boolean var14 = var12.getLockdown();
    String var21 = getInterfaceName();
    String var2 = this.mIfaceName;
    Ljava/lang/String var2;
}