// API: disableShortcuts
// Service: ShortcutService_6

public void disableShortcuts() {
    Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);{Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);};
    Object var11 = this.mLock;
    throwIfUserLockedL(param6);
    ShortcutPackage var14 = getPackageShortcutsForPublisherLocked(param2,param6);
    ShortcutUser var5 = getUserShortcutsLocked(param3);
    ShortcutPackage var7 = var5.getPackageShortcuts(param2);
    ShortcutUser var9 = var7.getUser();
    var9.onCalledByPublisher(param2);
    detectLocaleChange();
    ShortcutService var2 = this.mService;
    int var3 = this.mUserId;
    String var5 = var2.injectGetLocaleTagsForUser(var3);
    String var6 = this.mKnownLocales;
    boolean var8 = TextUtils.isEmpty(var6);
    this.mKnownLocales = var5;<PATH_SEP>Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);{Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);};
    Object var11 = this.mLock;
    throwIfUserLockedL(param6);
    ShortcutPackage var14 = getPackageShortcutsForPublisherLocked(param2,param6);
    var14.ensureImmutableShortcutsNotIncludedWithIds(param3,1);{var14.ensureImmutableShortcutsNotIncludedWithIds(param3,1);};
    int var24 = size();
    var25 = var24 sub 1;
    Object var27 = get(var42);
    String var28 = (String) var27;
    CharSequence var30 = Preconditions.checkStringNotEmpty(var28);{CharSequence var30 = Preconditions.checkStringNotEmpty(var28);};
    String var31 = (String) var30;
    boolean var33 = var14.isShortcutExistsAndVisibleToPublisher(var31);
    ShortcutInfo var4 = findShortcutById(param2);
    boolean var7 = var4.isVisibleToPublisher();
    boolean var11<PATH_SEP>Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);{Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);};
    Object var11 = this.mLock;
    throwIfUserLockedL(param6);
    ShortcutPackage var14 = getPackageShortcutsForPublisherLocked(param2,param6);
    var14.ensureImmutableShortcutsNotIncludedWithIds(param3,1);{var14.ensureImmutableShortcutsNotIncludedWithIds(param3,1);};
    int var24 = size();
    var25 = var24 sub 1;
    Object var27 = get(var42);
    String var28 = (String) var27;
    CharSequence var30 = Preconditions.checkStringNotEmpty(var28);{CharSequence var30 = Preconditions.checkStringNotEmpty(var28);};
    String var31 = (String) var30;
    boolean var33 = var14.isShortcutExistsAndVisibleToPublisher(var31);
    ShortcutInfo var4 = findShortcutById(param2);
    boolean var11<PATH_SEP>Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);{Object var10 = Preconditions.checkNotNull(param3,shortcutIds must be provided);};
    Object var11 = this.mLock;
    throwIfUserLockedL(param6);
    ShortcutPackage var14 = getPackageShortcutsForPublisherLocked(param2,param6);
    ShortcutUser var5 = getUserShortcutsLocked(param3);
    ShortcutPackage var7 = var5.getPackageShortcuts(param2);
    ShortcutUser var9 = var7.getUser();
    var9.onCalledByPublisher(param2);
    detectLocaleChange();
    ShortcutService var2 = this.mService;
    int var3 = this.mUserId;
    String var5 = var2.injectGetLocaleTagsForUser(var3);
    String var6 = this.mKnownLocales;
    boolean var8 = TextUtils.isEmpty(var6);
    String var10 = this.mKnownLocales;
    boolean var12 = var10.equals(var5);
}