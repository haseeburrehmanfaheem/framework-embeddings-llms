// API: getNetworkStatsDetail
// Service: NetworkManagementService_1

public void getNetworkStatsDetail() {
    Context var2 = this.mContext;
    NetworkStatsFactory var6 = this.mStatsFactory;
    NetworkStats var8 = var6.readNetworkStatsDetail();
    String var2 = INTERFACES_ALL;
    NetworkStats var5 = readNetworkStatsDetail(-1,var2,-1);
    Object var5 = sPersistentDataLock;
    VpnInfo var6 = sVpnInfos;
    NetworkStats var7 = this.mPersistSnapshot;
    NetworkStats var9 = var7.clone();
    NetworkStats var10 = new NetworkStats();
    long var12 = SystemClock.elapsedRealtime();
    boolean var15 = this.mUseBpfStats;
    requestSwapActiveStatsMapLocked();
    File var31 = this.mStatsXtUid;
    String var33 = var31.getAbsolutePath();
    String var34 = INTERFACES_ALL;
    boolean var35 = this.mUseBpfStats;
    int var37 = NetworkStatsFactory.nativeReadNetworkStatsDetail(var10,var33,-1,var34,-1,var35);
    NetworkStats var40 = this.mPersistSnapshot;
    long var42 = var10.getElapsedRealtime();
    var40.setElapsedRealtime(var42);
    NetworkStats var44 = this.mPersistSnapshot;
    var44.combineAllValues(var10);
    NetworkStats var54 = this.mPersistSnapshot;
    NetworkStats var56 = adjustForTunAnd464Xlat(var54,var9,var6);
    NetworkStats var6 = subtract(param3);
    ConcurrentHashMap var7 = sStackedIfaces;
    boolean var8 = this.mUseBpfStats;
    var6.apply464xlatAdjustments(var7,var8);
    10 = arraylength 4;
    var6.filterDebugEntries();
    NetworkStats var22 = this.mTunAnd464xlatAdjustedStats;
    var22.combineAllValues(var6);
    NetworkStats var24 = this.mTunAnd464xlatAdjustedStats;
    long var26 = getElapsedRealtime();
    var24.setElapsedRealtime(var26);<PATH_SEP>Context var2 = this.mContext;
    NetworkStatsFactory var6 = this.mStatsFactory;
    NetworkStats var8 = var6.readNetworkStatsDetail();
    String var2 = INTERFACES_ALL;
    NetworkStats var5 = readNetworkStatsDetail(-1,var2,-1);
    Object var5 = sPersistentDataLock;
    VpnInfo var6 = sVpnInfos;
    NetworkStats var7 = this.mPersistSnapshot;
    NetworkStats var9 = var7.clone();
    NetworkStats var10 = new NetworkStats();
    long var12 = SystemClock.elapsedRealtime();
    boolean var15 = this.mUseBpfStats;
    requestSwapActiveStatsMapLocked();
    File var31 = this.mStatsXtUid;
    String var33 = var31.getAbsolutePath();
    String var34 = INTERFACES_ALL;
    boolean var35 = this.mUseBpfStats;
    int var37 = NetworkStatsFactory.nativeReadNetworkStatsDetail(var10,var33,-1,var34,-1,var35);
    NetworkStats var40 = this.mPersistSnapshot;
    long var42 = var10.getElapsedRealtime();
    var40.setElapsedRealtime(var42);<PATH_SEP>Context var2 = this.mContext;
    NetworkStatsFactory var6 = this.mStatsFactory;
    NetworkStats var8 = var6.readNetworkStatsDetail();
    String var2 = INTERFACES_ALL;
    NetworkStats var5 = readNetworkStatsDetail(-1,var2,-1);
    Object var5 = sPersistentDataLock;
    VpnInfo var6 = sVpnInfos;
    NetworkStats var7 = this.mPersistSnapshot;
    NetworkStats var9 = var7.clone();
    NetworkStats var10 = new NetworkStats();
    long var12 = SystemClock.elapsedRealtime();
    boolean var15 = this.mUseBpfStats;
    File var16 = this.mStatsXtUid;
    String var18 = var16.getAbsolutePath();
    String var20 = INTERFACES_ALL;
    boolean var21 = this.mUseBpfStats;
    int var23 = NetworkStatsFactory.nativeReadNetworkStatsDetail(var10,var18,-1,var20,-1,var21);
    this.mPersistSnapshot = var10;
    NetworkStats var54 = this.mPersistSnapshot;
    NetworkStats var56 = adjustForTunAnd464Xlat(var54,var9,var6);
    var56.filter(param2,param3,param4);
    Landroid/net/NetworkStats var56<PATH_SEP>Context var2 = this.mContext;
    NetworkStatsFactory var6 = this.mStatsFactory;
    NetworkStats var8 = var6.readNetworkStatsDetail();
    String var2 = INTERFACES_ALL;
    NetworkStats var5 = readNetworkStatsDetail(-1,var2,-1);
    Object var5 = sPersistentDataLock;
    VpnInfo var6 = sVpnInfos;
    NetworkStats var7 = this.mPersistSnapshot;
    NetworkStats var9 = var7.clone();
    NetworkStats var10 = new NetworkStats();
    long var12 = SystemClock.elapsedRealtime();
    boolean var15 = this.mUseBpfStats;
    requestSwapActiveStatsMapLocked();
    File var31 = this.mStatsXtUid;
    String var33 = var31.getAbsolutePath();
    String var34 = INTERFACES_ALL;
    boolean var35 = this.mUseBpfStats;
    int var37 = NetworkStatsFactory.nativeReadNetworkStatsDetail(var10,var33,-1,var34,-1,var35);
    NetworkStats var40 = this.mPersistSnapshot;
    long var42 = var10.getElapsedRealtime();
    var40.setElapsedRealtime(var42);
    this.elapsedRealtime = param2;
}