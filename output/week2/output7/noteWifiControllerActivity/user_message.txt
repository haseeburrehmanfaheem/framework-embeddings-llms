// API: noteWifiControllerActivity
// Service: BatteryStatsService_2

public void noteWifiControllerActivity() {
    boolean var6 = isValid();{boolean var6 = isValid();};
    BatteryStatsImpl var7 = this.mStats;
    var7.updateWifiState(param2);
    Object var4 = this.mWifiNetworkLock;
    String var5 = this.mWifiIfaces;
    NetworkStats var7 = readNetworkStatsLocked(var5);
    NetworkStats var8 = this.mLastWifiNetworkStats;
    Pools$Pool var9 = this.mNetworkStatsPool;
    Object var11 = var9.acquire();
    NetworkStats var12 = (NetworkStats) var11;
    NetworkStats var14 = NetworkStats.subtract(var7,var8,0,0,var12);
    long var6 = this.elapsedRealtime;
    long var7 = param2.elapsedRealtime;
    var8 = var6 sub var7;
    var10 = var8 lt 0;
    foundNonMonotonic(this,-1,param2,-1,param4);
    NetworkStats$Entry var20 = new NetworkStats$Entry();
    int var22 = param5.capacity;
    int var23 = this.size;
    param5.size = 0;
    param5.elapsedRealtime = var18;
    int var33 = this.size;
    String var34 = this.iface;
    35 = arrayload 34[125];
    var20.iface = var35;
    [I var36 = this.uid;
    37 = arrayload 36[125];
    var20.uid = var37;
    [I var38 = this.set;
    39 = arrayload 38[125];
    var20.set = var39;
    [I var40 = this.tag;
    41 = arrayload 40[125];
    var20.tag = var41;
    [I var42 = this.metered;
    43 = arrayload 42[125];
    var20.metered = var43;
    [I var44 = this.roaming;
    45 = arrayload 44[125];
    var20.roaming = var45;
    [I var46 = this.defaultNetwork;
    47 = arrayload 46[125];
    var20.defaultNetwork = var47;
    [J var48 = this.rxBytes;
    49 = arrayload 48[125];
    var20.rxBytes = var49;
    [J var50 = this.rxPackets;
    51 = arrayload 50[125];
    var20.rxPackets = var51;
    [J var52 = this.txBytes;
    53 = arrayload 52[125];
    var20.txBytes = var53;
    [J var54 = this.txPackets;
    55 = arrayload 54[125];
    var20.txPackets = var55;
    [J var56 = this.operations;
    57 = arrayload 56[125];
    var20.operations = var57;
    String var58 = var20.iface;
    int var59 = var20.uid;
    int var60 = var20.set;
    int var61 = var20.tag;
    int var62 = var20.metered;
    int var63 = var20.roaming;
    int var64 = var20.defaultNetwork;
    int var66 = findIndexHinted(var58,var59,var60,var61,var62,var63,var64,var125);
    long var67 = var20.rxBytes;
    [J var68 = param2.rxBytes;
    69 = arrayload 68[66];
    var70 = var67 sub var69;
    var20.rxBytes = var70;
    long var71 = var20.rxPackets;
    [J var72 = param2.rxPackets;
    73 = arrayload 72[66];
    var74 = var71 sub var73;
    var20.rxPackets = var74;
    long var75 = var20.txBytes;
    [J var76 = param2.txBytes;
    77 = arrayload 76[66];
    var78 = var75 sub var77;
    var20.txBytes = var78;
    long var79 = var20.txPackets;
    [J var80 = param2.txPackets;
    81 = arrayload 80[66];
    var82 = var79 sub var81;
    var20.txPackets = var82;<PATH_SEP>boolean var6 = isValid();{boolean var6 = isValid();};
    BatteryStatsImpl var7 = this.mStats;
    var7.updateWifiState(param2);
    Object var4 = this.mWifiNetworkLock;
    String var5 = this.mWifiIfaces;
    NetworkStats var7 = readNetworkStatsLocked(var5);
    NetworkStats var8 = this.mLastWifiNetworkStats;
    Pools$Pool var9 = this.mNetworkStatsPool;
    Object var11 = var9.acquire();
    NetworkStats var12 = (NetworkStats) var11;
    NetworkStats var14 = NetworkStats.subtract(var7,var8,0,0,var12);
    long var6 = this.elapsedRealtime;
    long var7 = param2.elapsedRealtime;
    var8 = var6 sub var7;
    var10 = var8 lt 0;
    foundNonMonotonic(this,-1,param2,-1,param4);
    NetworkStats$Entry var20 = new NetworkStats$Entry();
    int var22 = param5.capacity;
    int var23 = this.size;
    param5.size = 0;
    param5.elapsedRealtime = var18;
    int var33 = this.size;
    String var34 = this.iface;
    35 = arrayload 34[125];
    var20.iface = var35;
    [I var36 = this.uid;
    37 = arrayload 36[125];
    var20.uid = var37;
    [I var38 = this.set;
    39 = arrayload 38[125];
    var20.set = var39;
    [I var40 = this.tag;
    41 = arrayload 40[125];
    var20.tag = var41;
    [I var42 = this.metered;
    43 = arrayload 42[125];
    var20.metered = var43;
    [I var44 = this.roaming;
    45 = arrayload 44[125];
    var20.roaming = var45;
    [I var46 = this.defaultNetwork;
    47 = arrayload 46[125];
    var20.defaultNetwork = var47;
    [J var48 = this.rxBytes;
    49 = arrayload 48[125];
    var20.rxBytes = var49;
    [J var50 = this.rxPackets;
    51 = arrayload 50[125];
    var20.rxPackets = var51;
    [J var52 = this.txBytes;
    53 = arrayload 52[125];
    var20.txBytes = var53;
    [J var54 = this.txPackets;
    55 = arrayload 54[125];
    var20.txPackets = var55;
    [J var56 = this.operations;
    57 = arrayload 56[125];
    var20.operations = var57;
    String var58 = var20.iface;
    int var59 = var20.uid;
    int var60 = var20.set;
    int var61 = var20.tag;
    int var62 = var20.metered;
    int var63 = var20.roaming;
    int var64 = var20.defaultNetwork;
    int var66 = findIndexHinted(var58,var59,var60,var61,var62,var63,var64,var125);
    int var11 = this.size;
    var13 = var42 div 2;
    var14 = var42 rem 2;
    var15 = param9 add var13;
    var16 = var15 rem var11;
    [I var23 = this.uid;
    24 = arrayload 23[22];
    [I var25 = this.set;
    26 = arrayload 25[22];
    [I var27 = this.tag;
    28 = arrayload 27[22];
    [I var29 = this.metered;
    30 = arrayload 29[22];
    [I var31 = this.roaming;
    32 = arrayload 31[22];
    [I var33 = this.defaultNetwork;
    34 = arrayload 33[22];
    String var35 = this.iface;
    36 = arrayload 35[22];
    boolean var38 = Objects.equals(param2,var36);
    int var22<PATH_SEP>boolean var6 = isValid();{boolean var6 = isValid();};
    BatteryStatsImpl var7 = this.mStats;
    var7.updateWifiState(param2);
    Object var4 = this.mWifiNetworkLock;
    String var5 = this.mWifiIfaces;
    NetworkStats var7 = readNetworkStatsLocked(var5);
    NetworkStats var8 = this.mLastWifiNetworkStats;
    Pools$Pool var9 = this.mNetworkStatsPool;
    Object var11 = var9.acquire();
    NetworkStats var12 = (NetworkStats) var11;
    NetworkStats var14 = NetworkStats.subtract(var7,var8,0,0,var12);
    long var6 = this.elapsedRealtime;
    long var7 = param2.elapsedRealtime;
    var8 = var6 sub var7;
    var10 = var8 lt 0;
    foundNonMonotonic(this,-1,param2,-1,param4);
    NetworkStats$Entry var20 = new NetworkStats$Entry();
    int var22 = param5.capacity;
    int var23 = this.size;
    param5.size = 0;
    param5.elapsedRealtime = var18;
    int var33 = this.size;
    String var34 = this.iface;
    35 = arrayload 34[125];
    var20.iface = var35;
    [I var36 = this.uid;
    37 = arrayload 36[125];
    var20.uid = var37;
    [I var38 = this.set;
    39 = arrayload 38[125];
    var20.set = var39;
    [I var40 = this.tag;
    41 = arrayload 40[125];
    var20.tag = var41;
    [I var42 = this.metered;
    43 = arrayload 42[125];
    var20.metered = var43;
    [I var44 = this.roaming;
    45 = arrayload 44[125];
    var20.roaming = var45;
    [I var46 = this.defaultNetwork;
    47 = arrayload 46[125];
    var20.defaultNetwork = var47;
    [J var48 = this.rxBytes;
    49 = arrayload 48[125];
    var20.rxBytes = var49;
    [J var50 = this.rxPackets;
    51 = arrayload 50[125];
    var20.rxPackets = var51;
    [J var52 = this.txBytes;
    53 = arrayload 52[125];
    var20.txBytes = var53;
    [J var54 = this.txPackets;
    55 = arrayload 54[125];
    var20.txPackets = var55;
    [J var56 = this.operations;
    57 = arrayload 56[125];
    var20.operations = var57;
    String var58 = var20.iface;
    int var59 = var20.uid;
    int var60 = var20.set;
    int var61 = var20.tag;
    int var62 = var20.metered;
    int var63 = var20.roaming;
    int var64 = var20.defaultNetwork;
    int var66 = findIndexHinted(var58,var59,var60,var61,var62,var63,var64,var125);
    long var67 = var20.rxBytes;
    [J var68 = param2.rxBytes;
    69 = arrayload 68[66];
    var70 = var67 sub var69;
    var20.rxBytes = var70;
    long var71 = var20.rxPackets;
    [J var72 = param2.rxPackets;
    73 = arrayload 72[66];
    var74 = var71 sub var73;
    var20.rxPackets = var74;
    long var75 = var20.txBytes;
    [J var76 = param2.txBytes;
    77 = arrayload 76[66];
    var78 = var75 sub var77;
    var20.txBytes = var78;
    long var79 = var20.txPackets;
    [J var80 = param2.txPackets;
    81 = arrayload 80[66];
    var82 = var79 sub var81;
    var20.txPackets = var82;
    long var83 = var20.operations;
    [J var84 = param2.operations;
    85 = arrayload 84[66];
    var86 = var83 sub var85;
    var20.operations = var86;
    boolean var91 = var20.isNegative();
    long var2 = this.rxBytes;
    var4 = var2 lt 0;
    long var6 = this.rxPackets;
    var7 = var6 lt 0;
    long var8 = this.txBytes;
    var9 = var8 lt 0;
    boolean var16<PATH_SEP>boolean var6 = isValid();{boolean var6 = isValid();};
    BatteryStatsImpl var7 = this.mStats;
    var7.updateWifiState(param2);
    Object var4 = this.mWifiNetworkLock;
    String var5 = this.mWifiIfaces;
    NetworkStats var7 = readNetworkStatsLocked(var5);
    NetworkStats var8 = this.mLastWifiNetworkStats;
    Pools$Pool var9 = this.mNetworkStatsPool;
    Object var11 = var9.acquire();
    NetworkStats var12 = (NetworkStats) var11;
    NetworkStats var14 = NetworkStats.subtract(var7,var8,0,0,var12);
    long var6 = this.elapsedRealtime;
    long var7 = param2.elapsedRealtime;
    var8 = var6 sub var7;
    var10 = var8 lt 0;
    foundNonMonotonic(this,-1,param2,-1,param4);
    NetworkStats$Entry var20 = new NetworkStats$Entry();
    int var22 = param5.capacity;
    int var23 = this.size;
    param5.size = 0;
    param5.elapsedRealtime = var18;
    int var33 = this.size;
    String var34 = this.iface;
    35 = arrayload 34[125];
    var20.iface = var35;
    [I var36 = this.uid;
    37 = arrayload 36[125];
    var20.uid = var37;
    [I var38 = this.set;
    39 = arrayload 38[125];
    var20.set = var39;
    [I var40 = this.tag;
    41 = arrayload 40[125];
    var20.tag = var41;
    [I var42 = this.metered;
    43 = arrayload 42[125];
    var20.metered = var43;
    [I var44 = this.roaming;
    45 = arrayload 44[125];
    var20.roaming = var45;
    [I var46 = this.defaultNetwork;
    47 = arrayload 46[125];
    var20.defaultNetwork = var47;
    [J var48 = this.rxBytes;
    49 = arrayload 48[125];
    var20.rxBytes = var49;
    [J var50 = this.rxPackets;
    51 = arrayload 50[125];
    var20.rxPackets = var51;
    [J var52 = this.txBytes;
    53 = arrayload 52[125];
    var20.txBytes = var53;
    [J var54 = this.txPackets;
    55 = arrayload 54[125];
    var20.txPackets = var55;
    [J var56 = this.operations;
    57 = arrayload 56[125];
    var20.operations = var57;
    String var58 = var20.iface;
    int var59 = var20.uid;
    int var60 = var20.set;
    int var61 = var20.tag;
    int var62 = var20.metered;
    int var63 = var20.roaming;
    int var64 = var20.defaultNetwork;
    int var66 = findIndexHinted(var58,var59,var60,var61,var62,var63,var64,var125);
    long var67 = var20.rxBytes;
    [J var68 = param2.rxBytes;
    69 = arrayload 68[66];
    var70 = var67 sub var69;
    var20.rxBytes = var70;
    long var71 = var20.rxPackets;
    [J var72 = param2.rxPackets;
    73 = arrayload 72[66];
    var74 = var71 sub var73;
    var20.rxPackets = var74;
    long var75 = var20.txBytes;
    [J var76 = param2.txBytes;
    77 = arrayload 76[66];
    var78 = var75 sub var77;
    var20.txBytes = var78;
    long var79 = var20.txPackets;
    [J var80 = param2.txPackets;
    81 = arrayload 80[66];
    var82 = var79 sub var81;
    var20.txPackets = var82;
    long var83 = var20.operations;
    [J var84 = param2.operations;
    85 = arrayload 84[66];
    var86 = var83 sub var85;
    var20.operations = var86;
    boolean var91 = var20.isNegative();
    long var2 = this.rxBytes;
    var4 = var2 lt 0;
    long var6 = this.rxPackets;
    var7 = var6 lt 0;
    boolean var16;
}