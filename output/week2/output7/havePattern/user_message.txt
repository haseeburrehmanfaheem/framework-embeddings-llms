// API: havePattern
// Service: LockSettingsService_2

public void havePattern() {
    SyntheticPasswordManager var4 = this.mSpManager;
    boolean var6 = isSyntheticPasswordBasedCredentialLocked(param2);
    long var12 = getSyntheticPasswordHandleLocked(param2);
    SyntheticPasswordManager var13 = this.mSpManager;
    int var15 = var13.getCredentialType(var12,param2);
    [B var6 = loadState(pwd,param2,param3);
    SyntheticPasswordManager$PasswordData var9 = SyntheticPasswordManager$PasswordData.fromBytes(var6);
    SyntheticPasswordManager$PasswordData var2 = new SyntheticPasswordManager$PasswordData();
    4 = arraylength 1;
    ByteBuffer var6 = ByteBuffer.allocate(var4);
    7 = arraylength 1;
    ByteBuffer var10 = var6.put(this,0,var7);
    Buffer var12 = var6.flip();
    int var14 = var6.getInt();
    var2.passwordType = var14;
    byte var16 = var6.get();
    var2.scryptN = var16;
    byte var18 = var6.get();
    var2.scryptR = var18;
    byte var20 = var6.get();
    var2.scryptP = var20;
    int var22 = var6.getInt();
    [B var23 = new [B(var22);
    var2.salt = var23;<PATH_SEP>SyntheticPasswordManager var4 = this.mSpManager;
    boolean var6 = isSyntheticPasswordBasedCredentialLocked(param2);
    long var12 = getSyntheticPasswordHandleLocked(param2);
    SyntheticPasswordManager var13 = this.mSpManager;
    int var15 = var13.getCredentialType(var12,param2);
    [B var6 = loadState(pwd,param2,param3);
    SyntheticPasswordManager$PasswordData var9 = SyntheticPasswordManager$PasswordData.fromBytes(var6);
    SyntheticPasswordManager$PasswordData var2 = new SyntheticPasswordManager$PasswordData();
    4 = arraylength 1;
    ByteBuffer var6 = ByteBuffer.allocate(var4);
    7 = arraylength 1;
    ByteBuffer var10 = var6.put(this,0,var7);
    Buffer var12 = var6.flip();
    int var14 = var6.getInt();
    var2.passwordType = var14;
    byte var16 = var6.get();
    var2.scryptN = var16;
    byte var18 = var6.get();
    var2.scryptR = var18;
    byte var20 = var6.get();
    var2.scryptP = var20;
    int var22 = var6.getInt();
    [B var23 = new [B(var22);
    var2.salt = var23;
    [B var24 = var2.salt;
    ByteBuffer var26 = var6.get(var24);
    int var28 = var6.getInt();
    [B var29 = new [B(var28);
    var2.passwordHandle = var29;
    [B var30 = var2.passwordHandle;
    ByteBuffer var32 = var6.get(var30);
    Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData var2<PATH_SEP>SyntheticPasswordManager var4 = this.mSpManager;
    boolean var6 = isSyntheticPasswordBasedCredentialLocked(param2);
    long var12 = getSyntheticPasswordHandleLocked(param2);
    SyntheticPasswordManager var13 = this.mSpManager;
    int var15 = var13.getCredentialType(var12,param2);
    [B var6 = loadState(pwd,param2,param3);
    SyntheticPasswordManager$PasswordData var9 = SyntheticPasswordManager$PasswordData.fromBytes(var6);
    SyntheticPasswordManager$PasswordData var2 = new SyntheticPasswordManager$PasswordData();
    4 = arraylength 1;
    ByteBuffer var6 = ByteBuffer.allocate(var4);
    HeapByteBuffer var4 = new HeapByteBuffer();
    Ljava/nio/ByteBuffer var4<PATH_SEP>SyntheticPasswordManager var4 = this.mSpManager;
    boolean var6 = isSyntheticPasswordBasedCredentialLocked(param2);
    long var12 = getSyntheticPasswordHandleLocked(param2);
    SyntheticPasswordManager var13 = this.mSpManager;
    int var15 = var13.getCredentialType(var12,param2);
    [B var6 = loadState(pwd,param2,param3);
    SyntheticPasswordManager$PasswordData var9 = SyntheticPasswordManager$PasswordData.fromBytes(var6);
    SyntheticPasswordManager$PasswordData var2 = new SyntheticPasswordManager$PasswordData();
    4 = arraylength 1;
    ByteBuffer var6 = ByteBuffer.allocate(var4);
    7 = arraylength 1;
    ByteBuffer var10 = var6.put(this,0,var7);
    Buffer var12 = var6.flip();
    int var14 = var6.getInt();
    var2.passwordType = var14;
    byte var16 = var6.get();
    var2.scryptN = var16;
    byte var18 = var6.get();
    var2.scryptR = var18;
}