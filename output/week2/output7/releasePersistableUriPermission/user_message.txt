// API: releasePersistableUriPermission
// Service: UriGrantsManagerService_5

public void releasePersistableUriPermission() {
    ActivityManagerInternal var11 = this.mAmInternal;
    PackageManagerInternal var15 = getPmInternal();
    int var17 = var15.getPackageUid(param4,0,param5);
    int var23 = Preconditions.checkFlagsArgument(param3,3);{int var23 = Preconditions.checkFlagsArgument(param3,3);};
    Object var24 = this.mLock;
    GrantUri var25 = new GrantUri();
    UriPermission var28 = findUriPermissionLocked(var18,var25);
    GrantUri var29 = new GrantUri();
    UriPermission var33 = findUriPermissionLocked(var18,var29);
    boolean var53 = var28.releasePersistableModes(param3);
    var4 = param2 and 3;
    int var5 = this.persistedModeFlags;
    int var6 = this.persistableModeFlags;
    7 = bitnot 4;
    var8 = var6 and var7;
    this.persistableModeFlags = var8;
    int var9 = this.persistedModeFlags;
    10 = bitnot 4;
    var11 = var9 and var10;
    this.persistedModeFlags = var11;
    int var12 = this.persistedModeFlags;
    this.persistedCreateTime = 0;
    updateModeFlags();
    int var2 = this.modeFlags;
    int var3 = this.ownedModeFlags;
    int var4 = this.globalModeFlags;
    var5 = var3 or var4;
    int var6 = this.persistableModeFlags;
    var7 = var5 or var6;
    int var8 = this.persistedModeFlags;
    var9 = var7 or var8;
    this.modeFlags = var9;
    int var15 = this.modeFlags;
    String var21 = this.targetPkg;
    GrantUri var27 = this.uri;
    String var34 = Integer.toHexString(var2);
    int var40 = this.modeFlags;
    String var42 = Integer.toHexString(var40);
    int var49 = Binder.getCallingUid();
    int var56 = Binder.getCallingPid();
    Throwable var61 = new Throwable();<PATH_SEP>ActivityManagerInternal var11 = this.mAmInternal;
    PackageManagerInternal var15 = getPmInternal();
    int var17 = var15.getPackageUid(param4,0,param5);
    int var23 = Preconditions.checkFlagsArgument(param3,3);{int var23 = Preconditions.checkFlagsArgument(param3,3);};
    Object var24 = this.mLock;
    GrantUri var25 = new GrantUri();
    UriPermission var28 = findUriPermissionLocked(var18,var25);
    GrantUri var29 = new GrantUri();
    UriPermission var33 = findUriPermissionLocked(var18,var29);
    boolean var53 = var28.releasePersistableModes(param3);
    var54 = 0 or var53;
    removeUriPermissionIfNeeded(var28);
    boolean var61 = var33.releasePersistableModes(param3);
    var62 = var56 or var61;
    removeUriPermissionIfNeeded(var33);
    schedulePersistUriGrants();
    UriGrantsManagerService$H var2 = this.mH;
    boolean var5 = var2.hasMessages(1);
    UriGrantsManagerService$H var7 = this.mH;
    Message var9 = var7.obtainMessage(1);
    boolean var12 = var7.sendMessageDelayed(var9,10000);<PATH_SEP>ActivityManagerInternal var11 = this.mAmInternal;
    PackageManagerInternal var15 = getPmInternal();
    int var17 = var15.getPackageUid(param4,0,param5);
    int var23 = Preconditions.checkFlagsArgument(param3,3);{int var23 = Preconditions.checkFlagsArgument(param3,3);};
    Object var24 = this.mLock;
    GrantUri var25 = new GrantUri();
    UriPermission var28 = findUriPermissionLocked(var18,var25);
    GrantUri var29 = new GrantUri();
    UriPermission var33 = findUriPermissionLocked(var18,var29);
    boolean var53 = var28.releasePersistableModes(param3);
    var4 = param2 and 3;
    int var5 = this.persistedModeFlags;
    int var6 = this.persistableModeFlags;
    7 = bitnot 4;
    var8 = var6 and var7;
    this.persistableModeFlags = var8;
    int var9 = this.persistedModeFlags;
    10 = bitnot 4;
    var11 = var9 and var10;
    this.persistedModeFlags = var11;
    int var12 = this.persistedModeFlags;
    this.persistedCreateTime = 0;
    updateModeFlags();
    int var2 = this.modeFlags;
    int var3 = this.ownedModeFlags;
    int var4 = this.globalModeFlags;
    var5 = var3 or var4;
    int var6 = this.persistableModeFlags;
    var7 = var5 or var6;
    int var8 = this.persistedModeFlags;
    var9 = var7 or var8;
    this.modeFlags = var9;<PATH_SEP>ActivityManagerInternal var11 = this.mAmInternal;
    PackageManagerInternal var15 = getPmInternal();
    PackageManagerInternal var2 = this.mPmInternal;
    4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = LocalServices.getService(var4);
    PackageManagerInternal var7 = (PackageManagerInternal) var6;
    this.mPmInternal = var7;
    PackageManagerInternal var9 = this.mPmInternal;
    Landroid/content/pm/PackageManagerInternal var9;
}