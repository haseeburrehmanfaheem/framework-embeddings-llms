// API: getRecoveryStatus
// Service: LockSettingsService_1

public void getRecoveryStatus() {
    RecoverableKeyStoreManager var2 = this.mRecoverableKeyStoreManager;
    Map var4 = var2.getRecoveryStatus();
    RecoverableKeyStoreDb var3 = this.mDatabase;
    int var5 = Binder.getCallingUid();
    Map var7 = var3.getStatusForAllKeys(var5);
    RecoverableKeyStoreDbHelper var3 = this.mKeyStoreDbHelper;
    SQLiteDatabase var5 = var3.getReadableDatabase();
    String var9 = new String(3);
    String var13 = new String(1);
    String var15 = Integer.toString(param2);
    arraystore 13[16] = 15;
    Cursor var19 = var5.query(keys,var9,uid = ?,var13,0,0,0);
    HashMap var20 = new HashMap();
    boolean var23 = var19.moveToNext();
    RecoverableKeyStoreDb.$closeResource(0,var19);
    close();<PATH_SEP>RecoverableKeyStoreManager var2 = this.mRecoverableKeyStoreManager;
    Map var4 = var2.getRecoveryStatus();
    RecoverableKeyStoreDb var3 = this.mDatabase;
    int var5 = Binder.getCallingUid();
    Map var7 = var3.getStatusForAllKeys(var5);
    RecoverableKeyStoreDbHelper var3 = this.mKeyStoreDbHelper;
    SQLiteDatabase var5 = var3.getReadableDatabase();
    String var9 = new String(3);
    String var13 = new String(1);
    String var15 = Integer.toString(param2);<PATH_SEP>RecoverableKeyStoreManager var2 = this.mRecoverableKeyStoreManager;
    Map var4 = var2.getRecoveryStatus();
    RecoverableKeyStoreDb var3 = this.mDatabase;
    int var5 = Binder.getCallingUid();
    Map var7 = var3.getStatusForAllKeys(var5);
    RecoverableKeyStoreDbHelper var3 = this.mKeyStoreDbHelper;
    SQLiteDatabase var5 = var3.getReadableDatabase();
    String var9 = new String(3);
    String var13 = new String(1);
    String var15 = Integer.toString(param2);
    arraystore 13[16] = 15;
    Cursor var19 = var5.query(keys,var9,uid = ?,var13,0,0,0);
    HashMap var20 = new HashMap();
    boolean var23 = var19.moveToNext();
    int var25 = var19.getColumnIndexOrThrow(alias);
    String var27 = var19.getString(var25);
    SparseArray var3 = this.mRedactions;
    int var5 = var3.indexOfKey(param2);
    SparseArray var9 = this.mRedactions;
    Object var11 = var9.valueAt(var5);
    String var12 = (String) var11;
    Ljava/lang/String var12<PATH_SEP>RecoverableKeyStoreManager var2 = this.mRecoverableKeyStoreManager;
    Map var4 = var2.getRecoveryStatus();
    RecoverableKeyStoreDb var3 = this.mDatabase;
    int var5 = Binder.getCallingUid();
    Map var7 = var3.getStatusForAllKeys(var5);
    RecoverableKeyStoreDbHelper var3 = this.mKeyStoreDbHelper;
    SQLiteDatabase var5 = var3.getReadableDatabase();
    String var9 = new String(3);
    String var13 = new String(1);
    String var15 = Integer.toString(param2);
    arraystore 13[16] = 15;
    Cursor var19 = var5.query(keys,var9,uid = ?,var13,0,0,0);
    HashMap var20 = new HashMap();
    boolean var23 = var19.moveToNext();
    int var25 = var19.getColumnIndexOrThrow(alias);
    String var27 = var19.getString(var25);
    SparseArray var3 = this.mRedactions;
    int var5 = var3.indexOfKey(param2);
    String var8 = getString(param2);
    Ljava/lang/String var8;
}