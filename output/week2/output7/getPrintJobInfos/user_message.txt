// API: getPrintJobInfos
// Service: PrintManagerService$PrintManagerImpl_3

public void getPrintJobInfos() {
    int var5 = resolveCallingUserEnforcingPermissions(param3);
    Object var6 = this.mLock;
    int var8 = resolveCallingProfileParentLocked(var5);
    int var10 = getCurrentUserId();
    int var12 = resolveCallingAppEnforcingPermissions(param2);
    UserState var15 = getOrCreateUserStateLocked(var5,0);
    long var17 = Binder.clearCallingIdentity();
    List var19 = var15.getPrintJobInfos(var12);
    UserState$PrintJobForAppCache var3 = this.mPrintJobForAppCache;
    List var5 = var3.getPrintJobs(param2);
    ArrayMap var6 = new ArrayMap();
    int var9 = var5.size();
    RemotePrintSpooler var25 = this.mSpooler;
    List var28 = var25.getPrintJobInfos(0,-1,param2);
    throwIfCalledOnMainThread();
    Object var6 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetPrintJobInfosCaller var12 = this.mGetPrintJobInfosCaller;
    IPrintSpooler var14 = getRemoteInstanceLazy();
    Object var2 = this.mLock;
    IPrintSpooler var3 = this.mRemoteInstance;
    bindLocked();<PATH_SEP>int var5 = resolveCallingUserEnforcingPermissions(param3);
    Object var6 = this.mLock;
    int var8 = resolveCallingProfileParentLocked(var5);
    int var10 = getCurrentUserId();
    int var12 = resolveCallingAppEnforcingPermissions(param2);
    UserState var15 = getOrCreateUserStateLocked(var5,0);
    long var17 = Binder.clearCallingIdentity();
    List var19 = var15.getPrintJobInfos(var12);
    UserState$PrintJobForAppCache var3 = this.mPrintJobForAppCache;
    List var5 = var3.getPrintJobs(param2);
    ArrayMap var6 = new ArrayMap();
    int var9 = var5.size();
    Object var12 = var5.get(var22);
    PrintJobInfo var13 = (PrintJobInfo) var12;
    PrintJobId var15 = var13.getId();
    Object var17 = var6.put(var15,var13);
    var13.setTag(0);
    var13.setAdvancedOptions(0);
    this.mAdvancedOptions = param2;<PATH_SEP>int var5 = resolveCallingUserEnforcingPermissions(param3);
    Object var6 = this.mLock;
    int var8 = resolveCallingProfileParentLocked(var5);
    int var10 = getCurrentUserId();
    int var12 = resolveCallingAppEnforcingPermissions(param2);
    UserState var15 = getOrCreateUserStateLocked(var5,0);
    long var17 = Binder.clearCallingIdentity();
    List var19 = var15.getPrintJobInfos(var12);
    UserState$PrintJobForAppCache var3 = this.mPrintJobForAppCache;
    List var5 = var3.getPrintJobs(param2);
    ArrayMap var6 = new ArrayMap();
    int var9 = var5.size();
    RemotePrintSpooler var25 = this.mSpooler;
    List var28 = var25.getPrintJobInfos(0,-1,param2);
    throwIfCalledOnMainThread();
    Object var6 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetPrintJobInfosCaller var12 = this.mGetPrintJobInfosCaller;
    IPrintSpooler var14 = getRemoteInstanceLazy();
    List var16 = var12.getPrintJobInfos(var14,param2,param3,param4);
    Object var41 = this.mLock;
    this.mCanUnbind = 1;
    Object var42 = this.mLock;
    var42.notifyAll();<PATH_SEP>int var5 = resolveCallingUserEnforcingPermissions(param3);
    Object var6 = this.mLock;
    int var8 = resolveCallingProfileParentLocked(var5);
    int var10 = getCurrentUserId();
    int var12 = resolveCallingAppEnforcingPermissions(param2);
    UserState var15 = getOrCreateUserStateLocked(var5,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    UserState var27 = new UserState();
    Context var28 = this.mContext;
    Object var29 = this.mLock;
    SparseArray var31 = this.mUserStates;
    var31.put(param2,var27);
    Lcom/android/server/print/UserState var33;
}