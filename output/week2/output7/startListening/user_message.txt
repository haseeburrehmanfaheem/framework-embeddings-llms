// API: startListening
// Service: AppWidgetServiceImpl_5

public void startListening() {
    int var7 = UserHandle.getCallingUserId();
    boolean var8 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var25 = this.mSecurityPolicy;
    Object var27 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var28 = this.mSecurityPolicy;
    boolean var30 = var28.isInstantAppLocked(param3,var7);
    ensureGroupStateLoadedLocked(var7);{ensureGroupStateLoadedLocked(var7);};
    AppWidgetServiceImpl$HostId var32 = new AppWidgetServiceImpl$HostId();
    int var34 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var37 = lookupOrAddHostLocked(var32);
    var37.callbacks = param2;
    AtomicLong var41 = UPDATE_COUNTER;
    long var43 = var41.incrementAndGet();
    44 = arraylength 5;
    ArrayList var45 = new ArrayList();
    LongSparseArray var47 = new LongSparseArray();
    49 = arrayload 5[70];
    boolean var51 = var37.getPendingUpdatesForId(var49,var47);
    long var4 = this.lastWidgetUpdateSequenceNo;
    ArrayList var5 = this.widgets;
    int var7 = var5.size();
    ArrayList var9 = this.widgets;
    Object var11 = var9.get(var16);
    AppWidgetServiceImpl$Widget var12 = (AppWidgetServiceImpl$Widget) var11;
    int var13 = var12.appWidgetId;
    clear();
    SparseLongArray var20 = var12.updateSequenceNos;
    int var22 = var20.size();
    var24 = var22 sub 1;
    SparseLongArray var25 = var12.updateSequenceNos;
    long var27 = var25.valueAt(var53);
    var28 = var27 lt var4;
    SparseLongArray var29 = var12.updateSequenceNos;
    int var31 = var29.keyAt(var53);
    PendingHostUpdate var33 = PendingHostUpdate.viewDataChanged(param2,var31);
    put(var27,var44);<PATH_SEP>int var7 = UserHandle.getCallingUserId();
    boolean var8 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var25 = this.mSecurityPolicy;
    Object var27 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var28 = this.mSecurityPolicy;
    boolean var30 = var28.isInstantAppLocked(param3,var7);
    ensureGroupStateLoadedLocked(var7);{ensureGroupStateLoadedLocked(var7);};
    AppWidgetServiceImpl$HostId var32 = new AppWidgetServiceImpl$HostId();
    int var34 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var37 = lookupOrAddHostLocked(var32);
    AppWidgetServiceImpl$Host var4 = lookupHostLocked(param2);
    ArrayList var3 = this.mHosts;
    int var5 = var3.size();
    ArrayList var7 = this.mHosts;
    Object var9 = var7.get(var16);
    AppWidgetServiceImpl$Host var10 = (AppWidgetServiceImpl$Host) var9;
    AppWidgetServiceImpl$HostId var11 = var10.id;
    boolean var13 = var11.equals(param2);
    Class var6 = getClass();
    Class var8 = getClass();
    AppWidgetServiceImpl$HostId var9 = (AppWidgetServiceImpl$HostId) param2;
    int var10 = this.uid;
    int var11 = var9.uid;
    int var12 = this.hostId;
    int var13 = var9.hostId;
    boolean 0<PATH_SEP>int var7 = UserHandle.getCallingUserId();
    boolean var8 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var25 = this.mSecurityPolicy;
    Object var27 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var28 = this.mSecurityPolicy;
    boolean var30 = var28.isInstantAppLocked(param3,var7);
    ensureGroupStateLoadedLocked(var7);{ensureGroupStateLoadedLocked(var7);};
    AppWidgetServiceImpl$HostId var32 = new AppWidgetServiceImpl$HostId();
    int var34 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var37 = lookupOrAddHostLocked(var32);
    var37.callbacks = param2;
    AtomicLong var41 = UPDATE_COUNTER;
    long var43 = var41.incrementAndGet();
    44 = arraylength 5;
    ArrayList var45 = new ArrayList();
    LongSparseArray var47 = new LongSparseArray();
    49 = arrayload 5[70];
    boolean var51 = var37.getPendingUpdatesForId(var49,var47);
    long var4 = this.lastWidgetUpdateSequenceNo;
    ArrayList var5 = this.widgets;
    int var7 = var5.size();
    ArrayList var9 = this.widgets;
    Object var11 = var9.get(var16);
    AppWidgetServiceImpl$Widget var12 = (AppWidgetServiceImpl$Widget) var11;
    int var13 = var12.appWidgetId;
    clear();
    SparseLongArray var20 = var12.updateSequenceNos;
    int var22 = var20.size();
    var24 = var22 sub 1;
    SparseLongArray var25 = var12.updateSequenceNos;
    long var27 = var25.valueAt(var53);
    var28 = var27 lt var4;
    SparseLongArray var29 = var12.updateSequenceNos;
    int var31 = var29.keyAt(var53);
    RemoteViews var39 = var12.getEffectiveViewsLocked();
    RemoteViews var41 = AppWidgetServiceImpl.access$2800(var39);{RemoteViews var41 = AppWidgetServiceImpl.access$2800(var39);};
    PendingHostUpdate var43 = PendingHostUpdate.updateAppWidget(param2,var41);
    PendingHostUpdate var3 = new PendingHostUpdate();
    var3.views = param2;
    Landroid/appwidget/PendingHostUpdate var3<PATH_SEP>int var7 = UserHandle.getCallingUserId();
    boolean var8 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var25 = this.mSecurityPolicy;
    Object var27 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var28 = this.mSecurityPolicy;
    boolean var30 = var28.isInstantAppLocked(param3,var7);
    ensureGroupStateLoadedLocked(var7);{ensureGroupStateLoadedLocked(var7);};
    AppWidgetServiceImpl$HostId var32 = new AppWidgetServiceImpl$HostId();
    int var34 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var37 = lookupOrAddHostLocked(var32);
    var37.callbacks = param2;
    AtomicLong var41 = UPDATE_COUNTER;
    long var43 = var41.incrementAndGet();
    44 = arraylength 5;
    ArrayList var45 = new ArrayList();
    LongSparseArray var47 = new LongSparseArray();
    49 = arrayload 5[70];
    boolean var51 = var37.getPendingUpdatesForId(var49,var47);
    long var4 = this.lastWidgetUpdateSequenceNo;
    ArrayList var5 = this.widgets;
    int var7 = var5.size();
    ArrayList var9 = this.widgets;
    Object var11 = var9.get(var16);
    AppWidgetServiceImpl$Widget var12 = (AppWidgetServiceImpl$Widget) var11;
    int var13 = var12.appWidgetId;
    clear();
    SparseLongArray var20 = var12.updateSequenceNos;
    int var22 = var20.size();
    var24 = var22 sub 1;
    SparseLongArray var25 = var12.updateSequenceNos;
    long var27 = var25.valueAt(var53);
    var28 = var27 lt var4;
    SparseLongArray var29 = var12.updateSequenceNos;
    int var31 = var29.keyAt(var53);
    RemoteViews var39 = var12.getEffectiveViewsLocked();
    RemoteViews var2 = this.maskedViews;
    RemoteViews var4 = this.views;
    Landroid/widget/RemoteViews var5;
}