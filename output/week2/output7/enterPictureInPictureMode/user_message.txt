// API: enterPictureInPictureMode
// Service: ActivityTaskManagerService_3

public void enterPictureInPictureMode() {
    long var5 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var6 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityRecord var10 = ensureValidPictureInPictureActivityParamsLocked(enterPictureInPictureMode,param2,param3);{ActivityRecord var10 = ensureValidPictureInPictureActivityParamsLocked(enterPictureInPictureMode,param2,param3);};
    boolean var12 = isInPictureInPictureMode(var10);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    reset();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    var8 = var6 add -1;
    var5.regionCounter = var8;
    int var9 = var5.regionCounter;
    int var11 = var5.prevPriority;
    int var13 = var5.tid;
    int var14 = var5.prevPriority;
    Process.setThreadPriority(var13,var14);<PATH_SEP>long var5 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var6 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityRecord var10 = ensureValidPictureInPictureActivityParamsLocked(enterPictureInPictureMode,param2,param3);{ActivityRecord var10 = ensureValidPictureInPictureActivityParamsLocked(enterPictureInPictureMode,param2,param3);};
    boolean var12 = isInPictureInPictureMode(var10);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;<PATH_SEP>long var5 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var6 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityRecord var10 = ensureValidPictureInPictureActivityParamsLocked(enterPictureInPictureMode,param2,param3);{ActivityRecord var10 = ensureValidPictureInPictureActivityParamsLocked(enterPictureInPictureMode,param2,param3);};
    boolean var12 = isInPictureInPictureMode(var10);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    reset();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    var8 = var6 add -1;
    var5.regionCounter = var8;
    int var9 = var5.regionCounter;
    int var11 = var5.prevPriority;
    int var13 = var5.tid;
    int var14 = var5.prevPriority;
    Process.setThreadPriority(var13,var14);
    var5.prevPriority = 2147483647;
}