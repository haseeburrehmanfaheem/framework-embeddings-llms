// API: noteNetworkStatsEnabled
// Service: BatteryStatsService_1

public void noteNetworkStatsEnabled() {
    BatteryExternalStatsWorker var3 = this.mWorker;
    Future var7 = var3.scheduleSync(network-stats-enabled,6);
    Future var5 = scheduleSyncLocked(param2,param3);
    ScheduledExecutorService var4 = this.mExecutorService;
    boolean var6 = var4.isShutdown();
    Future var8 = this.mCurrentFuture;
    this.mUpdateFlags = param3;
    this.mCurrentReason = param2;
    ScheduledExecutorService var9 = this.mExecutorService;
    Runnable var10 = this.mSyncTask;
    Future var12 = var9.submit(var10);
    this.mCurrentFuture = var12;
    int var16 = this.mUpdateFlags;
    var17 = var16 or param3;
    this.mUpdateFlags = var17;<PATH_SEP>BatteryExternalStatsWorker var3 = this.mWorker;
    Future var7 = var3.scheduleSync(network-stats-enabled,6);
    Future var5 = scheduleSyncLocked(param2,param3);
    ScheduledExecutorService var4 = this.mExecutorService;
    boolean var6 = var4.isShutdown();
    Future var8 = this.mCurrentFuture;
    int var16 = this.mUpdateFlags;
    var17 = var16 or param3;
    this.mUpdateFlags = var17;
    Future var18 = this.mCurrentFuture;
    Ljava/util/concurrent/Future var18<PATH_SEP>BatteryExternalStatsWorker var3 = this.mWorker;
    Future var7 = var3.scheduleSync(network-stats-enabled,6);<PATH_SEP>BatteryExternalStatsWorker var3 = this.mWorker;
    Future var7 = var3.scheduleSync(network-stats-enabled,6);
    Future var5 = scheduleSyncLocked(param2,param3);
    ScheduledExecutorService var4 = this.mExecutorService;
    boolean var6 = var4.isShutdown();
    IllegalStateException var19 = new IllegalStateException();
    CompletableFuture var23 = CompletableFuture.failedFuture(var19);
    Ljava/util/concurrent/Future var23;
}