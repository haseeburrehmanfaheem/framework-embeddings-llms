// API: startActivityAndWait
// Service: ActivityTaskManagerService_12

public void startActivityAndWait() {
    WaitResult var13 = new WaitResult();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    int var20 = Binder.getCallingPid();
    int var22 = Binder.getCallingUid();
    int var28 = handleIncomingUser(var20,var22,param12,startActivityAndWait);
    ActivityStartController var34 = getActivityStartController();
    ActivityStarter var37 = var34.obtainStarter(param4,startActivityAndWait);
    ActivityStarter var40 = var37.setCaller(param2);
    ActivityStarter$Request var3 = this.mRequest;
    var3.caller = param2;
    Lcom/android/server/wm/ActivityStarter this<PATH_SEP>WaitResult var13 = new WaitResult();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    int var20 = Binder.getCallingPid();
    int var22 = Binder.getCallingUid();
    int var28 = handleIncomingUser(var20,var22,param12,startActivityAndWait);
    ActivityStartController var34 = getActivityStartController();
    ActivityStarter var37 = var34.obtainStarter(param4,startActivityAndWait);
    ActivityStarter$Factory var4 = this.mFactory;
    ActivityStarter var6 = var4.obtain();
    Pools$SynchronizedPool var2 = this.mStarterPool;
    Object var4 = var2.acquire();
    ActivityStarter var5 = (ActivityStarter) var4;
    ActivityStarter var7 = new ActivityStarter();
    ActivityStartController var8 = this.mController;
    ActivityTaskManagerService var9 = this.mService;
    ActivityStackSupervisor var10 = this.mSupervisor;
    ActivityStartInterceptor var11 = this.mInterceptor;
    Lcom/android/server/wm/ActivityStarter var13<PATH_SEP>WaitResult var13 = new WaitResult();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    int var20 = Binder.getCallingPid();
    int var22 = Binder.getCallingUid();
    int var28 = handleIncomingUser(var20,var22,param12,startActivityAndWait);
    ActivityStartController var34 = getActivityStartController();
    ActivityStarter var37 = var34.obtainStarter(param4,startActivityAndWait);
    ActivityStarter var40 = var37.setCaller(param2);
    ActivityStarter var46 = var40.setCallingPackage(param3);
    ActivityStarter$Request var3 = this.mRequest;
    var3.callingPackage = param2;<PATH_SEP>WaitResult var13 = new WaitResult();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    int var20 = Binder.getCallingPid();
    int var22 = Binder.getCallingUid();
    int var28 = handleIncomingUser(var20,var22,param12,startActivityAndWait);
    ActivityStartController var34 = getActivityStartController();
    ActivityStarter var37 = var34.obtainStarter(param4,startActivityAndWait);
    ActivityStarter var40 = var37.setCaller(param2);
    ActivityStarter var46 = var40.setCallingPackage(param3);
    ActivityStarter var52 = var46.setResolvedType(param5);
    ActivityStarter var58 = var52.setResultTo(param6);
}