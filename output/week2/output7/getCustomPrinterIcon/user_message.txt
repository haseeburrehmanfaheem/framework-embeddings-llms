// API: getCustomPrinterIcon
// Service: PrintManagerService$PrintManagerImpl_3

public void getCustomPrinterIcon() {
    Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    long var18 = Binder.clearCallingIdentity();
    Icon var20 = var16.getCustomPrinterIcon(var6);
    RemotePrintSpooler var3 = this.mSpooler;
    Icon var5 = var3.getCustomPrinterIcon(param2);
    throwIfCalledOnMainThread();
    Object var4 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetCustomPrinterIconCaller var10 = this.mGetCustomPrinterIconCaller;
    IPrintSpooler var12 = getRemoteInstanceLazy();
    Object var2 = this.mLock;
    IPrintSpooler var3 = this.mRemoteInstance;
    IPrintSpooler var7 = this.mRemoteInstance;
    Landroid/print/IPrintSpooler var7<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    UserManager var6 = this.mUserManager;
    boolean var8 = var6.isUserUnlockingOrUnlocked(param2);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    UserState var27 = new UserState();
    Context var28 = this.mContext;
    Object var29 = this.mLock;
    SparseArray var31 = this.mUserStates;
    var31.put(param2,var27);<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    long var18 = Binder.clearCallingIdentity();
    Icon var20 = var16.getCustomPrinterIcon(var6);
    RemotePrintSpooler var3 = this.mSpooler;
    Icon var5 = var3.getCustomPrinterIcon(param2);
    throwIfCalledOnMainThread();
    Object var4 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetCustomPrinterIconCaller var10 = this.mGetCustomPrinterIconCaller;
    IPrintSpooler var12 = getRemoteInstanceLazy();
    Icon var14 = var10.getCustomPrinterIcon(var12,param2);
    int var5 = onBeforeRemoteCall();
    IPrintSpoolerCallbacks var6 = this.mCallback;
    getCustomPrinterIcon(param3,var6,var5);<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    long var18 = Binder.clearCallingIdentity();
    Icon var20 = var16.getCustomPrinterIcon(var6);
    RemotePrintSpooler var3 = this.mSpooler;
    Icon var5 = var3.getCustomPrinterIcon(param2);
    ArrayMap var7 = this.mActiveServices;
    ComponentName var9 = getServiceName();
    Object var11 = var7.get(var9);
    RemotePrintService var12 = (RemotePrintService) var11;
    var12.requestCustomPrinterIcon(param2);
    Landroid/graphics/drawable/Icon var5;
}