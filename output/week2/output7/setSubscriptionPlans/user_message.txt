// API: setSubscriptionPlans
// Service: NetworkPolicyManagerService_4

public void setSubscriptionPlans() {
    int var6 = Binder.getCallingUid();
    8 = arraylength 3;
    long var19 = Binder.clearCallingIdentity();
    Object var20 = this.mUidRulesFirstLock;
    Object var21 = this.mNetworkPoliciesSecondLock;
    SparseArray var22 = this.mSubscriptionPlans;
    var22.put(param2,param3);
    SparseArray var24 = this.mSubscriptionPlansOwner;
    var24.put(param2,param4);
    SparseArray var26 = this.mSubIdToSubscriberId;
    Object var28 = var26.get(param2,0);
    String var29 = (String) var28;
    boolean var43 = ensureActiveMobilePolicyAL(param2,var29);{boolean var43 = ensureActiveMobilePolicyAL(param2,var29);};
    boolean var45 = maybeUpdateMobilePolicyCycleAL(param2,var29);
    boolean var4 = LOGV;
    NetworkIdentity var11 = new NetworkIdentity();
    ArrayMap var14 = this.mNetworkPolicy;
    int var16 = var14.size();
    var18 = var16 add -1;
    ArrayMap var19 = this.mNetworkPolicy;
    Object var21 = var19.keyAt(var39);
    NetworkTemplate var22 = (NetworkTemplate) var21;
    boolean var24 = var22.matches(var11);
    boolean var4 = matchesMetered(param2);
    boolean var7 = matchesRoaming(param2);
    boolean var9 = matchesDefaultNetwork(param2);
    int var10 = this.mMatchRule;
    16: switch 10 [4->56,5->51,6->46,7->41,8->36,9->31] default: 30;
    boolean var17 = matchesEthernet(param2);
    boolean var17<PATH_SEP>int var6 = Binder.getCallingUid();
    8 = arraylength 3;
    long var19 = Binder.clearCallingIdentity();
    Object var20 = this.mUidRulesFirstLock;
    Object var21 = this.mNetworkPoliciesSecondLock;
    SparseArray var22 = this.mSubscriptionPlans;
    var22.put(param2,param3);
    SparseArray var24 = this.mSubscriptionPlansOwner;
    var24.put(param2,param4);
    SparseArray var26 = this.mSubIdToSubscriberId;
    Object var28 = var26.get(param2,0);
    String var29 = (String) var28;
    boolean var43 = ensureActiveMobilePolicyAL(param2,var29);{boolean var43 = ensureActiveMobilePolicyAL(param2,var29);};
    boolean var45 = maybeUpdateMobilePolicyCycleAL(param2,var29);
    boolean var4 = LOGV;
    NetworkIdentity var11 = new NetworkIdentity();
    ArrayMap var14 = this.mNetworkPolicy;
    int var16 = var14.size();
    var18 = var16 add -1;
    ArrayMap var19 = this.mNetworkPolicy;
    Object var21 = var19.keyAt(var39);
    NetworkTemplate var22 = (NetworkTemplate) var21;
    boolean var24 = var22.matches(var11);
    boolean var4 = matchesMetered(param2);
    int var3 = this.mMetered;
    boolean var6 = param2.mMetered;
    int var9 = this.mMetered;
    boolean var10 = param2.mMetered;
    boolean var13<PATH_SEP>int var6 = Binder.getCallingUid();
    8 = arraylength 3;
    long var19 = Binder.clearCallingIdentity();
    Object var20 = this.mUidRulesFirstLock;
    Object var21 = this.mNetworkPoliciesSecondLock;
    SparseArray var22 = this.mSubscriptionPlans;
    var22.put(param2,param3);
    SparseArray var24 = this.mSubscriptionPlansOwner;
    var24.put(param2,param4);
    SparseArray var26 = this.mSubIdToSubscriberId;
    Object var28 = var26.get(param2,0);
    String var29 = (String) var28;
    boolean var43 = ensureActiveMobilePolicyAL(param2,var29);{boolean var43 = ensureActiveMobilePolicyAL(param2,var29);};
    boolean var45 = maybeUpdateMobilePolicyCycleAL(param2,var29);
    boolean var4 = LOGV;
    NetworkIdentity var11 = new NetworkIdentity();
    ArrayMap var14 = this.mNetworkPolicy;
    int var16 = var14.size();
    var18 = var16 add -1;
    ArrayMap var19 = this.mNetworkPolicy;
    Object var21 = var19.keyAt(var39);
    NetworkTemplate var22 = (NetworkTemplate) var21;
    boolean var24 = var22.matches(var11);
    boolean var4 = matchesMetered(param2);
    boolean var7 = matchesRoaming(param2);
    boolean var9 = matchesDefaultNetwork(param2);
    int var10 = this.mMatchRule;
    16: switch 10 [4->56,5->51,6->46,7->41,8->36,9->31] default: 30;
    boolean var17 = matchesEthernet(param2);
    int var3 = param2.mType;
    boolean 1<PATH_SEP>int var6 = Binder.getCallingUid();
    8 = arraylength 3;
    long var19 = Binder.clearCallingIdentity();
    Object var20 = this.mUidRulesFirstLock;
    Object var21 = this.mNetworkPoliciesSecondLock;
    SparseArray var22 = this.mSubscriptionPlans;
    var22.put(param2,param3);
    SparseArray var24 = this.mSubscriptionPlansOwner;
    var24.put(param2,param4);
    SparseArray var26 = this.mSubIdToSubscriberId;
    Object var28 = var26.get(param2,0);
    String var29 = (String) var28;
    boolean var43 = ensureActiveMobilePolicyAL(param2,var29);{boolean var43 = ensureActiveMobilePolicyAL(param2,var29);};
    boolean var45 = maybeUpdateMobilePolicyCycleAL(param2,var29);
    boolean var4 = LOGV;
    NetworkIdentity var11 = new NetworkIdentity();
    ArrayMap var14 = this.mNetworkPolicy;
    int var16 = var14.size();
    var18 = var16 add -1;
    ArrayMap var19 = this.mNetworkPolicy;
    Object var21 = var19.keyAt(var39);
    NetworkTemplate var22 = (NetworkTemplate) var21;
    boolean var24 = var22.matches(var11);
    boolean var4 = matchesMetered(param2);
    boolean var7 = matchesRoaming(param2);
    boolean var9 = matchesDefaultNetwork(param2);
    int var10 = this.mMatchRule;
    16: switch 10 [4->56,5->51,6->46,7->41,8->36,9->31] default: 30;
    boolean var15 = matchesWifi(param2);
    int var3 = param2.mType;
    String var5 = this.mNetworkId;
    String var7 = WifiInfo.removeDoubleQuotes(var5);
    String var8 = param2.mNetworkId;
    String var10 = WifiInfo.removeDoubleQuotes(var8);
    boolean var12 = Objects.equals(var7,var10);
    boolean var12;
}