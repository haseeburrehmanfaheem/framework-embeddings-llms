// API: getAccountsByTypeForPackage
// Service: AccountManagerService_4

public void getAccountsByTypeForPackage() {
    int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getCallingUserId();
    AppOpsManager var9 = this.mAppOpsManager;
    PackageManager var12 = this.mPackageManager;
    int var14 = var12.getPackageUidAsUser(param3,var8);
    boolean var33 = UserHandle.isSameApp(var6,1000);
    boolean var36 = isAccountManagedByCaller(param2,var6,var8);{boolean var36 = isAccountManagedByCaller(param2,var6,var8);};
    boolean var41 = UserHandle.isSameApp(var6,1000);
    Account var46 = getAccountsAsUserForPackage(param2,var8,param3,var14,param4,0);
    int var9 = Binder.getCallingUid();
    int var11 = UserHandle.getCallingUserId();
    Context var13 = this.mContext;
    int var54 = Binder.getCallingUid();
    int var61 = Binder.getCallingPid();
    int var72 = UserHandle.getUserId(var9);
    List var74 = getTypesManagedByCaller(var9,var72);
    boolean var77 = UserHandle.isSameApp(var9,1000);
    boolean var79 = var74.contains(param2);
    List var93 = getTypesVisibleToCaller(var88,param3,var89);
    boolean var95 = var93.isEmpty();
    boolean var97 = var93.contains(param2);
    boolean var102 = var93.contains(param2);
    ArrayList var103 = new ArrayList();
    boolean var106 = var103.add(param2);
    long var113 = AccountManagerService.clearCallingIdentity();
    AccountManagerService$UserAccounts var115 = getUserAccounts(param3);
    AccountManagerService$UserAccounts var4 = getUserAccountsNotChecked(param2);
    SparseArray var3 = this.mUsers;
    SparseArray var4 = this.mUsers;
    Object var6 = var4.get(param2);
    AccountManagerService$UserAccounts var7 = (AccountManagerService$UserAccounts) var6;
    File var9 = new File();
    AccountManagerService$Injector var10 = this.mInjector;
    String var12 = var10.getPreNDatabaseName(param2);
    File var14 = new File();
    AccountManagerService$Injector var15 = this.mInjector;
    String var17 = var15.getDeDatabaseName(param2);
    AccountManagerService$UserAccounts var19 = new AccountManagerService$UserAccounts();
    Context var20 = this.mContext;
    SparseArray var22 = this.mUsers;
    var22.append(param2,var19);
    purgeOldGrants(var19);
    AccountsDb var30 = var26.accountsDb;
    boolean var32 = var30.isCeDatabaseAttached();
    SparseBooleanArray var33 = this.mLocalUnlockedUsers;
    boolean var35 = var33.get(param2);
    Object var51 = var26.dbLock;
    Object var52 = var26.cacheLock;
    File var53 = new File();
    AccountManagerService$Injector var54 = this.mInjector;
    String var56 = var54.getCeDatabaseName(param2);
    AccountsDb var58 = var26.accountsDb;
    var58.attachCeDatabase(var53);
    syncDeCeAccountsLocked(var26);
    validateAccountsInternal(var26,1);{validateAccountsInternal(var26,1);};
    Lcom/android/server/accounts/AccountManagerService$UserAccounts var26<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getCallingUserId();
    AppOpsManager var9 = this.mAppOpsManager;
    PackageManager var12 = this.mPackageManager;
    int var14 = var12.getPackageUidAsUser(param3,var8);
    boolean var33 = UserHandle.isSameApp(var6,1000);
    boolean var36 = isAccountManagedByCaller(param2,var6,var8);{boolean var36 = isAccountManagedByCaller(param2,var6,var8);};
    boolean var41 = UserHandle.isSameApp(var6,1000);
    Account var46 = getAccountsAsUserForPackage(param2,var8,param3,var14,param4,0);
    int var9 = Binder.getCallingUid();
    int var11 = UserHandle.getCallingUserId();
    Context var13 = this.mContext;
    int var54 = Binder.getCallingUid();
    int var61 = Binder.getCallingPid();
    int var72 = UserHandle.getUserId(var9);
    List var74 = getTypesManagedByCaller(var9,var72);
    boolean var77 = UserHandle.isSameApp(var9,1000);
    boolean var79 = var74.contains(param2);
    List var93 = getTypesVisibleToCaller(var88,param3,var89);
    boolean var95 = var93.isEmpty();
    boolean var97 = var93.contains(param2);
    boolean var102 = var93.contains(param2);
    ArrayList var103 = new ArrayList();
    boolean var106 = var103.add(param2);
    long var113 = AccountManagerService.clearCallingIdentity();
    AccountManagerService$UserAccounts var115 = getUserAccounts(param3);
    AccountManagerService$UserAccounts var4 = getUserAccountsNotChecked(param2);
    SparseArray var3 = this.mUsers;
    SparseArray var4 = this.mUsers;
    Object var6 = var4.get(param2);
    AccountManagerService$UserAccounts var7 = (AccountManagerService$UserAccounts) var6;
    AccountsDb var30 = var26.accountsDb;
    boolean var32 = var30.isCeDatabaseAttached();
    validateAccountsInternal(var26,1);{validateAccountsInternal(var26,1);};
    Lcom/android/server/accounts/AccountManagerService$UserAccounts var26<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getCallingUserId();
    AppOpsManager var9 = this.mAppOpsManager;
    PackageManager var12 = this.mPackageManager;
    int var14 = var12.getPackageUidAsUser(param3,var8);
    boolean var33 = UserHandle.isSameApp(var6,1000);
    boolean var36 = isAccountManagedByCaller(param2,var6,var8);{boolean var36 = isAccountManagedByCaller(param2,var6,var8);};
    boolean var41 = UserHandle.isSameApp(var6,1000);
    Account var46 = getAccountsAsUserForPackage(param2,var8,param3,var14,param4,0);
    int var9 = Binder.getCallingUid();
    int var11 = UserHandle.getCallingUserId();
    Context var13 = this.mContext;
    int var54 = Binder.getCallingUid();
    int var61 = Binder.getCallingPid();
    int var72 = UserHandle.getUserId(var9);
    List var74 = getTypesManagedByCaller(var9,var72);
    boolean var77 = UserHandle.isSameApp(var9,1000);
    boolean var79 = var74.contains(param2);
    List var93 = getTypesVisibleToCaller(var88,param3,var89);
    boolean var95 = var93.isEmpty();
    boolean var97 = var93.contains(param2);
    boolean var102 = var93.contains(param2);
    ArrayList var103 = new ArrayList();
    boolean var106 = var103.add(param2);
    long var113 = AccountManagerService.clearCallingIdentity();
    AccountManagerService$UserAccounts var115 = getUserAccounts(param3);
    AccountManagerService$UserAccounts var4 = getUserAccountsNotChecked(param2);
    SparseArray var3 = this.mUsers;
    SparseArray var4 = this.mUsers;
    Object var6 = var4.get(param2);
    AccountManagerService$UserAccounts var7 = (AccountManagerService$UserAccounts) var6;
    File var9 = new File();
    AccountManagerService$Injector var10 = this.mInjector;
    String var12 = var10.getPreNDatabaseName(param2);
    File var14 = new File();
    AccountManagerService$Injector var15 = this.mInjector;
    String var17 = var15.getDeDatabaseName(param2);
    AccountManagerService$UserAccounts var19 = new AccountManagerService$UserAccounts();
    Context var20 = this.mContext;
    SparseArray var22 = this.mUsers;
    var22.append(param2,var19);
    purgeOldGrants(var19);
    AccountsDb var30 = var26.accountsDb;
    boolean var32 = var30.isCeDatabaseAttached();
    SparseBooleanArray var33 = this.mLocalUnlockedUsers;
    boolean var35 = var33.get(param2);
    validateAccountsInternal(var26,1);{validateAccountsInternal(var26,1);};
    Lcom/android/server/accounts/AccountManagerService$UserAccounts var26<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getCallingUserId();
    AppOpsManager var9 = this.mAppOpsManager;
    PackageManager var12 = this.mPackageManager;
    int var14 = var12.getPackageUidAsUser(param3,var8);
    boolean var33 = UserHandle.isSameApp(var6,1000);
    boolean var36 = isAccountManagedByCaller(param2,var6,var8);{boolean var36 = isAccountManagedByCaller(param2,var6,var8);};
    boolean var41 = UserHandle.isSameApp(var6,1000);
    Account var46 = getAccountsAsUserForPackage(param2,var8,param3,var14,param4,0);
    int var9 = Binder.getCallingUid();
    int var11 = UserHandle.getCallingUserId();
    Context var13 = this.mContext;
    int var54 = Binder.getCallingUid();
    int var61 = Binder.getCallingPid();
    int var72 = UserHandle.getUserId(var9);
    List var74 = getTypesManagedByCaller(var9,var72);
    boolean var77 = UserHandle.isSameApp(var9,1000);
    boolean var79 = var74.contains(param2);
    List var93 = getTypesVisibleToCaller(var88,param3,var89);
    boolean var95 = var93.isEmpty();
    boolean var97 = var93.contains(param2);
    boolean var102 = var93.contains(param2);
    ArrayList var103 = new ArrayList();
    boolean var106 = var103.add(param2);
    long var113 = AccountManagerService.clearCallingIdentity();
    AccountManagerService$UserAccounts var115 = getUserAccounts(param3);
    AccountManagerService$UserAccounts var4 = getUserAccountsNotChecked(param2);
    SparseArray var3 = this.mUsers;
    SparseArray var4 = this.mUsers;
    Object var6 = var4.get(param2);
    AccountManagerService$UserAccounts var7 = (AccountManagerService$UserAccounts) var6;
    AccountsDb var30 = var26.accountsDb;
    boolean var32 = var30.isCeDatabaseAttached();
    SparseBooleanArray var33 = this.mLocalUnlockedUsers;
    boolean var35 = var33.get(param2);
    validateAccountsInternal(var26,1);{validateAccountsInternal(var26,1);};
    Lcom/android/server/accounts/AccountManagerService$UserAccounts var26;
}