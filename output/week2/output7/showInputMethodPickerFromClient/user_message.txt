// API: showInputMethodPickerFromClient
// Service: InputMethodManagerService_3

public void showInputMethodPickerFromClient() {
    ArrayMap var4 = this.mMethodMap;
    boolean var9 = canShowInputMethodPickerLocked(param2);
    int var4 = Binder.getCallingUid();
    InputMethodManagerService$ClientState var5 = this.mCurFocusedWindowClient;
    IInputMethodClient var8 = var5.client;
    IBinder var10 = var8.asBinder();
    IBinder var12 = asBinder();
    boolean 1<PATH_SEP>ArrayMap var4 = this.mMethodMap;
    boolean var9 = canShowInputMethodPickerLocked(param2);
    Handler var10 = this.mHandler;
    HandlerCaller var11 = this.mCaller;
    InputMethodManagerService$ClientState var13 = this.mCurClient;
    InputMethodManagerService$ClientState var14 = this.mCurClient;
    int var15 = var14.selfReportedDisplayId;
    Message var18 = var11.obtainMessageII(1,param3,var16);
    boolean var20 = var10.sendMessage(var18);<PATH_SEP>ArrayMap var4 = this.mMethodMap;
    boolean var9 = canShowInputMethodPickerLocked(param2);
    int var4 = Binder.getCallingUid();
    InputMethodManagerService$ClientState var5 = this.mCurFocusedWindowClient;
    Intent var16 = this.mCurIntent;
    AppOpsManager var17 = this.mAppOpsManager;
    ComponentName var19 = var16.getComponent();
    String var21 = var19.getPackageName();
    boolean 0<PATH_SEP>ArrayMap var4 = this.mMethodMap;
    boolean var9 = canShowInputMethodPickerLocked(param2);
    int var4 = Binder.getCallingUid();
    InputMethodManagerService$ClientState var5 = this.mCurFocusedWindowClient;
    Intent var16 = this.mCurIntent;
    AppOpsManager var17 = this.mAppOpsManager;
    ComponentName var19 = var16.getComponent();
    String var21 = var19.getPackageName();
    boolean 1;
}