// API: getServiceInfo
// Service: PackageManagerService_4

public void getServiceInfo() {
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,3,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var13 = this.mComponentResolver;
    PackageParser$Provider var15 = var13.getProvider(param2);
    ProviderInfo var16 = var15.info;
    int var17 = var16.flags;
    var18 = 1048576 and var17;
    boolean var20<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,3,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var31 = this.mComponentResolver;
    PackageParser$Activity var33 = var31.getReceiver(param2);
    Object var3 = this.mLock;
    ComponentResolver$ActivityIntentResolver var4 = this.mReceivers;
    ArrayMap var6 = ComponentResolver$ActivityIntentResolver.access$300(var4);{ArrayMap var6 = ComponentResolver$ActivityIntentResolver.access$300(var4);};
    Object var8 = var6.get(param2);
    PackageParser$Activity var9 = (PackageParser$Activity) var8;
    Landroid/content/pm/PackageParser$Activity var9<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,3,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var25 = getInstantApp(param6);
    boolean var27 = canViewInstantApps(var14,param6);
    Context var6 = this.mContext;
    Context var11 = this.mContext;
    ComponentName var16 = getDefaultHomeActivity(param3);
    String var24 = this.mAppPredictionServicePackage;
    boolean 0<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,3,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var25 = getInstantApp(param6);
    boolean var27 = canViewInstantApps(var14,param6);
    Context var6 = this.mContext;
    Context var11 = this.mContext;
    ComponentName var16 = getDefaultHomeActivity(param3);
    String var18 = var16.getPackageName();
    boolean 1;
}