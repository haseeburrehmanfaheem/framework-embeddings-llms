// API: deleteAppWidgetId
// Service: AppWidgetServiceImpl_3

public void deleteAppWidgetId() {
    int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    int var28 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var30 = lookupWidgetLocked(param3,var28,param2);
    deleteAppWidgetLocked(var30);
    decrementAppWidgetServiceRefCount(param2);
    AppWidgetServiceImpl$Host var4 = param2.host;
    ArrayList var5 = var4.widgets;
    boolean var7 = var5.remove(param2);
    pruneHostLocked(var4);
    removeWidgetLocked(param2);
    AppWidgetServiceImpl$Provider var10 = param2.provider;
    ArrayList var12 = var10.widgets;
    boolean var14 = var12.remove(param2);
    boolean var15 = var10.zombie;
    sendDeletedIntentLocked(param2);
    Intent var3 = new Intent();
    AppWidgetServiceImpl$Provider var6 = param2.provider;
    AppWidgetProviderInfo var7 = var6.info;
    ComponentName var8 = var7.provider;
    Intent var10 = var3.setComponent(var8);
    int var11 = param2.appWidgetId;
    Intent var14 = var3.putExtra(appWidgetId,var11);
    AppWidgetServiceImpl$Provider var15 = param2.provider;
    AppWidgetProviderInfo var16 = var15.info;
    UserHandle var18 = var16.getProfile();<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    int var28 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var30 = lookupWidgetLocked(param3,var28,param2);
    deleteAppWidgetLocked(var30);
    decrementAppWidgetServiceRefCount(param2);
    AppWidgetServiceImpl$Host var4 = param2.host;
    ArrayList var5 = var4.widgets;
    boolean var7 = var5.remove(param2);
    pruneHostLocked(var4);
    removeWidgetLocked(param2);
    AppWidgetServiceImpl$Provider var10 = param2.provider;
    ArrayList var12 = var10.widgets;
    boolean var14 = var12.remove(param2);
    boolean var15 = var10.zombie;
    sendDeletedIntentLocked(param2);
    Intent var3 = new Intent();
    AppWidgetServiceImpl$Provider var6 = param2.provider;
    AppWidgetProviderInfo var7 = var6.info;
    ComponentName var8 = var7.provider;
    Intent var10 = var3.setComponent(var8);
    int var11 = param2.appWidgetId;
    Intent var14 = var3.putExtra(appWidgetId,var11);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    int var28 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var30 = lookupWidgetLocked(param3,var28,param2);
    deleteAppWidgetLocked(var30);
    decrementAppWidgetServiceRefCount(param2);
    AppWidgetServiceImpl$Host var4 = param2.host;
    ArrayList var5 = var4.widgets;
    boolean var7 = var5.remove(param2);
    pruneHostLocked(var4);
    removeWidgetLocked(param2);
    AppWidgetServiceImpl$Provider var10 = param2.provider;
    ArrayList var12 = var10.widgets;
    boolean var14 = var12.remove(param2);
    boolean var15 = var10.zombie;
    sendDeletedIntentLocked(param2);
    Intent var3 = new Intent();
    AppWidgetServiceImpl$Provider var6 = param2.provider;
    AppWidgetProviderInfo var7 = var6.info;
    ComponentName var8 = var7.provider;
    Intent var10 = var3.setComponent(var8);
    int var11 = param2.appWidgetId;
    Intent var14 = var3.putExtra(appWidgetId,var11);
    AppWidgetServiceImpl$Provider var15 = param2.provider;
    AppWidgetProviderInfo var16 = var15.info;
    UserHandle var18 = var16.getProfile();
    sendBroadcastAsUser(var3,var18);
    long var5 = Binder.clearCallingIdentity();
    Context var6 = this.mContext;
    var6.sendBroadcastAsUser(param2,param3);
    Binder.restoreCallingIdentity(var5);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    int var28 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var30 = lookupWidgetLocked(param3,var28,param2);
    deleteAppWidgetLocked(var30);
    decrementAppWidgetServiceRefCount(param2);
    AppWidgetServiceImpl$Host var4 = param2.host;
    ArrayList var5 = var4.widgets;
    boolean var7 = var5.remove(param2);
    pruneHostLocked(var4);
    ArrayList var3 = param2.widgets;
    int var5 = var3.size();
    IAppWidgetHost var7 = param2.callbacks;
    boolean var8 = DEBUG;
    AppWidgetServiceImpl$HostId var14 = param2.id;
    ArrayList var25 = this.mHosts;
    boolean var27 = var25.remove(param2);
}