// API: getDetailedUidStats
// Service: NetworkStatsService_2

public void getDetailedUidStats() {
    String var4 = NetworkStatsFactory.augmentWithStackedInterfaces(param2);
    NetworkStats var6 = getNetworkStatsUidDetail(var4);
    INetworkManagementService var3 = this.mNetworkManager;
    NetworkStats var6 = var3.getNetworkStatsUidDetail(-1,param2);
    NetworkStats var9 = getNetworkStatsTethering(1);
    var9.filter(-1,param2,-1);
    boolean var11 = this.mUseBpfTrafficStats;
    NetworkStatsFactory.apply464xlatAdjustments(var6,var9,var11);
    ConcurrentHashMap var4 = sStackedIfaces;
    NetworkStats.apply464xlatAdjustments(this,param2,var4,param3);
    NetworkStats var5 = new NetworkStats();
    int var7 = size();
    NetworkStats$Entry var11 = new NetworkStats$Entry();
    String var12 = IFACE_ALL;
    int var14 = param2.size;
    NetworkStats$Entry var16 = getValues(var56,var55);
    String var17 = var16.iface;
    String var18 = var16.iface;
    boolean var21 = var18.startsWith(v4-);
    String var22 = var16.iface;
    Object var24 = get(var22);
    String var25 = (String) var24;
    var11.iface = var25;
    long var27 = var16.rxBytes;
    long var28 = var16.rxPackets;
    var29 = var28 mul 20;
    var30 = var27 add var29;
    31 = neg 30;
    var11.rxBytes = var31;
    long var32 = var16.rxPackets;
    33 = neg 32;
    var11.rxPackets = var33;
    NetworkStats var37 = var5.combineValues(var11);
    long var38 = var16.rxBytes;
    long var39 = var16.rxPackets;
    var40 = var39 mul 20;
    var41 = var38 add var40;
    var16.rxBytes = var41;
    long var42 = var16.txBytes;
    long var43 = var16.txPackets;
    var44 = var43 mul 20;
    var45 = var42 add var44;
    var16.txBytes = var45;
    setValues(var56,var16);
}