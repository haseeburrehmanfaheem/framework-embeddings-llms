// API: getStatisticsStream
// Service: BatteryStatsService_1

public void getStatisticsStream() {
    Context var2 = this.mContext;
    Parcel var7 = Parcel.obtain();
    syncStats(get-stats,31);
    BatteryStatsImpl var11 = this.mStats;
    BatteryStatsImpl var12 = this.mStats;
    var12.writeToParcel(var7,0);
    writeToParcelLocked(param2,1,param3);
    pullPendingStateUpdatesLocked();
    long var7 = getStartClockTime();
    BatteryStatsImpl$Clocks var8 = this.mClocks;
    long var10 = var8.uptimeMillis();
    var12 = var10 mul 1000;
    BatteryStatsImpl$Clocks var13 = this.mClocks;
    long var15 = var13.elapsedRealtime();
    var16 = var15 mul 1000;
    BatteryStatsImpl$TimeBase var17 = this.mOnBatteryTimeBase;
    long var19 = var17.getRealtime(var16);
    BatteryStatsImpl$TimeBase var20 = this.mOnBatteryScreenOffTimeBase;
    long var22 = var20.getRealtime(var16);
    writeInt(-1166707595);
    writeHistoryBuffer(param2,1,0);
    BatteryStatsHistory var28 = this.mBatteryStatsHistory;
    var28.writeToParcel(param2);
    int var30 = this.mStartCount;
    writeInt(var30);
    long var32 = this.mStartClockTime;
    writeLong(var32);
    String var34 = this.mStartPlatformVersion;
    writeString(var34);
    String var36 = this.mEndPlatformVersion;
    writeString(var36);
    long var38 = this.mUptime;
    writeLong(var38);
    long var40 = this.mUptimeStart;
    writeLong(var40);<PATH_SEP>Context var2 = this.mContext;
    Parcel var7 = Parcel.obtain();
    syncStats(get-stats,31);
    BatteryStatsImpl var11 = this.mStats;
    BatteryStatsImpl var12 = this.mStats;
    var12.writeToParcel(var7,0);
    writeToParcelLocked(param2,1,param3);
    pullPendingStateUpdatesLocked();
    long var7 = getStartClockTime();
    long var3 = System.currentTimeMillis();
    var5 = var3 lt 31536000000;
    long var7 = this.mStartClockTime;
    var8 = var3 sub 31536000000;
    var9 = var7 lt var8;
    BatteryStatsImpl$Clocks var16 = this.mClocks;
    long var18 = var16.elapsedRealtime();
    BatteryStatsImpl$Clocks var19 = this.mClocks;
    long var21 = var19.uptimeMillis();
    recordCurrentTimeChangeLocked(var3,var18,var21);
    BatteryStatsImpl$Clocks var23 = this.mClocks;
    long var25 = var23.elapsedRealtime();
    long var26 = this.mRealtimeStart;
    var28 = var26 div 1000;
    var29 = var25 sub var28;
    var30 = var3 sub var29;
    long var30<PATH_SEP>Context var2 = this.mContext;
    Parcel var7 = Parcel.obtain();
    syncStats(get-stats,31);
    BatteryStatsImpl var11 = this.mStats;
    BatteryStatsImpl var12 = this.mStats;
    var12.writeToParcel(var7,0);
    writeToParcelLocked(param2,1,param3);
    pullPendingStateUpdatesLocked();
    long var7 = getStartClockTime();
    BatteryStatsImpl$Clocks var8 = this.mClocks;
    long var10 = var8.uptimeMillis();
    var12 = var10 mul 1000;
    BatteryStatsImpl$Clocks var13 = this.mClocks;
    long var15 = var13.elapsedRealtime();
    var16 = var15 mul 1000;
    BatteryStatsImpl$TimeBase var17 = this.mOnBatteryTimeBase;
    long var19 = var17.getRealtime(var16);
    BatteryStatsImpl$TimeBase var20 = this.mOnBatteryScreenOffTimeBase;
    long var22 = var20.getRealtime(var16);
    writeInt(-1166707595);
    writeHistoryBuffer(param2,1,0);
    writeInt(186);
    long var7 = this.mHistoryBaseTime;
    long var8 = this.mLastHistoryElapsedRealtime;
    var9 = var7 add var8;
    writeLong(var9);
    Parcel var12 = this.mHistoryBuffer;
    int var14 = var12.dataSize();
    writeInt(var14);<PATH_SEP>Context var2 = this.mContext;
    Parcel var7 = Parcel.obtain();
    syncStats(get-stats,31);
    BatteryStatsImpl var11 = this.mStats;
    BatteryStatsImpl var12 = this.mStats;
    var12.writeToParcel(var7,0);
    writeToParcelLocked(param2,1,param3);
    pullPendingStateUpdatesLocked();
    long var7 = getStartClockTime();
    long var3 = System.currentTimeMillis();
    var5 = var3 lt 31536000000;
    long var7 = this.mStartClockTime;
    var8 = var3 sub 31536000000;
    var9 = var7 lt var8;
    long var12 = this.mStartClockTime;
    var13 = var12 lt var3;
    BatteryStatsImpl$Clocks var16 = this.mClocks;
    long var18 = var16.elapsedRealtime();
    BatteryStatsImpl$Clocks var19 = this.mClocks;
    long var21 = var19.uptimeMillis();
    recordCurrentTimeChangeLocked(var3,var18,var21);
    BatteryStatsImpl$Clocks var23 = this.mClocks;
    long var25 = var23.elapsedRealtime();
    long var26 = this.mRealtimeStart;
    var28 = var26 div 1000;
    var29 = var25 sub var28;
    var30 = var3 sub var29;
    long var30;
}