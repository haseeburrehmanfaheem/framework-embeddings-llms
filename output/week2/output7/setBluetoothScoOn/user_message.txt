// API: setBluetoothScoOn
// Service: AudioService_2

public void setBluetoothScoOn() {
    int var8 = UserHandle.getCallingAppId();
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    AudioDeviceBroker var31 = this.mDeviceBroker;
    var31.setBluetoothScoOn(param2,var30);
    Object var4 = this.mDeviceStateLock;
    BtHelper var8 = this.mBtHelper;
    boolean var10 = var8.isBluetoothScoOn();
    this.mForcedUseForComm = 3;
    int var13 = this.mForcedUseForComm;
    this.mForcedUseForCommExt = var13;
    int var27 = AudioSystem.setParameters(var25);
    int var30 = this.mForcedUseForComm;
    sendIILMsgNoDelay(4,2,0,var30,param3);
    sendIILMsg(param2,param3,param4,param5,param6,0);
    Object var38 = sLastDeviceConnectionMsgTimeLock;
    long var40 = SystemClock.uptimeMillis();
    41 = conversion(J) 7;
    var42 = var40 add var41;
    long var52 = sLastDeviceConnectMsgTime;
    var53 = var52 lt var42;
    var57.sLastDeviceConnectMsgTime = var57;
    AudioDeviceBroker$BrokerHandler var63 = this.mBrokerHandler;
    AudioDeviceBroker$BrokerHandler var64 = this.mBrokerHandler;
    Message var66 = var64.obtainMessage(param2,param4,param5,param6);
    boolean var68 = var63.sendMessageAtTime(var66,var60);<PATH_SEP>int var8 = UserHandle.getCallingAppId();
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    AudioDeviceBroker var31 = this.mDeviceBroker;
    var31.setBluetoothScoOn(param2,var30);
    Object var4 = this.mDeviceStateLock;
    BtHelper var8 = this.mBtHelper;
    boolean var10 = var8.isBluetoothScoOn();
    this.mForcedUseForComm = 3;
    int var13 = this.mForcedUseForComm;
    this.mForcedUseForCommExt = var13;
    int var27 = AudioSystem.setParameters(var25);
    int var30 = this.mForcedUseForComm;
    sendIILMsgNoDelay(4,2,0,var30,param3);
    sendIILMsg(param2,param3,param4,param5,param6,0);
    long var20 = Binder.clearCallingIdentity();
    Binder.restoreCallingIdentity(var20);
    Object var38 = sLastDeviceConnectionMsgTimeLock;
    long var40 = SystemClock.uptimeMillis();
    41 = conversion(J) 7;
    var42 = var40 add var41;
    long var52 = sLastDeviceConnectMsgTime;
    var53 = var52 lt var42;
    var57.sLastDeviceConnectMsgTime = var57;
    AudioDeviceBroker$BrokerHandler var63 = this.mBrokerHandler;
    AudioDeviceBroker$BrokerHandler var64 = this.mBrokerHandler;
    Message var66 = var64.obtainMessage(param2,param4,param5,param6);
    boolean var68 = var63.sendMessageAtTime(var66,var60);<PATH_SEP>int var8 = UserHandle.getCallingAppId();
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    AudioDeviceBroker var31 = this.mDeviceBroker;
    var31.setBluetoothScoOn(param2,var30);
    Object var4 = this.mDeviceStateLock;
    BtHelper var8 = this.mBtHelper;
    boolean var10 = var8.isBluetoothScoOn();
    BluetoothHeadset var2 = this.mBluetoothHeadset;
    BluetoothHeadset var4 = this.mBluetoothHeadset;
    BluetoothDevice var5 = this.mBluetoothHeadsetDevice;
    int var7 = var4.getAudioState(var5);
    IBluetoothHeadset var3 = this.mService;
    boolean var7 = isDisabled();
    int var18 = var3.getAudioState(param2);
    int var18<PATH_SEP>int var8 = UserHandle.getCallingAppId();
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    AudioDeviceBroker var31 = this.mDeviceBroker;
    var31.setBluetoothScoOn(param2,var30);
    Object var4 = this.mDeviceStateLock;
    BtHelper var8 = this.mBtHelper;
    boolean var10 = var8.isBluetoothScoOn();
    this.mForcedUseForComm = 3;
    int var13 = this.mForcedUseForComm;
    this.mForcedUseForCommExt = var13;
    int var27 = AudioSystem.setParameters(var25);
    int var30 = this.mForcedUseForComm;
    sendIILMsgNoDelay(4,2,0,var30,param3);
    sendIILMsg(param2,param3,param4,param5,param6,0);
    AudioDeviceBroker$BrokerHandler var13 = this.mBrokerHandler;
    var13.removeMessages(param2);
    Object var38 = sLastDeviceConnectionMsgTimeLock;
    long var40 = SystemClock.uptimeMillis();
    41 = conversion(J) 7;
    var42 = var40 add var41;
    AudioDeviceBroker$BrokerHandler var63 = this.mBrokerHandler;
    AudioDeviceBroker$BrokerHandler var64 = this.mBrokerHandler;
    Message var66 = var64.obtainMessage(param2,param4,param5,param6);
    boolean var68 = var63.sendMessageAtTime(var66,var60);
}