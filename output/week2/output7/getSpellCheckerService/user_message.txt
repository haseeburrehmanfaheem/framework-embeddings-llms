// API: getSpellCheckerService
// Service: TextServicesManagerService_7

public void getSpellCheckerService() {
    boolean var10 = TextUtils.isEmpty(param3);
    Object var12 = this.mLock;
    TextServicesManagerService$TextServicesData var14 = getDataFromCallingUserIdLocked(param2);
    HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);{HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);};
    boolean var18 = var16.containsKey(param3);
    Object var20 = var16.get(param3);
    SpellCheckerInfo var21 = (SpellCheckerInfo) var20;
    HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);{HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);};
    Object var25 = var23.get(param3);
    TextServicesManagerService$SpellCheckerBindGroup var26 = (TextServicesManagerService$SpellCheckerBindGroup) var25;
    int var28 = Binder.getCallingUid();
    long var30 = Binder.clearCallingIdentity();
    TextServicesManagerService$SpellCheckerBindGroup var32 = startSpellCheckerServiceInnerLocked(var21,var14);
    Binder.restoreCallingIdentity(var30);
    TextServicesManagerService$SessionRequest var40 = new TextServicesManagerService$SessionRequest();
    var36.getISpellCheckerSessionOrQueueLocked(var40);
    boolean var3 = this.mUnbindCalled;
    TextServicesManagerService$InternalDeathRecipients var5 = this.mListeners;
    ISpellCheckerSessionListener var6 = param2.mScListener;
    boolean var8 = var5.register(var6);
    boolean var9 = this.mConnected;
    ISpellCheckerService var10 = this.mSpellChecker;
    String var11 = param2.mLocale;
    ISpellCheckerSessionListener var12 = param2.mScListener;
    Bundle var13 = param2.mBundle;
    TextServicesManagerService$ISpellCheckerServiceCallbackBinder var14 = new TextServicesManagerService$ISpellCheckerServiceCallbackBinder();
    var10.getISpellCheckerSession(var11,var12,var13,var14);
    WeakReference var6 = this.mInternalServiceRef;
    Object var8 = var6.get();
    SpellCheckerService var9 = (SpellCheckerService) var8;
    onSessionCreated(var16);
    Object var3 = this.mCallbackLock;
    WeakReference var4 = this.mBindGroup;
    WeakReference var6 = this.mRequest;
    WeakReference var7 = this.mBindGroup;
    Object var9 = var7.get();
    TextServicesManagerService$SpellCheckerBindGroup var10 = (TextServicesManagerService$SpellCheckerBindGroup) var9;
    WeakReference var11 = this.mRequest;
    Object var13 = var11.get();
    TextServicesManagerService$SessionRequest var14 = (TextServicesManagerService$SessionRequest) var13;
    this.mBindGroup = 0;
    this.mRequest = 0;
    var10.onSessionCreated(param2,var14);<PATH_SEP>boolean var10 = TextUtils.isEmpty(param3);
    Object var12 = this.mLock;
    TextServicesManagerService$TextServicesData var14 = getDataFromCallingUserIdLocked(param2);
    HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);{HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);};
    boolean var18 = var16.containsKey(param3);
    Object var20 = var16.get(param3);
    SpellCheckerInfo var21 = (SpellCheckerInfo) var20;
    HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);{HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);};
    Object var25 = var23.get(param3);
    TextServicesManagerService$SpellCheckerBindGroup var26 = (TextServicesManagerService$SpellCheckerBindGroup) var25;
    int var28 = Binder.getCallingUid();
    long var30 = Binder.clearCallingIdentity();
    TextServicesManagerService$SpellCheckerBindGroup var32 = startSpellCheckerServiceInnerLocked(var21,var14);
    Binder.restoreCallingIdentity(var30);
    TextServicesManagerService$SessionRequest var40 = new TextServicesManagerService$SessionRequest();
    var36.getISpellCheckerSessionOrQueueLocked(var40);
    boolean var3 = this.mUnbindCalled;
    TextServicesManagerService$InternalDeathRecipients var5 = this.mListeners;
    ISpellCheckerSessionListener var6 = param2.mScListener;
    boolean var8 = var5.register(var6);
    boolean var9 = this.mConnected;
    ISpellCheckerService var10 = this.mSpellChecker;
    String var11 = param2.mLocale;
    ISpellCheckerSessionListener var12 = param2.mScListener;
    Bundle var13 = param2.mBundle;
    TextServicesManagerService$ISpellCheckerServiceCallbackBinder var14 = new TextServicesManagerService$ISpellCheckerServiceCallbackBinder();
    var10.getISpellCheckerSession(var11,var12,var13,var14);
    ArrayList var19 = this.mOnGoingSessionRequests;
    boolean var21 = var19.add(param2);
    cleanLocked();
    boolean var2 = this.mUnbindCalled;
    TextServicesManagerService$InternalDeathRecipients var4 = this.mListeners;
    int var6 = var4.getRegisteredCallbackCount();
    ArrayList var7 = this.mPendingSessionRequests;
    boolean var9 = var7.isEmpty();
    ArrayList var10 = this.mOnGoingSessionRequests;
    boolean var12 = var10.isEmpty();
    TextServicesManagerService$InternalServiceConnection var13 = this.mInternalConnection;
    String var15 = TextServicesManagerService$InternalServiceConnection.access$2200(var13);{String var15 = TextServicesManagerService$InternalServiceConnection.access$2200(var13);};
    HashMap var16 = this.mSpellCheckerBindGroups;
    Object var18 = var16.get(var15);
    TextServicesManagerService$SpellCheckerBindGroup var19 = (TextServicesManagerService$SpellCheckerBindGroup) var18;
    HashMap var20 = this.mSpellCheckerBindGroups;
    Object var22 = var20.remove(var15);
    TextServicesManagerService var25 = this.this$0;
    Context var27 = TextServicesManagerService.access$2300(var25);{Context var27 = TextServicesManagerService.access$2300(var25);};
    TextServicesManagerService$InternalServiceConnection var28 = this.mInternalConnection;
    var27.unbindService(var28);
    this.mUnbindCalled = 1;<PATH_SEP>boolean var10 = TextUtils.isEmpty(param3);
    Object var12 = this.mLock;
    TextServicesManagerService$TextServicesData var14 = getDataFromCallingUserIdLocked(param2);
    HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);{HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);};
    boolean var18 = var16.containsKey(param3);
    Object var20 = var16.get(param3);
    SpellCheckerInfo var21 = (SpellCheckerInfo) var20;
    HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);{HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);};
    Object var25 = var23.get(param3);
    TextServicesManagerService$SpellCheckerBindGroup var26 = (TextServicesManagerService$SpellCheckerBindGroup) var25;
    int var28 = Binder.getCallingUid();
    long var30 = Binder.clearCallingIdentity();
    TextServicesManagerService$SpellCheckerBindGroup var32 = startSpellCheckerServiceInnerLocked(var21,var14);
    String var5 = getId();
    String var2 = this.mId;
    Ljava/lang/String var2<PATH_SEP>boolean var10 = TextUtils.isEmpty(param3);
    Object var12 = this.mLock;
    TextServicesManagerService$TextServicesData var14 = getDataFromCallingUserIdLocked(param2);
    HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);{HashMap var16 = TextServicesManagerService$TextServicesData.access$1800(var14);};
    boolean var18 = var16.containsKey(param3);
    Object var20 = var16.get(param3);
    SpellCheckerInfo var21 = (SpellCheckerInfo) var20;
    HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);{HashMap var23 = TextServicesManagerService$TextServicesData.access$1600(var14);};
    Object var25 = var23.get(param3);
    TextServicesManagerService$SpellCheckerBindGroup var26 = (TextServicesManagerService$SpellCheckerBindGroup) var25;
    int var28 = Binder.getCallingUid();
    long var30 = Binder.clearCallingIdentity();
    TextServicesManagerService$SpellCheckerBindGroup var32 = startSpellCheckerServiceInnerLocked(var21,var14);
    Binder.restoreCallingIdentity(var30);
    TextServicesManagerService$SessionRequest var40 = new TextServicesManagerService$SessionRequest();
    var36.getISpellCheckerSessionOrQueueLocked(var40);
    boolean var3 = this.mUnbindCalled;
    TextServicesManagerService$InternalDeathRecipients var5 = this.mListeners;
    ISpellCheckerSessionListener var6 = param2.mScListener;
    boolean var8 = var5.register(var6);
    boolean var9 = this.mConnected;
    ISpellCheckerService var10 = this.mSpellChecker;
    String var11 = param2.mLocale;
    ISpellCheckerSessionListener var12 = param2.mScListener;
    Bundle var13 = param2.mBundle;
    TextServicesManagerService$ISpellCheckerServiceCallbackBinder var14 = new TextServicesManagerService$ISpellCheckerServiceCallbackBinder();
    var10.getISpellCheckerSession(var11,var12,var13,var14);
    ArrayList var19 = this.mOnGoingSessionRequests;
    boolean var21 = var19.add(param2);
    cleanLocked();
    boolean var2 = this.mUnbindCalled;
}