// API: replacePreferredActivity
// Service: PackageManagerService_6

public void replacePreferredActivity() {
    int var8 = countActions();
    int var14 = countDataAuthorities();
    int var17 = countDataPaths();
    int var19 = countDataSchemes();
    int var21 = countDataTypes();
    int var29 = Binder.getCallingUid();
    PermissionManagerServiceInternal var30 = this.mPermissionManager;
    Context var33 = this.mContext;
    ArrayMap var37 = this.mPackages;
    int var39 = getUidTargetSdkVersionLockedLPr(var29);
    Context var41 = this.mContext;
    ArrayMap var48 = this.mPackages;
    Settings var49 = this.mSettings;
    SparseArray var50 = var49.mPreferredActivities;
    Object var54 = var50.get(param6);
    PreferredIntentResolver var55 = (PreferredIntentResolver) var54;
    ArrayList var59 = var55.findFilters(param2);
    int var61 = var59.size();
    Object var66 = var59.get(0);
    PreferredActivity var67 = (PreferredActivity) var66;
    PreferredComponent var68 = var67.mPref;
    boolean var69 = var68.mAlways;
    PreferredComponent var70 = var67.mPref;
    ComponentName var71 = var70.mComponent;
    boolean var85 = var71.equals(param5);
    PreferredComponent var86 = var67.mPref;
    int var87 = var86.mMatch;
    var89 = param3 and 268369920;
    PreferredComponent var92 = var67.mPref;
    boolean var97 = var92.sameSet(param4);
    int var104 = var59.size();
    var105 = var104 sub 1;
    addPreferredActivityInternal(param2,param3,param4,param5,1,param6,Replacing preferred);
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Context var16 = this.mContext;
    int var21 = getUidTargetSdkVersionLockedLPr(var10);
    Context var23 = this.mContext;
    int var31 = countActions();
    ArrayMap var32 = this.mPackages;
    Settings var33 = this.mSettings;
    PreferredIntentResolver var35 = var33.editPreferredActivitiesLPw(param7);
    PreferredActivity var36 = new PreferredActivity();
    var35.addFilter(var36);
    scheduleWritePackageRestrictionsLocked(param7);
    boolean var46 = updateDefaultHomeNotLocked(param7);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    ResolveInfo var39 = findPreferredActivityNotLocked(var33,0,0,var36,0,1,0,0,param2);
    ArrayMap var11 = this.mPackages;
    boolean var13 = Thread.holdsLock(var11);
    Thread var21 = Thread.currentThread();
    String var23 = var21.getName();
    Throwable var31 = new Throwable();
    UserManagerService var39 = sUserManager;
    boolean var41 = var39.exists(param10);
    int var43 = Binder.getCallingUid();
    Context var44 = this.mContext;
    ContentResolver var46 = var44.getContentResolver();
    int var49 = Settings$Global.getInt(var46,device_provisioned,0);
    int var53 = updateFlagsForResolve(param4,param10,param2,var43,0);
    Intent var55 = updateIntentForResolve(param2);
    ArrayMap var56 = this.mPackages;
    ResolveInfo var58 = findPersistentPreferredActivityLP(var55,param3,var53,param5,param9,param10);
    Settings var59 = this.mSettings;
    SparseArray var60 = var59.mPreferredActivities;
    Object var62 = var60.get(param10);
    PreferredIntentResolver var63 = (PreferredIntentResolver) var62;
    var72 = 65536 and var53;
    List var75 = var63.queryIntent(var55,param3,var73,param10);
    int var80 = var76.size();
    int var100 = size();
    String var147 = Integer.toHexString(var136);
    var160 = 268369920 and var136;
    int var162 = var76.size();
    Object var165 = var76.get(var316);
    PreferredActivity var166 = (PreferredActivity) var165;
    int var173 = var166.countDataSchemes();
    String var175 = var166.getDataScheme(0);
    PreferredComponent var185 = var166.mPref;
    ComponentName var186 = var185.mComponent;
    var166.dump(var193;
    );
    PreferredComponent var205 = var166.mPref;
    int var206 = var205.mMatch;
    PreferredComponent var227 = var166.mPref;
    boolean var228 = var227.mAlways;
    PreferredComponent var237 = var166.mPref;
    ComponentName var238 = var237.mComponent;
    var240 = var53 or 512;
    var242 = var240 or 524288;
    var244 = var242 or 262144;
    ActivityInfo var246 = getActivityInfo(var238,var244,param10);
    var246.dump(var250;
    );
    boolean var263 = isHomeIntent(var55);
    Object var280 = get(var290);
    ResolveInfo var281 = (ResolveInfo) var280;
    ActivityInfo var282 = var281.activityInfo;
    ApplicationInfo var283 = var282.applicationInfo;
    String var284 = var283.packageName;
    ApplicationInfo var285 = var246.applicationInfo;
    String var286 = var285.packageName;
    boolean var288 = var284.equals(var286);
    ActivityInfo var295 = var281.activityInfo;
    String var296 = var295.name;
    String var297 = var246.name;
    boolean var299 = var296.equals(var297);
    PreferredComponent var361 = var166.mPref;
    boolean var363 = var361.sameSet(param5,var264);
    ActivityInfo var421 = var281.activityInfo;
    String var422 = var421.packageName;
    ActivityInfo var428 = var281.activityInfo;
    String var429 = var428.name;
    scheduleWritePackageRestrictionsLocked(param10);<PATH_SEP>int var8 = countActions();
    int var14 = countDataAuthorities();
    int var17 = countDataPaths();
    int var19 = countDataSchemes();
    int var21 = countDataTypes();
    int var29 = Binder.getCallingUid();
    PermissionManagerServiceInternal var30 = this.mPermissionManager;
    Context var33 = this.mContext;
    ArrayMap var37 = this.mPackages;
    int var39 = getUidTargetSdkVersionLockedLPr(var29);
    Context var41 = this.mContext;
    ArrayMap var48 = this.mPackages;
    Settings var49 = this.mSettings;
    SparseArray var50 = var49.mPreferredActivities;
    Object var54 = var50.get(param6);
    PreferredIntentResolver var55 = (PreferredIntentResolver) var54;
    ArrayList var59 = var55.findFilters(param2);
    int var61 = var59.size();
    Object var66 = var59.get(0);
    PreferredActivity var67 = (PreferredActivity) var66;
    PreferredComponent var68 = var67.mPref;
    boolean var69 = var68.mAlways;
    PreferredComponent var70 = var67.mPref;
    ComponentName var71 = var70.mComponent;
    boolean var85 = var71.equals(param5);
    PreferredComponent var86 = var67.mPref;
    int var87 = var86.mMatch;
    var89 = param3 and 268369920;
    PreferredComponent var92 = var67.mPref;
    boolean var97 = var92.sameSet(param4);
    int var104 = var59.size();
    var105 = var104 sub 1;
    addPreferredActivityInternal(param2,param3,param4,param5,1,param6,Replacing preferred);
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Context var16 = this.mContext;
    int var21 = getUidTargetSdkVersionLockedLPr(var10);
    Context var23 = this.mContext;
    int var31 = countActions();
    ArrayMap var32 = this.mPackages;
    Settings var33 = this.mSettings;
    PreferredIntentResolver var35 = var33.editPreferredActivitiesLPw(param7);
    PreferredActivity var36 = new PreferredActivity();
    var35.addFilter(var36);
    scheduleWritePackageRestrictionsLocked(param7);
    boolean var46 = updateDefaultHomeNotLocked(param7);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    ResolveInfo var39 = findPreferredActivityNotLocked(var33,0,0,var36,0,1,0,0,param2);
    ArrayMap var11 = this.mPackages;
    boolean var13 = Thread.holdsLock(var11);
    Thread var21 = Thread.currentThread();
    String var23 = var21.getName();
    Throwable var31 = new Throwable();
    UserManagerService var39 = sUserManager;
    boolean var41 = var39.exists(param10);
    int var43 = Binder.getCallingUid();
    Context var44 = this.mContext;
    ContentResolver var46 = var44.getContentResolver();
    int var49 = Settings$Global.getInt(var46,device_provisioned,0);
    int var53 = updateFlagsForResolve(param4,param10,param2,var43,0);
    Intent var55 = updateIntentForResolve(param2);
    ArrayMap var56 = this.mPackages;
    ResolveInfo var58 = findPersistentPreferredActivityLP(var55,param3,var53,param5,param9,param10);
    Settings var59 = this.mSettings;
    SparseArray var60 = var59.mPreferredActivities;
    Object var62 = var60.get(param10);
    PreferredIntentResolver var63 = (PreferredIntentResolver) var62;
    var72 = 65536 and var53;
    List var75 = var63.queryIntent(var55,param3,var73,param10);
    int var80 = var76.size();
    int var100 = size();
    String var147 = Integer.toHexString(var136);
    var160 = 268369920 and var136;
    int var162 = var76.size();
    Object var165 = var76.get(var316);
    PreferredActivity var166 = (PreferredActivity) var165;
    int var173 = var166.countDataSchemes();
    String var175 = var166.getDataScheme(0);
    PreferredComponent var185 = var166.mPref;
    ComponentName var186 = var185.mComponent;
    var166.dump(var193;
    );
    PreferredComponent var205 = var166.mPref;
    int var206 = var205.mMatch;
    PreferredComponent var227 = var166.mPref;
    boolean var228 = var227.mAlways;
    PreferredComponent var237 = var166.mPref;
    ComponentName var238 = var237.mComponent;
    var240 = var53 or 512;
    var242 = var240 or 524288;
    var244 = var242 or 262144;
    ActivityInfo var246 = getActivityInfo(var238,var244,param10);
    var246.dump(var250;
    );
    boolean var263 = isHomeIntent(var55);
    Object var280 = get(var290);
    ResolveInfo var281 = (ResolveInfo) var280;
    ActivityInfo var282 = var281.activityInfo;
    ApplicationInfo var283 = var282.applicationInfo;
    String var284 = var283.packageName;
    ApplicationInfo var285 = var246.applicationInfo;
    String var286 = var285.packageName;
    boolean var288 = var284.equals(var286);
    ActivityInfo var295 = var281.activityInfo;
    String var296 = var295.name;
    String var297 = var246.name;
    boolean var299 = var296.equals(var297);
    PreferredComponent var361 = var166.mPref;
    boolean var363 = var361.sameSet(param5,var264);
    PreferredComponent var367 = var166.mPref;
    boolean var369 = var367.isSuperset(param5,var264);
    scheduleWritePackageRestrictionsLocked(param10);
    Landroid/content/pm/ResolveInfo var281<PATH_SEP>int var8 = countActions();
    int var14 = countDataAuthorities();
    int var17 = countDataPaths();
    int var19 = countDataSchemes();
    int var21 = countDataTypes();
    int var29 = Binder.getCallingUid();
    PermissionManagerServiceInternal var30 = this.mPermissionManager;
    Context var33 = this.mContext;
    ArrayMap var37 = this.mPackages;
    int var39 = getUidTargetSdkVersionLockedLPr(var29);
    Context var41 = this.mContext;
    ArrayMap var48 = this.mPackages;
    Settings var49 = this.mSettings;
    SparseArray var50 = var49.mPreferredActivities;
    Object var54 = var50.get(param6);
    PreferredIntentResolver var55 = (PreferredIntentResolver) var54;
    ArrayList var59 = var55.findFilters(param2);
    int var61 = var59.size();
    Object var66 = var59.get(0);
    PreferredActivity var67 = (PreferredActivity) var66;
    PreferredComponent var68 = var67.mPref;
    boolean var69 = var68.mAlways;
    PreferredComponent var70 = var67.mPref;
    ComponentName var71 = var70.mComponent;
    boolean var85 = var71.equals(param5);
    PreferredComponent var86 = var67.mPref;
    int var87 = var86.mMatch;
    var89 = param3 and 268369920;
    PreferredComponent var92 = var67.mPref;
    boolean var97 = var92.sameSet(param4);
    int var104 = var59.size();
    var105 = var104 sub 1;
    addPreferredActivityInternal(param2,param3,param4,param5,1,param6,Replacing preferred);
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Context var16 = this.mContext;
    int var21 = getUidTargetSdkVersionLockedLPr(var10);
    Context var23 = this.mContext;
    int var31 = countActions();
    ArrayMap var32 = this.mPackages;
    Settings var33 = this.mSettings;
    PreferredIntentResolver var35 = var33.editPreferredActivitiesLPw(param7);
    PreferredActivity var36 = new PreferredActivity();
    var35.addFilter(var36);
    scheduleWritePackageRestrictionsLocked(param7);
    boolean var46 = updateDefaultHomeNotLocked(param7);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    ResolveInfo var39 = findPreferredActivityNotLocked(var33,0,0,var36,0,1,0,0,param2);
    ArrayMap var11 = this.mPackages;
    boolean var13 = Thread.holdsLock(var11);
    Thread var21 = Thread.currentThread();
    String var23 = var21.getName();
    Throwable var31 = new Throwable();
    UserManagerService var39 = sUserManager;
    boolean var41 = var39.exists(param10);
    int var43 = Binder.getCallingUid();
    Context var44 = this.mContext;
    ContentResolver var46 = var44.getContentResolver();
    int var49 = Settings$Global.getInt(var46,device_provisioned,0);
    int var53 = updateFlagsForResolve(param4,param10,param2,var43,0);
    Intent var55 = updateIntentForResolve(param2);
    ArrayMap var56 = this.mPackages;
    ResolveInfo var58 = findPersistentPreferredActivityLP(var55,param3,var53,param5,param9,param10);
    Settings var59 = this.mSettings;
    SparseArray var60 = var59.mPreferredActivities;
    Object var62 = var60.get(param10);
    PreferredIntentResolver var63 = (PreferredIntentResolver) var62;
    var72 = 65536 and var53;
    List var75 = var63.queryIntent(var55,param3,var73,param10);
    int var80 = var76.size();
    int var100 = size();
    String var147 = Integer.toHexString(var136);
    var160 = 268369920 and var136;
    int var162 = var76.size();
    Object var165 = var76.get(var316);
    PreferredActivity var166 = (PreferredActivity) var165;
    int var173 = var166.countDataSchemes();
    String var175 = var166.getDataScheme(0);
    PreferredComponent var185 = var166.mPref;
    ComponentName var186 = var185.mComponent;
    var166.dump(var193;
    );
    PreferredComponent var205 = var166.mPref;
    int var206 = var205.mMatch;
    PreferredComponent var227 = var166.mPref;
    boolean var228 = var227.mAlways;
    PreferredComponent var237 = var166.mPref;
    ComponentName var238 = var237.mComponent;
    var240 = var53 or 512;
    var242 = var240 or 524288;
    var244 = var242 or 262144;
    ActivityInfo var246 = getActivityInfo(var238,var244,param10);
    var246.dump(var250;
    );
    boolean var263 = isHomeIntent(var55);
    Object var280 = get(var290);
    ResolveInfo var281 = (ResolveInfo) var280;
    ActivityInfo var282 = var281.activityInfo;
    ApplicationInfo var283 = var282.applicationInfo;
    String var284 = var283.packageName;
    ApplicationInfo var285 = var246.applicationInfo;
    String var286 = var285.packageName;
    boolean var288 = var284.equals(var286);
    ActivityInfo var295 = var281.activityInfo;
    String var296 = var295.name;
    String var297 = var246.name;
    boolean var299 = var296.equals(var297);
    PreferredComponent var361 = var166.mPref;
    boolean var363 = var361.sameSet(param5,var264);
    PreferredComponent var367 = var166.mPref;
    boolean var369 = var367.isSuperset(param5,var264);
    var63.removeFilter(var166);
    PreferredActivity var387 = new PreferredActivity();
    PreferredComponent var388 = var166.mPref;
    int var389 = var388.mMatch;
    PreferredComponent var390 = var166.mPref;
    ComponentName var391 = var390.mComponent;
    var63.addFilter(var387);
    scheduleWritePackageRestrictionsLocked(param10);
    Landroid/content/pm/ResolveInfo 0<PATH_SEP>int var8 = countActions();
    int var14 = countDataAuthorities();
    int var17 = countDataPaths();
    int var19 = countDataSchemes();
    int var21 = countDataTypes();
    int var29 = Binder.getCallingUid();
    PermissionManagerServiceInternal var30 = this.mPermissionManager;
    Context var33 = this.mContext;
    ArrayMap var37 = this.mPackages;
    int var39 = getUidTargetSdkVersionLockedLPr(var29);
    Context var41 = this.mContext;
    ArrayMap var48 = this.mPackages;
    Settings var49 = this.mSettings;
    SparseArray var50 = var49.mPreferredActivities;
    Object var54 = var50.get(param6);
    PreferredIntentResolver var55 = (PreferredIntentResolver) var54;
    ArrayList var59 = var55.findFilters(param2);
    int var61 = var59.size();
    Object var66 = var59.get(0);
    PreferredActivity var67 = (PreferredActivity) var66;
    PreferredComponent var68 = var67.mPref;
    boolean var69 = var68.mAlways;
    PreferredComponent var70 = var67.mPref;
    ComponentName var71 = var70.mComponent;
    boolean var85 = var71.equals(param5);
    PreferredComponent var86 = var67.mPref;
    int var87 = var86.mMatch;
    var89 = param3 and 268369920;
    PreferredComponent var92 = var67.mPref;
    boolean var97 = var92.sameSet(param4);
    int var104 = var59.size();
    var105 = var104 sub 1;
    addPreferredActivityInternal(param2,param3,param4,param5,1,param6,Replacing preferred);
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Context var16 = this.mContext;
    int var21 = getUidTargetSdkVersionLockedLPr(var10);
    Context var23 = this.mContext;
    int var31 = countActions();
    ArrayMap var32 = this.mPackages;
    Settings var33 = this.mSettings;
    PreferredIntentResolver var35 = var33.editPreferredActivitiesLPw(param7);
    PreferredActivity var36 = new PreferredActivity();
    var35.addFilter(var36);
    scheduleWritePackageRestrictionsLocked(param7);
    boolean var46 = updateDefaultHomeNotLocked(param7);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    ResolveInfo var39 = findPreferredActivityNotLocked(var33,0,0,var36,0,1,0,0,param2);
    ArrayMap var11 = this.mPackages;
    boolean var13 = Thread.holdsLock(var11);
    Thread var21 = Thread.currentThread();
    String var23 = var21.getName();
    Throwable var31 = new Throwable();
    UserManagerService var39 = sUserManager;
    boolean var41 = var39.exists(param10);
    int var43 = Binder.getCallingUid();
    Context var44 = this.mContext;
    ContentResolver var46 = var44.getContentResolver();
    int var49 = Settings$Global.getInt(var46,device_provisioned,0);
    int var53 = updateFlagsForResolve(param4,param10,param2,var43,0);
    Intent var55 = updateIntentForResolve(param2);
    ArrayMap var56 = this.mPackages;
    ResolveInfo var58 = findPersistentPreferredActivityLP(var55,param3,var53,param5,param9,param10);
    Settings var59 = this.mSettings;
    SparseArray var60 = var59.mPreferredActivities;
    Object var62 = var60.get(param10);
    PreferredIntentResolver var63 = (PreferredIntentResolver) var62;
    var72 = 65536 and var53;
    List var75 = var63.queryIntent(var55,param3,var73,param10);
    int var80 = var76.size();
    int var100 = size();
    String var147 = Integer.toHexString(var136);
    var160 = 268369920 and var136;
    int var162 = var76.size();
    Object var165 = var76.get(var316);
    PreferredActivity var166 = (PreferredActivity) var165;
    int var173 = var166.countDataSchemes();
    String var175 = var166.getDataScheme(0);
    PreferredComponent var185 = var166.mPref;
    ComponentName var186 = var185.mComponent;
    var166.dump(var193;
    );
    PreferredComponent var205 = var166.mPref;
    int var206 = var205.mMatch;
    PreferredComponent var227 = var166.mPref;
    boolean var228 = var227.mAlways;
    PreferredComponent var237 = var166.mPref;
    ComponentName var238 = var237.mComponent;
    var240 = var53 or 512;
    var242 = var240 or 524288;
    var244 = var242 or 262144;
    ActivityInfo var246 = getActivityInfo(var238,var244,param10);
    var246.dump(var250;
    );
    boolean var263 = isHomeIntent(var55);
    Object var280 = get(var290);
    ResolveInfo var281 = (ResolveInfo) var280;
    ActivityInfo var282 = var281.activityInfo;
    ApplicationInfo var283 = var282.applicationInfo;
    String var284 = var283.packageName;
    ApplicationInfo var285 = var246.applicationInfo;
    String var286 = var285.packageName;
    boolean var288 = var284.equals(var286);
    ActivityInfo var295 = var281.activityInfo;
    String var296 = var295.name;
    String var297 = var246.name;
    boolean var299 = var296.equals(var297);
    PreferredComponent var361 = var166.mPref;
    boolean var363 = var361.sameSet(param5,var264);
    PreferredComponent var367 = var166.mPref;
    boolean var369 = var367.isSuperset(param5,var264);
    PreferredActivity var396 = new PreferredActivity();
    PreferredComponent var397 = var166.mPref;
    int var398 = var397.mMatch;
    PreferredComponent var399 = var166.mPref;
    ComponentName var401 = var399.discardObsoleteComponents(param5);
    PreferredComponent var402 = var166.mPref;
    ComponentName var403 = var402.mComponent;
    PreferredComponent var404 = var166.mPref;
    boolean var405 = var404.mAlways;
    var63.removeFilter(var166);
    var63.addFilter(var396);
    ActivityInfo var421 = var281.activityInfo;
    String var422 = var421.packageName;
    ActivityInfo var428 = var281.activityInfo;
    String var429 = var428.name;
    scheduleWritePackageRestrictionsLocked(param10);
    Landroid/content/pm/ResolveInfo var281;
}