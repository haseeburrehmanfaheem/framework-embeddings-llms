// API: onPendingSaveUi
// Service: AutofillManagerService$AutoFillManagerServiceStub_3

public void onPendingSaveUi() {
    Object var6 = Preconditions.checkNotNull(param3,token);{Object var6 = Preconditions.checkNotNull(param3,token);};
    Object var11 = new Object(1);
    Integer var13 = Integer.valueOf(param2);
    arraystore 11[7] = 13;
    Preconditions.checkArgument(var10,invalid operation: %d,var11);{Preconditions.checkArgument(var10,invalid operation: %d,var11);};
    AutofillManagerService var16 = this.this$0;
    Object var18 = AutofillManagerService.access$6400(var16);{Object var18 = AutofillManagerService.access$6400(var16);};
    AutofillManagerService var19 = this.this$0;
    int var21 = UserHandle.getCallingUserId();
    AbstractPerUserSystemService var23 = AutofillManagerService.access$6500(var19,var21);{AbstractPerUserSystemService var23 = AutofillManagerService.access$6500(var19,var21);};
    AutofillManagerServiceImpl var24 = (AutofillManagerServiceImpl) var23;
    var24.onPendingSaveUi(param2,param3);
    boolean var4 = sVerbose;
    Object var24 = this.mLock;
    SparseArray var25 = this.mSessions;
    int var27 = var25.size();
    var29 = var27 add -1;
    SparseArray var30 = this.mSessions;
    Object var32 = var30.valueAt(var37);
    Session var33 = (Session) var32;
    boolean var35 = var33.isSaveUiPendingForTokenLocked(param3);
    var33.onPendingSaveUi(param2,param3);
    AutoFillUI var5 = getUiForShowing();
    var5.onPendingSaveUi(param2,param3);
    Handler var4 = this.mHandler;
    -$$Lambda$AutoFillUI$R46Kz1SlDpiZBOYi-1HNH5FBjnU var5 = new -$$Lambda$AutoFillUI$R46Kz1SlDpiZBOYi-1HNH5FBjnU();
    boolean var8 = var4.post(var5);
}