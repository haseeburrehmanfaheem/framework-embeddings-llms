// API: stopTethering
// Service: ConnectivityService_3

public void stopTethering() {
    Context var4 = this.mContext;
    Tethering var6 = this.mTethering;
    var6.stopTethering(param2);
    enableTetheringInternal(param2,0,0);
    int var7 = setWifiTethering(param3);
    long var4 = Binder.clearCallingIdentity();
    Object var5 = this.mPublicSync;
    WifiManager var7 = getWifiManager();
    boolean var10 = var7.startSoftAp(0);
    boolean var14 = var7.stopSoftAp();
    this.mWifiTetherRequested = param2;
    Binder.restoreCallingIdentity(var4);
    int 0<PATH_SEP>Context var4 = this.mContext;
    Tethering var6 = this.mTethering;
    var6.stopTethering(param2);
    enableTetheringInternal(param2,0,0);
    int var7 = setWifiTethering(param3);
    long var4 = Binder.clearCallingIdentity();
    Object var5 = this.mPublicSync;
    WifiManager var7 = getWifiManager();
    boolean var10 = var7.startSoftAp(0);
    this.mWifiTetherRequested = param2;<PATH_SEP>Context var4 = this.mContext;
    Tethering var6 = this.mTethering;
    var6.stopTethering(param2);
    enableTetheringInternal(param2,0,0);
    int var11 = setUsbTethering(param3);<PATH_SEP>Context var4 = this.mContext;
    Tethering var6 = this.mTethering;
    var6.stopTethering(param2);
    enableTetheringInternal(param2,0,0);
    int var7 = setWifiTethering(param3);
    long var4 = Binder.clearCallingIdentity();
    Object var5 = this.mPublicSync;
    WifiManager var7 = getWifiManager();
    boolean var10 = var7.startSoftAp(0);
    boolean var14 = var7.stopSoftAp();
    this.mWifiTetherRequested = param2;
}