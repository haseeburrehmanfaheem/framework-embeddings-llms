// API: onTetheringChanged
// Service: NetworkPolicyManagerService_3

public void onTetheringChanged() {
    Object var4 = this.mUidRulesFirstLock;
    boolean var5 = this.mRestrictBackground;
    setRestrictBackground(0);
    Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    boolean var34 = var28.hasCycle();
    Iterator var36 = NetworkPolicyManager.cycleIterator(var28);
    Object var38 = var36.next();
    Pair var39 = (Pair) var38;
    Object var40 = var39.first;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    Object var46 = var39.second;
    ZonedDateTime var47 = (ZonedDateTime) var46;
    Instant var49 = var47.toInstant();
    long var51 = var49.toEpochMilli();
    NetworkTemplate var52 = var28.template;
    long var54 = getTotalBytes(var52,var45,var51);
    CarrierConfigManager var55 = this.mCarrierConfigManager;
    PersistableBundle var57 = var55.getConfigForSubId(var31);
    boolean var59 = CarrierConfigManager.isConfigForIdentifiedCarrier(var57);
    boolean var62 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_warning_notification_bool,1);
    boolean var65 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_limit_notification_bool,1);
    boolean var68 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_rapid_notification_bool,1);
    boolean var70 = var28.isOverWarning(var54);
    boolean var72 = var28.isOverLimit(var54);
    boolean var88 = var28.isOverLimit(var54);
    long var89 = var28.lastLimitSnooze;
    var90 = var89 lt var45;
    enqueueNotification(var28,36,var54,0);<PATH_SEP>Object var4 = this.mUidRulesFirstLock;
    boolean var5 = this.mRestrictBackground;
    setRestrictBackground(0);
    Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    boolean var34 = var28.hasCycle();
    Iterator var36 = NetworkPolicyManager.cycleIterator(var28);
    Object var38 = var36.next();
    Pair var39 = (Pair) var38;
    Object var40 = var39.first;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    Object var46 = var39.second;
    ZonedDateTime var47 = (ZonedDateTime) var46;
    Instant var49 = var47.toInstant();
    long var51 = var49.toEpochMilli();
    NetworkTemplate var52 = var28.template;
    long var54 = getTotalBytes(var52,var45,var51);
    CarrierConfigManager var55 = this.mCarrierConfigManager;
    PersistableBundle var57 = var55.getConfigForSubId(var31);
    boolean var59 = CarrierConfigManager.isConfigForIdentifiedCarrier(var57);
    boolean var62 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_warning_notification_bool,1);
    boolean var65 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_limit_notification_bool,1);
    boolean var68 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_rapid_notification_bool,1);
    boolean var70 = var28.isOverWarning(var54);
    boolean var72 = var28.isOverLimit(var54);
    long var73 = var28.lastWarningSnooze;
    var74 = var73 lt var45;
    boolean var88 = var28.isOverLimit(var54);
    long var89 = var28.lastLimitSnooze;
    var90 = var89 lt var45;
    enqueueNotification(var28,36,var54,0);
    long var110 = var28.limitBytes;
    var112 = var110 lt -1;
    TimeUnit var113 = DAYS;
    long var116 = var113.toMillis(4);
    var117 = var19 sub var116;
    NetworkTemplate var118 = var28.template;
    long var120 = getTotalBytes(var118,var117,var19);
    var121 = var51 sub var45;
    var122 = var120 mul var121;
    var123 = var122 div var116;
    long var124 = var28.limitBytes;
    var126 = var124 mul 3;
    var128 = var126 div 2;
    boolean var129 = LOGD;
    long var154 = var28.lastRapidSnooze;
    var156 = var19 sub 86400000;
    var157 = var154 lt var156;
    var159 = var123 lt var128;
    NetworkTemplate var161 = var28.template;
    ApplicationInfo var163 = findRapidBlame(var161,var117,var19);
    enqueueNotification(var28,45,0,var163);<PATH_SEP>Object var4 = this.mUidRulesFirstLock;
    boolean var5 = this.mRestrictBackground;
    setRestrictBackground(0);
    Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    boolean var34 = var28.hasCycle();
    Iterator var36 = NetworkPolicyManager.cycleIterator(var28);
    Object var38 = var36.next();
    Pair var39 = (Pair) var38;
    Object var40 = var39.first;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    Object var46 = var39.second;
    ZonedDateTime var47 = (ZonedDateTime) var46;
    Instant var49 = var47.toInstant();
    long var51 = var49.toEpochMilli();
    NetworkTemplate var52 = var28.template;
    long var54 = getTotalBytes(var52,var45,var51);
    CarrierConfigManager var55 = this.mCarrierConfigManager;
    PersistableBundle var57 = var55.getConfigForSubId(var31);
    boolean var59 = CarrierConfigManager.isConfigForIdentifiedCarrier(var57);
    boolean var62 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_warning_notification_bool,1);
    boolean var65 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_limit_notification_bool,1);
    boolean var68 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_rapid_notification_bool,1);
    boolean var70 = var28.isOverWarning(var54);
    boolean var72 = var28.isOverLimit(var54);
    long var73 = var28.lastWarningSnooze;
    var74 = var73 lt var45;
    boolean var88 = var28.isOverLimit(var54);
    long var89 = var28.lastLimitSnooze;
    var90 = var89 lt var45;
    enqueueNotification(var28,35,var54,0);
    NetworkTemplate var96 = var28.template;
    notifyOverLimitNL(var96);<PATH_SEP>Object var4 = this.mUidRulesFirstLock;
    boolean var5 = this.mRestrictBackground;
    setRestrictBackground(0);
    Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    boolean var34 = var28.hasCycle();
    Iterator var36 = NetworkPolicyManager.cycleIterator(var28);
    Object var38 = var36.next();
    Pair var39 = (Pair) var38;
    Object var40 = var39.first;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    Object var46 = var39.second;
    ZonedDateTime var47 = (ZonedDateTime) var46;
    Instant var49 = var47.toInstant();
    long var51 = var49.toEpochMilli();
    NetworkTemplate var52 = var28.template;
    long var54 = getTotalBytes(var52,var45,var51);
    CarrierConfigManager var55 = this.mCarrierConfigManager;
    PersistableBundle var57 = var55.getConfigForSubId(var31);
    boolean var59 = CarrierConfigManager.isConfigForIdentifiedCarrier(var57);
    boolean var62 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_warning_notification_bool,1);
    boolean var65 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_limit_notification_bool,1);
    boolean var68 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_rapid_notification_bool,1);
    boolean var70 = var28.isOverWarning(var54);
    boolean var72 = var28.isOverLimit(var54);
    long var73 = var28.lastWarningSnooze;
    var74 = var73 lt var45;
    boolean var88 = var28.isOverLimit(var54);
    NetworkTemplate var101 = var28.template;
    notifyUnderLimitNL(var101);
}