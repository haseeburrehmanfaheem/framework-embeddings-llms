// API: clearPackagePreferredActivities
// Service: PackageManagerService_2

public void clearPackagePreferredActivities() {
    int var4 = Binder.getCallingUid();
    String var6 = getInstantAppPackageName(var4);
    ArrayMap var8 = this.mPackages;
    ArrayMap var9 = this.mPackages;
    Object var11 = var9.get(param2);
    PackageParser$Package var12 = (PackageParser$Package) var11;
    Context var17 = this.mContext;
    int var22 = getUidTargetSdkVersionLockedLPr(var4);
    Context var24 = this.mContext;
    Settings var29 = this.mSettings;
    PackageSetting var31 = var29.getPackageLPr(param2);
    int var33 = UserHandle.getUserId(var4);
    boolean var35 = filterAppAccessLPr(var31,var4,var33);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var13 = this.mComponentResolver;
    PackageParser$Provider var15 = var13.getProvider(param2);
    ProviderInfo var16 = var15.info;
    int var17 = var16.flags;
    var18 = 1048576 and var17;
    boolean var20<PATH_SEP>int var4 = Binder.getCallingUid();
    String var6 = getInstantAppPackageName(var4);
    ArrayMap var8 = this.mPackages;
    ArrayMap var9 = this.mPackages;
    Object var11 = var9.get(param2);
    PackageParser$Package var12 = (PackageParser$Package) var11;
    Context var17 = this.mContext;
    int var22 = getUidTargetSdkVersionLockedLPr(var4);
    Context var24 = this.mContext;
    Settings var29 = this.mSettings;
    PackageSetting var31 = var29.getPackageLPr(param2);
    int var33 = UserHandle.getUserId(var4);
    boolean var35 = filterAppAccessLPr(var31,var4,var33);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var31 = this.mComponentResolver;
    PackageParser$Activity var33 = var31.getReceiver(param2);
    boolean 0<PATH_SEP>int var4 = Binder.getCallingUid();
    String var6 = getInstantAppPackageName(var4);
    ArrayMap var8 = this.mPackages;
    ArrayMap var9 = this.mPackages;
    Object var11 = var9.get(param2);
    PackageParser$Package var12 = (PackageParser$Package) var11;
    Context var17 = this.mContext;
    int var22 = getUidTargetSdkVersionLockedLPr(var4);
    Context var24 = this.mContext;
    Settings var29 = this.mSettings;
    PackageSetting var31 = var29.getPackageLPr(param2);
    int var33 = UserHandle.getUserId(var4);
    boolean var35 = filterAppAccessLPr(var31,var4,var33);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean 0<PATH_SEP>int var4 = Binder.getCallingUid();
    String var6 = getInstantAppPackageName(var4);
    ArrayMap var8 = this.mPackages;
    ArrayMap var9 = this.mPackages;
    Object var11 = var9.get(param2);
    PackageParser$Package var12 = (PackageParser$Package) var11;
    Context var17 = this.mContext;
    int var22 = getUidTargetSdkVersionLockedLPr(var4);
    Context var24 = this.mContext;
    Settings var29 = this.mSettings;
    PackageSetting var31 = var29.getPackageLPr(param2);
    int var33 = UserHandle.getUserId(var4);
    boolean var35 = filterAppAccessLPr(var31,var4,var33);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var22 = this.mComponentResolver;
    PackageParser$Service var24 = var22.getService(param2);
    ServiceInfo var25 = var24.info;
    int var26 = var25.flags;
    var27 = 1048576 and var26;
    boolean var29;
}