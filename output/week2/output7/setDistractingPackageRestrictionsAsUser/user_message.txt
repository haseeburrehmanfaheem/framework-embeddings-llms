// API: setDistractingPackageRestrictionsAsUser
// Service: PackageManagerService_4

public void setDistractingPackageRestrictionsAsUser() {
    Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    int var14 = UserHandle.getUserId(var10);
    Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);{Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);};
    ArrayList var37 = new ArrayList();
    38 = arraylength 2;
    IntArray var40 = new IntArray();
    41 = arraylength 2;
    ArrayList var43 = new ArrayList();
    44 = arraylength 2;
    51 = arraylength 2;
    52 = arrayload 2[103];
    ArrayMap var53 = this.mPackages;
    Settings var54 = this.mSettings;
    ArrayMap var55 = var54.mPackages;
    Object var57 = var55.get(var52);
    PackageSetting var58 = (PackageSetting) var57;
    boolean var60 = filterAppAccessLPr(var58,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var43 = this.mComponentResolver;
    PackageParser$Activity var45 = var43.getActivity(param2);
    boolean 0<PATH_SEP>Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    int var14 = UserHandle.getUserId(var10);
    Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);{Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);};
    ArrayList var37 = new ArrayList();
    38 = arraylength 2;
    IntArray var40 = new IntArray();
    41 = arraylength 2;
    ArrayList var43 = new ArrayList();
    44 = arraylength 2;
    51 = arraylength 2;
    52 = arrayload 2[103];
    ArrayMap var53 = this.mPackages;
    Settings var54 = this.mSettings;
    ArrayMap var55 = var54.mPackages;
    Object var57 = var55.get(var52);
    PackageSetting var58 = (PackageSetting) var57;
    boolean var60 = filterAppAccessLPr(var58,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    var52 = var51 xor 1;
    boolean var52<PATH_SEP>Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    int var14 = UserHandle.getUserId(var10);
    Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);{Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);};
    ArrayList var37 = new ArrayList();
    38 = arraylength 2;
    IntArray var40 = new IntArray();
    41 = arraylength 2;
    ArrayList var43 = new ArrayList();
    44 = arraylength 2;
    51 = arraylength 2;
    52 = arrayload 2[103];
    ArrayMap var53 = this.mPackages;
    Settings var54 = this.mSettings;
    ArrayMap var55 = var54.mPackages;
    Object var57 = var55.get(var52);
    PackageSetting var58 = (PackageSetting) var57;
    boolean var60 = filterAppAccessLPr(var58,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var22 = this.mComponentResolver;
    PackageParser$Service var24 = var22.getService(param2);
    ServiceInfo var25 = var24.info;
    int var26 = var25.flags;
    var27 = 1048576 and var26;
    boolean var29<PATH_SEP>Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    int var14 = UserHandle.getUserId(var10);
    Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);{Object var36 = Preconditions.checkNotNull(param2,packageNames cannot be null);};
    ArrayList var37 = new ArrayList();
    38 = arraylength 2;
    IntArray var40 = new IntArray();
    41 = arraylength 2;
    ArrayList var43 = new ArrayList();
    44 = arraylength 2;
    51 = arraylength 2;
    52 = arrayload 2[103];
    ArrayMap var53 = this.mPackages;
    Settings var54 = this.mSettings;
    ArrayMap var55 = var54.mPackages;
    Object var57 = var55.get(var52);
    PackageSetting var58 = (PackageSetting) var57;
    boolean var60 = filterAppAccessLPr(var58,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var31 = this.mComponentResolver;
    PackageParser$Activity var33 = var31.getReceiver(param2);
    boolean 0;
}