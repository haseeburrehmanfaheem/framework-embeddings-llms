// API: queryIntentReceivers
// Service: PackageManagerService_5

public void queryIntentReceivers() {
    ParceledListSlice var6 = new ParceledListSlice();
    List var9 = queryIntentReceiversInternal(param2,param3,param4,param5,0);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = Binder.getCallingUid();
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    String var17 = getInstantAppPackageName(var12);
    int var19 = updateFlagsForResolve(param4,param5,param2,var12,0);
    ComponentName var21 = getComponent();
    Intent var23 = getSelector();
    Intent var28 = getSelector();
    ComponentName var30 = var28.getComponent();
    ArrayList var68 = new ArrayList();
    ActivityInfo var72 = getReceiverInfo(var33,var19,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Activity var19 = var17.getReceiver(param2);
    Settings var20 = this.mSettings;
    ActivityInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    ArrayMap var5 = this.mPackages;
    String var6 = param2.packageName;
    Object var8 = var5.get(var6);
    PackageSetting var9 = (PackageSetting) var8;
    PackageUserState var12 = var9.readUserState(param4);
    boolean var14 = var12.isMatch(param2,param3);
    boolean var14<PATH_SEP>ParceledListSlice var6 = new ParceledListSlice();
    List var9 = queryIntentReceiversInternal(param2,param3,param4,param5,0);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = Binder.getCallingUid();
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    String var17 = getInstantAppPackageName(var12);
    int var19 = updateFlagsForResolve(param4,param5,param2,var12,0);
    ComponentName var21 = getComponent();
    Intent var23 = getSelector();
    Intent var28 = getSelector();
    ComponentName var30 = var28.getComponent();
    ArrayList var68 = new ArrayList();
    ActivityInfo var72 = getReceiverInfo(var33,var19,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Activity var19 = var17.getReceiver(param2);
    Settings var20 = this.mSettings;
    ActivityInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,2,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean 0<PATH_SEP>ParceledListSlice var6 = new ParceledListSlice();
    List var9 = queryIntentReceiversInternal(param2,param3,param4,param5,0);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = Binder.getCallingUid();
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    String var17 = getInstantAppPackageName(var12);
    int var19 = updateFlagsForResolve(param4,param5,param2,var12,0);
    ComponentName var21 = getComponent();
    Intent var23 = getSelector();
    Intent var28 = getSelector();
    ComponentName var30 = var28.getComponent();
    ArrayList var68 = new ArrayList();
    ActivityInfo var72 = getReceiverInfo(var33,var19,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Activity var19 = var17.getReceiver(param2);
    Settings var20 = this.mSettings;
    ActivityInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,2,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    boolean 1<PATH_SEP>ParceledListSlice var6 = new ParceledListSlice();
    List var9 = queryIntentReceiversInternal(param2,param3,param4,param5,0);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = Binder.getCallingUid();
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    String var17 = getInstantAppPackageName(var12);
    int var19 = updateFlagsForResolve(param4,param5,param2,var12,0);
    ComponentName var21 = getComponent();
    Intent var23 = getSelector();
    Intent var28 = getSelector();
    ComponentName var30 = var28.getComponent();
    ArrayList var68 = new ArrayList();
    ActivityInfo var72 = getReceiverInfo(var33,var19,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Activity var19 = var17.getReceiver(param2);
    Settings var20 = this.mSettings;
    ActivityInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,2,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var25 = getInstantApp(param6);
    boolean var27 = canViewInstantApps(var14,param6);
    boolean 0;
}