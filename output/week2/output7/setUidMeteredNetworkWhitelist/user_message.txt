// API: setUidMeteredNetworkWhitelist
// Service: NetworkManagementService_3

public void setUidMeteredNetworkWhitelist() {
    setUidOnMeteredNetworkList(param2,0,param3);
    Context var5 = this.mContext;
    Object var9 = this.mQuotaLock;
    Object var10 = this.mRulesLock;
    SparseBooleanArray var13 = this.mUidRejectOnMetered;
    boolean var16 = var14.get(param2,0);
    Trace.traceBegin(2097152,inetd bandwidth);
    INetd var30 = this.mNetdService;
    var30.bandwidthAddNaughtyApp(param2);
    Object var34 = this.mRulesLock;
    var14.put(param2,1);<PATH_SEP>setUidOnMeteredNetworkList(param2,0,param3);
    Context var5 = this.mContext;
    Object var9 = this.mQuotaLock;
    Object var10 = this.mRulesLock;
    SparseBooleanArray var12 = this.mUidAllowOnMetered;
    boolean var16 = var14.get(param2,0);
    Trace.traceBegin(2097152,inetd bandwidth);
    INetd var24 = this.mNetdService;
    var24.bandwidthRemoveNiceApp(param2);
    Object var34 = this.mRulesLock;
    var14.delete(param2);<PATH_SEP>setUidOnMeteredNetworkList(param2,0,param3);
    Context var5 = this.mContext;
    Object var9 = this.mQuotaLock;
    Object var10 = this.mRulesLock;
    SparseBooleanArray var13 = this.mUidRejectOnMetered;
    boolean var16 = var14.get(param2,0);
    Trace.traceBegin(2097152,inetd bandwidth);
    INetd var26 = this.mNetdService;
    var26.bandwidthAddNiceApp(param2);
    Object var34 = this.mRulesLock;
    var14.put(param2,1);<PATH_SEP>setUidOnMeteredNetworkList(param2,0,param3);
    Context var5 = this.mContext;
    Object var9 = this.mQuotaLock;
    Object var10 = this.mRulesLock;
    SparseBooleanArray var13 = this.mUidRejectOnMetered;
    boolean var16 = var14.get(param2,0);
    Trace.traceBegin(2097152,inetd bandwidth);
    INetd var24 = this.mNetdService;
    var24.bandwidthRemoveNiceApp(param2);
    Object var34 = this.mRulesLock;
    var14.delete(param2);
}