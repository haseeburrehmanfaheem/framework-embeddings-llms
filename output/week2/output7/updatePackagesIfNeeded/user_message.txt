// API: updatePackagesIfNeeded
// Service: PackageManagerService_1

public void updatePackagesIfNeeded() {
    boolean var5 = isDeviceUpgrading();
    boolean var7 = isFirstBoot();
    boolean var10 = this.mIsPreNUpgrade;
    boolean var14 = VMRuntime.didPruneDalvikCache();
    ArrayMap var15 = this.mPackages;
    ArrayMap var16 = this.mPackages;
    Collection var18 = var16.values();
    List var20 = PackageManagerServiceUtils.getPackagesForDexopt(var18,this);
    List var5 = PackageManagerServiceUtils.getPackagesForDexopt(this,param2,0);
    ArrayList var4 = new ArrayList();
    LinkedList var6 = new LinkedList();
    ArrayList var8 = new ArrayList();
    int var10 = var4.size();
    -$$Lambda$PackageManagerServiceUtils$QMV-UHbRIK26QMZL5iM27MchX7U var12 = INSTANCE;
    PackageManagerServiceUtils.applyPackageFilter(var12,var6,var4,var8,param2);
    Intent var14 = new Intent();
    ArraySet var19 = PackageManagerServiceUtils.getPackageNamesForIntent(var14,0);
    -$$Lambda$PackageManagerServiceUtils$nPt0Hym3GvYeWA2vwfOLFDxZmCE var20 = new -$$Lambda$PackageManagerServiceUtils$nPt0Hym3GvYeWA2vwfOLFDxZmCE();
    PackageManagerServiceUtils.applyPackageFilter(var20,var6,var4,var8,param2);
    DexManager var24 = getDexManager();
    -$$Lambda$PackageManagerServiceUtils$fMBP3pPR7BB2hICieRxkdNG-3H8 var25 = new -$$Lambda$PackageManagerServiceUtils$fMBP3pPR7BB2hICieRxkdNG-3H8();
    PackageManagerServiceUtils.applyPackageFilter(var25,var6,var4,var8,param2);
    boolean var29 = var4.isEmpty();
    -$$Lambda$PackageManagerServiceUtils$whx96xO50U3fax1NRe1upTcx9jc var43 = INSTANCE;
    Object var45 = Collections.max(var4,var43);
    PackageParser$Package var46 = (PackageParser$Package) var45;
    String var52 = var46.packageName;
    long var65 = var46.getLatestForegroundPackageUseTimeInMills();
    var67 = var65 lt 0;
    var70 = var65 sub 604800000;
    -$$Lambda$PackageManagerServiceUtils$p5q19y4-2x-i747j_hTNL1EMzt0 var71 = new -$$Lambda$PackageManagerServiceUtils$p5q19y4-2x-i747j_hTNL1EMzt0();
    PackageManagerServiceUtils.sortPackagesByUsageDate(var4,param2);
    PackageManagerServiceUtils.applyPackageFilter(var78,var6,var4,var8,param2);
    String var88 = PackageManagerServiceUtils.packagesToString(var6);
    Iterator var5 = iterator();
    Ljava/lang/String var26<PATH_SEP>boolean var5 = isDeviceUpgrading();
    boolean var7 = isFirstBoot();
    boolean var10 = this.mIsPreNUpgrade;
    boolean var14 = VMRuntime.didPruneDalvikCache();
    ArrayMap var15 = this.mPackages;
    ArrayMap var16 = this.mPackages;
    Collection var18 = var16.values();
    List var20 = PackageManagerServiceUtils.getPackagesForDexopt(var18,this);
    long var27 = System.nanoTime();
    boolean var28 = this.mIsPreNUpgrade;
    [I var31 = performDexOptUpgrade(var20,var28,var29,0);
    int var8 = size();
    Iterator var10 = iterator();
    Object var14 = var10.next();
    PackageParser$Package var15 = (PackageParser$Package) var14;
    var17 = var159 add 1;
    boolean var19 = isFirstBoot();
    boolean var21 = isDeviceUpgrading();
    File var27 = new File();
    String var29 = PackageManagerService.getPrebuildProfilePath(var15);
    boolean var32 = var27.exists();
    Installer var33 = this.mInstaller;
    String var35 = var27.getAbsolutePath();
    ApplicationInfo var36 = var15.applicationInfo;
    int var37 = var36.uid;
    String var38 = var15.packageName;
    String var40 = ArtManager.getProfileName(0);
    boolean var42 = var33.copySystemProfile(var35,var37,var38,var40);
    IActivityManager var166 = ActivityManager.getService();
    Context var167 = this.mContext;
    Resources var169 = var167.getResources();
    Object var172 = new Object(2);
    Integer var174 = Integer.valueOf(var17);
    arraystore 172[6] = 174;
    Integer var176 = Integer.valueOf(var8);
    arraystore 172[106] = 176;
    String var178 = var169.getString(17039491,var172);
    var166.showBootMessage(var178,1);
    ArrayMap var197 = this.mPackages;
    boolean var210 = SystemProperties.getBoolean(pm.precompile_layouts,0);
    ArtManagerService var211 = this.mArtManagerService;
    boolean var213 = var211.compileLayouts(var15);
    String var4 = param2.packageName;
    String var5 = param2.baseCodePath;
    ApplicationInfo var6 = param2.applicationInfo;
    String var9 = var6.dataDir;
    boolean var18 = var6.isPrivilegedApp();
    boolean var20 = var6.isEmbeddedDexUsed();
    boolean var22 = var6.isDefaultToDeviceProtectedStorage();
    boolean 0<PATH_SEP>boolean var5 = isDeviceUpgrading();
    boolean var7 = isFirstBoot();
    boolean var10 = this.mIsPreNUpgrade;
    boolean var14 = VMRuntime.didPruneDalvikCache();
    ArrayMap var15 = this.mPackages;
    ArrayMap var16 = this.mPackages;
    Collection var18 = var16.values();
    List var20 = PackageManagerServiceUtils.getPackagesForDexopt(var18,this);
    long var27 = System.nanoTime();
    boolean var28 = this.mIsPreNUpgrade;
    [I var31 = performDexOptUpgrade(var20,var28,var29,0);
    int var8 = size();
    Iterator var10 = iterator();
    Object var14 = var10.next();
    PackageParser$Package var15 = (PackageParser$Package) var14;
    var17 = var159 add 1;
    boolean var19 = isFirstBoot();
    boolean var21 = isDeviceUpgrading();
    File var27 = new File();
    String var29 = PackageManagerService.getPrebuildProfilePath(var15);
    boolean var32 = var27.exists();
    Installer var33 = this.mInstaller;
    String var35 = var27.getAbsolutePath();
    ApplicationInfo var36 = var15.applicationInfo;
    int var37 = var36.uid;
    String var38 = var15.packageName;
    String var40 = ArtManager.getProfileName(0);
    boolean var42 = var33.copySystemProfile(var35,var37,var38,var40);
    IActivityManager var166 = ActivityManager.getService();
    Context var167 = this.mContext;
    Resources var169 = var167.getResources();
    Object var172 = new Object(2);
    Integer var174 = Integer.valueOf(var17);
    arraystore 172[6] = 174;
    Integer var176 = Integer.valueOf(var8);
    arraystore 172[106] = 176;
    String var178 = var169.getString(17039491,var172);
    var166.showBootMessage(var178,1);
    ArrayMap var197 = this.mPackages;
    boolean var210 = SystemProperties.getBoolean(pm.precompile_layouts,0);
    ArtManagerService var211 = this.mArtManagerService;
    boolean var213 = var211.compileLayouts(var15);
    String var4 = param2.packageName;
    String var5 = param2.baseCodePath;
    ApplicationInfo var6 = param2.applicationInfo;
    String var9 = var6.dataDir;
    boolean var18 = var6.isPrivilegedApp();
    boolean var20 = var6.isEmbeddedDexUsed();
    boolean var22 = var6.isDefaultToDeviceProtectedStorage();
    long var46 = Binder.clearCallingIdentity();
    Object var47 = this.mInstallLock;
    Installer var48 = this.mInstaller;
    int var49 = var6.uid;
    boolean var51 = var48.compileLayouts(var5,var4,var16,var49);
    Binder.restoreCallingIdentity(var46);
    boolean var51<PATH_SEP>boolean var5 = isDeviceUpgrading();
    boolean var7 = isFirstBoot();
    boolean var10 = this.mIsPreNUpgrade;
    boolean var14 = VMRuntime.didPruneDalvikCache();
    ArrayMap var15 = this.mPackages;
    ArrayMap var16 = this.mPackages;
    Collection var18 = var16.values();
    List var20 = PackageManagerServiceUtils.getPackagesForDexopt(var18,this);
    long var27 = System.nanoTime();
    boolean var28 = this.mIsPreNUpgrade;
    [I var31 = performDexOptUpgrade(var20,var28,var29,0);
    int var8 = size();
    Iterator var10 = iterator();
    Object var14 = var10.next();
    PackageParser$Package var15 = (PackageParser$Package) var14;
    var17 = var159 add 1;
    boolean var19 = isFirstBoot();
    boolean var21 = isDeviceUpgrading();
    File var27 = new File();
    String var29 = PackageManagerService.getPrebuildProfilePath(var15);
    boolean var32 = var27.exists();
    Installer var33 = this.mInstaller;
    String var35 = var27.getAbsolutePath();
    ApplicationInfo var36 = var15.applicationInfo;
    int var37 = var36.uid;
    String var38 = var15.packageName;
    String var40 = ArtManager.getProfileName(0);
    boolean var42 = var33.copySystemProfile(var35,var37,var38,var40);
    IActivityManager var166 = ActivityManager.getService();
    Context var167 = this.mContext;
    Resources var169 = var167.getResources();
    Object var172 = new Object(2);
    Integer var174 = Integer.valueOf(var17);
    arraystore 172[6] = 174;
    Integer var176 = Integer.valueOf(var8);
    arraystore 172[106] = 176;
    String var178 = var169.getString(17039491,var172);
    var166.showBootMessage(var178,1);
    ArrayMap var197 = this.mPackages;
    boolean var210 = SystemProperties.getBoolean(pm.precompile_layouts,0);
    ArtManagerService var211 = this.mArtManagerService;
    boolean var213 = var211.compileLayouts(var15);
    var221 = var219 or 1024;
    DexoptOptions var223 = new DexoptOptions();
    String var224 = var15.packageName;
    int var227 = performDexOptTraced(var223);
    Trace.traceBegin(262144,dexopt);
    int var7 = performDexOptInternal(param2);
    ArrayMap var3 = this.mPackages;
    ArrayMap var4 = this.mPackages;
    String var6 = getPackageName();
    Object var8 = var4.get(var6);
    PackageParser$Package var9 = (PackageParser$Package) var8;
    PackageUsage var11 = this.mPackageUsage;
    ArrayMap var12 = this.mPackages;
    boolean var14 = var11.maybeWriteAsync(var12);
    CompilerStats var15 = this.mCompilerStats;
    boolean var17 = var15.maybeWriteAsync();
    long var19 = Binder.clearCallingIdentity();
    Object var20 = this.mInstallLock;
    int var22 = performDexOptInternalWithDependenciesLI(var9,param2);
    Binder.restoreCallingIdentity(var19);
    int var22;
}