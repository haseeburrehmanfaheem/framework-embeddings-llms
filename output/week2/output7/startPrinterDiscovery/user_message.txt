// API: startPrinterDiscovery
// Service: PrintManagerService$PrintManagerImpl_4

public void startPrinterDiscovery() {
    Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var7 = (IPrinterDiscoveryObserver) var6;
    Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);{Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);};
    List var12 = (List) var11;
    int var18 = resolveCallingUserEnforcingPermissions(param4);
    Object var19 = this.mLock;
    int var21 = resolveCallingProfileParentLocked(var18);
    int var23 = getCurrentUserId();<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var7 = (IPrinterDiscoveryObserver) var6;
    Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);{Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);};
    List var12 = (List) var11;
    int var18 = resolveCallingUserEnforcingPermissions(param4);
    Object var19 = this.mLock;
    int var21 = resolveCallingProfileParentLocked(var18);
    int var23 = getCurrentUserId();
    UserState var25 = getOrCreateUserStateLocked(var18,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    UserManager var6 = this.mUserManager;
    boolean var8 = var6.isUserUnlockingOrUnlocked(param2);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    UserState var27 = new UserState();
    Context var28 = this.mContext;
    Object var29 = this.mLock;
    SparseArray var31 = this.mUserStates;
    var31.put(param2,var27);
    var33.increasePriority();
    Lcom/android/server/print/UserState var33<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var7 = (IPrinterDiscoveryObserver) var6;
    Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);{Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);};
    List var12 = (List) var11;
    int var18 = resolveCallingUserEnforcingPermissions(param4);
    Object var19 = this.mLock;
    int var21 = resolveCallingProfileParentLocked(var18);
    int var23 = getCurrentUserId();
    UserState var25 = getOrCreateUserStateLocked(var18,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    UserManager var6 = this.mUserManager;
    boolean var8 = var6.isUserUnlockingOrUnlocked(param2);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    var33.increasePriority();
    Lcom/android/server/print/UserState var33<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var7 = (IPrinterDiscoveryObserver) var6;
    Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);{Collection var11 = Preconditions.checkCollectionElementsNotNull(param3,PrinterId);};
    List var12 = (List) var11;
    int var18 = resolveCallingUserEnforcingPermissions(param4);
    Object var19 = this.mLock;
    int var21 = resolveCallingProfileParentLocked(var18);
    int var23 = getCurrentUserId();
    UserState var25 = getOrCreateUserStateLocked(var18,0);
    long var27 = Binder.clearCallingIdentity();
    var25.startPrinterDiscovery(var7,var14);
    Object var4 = this.mLock;
    throwIfDestroyedLocked();
    UserState$PrinterDiscoverySessionMediator var6 = this.mPrinterDiscoverySession;
    UserState$PrinterDiscoverySessionMediator var8 = this.mPrinterDiscoverySession;
    var8.startPrinterDiscoveryLocked(param2,param3);
    boolean var4 = this.mIsDestroyed;
    List var6 = this.mStartedPrinterDiscoveryTokens;
    boolean var8 = var6.isEmpty();
    var10 = var8 xor 1;
    List var11 = this.mStartedPrinterDiscoveryTokens;
    IBinder var13 = asBinder();
    boolean var15 = var11.add(var13);
    List var21 = this.mStartedPrinterDiscoveryTokens;
    int var23 = var21.size();
    Handler var25 = Handler.getMain();
    -$$Lambda$UserState$PrinterDiscoverySessionMediator$MT8AtQ4cegoEAucY7Fm8C8TCrjo var26 = INSTANCE;
    ArrayList var27 = new ArrayList();
    UserState var28 = this.this$0;
    ArrayMap var30 = UserState.access$600(var28);{ArrayMap var30 = UserState.access$600(var28);};
    Collection var32 = var30.values();
    Message var35 = PooledLambda.obtainMessage(var26,this,var27,param3);
    boolean var37 = var25.sendMessage(var35);
}