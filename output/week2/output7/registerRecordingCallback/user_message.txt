// API: registerRecordingCallback
// Service: AudioService_2

public void registerRecordingCallback() {
    Context var3 = this.mContext;
    RecordingActivityMonitor var10 = this.mRecordMonitor;
    var10.registerRecordingCallback(param2,var9);
    ArrayList var5 = this.mClients;
    RecordingActivityMonitor$RecMonitorClient var6 = new RecordingActivityMonitor$RecMonitorClient();
    boolean var9 = var6.init();
    ArrayList var12 = this.mClients;
    boolean var14 = var12.add(var6);<PATH_SEP>Context var3 = this.mContext;
    RecordingActivityMonitor var10 = this.mRecordMonitor;
    var10.registerRecordingCallback(param2,var9);
    ArrayList var5 = this.mClients;
    RecordingActivityMonitor$RecMonitorClient var6 = new RecordingActivityMonitor$RecMonitorClient();
    boolean var9 = var6.init();
    IRecordingConfigDispatcher var3 = this.mDispatcherCb;
    IBinder var5 = var3.asBinder();<PATH_SEP>Context var3 = this.mContext;
    RecordingActivityMonitor var10 = this.mRecordMonitor;
    var10.registerRecordingCallback(param2,var9);
    ArrayList var5 = this.mClients;
    RecordingActivityMonitor$RecMonitorClient var6 = new RecordingActivityMonitor$RecMonitorClient();
    boolean var9 = var6.init();
    this.mHasPublicClients = 1;
    ArrayList var12 = this.mClients;
    boolean var14 = var12.add(var6);<PATH_SEP>Context var3 = this.mContext;
    RecordingActivityMonitor var10 = this.mRecordMonitor;
    var10.registerRecordingCallback(param2,var9);
    ArrayList var5 = this.mClients;
    RecordingActivityMonitor$RecMonitorClient var6 = new RecordingActivityMonitor$RecMonitorClient();
    boolean var9 = var6.init();
}