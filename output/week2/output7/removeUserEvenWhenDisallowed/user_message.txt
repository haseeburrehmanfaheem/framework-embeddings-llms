// API: removeUserEvenWhenDisallowed
// Service: UserManagerService_2

public void removeUserEvenWhenDisallowed() {
    boolean var6 = removeUserUnchecked(param2);
    long var4 = Binder.clearCallingIdentity();
    int var6 = ActivityManager.getCurrentUser();
    Object var8 = this.mPackagesLock;
    Object var9 = this.mUsersLock;
    SparseArray var10 = this.mUsers;
    Object var12 = var10.get(param2);
    UserManagerService$UserData var13 = (UserManagerService$UserData) var12;
    SparseBooleanArray var15 = this.mRemovingUserIds;
    boolean var17 = var15.get(param2);
    addRemovingUserIdLocked(param2);
    UserInfo var19 = var13.info;
    var19.partial = 1;
    UserInfo var20 = var13.info;
    int var21 = var20.flags;
    var23 = var21 or 64;
    var20.flags = var23;
    writeUserLP(var13);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Boolean var12 = Boolean.valueOf(1);
    var4.startDocument(0,var12);
    var4.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    UserInfo var17 = param2.info;
    XmlSerializer var20 = var4.startTag(0,user);
    int var21 = var17.id;
    String var23 = Integer.toString(var21);
    XmlSerializer var26 = var4.attribute(0,id,var23);
    int var27 = var17.serialNumber;
    String var29 = Integer.toString(var27);
    XmlSerializer var32 = var4.attribute(0,serialNumber,var29);
    int var33 = var17.flags;
    String var35 = Integer.toString(var33);
    XmlSerializer var38 = var4.attribute(0,flags,var35);
    long var39 = var17.creationTime;
    String var41 = Long.toString(var39);
    XmlSerializer var44 = var4.attribute(0,created,var41);
    long var45 = var17.lastLoggedInTime;
    String var47 = Long.toString(var45);
    XmlSerializer var50 = var4.attribute(0,lastLoggedIn,var47);
    String var51 = var17.lastLoggedInFingerprint;
    String var52 = var17.lastLoggedInFingerprint;
    XmlSerializer var55 = var4.attribute(0,lastLoggedInFingerprint,var52);
    String var60 = var17.iconPath;
    String var61 = var17.iconPath;
    XmlSerializer var64 = var4.attribute(0,icon,var61);
    boolean var69 = var17.partial;
    XmlSerializer var73 = var4.attribute(0,partial,true);
    boolean var78 = var17.preCreated;
    XmlSerializer var81 = var4.attribute(0,preCreated,true);
    boolean var86 = var17.guestToRemove;
    XmlSerializer var89 = var4.attribute(0,guestToRemove,true);
    int var94 = var17.profileGroupId;
    int var96 = var17.profileGroupId;
    String var98 = Integer.toString(var96);
    XmlSerializer var101 = var4.attribute(0,profileGroupId,var98);
    int var105 = var17.profileBadge;
    String var107 = Integer.toString(var105);
    XmlSerializer var110 = var4.attribute(0,profileBadge,var107);
    int var111 = var17.restrictedProfileParentId;
    int var112 = var17.restrictedProfileParentId;
    String var114 = Integer.toString(var112);
    XmlSerializer var117 = var4.attribute(0,restrictedProfileParentId,var114);
    boolean var122 = param2.persistSeedData;
    String var123 = param2.seedAccountName;
    String var124 = param2.seedAccountName;
    XmlSerializer var127 = var4.attribute(0,seedAccountName,var124);
    String var132 = param2.seedAccountType;
    String var133 = param2.seedAccountType;
    XmlSerializer var136 = var4.attribute(0,seedAccountType,var133);
    String var141 = var17.name;
    XmlSerializer var144 = var4.startTag(0,name);
    String var145 = var17.name;
    XmlSerializer var147 = var4.text(var145);
    XmlSerializer var149 = var4.endTag(0,name);
    Object var153 = this.mRestrictionsLock;
    SparseArray var154 = this.mBaseUserRestrictions;
    int var155 = var17.id;
    Object var157 = var154.get(var155);
    Bundle var158 = (Bundle) var157;
    UserRestrictionsUtils.writeRestrictions(var4,var158,restrictions);
    SparseArray var161 = this.mDevicePolicyLocalUserRestrictions;
    int var162 = var17.id;
    Object var164 = var161.get(var162);
    Bundle var165 = (Bundle) var164;
    UserRestrictionsUtils.writeRestrictions(var4,var165,device_policy_restrictions);
    SparseArray var168 = this.mDevicePolicyGlobalUserRestrictions;
    int var169 = var17.id;
    Object var171 = var168.get(var169);
    Bundle var172 = (Bundle) var171;
    UserRestrictionsUtils.writeRestrictions(var4,var172,device_policy_global_restrictions);
    String var181 = param2.account;
    XmlSerializer var184 = var4.startTag(0,account);
    String var185 = param2.account;
    XmlSerializer var187 = var4.text(var185);
    XmlSerializer var189 = var4.endTag(0,account);
    boolean var193 = param2.persistSeedData;
    PersistableBundle var194 = param2.seedAccountOptions;
    XmlSerializer var197 = var4.startTag(0,seedAccountOptions);<PATH_SEP>boolean var6 = removeUserUnchecked(param2);
    long var4 = Binder.clearCallingIdentity();
    int var6 = ActivityManager.getCurrentUser();
    Object var8 = this.mPackagesLock;
    Object var9 = this.mUsersLock;
    SparseArray var10 = this.mUsers;
    Object var12 = var10.get(param2);
    UserManagerService$UserData var13 = (UserManagerService$UserData) var12;
    SparseBooleanArray var15 = this.mRemovingUserIds;
    boolean var17 = var15.get(param2);
    addRemovingUserIdLocked(param2);
    UserInfo var19 = var13.info;
    var19.partial = 1;
    UserInfo var20 = var13.info;
    int var21 = var20.flags;
    var23 = var21 or 64;
    var20.flags = var23;
    writeUserLP(var13);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Boolean var12 = Boolean.valueOf(1);
    var4.startDocument(0,var12);
    var4.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    UserInfo var17 = param2.info;
    XmlSerializer var20 = var4.startTag(0,user);
    int var21 = var17.id;
    String var23 = Integer.toString(var21);
    XmlSerializer var26 = var4.attribute(0,id,var23);
    int var27 = var17.serialNumber;
    String var29 = Integer.toString(var27);
    XmlSerializer var32 = var4.attribute(0,serialNumber,var29);
    int var33 = var17.flags;
    String var35 = Integer.toString(var33);
    XmlSerializer var38 = var4.attribute(0,flags,var35);
    long var39 = var17.creationTime;
    String var41 = Long.toString(var39);
    XmlSerializer var44 = var4.attribute(0,created,var41);
    long var45 = var17.lastLoggedInTime;
    String var47 = Long.toString(var45);
    XmlSerializer var50 = var4.attribute(0,lastLoggedIn,var47);
    String var51 = var17.lastLoggedInFingerprint;
    String var52 = var17.lastLoggedInFingerprint;
    XmlSerializer var55 = var4.attribute(0,lastLoggedInFingerprint,var52);
    String var60 = var17.iconPath;
    String var61 = var17.iconPath;
    XmlSerializer var64 = var4.attribute(0,icon,var61);
    boolean var69 = var17.partial;
    XmlSerializer var73 = var4.attribute(0,partial,true);
    boolean var78 = var17.preCreated;
    XmlSerializer var81 = var4.attribute(0,preCreated,true);
    boolean var86 = var17.guestToRemove;
    XmlSerializer var89 = var4.attribute(0,guestToRemove,true);
    int var94 = var17.profileGroupId;
    int var96 = var17.profileGroupId;
    String var98 = Integer.toString(var96);
    XmlSerializer var101 = var4.attribute(0,profileGroupId,var98);
    int var105 = var17.profileBadge;
    String var107 = Integer.toString(var105);
    XmlSerializer var110 = var4.attribute(0,profileBadge,var107);
    int var111 = var17.restrictedProfileParentId;
    int var112 = var17.restrictedProfileParentId;
    String var114 = Integer.toString(var112);
    XmlSerializer var117 = var4.attribute(0,restrictedProfileParentId,var114);
    boolean var122 = param2.persistSeedData;
    String var123 = param2.seedAccountName;
    String var124 = param2.seedAccountName;
    XmlSerializer var127 = var4.attribute(0,seedAccountName,var124);
    String var132 = param2.seedAccountType;
    String var133 = param2.seedAccountType;
    XmlSerializer var136 = var4.attribute(0,seedAccountType,var133);
    String var141 = var17.name;
    XmlSerializer var144 = var4.startTag(0,name);
    String var145 = var17.name;
    XmlSerializer var147 = var4.text(var145);
    XmlSerializer var149 = var4.endTag(0,name);
    Object var153 = this.mRestrictionsLock;
    SparseArray var154 = this.mBaseUserRestrictions;
    int var155 = var17.id;
    Object var157 = var154.get(var155);
    Bundle var158 = (Bundle) var157;
    UserRestrictionsUtils.writeRestrictions(var4,var158,restrictions);
    SparseArray var161 = this.mDevicePolicyLocalUserRestrictions;
    int var162 = var17.id;
    Object var164 = var161.get(var162);
    Bundle var165 = (Bundle) var164;
    UserRestrictionsUtils.writeRestrictions(var4,var165,device_policy_restrictions);
    SparseArray var168 = this.mDevicePolicyGlobalUserRestrictions;
    int var169 = var17.id;
    Object var171 = var168.get(var169);
    Bundle var172 = (Bundle) var171;
    UserRestrictionsUtils.writeRestrictions(var4,var172,device_policy_global_restrictions);
    String var181 = param2.account;
    XmlSerializer var184 = var4.startTag(0,account);
    String var185 = param2.account;
    XmlSerializer var187 = var4.text(var185);<PATH_SEP>boolean var6 = removeUserUnchecked(param2);
    long var4 = Binder.clearCallingIdentity();
    int var6 = ActivityManager.getCurrentUser();
    Object var8 = this.mPackagesLock;
    Object var9 = this.mUsersLock;
    SparseArray var10 = this.mUsers;
    Object var12 = var10.get(param2);
    UserManagerService$UserData var13 = (UserManagerService$UserData) var12;
    SparseBooleanArray var15 = this.mRemovingUserIds;
    boolean var17 = var15.get(param2);
    addRemovingUserIdLocked(param2);
    UserInfo var19 = var13.info;
    var19.partial = 1;
    UserInfo var20 = var13.info;
    int var21 = var20.flags;
    var23 = var21 or 64;
    var20.flags = var23;
    writeUserLP(var13);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Boolean var12 = Boolean.valueOf(1);
    var4.startDocument(0,var12);
    var4.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    UserInfo var17 = param2.info;
    XmlSerializer var20 = var4.startTag(0,user);
    int var21 = var17.id;
    String var23 = Integer.toString(var21);
    XmlSerializer var26 = var4.attribute(0,id,var23);
    int var27 = var17.serialNumber;
    String var29 = Integer.toString(var27);
    XmlSerializer var32 = var4.attribute(0,serialNumber,var29);
    int var33 = var17.flags;
    String var35 = Integer.toString(var33);
    XmlSerializer var38 = var4.attribute(0,flags,var35);
    long var39 = var17.creationTime;
    String var41 = Long.toString(var39);
    XmlSerializer var44 = var4.attribute(0,created,var41);
    long var45 = var17.lastLoggedInTime;
    String var47 = Long.toString(var45);
    XmlSerializer var50 = var4.attribute(0,lastLoggedIn,var47);
    String var51 = var17.lastLoggedInFingerprint;
    String var52 = var17.lastLoggedInFingerprint;
    XmlSerializer var55 = var4.attribute(0,lastLoggedInFingerprint,var52);
    String var60 = var17.iconPath;
    String var61 = var17.iconPath;
    XmlSerializer var64 = var4.attribute(0,icon,var61);
    boolean var69 = var17.partial;
    XmlSerializer var73 = var4.attribute(0,partial,true);
    boolean var78 = var17.preCreated;
    XmlSerializer var81 = var4.attribute(0,preCreated,true);
    boolean var86 = var17.guestToRemove;
    XmlSerializer var89 = var4.attribute(0,guestToRemove,true);
    int var94 = var17.profileGroupId;
    int var96 = var17.profileGroupId;
    String var98 = Integer.toString(var96);
    XmlSerializer var101 = var4.attribute(0,profileGroupId,var98);
    int var105 = var17.profileBadge;
    String var107 = Integer.toString(var105);
    XmlSerializer var110 = var4.attribute(0,profileBadge,var107);
    int var111 = var17.restrictedProfileParentId;
    int var112 = var17.restrictedProfileParentId;
    String var114 = Integer.toString(var112);
    XmlSerializer var117 = var4.attribute(0,restrictedProfileParentId,var114);
    boolean var122 = param2.persistSeedData;
    String var123 = param2.seedAccountName;
    String var124 = param2.seedAccountName;
    XmlSerializer var127 = var4.attribute(0,seedAccountName,var124);
    String var132 = param2.seedAccountType;
    String var133 = param2.seedAccountType;
    XmlSerializer var136 = var4.attribute(0,seedAccountType,var133);
    String var141 = var17.name;
    XmlSerializer var144 = var4.startTag(0,name);
    String var145 = var17.name;
    XmlSerializer var147 = var4.text(var145);
    XmlSerializer var149 = var4.endTag(0,name);
    Object var153 = this.mRestrictionsLock;
    SparseArray var154 = this.mBaseUserRestrictions;
    int var155 = var17.id;
    Object var157 = var154.get(var155);
    Bundle var158 = (Bundle) var157;
    UserRestrictionsUtils.writeRestrictions(var4,var158,restrictions);
    SparseArray var161 = this.mDevicePolicyLocalUserRestrictions;
    int var162 = var17.id;
    Object var164 = var161.get(var162);
    Bundle var165 = (Bundle) var164;
    UserRestrictionsUtils.writeRestrictions(var4,var165,device_policy_restrictions);
    SparseArray var168 = this.mDevicePolicyGlobalUserRestrictions;
    int var169 = var17.id;
    Object var171 = var168.get(var169);
    Bundle var172 = (Bundle) var171;
    UserRestrictionsUtils.writeRestrictions(var4,var172,device_policy_global_restrictions);
    String var181 = param2.account;
    XmlSerializer var184 = var4.startTag(0,account);
    String var185 = param2.account;
    XmlSerializer var187 = var4.text(var185);
    XmlSerializer var189 = var4.endTag(0,account);
    boolean var193 = param2.persistSeedData;
    PersistableBundle var194 = param2.seedAccountOptions;
    XmlSerializer var197 = var4.startTag(0,seedAccountOptions);
    PersistableBundle var198 = param2.seedAccountOptions;
    var198.saveToXml(var4);<PATH_SEP>boolean var6 = removeUserUnchecked(param2);
    long var4 = Binder.clearCallingIdentity();
    int var6 = ActivityManager.getCurrentUser();
    Object var8 = this.mPackagesLock;
    Object var9 = this.mUsersLock;
    SparseArray var10 = this.mUsers;
    Object var12 = var10.get(param2);
    UserManagerService$UserData var13 = (UserManagerService$UserData) var12;
    SparseBooleanArray var15 = this.mRemovingUserIds;
    boolean var17 = var15.get(param2);
    addRemovingUserIdLocked(param2);
    UserInfo var19 = var13.info;
    var19.partial = 1;
    UserInfo var20 = var13.info;
    int var21 = var20.flags;
    var23 = var21 or 64;
    var20.flags = var23;
    writeUserLP(var13);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Boolean var12 = Boolean.valueOf(1);
    var4.startDocument(0,var12);
    var4.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    UserInfo var17 = param2.info;
    XmlSerializer var20 = var4.startTag(0,user);
    int var21 = var17.id;
    String var23 = Integer.toString(var21);
    XmlSerializer var26 = var4.attribute(0,id,var23);
    int var27 = var17.serialNumber;
    String var29 = Integer.toString(var27);
    XmlSerializer var32 = var4.attribute(0,serialNumber,var29);
    int var33 = var17.flags;
    String var35 = Integer.toString(var33);
    XmlSerializer var38 = var4.attribute(0,flags,var35);
    long var39 = var17.creationTime;
    String var41 = Long.toString(var39);
    XmlSerializer var44 = var4.attribute(0,created,var41);
    long var45 = var17.lastLoggedInTime;
    String var47 = Long.toString(var45);
    XmlSerializer var50 = var4.attribute(0,lastLoggedIn,var47);
    String var51 = var17.lastLoggedInFingerprint;
    String var52 = var17.lastLoggedInFingerprint;
    XmlSerializer var55 = var4.attribute(0,lastLoggedInFingerprint,var52);
    String var60 = var17.iconPath;
    String var61 = var17.iconPath;
    XmlSerializer var64 = var4.attribute(0,icon,var61);
    boolean var69 = var17.partial;
    XmlSerializer var73 = var4.attribute(0,partial,true);
    boolean var78 = var17.preCreated;
    XmlSerializer var81 = var4.attribute(0,preCreated,true);
    boolean var86 = var17.guestToRemove;
    XmlSerializer var89 = var4.attribute(0,guestToRemove,true);
    int var94 = var17.profileGroupId;
    int var96 = var17.profileGroupId;
    String var98 = Integer.toString(var96);
    XmlSerializer var101 = var4.attribute(0,profileGroupId,var98);
    int var105 = var17.profileBadge;
    String var107 = Integer.toString(var105);
    XmlSerializer var110 = var4.attribute(0,profileBadge,var107);
    int var111 = var17.restrictedProfileParentId;
    int var112 = var17.restrictedProfileParentId;
    String var114 = Integer.toString(var112);
    XmlSerializer var117 = var4.attribute(0,restrictedProfileParentId,var114);
    boolean var122 = param2.persistSeedData;
    String var123 = param2.seedAccountName;
    String var124 = param2.seedAccountName;
    XmlSerializer var127 = var4.attribute(0,seedAccountName,var124);
    String var132 = param2.seedAccountType;
    String var133 = param2.seedAccountType;
    XmlSerializer var136 = var4.attribute(0,seedAccountType,var133);
    String var141 = var17.name;
    XmlSerializer var144 = var4.startTag(0,name);
    String var145 = var17.name;
    XmlSerializer var147 = var4.text(var145);
    XmlSerializer var149 = var4.endTag(0,name);
    Object var153 = this.mRestrictionsLock;
    SparseArray var154 = this.mBaseUserRestrictions;
    int var155 = var17.id;
    Object var157 = var154.get(var155);
    Bundle var158 = (Bundle) var157;
    UserRestrictionsUtils.writeRestrictions(var4,var158,restrictions);
    SparseArray var161 = this.mDevicePolicyLocalUserRestrictions;
    int var162 = var17.id;
    Object var164 = var161.get(var162);
    Bundle var165 = (Bundle) var164;
    UserRestrictionsUtils.writeRestrictions(var4,var165,device_policy_restrictions);
    SparseArray var168 = this.mDevicePolicyGlobalUserRestrictions;
    int var169 = var17.id;
    Object var171 = var168.get(var169);
    Bundle var172 = (Bundle) var171;
    UserRestrictionsUtils.writeRestrictions(var4,var172,device_policy_global_restrictions);
    String var181 = param2.account;
    XmlSerializer var184 = var4.startTag(0,account);
    String var185 = param2.account;
    XmlSerializer var187 = var4.text(var185);
    XmlSerializer var189 = var4.endTag(0,account);
    boolean var193 = param2.persistSeedData;
    PersistableBundle var194 = param2.seedAccountOptions;
    XmlSerializer var197 = var4.startTag(0,seedAccountOptions);
    PersistableBundle var198 = param2.seedAccountOptions;
    var198.saveToXml(var4);
    XmlSerializer var201 = var4.endTag(0,seedAccountOptions);
    long var206 = getLastRequestQuietModeEnabledMillis();
    var208 = var206 lt 0;
    XmlSerializer var211 = var4.startTag(0,lastRequestQuietModeEnabledCall);
    long var213 = getLastRequestQuietModeEnabledMillis();
    String var215 = String.valueOf(var213);
    XmlSerializer var217 = var4.text(var215);
}