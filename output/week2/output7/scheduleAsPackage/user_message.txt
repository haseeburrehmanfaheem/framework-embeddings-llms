// API: scheduleAsPackage
// Service: JobSchedulerService$JobSchedulerStub_5

public void scheduleAsPackage() {
    int var7 = Binder.getCallingUid();
    boolean var8 = DEBUG;
    String var21 = toString();
    JobSchedulerService var43 = this.this$0;
    Context var45 = var43.getContext();
    long var64 = Binder.clearCallingIdentity();
    JobSchedulerService var65 = this.this$0;
    int var67 = var65.scheduleAsPackage(param2,0,var7,param3,param4,param5);
    IActivityManager var9 = ActivityManager.getService();
    ComponentName var11 = getService();
    String var13 = var11.getPackageName();
    boolean var15 = var9.isAppStartModeDisabled(param4,var13);
    ActivityManagerService.boostPriorityForLockedSection();
    int var9 = getAppStartModeLocked(param2,param3,0,-1,0,1,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    boolean var13 = var11.idle;
    PackageManagerInternal var16 = getPackageManagerInternalLocked();
    int var18 = UserHandle.getUserId(param2);
    boolean var20 = var16.isPackageEphemeral(var18,param3);
    int var27 = appRestrictedInBackgroundLocked(param2,param3,param4);
    ActivityManagerService$PidMap var32 = this.mPidsSelfLocked;
    ActivityManagerService$PidMap var33 = this.mPidsSelfLocked;
    ProcessRecord var35 = var33.get(param5);
    int var42 = var35.getCurProcState();
    boolean var44 = ActivityManager.isProcStateBackground(var42);{boolean var44 = ActivityManager.isProcStateBackground(var42);};
    int 0<PATH_SEP>int var7 = Binder.getCallingUid();
    boolean var8 = DEBUG;
    String var21 = toString();
    JobSchedulerService var43 = this.this$0;
    Context var45 = var43.getContext();
    long var64 = Binder.clearCallingIdentity();
    JobSchedulerService var65 = this.this$0;
    int var67 = var65.scheduleAsPackage(param2,0,var7,param3,param4,param5);
    IActivityManager var9 = ActivityManager.getService();
    ComponentName var11 = getService();
    String var13 = var11.getPackageName();
    boolean var15 = var9.isAppStartModeDisabled(param4,var13);
    ActivityManagerService.boostPriorityForLockedSection();
    int var9 = getAppStartModeLocked(param2,param3,0,-1,0,1,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    boolean var13 = var11.idle;
    PackageManagerInternal var16 = getPackageManagerInternalLocked();
    int var18 = UserHandle.getUserId(param2);
    boolean var20 = var16.isPackageEphemeral(var18,param3);
    int 0<PATH_SEP>int var7 = Binder.getCallingUid();
    boolean var8 = DEBUG;
    String var21 = toString();
    JobSchedulerService var43 = this.this$0;
    Context var45 = var43.getContext();
    long var64 = Binder.clearCallingIdentity();
    JobSchedulerService var65 = this.this$0;
    int var67 = var65.scheduleAsPackage(param2,0,var7,param3,param4,param5);
    IActivityManager var9 = ActivityManager.getService();
    ComponentName var11 = getService();
    String var13 = var11.getPackageName();
    boolean var15 = var9.isAppStartModeDisabled(param4,var13);
    ActivityManagerService.boostPriorityForLockedSection();
    int var9 = getAppStartModeLocked(param2,param3,0,-1,0,1,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    PackageManagerInternal var16 = getPackageManagerInternalLocked();
    int var18 = UserHandle.getUserId(param2);
    boolean var20 = var16.isPackageEphemeral(var18,param3);
    int var25 = appServicesRestrictedInBackgroundLocked(param2,param3,param4);
    ActivityManagerService$PidMap var32 = this.mPidsSelfLocked;
    ActivityManagerService$PidMap var33 = this.mPidsSelfLocked;
    ProcessRecord var35 = var33.get(param5);
    int var42 = var35.getCurProcState();
    boolean var44 = ActivityManager.isProcStateBackground(var42);{boolean var44 = ActivityManager.isProcStateBackground(var42);};
    int var28<PATH_SEP>int var7 = Binder.getCallingUid();
    boolean var8 = DEBUG;
    String var21 = toString();
    JobSchedulerService var43 = this.this$0;
    Context var45 = var43.getContext();
    long var64 = Binder.clearCallingIdentity();
    JobSchedulerService var65 = this.this$0;
    int var67 = var65.scheduleAsPackage(param2,0,var7,param3,param4,param5);
    IActivityManager var9 = ActivityManager.getService();
    ComponentName var11 = getService();
    String var13 = var11.getPackageName();
    boolean var15 = var9.isAppStartModeDisabled(param4,var13);
    ActivityManagerService.boostPriorityForLockedSection();
    int var9 = getAppStartModeLocked(param2,param3,0,-1,0,1,0);
    ProcessList var9 = this.mProcessList;
    UidRecord var11 = var9.getUidRecordLocked(param2);
    PackageManagerInternal var16 = getPackageManagerInternalLocked();
    int var18 = UserHandle.getUserId(param2);
    boolean var20 = var16.isPackageEphemeral(var18,param3);
    int var25 = appServicesRestrictedInBackgroundLocked(param2,param3,param4);
    ActivityManagerService$PidMap var32 = this.mPidsSelfLocked;
    ActivityManagerService$PidMap var33 = this.mPidsSelfLocked;
    ProcessRecord var35 = var33.get(param5);
    int var42 = var35.getCurProcState();
    boolean var44 = ActivityManager.isProcStateBackground(var42);{boolean var44 = ActivityManager.isProcStateBackground(var42);};
    int 0;
}