// API: destroyPrinterDiscoverySession
// Service: PrintManagerService$PrintManagerImpl_3

public void destroyPrinterDiscoverySession() {
    Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var6 = (IPrinterDiscoveryObserver) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    long var18 = Binder.clearCallingIdentity();
    var16.destroyPrinterDiscoverySession(var6);
    Object var3 = this.mLock;
    UserState$PrinterDiscoverySessionMediator var4 = this.mPrinterDiscoverySession;
    UserState$PrinterDiscoverySessionMediator var6 = this.mPrinterDiscoverySession;
    var6.removeObserverLocked(param2);
    RemoteCallbackList var3 = this.mDiscoveryObservers;
    boolean var5 = var3.unregister(param2);
    RemoteCallbackList var6 = this.mDiscoveryObservers;
    int var8 = var6.getRegisteredCallbackCount();
    destroyLocked();
    boolean var2 = this.mIsDestroyed;
    this.mIsDestroyed = 1;
    List var5 = this.mStateTrackedPrinters;
    int var7 = var5.size();
    List var19 = this.mStartedPrinterDiscoveryTokens;
    int var21 = var19.size();
    Handler var35 = Handler.getMain();
    -$$Lambda$UserState$PrinterDiscoverySessionMediator$TAWPnRTK22Veu2-mmKNSJCvnBoU var36 = INSTANCE;
    ArrayList var37 = new ArrayList();
    UserState var38 = this.this$0;
    ArrayMap var40 = UserState.access$600(var38);{ArrayMap var40 = UserState.access$600(var38);};
    Collection var42 = var40.values();
    Message var45 = PooledLambda.obtainMessage(var36,this,var37);
    boolean var47 = var35.sendMessage(var45);<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var6 = (IPrinterDiscoveryObserver) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var4 = getCurrentUserId();
    int param2<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var6 = (IPrinterDiscoveryObserver) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    long var18 = Binder.clearCallingIdentity();
    var16.destroyPrinterDiscoverySession(var6);
    Object var3 = this.mLock;
    UserState$PrinterDiscoverySessionMediator var4 = this.mPrinterDiscoverySession;
    UserState$PrinterDiscoverySessionMediator var6 = this.mPrinterDiscoverySession;
    var6.removeObserverLocked(param2);
    RemoteCallbackList var3 = this.mDiscoveryObservers;
    boolean var5 = var3.unregister(param2);
    RemoteCallbackList var6 = this.mDiscoveryObservers;
    int var8 = var6.getRegisteredCallbackCount();
    destroyLocked();
    boolean var2 = this.mIsDestroyed;
    this.mIsDestroyed = 1;
    List var5 = this.mStateTrackedPrinters;
    int var7 = var5.size();
    List var19 = this.mStartedPrinterDiscoveryTokens;
    int var21 = var19.size();
    List var22 = this.mStartedPrinterDiscoveryTokens;
    Object var24 = var22.get(var30);
    IBinder var25 = (IBinder) var24;
    IPrinterDiscoveryObserver var27 = IPrinterDiscoveryObserver$Stub.asInterface(var25);
    stopPrinterDiscoveryLocked(var27);<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrinterDiscoveryObserver var6 = (IPrinterDiscoveryObserver) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var4 = getCurrentUserId();
    long var6 = Binder.clearCallingIdentity();
    UserManager var7 = this.mUserManager;
    UserInfo var9 = var7.getProfileParent(param2);
    Binder.restoreCallingIdentity(var6);
    int -10;
}