// API: setHomeActivity
// Service: PackageManagerService_3

public void setHomeActivity() {
    int var5 = Binder.getCallingUid();
    String var7 = getInstantAppPackageName(var5);
    ArrayList var9 = new ArrayList();
    ComponentName var12 = getHomeActivitiesAsUser(var9,param3);
    Intent var5 = getHomeIntent();
    List var9 = queryIntentActivitiesInternal(var5,0,128,param3);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayMap var43 = this.mPackages;
    List var80 = getMatchingCrossProfileIntentFilters(var36,param3,param6);
    ResolveInfo var82 = querySkipCurrentProfileIntents(var80,var36,param3,var42,param6);
    ComponentResolver var91 = this.mComponentResolver;
    List var94 = var91.queryActivities(var36,param3,var42,param6);
    List var96 = filterIfNotSystemUser(var94,param6);
    boolean var98 = isInstantAppResolutionAllowed(var36,var96,param6,0);
    boolean var106 = hasNonNegativePriority(var96);
    ResolveInfo var109 = queryCrossProfileIntents(var80,var36,param3,var42,param6,var106);
    int var111 = var109.targetUserId;
    List var115 = Collections.singletonList(var109);
    List var117 = filterIfNotSystemUser(var115,param6);
    int var119 = var117.size();
    boolean var126 = var96.add(var109);
    boolean var139 = var36.hasWebURI();
    UserInfo var141 = getProfileParent(param6);
    int var147 = var141.id;
    PackageManagerService$CrossProfileDomainInfo var149 = getCrossProfileDomainPreferredLpr(var36,param3,var42,param6,var147);
    boolean var165 = var96.remove(var109);
    int var169 = var96.size();
    ResolveInfo var220 = var155.resolveInfo;
    boolean var222 = var96.add(var220);
    List var228 = applyPostResolutionFilter(var96,var14,param8,param5,param7,param6,var36);<PATH_SEP>int var5 = Binder.getCallingUid();
    String var7 = getInstantAppPackageName(var5);
    ArrayList var9 = new ArrayList();
    ComponentName var12 = getHomeActivitiesAsUser(var9,param3);
    Intent var5 = getHomeIntent();
    List var9 = queryIntentActivitiesInternal(var5,0,128,param3);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayMap var43 = this.mPackages;
    List var80 = getMatchingCrossProfileIntentFilters(var36,param3,param6);
    ResolveInfo var82 = querySkipCurrentProfileIntents(var80,var36,param3,var42,param6);
    ComponentResolver var91 = this.mComponentResolver;
    List var94 = var91.queryActivities(var36,param3,var42,param6);
    List var96 = filterIfNotSystemUser(var94,param6);
    boolean var98 = isInstantAppResolutionAllowed(var36,var96,param6,0);
    boolean var106 = hasNonNegativePriority(var96);
    ResolveInfo var109 = queryCrossProfileIntents(var80,var36,param3,var42,param6,var106);
    int var111 = var109.targetUserId;
    List var115 = Collections.singletonList(var109);
    List var117 = filterIfNotSystemUser(var115,param6);
    int var119 = var117.size();
    boolean var126 = var96.add(var109);
    boolean var139 = var36.hasWebURI();
    UserInfo var141 = getProfileParent(param6);
    int var147 = var141.id;
    PackageManagerService$CrossProfileDomainInfo var149 = getCrossProfileDomainPreferredLpr(var36,param3,var42,param6,var147);
    boolean var165 = var96.remove(var109);
    int var169 = var96.size();
    ResolveInfo var220 = var155.resolveInfo;
    boolean var222 = var96.add(var220);
    List var228 = applyPostResolutionFilter(var96,var14,param8,param5,param7,param6,var36);
    Ljava/util/List var228<PATH_SEP>int var5 = Binder.getCallingUid();
    String var7 = getInstantAppPackageName(var5);
    ArrayList var9 = new ArrayList();
    ComponentName var12 = getHomeActivitiesAsUser(var9,param3);
    Intent var5 = getHomeIntent();
    List var9 = queryIntentActivitiesInternal(var5,0,128,param3);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayList var297 = new ArrayList();
    ActivityInfo var300 = getActivityInfo(var35,var42,param6);
    List var350 = applyPostResolutionFilter(var297,var14,param8,param5,param7,param6,var36);<PATH_SEP>int var5 = Binder.getCallingUid();
    String var7 = getInstantAppPackageName(var5);
    ArrayList var9 = new ArrayList();
    ComponentName var12 = getHomeActivitiesAsUser(var9,param3);
    Intent var5 = getHomeIntent();
    List var9 = queryIntentActivitiesInternal(var5,0,128,param3);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayMap var43 = this.mPackages;
    List var80 = getMatchingCrossProfileIntentFilters(var36,param3,param6);
    ResolveInfo var82 = querySkipCurrentProfileIntents(var80,var36,param3,var42,param6);
    ComponentResolver var91 = this.mComponentResolver;
    List var94 = var91.queryActivities(var36,param3,var42,param6);
}