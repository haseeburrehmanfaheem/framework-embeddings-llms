// API: startActivityFromRecents
// Service: ActivityTaskManagerService_3

public void startActivityFromRecents() {
    int var8 = Binder.getCallingPid();
    int var10 = Binder.getCallingUid();
    SafeActivityOptions var12 = SafeActivityOptions.fromBundle(param3);
    long var14 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityStackSupervisor var17 = this.mStackSupervisor;
    int var19 = var17.startActivityFromRecents(var8,var10,param2,var12);
    ActivityOptions var8 = getOptions(this);
    int var11 = var9.getLaunchActivityType();
    int var13 = var9.getLaunchWindowingMode();
    boolean var15 = var9.freezeRecentTasksReordering();
    RecentTasks var16 = this.mRecentTasks;
    boolean var18 = var16.isCallerRecents(param3);{boolean var18 = var16.isCallerRecents(param3);};
    RecentTasks var19 = this.mRecentTasks;
    var19.setFreezeTaskListReordering();
    WindowManagerService var47 = this.mWindowManager;
    var47.deferSurfaceLayout();
    WindowManagerService var50 = this.mWindowManager;
    int var52 = var9.getSplitScreenCreateMode();
    var50.setDockedStackCreateState(var52,0);
    deferUpdateRecentsHomeStackBounds();
    RootActivityContainer var2 = this.mRootActivityContainer;
    var2.deferUpdateBounds(3);
    RootActivityContainer var5 = this.mRootActivityContainer;
    var5.deferUpdateBounds(2);<PATH_SEP>int var8 = Binder.getCallingPid();
    int var10 = Binder.getCallingUid();
    SafeActivityOptions var12 = SafeActivityOptions.fromBundle(param3);
    long var14 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityStackSupervisor var17 = this.mStackSupervisor;
    int var19 = var17.startActivityFromRecents(var8,var10,param2,var12);
    ActivityOptions var8 = getOptions(this);
    ActivityOptions var5 = getOptions(0,0,0,param2);
    ActivityOptions var6 = this.mOriginalOptions;
    int var8 = this.mOriginalCallingPid;
    int var9 = this.mOriginalCallingUid;
    ActivityOptions var11 = this.mOriginalOptions;
    int var12 = this.mOriginalCallingPid;
    int var13 = this.mOriginalCallingUid;
    setCallingPidUidForRemoteAnimationAdapter(var11,var12,var13);
    ActivityOptions var15 = this.mCallerOptions;
    int var16 = this.mRealCallingPid;
    int var17 = this.mRealCallingUid;
    ActivityOptions var19 = this.mCallerOptions;
    int var20 = this.mRealCallingPid;
    int var21 = this.mRealCallingUid;
    setCallingPidUidForRemoteAnimationAdapter(var19,var20,var21);
    ActivityOptions var32 = this.mOriginalOptions;
    ActivityOptions var33 = this.mCallerOptions;
    ActivityOptions var35 = mergeActivityOptions(var32,var33);
    Landroid/app/ActivityOptions var35<PATH_SEP>int var8 = Binder.getCallingPid();
    int var10 = Binder.getCallingUid();
    SafeActivityOptions var12 = SafeActivityOptions.fromBundle(param3);
    long var14 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var19 = var5.regionCounter;
    var21 = var19 add 1;
    var5.regionCounter = var21;<PATH_SEP>int var8 = Binder.getCallingPid();
    int var10 = Binder.getCallingUid();
    SafeActivityOptions var12 = SafeActivityOptions.fromBundle(param3);
    long var14 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var15 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityStackSupervisor var17 = this.mStackSupervisor;
    int var19 = var17.startActivityFromRecents(var8,var10,param2,var12);
    ActivityOptions var8 = getOptions(this);
    int var11 = var9.getLaunchActivityType();
    int var13 = var9.getLaunchWindowingMode();
    boolean var15 = var9.freezeRecentTasksReordering();
    RecentTasks var16 = this.mRecentTasks;
    boolean var18 = var16.isCallerRecents(param3);{boolean var18 = var16.isCallerRecents(param3);};
    RecentTasks var19 = this.mRecentTasks;
    var19.setFreezeTaskListReordering();
    WindowManagerService var47 = this.mWindowManager;
    var47.deferSurfaceLayout();
    WindowManagerService var50 = this.mWindowManager;
    int var52 = var9.getSplitScreenCreateMode();
    var50.setDockedStackCreateState(var52,0);
    deferUpdateRecentsHomeStackBounds();
    WindowManagerService var55 = this.mWindowManager;
    var55.prepareAppTransition(19,0);
}