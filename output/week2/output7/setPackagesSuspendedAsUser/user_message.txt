// API: setPackagesSuspendedAsUser
// Service: PackageManagerService_8

public void setPackagesSuspendedAsUser() {
    int var10 = Binder.getCallingUid();
    boolean var14 = ArrayUtils.isEmpty(param2);
    ArrayList var16 = new ArrayList();
    17 = arraylength 2;
    IntArray var19 = new IntArray();
    20 = arraylength 2;
    ArrayList var22 = new ArrayList();
    23 = arraylength 2;
    30 = arraylength 2;
    31 = arrayload 2[114];
    boolean var33 = equals(var31);
    ArrayMap var59 = this.mPackages;
    Settings var60 = this.mSettings;
    ArrayMap var61 = var60.mPackages;
    Object var63 = var61.get(var31);
    PackageSetting var64 = (PackageSetting) var63;
    boolean var66 = filterAppAccessLPr(var64,var10,param8);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var31 = this.mComponentResolver;
    PackageParser$Activity var33 = var31.getReceiver(param2);
    boolean 0<PATH_SEP>int var10 = Binder.getCallingUid();
    boolean var14 = ArrayUtils.isEmpty(param2);
    ArrayList var16 = new ArrayList();
    17 = arraylength 2;
    IntArray var19 = new IntArray();
    20 = arraylength 2;
    ArrayList var22 = new ArrayList();
    23 = arraylength 2;
    30 = arraylength 2;
    31 = arrayload 2[114];
    boolean var33 = equals(var31);
    ArrayMap var59 = this.mPackages;
    Settings var60 = this.mSettings;
    ArrayMap var61 = var60.mPackages;
    Object var63 = var61.get(var31);
    PackageSetting var64 = (PackageSetting) var63;
    boolean var66 = filterAppAccessLPr(var64,var10,param8);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var22 = this.mComponentResolver;
    PackageParser$Service var24 = var22.getService(param2);
    ServiceInfo var25 = var24.info;
    int var26 = var25.flags;
    var27 = 1048576 and var26;
    boolean var29<PATH_SEP>int var10 = Binder.getCallingUid();
    boolean var14 = ArrayUtils.isEmpty(param2);
    ArrayList var16 = new ArrayList();
    17 = arraylength 2;
    IntArray var19 = new IntArray();
    20 = arraylength 2;
    ArrayList var22 = new ArrayList();
    23 = arraylength 2;
    30 = arraylength 2;
    31 = arrayload 2[114];
    boolean var33 = equals(var31);
    ArrayMap var59 = this.mPackages;
    Settings var60 = this.mSettings;
    ArrayMap var61 = var60.mPackages;
    Object var63 = var61.get(var31);
    PackageSetting var64 = (PackageSetting) var63;
    boolean var66 = filterAppAccessLPr(var64,var10,param8);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var25 = getInstantApp(param6);
    boolean var27 = canViewInstantApps(var14,param6);
    Context var6 = this.mContext;
    Context var11 = this.mContext;
    ComponentName var16 = getDefaultHomeActivity(param3);
    String var18 = var16.getPackageName();
    String var24 = this.mAppPredictionServicePackage;
    boolean 0<PATH_SEP>int var10 = Binder.getCallingUid();
    boolean var14 = ArrayUtils.isEmpty(param2);
    ArrayList var16 = new ArrayList();
    17 = arraylength 2;
    IntArray var19 = new IntArray();
    20 = arraylength 2;
    ArrayList var22 = new ArrayList();
    23 = arraylength 2;
    30 = arraylength 2;
    31 = arrayload 2[114];
    boolean var33 = equals(var31);
    ArrayMap var59 = this.mPackages;
    Settings var60 = this.mSettings;
    ArrayMap var61 = var60.mPackages;
    Object var63 = var61.get(var31);
    PackageSetting var64 = (PackageSetting) var63;
    boolean var66 = filterAppAccessLPr(var64,var10,param8);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    PackageParser$Package var37 = param2.pkg;
    boolean var38 = var37.visibleToInstantApps;
    var39 = var38 xor 1;
    boolean var39;
}