// API: canHaveRestrictedProfile
// Service: UserManagerService_2

public void canHaveRestrictedProfile() {
    Object var5 = this.mUsersLock;
    UserInfo var7 = getUserInfoLU(param2);
    SparseArray var3 = this.mUsers;
    Object var5 = var3.get(param2);
    UserManagerService$UserData var6 = (UserManagerService$UserData) var5;
    UserInfo var8 = var6.info;
    boolean var9 = var8.partial;
    Landroid/content/pm/UserInfo var17<PATH_SEP>Object var5 = this.mUsersLock;
    UserInfo var7 = getUserInfoLU(param2);
    SparseArray var3 = this.mUsers;
    Object var5 = var3.get(param2);
    UserManagerService$UserData var6 = (UserManagerService$UserData) var5;
    UserInfo var8 = var6.info;
    boolean var9 = var8.partial;
    SparseBooleanArray var10 = this.mRemovingUserIds;
    boolean var12 = var10.get(param2);
    UserInfo var16 = var6.info;
    Landroid/content/pm/UserInfo var17<PATH_SEP>Object var5 = this.mUsersLock;
    UserInfo var7 = getUserInfoLU(param2);
    boolean var10 = var7.canHaveProfile();
    boolean var12 = var7.isAdmin();
    boolean 0<PATH_SEP>Object var5 = this.mUsersLock;
    UserInfo var7 = getUserInfoLU(param2);
    boolean var10 = var7.canHaveProfile();
    boolean var12 = var7.isAdmin();
    boolean var13 = this.mIsDeviceManaged;
    SparseBooleanArray var14 = this.mIsUserManaged;
    boolean var16 = var14.get(param2);
    boolean var18;
}