// API: getDeclaredSharedLibraries
// Service: PackageManagerService_4

public void getDeclaredSharedLibraries() {
    Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);{Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);};
    int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    UserManagerService var21 = sUserManager;
    boolean var23 = var21.exists(param4);
    String var25 = getInstantAppPackageName(var10);
    ArrayMap var26 = this.mPackages;
    ArrayMap var27 = this.mSharedLibraries;
    int var29 = var27.size();
    ArrayMap var30 = this.mSharedLibraries;
    Object var32 = var30.valueAt(var107);
    LongSparseArray var33 = (LongSparseArray) var32;
    int var35 = var33.size();
    Object var37 = var33.valueAt(var97);
    SharedLibraryInfo var38 = (SharedLibraryInfo) var37;
    VersionedPackage var40 = var38.getDeclaringPackage();
    String var42 = var40.getPackageName();
    long var46 = Binder.clearCallingIdentity();
    var48 = 67108864 or param3;
    PackageInfo var50 = getPackageInfoVersioned(var40,var48,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    LongSparseLongArray var21 = new LongSparseLongArray();
    Object var24 = var12.valueAt(0);
    SharedLibraryInfo var25 = (SharedLibraryInfo) var24;
    String var27 = var25.getName();
    int var29 = Binder.getCallingUid();
    String var31 = getPackagesForUid(var29);
    32 = arraylength 31;
    int var54 = var49.size();
    int var59 = var12.size();
    Ljava/lang/String var8<PATH_SEP>Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);{Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);};
    int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    UserManagerService var21 = sUserManager;
    boolean var23 = var21.exists(param4);
    String var25 = getInstantAppPackageName(var10);
    ArrayMap var26 = this.mPackages;
    ArrayMap var27 = this.mSharedLibraries;
    int var29 = var27.size();
    ArrayMap var30 = this.mSharedLibraries;
    Object var32 = var30.valueAt(var107);
    LongSparseArray var33 = (LongSparseArray) var32;
    int var35 = var33.size();
    Object var37 = var33.valueAt(var97);
    SharedLibraryInfo var38 = (SharedLibraryInfo) var37;
    VersionedPackage var40 = var38.getDeclaringPackage();
    String var42 = var40.getPackageName();
    long var46 = Binder.clearCallingIdentity();
    var48 = 67108864 or param3;
    PackageInfo var50 = getPackageInfoVersioned(var40,var48,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    int var54 = var49.size();
    int var59 = var12.size();
    Object var61 = var12.valueAt(var92);
    SharedLibraryInfo var62 = (SharedLibraryInfo) var61;
    long var64 = var62.getLongVersion();
    int var66 = var49.indexOfKey(var64);
    VersionedPackage var72 = var62.getDeclaringPackage();
    long var74 = var72.getLongVersionCode();
    var76 = param3 lt -1;
    var77 = var74 lt param3;
    String var103 = var62.getPackageName();
    Ljava/lang/String var103<PATH_SEP>Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);{Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);};
    int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    UserManagerService var21 = sUserManager;
    boolean var23 = var21.exists(param4);
    String var25 = getInstantAppPackageName(var10);
    ArrayMap var26 = this.mPackages;
    ArrayMap var27 = this.mSharedLibraries;
    int var29 = var27.size();
    ArrayMap var30 = this.mSharedLibraries;
    Object var32 = var30.valueAt(var107);
    LongSparseArray var33 = (LongSparseArray) var32;
    int var35 = var33.size();
    Object var37 = var33.valueAt(var97);
    SharedLibraryInfo var38 = (SharedLibraryInfo) var37;
    VersionedPackage var40 = var38.getDeclaringPackage();
    String var42 = var40.getPackageName();
    long var46 = Binder.clearCallingIdentity();
    var48 = 67108864 or param3;
    PackageInfo var50 = getPackageInfoVersioned(var40,var48,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    LongSparseLongArray var21 = new LongSparseLongArray();
    Object var24 = var12.valueAt(0);
    SharedLibraryInfo var25 = (SharedLibraryInfo) var24;
    String var27 = var25.getName();
    int var29 = Binder.getCallingUid();
    String var31 = getPackagesForUid(var29);
    int var54 = var49.size();
    int var59 = var12.size();
    Ljava/lang/String var8<PATH_SEP>Context var5 = this.mContext;
    int var10 = Binder.getCallingUid();
    PermissionManagerServiceInternal var11 = this.mPermissionManager;
    Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);{Object var17 = Preconditions.checkNotNull(param2,packageName cannot be null);};
    int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);{int var20 = Preconditions.checkArgumentNonnegative(param4,userId must be >= 0);};
    UserManagerService var21 = sUserManager;
    boolean var23 = var21.exists(param4);
    String var25 = getInstantAppPackageName(var10);
    ArrayMap var26 = this.mPackages;
    ArrayMap var27 = this.mSharedLibraries;
    int var29 = var27.size();
    ArrayMap var30 = this.mSharedLibraries;
    Object var32 = var30.valueAt(var107);
    LongSparseArray var33 = (LongSparseArray) var32;
    int var35 = var33.size();
    Object var37 = var33.valueAt(var97);
    SharedLibraryInfo var38 = (SharedLibraryInfo) var37;
    VersionedPackage var40 = var38.getDeclaringPackage();
    String var42 = var40.getPackageName();
    long var46 = Binder.clearCallingIdentity();
    var48 = 67108864 or param3;
    PackageInfo var50 = getPackageInfoVersioned(var40,var48,param4);
    String var6 = getPackageName();
    long var8 = getLongVersionCode();
    int var10 = Binder.getCallingUid();
    PackageInfo var12 = getPackageInfoInternal(var6,var8,param3,var10,param4);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param6);
    int var12 = updateFlagsForPackage(param4,param6,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    int var15 = Binder.getCallingUid();
    ArrayMap var18 = this.mPackages;
    String var20 = resolveInternalPackageNameLPr(param2,param3);
    Settings var4 = this.mSettings;
    String var6 = var4.getRenamedPackageLPr(param2);
    ArrayMap var9 = this.mStaticLibsByDeclaringPackage;
    Object var11 = var9.get(var8);
    LongSparseArray var12 = (LongSparseArray) var11;
    int var14 = var12.size();
    int var16 = Binder.getCallingUid();
    int var18 = UserHandle.getAppId(var16);
    LongSparseLongArray var21 = new LongSparseLongArray();
    Object var24 = var12.valueAt(0);
    SharedLibraryInfo var25 = (SharedLibraryInfo) var24;
    String var27 = var25.getName();
    int var29 = Binder.getCallingUid();
    String var31 = getPackagesForUid(var29);
    32 = arraylength 31;
    int var54 = var49.size();
    int var59 = var12.size();
    Object var61 = var12.valueAt(var92);
    SharedLibraryInfo var62 = (SharedLibraryInfo) var61;
    VersionedPackage var72 = var62.getDeclaringPackage();
    long var74 = var72.getLongVersionCode();
    var76 = param3 lt -1;
    var77 = var74 lt param3;
    String var103 = var62.getPackageName();
    Ljava/lang/String var103;
}