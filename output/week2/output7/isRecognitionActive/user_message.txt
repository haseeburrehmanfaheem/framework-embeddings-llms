// API: isRecognitionActive
// Service: SoundTriggerService$SoundTriggerServiceStub_2

public void isRecognitionActive() {
    SoundTriggerService var3 = this.this$0;
    SoundTriggerService var6 = this.this$0;
    boolean var8 = SoundTriggerService.access$100(var6);{boolean var8 = SoundTriggerService.access$100(var6);};
    SoundTriggerService var10 = this.this$0;
    Object var12 = SoundTriggerService.access$800(var10);{Object var12 = SoundTriggerService.access$800(var10);};
    SoundTriggerService var13 = this.this$0;
    TreeMap var15 = SoundTriggerService.access$900(var13);{TreeMap var15 = SoundTriggerService.access$900(var13);};
    UUID var17 = getUuid();
    Object var19 = var15.get(var17);
    IRecognitionStatusCallback var20 = (IRecognitionStatusCallback) var19;
    SoundTriggerService var21 = this.this$0;
    SoundTriggerHelper var23 = SoundTriggerService.access$300(var21);{SoundTriggerHelper var23 = SoundTriggerService.access$300(var21);};
    UUID var25 = getUuid();
    boolean var27 = var23.isRecognitionRequested(var25);<PATH_SEP>SoundTriggerService var3 = this.this$0;
    SoundTriggerService var6 = this.this$0;
    boolean var8 = SoundTriggerService.access$100(var6);{boolean var8 = SoundTriggerService.access$100(var6);};
    SoundTriggerService var10 = this.this$0;
    Object var12 = SoundTriggerService.access$800(var10);{Object var12 = SoundTriggerService.access$800(var10);};
    SoundTriggerService var13 = this.this$0;
    TreeMap var15 = SoundTriggerService.access$900(var13);{TreeMap var15 = SoundTriggerService.access$900(var13);};
    UUID var17 = getUuid();
    Object var19 = var15.get(var17);
    IRecognitionStatusCallback var20 = (IRecognitionStatusCallback) var19;
    SoundTriggerService var21 = this.this$0;
    SoundTriggerHelper var23 = SoundTriggerService.access$300(var21);{SoundTriggerHelper var23 = SoundTriggerService.access$300(var21);};
    UUID var25 = getUuid();
    boolean var27 = var23.isRecognitionRequested(var25);
    Object var3 = this.mLock;
    HashMap var4 = this.mModelDataMap;
    Object var6 = var4.get(param2);
    SoundTriggerHelper$ModelData var7 = (SoundTriggerHelper$ModelData) var6;
    boolean var10 = var7.isRequested();
    boolean var2 = this.mRequested;
    boolean var2<PATH_SEP>SoundTriggerService var3 = this.this$0;
    SoundTriggerService var6 = this.this$0;
    boolean var8 = SoundTriggerService.access$100(var6);{boolean var8 = SoundTriggerService.access$100(var6);};
    SoundTriggerService var10 = this.this$0;
    Object var12 = SoundTriggerService.access$800(var10);{Object var12 = SoundTriggerService.access$800(var10);};
    SoundTriggerService var13 = this.this$0;
    TreeMap var15 = SoundTriggerService.access$900(var13);{TreeMap var15 = SoundTriggerService.access$900(var13);};
    UUID var17 = getUuid();
    Object var19 = var15.get(var17);
    IRecognitionStatusCallback var20 = (IRecognitionStatusCallback) var19;
    SoundTriggerService var21 = this.this$0;
    SoundTriggerHelper var23 = SoundTriggerService.access$300(var21);{SoundTriggerHelper var23 = SoundTriggerService.access$300(var21);};
    UUID var25 = getUuid();
    boolean var27 = var23.isRecognitionRequested(var25);
    Object var3 = this.mLock;
    HashMap var4 = this.mModelDataMap;
    Object var6 = var4.get(param2);
    SoundTriggerHelper$ModelData var7 = (SoundTriggerHelper$ModelData) var6;
    boolean var10 = var7.isRequested();
    boolean var14<PATH_SEP>SoundTriggerService var3 = this.this$0;
    SoundTriggerService var6 = this.this$0;
    boolean var8 = SoundTriggerService.access$100(var6);{boolean var8 = SoundTriggerService.access$100(var6);};
    SoundTriggerService var10 = this.this$0;
    Object var12 = SoundTriggerService.access$800(var10);{Object var12 = SoundTriggerService.access$800(var10);};
    SoundTriggerService var13 = this.this$0;
    TreeMap var15 = SoundTriggerService.access$900(var13);{TreeMap var15 = SoundTriggerService.access$900(var13);};
    UUID var17 = getUuid();
    Object var19 = var15.get(var17);
    IRecognitionStatusCallback var20 = (IRecognitionStatusCallback) var19;
    boolean 0;
}