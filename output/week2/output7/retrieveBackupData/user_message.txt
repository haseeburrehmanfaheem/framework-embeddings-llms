// API: retrieveBackupData
// Service: WifiServiceImpl_1

public void retrieveBackupData() {
    int var8 = Binder.getCallingUid();
    9 = conversion(J) 8;
    AsyncChannel var13 = this.mClientModeImplChannel;
    ClientModeImpl var19 = this.mClientModeImpl;
    AsyncChannel var20 = this.mClientModeImplChannel;
    List var22 = var19.syncGetPrivilegedConfiguredNetwork(var20);
    WifiBackupRestore var23 = this.mWifiBackupRestore;
    [B var25 = var23.retrieveBackupDataFromConfigurations(var22);
    FastXmlSerializer var7 = new FastXmlSerializer();
    ByteArrayOutputStream var9 = new ByteArrayOutputStream();
    Charset var11 = UTF_8;
    String var13 = var11.name();
    var7.setOutput(var9,var13);
    XmlUtil.writeDocumentStart(var7,WifiBackupData);
    Boolean var5 = Boolean.valueOf(1);
    startDocument(0,var5);
    XmlSerializer var9 = startTag(0,param2);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>int var8 = Binder.getCallingUid();
    9 = conversion(J) 8;
    AsyncChannel var13 = this.mClientModeImplChannel;
    ClientModeImpl var19 = this.mClientModeImpl;
    AsyncChannel var20 = this.mClientModeImplChannel;
    List var22 = var19.syncGetPrivilegedConfiguredNetwork(var20);
    WifiBackupRestore var23 = this.mWifiBackupRestore;
    [B var25 = var23.retrieveBackupDataFromConfigurations(var22);
    FastXmlSerializer var7 = new FastXmlSerializer();
    ByteArrayOutputStream var9 = new ByteArrayOutputStream();
    Charset var11 = UTF_8;
    String var13 = var11.name();
    var7.setOutput(var9,var13);
    XmlUtil.writeDocumentStart(var7,WifiBackupData);
    Boolean var5 = Boolean.valueOf(1);
    startDocument(0,var5);
    XmlSerializer var9 = startTag(0,param2);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
    append(58);
    append(param3);
    this.mInTag = 1;<PATH_SEP>int var8 = Binder.getCallingUid();
    9 = conversion(J) 8;
    AsyncChannel var13 = this.mClientModeImplChannel;
    ClientModeImpl var19 = this.mClientModeImpl;
    AsyncChannel var20 = this.mClientModeImplChannel;
    List var22 = var19.syncGetPrivilegedConfiguredNetwork(var20);
    WifiBackupRestore var23 = this.mWifiBackupRestore;
    [B var25 = var23.retrieveBackupDataFromConfigurations(var22);
    FastXmlSerializer var7 = new FastXmlSerializer();
    ByteArrayOutputStream var9 = new ByteArrayOutputStream();
    Charset var11 = UTF_8;
    String var13 = var11.name();
    var7.setOutput(var9,var13);
    XmlUtil.writeDocumentStart(var7,WifiBackupData);
    Boolean var5 = Boolean.valueOf(1);
    startDocument(0,var5);
    XmlSerializer var9 = startTag(0,param2);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>int var8 = Binder.getCallingUid();
    9 = conversion(J) 8;
    AsyncChannel var13 = this.mClientModeImplChannel;
    ClientModeImpl var19 = this.mClientModeImpl;
    AsyncChannel var20 = this.mClientModeImplChannel;
    List var22 = var19.syncGetPrivilegedConfiguredNetwork(var20);
    WifiBackupRestore var23 = this.mWifiBackupRestore;
    [B var25 = var23.retrieveBackupDataFromConfigurations(var22);
    FastXmlSerializer var7 = new FastXmlSerializer();
    ByteArrayOutputStream var9 = new ByteArrayOutputStream();
    Charset var11 = UTF_8;
    String var13 = var11.name();
    var7.setOutput(var9,var13);
    Charset var8 = Charset.forName(param3);
    CharsetEncoder var10 = var8.newEncoder();
    CodingErrorAction var11 = REPLACE;
    CharsetEncoder var13 = var10.onMalformedInput(var11);
    CodingErrorAction var14 = REPLACE;
    CharsetEncoder var16 = var13.onUnmappableCharacter(var14);
    this.mCharset = var16;
}