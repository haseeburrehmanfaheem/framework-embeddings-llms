// API: createTunnelInterface
// Service: IpSecService_6

public void createTunnelInterface() {
    Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);{Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);};
    Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);{Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);};
    IpSecService.checkInetAddress(param2);{IpSecService.checkInetAddress(param2);};
    IpSecService.checkInetAddress(param3);{IpSecService.checkInetAddress(param3);};
    int var17 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var18 = this.mUserResourceTracker;
    IpSecService$UserRecord var20 = var18.getUserRecord(var17);
    IpSecService$ResourceTracker var21 = var20.mTunnelQuotaTracker;
    boolean var23 = var21.isAvailable();
    int var26 = this.mNextResourceId;
    var28 = var26 add 1;
    this.mNextResourceId = var28;
    int var30 = reserveNetId();
    int var32 = reserveNetId();
    Object var35 = new Object(2);
    arraystore 35[25] = 36;
    Integer var38 = Integer.valueOf(var26);
    arraystore 35[24] = 38;
    String var40 = String.format(%s%d,var35);<PATH_SEP>Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);{Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);};
    Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);{Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);};
    IpSecService.checkInetAddress(param2);{IpSecService.checkInetAddress(param2);};
    IpSecService.checkInetAddress(param3);{IpSecService.checkInetAddress(param3);};
    int var17 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var18 = this.mUserResourceTracker;
    IpSecService$UserRecord var20 = var18.getUserRecord(var17);
    IpSecService$ResourceTracker var21 = var20.mTunnelQuotaTracker;
    boolean var23 = var21.isAvailable();
    int var26 = this.mNextResourceId;
    var28 = var26 add 1;
    this.mNextResourceId = var28;
    int var30 = reserveNetId();
    int var32 = reserveNetId();
    Object var35 = new Object(2);
    arraystore 35[25] = 36;
    Integer var38 = Integer.valueOf(var26);
    arraystore 35[24] = 38;
    String var40 = String.format(%s%d,var35);
    IpSecService$IpSecServiceConfiguration var41 = this.mSrvConfig;
    INetd var43 = var41.getNetdInstance();
    var43.ipSecAddTunnelInterface(var40,param2,param3,var30,var32,var26);
    [I var47 = ADDRESS_FAMILIES;
    48 = arraylength 47;
    IpSecService$RefcountedResourceArray var67 = var20.mTunnelInterfaceRecords;
    IpSecService$RefcountedResource var68 = new IpSecService$RefcountedResource();
    IpSecService$TunnelInterfaceRecord var69 = new IpSecService$TunnelInterfaceRecord();
    IpSecService$RefcountedResource var74 = new IpSecService$RefcountedResource(0);
    var67.put(var26,var68);
    IpSecTunnelInterfaceResponse var81 = new IpSecTunnelInterfaceResponse();
    Landroid/net/IpSecTunnelInterfaceResponse var81<PATH_SEP>Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);{Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);};
    Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);{Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);};
    IpSecService.checkInetAddress(param2);{IpSecService.checkInetAddress(param2);};
    IpSecService.checkInetAddress(param3);{IpSecService.checkInetAddress(param3);};
    int var17 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var18 = this.mUserResourceTracker;
    IpSecService$UserRecord var20 = var18.getUserRecord(var17);
    IpSecService$ResourceTracker var21 = var20.mTunnelQuotaTracker;
    boolean var23 = var21.isAvailable();
    int var26 = this.mNextResourceId;
    var28 = var26 add 1;
    this.mNextResourceId = var28;
    int var30 = reserveNetId();
    int var32 = reserveNetId();
    Object var35 = new Object(2);
    arraystore 35[25] = 36;
    Integer var38 = Integer.valueOf(var26);
    arraystore 35[24] = 38;
    String var40 = String.format(%s%d,var35);
    IpSecService$IpSecServiceConfiguration var41 = this.mSrvConfig;
    INetd var43 = var41.getNetdInstance();
    var43.ipSecAddTunnelInterface(var40,param2,param3,var30,var32,var26);
    [I var47 = ADDRESS_FAMILIES;
    48 = arraylength 47;
    IpSecService$RefcountedResourceArray var67 = var20.mTunnelInterfaceRecords;
    IpSecService$RefcountedResource var68 = new IpSecService$RefcountedResource();
    IpSecService$TunnelInterfaceRecord var69 = new IpSecService$TunnelInterfaceRecord();
    IpSecService$RefcountedResource var74 = new IpSecService$RefcountedResource(0);
    var67.put(var26,var68);
    Object var6 = Preconditions.checkNotNull(param3,Null resources cannot be added);{Object var6 = Preconditions.checkNotNull(param3,Null resources cannot be added);};
    SparseArray var7 = this.mArray;
    var7.put(param2,param3);<PATH_SEP>Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);{Object var10 = Preconditions.checkNotNull(param5,Null Binder passed to createTunnelInterface);};
    Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);{Object var13 = Preconditions.checkNotNull(param4,No underlying network was specified);};
    IpSecService.checkInetAddress(param2);{IpSecService.checkInetAddress(param2);};
    IpSecService.checkInetAddress(param3);{IpSecService.checkInetAddress(param3);};
    int var17 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var18 = this.mUserResourceTracker;
    IpSecService$UserRecord var20 = var18.getUserRecord(var17);
    IpSecService$ResourceTracker var21 = var20.mTunnelQuotaTracker;
    boolean var23 = var21.isAvailable();
    int var26 = this.mNextResourceId;
    var28 = var26 add 1;
    this.mNextResourceId = var28;
    int var30 = reserveNetId();
    SparseBooleanArray var2 = this.mTunnelNetIds;
    int var5 = this.mNextTunnelNetIdIndex;
    var7 = 64512 add var5;
    int var8 = this.mNextTunnelNetIdIndex;
    var10 = var8 add 1;
    this.mNextTunnelNetIdIndex = var10;
}