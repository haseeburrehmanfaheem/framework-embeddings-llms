// API: performAccessibilityShortcut
// Service: AccessibilityManagerService_1

public void performAccessibilityShortcut() {
    int var3 = Binder.getCallingUid();
    int var5 = UserHandle.getAppId(var3);
    Context var7 = this.mContext;
    Map var20 = AccessibilityShortcutController.getFrameworkShortcutFeaturesMap();
    Object var21 = this.mLock;
    int var22 = this.mCurrentUserId;
    AccessibilityManagerService$UserState var24 = getUserStateLocked(var22);
    ComponentName var25 = var24.mServiceToEnableWithShortcut;
    boolean var27 = var20.containsKey(var25);
    Object var29 = var20.get(var25);
    AccessibilityShortcutController$ToggleableFrameworkFeatureInfo var30 = (AccessibilityShortcutController$ToggleableFrameworkFeatureInfo) var29;
    SettingsStringUtil$SettingStringHelper var31 = new SettingsStringUtil$SettingStringHelper();
    Context var32 = this.mContext;
    ContentResolver var34 = var32.getContentResolver();
    String var36 = var30.getSettingKey();
    int var37 = this.mCurrentUserId;
    String var40 = var30.getSettingOnValue();
    String var42 = var31.read();
    boolean var44 = TextUtils.equals(var40,var42);
    String var50 = var30.getSettingOnValue();
    boolean var52 = var31.write(var50);
    long var58 = Binder.clearCallingIdentity();
    Map var59 = var24.mComponentNameToServiceMap;
    Object var61 = var59.get(var25);
    int var64 = this.mCurrentUserId;
    enableAccessibilityServiceLocked(var25,var64);
    SettingsStringUtil$SettingStringHelper var4 = new SettingsStringUtil$SettingStringHelper();
    Context var5 = this.mContext;
    ContentResolver var7 = var5.getContentResolver();
    String var11 = var4.read();
    String var13 = SettingsStringUtil$ComponentNameSet.add(var11,param2);
    boolean var15 = var4.write(var13);
    AccessibilityManagerService$UserState var17 = getUserStateLocked(param3);
    Set var18 = var17.mEnabledServices;
    boolean var20 = var18.add(param2);
    onUserStateChangedLocked(var17);
    this.mInitialized = 1;
    updateLegacyCapabilitiesLocked(param2);
    updateServicesLocked(param2);
    updateAccessibilityShortcutLocked(param2);
    updateWindowsForAccessibilityCallbackLocked(param2);
    UiAutomationManager var3 = this.mUiAutomationManager;
    boolean var5 = var3.canRetrieveInteractiveWindowsLocked();
    ArrayList var6 = param2.mBoundServices;
    int var8 = var6.size();
    AccessibilityManagerService$WindowsForAccessibilityCallback var23 = this.mWindowsForAccessibilityCallback;
    this.mWindowsForAccessibilityCallback = 0;
    WindowManagerInternal var24 = this.mWindowManagerService;
    var24.setWindowsForAccessibilityCallback(0);<PATH_SEP>int var3 = Binder.getCallingUid();
    int var5 = UserHandle.getAppId(var3);
    Context var7 = this.mContext;
    Map var20 = AccessibilityShortcutController.getFrameworkShortcutFeaturesMap();
    Object var21 = this.mLock;
    int var22 = this.mCurrentUserId;
    AccessibilityManagerService$UserState var24 = getUserStateLocked(var22);
    ComponentName var25 = var24.mServiceToEnableWithShortcut;
    boolean var27 = var20.containsKey(var25);
    Object var29 = var20.get(var25);
    AccessibilityShortcutController$ToggleableFrameworkFeatureInfo var30 = (AccessibilityShortcutController$ToggleableFrameworkFeatureInfo) var29;
    SettingsStringUtil$SettingStringHelper var31 = new SettingsStringUtil$SettingStringHelper();
    Context var32 = this.mContext;
    ContentResolver var34 = var32.getContentResolver();
    String var36 = var30.getSettingKey();
    int var37 = this.mCurrentUserId;
    String var40 = var30.getSettingOnValue();
    String var42 = var31.read();
    boolean var44 = TextUtils.equals(var40,var42);
    String var50 = var30.getSettingOnValue();
    boolean var52 = var31.write(var50);
    long var58 = Binder.clearCallingIdentity();
    Map var59 = var24.mComponentNameToServiceMap;
    Object var61 = var59.get(var25);
    int var64 = this.mCurrentUserId;
    enableAccessibilityServiceLocked(var25,var64);
    SettingsStringUtil$SettingStringHelper var4 = new SettingsStringUtil$SettingStringHelper();
    Context var5 = this.mContext;
    ContentResolver var7 = var5.getContentResolver();
    String var11 = var4.read();
    String var13 = SettingsStringUtil$ComponentNameSet.add(var11,param2);
    boolean var15 = var4.write(var13);
    AccessibilityManagerService$UserState var17 = getUserStateLocked(param3);
    Set var18 = var17.mEnabledServices;
    boolean var20 = var18.add(param2);
    onUserStateChangedLocked(var17);
    this.mInitialized = 1;
    updateLegacyCapabilitiesLocked(param2);
    updateServicesLocked(param2);
    updateAccessibilityShortcutLocked(param2);
    ComponentName var3 = param2.mServiceToEnableWithShortcut;
    Map var6 = AccessibilityShortcutController.getFrameworkShortcutFeaturesMap();
    ComponentName var7 = param2.mServiceToEnableWithShortcut;
    boolean var9 = var6.containsKey(var7);
    List var10 = param2.mInstalledServices;
    int var12 = var10.size();
    param2.mServiceToEnableWithShortcut = 0;<PATH_SEP>int var3 = Binder.getCallingUid();
    int var5 = UserHandle.getAppId(var3);
    Context var7 = this.mContext;
    Map var20 = AccessibilityShortcutController.getFrameworkShortcutFeaturesMap();
    Object var21 = this.mLock;
    int var22 = this.mCurrentUserId;
    AccessibilityManagerService$UserState var24 = getUserStateLocked(var22);
    ComponentName var25 = var24.mServiceToEnableWithShortcut;
    boolean var27 = var20.containsKey(var25);
    Object var29 = var20.get(var25);
    AccessibilityShortcutController$ToggleableFrameworkFeatureInfo var30 = (AccessibilityShortcutController$ToggleableFrameworkFeatureInfo) var29;
    SettingsStringUtil$SettingStringHelper var31 = new SettingsStringUtil$SettingStringHelper();
    Context var32 = this.mContext;
    ContentResolver var34 = var32.getContentResolver();
    String var36 = var30.getSettingKey();
    int var37 = this.mCurrentUserId;
    String var40 = var30.getSettingOnValue();
    String var42 = var31.read();
    boolean var44 = TextUtils.equals(var40,var42);
    String var50 = var30.getSettingOnValue();
    boolean var52 = var31.write(var50);
    long var58 = Binder.clearCallingIdentity();
    Map var59 = var24.mComponentNameToServiceMap;
    Object var61 = var59.get(var25);
    int var64 = this.mCurrentUserId;
    enableAccessibilityServiceLocked(var25,var64);
    SettingsStringUtil$SettingStringHelper var4 = new SettingsStringUtil$SettingStringHelper();
    Context var5 = this.mContext;
    ContentResolver var7 = var5.getContentResolver();
    String var11 = var4.read();
    String var13 = SettingsStringUtil$ComponentNameSet.add(var11,param2);
    boolean var15 = var4.write(var13);
    AccessibilityManagerService$UserState var17 = getUserStateLocked(param3);
    Set var18 = var17.mEnabledServices;
    boolean var20 = var18.add(param2);
    onUserStateChangedLocked(var17);
    this.mInitialized = 1;
    updateLegacyCapabilitiesLocked(param2);
    List var3 = param2.mInstalledServices;
    int var5 = var3.size();<PATH_SEP>int var3 = Binder.getCallingUid();
    int var5 = UserHandle.getAppId(var3);
    Context var7 = this.mContext;
    Map var20 = AccessibilityShortcutController.getFrameworkShortcutFeaturesMap();
    Object var21 = this.mLock;
    int var22 = this.mCurrentUserId;
    AccessibilityManagerService$UserState var24 = getUserStateLocked(var22);
    ComponentName var25 = var24.mServiceToEnableWithShortcut;
    boolean var27 = var20.containsKey(var25);
    Object var29 = var20.get(var25);
    AccessibilityShortcutController$ToggleableFrameworkFeatureInfo var30 = (AccessibilityShortcutController$ToggleableFrameworkFeatureInfo) var29;
    SettingsStringUtil$SettingStringHelper var31 = new SettingsStringUtil$SettingStringHelper();
    Context var32 = this.mContext;
    ContentResolver var34 = var32.getContentResolver();
    String var36 = var30.getSettingKey();
    int var37 = this.mCurrentUserId;
    String var40 = var30.getSettingOnValue();
    String var42 = var31.read();
    boolean var44 = TextUtils.equals(var40,var42);
    String var50 = var30.getSettingOnValue();
    boolean var52 = var31.write(var50);
    long var58 = Binder.clearCallingIdentity();
    Map var59 = var24.mComponentNameToServiceMap;
    Object var61 = var59.get(var25);
    int var64 = this.mCurrentUserId;
    enableAccessibilityServiceLocked(var25,var64);
    SettingsStringUtil$SettingStringHelper var4 = new SettingsStringUtil$SettingStringHelper();
    Context var5 = this.mContext;
    ContentResolver var7 = var5.getContentResolver();
    String var11 = var4.read();
    String var13 = SettingsStringUtil$ComponentNameSet.add(var11,param2);
    boolean var15 = var4.write(var13);
    AccessibilityManagerService$UserState var17 = getUserStateLocked(param3);
    Set var18 = var17.mEnabledServices;
    boolean var20 = var18.add(param2);
    onUserStateChangedLocked(var17);
    this.mInitialized = 1;
    updateLegacyCapabilitiesLocked(param2);
    updateServicesLocked(param2);
    Map var3 = param2.mComponentNameToServiceMap;
    4 = load_metadata: <Application,Landroid/os/UserManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = LocalServices.getService(var4);
    UserManagerInternal var7 = (UserManagerInternal) var6;
    int var8 = param2.mUserId;
    boolean var10 = var7.isUserUnlockingOrUnlocked(var8);
    List var12 = param2.mInstalledServices;
    int var14 = var12.size();
    List var15 = param2.mInstalledServices;
    Object var17 = var15.get(var94);
    AccessibilityServiceInfo var18 = (AccessibilityServiceInfo) var17;
    String var20 = var18.getId();
    ComponentName var22 = ComponentName.unflattenFromString(var20);
    Object var24 = var3.get(var22);
    AccessibilityServiceConnection var25 = (AccessibilityServiceConnection) var24;
    Set var32 = AccessibilityManagerService$UserState.access$700(param2);{Set var32 = AccessibilityManagerService$UserState.access$700(param2);};
    boolean var34 = var32.contains(var22);
    Set var35 = param2.mEnabledServices;
    boolean var37 = var35.contains(var22);
    UiAutomationManager var38 = this.mUiAutomationManager;
    boolean var40 = var38.suppressingAccessibilityServicesLocked();
    AccessibilityServiceConnection var59 = new AccessibilityServiceConnection();
    Context var60 = this.mContext;
    int var61 = sIdCounter;
    var63 = var61 add 1;
    var63.sIdCounter = var63;
    AccessibilityManagerService$MainHandler var64 = this.mMainHandler;
    Object var65 = this.mLock;
    AccessibilityManagerService$SecurityPolicy var66 = this.mSecurityPolicy;
    WindowManagerInternal var67 = this.mWindowManagerService;
    GlobalActionPerformer var68 = this.mGlobalActionPerformer;
    ActivityTaskManagerInternal var69 = this.mActivityTaskManagerService;
    var77.bindLocked();
}