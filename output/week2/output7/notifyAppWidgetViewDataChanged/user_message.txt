// API: notifyAppWidgetViewDataChanged
// Service: AppWidgetServiceImpl_4

public void notifyAppWidgetViewDataChanged() {
    int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    26 = arraylength 3;
    Object var27 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    29 = arraylength 3;
    30 = arrayload 3[39];
    int var32 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var34 = lookupWidgetLocked(var30,var32,param2);
    scheduleNotifyAppWidgetViewDataChanged(var34,param4);
    AtomicLong var6 = UPDATE_COUNTER;
    long var8 = var6.incrementAndGet();
    SparseLongArray var9 = param2.updateSequenceNos;
    var9.put(param3,var8);
    AppWidgetServiceImpl$Host var12 = param2.host;
    AppWidgetServiceImpl$Host var13 = param2.host;
    boolean var14 = var13.zombie;
    AppWidgetServiceImpl$Host var15 = param2.host;
    IAppWidgetHost var16 = var15.callbacks;
    AppWidgetServiceImpl$Provider var17 = param2.provider;
    AppWidgetServiceImpl$Provider var18 = param2.provider;
    boolean var19 = var18.zombie;
    SomeArgs var21 = SomeArgs.obtain();
    AppWidgetServiceImpl$Host var22 = param2.host;
    var21.arg1 = var22;
    AppWidgetServiceImpl$Host var23 = param2.host;
    IAppWidgetHost var24 = var23.callbacks;
    var21.arg2 = var24;
    Long var26 = Long.valueOf(var8);
    var21.arg3 = var26;
    int var27 = param2.appWidgetId;
    var21.argi1 = var27;
    var21.argi2 = param3;
    Handler var28 = this.mCallbackHandler;
    Message var31 = var28.obtainMessage(4,var21);
    var31.sendToTarget();<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    26 = arraylength 3;
    Object var27 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    29 = arraylength 3;
    30 = arrayload 3[39];
    int var32 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var34 = lookupWidgetLocked(var30,var32,param2);
    scheduleNotifyAppWidgetViewDataChanged(var34,param4);
    AtomicLong var6 = UPDATE_COUNTER;
    long var8 = var6.incrementAndGet();
    SparseLongArray var9 = param2.updateSequenceNos;
    var9.put(param3,var8);
    AppWidgetServiceImpl$Host var12 = param2.host;
    AppWidgetServiceImpl$Host var13 = param2.host;
    boolean var14 = var13.zombie;
    AppWidgetServiceImpl$Host var15 = param2.host;
    IAppWidgetHost var16 = var15.callbacks;
    AppWidgetServiceImpl$Provider var17 = param2.provider;
    AppWidgetServiceImpl$Provider var18 = param2.provider;
    boolean var19 = var18.zombie;
    SomeArgs var21 = SomeArgs.obtain();
    Object var1 = sPoolLock;
    int var2 = sPoolSize;
    SomeArgs var6 = sPool;
    SomeArgs var7 = sPool;
    SomeArgs var8 = var7.mNext;
    var8.sPool = var8;<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    26 = arraylength 3;
    Object var27 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    29 = arraylength 3;
    30 = arrayload 3[39];
    int var32 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var34 = lookupWidgetLocked(var30,var32,param2);
    scheduleNotifyAppWidgetViewDataChanged(var34,param4);
    AtomicLong var6 = UPDATE_COUNTER;
    long var8 = var6.incrementAndGet();
    SparseLongArray var9 = param2.updateSequenceNos;
    var9.put(param3,var8);
    AppWidgetServiceImpl$Host var12 = param2.host;
    AppWidgetServiceImpl$Host var13 = param2.host;
    boolean var14 = var13.zombie;
    AppWidgetServiceImpl$Host var15 = param2.host;
    IAppWidgetHost var16 = var15.callbacks;
    AppWidgetServiceImpl$Provider var17 = param2.provider;
    AppWidgetServiceImpl$Provider var18 = param2.provider;
    boolean var19 = var18.zombie;
    SomeArgs var21 = SomeArgs.obtain();
    Object var1 = sPoolLock;
    int var2 = sPoolSize;
    SomeArgs var4 = new SomeArgs();
    Lcom/android/internal/os/SomeArgs var4<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    26 = arraylength 3;
    Object var27 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    29 = arraylength 3;
    30 = arrayload 3[39];
    int var32 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var34 = lookupWidgetLocked(var30,var32,param2);
    scheduleNotifyAppWidgetViewDataChanged(var34,param4);
    AtomicLong var6 = UPDATE_COUNTER;
    long var8 = var6.incrementAndGet();
    SparseLongArray var9 = param2.updateSequenceNos;
    var9.put(param3,var8);
    AppWidgetServiceImpl$Host var12 = param2.host;
    AppWidgetServiceImpl$Host var13 = param2.host;
    boolean var14 = var13.zombie;
    AppWidgetServiceImpl$Host var15 = param2.host;
    IAppWidgetHost var16 = var15.callbacks;
    AppWidgetServiceImpl$Provider var17 = param2.provider;
    AppWidgetServiceImpl$Provider var18 = param2.provider;
    boolean var19 = var18.zombie;
    SomeArgs var21 = SomeArgs.obtain();
    AppWidgetServiceImpl$Host var22 = param2.host;
    var21.arg1 = var22;
    AppWidgetServiceImpl$Host var23 = param2.host;
    IAppWidgetHost var24 = var23.callbacks;
    var21.arg2 = var24;
}