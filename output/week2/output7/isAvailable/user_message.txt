// API: isAvailable
// Service: EthernetServiceImpl_2

public void isAvailable() {
    EthernetTracker var4 = this.mTracker;
    boolean var6 = var4.isRestrictedInterface(param2);
    ConcurrentHashMap var3 = this.mNetworkCapabilities;
    Object var5 = var3.get(param2);
    NetworkCapabilities var6 = (NetworkCapabilities) var5;
    boolean var10 = var6.hasCapability(13);
    boolean var14<PATH_SEP>EthernetTracker var4 = this.mTracker;
    boolean var6 = var4.isRestrictedInterface(param2);
    ConcurrentHashMap var3 = this.mNetworkCapabilities;
    Object var5 = var3.get(param2);
    NetworkCapabilities var6 = (NetworkCapabilities) var5;
    boolean var10 = var6.hasCapability(13);
    boolean var4 = NetworkCapabilities.isValidCapability(param2);{boolean var4 = NetworkCapabilities.isValidCapability(param2);};
    boolean var15<PATH_SEP>EthernetTracker var4 = this.mTracker;
    boolean var6 = var4.isRestrictedInterface(param2);
    EthernetTracker var10 = this.mTracker;
    boolean var12 = var10.isTrackingInterface(param2);
    boolean var12<PATH_SEP>EthernetTracker var4 = this.mTracker;
    boolean var6 = var4.isRestrictedInterface(param2);
    ConcurrentHashMap var3 = this.mNetworkCapabilities;
    Object var5 = var3.get(param2);
    NetworkCapabilities var6 = (NetworkCapabilities) var5;
    boolean var10 = var6.hasCapability(13);
    boolean var4 = NetworkCapabilities.isValidCapability(param2);{boolean var4 = NetworkCapabilities.isValidCapability(param2);};
    long var7 = this.mNetworkCapabilities;
    var8 = 1 SHL param2;
    9 = conversion(J) 8;
    var10 = var7 and var9;
    var12 = var10 lt 0;
    boolean var15;
}