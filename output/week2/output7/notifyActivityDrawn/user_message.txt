// API: notifyActivityDrawn
// Service: ActivityTaskManagerService_2

public void notifyActivityDrawn() {
    WindowManagerGlobalLock var3 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootActivityContainer var5 = this.mRootActivityContainer;
    ActivityRecord var7 = var5.isInAnyStack(param2);
    ActivityStack var10 = var7.getActivityStack();
    var10.notifyActivityDrawnLocked(var7);
    ArrayList var4 = this.mUndrawnActivitiesBelowTopTranslucent;
    boolean var6 = var4.remove(param2);
    ArrayList var7 = this.mUndrawnActivitiesBelowTopTranslucent;
    boolean var9 = var7.isEmpty();
    ActivityRecord var10 = this.mTranslucentActivityWaiting;
    this.mTranslucentActivityWaiting = 0;
    ArrayList var11 = this.mUndrawnActivitiesBelowTopTranslucent;
    var11.clear();
    Handler var13 = this.mHandler;
    var13.removeMessages(106);
    WindowManagerService var16 = this.mWindowManager;
    IApplicationToken$Stub var17 = var10.appToken;
    var16.setWindowOpaque(var17,0);
    WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    setWindowOpaqueLocked(param2,param3);
    RootWindowContainer var4 = this.mRoot;
    AppWindowToken var6 = var4.getAppWindowToken(param2);
    WindowState var9 = var6.findMainWindow();
    WindowManager$LayoutParams var11 = var9.getAttrs();
    int var12 = var11.format;
    boolean var14 = PixelFormat.formatHasAlpha(var12);
    var16 = var14 xor 1;
    var17 = param3 and var16;
    WindowStateAnimator var18 = var9.mWinAnimator;
    var18.setOpaqueLocked(var17);
}