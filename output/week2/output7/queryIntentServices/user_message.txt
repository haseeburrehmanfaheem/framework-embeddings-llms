// API: queryIntentServices
// Service: PackageManagerService_5

public void queryIntentServices() {
    int var7 = Binder.getCallingUid();
    ParceledListSlice var8 = new ParceledListSlice();
    List var11 = queryIntentServicesInternal(param2,param3,param4,param5,var7,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    ComponentName var20 = getComponent();
    Intent var22 = getSelector();
    Intent var27 = getSelector();
    ComponentName var29 = var27.getComponent();
    ArrayList var78 = new ArrayList();
    ServiceInfo var82 = getServiceInfo(var32,var18,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,3,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var25 = getInstantApp(param6);
    boolean var27 = canViewInstantApps(var14,param6);
    boolean 1<PATH_SEP>int var7 = Binder.getCallingUid();
    ParceledListSlice var8 = new ParceledListSlice();
    List var11 = queryIntentServicesInternal(param2,param3,param4,param5,var7,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    ComponentName var20 = getComponent();
    Intent var22 = getSelector();
    Intent var27 = getSelector();
    ComponentName var29 = var27.getComponent();
    ArrayList var78 = new ArrayList();
    ServiceInfo var82 = getServiceInfo(var32,var18,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,3,param4);
    boolean var8 = Process.isIsolated(param3);
    String var18 = getInstantAppPackageName(var14);
    boolean 0<PATH_SEP>int var7 = Binder.getCallingUid();
    ParceledListSlice var8 = new ParceledListSlice();
    List var11 = queryIntentServicesInternal(param2,param3,param4,param5,var7,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    ComponentName var20 = getComponent();
    Intent var22 = getSelector();
    Intent var27 = getSelector();
    ComponentName var29 = var27.getComponent();
    ArrayList var78 = new ArrayList();
    ServiceInfo var82 = getServiceInfo(var32,var18,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Settings var28 = this.mSettings;
    ArrayMap var29 = var28.mPackages;
    String var31 = getPackageName();
    Object var33 = var29.get(var31);
    PackageSetting var34 = (PackageSetting) var33;
    boolean var37 = filterAppAccessLPr(var34,var10,param2,3,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    var52 = var51 xor 1;
    boolean var52<PATH_SEP>int var7 = Binder.getCallingUid();
    ParceledListSlice var8 = new ParceledListSlice();
    List var11 = queryIntentServicesInternal(param2,param3,param4,param5,var7,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    int var9 = updateFlagsForResolve(param2,param3,param4,param5,param6,0);
    boolean var8 = this.mSafeMode;
    String var15 = getInstantAppPackageName(param5);
    var17 = var13 and 8388608;
    var30 = var13 and -50331649;
    var32 = var30 and -8388609;
    int var47 = updateFlagsForComponent(var43,param3,param4);
    int var47;
}