// API: startInputOrWindowGainedFocus
// Service: MultiClientInputMethodManagerService$ApiCallbacks_11

public void startInputOrWindowGainedFocus() {
    int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    int var17 = UserHandle.getUserId(var13);
    AppOpsManager var20 = this.mAppOpsManager;
    String var21 = param8.packageName;
    MultiClientInputMethodManagerService$UserDataMap var29 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var31 = var29.get(var17);
    Object var32 = var31.mLock;
    MultiClientInputMethodManagerService$InputMethodClientInfo var34 = var31.getClientLocked(param3);
    int var35 = var34.mUid;
    int var36 = var31.mState;
    94: switch 36 [1->460,2->460,3->460,4->460,5->204,6->460] default: 196;
    WeakHashMap var38 = var34.mWindowMap;
    Object var40 = var38.get(param4);
    MultiClientInputMethodManagerService$WindowInfo var41 = (MultiClientInputMethodManagerService$WindowInfo) var40;
    MultiClientInputMethodManagerService$WindowInfo var42 = new MultiClientInputMethodManagerService$WindowInfo();
    int var44 = MultiClientInputMethodManagerService$WindowHandleSource.getNext();
    WeakHashMap var46 = var34.mWindowMap;
    Object var48 = var46.put(param4,var42);
    int var53 = var34.mUid;
    int var54 = var34.mPid;
    int var55 = var34.mSelfReportedDisplayId;
    boolean var57 = checkFocus(var53,var54,var55);{boolean var57 = checkFocus(var53,var54,var55);};
    int var100 = var34.mState;
    int var101 = var50.mWindowHandle;
    IMultiClientInputMethodSession var104 = var34.mMSInputMethodSession;
    var104.startInputOrWindowGainedFocus(param9,param10,param8,param5,param6,var103);
    Object var8 = this.mSessionLock;
    MultiClientInputMethodClientCallbackAdaptor$CallbackImpl var9 = this.mCallbackImpl;
    Handler var11 = this.mHandler;
    SomeArgs var13 = SomeArgs.obtain();
    WeakReference var14 = new WeakReference();
    var13.arg1 = var19;<PATH_SEP>int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    int var17 = UserHandle.getUserId(var13);
    AppOpsManager var20 = this.mAppOpsManager;
    String var21 = param8.packageName;
    MultiClientInputMethodManagerService$UserDataMap var29 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var31 = var29.get(var17);
    Object var32 = var31.mLock;
    MultiClientInputMethodManagerService$InputMethodClientInfo var34 = var31.getClientLocked(param3);
    int var35 = var34.mUid;
    int var36 = var31.mState;
    94: switch 36 [1->460,2->460,3->460,4->460,5->204,6->460] default: 196;
    WeakHashMap var38 = var34.mWindowMap;
    Object var40 = var38.get(param4);
    MultiClientInputMethodManagerService$WindowInfo var41 = (MultiClientInputMethodManagerService$WindowInfo) var40;
    MultiClientInputMethodManagerService$WindowInfo var42 = new MultiClientInputMethodManagerService$WindowInfo();
    int var44 = MultiClientInputMethodManagerService$WindowHandleSource.getNext();
    WeakHashMap var46 = var34.mWindowMap;
    Object var48 = var46.put(param4,var42);
    int var53 = var34.mUid;
    int var54 = var34.mPid;
    int var55 = var34.mSelfReportedDisplayId;
    boolean var57 = checkFocus(var53,var54,var55);{boolean var57 = checkFocus(var53,var54,var55);};
    int var100 = var34.mState;
    int var101 = var50.mWindowHandle;
    IMultiClientInputMethodSession var104 = var34.mMSInputMethodSession;
    var104.startInputOrWindowGainedFocus(param9,param10,param8,param5,param6,var103);
    Object var8 = this.mSessionLock;
    MultiClientInputMethodClientCallbackAdaptor$CallbackImpl var9 = this.mCallbackImpl;
    Handler var11 = this.mHandler;
    SomeArgs var13 = SomeArgs.obtain();
    WeakReference var14 = new WeakReference();
    var13.arg1 = var19;
    var13.arg2 = param4;
    var13.argi1 = param5;
    var13.argi2 = param6;
    var13.argi3 = param7;<PATH_SEP>int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    int var17 = UserHandle.getUserId(var13);
    AppOpsManager var20 = this.mAppOpsManager;
    String var21 = param8.packageName;
    MultiClientInputMethodManagerService$UserDataMap var29 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var31 = var29.get(var17);
    Object var32 = var31.mLock;
    MultiClientInputMethodManagerService$InputMethodClientInfo var34 = var31.getClientLocked(param3);
    int var35 = var34.mUid;
    int var36 = var31.mState;
    94: switch 36 [1->460,2->460,3->460,4->460,5->204,6->460] default: 196;
    WeakHashMap var38 = var34.mWindowMap;
    Object var40 = var38.get(param4);
    MultiClientInputMethodManagerService$WindowInfo var41 = (MultiClientInputMethodManagerService$WindowInfo) var40;
    MultiClientInputMethodManagerService$WindowInfo var42 = new MultiClientInputMethodManagerService$WindowInfo();
    int var44 = MultiClientInputMethodManagerService$WindowHandleSource.getNext();
    WeakHashMap var46 = var34.mWindowMap;
    Object var48 = var46.put(param4,var42);
    int var53 = var34.mUid;
    int var54 = var34.mPid;
    int var55 = var34.mSelfReportedDisplayId;
    boolean var57 = checkFocus(var53,var54,var55);{boolean var57 = checkFocus(var53,var54,var55);};
    int var100 = var34.mState;
    int var101 = var50.mWindowHandle;
    IMultiClientInputMethodSession var104 = var34.mMSInputMethodSession;
    var104.startInputOrWindowGainedFocus(param9,param10,param8,param5,param6,var103);
    Object var8 = this.mSessionLock;
    MultiClientInputMethodClientCallbackAdaptor$CallbackImpl var9 = this.mCallbackImpl;
    Handler var11 = this.mHandler;
    SomeArgs var13 = SomeArgs.obtain();
    Object var1 = sPoolLock;
    int var2 = sPoolSize;
    SomeArgs var6 = sPool;
    SomeArgs var7 = sPool;
    SomeArgs var8 = var7.mNext;
    var8.sPool = var8;
    var6.mNext = 0;
    var6.mInPool = 0;
    int var9 = sPoolSize;
    var11 = var9 add -1;
    var11.sPoolSize = var11;<PATH_SEP>int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    int var17 = UserHandle.getUserId(var13);
    AppOpsManager var20 = this.mAppOpsManager;
    String var21 = param8.packageName;
    MultiClientInputMethodManagerService$UserDataMap var29 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var31 = var29.get(var17);
    Object var32 = var31.mLock;
    MultiClientInputMethodManagerService$InputMethodClientInfo var34 = var31.getClientLocked(param3);
    int var35 = var34.mUid;
    int var36 = var31.mState;
    94: switch 36 [1->460,2->460,3->460,4->460,5->204,6->460] default: 196;
    WeakHashMap var38 = var34.mWindowMap;
    Object var40 = var38.get(param4);
    MultiClientInputMethodManagerService$WindowInfo var41 = (MultiClientInputMethodManagerService$WindowInfo) var40;
    MultiClientInputMethodManagerService$WindowInfo var42 = new MultiClientInputMethodManagerService$WindowInfo();
    int var44 = MultiClientInputMethodManagerService$WindowHandleSource.getNext();
    WeakHashMap var46 = var34.mWindowMap;
    Object var48 = var46.put(param4,var42);
    int var53 = var34.mUid;
    int var54 = var34.mPid;
    int var55 = var34.mSelfReportedDisplayId;
    boolean var57 = checkFocus(var53,var54,var55);{boolean var57 = checkFocus(var53,var54,var55);};
    int var100 = var34.mState;
    int var101 = var50.mWindowHandle;
    IMultiClientInputMethodSession var104 = var34.mMSInputMethodSession;
    var104.startInputOrWindowGainedFocus(param9,param10,param8,param5,param6,var103);
    Object var8 = this.mSessionLock;
    MultiClientInputMethodClientCallbackAdaptor$CallbackImpl var9 = this.mCallbackImpl;
    Handler var11 = this.mHandler;
    SomeArgs var13 = SomeArgs.obtain();
    Object var1 = sPoolLock;
    int var2 = sPoolSize;
    SomeArgs var4 = new SomeArgs();
    Lcom/android/internal/os/SomeArgs var4;
}