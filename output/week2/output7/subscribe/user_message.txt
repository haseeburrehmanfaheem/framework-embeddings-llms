// API: subscribe
// Service: WifiAwareServiceImpl_5

public void subscribe() {
    int var9 = getMockableCallingUid();
    AppOpsManager var10 = this.mAppOps;
    int var13 = getMockableCallingUid();
    WifiAwareStateManager var22 = this.mStateManager;
    Characteristics var24 = var22.getCharacteristics();
    Context var25 = this.mContext;
    PackageManager var27 = var25.getPackageManager();
    boolean var30 = var27.hasSystemFeature(android.hardware.wifi.rtt);
    assertValid(var24,var30);{assertValid(var24,var30);};
    enforceClientValidity(var9,param3);{enforceClientValidity(var9,param3);};
    WifiAwareStateManager var33 = this.mStateManager;
    var33.subscribe(param3,param4,param5);
    WifiAwareStateManager$WifiAwareStateMachine var5 = this.mSm;
    Message var8 = var5.obtainMessage(1);
    var8.arg1 = 105;
    var8.arg2 = param2;
    var8.obj = param4;
    Bundle var11 = var8.getData();
    var11.putParcelable(config,param3);<PATH_SEP>int var9 = getMockableCallingUid();
    AppOpsManager var10 = this.mAppOps;
    int var13 = getMockableCallingUid();
    WifiAwareStateManager var22 = this.mStateManager;
    Characteristics var24 = var22.getCharacteristics();
    Context var25 = this.mContext;
    PackageManager var27 = var25.getPackageManager();
    boolean var30 = var27.hasSystemFeature(android.hardware.wifi.rtt);
    assertValid(var24,var30);{assertValid(var24,var30);};
    enforceClientValidity(var9,param3);{enforceClientValidity(var9,param3);};
    WifiAwareStateManager var33 = this.mStateManager;
    var33.subscribe(param3,param4,param5);
    WifiAwareStateManager$WifiAwareStateMachine var5 = this.mSm;
    Message var8 = var5.obtainMessage(1);
    var8.arg1 = 105;
    var8.arg2 = param2;
    var8.obj = param4;
    Bundle var11 = var8.getData();
    var11.putParcelable(config,param3);
    WifiAwareStateManager$WifiAwareStateMachine var14 = this.mSm;
    var14.sendMessage(var8);
    StateMachine$SmHandler var3 = this.mSmHandler;
    boolean var6 = var3.sendMessage(param2);<PATH_SEP>int var9 = getMockableCallingUid();
    AppOpsManager var10 = this.mAppOps;
    int var13 = getMockableCallingUid();
    WifiAwareStateManager var22 = this.mStateManager;
    Characteristics var24 = var22.getCharacteristics();
    Context var25 = this.mContext;
    PackageManager var27 = var25.getPackageManager();
    boolean var30 = var27.hasSystemFeature(android.hardware.wifi.rtt);
    assertValid(var24,var30);{assertValid(var24,var30);};
    enforceClientValidity(var9,param3);{enforceClientValidity(var9,param3);};
    WifiAwareStateManager var33 = this.mStateManager;
    var33.subscribe(param3,param4,param5);
    WifiAwareStateManager$WifiAwareStateMachine var5 = this.mSm;
    Message var8 = var5.obtainMessage(1);
    var8.arg1 = 105;
    var8.arg2 = param2;
    var8.obj = param4;
    Bundle var11 = var8.getData();
    var11.putParcelable(config,param3);
    WifiAwareStateManager$WifiAwareStateMachine var14 = this.mSm;
    var14.sendMessage(var8);
    StateMachine$SmHandler var3 = this.mSmHandler;<PATH_SEP>int var9 = getMockableCallingUid();
    AppOpsManager var10 = this.mAppOps;
    int var13 = getMockableCallingUid();
    WifiAwareStateManager var22 = this.mStateManager;
    Characteristics var24 = var22.getCharacteristics();
    Characteristics var2 = this.mCharacteristics;
    Capabilities var4 = this.mCapabilities;
    Capabilities var5 = this.mCapabilities;
    Characteristics var7 = var5.toPublicCharacteristics();
    Bundle var2 = new Bundle();
    int var4 = this.maxServiceNameLen;
    var2.putInt(key_max_service_name_length,var4);
    int var7 = this.maxServiceSpecificInfoLen;
    var2.putInt(key_max_service_specific_info_length,var7);
    int var10 = this.maxMatchFilterLen;
    var2.putInt(key_max_match_filter_length,var10);
    Characteristics var13 = new Characteristics();
    Landroid/net/wifi/aware/Characteristics var13;
}