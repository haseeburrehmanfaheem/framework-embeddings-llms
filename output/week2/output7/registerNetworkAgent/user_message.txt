// API: registerNetworkAgent
// Service: ConnectivityService_8

public void registerNetworkAgent() {
    LinkProperties var10 = new LinkProperties();
    var10.ensureDirectlyConnectedRoutes();{var10.ensureDirectlyConnectedRoutes();};
    NetworkCapabilities var13 = new NetworkCapabilities();
    NetworkAgentInfo var15 = new NetworkAgentInfo();
    AsyncChannel var16 = new AsyncChannel();
    Network var18 = new Network();
    int var20 = reserveNetId();
    NetworkInfo var22 = new NetworkInfo();
    Context var24 = this.mContext;
    ConnectivityService$NetworkStateTrackerHandler var25 = this.mTrackerHandler;
    NetworkMisc var26 = new NetworkMisc();
    INetd var28 = this.mNetd;
    IDnsResolver var29 = this.mDnsResolver;
    INetworkManagementService var30 = this.mNMS;
    NetworkCapabilities var33 = mixInCapabilities(var15,var13);
    boolean var4 = param2.everConnected;
    boolean var7 = isVPN();
    NetworkCapabilities var8 = param2.networkCapabilities;
    boolean var10 = var8.satisfiedByImmutableNetworkCapabilities(param3);
    NetworkCapabilities var11 = param2.networkCapabilities;
    String var13 = var11.describeImmutableDifferences(param3);
    StringJoiner var4 = new StringJoiner();
    long var8 = this.mNetworkCapabilities;
    var9 = var8 and -20924417;
    long var10 = param2.mNetworkCapabilities;
    var11 = -20924417 and var10;
    var12 = var9 lt var11;
    [I var16 = BitUtils.unpackBits(var9);
    String var18 = NetworkCapabilities.capabilityNamesOf(var16);
    [I var20 = BitUtils.unpackBits(var11);
    String var22 = NetworkCapabilities.capabilityNamesOf(var20);
    Object var23 = new Object(2);
    arraystore 23[3] = 18;
    arraystore 23[13] = 22;
    String var26 = String.format(immutable capabilities changed: %s -> %s,var23);
    StringJoiner var28 = var4.add(var26);
    boolean var32 = equalsSpecifier(param2);
    NetworkSpecifier var34 = getNetworkSpecifier();
    NetworkSpecifier var36 = getNetworkSpecifier();
    Object var37 = new Object(2);
    arraystore 37[3] = 34;
    arraystore 37[13] = 36;
    String var40 = String.format(specifier changed: %s -> %s,var37);
    StringJoiner var42 = var4.add(var40);
    boolean var50 = equalsTransportTypes(param2);
    [I var52 = getTransportTypes();
    String var54 = NetworkCapabilities.transportNamesOf(var52);
    StringJoiner var2 = new StringJoiner();
    6 = arraylength 1;
    String var19 = var2.toString();<PATH_SEP>LinkProperties var10 = new LinkProperties();
    var10.ensureDirectlyConnectedRoutes();{var10.ensureDirectlyConnectedRoutes();};
    NetworkCapabilities var13 = new NetworkCapabilities();
    NetworkAgentInfo var15 = new NetworkAgentInfo();
    AsyncChannel var16 = new AsyncChannel();
    Network var18 = new Network();
    int var20 = reserveNetId();
    NetworkInfo var22 = new NetworkInfo();
    Context var24 = this.mContext;
    ConnectivityService$NetworkStateTrackerHandler var25 = this.mTrackerHandler;
    NetworkMisc var26 = new NetworkMisc();
    INetd var28 = this.mNetd;
    IDnsResolver var29 = this.mDnsResolver;
    INetworkManagementService var30 = this.mNMS;
    NetworkCapabilities var33 = mixInCapabilities(var15,var13);
    boolean var4 = param2.everConnected;
    boolean var7 = isVPN();
    NetworkCapabilities var8 = param2.networkCapabilities;
    boolean var10 = var8.satisfiedByImmutableNetworkCapabilities(param3);
    boolean var5 = satisfiedByNetworkCapabilities(param2,1);
    boolean var6 = satisfiedByNetCapabilities(param2,param3);
    boolean var8 = satisfiedByTransportTypes(param2);
    boolean var10 = satisfiedByLinkBandwidths(param2);
    boolean var15 = satisfiedBySpecifier(param2);
    boolean var22 = satisfiedByUids(param2);
    boolean var35<PATH_SEP>LinkProperties var10 = new LinkProperties();
    var10.ensureDirectlyConnectedRoutes();{var10.ensureDirectlyConnectedRoutes();};
    NetworkCapabilities var13 = new NetworkCapabilities();
    NetworkAgentInfo var15 = new NetworkAgentInfo();
    AsyncChannel var16 = new AsyncChannel();
    Network var18 = new Network();
    int var20 = reserveNetId();
    NetworkInfo var22 = new NetworkInfo();
    Context var24 = this.mContext;
    ConnectivityService$NetworkStateTrackerHandler var25 = this.mTrackerHandler;
    NetworkMisc var26 = new NetworkMisc();
    INetd var28 = this.mNetd;
    IDnsResolver var29 = this.mDnsResolver;
    INetworkManagementService var30 = this.mNMS;
    NetworkCapabilities var33 = mixInCapabilities(var15,var13);
    boolean var4 = param2.everConnected;
    boolean var7 = isVPN();
    NetworkCapabilities var8 = param2.networkCapabilities;
    boolean var10 = var8.satisfiedByImmutableNetworkCapabilities(param3);
    NetworkCapabilities var11 = param2.networkCapabilities;
    String var13 = var11.describeImmutableDifferences(param3);
    StringJoiner var4 = new StringJoiner();
    long var8 = this.mNetworkCapabilities;
    var9 = var8 and -20924417;
    long var10 = param2.mNetworkCapabilities;
    var11 = -20924417 and var10;
    var12 = var9 lt var11;
    [I var16 = BitUtils.unpackBits(var9);
    String var18 = NetworkCapabilities.capabilityNamesOf(var16);
    [I var20 = BitUtils.unpackBits(var11);
    String var22 = NetworkCapabilities.capabilityNamesOf(var20);
    Object var23 = new Object(2);
    arraystore 23[3] = 18;
    arraystore 23[13] = 22;
    String var26 = String.format(immutable capabilities changed: %s -> %s,var23);
    StringJoiner var28 = var4.add(var26);
    boolean var32 = equalsSpecifier(param2);
    boolean var50 = equalsTransportTypes(param2);
    [I var52 = getTransportTypes();
    String var54 = NetworkCapabilities.transportNamesOf(var52);
    [I var56 = getTransportTypes();
    String var58 = NetworkCapabilities.transportNamesOf(var56);
    Object var59 = new Object(2);
    arraystore 59[3] = 54;
    arraystore 59[13] = 58;
    String var62 = String.format(transports changed: %s -> %s,var59);
    StringJoiner var64 = var4.add(var62);
    String var72 = var4.toString();<PATH_SEP>LinkProperties var10 = new LinkProperties();
    var10.ensureDirectlyConnectedRoutes();{var10.ensureDirectlyConnectedRoutes();};
    NetworkCapabilities var13 = new NetworkCapabilities();
    NetworkAgentInfo var15 = new NetworkAgentInfo();
    AsyncChannel var16 = new AsyncChannel();
    Network var18 = new Network();
    int var20 = reserveNetId();
    NetworkInfo var22 = new NetworkInfo();
    Context var24 = this.mContext;
    ConnectivityService$NetworkStateTrackerHandler var25 = this.mTrackerHandler;
    NetworkMisc var26 = new NetworkMisc();
    INetd var28 = this.mNetd;
    IDnsResolver var29 = this.mDnsResolver;
    INetworkManagementService var30 = this.mNMS;
    NetworkCapabilities var33 = mixInCapabilities(var15,var13);
    boolean var4 = param2.everConnected;
    boolean var7 = isVPN();
    NetworkCapabilities var8 = param2.networkCapabilities;
    boolean var10 = var8.satisfiedByImmutableNetworkCapabilities(param3);
    NetworkCapabilities var11 = param2.networkCapabilities;
    String var13 = var11.describeImmutableDifferences(param3);
    StringJoiner var4 = new StringJoiner();
    long var8 = this.mNetworkCapabilities;
    var9 = var8 and -20924417;
    long var10 = param2.mNetworkCapabilities;
    var11 = -20924417 and var10;
    var12 = var9 lt var11;
    [I var16 = BitUtils.unpackBits(var9);
    String var18 = NetworkCapabilities.capabilityNamesOf(var16);
    [I var20 = BitUtils.unpackBits(var11);
    String var22 = NetworkCapabilities.capabilityNamesOf(var20);
    Object var23 = new Object(2);
    arraystore 23[3] = 18;
    arraystore 23[13] = 22;
    String var26 = String.format(immutable capabilities changed: %s -> %s,var23);
    StringJoiner var28 = var4.add(var26);
    boolean var32 = equalsSpecifier(param2);
    NetworkSpecifier var34 = getNetworkSpecifier();
    NetworkSpecifier var36 = getNetworkSpecifier();
    Object var37 = new Object(2);
    arraystore 37[3] = 34;
    arraystore 37[13] = 36;
    String var40 = String.format(specifier changed: %s -> %s,var37);
    StringJoiner var42 = var4.add(var40);
    boolean var50 = equalsTransportTypes(param2);
    [I var52 = getTransportTypes();
    String var54 = NetworkCapabilities.transportNamesOf(var52);
    [I var56 = getTransportTypes();
    String var58 = NetworkCapabilities.transportNamesOf(var56);
    Object var59 = new Object(2);
    arraystore 59[3] = 54;
    arraystore 59[13] = 58;
    String var62 = String.format(transports changed: %s -> %s,var59);
}