// API: updatePermissionFlagsForAllApps
// Service: PackageManagerService_4

public void updatePermissionFlagsForAllApps() {
    ArrayMap var5 = this.mPackages;
    PermissionManagerServiceInternal var6 = this.mPermissionManager;
    int var8 = PackageManagerService.getCallingUid();
    ArrayMap var9 = this.mPackages;
    Collection var11 = var9.values();
    PermissionManagerServiceInternal$PermissionCallback var12 = this.mPermissionCallback;
    boolean var14 = var6.updatePermissionFlagsForAllApps(param2,param3,var8,param4,var11,var12);
    Settings var16 = this.mSettings;
    var16.writeRuntimePermissionsForUserLPr(param4,0);
    Settings$RuntimePermissionPersistence var7 = this.mRuntimePermissionsPersistence;
    var7.writePermissionsForUserSyncLPr(param2);
    Handler var3 = this.mHandler;
    var3.removeMessages(param2);
    writePermissionsSync(param2);
    AtomicFile var3 = new AtomicFile();
    Settings var4 = this.this$0;
    File var6 = Settings.access$200(var4,param2);{File var6 = Settings.access$200(var4,param2);};
    ArrayMap var17 = new ArrayMap();
    ArrayMap var19 = new ArrayMap();
    Object var21 = this.mPersistenceLock;
    SparseBooleanArray var22 = this.mWriteScheduled;
    var22.delete(param2);
    Settings var24 = this.this$0;
    ArrayMap var25 = var24.mPackages;
    int var27 = var25.size();
    Settings var56 = this.this$0;
    ArrayMap var57 = var56.mSharedUsers;
    int var59 = var57.size();
    FileOutputStream var89 = var3.startWrite();
    XmlSerializer var91 = Xml.newSerializer();
    Charset var92 = UTF_8;
    String var94 = var92.name();
    var91.setOutput(var89,var94);
    var91.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    Boolean var100 = Boolean.valueOf(1);
    var91.startDocument(0,var100);
    XmlSerializer var104 = var91.startTag(0,runtime-permissions);
    SparseIntArray var105 = this.mVersions;
    int var107 = var105.get(param2,0);
    String var110 = Integer.toString(var107);
    XmlSerializer var112 = var91.attribute(0,version,var110);
    SparseArray var113 = this.mFingerprints;
    Object var115 = var113.get(param2);
    String var116 = (String) var115;
    XmlSerializer var119 = var91.attribute(0,fingerprint,var116);
    int var124 = var17.size();
    int var146 = var19.size();
    XmlSerializer var168 = var91.endTag(0,runtime-permissions);
    var91.endDocument();
    var3.finishWrite(var89);
    String var171 = FINGERPRINT;
    boolean var173 = var171.equals(var116);
    SparseBooleanArray var174 = this.mDefaultPermissionsGranted;
    var174.put(param2,1);
    IoUtils.closeQuietly(var199);
}