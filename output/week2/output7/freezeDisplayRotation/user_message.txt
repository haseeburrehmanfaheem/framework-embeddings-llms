// API: freezeDisplayRotation
// Service: WindowManagerService_3

public void freezeDisplayRotation() {
    long var19 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var20 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var19 = var5.regionCounter;
    var21 = var19 add 1;
    var5.regionCounter = var21;<PATH_SEP>long var19 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var20 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var22 = this.mRoot;
    DisplayContent var24 = var22.getDisplayContent(param2);
    DisplayRotation var26 = var24.getDisplayRotation();
    var26.freezeRotation(param3);
    DisplayContent var4 = this.mDisplayContent;
    int var6 = var4.getRotation();
    setUserRotation(1,var7);
    boolean var4 = this.isDefaultDisplay;
    int var7 = this.mUserRotationMode;
    this.mUserRotationMode = param2;
    int var9 = this.mUserRotation;
    this.mUserRotation = param3;
    DisplayWindowSettings var11 = this.mDisplayWindowSettings;
    DisplayContent var12 = this.mDisplayContent;
    var11.setUserRotation(var12,param2,param3);
    DisplayInfo var6 = getDisplayInfo();
    DisplayWindowSettings$Entry var8 = getOrCreateEntry(var6);<PATH_SEP>long var19 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var20 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var22 = this.mRoot;
    DisplayContent var24 = var22.getDisplayContent(param2);
    DisplayRotation var26 = var24.getDisplayRotation();
    var26.freezeRotation(param3);
    DisplayContent var4 = this.mDisplayContent;
    int var6 = var4.getRotation();
    setUserRotation(1,var7);
    boolean var4 = this.isDefaultDisplay;
    int var7 = this.mUserRotationMode;
    int var9 = this.mUserRotation;
    this.mUserRotation = param3;<PATH_SEP>long var19 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var20 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var22 = this.mRoot;
    DisplayContent var24 = var22.getDisplayContent(param2);
    DisplayRotation var26 = var24.getDisplayRotation();
    var26.freezeRotation(param3);
    DisplayContent var4 = this.mDisplayContent;
    int var6 = var4.getRotation();
    setUserRotation(1,var7);
    boolean var4 = this.isDefaultDisplay;
    int var7 = this.mUserRotationMode;
    int var9 = this.mUserRotation;
    this.mUserRotation = param3;
    DisplayWindowSettings var11 = this.mDisplayWindowSettings;
    DisplayContent var12 = this.mDisplayContent;
    var11.setUserRotation(var12,param2,param3);
    WindowManagerService var14 = this.mService;
    var14.updateRotation(1,0);
}