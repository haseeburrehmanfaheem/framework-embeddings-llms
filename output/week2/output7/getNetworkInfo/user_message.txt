// API: getNetworkInfo
// Service: ConnectivityService_2

public void getNetworkInfo() {
    int var5 = Binder.getCallingUid();
    Network var7 = getVpnUnderlyingNetworks(var5);
    NetworkState var10 = getUnfilteredActiveNetworkState(var5);
    NetworkInfo var11 = var10.networkInfo;
    NetworkInfo var12 = var10.networkInfo;
    int var14 = var12.getType();
    filterNetworkStateForUid(var10,var5,0);
    NetworkInfo var6 = param2.networkInfo;
    LinkProperties var7 = param2.linkProperties;
    LinkProperties var8 = param2.linkProperties;
    boolean var10 = isNetworkWithLinkPropertiesBlocked(var8,param3,param4);
    NetworkInfo var11 = param2.networkInfo;
    NetworkInfo$DetailedState var12 = BLOCKED;
    var11.setDetailedState(var12,0,0);
    SparseArray var16 = this.mVpns;
    LockdownVpnTracker var17 = this.mLockdownTracker;
    LockdownVpnTracker var18 = this.mLockdownTracker;
    NetworkInfo var19 = param2.networkInfo;
    var18.augmentNetworkInfo(var19);
    boolean var4 = isConnected();
    Vpn var6 = this.mVpn;
    NetworkInfo var8 = var6.getNetworkInfo();
    NetworkInfo$DetailedState var10 = var8.getDetailedState();
    String var12 = var8.getReason();
    setDetailedState(var10,var12,0);<PATH_SEP>int var5 = Binder.getCallingUid();
    Network var7 = getVpnUnderlyingNetworks(var5);
    NetworkState var10 = getUnfilteredActiveNetworkState(var5);
    NetworkAgentInfo var4 = getDefaultNetwork();
    NetworkRequest var2 = this.mDefaultRequest;
    int var3 = var2.requestId;
    NetworkAgentInfo var5 = getNetworkForRequest(var3);
    SparseArray var3 = this.mNetworkForRequestId;
    SparseArray var4 = this.mNetworkForRequestId;
    Object var6 = var4.get(param2);
    NetworkAgentInfo var7 = (NetworkAgentInfo) var6;
    Lcom/android/server/connectivity/NetworkAgentInfo var7<PATH_SEP>int var5 = Binder.getCallingUid();
    Network var7 = getVpnUnderlyingNetworks(var5);
    NetworkState var10 = getUnfilteredActiveNetworkState(var5);
    NetworkAgentInfo var4 = getDefaultNetwork();
    Network var6 = getVpnUnderlyingNetworks(param2);
    8 = arraylength 6;
    9 = arrayload 6[7];
    NetworkAgentInfo var11 = getNetworkAgentInfoForNetwork(var9);
    int var4 = param2.netId;
    NetworkAgentInfo var6 = getNetworkAgentInfoForNetId(var4);
    SparseArray var3 = this.mNetworkForNetId;
    SparseArray var4 = this.mNetworkForNetId;
    Object var6 = var4.get(param2);
    NetworkAgentInfo var7 = (NetworkAgentInfo) var6;
    Lcom/android/server/connectivity/NetworkAgentInfo var7<PATH_SEP>int var5 = Binder.getCallingUid();
    Network var7 = getVpnUnderlyingNetworks(var5);
    SparseArray var3 = this.mVpns;
    boolean var4 = this.mLockdownEnabled;
    int var7 = UserHandle.getUserId(param2);
    SparseArray var8 = this.mVpns;
    Object var10 = var8.get(var7);
    Vpn var11 = (Vpn) var10;
    boolean var13 = var11.appliesToUid(param2);
    boolean var4 = isRunningLocked();
    NetworkCapabilities var6 = this.mNetworkCapabilities;
    boolean var8 = var6.appliesToUid(param2);
    ArraySet var3 = this.mUids;
    Iterator var7 = var3.iterator();
    Object var11 = var7.next();
    UidRange var12 = (UidRange) var11;
    boolean var14 = var12.contains(param2);
    boolean 1;
}