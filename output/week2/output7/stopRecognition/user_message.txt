// API: stopRecognition
// Service: SoundTriggerService$SoundTriggerServiceStub_3

public void stopRecognition() {
    SoundTriggerService var4 = this.this$0;
    SoundTriggerLogger var20 = SoundTriggerService.access$200();{SoundTriggerLogger var20 = SoundTriggerService.access$200();};
    SoundTriggerService var32 = this.this$0;
    boolean var34 = SoundTriggerService.access$100(var32);{boolean var34 = SoundTriggerService.access$100(var32);};
    SoundTriggerService var36 = this.this$0;
    SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);{SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);};
    UUID var40 = getUuid();
    int var42 = var38.stopGenericRecognition(var40,param3);
    Object var4 = this.mLock;
    Context var5 = this.mContext;
    HashMap var11 = this.mModelDataMap;
    Object var13 = var11.get(param2);
    SoundTriggerHelper$ModelData var14 = (SoundTriggerHelper$ModelData) var13;
    boolean var16 = var14.isGenericModel();
    int var18 = stopRecognition(var14,param3);
    Object var4 = this.mLock;
    SoundTrigger$ModuleProperties var7 = this.mModuleProperties;
    SoundTriggerModule var8 = this.mModule;
    IRecognitionStatusCallback var10 = getCallback();
    boolean var12 = isRequested();
    boolean var14 = isModelStarted();
    IBinder var19 = var10.asBinder();
    IBinder var21 = asBinder();
    setRequested(0);
    boolean var24 = isRecognitionAllowed();
    int var26 = updateRecognitionLocked(param2,var24,0);
    boolean var6 = isRequested();
    boolean var11 = isModelStarted();
    int var13 = stopRecognitionLocked(param2,param4);
    int var13<PATH_SEP>SoundTriggerService var4 = this.this$0;
    SoundTriggerLogger var20 = SoundTriggerService.access$200();{SoundTriggerLogger var20 = SoundTriggerService.access$200();};
    SoundTriggerService var32 = this.this$0;
    boolean var34 = SoundTriggerService.access$100(var32);{boolean var34 = SoundTriggerService.access$100(var32);};
    SoundTriggerService var36 = this.this$0;
    SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);{SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);};
    UUID var40 = getUuid();
    int var42 = var38.stopGenericRecognition(var40,param3);
    Object var4 = this.mLock;
    Context var5 = this.mContext;
    HashMap var11 = this.mModelDataMap;
    Object var13 = var11.get(param2);
    SoundTriggerHelper$ModelData var14 = (SoundTriggerHelper$ModelData) var13;
    boolean var16 = var14.isGenericModel();
    int var18 = stopRecognition(var14,param3);
    Object var4 = this.mLock;
    SoundTrigger$ModuleProperties var7 = this.mModuleProperties;
    SoundTriggerModule var8 = this.mModule;
    IRecognitionStatusCallback var10 = getCallback();
    boolean var12 = isRequested();
    boolean var14 = isModelStarted();
    IBinder var19 = var10.asBinder();
    IBinder var21 = asBinder();
    setRequested(0);
    boolean var24 = isRecognitionAllowed();
    int var26 = updateRecognitionLocked(param2,var24,0);
    setLoaded();<PATH_SEP>SoundTriggerService var4 = this.this$0;
    SoundTriggerLogger var20 = SoundTriggerService.access$200();{SoundTriggerLogger var20 = SoundTriggerService.access$200();};
    SoundTriggerService var32 = this.this$0;
    boolean var34 = SoundTriggerService.access$100(var32);{boolean var34 = SoundTriggerService.access$100(var32);};
    SoundTriggerService var36 = this.this$0;
    SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);{SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);};
    UUID var40 = getUuid();
    int var42 = var38.stopGenericRecognition(var40,param3);
    Object var4 = this.mLock;
    Context var5 = this.mContext;
    HashMap var11 = this.mModelDataMap;
    Object var13 = var11.get(param2);
    SoundTriggerHelper$ModelData var14 = (SoundTriggerHelper$ModelData) var13;
    boolean var16 = var14.isGenericModel();
    int var18 = stopRecognition(var14,param3);
    Object var4 = this.mLock;
    SoundTrigger$ModuleProperties var7 = this.mModuleProperties;
    SoundTriggerModule var8 = this.mModule;
    IRecognitionStatusCallback var10 = getCallback();
    boolean var12 = isRequested();
    boolean var14 = isModelStarted();
    IBinder var19 = var10.asBinder();
    IBinder var21 = asBinder();
    setRequested(0);
    boolean var24 = isRecognitionAllowed();
    boolean var2 = this.mRecognitionRequested;
    TelephonyManager var5 = this.mTelephonyManager;
    int var7 = var5.getCallState();
    this.mCallActive = var9;
    PowerManager var10 = this.mPowerManager;
    PowerSaveState var13 = var10.getPowerSaveState(8);
    boolean var14 = var13.batterySaverEnabled;
    this.mIsPowerSaveMode = var14;
    boolean var16 = this.mCallActive;
    boolean var17 = this.mServiceDisabled;
    boolean var18 = this.mIsPowerSaveMode;
    boolean var21<PATH_SEP>SoundTriggerService var4 = this.this$0;
    SoundTriggerLogger var20 = SoundTriggerService.access$200();{SoundTriggerLogger var20 = SoundTriggerService.access$200();};
    SoundTriggerService var32 = this.this$0;
    boolean var34 = SoundTriggerService.access$100(var32);{boolean var34 = SoundTriggerService.access$100(var32);};
    SoundTriggerService var36 = this.this$0;
    SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);{SoundTriggerHelper var38 = SoundTriggerService.access$300(var36);};
    UUID var40 = getUuid();
    int var42 = var38.stopGenericRecognition(var40,param3);
    Object var4 = this.mLock;
    Context var5 = this.mContext;
    HashMap var11 = this.mModelDataMap;
    Object var13 = var11.get(param2);
    SoundTriggerHelper$ModelData var14 = (SoundTriggerHelper$ModelData) var13;
    boolean var16 = var14.isGenericModel();
    int var18 = stopRecognition(var14,param3);
    Object var4 = this.mLock;
    SoundTrigger$ModuleProperties var7 = this.mModuleProperties;
    SoundTriggerModule var8 = this.mModule;
    IRecognitionStatusCallback var10 = getCallback();
    boolean var12 = isRequested();
    boolean var14 = isModelStarted();
    IBinder var19 = var10.asBinder();
    IBinder var21 = asBinder();
    setRequested(0);
    boolean var24 = isRecognitionAllowed();
    int var26 = updateRecognitionLocked(param2,var24,0);
    int var26;
}