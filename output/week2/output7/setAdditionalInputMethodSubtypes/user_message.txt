// API: setAdditionalInputMethodSubtypes
// Service: InputMethodManagerService_3

public void setAdditionalInputMethodSubtypes() {
    boolean var5 = TextUtils.isEmpty(param2);
    ArrayList var7 = new ArrayList();
    9 = arraylength 3;
    ArrayMap var44 = this.mMethodMap;
    boolean var47 = this.mSystemReady;
    ArrayMap var48 = this.mMethodMap;
    Object var50 = var48.get(param2);
    InputMethodInfo var51 = (InputMethodInfo) var50;
    IPackageManager var52 = this.mIPackageManager;
    int var54 = Binder.getCallingUid();
    String var56 = var52.getPackagesForUid(var54);
    61 = arraylength 56;
    62 = arrayload 56[68];
    String var64 = var51.getPackageName();
    75 = arraylength 3;
    ArrayMap var81 = this.mAdditionalSubtypeMap;
    String var83 = var51.getId();
    Object var85 = var81.put(var83,var7);
    ArrayMap var90 = this.mAdditionalSubtypeMap;
    ArrayMap var91 = this.mMethodMap;
    InputMethodUtils$InputMethodSettings var92 = this.mSettings;
    int var94 = var92.getCurrentUserId();
    AdditionalSubtypeUtils.save(var90,var91,var94);
    File var8 = AdditionalSubtypeUtils.getInputMethodDir(param3);
    boolean var10 = isEmpty();
    boolean var14 = var8.exists();
    boolean var16 = var8.mkdirs();
    int var22 = size();
    AtomicFile var29 = AdditionalSubtypeUtils.getAdditionalSubtypeFile(var8);
    FileOutputStream var31 = var29.startWrite();
    FastXmlSerializer var32 = new FastXmlSerializer();
    Charset var34 = UTF_8;
    String var36 = var34.name();
    var32.setOutput(var31,var36);
    Boolean var39 = Boolean.valueOf(1);
    var32.startDocument(0,var39);
    var32.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var44 = var32.startTag(0,subtypes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>boolean var5 = TextUtils.isEmpty(param2);
    ArrayList var7 = new ArrayList();
    9 = arraylength 3;
    ArrayMap var44 = this.mMethodMap;
    boolean var47 = this.mSystemReady;
    ArrayMap var48 = this.mMethodMap;
    Object var50 = var48.get(param2);
    InputMethodInfo var51 = (InputMethodInfo) var50;
    IPackageManager var52 = this.mIPackageManager;
    int var54 = Binder.getCallingUid();
    String var56 = var52.getPackagesForUid(var54);
    61 = arraylength 56;
    62 = arrayload 56[68];
    String var64 = var51.getPackageName();
    75 = arraylength 3;
    ArrayMap var81 = this.mAdditionalSubtypeMap;
    String var83 = var51.getId();
    Object var85 = var81.put(var83,var7);
    ArrayMap var90 = this.mAdditionalSubtypeMap;
    ArrayMap var91 = this.mMethodMap;
    InputMethodUtils$InputMethodSettings var92 = this.mSettings;
    int var94 = var92.getCurrentUserId();
    AdditionalSubtypeUtils.save(var90,var91,var94);
    File var8 = AdditionalSubtypeUtils.getInputMethodDir(param3);
    boolean var10 = isEmpty();
    boolean var14 = var8.exists();
    boolean var16 = var8.mkdirs();
    int var22 = size();
    AtomicFile var29 = AdditionalSubtypeUtils.getAdditionalSubtypeFile(var8);
    FileOutputStream var31 = var29.startWrite();
    FastXmlSerializer var32 = new FastXmlSerializer();
    Charset var34 = UTF_8;
    String var36 = var34.name();
    var32.setOutput(var31,var36);
    Boolean var39 = Boolean.valueOf(1);
    var32.startDocument(0,var39);
    var32.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var44 = var32.startTag(0,subtypes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>boolean var5 = TextUtils.isEmpty(param2);
    ArrayList var7 = new ArrayList();
    9 = arraylength 3;
    ArrayMap var44 = this.mMethodMap;
    boolean var47 = this.mSystemReady;
    ArrayMap var48 = this.mMethodMap;
    Object var50 = var48.get(param2);
    InputMethodInfo var51 = (InputMethodInfo) var50;
    IPackageManager var52 = this.mIPackageManager;
    int var54 = Binder.getCallingUid();
    String var56 = var52.getPackagesForUid(var54);
    61 = arraylength 56;
    62 = arrayload 56[68];
    String var64 = var51.getPackageName();
    75 = arraylength 3;
    ArrayMap var81 = this.mAdditionalSubtypeMap;
    String var83 = var51.getId();
    Object var85 = var81.put(var83,var7);
    ArrayMap var90 = this.mAdditionalSubtypeMap;
    ArrayMap var91 = this.mMethodMap;
    InputMethodUtils$InputMethodSettings var92 = this.mSettings;
    int var94 = var92.getCurrentUserId();
    AdditionalSubtypeUtils.save(var90,var91,var94);
    File var8 = AdditionalSubtypeUtils.getInputMethodDir(param3);
    boolean var10 = isEmpty();
    boolean var14 = var8.exists();
    boolean var16 = var8.mkdirs();
    int var22 = size();
    AtomicFile var29 = AdditionalSubtypeUtils.getAdditionalSubtypeFile(var8);
    FileOutputStream var31 = var29.startWrite();
    FastXmlSerializer var32 = new FastXmlSerializer();
    Charset var34 = UTF_8;
    String var36 = var34.name();
    var32.setOutput(var31,var36);
    Boolean var39 = Boolean.valueOf(1);
    var32.startDocument(0,var39);
    var32.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var44 = var32.startTag(0,subtypes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>boolean var5 = TextUtils.isEmpty(param2);
    ArrayList var7 = new ArrayList();
    9 = arraylength 3;
    ArrayMap var44 = this.mMethodMap;
    boolean var47 = this.mSystemReady;
    ArrayMap var48 = this.mMethodMap;
    Object var50 = var48.get(param2);
    InputMethodInfo var51 = (InputMethodInfo) var50;
    IPackageManager var52 = this.mIPackageManager;
    int var54 = Binder.getCallingUid();
    String var56 = var52.getPackagesForUid(var54);
    61 = arraylength 56;
    62 = arrayload 56[68];
    String var64 = var51.getPackageName();
    75 = arraylength 3;
    ArrayMap var81 = this.mAdditionalSubtypeMap;
    String var83 = var51.getId();
    Object var85 = var81.put(var83,var7);
    ArrayMap var90 = this.mAdditionalSubtypeMap;
    ArrayMap var91 = this.mMethodMap;
    InputMethodUtils$InputMethodSettings var92 = this.mSettings;
    int var94 = var92.getCurrentUserId();
    AdditionalSubtypeUtils.save(var90,var91,var94);
    File var8 = AdditionalSubtypeUtils.getInputMethodDir(param3);
    boolean var10 = isEmpty();
    boolean var14 = var8.exists();
    boolean var16 = var8.mkdirs();
    int var22 = size();
    AtomicFile var29 = AdditionalSubtypeUtils.getAdditionalSubtypeFile(var8);
    FileOutputStream var31 = var29.startWrite();
    FastXmlSerializer var32 = new FastXmlSerializer();
    Charset var34 = UTF_8;
    String var36 = var34.name();
    var32.setOutput(var31,var36);
    Boolean var39 = Boolean.valueOf(1);
    var32.startDocument(0,var39);
    var32.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var44 = var32.startTag(0,subtypes);
    boolean var4 = this.mInTag;
    append(;
}