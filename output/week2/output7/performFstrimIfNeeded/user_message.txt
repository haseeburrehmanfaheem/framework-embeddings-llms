// API: performFstrimIfNeeded
// Service: PackageManagerService_1

public void performFstrimIfNeeded() {
    IStorageManager var5 = PackageHelper.getStorageManager();
    Context var11 = this.mContext;
    ContentResolver var13 = var11.getContentResolver();
    long var17 = Settings$Global.getLong(var13,fstrim_mandatory_interval,259200000);
    var19 = var17 lt 0;
    long var21 = System.currentTimeMillis();
    long var23 = var5.lastMaintenance();
    var24 = var21 sub var23;
    var25 = var24 lt var17;
    ArrayMap var47 = this.mPackages;
    boolean var48 = this.mDexOptDialogShown;
    boolean var52 = isFirstBoot();
    IActivityManager var54 = ActivityManager.getService();
    Context var55 = this.mContext;
    Resources var57 = var55.getResources();
    String var60 = var57.getString(17039493);
    var54.showBootMessage(var60,1);
    int var5 = Binder.getCallingUid();
    int var7 = Process.myUid();
    WindowManagerService var10 = this.mWindowManager;
    var10.showBootMessage(param2,param3);
    WindowManagerGlobalLock var5 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var7 = this.mAllowBootMessages;
    boolean var8 = this.mShowingBootMessages;
    boolean var11 = this.mSystemBooted;
    this.mShowingBootMessages = 1;
    WindowManagerPolicy var12 = this.mPolicy;
    var12.showBootMessage(param2,param3);
    WindowManagerService.resetPriorityAfterLockedSection();
    performEnableScreen();
    WindowManagerGlobalLock var2 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var4 = this.mDisplayEnabled;
    boolean var6 = this.mSystemBooted;
    boolean var7 = this.mShowingBootMessages;
    boolean var9 = this.mShowingBootMessages;
    WindowManagerPolicy var10 = this.mPolicy;
    boolean var12 = var10.canDismissBootAnimation();
    boolean var15 = this.mForceDisplayEnabled;
    DisplayContent var17 = getDefaultDisplayContentLocked();
    boolean var19 = var17.checkWaitingForWindows();{boolean var19 = var17.checkWaitingForWindows();};
    boolean var23 = this.mBootAnimationStopped;
    Trace.asyncTraceBegin(32,Stop bootanim,0);
    SystemProperties.set(service.bootanim.exit,1);
    this.mBootAnimationStopped = 1;
    boolean var33 = this.mForceDisplayEnabled;
    IBinder var41 = ServiceManager.getService(SurfaceFlinger);
    Parcel var47 = Parcel.obtain();
    var47.writeInterfaceToken(android.ui.ISurfaceComposer);
    boolean var51 = var41.transact(1,var47,0,0);<PATH_SEP>IStorageManager var5 = PackageHelper.getStorageManager();
    Context var11 = this.mContext;
    ContentResolver var13 = var11.getContentResolver();
    long var17 = Settings$Global.getLong(var13,fstrim_mandatory_interval,259200000);
    var19 = var17 lt 0;
    long var21 = System.currentTimeMillis();
    long var23 = var5.lastMaintenance();
    var24 = var21 sub var23;
    var25 = var24 lt var17;
    ArrayMap var47 = this.mPackages;
    boolean var48 = this.mDexOptDialogShown;
    boolean var52 = isFirstBoot();
    IActivityManager var54 = ActivityManager.getService();
    Context var55 = this.mContext;
    Resources var57 = var55.getResources();
    String var60 = var57.getString(17039493);
    var54.showBootMessage(var60,1);
    int var5 = Binder.getCallingUid();
    int var7 = Process.myUid();
    WindowManagerService var10 = this.mWindowManager;
    var10.showBootMessage(param2,param3);
    WindowManagerGlobalLock var5 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var7 = this.mAllowBootMessages;
    boolean var8 = this.mShowingBootMessages;
    boolean var11 = this.mSystemBooted;
    this.mShowingBootMessages = 1;
    WindowManagerPolicy var12 = this.mPolicy;
    var12.showBootMessage(param2,param3);
    WindowManagerService.resetPriorityAfterLockedSection();
    performEnableScreen();
    WindowManagerGlobalLock var2 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var4 = this.mDisplayEnabled;
    boolean var6 = this.mSystemBooted;
    boolean var7 = this.mShowingBootMessages;
    boolean var9 = this.mShowingBootMessages;
    WindowManagerPolicy var10 = this.mPolicy;
    boolean var12 = var10.canDismissBootAnimation();
    boolean var15 = this.mForceDisplayEnabled;
    DisplayContent var17 = getDefaultDisplayContentLocked();
    boolean var19 = var17.checkWaitingForWindows();{boolean var19 = var17.checkWaitingForWindows();};
    boolean var23 = this.mBootAnimationStopped;
    Trace.asyncTraceBegin(32,Stop bootanim,0);
    SystemProperties.set(service.bootanim.exit,1);
    this.mBootAnimationStopped = 1;
    boolean var33 = this.mForceDisplayEnabled;
    IBinder var41 = ServiceManager.getService(SurfaceFlinger);
    Parcel var47 = Parcel.obtain();
    var47.writeInterfaceToken(android.ui.ISurfaceComposer);
    boolean var51 = var41.transact(1,var47,0,0);
    var47.recycle();
    long var67 = SystemClock.uptimeMillis();
    Trace.asyncTraceEnd(32,Stop bootanim,0);
    this.mDisplayEnabled = 1;
    InputManagerCallback var71 = this.mInputManagerCallback;
    boolean var72 = this.mEventDispatchingEnabled;
    var71.setEventDispatchingLw(var72);
    WindowManagerService.resetPriorityAfterLockedSection();<PATH_SEP>IStorageManager var5 = PackageHelper.getStorageManager();
    Context var11 = this.mContext;
    ContentResolver var13 = var11.getContentResolver();
    long var17 = Settings$Global.getLong(var13,fstrim_mandatory_interval,259200000);
    var19 = var17 lt 0;
    long var21 = System.currentTimeMillis();
    long var23 = var5.lastMaintenance();
    var24 = var21 sub var23;
    var25 = var24 lt var17;
    ArrayMap var47 = this.mPackages;
    boolean var48 = this.mDexOptDialogShown;
    boolean var52 = isFirstBoot();
    IActivityManager var54 = ActivityManager.getService();
    Context var55 = this.mContext;
    Resources var57 = var55.getResources();
    String var60 = var57.getString(17039493);
    var54.showBootMessage(var60,1);
    int var5 = Binder.getCallingUid();
    int var7 = Process.myUid();
    WindowManagerService var10 = this.mWindowManager;
    var10.showBootMessage(param2,param3);
    WindowManagerGlobalLock var5 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var7 = this.mAllowBootMessages;
    boolean var8 = this.mShowingBootMessages;
    boolean var11 = this.mSystemBooted;
    this.mShowingBootMessages = 1;
    WindowManagerPolicy var12 = this.mPolicy;
    var12.showBootMessage(param2,param3);
    WindowManagerService.resetPriorityAfterLockedSection();
    performEnableScreen();
    WindowManagerGlobalLock var2 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var4 = this.mDisplayEnabled;
    boolean var6 = this.mSystemBooted;
    boolean var7 = this.mShowingBootMessages;
    boolean var9 = this.mShowingBootMessages;
    WindowManagerPolicy var10 = this.mPolicy;
    boolean var12 = var10.canDismissBootAnimation();
    boolean var15 = this.mForceDisplayEnabled;
    DisplayContent var17 = getDefaultDisplayContentLocked();
    boolean var19 = var17.checkWaitingForWindows();{boolean var19 = var17.checkWaitingForWindows();};
    boolean var23 = this.mBootAnimationStopped;
    boolean var33 = this.mForceDisplayEnabled;
    boolean var35 = checkBootAnimationCompleteLocked();{boolean var35 = checkBootAnimationCompleteLocked();};
    IBinder var41 = ServiceManager.getService(SurfaceFlinger);
    Parcel var47 = Parcel.obtain();
    var47.writeInterfaceToken(android.ui.ISurfaceComposer);<PATH_SEP>IStorageManager var5 = PackageHelper.getStorageManager();
    Context var11 = this.mContext;
    ContentResolver var13 = var11.getContentResolver();
    long var17 = Settings$Global.getLong(var13,fstrim_mandatory_interval,259200000);
    var19 = var17 lt 0;
    long var21 = System.currentTimeMillis();
    long var23 = var5.lastMaintenance();
    var24 = var21 sub var23;
    var25 = var24 lt var17;
    ArrayMap var47 = this.mPackages;
    boolean var48 = this.mDexOptDialogShown;
    boolean var52 = isFirstBoot();
    IActivityManager var54 = ActivityManager.getService();
    Context var55 = this.mContext;
    Resources var57 = var55.getResources();
    String var60 = var57.getString(17039493);
    var54.showBootMessage(var60,1);
    int var5 = Binder.getCallingUid();
    int var7 = Process.myUid();
    WindowManagerService var10 = this.mWindowManager;
    var10.showBootMessage(param2,param3);
    WindowManagerGlobalLock var5 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var7 = this.mAllowBootMessages;
    boolean var8 = this.mShowingBootMessages;
    boolean var11 = this.mSystemBooted;
    this.mShowingBootMessages = 1;
    WindowManagerPolicy var12 = this.mPolicy;
    var12.showBootMessage(param2,param3);
    WindowManagerService.resetPriorityAfterLockedSection();
    performEnableScreen();
    WindowManagerGlobalLock var2 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var4 = this.mDisplayEnabled;
    boolean var6 = this.mSystemBooted;
    boolean var7 = this.mShowingBootMessages;
    boolean var9 = this.mShowingBootMessages;
    WindowManagerPolicy var10 = this.mPolicy;
    boolean var12 = var10.canDismissBootAnimation();
    boolean var15 = this.mForceDisplayEnabled;
    DisplayContent var17 = getDefaultDisplayContentLocked();
    boolean var19 = var17.checkWaitingForWindows();{boolean var19 = var17.checkWaitingForWindows();};
    boolean var23 = this.mBootAnimationStopped;
    Trace.asyncTraceBegin(32,Stop bootanim,0);
    SystemProperties.set(service.bootanim.exit,1);
    this.mBootAnimationStopped = 1;
    boolean var33 = this.mForceDisplayEnabled;
    IBinder var41 = ServiceManager.getService(SurfaceFlinger);
    Parcel var47 = Parcel.obtain();
    var47.writeInterfaceToken(android.ui.ISurfaceComposer);
}