// API: addPersistentPreferredActivity
// Service: PackageManagerService_4

public void addPersistentPreferredActivity() {
    int var6 = Binder.getCallingUid();
    int var12 = countActions();
    ArrayMap var14 = this.mPackages;
    Settings var15 = this.mSettings;
    PersistentPreferredIntentResolver var17 = var15.editPersistentPreferredActivitiesLPw(param4);
    PersistentPreferredActivity var18 = new PersistentPreferredActivity();
    var17.addFilter(var18);
    scheduleWritePackageRestrictionsLocked(param4);
    boolean var27 = updateDefaultHomeNotLocked(param4);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayList var297 = new ArrayList();
    ActivityInfo var300 = getActivityInfo(var35,var42,param6);
    var302 = 8388608 and var42;
    var305 = 16777216 and var42;
    var308 = 33554432 and var42;
    String var312 = var35.getPackageName();
    ApplicationInfo var315 = var300.applicationInfo;
    int var316 = var315.privateFlags;
    var318 = var316 and 128;
    int var320 = var300.flags;
    var322 = var320 and 1048576;
    int var324 = var300.flags;
    var326 = var324 and 2097152;
    ResolveInfo var333 = new ResolveInfo();
    var333.activityInfo = var300;
    boolean var336 = var297.add(var333);
    List var350 = applyPostResolutionFilter(var297,var14,param8,param5,param7,param6,var36);<PATH_SEP>int var6 = Binder.getCallingUid();
    int var12 = countActions();
    ArrayMap var14 = this.mPackages;
    Settings var15 = this.mSettings;
    PersistentPreferredIntentResolver var17 = var15.editPersistentPreferredActivitiesLPw(param4);
    PersistentPreferredActivity var18 = new PersistentPreferredActivity();
    var17.addFilter(var18);
    scheduleWritePackageRestrictionsLocked(param4);
    boolean var27 = updateDefaultHomeNotLocked(param4);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayMap var43 = this.mPackages;
    List var80 = getMatchingCrossProfileIntentFilters(var36,param3,param6);
    ResolveInfo var82 = querySkipCurrentProfileIntents(var80,var36,param3,var42,param6);
    ArrayList var246 = new ArrayList();
    boolean var249 = var246.add(var82);
    List var251 = filterIfNotSystemUser(var246,param6);
    List var257 = applyPostResolutionFilter(var251,var14,param8,param5,param7,param6,var36);
    Ljava/util/List var257<PATH_SEP>int var6 = Binder.getCallingUid();
    int var12 = countActions();
    ArrayMap var14 = this.mPackages;
    Settings var15 = this.mSettings;
    PersistentPreferredIntentResolver var17 = var15.editPersistentPreferredActivitiesLPw(param4);
    PersistentPreferredActivity var18 = new PersistentPreferredActivity();
    var17.addFilter(var18);
    scheduleWritePackageRestrictionsLocked(param4);
    boolean var27 = updateDefaultHomeNotLocked(param4);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayList var297 = new ArrayList();
    ActivityInfo var300 = getActivityInfo(var35,var42,param6);
    var302 = 8388608 and var42;
    var305 = 16777216 and var42;
    var308 = 33554432 and var42;
    String var312 = var35.getPackageName();
    ApplicationInfo var315 = var300.applicationInfo;
    int var316 = var315.privateFlags;
    var318 = var316 and 128;
    int var320 = var300.flags;
    var322 = var320 and 1048576;
    int var324 = var300.flags;
    var326 = var324 and 2097152;
    ResolveInfo var333 = new ResolveInfo();
    var333.activityInfo = var300;
    boolean var336 = var297.add(var333);<PATH_SEP>int var6 = Binder.getCallingUid();
    int var12 = countActions();
    ArrayMap var14 = this.mPackages;
    Settings var15 = this.mSettings;
    PersistentPreferredIntentResolver var17 = var15.editPersistentPreferredActivitiesLPw(param4);
    PersistentPreferredActivity var18 = new PersistentPreferredActivity();
    var17.addFilter(var18);
    scheduleWritePackageRestrictionsLocked(param4);
    boolean var27 = updateDefaultHomeNotLocked(param4);
    ArrayMap var3 = this.mPackages;
    boolean var5 = Thread.holdsLock(var3);
    Thread var13 = Thread.currentThread();
    String var15 = var13.getName();
    Throwable var23 = new Throwable();
    boolean var31 = this.mSystemReady;
    Intent var33 = getHomeIntent();
    List var36 = queryIntentActivitiesInternal(var33,0,128,param2);
    int var7 = Binder.getCallingUid();
    List var11 = queryIntentActivitiesInternal(param2,param3,param4,var7,param5,0,1);
    UserManagerService var9 = sUserManager;
    boolean var11 = var9.exists(param6);
    String var14 = getInstantAppPackageName(param5);
    PermissionManagerServiceInternal var15 = this.mPermissionManager;
    int var17 = Binder.getCallingUid();
    String var21 = getPackage();
    ComponentName var23 = getComponent();
    Intent var25 = getSelector();
    Intent var30 = getSelector();
    ComponentName var32 = var30.getComponent();
    int var42 = updateFlagsForResolve(param4,param6,var36,param5,param7,var40);
    ArrayList var297 = new ArrayList();
    ActivityInfo var300 = getActivityInfo(var35,var42,param6);
    var302 = 8388608 and var42;
    var305 = 16777216 and var42;
    var308 = 33554432 and var42;
    String var312 = var35.getPackageName();
    ApplicationInfo var315 = var300.applicationInfo;
    int var316 = var315.privateFlags;
    var318 = var316 and 128;
    int var320 = var300.flags;
    var322 = var320 and 1048576;
    int var324 = var300.flags;
    var326 = var324 and 2097152;
    List var350 = applyPostResolutionFilter(var297,var14,param8,param5,param7,param6,var36);
}