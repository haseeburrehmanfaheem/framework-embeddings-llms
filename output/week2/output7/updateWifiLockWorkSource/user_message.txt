// API: updateWifiLockWorkSource
// Service: WifiServiceImpl_3

public void updateWifiLockWorkSource() {
    int var9 = Binder.getCallingUid();
    10 = conversion(J) 9;
    Context var14 = this.mContext;
    boolean var19 = isEmpty();
    WorkSource var23 = new WorkSource();
    int var25 = Binder.getCallingUid();
    WifiInjector var31 = this.mWifiInjector;
    Handler var33 = var31.getClientModeImplHandler();
    ClientModeImpl var2 = this.mClientModeImpl;
    Handler var4 = var2.getHandler();
    Landroid/os/Handler var4<PATH_SEP>int var9 = Binder.getCallingUid();
    10 = conversion(J) 9;
    Context var14 = this.mContext;
    boolean var19 = isEmpty();
    WorkSource var23 = new WorkSource();
    int var25 = Binder.getCallingUid();
    WifiInjector var31 = this.mWifiInjector;
    Handler var33 = var31.getClientModeImplHandler();
    ClientModeImpl var2 = this.mClientModeImpl;
    Handler var4 = var2.getHandler();
    StateMachine$SmHandler var2 = this.mSmHandler;
    Landroid/os/Handler var2<PATH_SEP>int var9 = Binder.getCallingUid();
    10 = conversion(J) 9;
    Context var14 = this.mContext;
    boolean var19 = isEmpty();
    WorkSource var23 = new WorkSource();
    int var25 = Binder.getCallingUid();
    WifiInjector var31 = this.mWifiInjector;
    Handler var33 = var31.getClientModeImplHandler();
    -$$Lambda$WifiServiceImpl$dSBCyEfgSgPcVuPt-wH4UCtTcks var34 = new -$$Lambda$WifiServiceImpl$dSBCyEfgSgPcVuPt-wH4UCtTcks();
    boolean var38 = var33.runWithScissors(var34,4000);
}