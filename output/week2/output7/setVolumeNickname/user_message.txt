// API: setVolumeNickname
// Service: StorageManagerService_3

public void setVolumeNickname() {
    Object var7 = Preconditions.checkNotNull(param2);{Object var7 = Preconditions.checkNotNull(param2);};
    Object var8 = this.mLock;
    ArrayMap var9 = this.mRecords;
    Object var11 = var9.get(param2);
    VolumeRecord var12 = (VolumeRecord) var11;
    var12.nickname = param3;
    StorageManagerService$Callbacks var13 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var13,var12);{StorageManagerService$Callbacks.access$4300(var13,var12);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Object var7 = Preconditions.checkNotNull(param2);{Object var7 = Preconditions.checkNotNull(param2);};
    Object var8 = this.mLock;
    ArrayMap var9 = this.mRecords;
    Object var11 = var9.get(param2);
    VolumeRecord var12 = (VolumeRecord) var11;
    var12.nickname = param3;
    StorageManagerService$Callbacks var13 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var13,var12);{StorageManagerService$Callbacks.access$4300(var13,var12);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
    append(58);
    append(param3);<PATH_SEP>Object var7 = Preconditions.checkNotNull(param2);{Object var7 = Preconditions.checkNotNull(param2);};
    Object var8 = this.mLock;
    ArrayMap var9 = this.mRecords;
    Object var11 = var9.get(param2);
    VolumeRecord var12 = (VolumeRecord) var11;
    var12.nickname = param3;
    StorageManagerService$Callbacks var13 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var13,var12);{StorageManagerService$Callbacks.access$4300(var13,var12);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Object var7 = Preconditions.checkNotNull(param2);{Object var7 = Preconditions.checkNotNull(param2);};
    Object var8 = this.mLock;
    ArrayMap var9 = this.mRecords;
    Object var11 = var9.get(param2);
    VolumeRecord var12 = (VolumeRecord) var11;
    var12.nickname = param3;
    StorageManagerService$Callbacks var13 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var13,var12);{StorageManagerService$Callbacks.access$4300(var13,var12);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Charset var8 = Charset.forName(param3);
    CharsetEncoder var10 = var8.newEncoder();
    CodingErrorAction var11 = REPLACE;
    CharsetEncoder var13 = var10.onMalformedInput(var11);
    CodingErrorAction var14 = REPLACE;
    CharsetEncoder var16 = var13.onUnmappableCharacter(var14);
    this.mCharset = var16;
    this.mOutputStream = param2;
}