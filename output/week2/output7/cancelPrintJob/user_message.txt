// API: cancelPrintJob
// Service: PrintManagerService$PrintManagerImpl_4

public void cancelPrintJob() {
    int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    long var18 = Binder.clearCallingIdentity();
    var16.cancelPrintJob(param2,var14);
    RemotePrintSpooler var4 = this.mSpooler;
    PrintJobInfo var6 = var4.getPrintJobInfo(param2,param3);
    throwIfCalledOnMainThread();
    Object var5 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetPrintJobInfoCaller var11 = this.mGetPrintJobInfoCaller;
    IPrintSpooler var13 = getRemoteInstanceLazy();
    PrintJobInfo var15 = var11.getPrintJobInfo(var13,param2,param3);
    Object var40 = this.mLock;
    this.mCanUnbind = 1;
    Object var41 = this.mLock;
    var41.notifyAll();
    Landroid/print/PrintJobInfo var15<PATH_SEP>int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    long var18 = Binder.clearCallingIdentity();
    var16.cancelPrintJob(param2,var14);
    RemotePrintSpooler var4 = this.mSpooler;
    PrintJobInfo var6 = var4.getPrintJobInfo(param2,param3);
    RemotePrintSpooler var8 = this.mSpooler;
    var8.setPrintJobCancelling(param2,1);
    int var12 = var6.getState();
    PrinterId var19 = var6.getPrinterId();
    ComponentName var21 = var19.getServiceName();
    Object var22 = this.mLock;
    ArrayMap var23 = this.mActiveServices;
    Object var25 = var23.get(var21);
    RemotePrintService var26 = (RemotePrintService) var25;
    var26.onRequestCancelPrintJob(var6);
    Handler var4 = Handler.getMain();
    -$$Lambda$RemotePrintService$tL9wtChZzY3dei-ul1VudkrPO20 var5 = INSTANCE;
    Message var7 = PooledLambda.obtainMessage(var5,this,param2);
    boolean var9 = var4.sendMessage(var7);<PATH_SEP>int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    long var18 = Binder.clearCallingIdentity();
    var16.cancelPrintJob(param2,var14);
    RemotePrintSpooler var4 = this.mSpooler;
    PrintJobInfo var6 = var4.getPrintJobInfo(param2,param3);
    RemotePrintSpooler var8 = this.mSpooler;
    var8.setPrintJobCancelling(param2,1);
    int var12 = var6.getState();
    RemotePrintSpooler var14 = this.mSpooler;
    boolean var17 = var14.setPrintJobState(param2,7,0);
    throwIfCalledOnMainThread();
    Object var6 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$SetPrintJobStateCaller var12 = this.mSetPrintJobStatusCaller;
    IPrintSpooler var14 = getRemoteInstanceLazy();
    boolean var16 = var12.setPrintJobState(var14,param2,param3,param4);
    Object var41 = this.mLock;
    this.mCanUnbind = 1;
    Object var42 = this.mLock;
    var42.notifyAll();
    boolean var16<PATH_SEP>int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    UserState var27 = new UserState();
    Context var28 = this.mContext;
    Object var29 = this.mLock;
    SparseArray var31 = this.mUserStates;
    var31.put(param2,var27);
}