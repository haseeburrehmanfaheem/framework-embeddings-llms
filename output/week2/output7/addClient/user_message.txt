// API: addClient
// Service: MultiClientInputMethodManagerService$ApiCallbacks_4

public void addClient() {
    int var6 = Binder.getCallingUid();
    int var8 = Binder.getCallingPid();
    int var10 = UserHandle.getUserId(var6);
    MultiClientInputMethodManagerService$UserDataMap var11 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var13 = var11.get(var10);
    Object var15 = var13.mLock;
    var13.addClientLocked(var6,var8,param2,param4);
    MultiClientInputMethodManagerService$InputMethodClientInfo var7 = getClientLocked(param4);
    MultiClientInputMethodManagerService$PerUserData$ClientDeathRecipient var9 = new MultiClientInputMethodManagerService$PerUserData$ClientDeathRecipient();
    IBinder var12 = asBinder();
    var12.linkToDeath(var9,0);
    MultiClientInputMethodManagerService$InputMethodClientInfo var18 = new MultiClientInputMethodManagerService$InputMethodClientInfo();
    var18.mState = 1;
    ArrayMap var21 = this.mClientMap;
    IBinder var23 = asBinder();
    Object var25 = var21.put(var23,var18);
    SparseArray var26 = this.mClientIdToClientMap;
    int var27 = var18.mClientId;
    var26.put(var27,var18);
    int var29 = this.mState;
    IMultiClientInputMethod var31 = this.mCurrentInputMethod;
    int var32 = var18.mClientId;
    int var33 = var18.mPid;
    int var34 = var18.mUid;
    int var35 = var18.mSelfReportedDisplayId;
    var31.addClient(var32,var33,var34,var35);
    WeakReference var6 = this.mImpl;
    Object var8 = var6.get();
    MultiClientInputMethodServiceDelegateImpl var9 = (MultiClientInputMethodServiceDelegateImpl) var8;
    MultiClientInputMethodServiceDelegate$ServiceCallback var12 = MultiClientInputMethodServiceDelegateImpl.access$300(var9);{MultiClientInputMethodServiceDelegate$ServiceCallback var12 = MultiClientInputMethodServiceDelegateImpl.access$300(var9);};
    var12.addClient(param2,param3,param4,param5);
}