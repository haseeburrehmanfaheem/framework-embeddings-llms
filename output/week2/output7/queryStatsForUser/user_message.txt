// API: queryStatsForUser
// Service: StorageStatsService_4

public void queryStatsForUser() {
    int var6 = UserHandle.getCallingUserId();
    Context var8 = this.mContext;
    int var14 = Binder.getCallingUid();
    [I var17 = getAppIds(param3);
    PackageStats var18 = new PackageStats();
    Installer var20 = this.mInstaller;
    int var22 = StorageStatsService.getDefaultFlags();
    var20.getUserSize(param2,param3,var22,var17,var18);
    boolean var27 = SystemProperties.getBoolean(fw.verify_storage,0);
    PackageStats var28 = new PackageStats();
    Installer var30 = this.mInstaller;
    var30.getUserSize(param2,param3,0,var17,var28);
    StorageStatsService.checkEquals(var53,var28,var18);{StorageStatsService.checkEquals(var53,var28,var18);};
    StorageStats var63 = StorageStatsService.translate(var18);
    Landroid/app/usage/StorageStats var63<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    Context var8 = this.mContext;
    int var14 = Binder.getCallingUid();
    [I var17 = getAppIds(param3);
    PackageStats var18 = new PackageStats();
    Installer var20 = this.mInstaller;
    int var22 = StorageStatsService.getDefaultFlags();
    var20.getUserSize(param2,param3,var22,var17,var18);
    boolean var27 = SystemProperties.getBoolean(fw.verify_storage,0);
    StorageStats var63 = StorageStatsService.translate(var18);
    Landroid/app/usage/StorageStats var63<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    Context var8 = this.mContext;
    int var14 = Binder.getCallingUid();
    [I var17 = getAppIds(param3);
    PackageStats var18 = new PackageStats();
    Installer var20 = this.mInstaller;
    int var22 = StorageStatsService.getDefaultFlags();
    var20.getUserSize(param2,param3,var22,var17,var18);
    boolean var8 = checkBeforeRemote();{boolean var8 = checkBeforeRemote();};
    IInstalld var10 = this.mInstalld;
    [J var12 = var10.getUserSize(param2,param3,param4,param5);
    long var13 = param6.codeSize;
    14 = arrayload 12[9];
    var15 = var13 add var14;
    param6.codeSize = var15;
    long var16 = param6.dataSize;
    18 = arrayload 12[17];
    var19 = var16 add var18;
    param6.dataSize = var19;
    long var20 = param6.cacheSize;
    22 = arrayload 12[21];
    var23 = var20 add var22;
    param6.cacheSize = var23;
    long var24 = param6.externalCodeSize;
    26 = arrayload 12[25];
    var27 = var24 add var26;
    param6.externalCodeSize = var27;
    long var28 = param6.externalDataSize;
    30 = arrayload 12[29];
    var31 = var28 add var30;
    param6.externalDataSize = var31;
    long var32 = param6.externalCacheSize;
    34 = arrayload 12[33];
    var35 = var32 add var34;
    param6.externalCacheSize = var35;<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    Context var8 = this.mContext;
    int var14 = Binder.getCallingUid();
    [I var17 = getAppIds(param3);
    PackageStats var18 = new PackageStats();
    Installer var20 = this.mInstaller;
    int var22 = StorageStatsService.getDefaultFlags();
    var20.getUserSize(param2,param3,var22,var17,var18);
    boolean var27 = SystemProperties.getBoolean(fw.verify_storage,0);
    PackageStats var28 = new PackageStats();
    Installer var30 = this.mInstaller;
    var30.getUserSize(param2,param3,0,var17,var28);
    StorageStatsService.checkEquals(var53,var28,var18);{StorageStatsService.checkEquals(var53,var28,var18);};
    StorageStats var63 = StorageStatsService.translate(var18);
    StorageStats var2 = new StorageStats();
    long var4 = this.codeSize;
    long var5 = this.externalCodeSize;
    var6 = var4 add var5;
    var2.codeBytes = var6;
}