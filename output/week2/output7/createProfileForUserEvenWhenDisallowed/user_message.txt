// API: createProfileForUserEvenWhenDisallowed
// Service: UserManagerService_5

public void createProfileForUserEvenWhenDisallowed() {
    UserInfo var9 = createUserInternalUnchecked(param2,param3,param4,0,param5);
    UserInfo var22 = createUserInternalUncheckedNoTracing(param2,param3,param4,param5,param6,var7);
    boolean var10 = UserInfo.isManagedProfile(param3);
    Object var11 = this.mUsersLock;
    UserManagerService$UserData var13 = getPreCreatedUserLU(param3);
    UserInfo var433 = var13.info;
    boolean var435 = UserInfo.isGuest(param3);
    boolean var437 = areGuestUsersEphemeral();
    UserInfo var438 = var13.info;
    int var439 = var438.flags;
    var440 = var439 or 256;
    var438.flags = var440;
    int var449 = var433.id;
    String var456 = UserInfo.flagsToString(param3);
    UserInfo var462 = var13.info;
    int var463 = var462.flags;
    String var465 = UserInfo.flagsToString(var463);
    var433.name = param2;
    var433.preCreated = 0;
    long var473 = getCreationTime();
    var433.creationTime = var473;
    Object var474 = this.mPackagesLock;
    writeUserLP(var13);
    writeUserListLP();
    AtomicFile var3 = new AtomicFile();
    File var4 = this.mUserListFile;
    FileOutputStream var7 = var3.startWrite();
    BufferedOutputStream var8 = new BufferedOutputStream();
    FastXmlSerializer var10 = new FastXmlSerializer();
    Charset var12 = UTF_8;
    String var14 = var12.name();
    var10.setOutput(var8,var14);
    Boolean var18 = Boolean.valueOf(1);
    var10.startDocument(0,var18);
    var10.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var24 = var10.startTag(0,users);
    int var26 = this.mNextSerialNumber;
    String var28 = Integer.toString(var26);
    XmlSerializer var30 = var10.attribute(0,nextSerialNumber,var28);
    int var32 = this.mUserVersion;
    String var34 = Integer.toString(var32);
    XmlSerializer var36 = var10.attribute(0,version,var34);
    XmlSerializer var39 = var10.startTag(0,guestRestrictions);
    Bundle var40 = this.mGuestRestrictions;
    Bundle var41 = this.mGuestRestrictions;
    UserRestrictionsUtils.writeRestrictions(var10,var41,restrictions);
    XmlSerializer var48 = var10.endTag(0,guestRestrictions);
    XmlSerializer var51 = var10.startTag(0,deviceOwnerUserId);
    int var53 = this.mDeviceOwnerUserId;
    String var55 = Integer.toString(var53);<PATH_SEP>UserInfo var9 = createUserInternalUnchecked(param2,param3,param4,0,param5);
    UserInfo var22 = createUserInternalUncheckedNoTracing(param2,param3,param4,param5,param6,var7);
    boolean var10 = UserInfo.isManagedProfile(param3);
    Object var11 = this.mUsersLock;
    UserManagerService$UserData var13 = getPreCreatedUserLU(param3);
    UserInfo var433 = var13.info;
    boolean var435 = UserInfo.isGuest(param3);
    boolean var437 = areGuestUsersEphemeral();
    UserInfo var438 = var13.info;
    int var439 = var438.flags;
    var440 = var439 or 256;
    var438.flags = var440;
    int var449 = var433.id;
    String var456 = UserInfo.flagsToString(param3);
    UserInfo var462 = var13.info;
    int var463 = var462.flags;
    String var465 = UserInfo.flagsToString(var463);
    var433.name = param2;
    var433.preCreated = 0;
    long var473 = getCreationTime();
    long var3 = System.currentTimeMillis();
    var5 = var3 lt 946080000000;
    long var8<PATH_SEP>UserInfo var9 = createUserInternalUnchecked(param2,param3,param4,0,param5);
    UserInfo var22 = createUserInternalUncheckedNoTracing(param2,param3,param4,param5,param6,var7);
    boolean var10 = UserInfo.isManagedProfile(param3);
    Object var11 = this.mUsersLock;
    UserManagerService$UserData var13 = getPreCreatedUserLU(param3);
    UserInfo var433 = var13.info;
    boolean var435 = UserInfo.isGuest(param3);
    boolean var437 = areGuestUsersEphemeral();
    UserInfo var438 = var13.info;
    int var439 = var438.flags;
    var440 = var439 or 256;
    var438.flags = var440;
    int var449 = var433.id;
    String var456 = UserInfo.flagsToString(param3);
    UserInfo var462 = var13.info;
    int var463 = var462.flags;
    String var465 = UserInfo.flagsToString(var463);
    var433.name = param2;
    var433.preCreated = 0;
    long var473 = getCreationTime();
    var433.creationTime = var473;
    Object var474 = this.mPackagesLock;
    writeUserLP(var13);
    writeUserListLP();
    AtomicFile var3 = new AtomicFile();
    File var4 = this.mUserListFile;
    FileOutputStream var7 = var3.startWrite();
    BufferedOutputStream var8 = new BufferedOutputStream();
    FastXmlSerializer var10 = new FastXmlSerializer();
    Charset var12 = UTF_8;
    String var14 = var12.name();
    var10.setOutput(var8,var14);
    Boolean var18 = Boolean.valueOf(1);
    var10.startDocument(0,var18);
    var10.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var24 = var10.startTag(0,users);
    int var26 = this.mNextSerialNumber;
    String var28 = Integer.toString(var26);
    XmlSerializer var30 = var10.attribute(0,nextSerialNumber,var28);
    int var32 = this.mUserVersion;
    String var34 = Integer.toString(var32);
    XmlSerializer var36 = var10.attribute(0,version,var34);
    XmlSerializer var39 = var10.startTag(0,guestRestrictions);
    Bundle var40 = this.mGuestRestrictions;
    Bundle var41 = this.mGuestRestrictions;
    UserRestrictionsUtils.writeRestrictions(var10,var41,restrictions);
    XmlSerializer var48 = var10.endTag(0,guestRestrictions);
    XmlSerializer var51 = var10.startTag(0,deviceOwnerUserId);
    int var53 = this.mDeviceOwnerUserId;
    String var55 = Integer.toString(var53);
    XmlSerializer var57 = var10.attribute(0,id,var55);
    XmlSerializer var59 = var10.endTag(0,deviceOwnerUserId);
    Object var60 = this.mUsersLock;
    SparseArray var61 = this.mUsers;
    int var63 = var61.size();
    [I var64 = new [I(var63);
    65 = arraylength 64;
    77 = arraylength 64;
    XmlSerializer var96 = var10.endTag(0,users);
    var10.endDocument();
    var3.finishWrite(var7);<PATH_SEP>UserInfo var9 = createUserInternalUnchecked(param2,param3,param4,0,param5);
    UserInfo var22 = createUserInternalUncheckedNoTracing(param2,param3,param4,param5,param6,var7);
    boolean var10 = UserInfo.isManagedProfile(param3);
    Object var11 = this.mUsersLock;
    UserManagerService$UserData var13 = getPreCreatedUserLU(param3);
    UserInfo var433 = var13.info;
    boolean var435 = UserInfo.isGuest(param3);
    boolean var437 = areGuestUsersEphemeral();
    UserInfo var438 = var13.info;
    int var439 = var438.flags;
    var440 = var439 or 256;
    var438.flags = var440;
    int var449 = var433.id;
    String var456 = UserInfo.flagsToString(param3);
    UserInfo var462 = var13.info;
    int var463 = var462.flags;
    String var465 = UserInfo.flagsToString(var463);
    var433.name = param2;
    var433.preCreated = 0;
    long var473 = getCreationTime();
    var433.creationTime = var473;
    Object var474 = this.mPackagesLock;
    writeUserLP(var13);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
}