// API: getFreeBytes
// Service: StorageStatsService_3

public void getFreeBytes() {
    long var6 = Binder.clearCallingIdentity();
    StorageManager var7 = this.mStorage;
    File var9 = var7.findPathForUuid(param2);
    boolean var14 = isQuotaSupported(param2,android);
    long var20 = getCacheBytes(param2,android);
    int var5 = Binder.getCallingUid();
    UserManager var8 = this.mUser;
    List var10 = var8.getUsers();
    Iterator var12 = var10.iterator();
    Object var17 = var12.next();
    UserInfo var18 = (UserInfo) var17;
    int var19 = var18.id;
    StorageStats var21 = queryStatsForUser(param2,var19,0);
    int var6 = UserHandle.getCallingUserId();
    Context var8 = this.mContext;
    int var14 = Binder.getCallingUid();
    [I var17 = getAppIds(param3);
    PackageStats var18 = new PackageStats();
    Installer var20 = this.mInstaller;
    int var22 = StorageStatsService.getDefaultFlags();
    var20.getUserSize(param2,param3,var22,var17,var18);
    boolean var8 = checkBeforeRemote();{boolean var8 = checkBeforeRemote();};
    IInstalld var10 = this.mInstalld;
    [J var12 = var10.getUserSize(param2,param3,param4,param5);
    long var13 = param6.codeSize;
    14 = arrayload 12[9];
    var15 = var13 add var14;
    param6.codeSize = var15;
    long var16 = param6.dataSize;
    18 = arrayload 12[17];
    var19 = var16 add var18;
    param6.dataSize = var19;
    long var20 = param6.cacheSize;
    22 = arrayload 12[21];
    var23 = var20 add var22;
    param6.cacheSize = var23;
    long var24 = param6.externalCodeSize;
    26 = arrayload 12[25];
    var27 = var24 add var26;
    param6.externalCodeSize = var27;<PATH_SEP>long var6 = Binder.clearCallingIdentity();
    StorageManager var7 = this.mStorage;
    File var9 = var7.findPathForUuid(param2);
    boolean var14 = isQuotaSupported(param2,android);
    long var20 = getCacheBytes(param2,android);
    int var5 = Binder.getCallingUid();
    UserManager var8 = this.mUser;
    List var10 = var8.getUsers();
    Iterator var12 = var10.iterator();
    Object var17 = var12.next();
    UserInfo var18 = (UserInfo) var17;
    int var19 = var18.id;
    StorageStats var21 = queryStatsForUser(param2,var19,0);
    int var6 = UserHandle.getCallingUserId();
    Context var8 = this.mContext;
    int var14 = Binder.getCallingUid();
    [I var17 = getAppIds(param3);
    PackageStats var18 = new PackageStats();
    Installer var20 = this.mInstaller;
    int var22 = StorageStatsService.getDefaultFlags();
    var20.getUserSize(param2,param3,var22,var17,var18);
    boolean var27 = SystemProperties.getBoolean(fw.verify_storage,0);
    PackageStats var28 = new PackageStats();
    Installer var30 = this.mInstaller;
    var30.getUserSize(param2,param3,0,var17,var28);
    StorageStatsService.checkEquals(var53,var28,var18);{StorageStatsService.checkEquals(var53,var28,var18);};
    StorageStats var63 = StorageStatsService.translate(var18);
    StorageStats var2 = new StorageStats();
    long var4 = this.codeSize;
    long var5 = this.externalCodeSize;
    var6 = var4 add var5;
    var2.codeBytes = var6;
    long var7 = this.dataSize;
    long var8 = this.externalDataSize;
    var9 = var7 add var8;
    var2.dataBytes = var9;<PATH_SEP>long var6 = Binder.clearCallingIdentity();
    StorageManager var7 = this.mStorage;
    File var9 = var7.findPathForUuid(param2);
    boolean var14 = isQuotaSupported(param2,android);
    long var20 = getCacheBytes(param2,android);
    int var5 = Binder.getCallingUid();
    UserManager var8 = this.mUser;
    List var10 = var8.getUsers();
    Iterator var12 = var10.iterator();
    Object var17 = var12.next();
    UserInfo var18 = (UserInfo) var17;
    int var19 = var18.id;
    StorageStats var21 = queryStatsForUser(param2,var19,0);
    int var6 = UserHandle.getCallingUserId();
    Context var8 = this.mContext;
    int var14 = Binder.getCallingUid();
    [I var17 = getAppIds(param3);
    PackageStats var18 = new PackageStats();
    Installer var20 = this.mInstaller;
    int var22 = StorageStatsService.getDefaultFlags();
    var20.getUserSize(param2,param3,var22,var17,var18);
    boolean var8 = checkBeforeRemote();{boolean var8 = checkBeforeRemote();};
    IInstalld var10 = this.mInstalld;
    [J var12 = var10.getUserSize(param2,param3,param4,param5);
    long var13 = param6.codeSize;
    14 = arrayload 12[9];
    var15 = var13 add var14;
    param6.codeSize = var15;
    long var16 = param6.dataSize;
    18 = arrayload 12[17];
    var19 = var16 add var18;
    param6.dataSize = var19;
}