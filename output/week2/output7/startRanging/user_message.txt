// API: startRanging
// Service: RttServiceImpl_6

public void startRanging() {
    List var11 = param5.mRttPeers;
    List var12 = param5.mRttPeers;
    int var14 = var12.size();
    List var19 = param5.mRttPeers;
    Iterator var21 = var19.iterator();
    IWifiAwareManager var32 = this.mAwareBinder;
    enforceValidity(var34);{enforceValidity(var34);};
    boolean var37 = isAvailable();
    long var3 = Binder.clearCallingIdentity();
    RttNative var4 = this.mRttNative;
    boolean var6 = var4.isReady();
    PowerManager var8 = this.mPowerManager;
    boolean var10 = var8.isDeviceIdleMode();
    WifiPermissionsUtil var11 = this.mWifiPermissionsUtil;
    boolean var13 = var11.isLocationModeEnabled();
    boolean var3 = retrieveLocationManagerIfNecessary();
    LocationManager var5 = this.mLocationManager;
    WifiPermissionsWrapper var6 = this.mWifiPermissionsWrapper;
    int var8 = var6.getCurrentUser();
    UserHandle var10 = UserHandle.of(var8);
    boolean var12<PATH_SEP>List var11 = param5.mRttPeers;
    List var12 = param5.mRttPeers;
    int var14 = var12.size();
    List var19 = param5.mRttPeers;
    Iterator var21 = var19.iterator();
    IWifiAwareManager var32 = this.mAwareBinder;
    enforceValidity(var34);{enforceValidity(var34);};
    boolean var37 = isAvailable();
    int var40 = getMockableCallingUid();
    WifiPermissionsUtil var43 = this.mWifiPermissionsUtil;
    RttServiceImpl$5 var61 = new RttServiceImpl$5();
    linkToDeath(var61,0);
    RttServiceImpl$RttServiceSynchronized var76 = this.mRttServiceSynchronized;
    Handler var77 = var76.mHandler;
    -$$Lambda$RttServiceImpl$3Addfr11wJKJqRbBre_6uYT6vT0 var78 = new -$$Lambda$RttServiceImpl$3Addfr11wJKJqRbBre_6uYT6vT0();
    boolean var81 = var77.post(var78);<PATH_SEP>List var11 = param5.mRttPeers;
    List var12 = param5.mRttPeers;
    int var14 = var12.size();
    List var19 = param5.mRttPeers;
    Iterator var21 = var19.iterator();
    IWifiAwareManager var32 = this.mAwareBinder;
    enforceValidity(var34);{enforceValidity(var34);};
    boolean var37 = isAvailable();
    int var40 = getMockableCallingUid();
    WifiPermissionsUtil var43 = this.mWifiPermissionsUtil;
    clearNames();
    RttServiceImpl$RttShellCommand var50 = this.mShellCommand;
    int var53 = var50.getControlParam(override_assume_no_privilege);
    RttServiceImpl$5 var61 = new RttServiceImpl$5();
    linkToDeath(var61,0);
    RttServiceImpl$RttServiceSynchronized var76 = this.mRttServiceSynchronized;
    Handler var77 = var76.mHandler;
    -$$Lambda$RttServiceImpl$3Addfr11wJKJqRbBre_6uYT6vT0 var78 = new -$$Lambda$RttServiceImpl$3Addfr11wJKJqRbBre_6uYT6vT0();
    boolean var81 = var77.post(var78);
}