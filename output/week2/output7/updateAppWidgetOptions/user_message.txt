// API: updateAppWidgetOptions
// Service: AppWidgetServiceImpl_4

public void updateAppWidgetOptions() {
    int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    Object var26 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var31 = lookupWidgetLocked(param3,var29,param2);
    Bundle var32 = var31.options;
    var32.putAll(param4);
    sendOptionsChangedIntentLocked(var31);
    Intent var3 = new Intent();
    AppWidgetServiceImpl$Provider var6 = param2.provider;
    AppWidgetProviderInfo var7 = var6.info;
    ComponentName var8 = var7.provider;
    Intent var10 = var3.setComponent(var8);
    int var11 = param2.appWidgetId;
    Intent var14 = var3.putExtra(appWidgetId,var11);
    Bundle var15 = param2.options;
    Intent var18 = var3.putExtra(appWidgetOptions,var15);
    AppWidgetServiceImpl$Provider var19 = param2.provider;
    AppWidgetProviderInfo var20 = var19.info;
    UserHandle var22 = var20.getProfile();<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    Object var26 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var31 = lookupWidgetLocked(param3,var29,param2);
    Bundle var32 = var31.options;
    var32.putAll(param4);<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    Object var26 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var31 = lookupWidgetLocked(param3,var29,param2);
    Bundle var32 = var31.options;
    var32.putAll(param4);
    sendOptionsChangedIntentLocked(var31);
    Intent var3 = new Intent();
    AppWidgetServiceImpl$Provider var6 = param2.provider;
    AppWidgetProviderInfo var7 = var6.info;
    ComponentName var8 = var7.provider;
    Intent var10 = var3.setComponent(var8);
    int var11 = param2.appWidgetId;
    Intent var14 = var3.putExtra(appWidgetId,var11);
    Bundle var15 = param2.options;
    Intent var18 = var3.putExtra(appWidgetOptions,var15);
    AppWidgetServiceImpl$Provider var19 = param2.provider;
    AppWidgetProviderInfo var20 = var19.info;
    UserHandle var22 = var20.getProfile();
    sendBroadcastAsUser(var3,var22);
    long var5 = Binder.clearCallingIdentity();
    Context var6 = this.mContext;
    var6.sendBroadcastAsUser(param2,param3);<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    boolean var7 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var24 = this.mSecurityPolicy;
    Object var26 = this.mLock;
    ensureGroupStateLoadedLocked(var6);{ensureGroupStateLoadedLocked(var6);};
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Widget var31 = lookupWidgetLocked(param3,var29,param2);
    ArrayList var5 = this.mWidgets;
    int var7 = var5.size();
    ArrayList var9 = this.mWidgets;
    Object var11 = var9.get(var22);
    AppWidgetServiceImpl$Widget var12 = (AppWidgetServiceImpl$Widget) var11;
    int var13 = var12.appWidgetId;
    AppWidgetServiceImpl$SecurityPolicy var14 = this.mSecurityPolicy;
    Lcom/android/server/appwidget/AppWidgetServiceImpl$Widget var12;
}