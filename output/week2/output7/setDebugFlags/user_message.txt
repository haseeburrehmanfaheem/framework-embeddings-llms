// API: setDebugFlags
// Service: StorageManagerService_3

public void setDebugFlags() {
    var7 = param3 and 4;
    boolean var11 = StorageManager.isFileEncryptedNativeOnly();
    LockPatternUtils var15 = this.mLockPatternUtils;
    boolean var17 = var15.isCredentialRequiredToDecrypt(0);
    long var22 = Binder.clearCallingIdentity();
    var23 = param2 and 4;
    String var27 = Boolean.toString(var24);
    SystemProperties.set(persist.sys.emulate_fbe,var27);
    Context var29 = this.mContext;
    30 = load_metadata: <Application,Landroid/os/PowerManager>;
    <Primordial,Ljava/lang/Class>;
    Object var32 = var29.getSystemService(var30);
    PowerManager var33 = (PowerManager) var32;
    var33.reboot(0);
    Binder.restoreCallingIdentity(var22);
    var45 = param3 and 3;
    var48 = param2 and 1;
    long var56 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.adoptable,var54);
    Handler var59 = this.mHandler;
    Message var61 = var59.obtainMessage(10);
    var61.sendToTarget();
    Binder.restoreCallingIdentity(var56);
    var76 = param3 and 24;
    var78 = param2 and 8;
    long var83 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.sdcardfs,var81);
    Handler var86 = this.mHandler;
    Message var88 = var86.obtainMessage(10);
    var88.sendToTarget();
    Binder.restoreCallingIdentity(var83);
    var103 = param3 and 32;
    var104 = param2 and 32;
    long var107 = Binder.clearCallingIdentity();
    String var110 = Boolean.toString(var105);
    SystemProperties.set(persist.sys.virtual_disk,var110);
    Handler var112 = this.mHandler;
    Message var114 = var112.obtainMessage(10);
    var114.sendToTarget();
    Binder.restoreCallingIdentity(var107);
    var133 = param3 and 192;
    var135 = param2 and 64;
    long var141 = Binder.clearCallingIdentity();
    Context var142 = this.mContext;
    ContentResolver var144 = var142.getContentResolver();
    boolean var147 = Settings$Global.putInt(var144,isolated_storage_local,var139);
    String var5 = Integer.toString(param3);
    boolean var7 = Settings$Global.putString(this,param2,var5);
    boolean var7<PATH_SEP>var7 = param3 and 4;
    boolean var11 = StorageManager.isFileEncryptedNativeOnly();
    LockPatternUtils var15 = this.mLockPatternUtils;
    boolean var17 = var15.isCredentialRequiredToDecrypt(0);
    long var22 = Binder.clearCallingIdentity();
    var23 = param2 and 4;
    String var27 = Boolean.toString(var24);
    SystemProperties.set(persist.sys.emulate_fbe,var27);
    Context var29 = this.mContext;
    30 = load_metadata: <Application,Landroid/os/PowerManager>;
    <Primordial,Ljava/lang/Class>;
    Object var32 = var29.getSystemService(var30);
    PowerManager var33 = (PowerManager) var32;
    var33.reboot(0);
    Binder.restoreCallingIdentity(var22);
    var45 = param3 and 3;
    var48 = param2 and 1;
    long var56 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.adoptable,var54);
    Handler var59 = this.mHandler;
    Message var61 = var59.obtainMessage(10);
    var61.sendToTarget();
    Binder.restoreCallingIdentity(var56);
    var76 = param3 and 24;
    var78 = param2 and 8;
    long var83 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.sdcardfs,var81);
    Handler var86 = this.mHandler;
    Message var88 = var86.obtainMessage(10);
    var88.sendToTarget();
    Binder.restoreCallingIdentity(var83);
    var103 = param3 and 32;
    var104 = param2 and 32;
    long var107 = Binder.clearCallingIdentity();
    String var110 = Boolean.toString(var105);
    SystemProperties.set(persist.sys.virtual_disk,var110);
    Handler var112 = this.mHandler;
    Message var114 = var112.obtainMessage(10);
    var114.sendToTarget();
    Binder.restoreCallingIdentity(var107);
    var133 = param3 and 192;
    var135 = param2 and 64;
    long var141 = Binder.clearCallingIdentity();
    Context var142 = this.mContext;
    ContentResolver var144 = var142.getContentResolver();
    boolean var147 = Settings$Global.putInt(var144,isolated_storage_local,var139);
    String var5 = Integer.toString(param3);
    boolean var7 = Settings$Global.putString(this,param2,var5);
    int var5 = getUserId();
    boolean var8 = Settings$Global.putStringForUser(this,param2,param3,0,0,var5);
    HashSet var7 = MOVED_TO_SECURE;
    boolean var9 = var7.contains(param2);
    Settings$NameValueCache var11 = sNameValueCache;
    boolean var13 = var11.putStringForUser(this,param2,param3,param4,param5,param6);<PATH_SEP>var7 = param3 and 4;
    boolean var11 = StorageManager.isFileEncryptedNativeOnly();
    LockPatternUtils var15 = this.mLockPatternUtils;
    boolean var17 = var15.isCredentialRequiredToDecrypt(0);
    long var22 = Binder.clearCallingIdentity();
    var23 = param2 and 4;
    String var27 = Boolean.toString(var24);
    SystemProperties.set(persist.sys.emulate_fbe,var27);
    Context var29 = this.mContext;
    30 = load_metadata: <Application,Landroid/os/PowerManager>;
    <Primordial,Ljava/lang/Class>;
    Object var32 = var29.getSystemService(var30);
    PowerManager var33 = (PowerManager) var32;
    var33.reboot(0);
    Binder.restoreCallingIdentity(var22);
    var45 = param3 and 3;
    var48 = param2 and 1;
    long var56 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.adoptable,var54);
    Handler var59 = this.mHandler;
    Message var61 = var59.obtainMessage(10);
    var61.sendToTarget();
    Binder.restoreCallingIdentity(var56);
    var76 = param3 and 24;
    var78 = param2 and 8;
    long var83 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.sdcardfs,var81);
    Handler var86 = this.mHandler;
    Message var88 = var86.obtainMessage(10);
    var88.sendToTarget();
    Binder.restoreCallingIdentity(var83);
    var103 = param3 and 32;
    var104 = param2 and 32;
    long var107 = Binder.clearCallingIdentity();
    String var110 = Boolean.toString(var105);
    SystemProperties.set(persist.sys.virtual_disk,var110);
    Handler var112 = this.mHandler;
    Message var114 = var112.obtainMessage(10);
    var114.sendToTarget();
    Binder.restoreCallingIdentity(var107);
    var133 = param3 and 192;
    var135 = param2 and 64;
    long var141 = Binder.clearCallingIdentity();
    Context var142 = this.mContext;
    ContentResolver var144 = var142.getContentResolver();
    boolean var147 = Settings$Global.putInt(var144,isolated_storage_local,var139);
    refreshIsolatedStorageSettings();
    ContentResolver var2 = this.mResolver;
    String var6 = DeviceConfig.getProperty(storage,isolated_storage_enabled);
    boolean var9 = Settings$Global.putString(var2,isolated_storage_remote,var6);
    Context var10 = this.mContext;
    ContentResolver var12 = var10.getContentResolver();
    int var16 = Settings$Global.getInt(var12,isolated_storage_local,0);
    Context var17 = this.mContext;
    ContentResolver var19 = var17.getContentResolver();
    int var21 = Settings$Global.getInt(var19,isolated_storage_remote,0);
    String var49 = Boolean.toString(var24);
    SystemProperties.set(persist.sys.isolated_storage,var49);<PATH_SEP>var7 = param3 and 4;
    boolean var11 = StorageManager.isFileEncryptedNativeOnly();
    LockPatternUtils var15 = this.mLockPatternUtils;
    boolean var17 = var15.isCredentialRequiredToDecrypt(0);
    long var22 = Binder.clearCallingIdentity();
    var23 = param2 and 4;
    String var27 = Boolean.toString(var24);
    SystemProperties.set(persist.sys.emulate_fbe,var27);
    Context var29 = this.mContext;
    30 = load_metadata: <Application,Landroid/os/PowerManager>;
    <Primordial,Ljava/lang/Class>;
    Object var32 = var29.getSystemService(var30);
    PowerManager var33 = (PowerManager) var32;
    var33.reboot(0);
    Binder.restoreCallingIdentity(var22);
    var45 = param3 and 3;
    var48 = param2 and 1;
    long var56 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.adoptable,var54);
    Handler var59 = this.mHandler;
    Message var61 = var59.obtainMessage(10);
    var61.sendToTarget();
    Binder.restoreCallingIdentity(var56);
    var76 = param3 and 24;
    var78 = param2 and 8;
    long var83 = Binder.clearCallingIdentity();
    SystemProperties.set(persist.sys.sdcardfs,var81);
    Handler var86 = this.mHandler;
    Message var88 = var86.obtainMessage(10);
    var88.sendToTarget();
    Binder.restoreCallingIdentity(var83);
    var103 = param3 and 32;
    var104 = param2 and 32;
    long var107 = Binder.clearCallingIdentity();
    String var110 = Boolean.toString(var105);
    SystemProperties.set(persist.sys.virtual_disk,var110);
    Handler var112 = this.mHandler;
    Message var114 = var112.obtainMessage(10);
    var114.sendToTarget();
    Binder.restoreCallingIdentity(var107);
    var133 = param3 and 192;
    var135 = param2 and 64;
    long var141 = Binder.clearCallingIdentity();
    Context var142 = this.mContext;
    ContentResolver var144 = var142.getContentResolver();
    boolean var147 = Settings$Global.putInt(var144,isolated_storage_local,var139);
    String var5 = Integer.toString(param3);
    boolean var7 = Settings$Global.putString(this,param2,var5);
    int var5 = getUserId();
    boolean var8 = Settings$Global.putStringForUser(this,param2,param3,0,0,var5);
    HashSet var7 = MOVED_TO_SECURE;
    boolean var9 = var7.contains(param2);
    boolean var30 = Settings$Secure.putStringForUser(this,param2,param3,param4,param5,param6);
}