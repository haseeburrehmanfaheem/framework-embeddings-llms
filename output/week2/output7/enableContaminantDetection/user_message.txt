// API: enableContaminantDetection
// Service: UsbService_3

public void enableContaminantDetection() {
    Object var6 = Preconditions.checkNotNull(param2,portId must not be null);{Object var6 = Preconditions.checkNotNull(param2,portId must not be null);};
    Context var7 = this.mContext;
    long var12 = Binder.clearCallingIdentity();
    UsbPortManager var13 = this.mPortManager;
    UsbPortManager var14 = this.mPortManager;
    var14.enableContaminantDetection(param2,param3,0);
    ArrayMap var5 = this.mPorts;
    Object var7 = var5.get(param2);
    UsbPortManager$PortInfo var8 = (UsbPortManager$PortInfo) var7;
    UsbPort var10 = var8.mUsbPort;
    boolean var12 = var10.supportsEnableContaminantPresenceDetection();
    UsbPortStatus var14 = var8.mUsbPortStatus;
    int var16 = var14.getContaminantDetectionStatus();
    UsbPortStatus var19 = var8.mUsbPortStatus;
    int var21 = var19.getContaminantDetectionStatus();
    UsbPortStatus var25 = var8.mUsbPortStatus;
    int var27 = var25.getContaminantDetectionStatus();
    IUsb var28 = this.mProxy;
    IUsb var30 = IUsb.castFrom(var28);
    var30.enableContaminantPresenceDetection(param2,param3);
    HwParcel var4 = new HwParcel();
    var4.writeInterfaceToken(android.hardware.usb@1.2::IUsb);
    var4.writeString(param2);
    var4.writeBool(param3);
    HwParcel var10 = new HwParcel();
    IHwBinder var12 = this.mRemote;
    var12.transact(4,var4,var10,1);
    var4.releaseTemporaryStorage();
    var10.release();<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2,portId must not be null);{Object var6 = Preconditions.checkNotNull(param2,portId must not be null);};
    Context var7 = this.mContext;
    long var12 = Binder.clearCallingIdentity();
    UsbPortManager var13 = this.mPortManager;
    UsbPortManager var14 = this.mPortManager;
    var14.enableContaminantDetection(param2,param3,0);
    ArrayMap var5 = this.mPorts;
    Object var7 = var5.get(param2);
    UsbPortManager$PortInfo var8 = (UsbPortManager$PortInfo) var7;
    UsbPort var10 = var8.mUsbPort;
    boolean var12 = var10.supportsEnableContaminantPresenceDetection();
    UsbPortStatus var14 = var8.mUsbPortStatus;
    int var16 = var14.getContaminantDetectionStatus();
    UsbPortStatus var19 = var8.mUsbPortStatus;
    int var21 = var19.getContaminantDetectionStatus();
    UsbPortStatus var25 = var8.mUsbPortStatus;
    int var27 = var25.getContaminantDetectionStatus();
    IUsb var28 = this.mProxy;
    IUsb var30 = IUsb.castFrom(var28);
    var30.enableContaminantPresenceDetection(param2,param3);
    HwParcel var4 = new HwParcel();
    var4.writeInterfaceToken(android.hardware.usb@1.2::IUsb);
    var4.writeString(param2);
    var4.writeBool(param3);
    HwParcel var10 = new HwParcel();
    IHwBinder var12 = this.mRemote;
    var12.transact(4,var4,var10,1);
    var4.releaseTemporaryStorage();<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2,portId must not be null);{Object var6 = Preconditions.checkNotNull(param2,portId must not be null);};
    Context var7 = this.mContext;
    long var12 = Binder.clearCallingIdentity();
    UsbPortManager var13 = this.mPortManager;
    UsbPortManager var14 = this.mPortManager;
    var14.enableContaminantDetection(param2,param3,0);
    ArrayMap var5 = this.mPorts;
    Object var7 = var5.get(param2);
    UsbPortManager$PortInfo var8 = (UsbPortManager$PortInfo) var7;
    println(var58);
    Object var4 = this.lock;
    print(param2);<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2,portId must not be null);{Object var6 = Preconditions.checkNotNull(param2,portId must not be null);};
    Context var7 = this.mContext;
    long var12 = Binder.clearCallingIdentity();
    UsbPortManager var13 = this.mPortManager;
    UsbPortManager var14 = this.mPortManager;
    var14.enableContaminantDetection(param2,param3,0);
    ArrayMap var5 = this.mPorts;
    Object var7 = var5.get(param2);
    UsbPortManager$PortInfo var8 = (UsbPortManager$PortInfo) var7;
    println(var58);
    Object var4 = this.lock;
    print(param2);
    write(var6);
}