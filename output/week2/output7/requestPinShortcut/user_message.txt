// API: requestPinShortcut
// Service: ShortcutService_5

public void requestPinShortcut() {
    Object var7 = Preconditions.checkNotNull(param3);{Object var7 = Preconditions.checkNotNull(param3);};
    boolean var9 = isEnabled();
    Preconditions.checkArgument(var9,Shortcut must be enabled);{Preconditions.checkArgument(var9,Shortcut must be enabled);};
    boolean var14 = requestPinItem(param2,param5,param3,0,0,param4);
    Object var10 = this.mLock;
    throwIfUserLockedL(param3);
    int var13 = injectBinderCallingUid();
    Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);{Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);};
    ShortcutPackage var20 = getPackageShortcutsForPublisherLocked(param2,param3);
    String var22 = getId();
    boolean var24 = var20.isShortcutExistsAndInvisibleToPublisher(var22);
    var20.updateInvisibleShortcutForPinRequestWith(param4);
    ArrayMap var3 = this.mShortcuts;
    String var5 = getId();
    Object var7 = var3.get(var5);
    ShortcutInfo var8 = (ShortcutInfo) var7;
    Object var10 = Preconditions.checkNotNull(var8);{Object var10 = Preconditions.checkNotNull(var8);};
    ShortcutUser var11 = this.mShortcutUser;
    ShortcutService var12 = var11.mService;
    var12.validateShortcutForPinRequest(param2);{var12.validateShortcutForPinRequest(param2);};
    addFlags(2);
    forceReplaceShortcutInner(param2);
    adjustRanks();
    ShortcutUser var2 = this.mShortcutUser;
    ShortcutService var3 = var2.mService;
    long var5 = var3.injectCurrentTimeMillis();
    ArrayMap var6 = this.mShortcuts;
    int var8 = var6.size();
    var10 = var8 add -1;
    ArrayMap var30 = sortShortcutsToActivities();
    int var32 = var30.size();
    var33 = var32 add -1;
    Object var35 = var30.valueAt(var67);
    ArrayList var36 = (ArrayList) var35;
    Comparator var37 = this.mShortcutRankComparator;
    Collections.sort(var36,var37);
    int var40 = var36.size();
    Object var42 = var36.get(var63);
    ShortcutInfo var43 = (ShortcutInfo) var42;
    boolean var45 = var43.isManifestShortcut();
    boolean var47 = var43.isDynamic();
    var3.wtf(Non-dynamic shortcut found.);<PATH_SEP>Object var7 = Preconditions.checkNotNull(param3);{Object var7 = Preconditions.checkNotNull(param3);};
    boolean var9 = isEnabled();
    Preconditions.checkArgument(var9,Shortcut must be enabled);{Preconditions.checkArgument(var9,Shortcut must be enabled);};
    boolean var14 = requestPinItem(param2,param5,param3,0,0,param4);
    Object var10 = this.mLock;
    throwIfUserLockedL(param3);
    int var13 = injectBinderCallingUid();
    Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);{Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);};
    ShortcutPackage var20 = getPackageShortcutsForPublisherLocked(param2,param3);
    String var22 = getId();
    boolean var24 = var20.isShortcutExistsAndInvisibleToPublisher(var22);
    var20.updateInvisibleShortcutForPinRequestWith(param4);
    ArrayMap var3 = this.mShortcuts;
    String var5 = getId();
    Object var7 = var3.get(var5);
    ShortcutInfo var8 = (ShortcutInfo) var7;
    Object var10 = Preconditions.checkNotNull(var8);{Object var10 = Preconditions.checkNotNull(var8);};
    ShortcutUser var11 = this.mShortcutUser;
    ShortcutService var12 = var11.mService;
    var12.validateShortcutForPinRequest(param2);{var12.validateShortcutForPinRequest(param2);};
    addFlags(2);
    forceReplaceShortcutInner(param2);
    adjustRanks();
    ShortcutUser var2 = this.mShortcutUser;
    ShortcutService var3 = var2.mService;
    long var5 = var3.injectCurrentTimeMillis();
    ArrayMap var6 = this.mShortcuts;
    int var8 = var6.size();
    var10 = var8 add -1;
    ArrayMap var30 = sortShortcutsToActivities();
    int var32 = var30.size();
    var33 = var32 add -1;
    Object var35 = var30.valueAt(var67);
    ArrayList var36 = (ArrayList) var35;
    Comparator var37 = this.mShortcutRankComparator;
    Collections.sort(var36,var37);
    int var40 = var36.size();
    Object var42 = var36.get(var63);
    ShortcutInfo var43 = (ShortcutInfo) var42;
    boolean var45 = var43.isManifestShortcut();
    boolean var47 = var43.isDynamic();
    var51 = var62 add 1;
    int var53 = var43.getRank();
    var43.setTimestamp(var5);<PATH_SEP>Object var7 = Preconditions.checkNotNull(param3);{Object var7 = Preconditions.checkNotNull(param3);};
    boolean var9 = isEnabled();
    Preconditions.checkArgument(var9,Shortcut must be enabled);{Preconditions.checkArgument(var9,Shortcut must be enabled);};
    boolean var14 = requestPinItem(param2,param5,param3,0,0,param4);
    Object var10 = this.mLock;
    throwIfUserLockedL(param3);
    int var13 = injectBinderCallingUid();
    Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);{Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);};
    ShortcutPackage var20 = getPackageShortcutsForPublisherLocked(param2,param3);
    String var22 = getId();
    boolean var24 = var20.isShortcutExistsAndInvisibleToPublisher(var22);
    var20.updateInvisibleShortcutForPinRequestWith(param4);
    ArrayMap var3 = this.mShortcuts;
    String var5 = getId();
    Object var7 = var3.get(var5);
    ShortcutInfo var8 = (ShortcutInfo) var7;
    Object var10 = Preconditions.checkNotNull(var8);{Object var10 = Preconditions.checkNotNull(var8);};
    ShortcutUser var11 = this.mShortcutUser;
    ShortcutService var12 = var11.mService;
    var12.validateShortcutForPinRequest(param2);{var12.validateShortcutForPinRequest(param2);};
    addFlags(2);
    forceReplaceShortcutInner(param2);
    adjustRanks();
    ShortcutUser var2 = this.mShortcutUser;
    ShortcutService var3 = var2.mService;
    long var5 = var3.injectCurrentTimeMillis();
    ArrayMap var6 = this.mShortcuts;
    int var8 = var6.size();
    var10 = var8 add -1;
    ArrayMap var30 = sortShortcutsToActivities();
    int var32 = var30.size();
    var33 = var32 add -1<PATH_SEP>Object var7 = Preconditions.checkNotNull(param3);{Object var7 = Preconditions.checkNotNull(param3);};
    boolean var9 = isEnabled();
    Preconditions.checkArgument(var9,Shortcut must be enabled);{Preconditions.checkArgument(var9,Shortcut must be enabled);};
    boolean var14 = requestPinItem(param2,param5,param3,0,0,param4);
    Object var10 = this.mLock;
    throwIfUserLockedL(param3);
    int var13 = injectBinderCallingUid();
    Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);{Preconditions.checkState(var15,Calling application must have a foreground activity or a foreground service);};
    ShortcutPackage var20 = getPackageShortcutsForPublisherLocked(param2,param3);
    ShortcutUser var5 = getUserShortcutsLocked(param3);
    ShortcutPackage var7 = var5.getPackageShortcuts(param2);
    ShortcutUser var9 = var7.getUser();
    var9.onCalledByPublisher(param2);
    Lcom/android/server/pm/ShortcutPackage var7;
}