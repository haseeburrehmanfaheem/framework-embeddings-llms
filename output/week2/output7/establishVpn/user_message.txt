// API: establishVpn
// Service: ConnectivityService_2

public void establishVpn() {
    int var4 = Binder.getCallingUid();
    int var6 = UserHandle.getUserId(var4);
    SparseArray var7 = this.mVpns;
    throwIfLockdownEnabled();
    SparseArray var9 = this.mVpns;
    Object var11 = var9.get(var6);
    Vpn var12 = (Vpn) var11;
    ParcelFileDescriptor var14 = var12.establish(param2);
    Context var3 = this.mContext;
    UserManager var5 = UserManager.get(var3);
    int var7 = Binder.getCallingUid();
    int var8 = this.mOwnerUID;
    String var10 = this.mPackage;
    Intent var13 = new Intent();
    String var16 = this.mPackage;
    String var17 = param2.user;
    Intent var19 = var13.setClassName(var16,var17);
    long var21 = Binder.clearCallingIdentity();
    int var22 = this.mUserHandle;
    UserInfo var24 = var5.getUserInfo(var22);
    boolean var26 = var24.isRestricted();
    IPackageManager var31 = AppGlobals.getPackageManager();
    int var32 = this.mUserHandle;
    ResolveInfo var34 = var31.resolveService(var13,0,0,var32);
    ServiceInfo var49 = var34.serviceInfo;
    String var50 = var49.permission;
    boolean var52 = equals(var50);
    Binder.restoreCallingIdentity(var21);
    VpnConfig var124 = this.mConfig;
    String var125 = this.mInterface;
    Vpn$Connection var126 = this.mConnection;
    NetworkAgent var127 = this.mNetworkAgent;
    NetworkCapabilities var128 = this.mNetworkCapabilities;
    Set var130 = var128.getUids();
    int var131 = param2.mtu;
    int var133 = jniCreate(var131);
    ParcelFileDescriptor var135 = ParcelFileDescriptor.adoptFd(var133);
    int var137 = var135.getFd();
    String var139 = jniGetName(var137);
    List var142 = param2.addresses;
    Iterator var144 = var142.iterator();
    int var166 = jniSetAddresses(var139,var164);
    Vpn$Connection var171 = new Vpn$Connection();
    Context var173 = this.mContext;
    UserHandle var180 = new UserHandle();
    int var181 = this.mUserHandle;
    boolean var185 = var173.bindServiceAsUser(var13,var171,67108865,var180);
    this.mConnection = var171;
    this.mInterface = var139;
    String var198 = this.mPackage;
    param2.user = var198;
    String var199 = this.mInterface;
    param2.interfaze = var199;
    long var206 = SystemClock.elapsedRealtime();
    param2.startTime = var206;
    this.mConfig = param2;
    NetworkAgent var207 = this.mNetworkAgent;
    boolean var209 = updateLinkPropertiesInPlaceIfPossible(var207,var124);
    boolean var4 = param3.allowBypass;
    VpnConfig var5 = this.mConfig;
    boolean var6 = var5.allowBypass;
    List var9 = param3.allowedApplications;
    VpnConfig var10 = this.mConfig;
    List var11 = var10.allowedApplications;
    boolean var13 = Objects.equals(var9,var11);
    List var14 = param3.disallowedApplications;
    VpnConfig var15 = this.mConfig;
    List var16 = var15.disallowedApplications;
    boolean var18 = Objects.equals(var14,var16);
    LinkProperties var20 = makeLinkProperties();
    VpnConfig var2 = this.mConfig;
    boolean var3 = var2.allowIPv4;
    VpnConfig var4 = this.mConfig;
    boolean var5 = var4.allowIPv6;
    LinkProperties var6 = new LinkProperties();
    String var8 = this.mInterface;
    var6.setInterfaceName(var8);
    VpnConfig var10 = this.mConfig;
    List var11 = var10.addresses;
    VpnConfig var13 = this.mConfig;
    List var14 = var13.addresses;
    Iterator var16 = var14.iterator();
    VpnConfig var40 = this.mConfig;
    List var41 = var40.routes;
    VpnConfig var42 = this.mConfig;
    List var43 = var42.routes;
    Iterator var45 = var43.iterator();
    VpnConfig var74 = this.mConfig;
    List var75 = var74.dnsServers;
    VpnConfig var76 = this.mConfig;
    List var77 = var76.dnsServers;
    Iterator var79 = var77.iterator();
    VpnConfig var108 = this.mConfig;
    ProxyInfo var109 = var108.proxyInfo;
    var6.setHttpProxy(var109);
    RouteInfo var123 = new RouteInfo();
    IpPrefix var124 = new IpPrefix();
    InetAddress var125 = ANY;
    boolean var129 = var6.addRoute(var123);
    VpnConfig var137 = this.mConfig;
    List var138 = var137.searchDomains;
    VpnConfig var139 = this.mConfig;
    List var140 = var139.searchDomains;
    Iterator var142 = var140.iterator();
    String var165 = var163.trim();
    var6.setDomains(var165);
    Landroid/net/LinkProperties var6<PATH_SEP>int var4 = Binder.getCallingUid();
    int var6 = UserHandle.getUserId(var4);
    SparseArray var7 = this.mVpns;
    throwIfLockdownEnabled();
    SparseArray var9 = this.mVpns;
    Object var11 = var9.get(var6);
    Vpn var12 = (Vpn) var11;
    ParcelFileDescriptor var14 = var12.establish(param2);
    Context var3 = this.mContext;
    UserManager var5 = UserManager.get(var3);
    int var7 = Binder.getCallingUid();
    int var8 = this.mOwnerUID;
    String var10 = this.mPackage;
    Intent var13 = new Intent();
    String var16 = this.mPackage;
    String var17 = param2.user;
    Intent var19 = var13.setClassName(var16,var17);
    long var21 = Binder.clearCallingIdentity();
    int var22 = this.mUserHandle;
    UserInfo var24 = var5.getUserInfo(var22);
    boolean var26 = var24.isRestricted();
    IPackageManager var31 = AppGlobals.getPackageManager();
    int var32 = this.mUserHandle;
    ResolveInfo var34 = var31.resolveService(var13,0,0,var32);
    ServiceInfo var49 = var34.serviceInfo;
    String var50 = var49.permission;
    boolean var52 = equals(var50);
    Binder.restoreCallingIdentity(var21);
    VpnConfig var124 = this.mConfig;
    String var125 = this.mInterface;
    Vpn$Connection var126 = this.mConnection;
    NetworkAgent var127 = this.mNetworkAgent;
    NetworkCapabilities var128 = this.mNetworkCapabilities;
    Set var130 = var128.getUids();
    int var131 = param2.mtu;
    int var133 = jniCreate(var131);
    ParcelFileDescriptor var135 = ParcelFileDescriptor.adoptFd(var133);
    int var137 = var135.getFd();
    String var139 = jniGetName(var137);
    List var142 = param2.addresses;
    Iterator var144 = var142.iterator();
    int var166 = jniSetAddresses(var139,var164);
    Vpn$Connection var171 = new Vpn$Connection();
    Context var173 = this.mContext;
    UserHandle var180 = new UserHandle();
    int var181 = this.mUserHandle;
    boolean var185 = var173.bindServiceAsUser(var13,var171,67108865,var180);
    this.mConnection = var171;
    this.mInterface = var139;
    String var198 = this.mPackage;
    param2.user = var198;
    String var199 = this.mInterface;
    param2.interfaze = var199;
    long var206 = SystemClock.elapsedRealtime();
    param2.startTime = var206;
    this.mConfig = param2;
    NetworkAgent var207 = this.mNetworkAgent;
    boolean var209 = updateLinkPropertiesInPlaceIfPossible(var207,var124);
    boolean var4 = param3.allowBypass;
    VpnConfig var5 = this.mConfig;
    boolean var6 = var5.allowBypass;
    List var9 = param3.allowedApplications;
    VpnConfig var10 = this.mConfig;
    List var11 = var10.allowedApplications;
    boolean var13 = Objects.equals(var9,var11);
    List var14 = param3.disallowedApplications;
    VpnConfig var15 = this.mConfig;
    List var16 = var15.disallowedApplications;
    boolean var18 = Objects.equals(var14,var16);
    LinkProperties var20 = makeLinkProperties();
    VpnConfig var2 = this.mConfig;
    boolean var3 = var2.allowIPv4;
    VpnConfig var4 = this.mConfig;
    boolean var5 = var4.allowIPv6;
    LinkProperties var6 = new LinkProperties();
    String var8 = this.mInterface;
    var6.setInterfaceName(var8);
    VpnConfig var10 = this.mConfig;
    List var11 = var10.addresses;
    VpnConfig var13 = this.mConfig;
    List var14 = var13.addresses;
    Iterator var16 = var14.iterator();
    VpnConfig var40 = this.mConfig;
    List var41 = var40.routes;
    VpnConfig var42 = this.mConfig;
    List var43 = var42.routes;
    Iterator var45 = var43.iterator();
    VpnConfig var74 = this.mConfig;
    List var75 = var74.dnsServers;
    VpnConfig var76 = this.mConfig;
    List var77 = var76.dnsServers;
    Iterator var79 = var77.iterator();
    VpnConfig var108 = this.mConfig;
    ProxyInfo var109 = var108.proxyInfo;
    var6.setHttpProxy(var109);
    RouteInfo var123 = new RouteInfo();
    IpPrefix var124 = new IpPrefix();
    InetAddress var125 = ANY;
    boolean var129 = var6.addRoute(var123);
    VpnConfig var137 = this.mConfig;
    List var138 = var137.searchDomains;
    VpnConfig var139 = this.mConfig;
    List var140 = var139.searchDomains;
    Iterator var142 = var140.iterator();
    String var165 = var163.trim();
    var6.setDomains(var165);<PATH_SEP>int var4 = Binder.getCallingUid();
    int var6 = UserHandle.getUserId(var4);
    SparseArray var7 = this.mVpns;
    throwIfLockdownEnabled();
    SparseArray var9 = this.mVpns;
    Object var11 = var9.get(var6);
    Vpn var12 = (Vpn) var11;
    ParcelFileDescriptor var14 = var12.establish(param2);
    Context var3 = this.mContext;
    UserManager var5 = UserManager.get(var3);
    int var7 = Binder.getCallingUid();
    int var8 = this.mOwnerUID;
    String var10 = this.mPackage;
    Intent var13 = new Intent();
    String var16 = this.mPackage;
    String var17 = param2.user;
    Intent var19 = var13.setClassName(var16,var17);
    long var21 = Binder.clearCallingIdentity();
    int var22 = this.mUserHandle;
    UserInfo var24 = var5.getUserInfo(var22);
    boolean var26 = var24.isRestricted();
    IPackageManager var31 = AppGlobals.getPackageManager();
    int var32 = this.mUserHandle;
    ResolveInfo var34 = var31.resolveService(var13,0,0,var32);
    ServiceInfo var49 = var34.serviceInfo;
    String var50 = var49.permission;
    boolean var52 = equals(var50);
    Binder.restoreCallingIdentity(var21);
    VpnConfig var124 = this.mConfig;
    String var125 = this.mInterface;
    Vpn$Connection var126 = this.mConnection;
    NetworkAgent var127 = this.mNetworkAgent;
    NetworkCapabilities var128 = this.mNetworkCapabilities;
    Set var130 = var128.getUids();
    int var131 = param2.mtu;
    int var133 = jniCreate(var131);
    ParcelFileDescriptor var135 = ParcelFileDescriptor.adoptFd(var133);
    int var137 = var135.getFd();
    String var139 = jniGetName(var137);
    List var142 = param2.addresses;
    Iterator var144 = var142.iterator();
    int var166 = jniSetAddresses(var139,var164);
    Vpn$Connection var171 = new Vpn$Connection();
    Context var173 = this.mContext;
    UserHandle var180 = new UserHandle();
    int var181 = this.mUserHandle;
    boolean var185 = var173.bindServiceAsUser(var13,var171,67108865,var180);
    this.mConnection = var171;
    this.mInterface = var139;
    String var198 = this.mPackage;
    param2.user = var198;
    String var199 = this.mInterface;
    param2.interfaze = var199;
    long var206 = SystemClock.elapsedRealtime();
    param2.startTime = var206;
    this.mConfig = param2;
    NetworkAgent var207 = this.mNetworkAgent;
    boolean var209 = updateLinkPropertiesInPlaceIfPossible(var207,var124);
    boolean var4 = param3.allowBypass;
    VpnConfig var5 = this.mConfig;
    boolean var6 = var5.allowBypass;
    List var9 = param3.allowedApplications;
    VpnConfig var10 = this.mConfig;
    List var11 = var10.allowedApplications;
    boolean var13 = Objects.equals(var9,var11);
    List var14 = param3.disallowedApplications;
    VpnConfig var15 = this.mConfig;
    List var16 = var15.disallowedApplications;
    boolean var18 = Objects.equals(var14,var16);
    LinkProperties var20 = makeLinkProperties();
    VpnConfig var2 = this.mConfig;
    boolean var3 = var2.allowIPv4;
    VpnConfig var4 = this.mConfig;
    boolean var5 = var4.allowIPv6;
    LinkProperties var6 = new LinkProperties();
    String var8 = this.mInterface;
    var6.setInterfaceName(var8);
    VpnConfig var10 = this.mConfig;
    List var11 = var10.addresses;
    VpnConfig var13 = this.mConfig;
    List var14 = var13.addresses;
    Iterator var16 = var14.iterator();
    VpnConfig var40 = this.mConfig;
    List var41 = var40.routes;
    VpnConfig var42 = this.mConfig;
    List var43 = var42.routes;
    Iterator var45 = var43.iterator();
    Object var49 = var45.next();
    RouteInfo var50 = (RouteInfo) var49;
    boolean var52 = var6.addRoute(var50);
    IpPrefix var54 = var50.getDestination();
    InetAddress var56 = var54.getAddress();<PATH_SEP>int var4 = Binder.getCallingUid();
    int var6 = UserHandle.getUserId(var4);
    SparseArray var7 = this.mVpns;
    throwIfLockdownEnabled();
    SparseArray var9 = this.mVpns;
    Object var11 = var9.get(var6);
    Vpn var12 = (Vpn) var11;
    ParcelFileDescriptor var14 = var12.establish(param2);
    Context var3 = this.mContext;
    UserManager var5 = UserManager.get(var3);
    int var7 = Binder.getCallingUid();
    int var8 = this.mOwnerUID;
    String var10 = this.mPackage;
    Intent var13 = new Intent();
    String var16 = this.mPackage;
    String var17 = param2.user;
    Intent var19 = var13.setClassName(var16,var17);
    long var21 = Binder.clearCallingIdentity();
    int var22 = this.mUserHandle;
    UserInfo var24 = var5.getUserInfo(var22);
    boolean var26 = var24.isRestricted();
    IPackageManager var31 = AppGlobals.getPackageManager();
    int var32 = this.mUserHandle;
    ResolveInfo var34 = var31.resolveService(var13,0,0,var32);
    ServiceInfo var49 = var34.serviceInfo;
    String var50 = var49.permission;
    boolean var52 = equals(var50);
    Binder.restoreCallingIdentity(var21);
    VpnConfig var124 = this.mConfig;
    String var125 = this.mInterface;
    Vpn$Connection var126 = this.mConnection;
    NetworkAgent var127 = this.mNetworkAgent;
    NetworkCapabilities var128 = this.mNetworkCapabilities;
    Set var130 = var128.getUids();
    int var131 = param2.mtu;
    int var133 = jniCreate(var131);
    ParcelFileDescriptor var135 = ParcelFileDescriptor.adoptFd(var133);
    int var137 = var135.getFd();
    String var139 = jniGetName(var137);
    List var142 = param2.addresses;
    Iterator var144 = var142.iterator();
    int var166 = jniSetAddresses(var139,var164);
    Vpn$Connection var171 = new Vpn$Connection();
    Context var173 = this.mContext;
    UserHandle var180 = new UserHandle();
    int var181 = this.mUserHandle;
    boolean var185 = var173.bindServiceAsUser(var13,var171,67108865,var180);
    this.mConnection = var171;
    this.mInterface = var139;
    String var198 = this.mPackage;
    param2.user = var198;
    String var199 = this.mInterface;
    param2.interfaze = var199;
    long var206 = SystemClock.elapsedRealtime();
    param2.startTime = var206;
    this.mConfig = param2;
    NetworkAgent var207 = this.mNetworkAgent;
    boolean var209 = updateLinkPropertiesInPlaceIfPossible(var207,var124);
    boolean var4 = param3.allowBypass;
    VpnConfig var5 = this.mConfig;
    boolean var6 = var5.allowBypass;
    List var9 = param3.allowedApplications;
    VpnConfig var10 = this.mConfig;
    List var11 = var10.allowedApplications;
    boolean var13 = Objects.equals(var9,var11);
    List var14 = param3.disallowedApplications;
    VpnConfig var15 = this.mConfig;
    List var16 = var15.disallowedApplications;
    boolean var18 = Objects.equals(var14,var16);
    LinkProperties var20 = makeLinkProperties();
    VpnConfig var2 = this.mConfig;
    boolean var3 = var2.allowIPv4;
    VpnConfig var4 = this.mConfig;
    boolean var5 = var4.allowIPv6;
    LinkProperties var6 = new LinkProperties();
    String var8 = this.mInterface;
    var6.setInterfaceName(var8);
    VpnConfig var10 = this.mConfig;
    List var11 = var10.addresses;
    VpnConfig var13 = this.mConfig;
    List var14 = var13.addresses;
    Iterator var16 = var14.iterator();
    VpnConfig var40 = this.mConfig;
    List var41 = var40.routes;
    VpnConfig var42 = this.mConfig;
    List var43 = var42.routes;
    Iterator var45 = var43.iterator();
    VpnConfig var74 = this.mConfig;
    List var75 = var74.dnsServers;
    VpnConfig var76 = this.mConfig;
    List var77 = var76.dnsServers;
    Iterator var79 = var77.iterator();
    VpnConfig var108 = this.mConfig;
    ProxyInfo var109 = var108.proxyInfo;
    var6.setHttpProxy(var109);
    RouteInfo var112 = new RouteInfo();
    IpPrefix var113 = new IpPrefix();
    InetAddress var114 = ANY;
    boolean var118 = var6.addRoute(var112);
}