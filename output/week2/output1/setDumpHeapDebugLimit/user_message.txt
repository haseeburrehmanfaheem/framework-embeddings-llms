// API: setDumpHeapDebugLimit
// Service: ActivityManagerService_5

public void setDumpHeapDebugLimit() {
    ActivityManagerService.boostPriorityForLockedSection();
    var79 = param4 lt 0;
    ProcessMap var88 = this.mMemWatchProcesses;
    Pair var89 = new Pair();
    Long var91 = Long.valueOf(param4);
    Object var94 = var88.put(var73,var72,var89);
    ArrayMap var5 = this.mMap;
    Object var7 = var5.get(param2);
    SparseArray var8 = (SparseArray) var7;
    SparseArray var10 = new SparseArray();
    ArrayMap var13 = this.mMap;
    Object var15 = var13.put(param2,var10);<PATH_SEP>ActivityManagerService.boostPriorityForLockedSection();
    ThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var12 = var5.tid;
    int var13 = this.mBoostToPriority;
    Process.setThreadPriority(var12,var13);<PATH_SEP>ActivityManagerService.boostPriorityForLockedSection();
    ThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var12 = var5.tid;
    int var13 = this.mBoostToPriority;
    Process.setThreadPriority(var12,var13);
    var5.prevPriority = var10;<PATH_SEP>ActivityManagerService.boostPriorityForLockedSection();
    var79 = param4 lt 0;
    ProcessMap var80 = this.mMemWatchProcesses;
    ArrayMap var82 = var80.getMap();
    ArrayMap var2 = this.mMap;
    Landroid/util/ArrayMap var2;
}