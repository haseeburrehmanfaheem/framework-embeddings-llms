// API: finishReceiver
// Service: ActivityManagerService_7

public void finishReceiver() {
    boolean var10 = hasFileDescriptors();
    long var15 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var19 = isOnOffloadQueue(param7);
    BroadcastQueue var24 = this.mOffloadBroadcastQueue;
    BroadcastRecord var31 = var29.getMatchingOrderedReceiver(param2);
    BroadcastQueue var32 = var31.queue;
    boolean var35 = var32.finishReceiverLocked(var31,param3,param4,param5,param6,1);
    int var8 = param2.state;
    ActivityInfo var9 = param2.curReceiver;
    long var11 = SystemClock.uptimeMillis();
    long var12 = param2.receiverTime;
    var13 = var11 sub var12;
    param2.state = 0;
    String var21 = this.mQueueName;
    boolean var33 = param2.allowBackgroundActivityStarts;
    ProcessRecord var34 = param2.curApp;
    BroadcastConstants var35 = this.mConstants;
    long var36 = var35.ALLOW_BG_ACTIVITY_START_TIMEOUT;
    var37 = var13 lt var36;
    ProcessRecord var40 = param2.curApp;
    var40.removeAllowBackgroundActivityStartsToken(param2);
    int var44 = param2.nextReceiver;
    [J var46 = param2.duration;
    int var47 = param2.nextReceiver;
    var48 = var47 sub 1;
    arraystore 46[48] = 13;
    boolean var50 = param2.timeoutExempt;
    BroadcastConstants var51 = this.mConstants;
    long var52 = var51.SLOW_TIME;
    var54 = var52 lt 0;
    BroadcastConstants var55 = this.mConstants;
    long var56 = var55.SLOW_TIME;
    var57 = var13 lt var56;
    ProcessRecord var58 = param2.curApp;
    int var59 = var58.uid;
    boolean var61 = UserHandle.isCore(var59);
    ProcessRecord var62 = param2.curApp;
    BroadcastDispatcher var74 = this.mDispatcher;
    ProcessRecord var75 = param2.curApp;
    int var76 = var75.uid;
    var74.startDeferring(var76);
    param2.receiver = 0;
    Intent var82 = param2.intent;
    Intent var84 = var82.setComponent(0);
    ProcessRecord var85 = param2.curApp;
    ProcessRecord var86 = param2.curApp;
    ArraySet var87 = var86.curReceivers;
    boolean var89 = var87.contains(param2);
    ProcessRecord var90 = param2.curApp;
    ArraySet var91 = var90.curReceivers;
    boolean var93 = var91.remove(param2);
    BroadcastFilter var97 = param2.curFilter;
    BroadcastFilter var98 = param2.curFilter;
    ReceiverList var99 = var98.receiverList;
    var99.curBroadcast = 0;
    param2.curFilter = 0;<PATH_SEP>boolean var10 = hasFileDescriptors();
    long var15 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var19 = isOnOffloadQueue(param7);
    BroadcastQueue var24 = this.mOffloadBroadcastQueue;
    BroadcastRecord var31 = var29.getMatchingOrderedReceiver(param2);
    BroadcastQueue var32 = var31.queue;
    boolean var35 = var32.finishReceiverLocked(var31,param3,param4,param5,param6,1);
    int var8 = param2.state;
    ActivityInfo var9 = param2.curReceiver;
    long var11 = SystemClock.uptimeMillis();
    long var12 = param2.receiverTime;
    var13 = var11 sub var12;
    param2.state = 0;
    String var21 = this.mQueueName;
    boolean var33 = param2.allowBackgroundActivityStarts;
    ProcessRecord var34 = param2.curApp;
    BroadcastConstants var35 = this.mConstants;
    long var36 = var35.ALLOW_BG_ACTIVITY_START_TIMEOUT;
    var37 = var13 lt var36;
    ProcessRecord var40 = param2.curApp;
    var40.removeAllowBackgroundActivityStartsToken(param2);
    int var44 = param2.nextReceiver;
    [J var46 = param2.duration;
    int var47 = param2.nextReceiver;
    var48 = var47 sub 1;
    arraystore 46[48] = 13;
    boolean var50 = param2.timeoutExempt;
    BroadcastConstants var51 = this.mConstants;
    long var52 = var51.SLOW_TIME;
    var54 = var52 lt 0;
    BroadcastConstants var55 = this.mConstants;
    long var56 = var55.SLOW_TIME;
    var57 = var13 lt var56;
    ProcessRecord var58 = param2.curApp;
    int var59 = var58.uid;
    boolean var61 = UserHandle.isCore(var59);
    ProcessRecord var62 = param2.curApp;
    BroadcastDispatcher var74 = this.mDispatcher;
    ProcessRecord var75 = param2.curApp;
    int var76 = var75.uid;
    var74.startDeferring(var76);
    Object var3 = this.mLock;
    BroadcastDispatcher$Deferrals var5 = findUidLocked(param2);
    long var10 = SystemClock.uptimeMillis();
    BroadcastDispatcher$Deferrals var11 = new BroadcastDispatcher$Deferrals();
    BroadcastConstants var12 = this.mConstants;
    long var13 = var12.DEFERRAL;
    SparseIntArray var14 = this.mAlarmUids;
    int var16 = var14.get(param2,0);
    int var18 = var11.alarmCount;
    ArrayList var22 = this.mDeferredBroadcasts;
    BroadcastDispatcher.insertLocked(var22,var11);
    scheduleDeferralCheckLocked(1);<PATH_SEP>boolean var10 = hasFileDescriptors();
    long var15 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var19 = isOnOffloadQueue(param7);
    BroadcastQueue var24 = this.mOffloadBroadcastQueue;
    BroadcastRecord var31 = var29.getMatchingOrderedReceiver(param2);
    BroadcastQueue var32 = var31.queue;
    boolean var35 = var32.finishReceiverLocked(var31,param3,param4,param5,param6,1);
    int var8 = param2.state;
    ActivityInfo var9 = param2.curReceiver;
    long var11 = SystemClock.uptimeMillis();
    long var12 = param2.receiverTime;
    var13 = var11 sub var12;
    param2.state = 0;
    String var21 = this.mQueueName;
    boolean var33 = param2.allowBackgroundActivityStarts;
    ProcessRecord var34 = param2.curApp;
    BroadcastConstants var35 = this.mConstants;
    long var36 = var35.ALLOW_BG_ACTIVITY_START_TIMEOUT;
    var37 = var13 lt var36;
    ProcessRecord var40 = param2.curApp;
    var40.removeAllowBackgroundActivityStartsToken(param2);
    int var44 = param2.nextReceiver;
    [J var46 = param2.duration;
    int var47 = param2.nextReceiver;
    var48 = var47 sub 1;
    arraystore 46[48] = 13;
    boolean var50 = param2.timeoutExempt;
    BroadcastConstants var51 = this.mConstants;
    long var52 = var51.SLOW_TIME;
    var54 = var52 lt 0;
    BroadcastConstants var55 = this.mConstants;
    long var56 = var55.SLOW_TIME;
    var57 = var13 lt var56;
    ProcessRecord var58 = param2.curApp;
    int var59 = var58.uid;
    boolean var61 = UserHandle.isCore(var59);
    ProcessRecord var62 = param2.curApp;
    BroadcastDispatcher var74 = this.mDispatcher;
    ProcessRecord var75 = param2.curApp;
    int var76 = var75.uid;
    var74.startDeferring(var76);
    param2.receiver = 0;
    Intent var82 = param2.intent;
    Intent var84 = var82.setComponent(0);
    ProcessRecord var85 = param2.curApp;
    ProcessRecord var86 = param2.curApp;
    ArraySet var87 = var86.curReceivers;
    boolean var89 = var87.contains(param2);
    ProcessRecord var90 = param2.curApp;
    ArraySet var91 = var90.curReceivers;
    boolean var93 = var91.remove(param2);
    BroadcastFilter var97 = param2.curFilter;
    BroadcastFilter var98 = param2.curFilter;
    ReceiverList var99 = var98.receiverList;
    var99.curBroadcast = 0;
    param2.curFilter = 0;
    param2.curReceiver = 0;<PATH_SEP>boolean var10 = hasFileDescriptors();
    long var15 = Binder.clearCallingIdentity();
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var19 = isOnOffloadQueue(param7);
    BroadcastQueue var24 = this.mOffloadBroadcastQueue;
    BroadcastRecord var31 = var29.getMatchingOrderedReceiver(param2);
    BroadcastQueue var32 = var31.queue;
    boolean var35 = var32.finishReceiverLocked(var31,param3,param4,param5,param6,1);
    int var8 = param2.state;
    ActivityInfo var9 = param2.curReceiver;
    long var11 = SystemClock.uptimeMillis();
    long var12 = param2.receiverTime;
    var13 = var11 sub var12;
    param2.state = 0;
    String var21 = this.mQueueName;
    boolean var33 = param2.allowBackgroundActivityStarts;
    ProcessRecord var34 = param2.curApp;
    BroadcastConstants var35 = this.mConstants;
    long var36 = var35.ALLOW_BG_ACTIVITY_START_TIMEOUT;
    var37 = var13 lt var36;
    ProcessRecord var40 = param2.curApp;
    var40.removeAllowBackgroundActivityStartsToken(param2);
    int var44 = param2.nextReceiver;
    [J var46 = param2.duration;
    int var47 = param2.nextReceiver;
    var48 = var47 sub 1;
    arraystore 46[48] = 13;
    boolean var50 = param2.timeoutExempt;
    BroadcastConstants var51 = this.mConstants;
    long var52 = var51.SLOW_TIME;
    var54 = var52 lt 0;
    BroadcastConstants var55 = this.mConstants;
    long var56 = var55.SLOW_TIME;
    var57 = var13 lt var56;
    ProcessRecord var58 = param2.curApp;
    int var59 = var58.uid;
    boolean var61 = UserHandle.isCore(var59);
    ProcessRecord var62 = param2.curApp;
    BroadcastDispatcher var74 = this.mDispatcher;
    ProcessRecord var75 = param2.curApp;
    int var76 = var75.uid;
    var74.startDeferring(var76);
    param2.receiver = 0;
    Intent var82 = param2.intent;
    Intent var84 = var82.setComponent(0);
    ProcessRecord var85 = param2.curApp;
    ProcessRecord var86 = param2.curApp;
    ArraySet var87 = var86.curReceivers;
    boolean var89 = var87.contains(param2);
    ProcessRecord var90 = param2.curApp;
    ArraySet var91 = var90.curReceivers;
    boolean var93 = var91.remove(param2);
    BroadcastFilter var97 = param2.curFilter;
    BroadcastFilter var98 = param2.curFilter;
    ReceiverList var99 = var98.receiverList;
    var99.curBroadcast = 0;
    param2.curFilter = 0;
    param2.curReceiver = 0;
    param2.curApp = 0;
    this.mPendingBroadcast = 0;
}