// API: bindBackupAgent
// Service: ActivityManagerService_4

public void bindBackupAgent() {
    boolean var10 = equals(param2);
    IPackageManager var14 = AppGlobals.getPackageManager();
    ApplicationInfo var17 = var14.getApplicationInfo(param2,1024,var12);
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var23 = AppGlobals.getPackageManager();
    String var24 = var20.packageName;
    int var25 = var20.uid;
    int var27 = UserHandle.getUserId(var25);
    var23.setPackageStoppedState(var24,0,var27);
    BackupRecord var60 = new BackupRecord();
    ComponentName var65 = new ComponentName();
    String var66 = var20.packageName;
    String var67 = var20.backupAgentName;
    String var73 = var20.processName;
    HostingRecord var74 = new HostingRecord();
    ProcessRecord var83 = startProcessLocked(var73,var20,0,0,var74,0,0,0);
    ProcessList var10 = this.mProcessList;
    ProcessRecord var13 = var10.startProcessLocked(param2,param3,param4,param5,param6,param7,param8,0,param9,0,0,0,0);
    long var16 = SystemClock.elapsedRealtime();
    int var19 = param3.uid;
    ProcessRecord var21 = getProcessRecordLocked(param2,var19,param10);
    ProcessList$MyProcessMap var30 = this.mProcessNames;
    Object var32 = var30.get(param2,param3);
    ProcessRecord var33 = (ProcessRecord) var32;
    ActivityManagerService var34 = this.mService;
    int var35 = var34.mLastMemoryLevel;
    Lcom/android/server/am/ProcessRecord var33<PATH_SEP>boolean var10 = equals(param2);
    IPackageManager var14 = AppGlobals.getPackageManager();
    ApplicationInfo var17 = var14.getApplicationInfo(param2,1024,var12);
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var23 = AppGlobals.getPackageManager();
    String var24 = var20.packageName;
    int var25 = var20.uid;
    int var27 = UserHandle.getUserId(var25);
    var23.setPackageStoppedState(var24,0,var27);
    BackupRecord var60 = new BackupRecord();
    ComponentName var65 = new ComponentName();
    String var66 = var20.packageName;
    String var67 = var20.backupAgentName;
    String var73 = var20.processName;
    HostingRecord var74 = new HostingRecord();
    ProcessRecord var83 = startProcessLocked(var73,var20,0,0,var74,0,0,0);
    ProcessList var10 = this.mProcessList;
    ProcessRecord var13 = var10.startProcessLocked(param2,param3,param4,param5,param6,param7,param8,0,param9,0,0,0,0);
    long var16 = SystemClock.elapsedRealtime();
    int var19 = param3.uid;
    ProcessRecord var21 = getProcessRecordLocked(param2,var19,param10);
    checkSlow(var16,startProcess: after getProcessRecord);{checkSlow(var16,startProcess: after getProcessRecord);};
    var25 = param5 and 4;
    ActivityManagerService var51 = this.mService;
    AppErrors var52 = var51.mAppErrors;
    boolean var54 = var52.isBadProcessLocked(param3);
    int var62 = var59.pid;
    boolean var63 = var59.killed;
    IApplicationThread var65 = var59.thread;
    String var151 = param3.packageName;
    long var152 = param3.longVersionCode;
    ActivityManagerService var153 = this.mService;
    ProcessStatsService var154 = var153.mProcessStats;
    boolean var156 = var59.addPackage(var151,var152,var154);
    ProcessRecord$PackageList var5 = this.pkgList;
    boolean var7 = var5.containsKey(param2);
    boolean 0<PATH_SEP>boolean var10 = equals(param2);
    IPackageManager var14 = AppGlobals.getPackageManager();
    ApplicationInfo var17 = var14.getApplicationInfo(param2,1024,var12);
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var23 = AppGlobals.getPackageManager();
    String var24 = var20.packageName;
    int var25 = var20.uid;
    int var27 = UserHandle.getUserId(var25);
    var23.setPackageStoppedState(var24,0,var27);
    BackupRecord var60 = new BackupRecord();
    ComponentName var65 = new ComponentName();
    String var66 = var20.packageName;
    String var67 = var20.backupAgentName;
    String var73 = var20.processName;
    HostingRecord var74 = new HostingRecord();
    ProcessRecord var83 = startProcessLocked(var73,var20,0,0,var74,0,0,0);
    ProcessList var10 = this.mProcessList;
    ProcessRecord var13 = var10.startProcessLocked(param2,param3,param4,param5,param6,param7,param8,0,param9,0,0,0,0);
    long var16 = SystemClock.elapsedRealtime();
    int var19 = param3.uid;
    ProcessRecord var21 = getProcessRecordLocked(param2,var19,param10);
    checkSlow(var16,startProcess: after getProcessRecord);{checkSlow(var16,startProcess: after getProcessRecord);};
    var25 = param5 and 4;
    ActivityManagerService var51 = this.mService;
    AppErrors var52 = var51.mAppErrors;
    boolean var54 = var52.isBadProcessLocked(param3);
    int var62 = var59.pid;
    boolean var63 = var59.killed;
    IApplicationThread var65 = var59.thread;
    String var151 = param3.packageName;
    long var152 = param3.longVersionCode;
    ActivityManagerService var153 = this.mService;
    ProcessStatsService var154 = var153.mProcessStats;
    boolean var156 = var59.addPackage(var151,var152,var154);
    ProcessRecord$PackageList var5 = this.pkgList;
    boolean var7 = var5.containsKey(param2);
    ProcessStats$ProcessStateHolder var9 = new ProcessStats$ProcessStateHolder();
    ProcessState var11 = this.baseProcessTracker;
    ApplicationInfo var15 = this.info;
    int var16 = var15.uid;
    String var17 = this.processName;
    updateProcessStateHolderLocked(var9,param2,var16,param3,var17);
    ProcessRecord$PackageList var19 = this.pkgList;
    ProcessStats$ProcessStateHolder var21 = var19.put(param2,var9);<PATH_SEP>boolean var10 = equals(param2);
    IPackageManager var14 = AppGlobals.getPackageManager();
    ApplicationInfo var17 = var14.getApplicationInfo(param2,1024,var12);
    ActivityManagerService.boostPriorityForLockedSection();
    IPackageManager var23 = AppGlobals.getPackageManager();
    String var24 = var20.packageName;
    int var25 = var20.uid;
    int var27 = UserHandle.getUserId(var25);
    var23.setPackageStoppedState(var24,0,var27);
    BackupRecord var60 = new BackupRecord();
    ComponentName var65 = new ComponentName();
    String var66 = var20.packageName;
    String var67 = var20.backupAgentName;
    String var73 = var20.processName;
    HostingRecord var74 = new HostingRecord();
    ProcessRecord var83 = startProcessLocked(var73,var20,0,0,var74,0,0,0);
    ProcessList var10 = this.mProcessList;
    ProcessRecord var13 = var10.startProcessLocked(param2,param3,param4,param5,param6,param7,param8,0,param9,0,0,0,0);
    long var16 = SystemClock.elapsedRealtime();
    int var19 = param3.uid;
    ProcessRecord var21 = getProcessRecordLocked(param2,var19,param10);
    ProcessList$MyProcessMap var6 = this.mProcessNames;
    ArrayMap var8 = var6.getMap();
    Object var10 = var8.get(param2);
    SparseArray var11 = (SparseArray) var10;
    int var14 = var11.size();
    ProcessList$MyProcessMap var30 = this.mProcessNames;
    Object var32 = var30.get(param2,param3);
    ProcessRecord var33 = (ProcessRecord) var32;
    ActivityManagerService var34 = this.mService;
    int var35 = var34.mLastMemoryLevel;
    int var36 = var33.setProcState;
    long var38 = var33.lastCachedPss;
    long var40 = getCachedRestoreThresholdKb();
    var41 = var38 lt var40;
    ProcessState var42 = var33.baseProcessTracker;
    ProcessState var44 = var33.baseProcessTracker;
    ProcessRecord$PackageList var45 = var33.pkgList;
    ArrayMap var46 = var45.mPkgList;
    long var47 = var33.lastCachedPss;
    var44.reportCachedKill(var46,var47);
}