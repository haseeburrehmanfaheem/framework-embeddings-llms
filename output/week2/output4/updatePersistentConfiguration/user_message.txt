// API: updatePersistentConfiguration
// Service: ActivityManagerService_2

public void updatePersistentConfiguration() {
    int var12 = UserHandle.getCallingUserId();
    ActivityTaskManagerService var13 = this.mActivityTaskManager;
    var13.updatePersistentConfiguration(param2,var12);
    long var5 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var6 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var11 = updateConfigurationLocked(param2,0,0,1,param3,0);
    boolean var10 = updateConfigurationLocked(param2,param3,param4,param5,param6,param7,0);
    WindowManagerService var11 = this.mWindowManager;
    boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);{boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);};
    WindowManagerService var28 = this.mWindowManager;
    var28.continueSurfaceLayout();
    param8.changes = var15;<PATH_SEP>int var12 = UserHandle.getCallingUserId();
    ActivityTaskManagerService var13 = this.mActivityTaskManager;
    var13.updatePersistentConfiguration(param2,var12);
    long var5 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var6 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var11 = updateConfigurationLocked(param2,0,0,1,param3,0);
    boolean var10 = updateConfigurationLocked(param2,param3,param4,param5,param6,param7,0);
    WindowManagerService var11 = this.mWindowManager;
    var11.deferSurfaceLayout();
    boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);{boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);};
    WindowManagerService var28 = this.mWindowManager;
    var28.continueSurfaceLayout();
    param8.changes = var15;<PATH_SEP>int var12 = UserHandle.getCallingUserId();
    ActivityTaskManagerService var13 = this.mActivityTaskManager;
    var13.updatePersistentConfiguration(param2,var12);
    long var5 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var6 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var11 = updateConfigurationLocked(param2,0,0,1,param3,0);
    boolean var10 = updateConfigurationLocked(param2,param3,param4,param5,param6,param7,0);
    WindowManagerService var11 = this.mWindowManager;
    var11.deferSurfaceLayout();
    int var14 = updateGlobalConfigurationLocked(param2,param4,param5,param6,param7);
    boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);{boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);};
    WindowManagerService var28 = this.mWindowManager;
    param8.changes = var15;<PATH_SEP>int var12 = UserHandle.getCallingUserId();
    ActivityTaskManagerService var13 = this.mActivityTaskManager;
    var13.updatePersistentConfiguration(param2,var12);
    long var5 = Binder.clearCallingIdentity();
    WindowManagerGlobalLock var6 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var11 = updateConfigurationLocked(param2,0,0,1,param3,0);
    boolean var10 = updateConfigurationLocked(param2,param3,param4,param5,param6,param7,0);
    WindowManagerService var11 = this.mWindowManager;
    var11.deferSurfaceLayout();
    int var14 = updateGlobalConfigurationLocked(param2,param4,param5,param6,param7);
    boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);{boolean var19 = ensureConfigAndVisibilityAfterUpdate(param3,var15);};
    WindowManagerService var28 = this.mWindowManager;
    param8.changes = var15;
    param8.activityRelaunched = var31;
}