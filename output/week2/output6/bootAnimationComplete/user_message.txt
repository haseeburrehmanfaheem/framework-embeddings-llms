// API: bootAnimationComplete
// Service: ActivityManagerService_1

public void bootAnimationComplete() {
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var3 = this.mCallFinishBooting;
    this.mBootAnimationComplete = 1;
    ActivityManagerService.resetPriorityAfterLockedSection();
    finishBooting();
    Trace.traceBegin(64,FinishBooting);
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var6 = this.mBootAnimationComplete;
    this.mCallFinishBooting = 0;
    ActivityManagerService.resetPriorityAfterLockedSection();
    ArraySet var10 = new ArraySet();
    String var12 = SUPPORTED_ABIS;
    13 = arraylength 12;
    IntentFilter var65 = new IntentFilter();
    var65.addAction(android.intent.action.QUERY_PACKAGE_RESTART);
    var65.addDataScheme(package);
    Context var71 = this.mContext;
    ActivityManagerService$10 var72 = new ActivityManagerService$10();
    Intent var75 = var71.registerReceiver(var72,var65);
    IntentFilter var76 = new IntentFilter();
    var76.addAction(com.android.server.am.DELETE_DUMPHEAP);
    Context var80 = this.mContext;
    ActivityManagerService$11 var81 = new ActivityManagerService$11();
    Intent var84 = var80.registerReceiver(var81,var76);
    IStorageManager var89 = PackageHelper.getStorageManager();
    var89.commitChanges();
    SystemServiceManager var107 = this.mSystemServiceManager;
    var107.startBootPhase(1000);
    ActivityManagerService.boostPriorityForLockedSection();
    ArrayList var111 = this.mProcessesOnHold;
    int var113 = var111.size();
    ArrayList var114 = new ArrayList();
    ArrayList var115 = this.mProcessesOnHold;
    int var139 = this.mFactoryTest;
    ActivityManagerService$MainHandler var140 = this.mHandler;
    Message var143 = var140.obtainMessage(27);
    ActivityManagerService$MainHandler var144 = this.mHandler;
    ActivityManagerConstants var145 = this.mConstants;
    long var146 = var145.POWER_CHECK_INTERVAL;
    boolean var148 = var144.sendMessageDelayed(var143,var146);
    SystemProperties.set(sys.boot_completed,1);
    Optional var154 = VoldProperties.decrypt();
    Object var157 = var154.orElse();
    boolean var159 = equals(var157);
    Optional var161 = VoldProperties.encrypt_progress();
    Object var163 = var161.orElse();
    boolean var165 = equals(var163);
    SystemProperties.set(dev.bootcomplete,1);
    UserController var176 = this.mUserController;
    ActivityManagerService$12 var177 = new ActivityManagerService$12();
    var176.sendBootCompleted(var177);
    Object var3 = this.mLock;
    SparseArray var4 = this.mStartedUsers;
    SparseArray var6 = var4.clone();
    int var11 = var6.size();
    Object var13 = var6.valueAt(var18);
    UserState var14 = (UserState) var13;
    finishUserBoot(var14,param2);
    UserHandle var4 = param2.mHandle;
    int var6 = var4.getIdentifier();
    Object var19 = this.mLock;
    SparseArray var20 = this.mStartedUsers;
    Object var22 = var20.get(var6);
    boolean var30 = setState(0,1);
    UserController$Injector var31 = this.mInjector;
    UserManagerInternal var33 = var31.getUserManagerInternal();
    int var34 = param2.state;
    var33.setUserState(var6,var34);
    UserController$Injector var36 = this.mInjector;
    boolean var38 = var36.isRuntimeRestarted();
    UserController$Injector var39 = this.mInjector;
    boolean var41 = var39.isFirstBootOrUpgrade();
    long var43 = SystemClock.elapsedRealtime();
    var45 = var43 div 1000;
    46 = conversion(I) 45;
    UserController$Injector var47 = this.mInjector;
    Context var49 = var47.getContext();
    UserController$Injector var71 = this.mInjector;
    UserManagerService var73 = var71.getUserManager();
    boolean var75 = var73.isPreCreated(var6);
    Handler var76 = this.mHandler;
    Message var79 = var76.obtainMessage(110,var6,0);
    boolean var81 = var76.sendMessage(var79);
    Intent var82 = new Intent();
    Intent var87 = var82.putExtra(android.intent.extra.user_handle,var6);<PATH_SEP>ActivityManagerService.boostPriorityForLockedSection();
    boolean var3 = this.mCallFinishBooting;
    this.mBootAnimationComplete = 1;
    ActivityManagerService.resetPriorityAfterLockedSection();
    finishBooting();
    Trace.traceBegin(64,FinishBooting);
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var6 = this.mBootAnimationComplete;
    this.mCallFinishBooting = 0;
    ActivityManagerService.resetPriorityAfterLockedSection();
    ArraySet var10 = new ArraySet();
    String var12 = SUPPORTED_ABIS;
    13 = arraylength 12;
    IntentFilter var65 = new IntentFilter();
    var65.addAction(android.intent.action.QUERY_PACKAGE_RESTART);
    var65.addDataScheme(package);
    Context var71 = this.mContext;
    ActivityManagerService$10 var72 = new ActivityManagerService$10();
    Intent var75 = var71.registerReceiver(var72,var65);
    IntentFilter var76 = new IntentFilter();
    var76.addAction(com.android.server.am.DELETE_DUMPHEAP);
    Context var80 = this.mContext;
    ActivityManagerService$11 var81 = new ActivityManagerService$11();
    Intent var84 = var80.registerReceiver(var81,var76);
    IStorageManager var89 = PackageHelper.getStorageManager();
    var89.commitChanges();
    SystemServiceManager var107 = this.mSystemServiceManager;
    var107.startBootPhase(1000);
    ActivityManagerService.boostPriorityForLockedSection();
    ArrayList var111 = this.mProcessesOnHold;
    int var113 = var111.size();
    ArrayList var114 = new ArrayList();
    ArrayList var115 = this.mProcessesOnHold;
    int var139 = this.mFactoryTest;
    ActivityManagerService$MainHandler var140 = this.mHandler;
    Message var143 = var140.obtainMessage(27);
    ActivityManagerService$MainHandler var144 = this.mHandler;
    ActivityManagerConstants var145 = this.mConstants;
    long var146 = var145.POWER_CHECK_INTERVAL;
    boolean var148 = var144.sendMessageDelayed(var143,var146);
    SystemProperties.set(sys.boot_completed,1);
    Optional var154 = VoldProperties.decrypt();
    Object var157 = var154.orElse();
    boolean var159 = equals(var157);
    Optional var161 = VoldProperties.encrypt_progress();
    Object var163 = var161.orElse();
    boolean var165 = equals(var163);
    SystemProperties.set(dev.bootcomplete,1);
    UserController var176 = this.mUserController;
    ActivityManagerService$12 var177 = new ActivityManagerService$12();
    var176.sendBootCompleted(var177);
    Object var3 = this.mLock;
    SparseArray var4 = this.mStartedUsers;
    SparseArray var6 = var4.clone();
    int var11 = var6.size();
    Object var13 = var6.valueAt(var18);
    UserState var14 = (UserState) var13;
    finishUserBoot(var14,param2);
    UserHandle var4 = param2.mHandle;
    int var6 = var4.getIdentifier();
    Object var19 = this.mLock;
    SparseArray var20 = this.mStartedUsers;
    Object var22 = var20.get(var6);
    boolean var30 = setState(0,1);
    UserController$Injector var31 = this.mInjector;
    UserManagerInternal var33 = var31.getUserManagerInternal();
    int var34 = param2.state;
    var33.setUserState(var6,var34);
    UserController$Injector var36 = this.mInjector;
    boolean var38 = var36.isRuntimeRestarted();<PATH_SEP>ActivityManagerService.boostPriorityForLockedSection();
    boolean var3 = this.mCallFinishBooting;
    this.mBootAnimationComplete = 1;
    ActivityManagerService.resetPriorityAfterLockedSection();
    finishBooting();
    Trace.traceBegin(64,FinishBooting);
    ActivityManagerService.boostPriorityForLockedSection();
    boolean var6 = this.mBootAnimationComplete;
    this.mCallFinishBooting = 0;
    ActivityManagerService.resetPriorityAfterLockedSection();
    ArraySet var10 = new ArraySet();
    String var12 = SUPPORTED_ABIS;
    13 = arraylength 12;
    IntentFilter var65 = new IntentFilter();
    var65.addAction(android.intent.action.QUERY_PACKAGE_RESTART);
    var65.addDataScheme(package);
    Context var71 = this.mContext;
    ActivityManagerService$10 var72 = new ActivityManagerService$10();
    Intent var75 = var71.registerReceiver(var72,var65);
    IntentFilter var76 = new IntentFilter();
    var76.addAction(com.android.server.am.DELETE_DUMPHEAP);
    Context var80 = this.mContext;
    ActivityManagerService$11 var81 = new ActivityManagerService$11();
    Intent var84 = var80.registerReceiver(var81,var76);
    IStorageManager var89 = PackageHelper.getStorageManager();
    var89.commitChanges();
    SystemServiceManager var107 = this.mSystemServiceManager;
    var107.startBootPhase(1000);
    ActivityManagerService.boostPriorityForLockedSection();
    ArrayList var111 = this.mProcessesOnHold;
    int var113 = var111.size();
    ArrayList var114 = new ArrayList();
    ArrayList var115 = this.mProcessesOnHold;
    int var139 = this.mFactoryTest;
    ActivityManagerService$MainHandler var140 = this.mHandler;
    Message var143 = var140.obtainMessage(27);
    ActivityManagerService$MainHandler var144 = this.mHandler;
    ActivityManagerConstants var145 = this.mConstants;
    long var146 = var145.POWER_CHECK_INTERVAL;
    boolean var148 = var144.sendMessageDelayed(var143,var146);
    SystemProperties.set(sys.boot_completed,1);
    Optional var154 = VoldProperties.decrypt();
    Object var157 = var154.orElse();
    boolean var159 = equals(var157);
    Optional var161 = VoldProperties.encrypt_progress();
    Object var163 = var161.orElse();
    boolean var165 = equals(var163);
    SystemProperties.set(dev.bootcomplete,1);
    UserController var176 = this.mUserController;
    ActivityManagerService$12 var177 = new ActivityManagerService$12();
    var176.sendBootCompleted(var177);
    Object var3 = this.mLock;
    SparseArray var4 = this.mStartedUsers;
    SparseArray var6 = var4.clone();
    int var11 = var6.size();
    Object var13 = var6.valueAt(var18);
    UserState var14 = (UserState) var13;
    finishUserBoot(var14,param2);
    UserHandle var4 = param2.mHandle;
    int var6 = var4.getIdentifier();
    Object var19 = this.mLock;
    SparseArray var20 = this.mStartedUsers;
    Object var22 = var20.get(var6);
    boolean var30 = setState(0,1);
    UserController$Injector var31 = this.mInjector;
    UserManagerInternal var33 = var31.getUserManagerInternal();
    int var34 = param2.state;
    var33.setUserState(var6,var34);
    UserController$Injector var71 = this.mInjector;
    UserManagerService var73 = var71.getUserManager();
    boolean var75 = var73.isPreCreated(var6);
    Handler var76 = this.mHandler;
    Message var79 = var76.obtainMessage(110,var6,0);
    boolean var81 = var76.sendMessage(var79);
    Intent var82 = new Intent();
    Intent var87 = var82.putExtra(android.intent.extra.user_handle,var6);
    Intent var90 = var82.addFlags(150994944);
    UserController$Injector var91 = this.mInjector;
    String var93 = new String(1);
    int var95 = MY_PID;
    int var98 = Binder.getCallingUid();
    int var100 = Binder.getCallingPid();
    int var102 = var91.broadcastIntent(var82,0,param3,0,0,0,var93,-1,0,1,0,var95,1000,var98,var100,var6);
    UserController$Injector var111 = this.mInjector;
    UserManagerService var113 = var111.getUserManager();
    UserController$Injector var118 = this.mInjector;
    UserManagerService var120 = var118.getUserManager();
    UserInfo var122 = var120.getProfileParent(var6);
}