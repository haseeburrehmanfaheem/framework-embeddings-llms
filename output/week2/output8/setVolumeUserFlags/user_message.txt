// API: setVolumeUserFlags
// Service: StorageManagerService_4

public void setVolumeUserFlags() {
    Object var8 = Preconditions.checkNotNull(param2);{Object var8 = Preconditions.checkNotNull(param2);};
    Object var9 = this.mLock;
    ArrayMap var10 = this.mRecords;
    Object var12 = var10.get(param2);
    VolumeRecord var13 = (VolumeRecord) var12;
    int var14 = var13.userFlags;
    15 = bitnot 4;
    var16 = var14 and var15;
    var17 = param3 and param4;
    var18 = var16 or var17;
    var13.userFlags = var18;
    StorageManagerService$Callbacks var19 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var19,var13);{StorageManagerService$Callbacks.access$4300(var19,var13);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Object var8 = Preconditions.checkNotNull(param2);{Object var8 = Preconditions.checkNotNull(param2);};
    Object var9 = this.mLock;
    ArrayMap var10 = this.mRecords;
    Object var12 = var10.get(param2);
    VolumeRecord var13 = (VolumeRecord) var12;
    int var14 = var13.userFlags;
    15 = bitnot 4;
    var16 = var14 and var15;
    var17 = param3 and param4;
    var18 = var16 or var17;
    var13.userFlags = var18;
    StorageManagerService$Callbacks var19 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var19,var13);{StorageManagerService$Callbacks.access$4300(var19,var13);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Object var8 = Preconditions.checkNotNull(param2);{Object var8 = Preconditions.checkNotNull(param2);};
    Object var9 = this.mLock;
    ArrayMap var10 = this.mRecords;
    Object var12 = var10.get(param2);
    VolumeRecord var13 = (VolumeRecord) var12;
    int var14 = var13.userFlags;
    15 = bitnot 4;
    var16 = var14 and var15;
    var17 = param3 and param4;
    var18 = var16 or var17;
    var13.userFlags = var18;
    StorageManagerService$Callbacks var19 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var19,var13);{StorageManagerService$Callbacks.access$4300(var19,var13);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Object var8 = Preconditions.checkNotNull(param2);{Object var8 = Preconditions.checkNotNull(param2);};
    Object var9 = this.mLock;
    ArrayMap var10 = this.mRecords;
    Object var12 = var10.get(param2);
    VolumeRecord var13 = (VolumeRecord) var12;
    int var14 = var13.userFlags;
    15 = bitnot 4;
    var16 = var14 and var15;
    var17 = param3 and param4;
    var18 = var16 or var17;
    var13.userFlags = var18;
    StorageManagerService$Callbacks var19 = this.mCallbacks;
    StorageManagerService$Callbacks.access$4300(var19,var13);{StorageManagerService$Callbacks.access$4300(var19,var13);};
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
    append(58);
    append(param3);
}