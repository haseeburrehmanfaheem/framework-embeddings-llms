// API: allocateAppWidgetId
// Service: AppWidgetServiceImpl_3

public void allocateAppWidgetId() {
    int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var26 = this.mSecurityPolicy;
    boolean var28 = var26.isInstantAppLocked(param2,var5);
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    SparseIntArray var30 = this.mNextAppWidgetIds;
    int var32 = var30.indexOfKey(var5);
    SparseIntArray var33 = this.mNextAppWidgetIds;
    var33.put(var5,1);
    int var39 = incrementAndGetAppWidgetIdLocked(var5);
    AppWidgetServiceImpl$HostId var40 = new AppWidgetServiceImpl$HostId();
    int var42 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var45 = lookupOrAddHostLocked(var40);
    AppWidgetServiceImpl$Widget var46 = new AppWidgetServiceImpl$Widget();
    var46.appWidgetId = var39;
    var46.host = var45;
    ArrayList var48 = var45.widgets;
    boolean var50 = var48.add(var46);
    addWidgetLocked(var46);
    ArrayList var3 = this.mWidgets;
    boolean var5 = var3.add(param2);
    onWidgetProviderAddedOrChangedLocked(param2);
    AppWidgetServiceImpl$Provider var3 = param2.provider;
    AppWidgetServiceImpl$Provider var5 = param2.provider;
    int var7 = var5.getUserId();
    SparseArray var8 = this.mWidgetPackages;
    Object var10 = var8.get(var7);
    ArraySet var11 = (ArraySet) var10;
    SparseArray var12 = this.mWidgetPackages;
    ArraySet var13 = new ArraySet();
    var12.put(var7,var13);
    AppWidgetServiceImpl$Provider var18 = param2.provider;
    AppWidgetProviderInfo var19 = var18.info;
    ComponentName var20 = var19.provider;
    String var22 = var20.getPackageName();
    boolean var24 = var16.add(var22);
    AppWidgetServiceImpl$Provider var25 = param2.provider;
    boolean var27 = var25.isMaskedLocked();
    AppWidgetServiceImpl$Provider var30 = param2.provider;
    maskWidgetsViewsLocked(var30,param2);
    ArrayList var4 = param2.widgets;
    int var6 = var4.size();
    AppWidgetProviderInfo var8 = param2.info;
    ComponentName var9 = var8.provider;
    String var11 = var9.getPackageName();
    int var13 = getUserId();
    Bitmap var15 = createMaskedWidgetBitmap(var11,var13);
    long var17 = Binder.clearCallingIdentity();
    boolean var18 = param2.maskedBySuspendedPackage;
    UserManager var29 = this.mUserManager;
    UserInfo var31 = var29.getUserInfo(var13);
    boolean var33 = var31.isManagedProfile();
    PackageManagerInternal var34 = this.mPackageManagerInternal;
    String var36 = var34.getSuspendingPackage(var11,var13);
    boolean var39 = equals(var36);
    DevicePolicyManagerInternal var45 = this.mDevicePolicyManagerInternal;
    Intent var47 = var45.createShowAdminSupportIntent(var13,1);
    ArrayList var58 = param2.widgets;
    Object var60 = var58.get(var85);
    AppWidgetServiceImpl$Widget var61 = (AppWidgetServiceImpl$Widget) var60;
    Context var62 = this.mContext;
    int var63 = var61.appWidgetId;
    PendingIntent var66 = PendingIntent.getActivity(var62,var63,var55,134217728);
    RemoteViews var72 = createMaskedWidgetRemoteViews(var15,var53,var68);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var26 = this.mSecurityPolicy;
    boolean var28 = var26.isInstantAppLocked(param2,var5);
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    SparseIntArray var30 = this.mNextAppWidgetIds;
    int var32 = var30.indexOfKey(var5);
    SparseIntArray var33 = this.mNextAppWidgetIds;
    var33.put(var5,1);
    int var39 = incrementAndGetAppWidgetIdLocked(var5);
    AppWidgetServiceImpl$HostId var40 = new AppWidgetServiceImpl$HostId();
    int var42 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var45 = lookupOrAddHostLocked(var40);
    AppWidgetServiceImpl$Widget var46 = new AppWidgetServiceImpl$Widget();
    var46.appWidgetId = var39;
    var46.host = var45;
    ArrayList var48 = var45.widgets;
    boolean var50 = var48.add(var46);
    addWidgetLocked(var46);
    ArrayList var3 = this.mWidgets;
    boolean var5 = var3.add(param2);
    onWidgetProviderAddedOrChangedLocked(param2);
    AppWidgetServiceImpl$Provider var3 = param2.provider;
    AppWidgetServiceImpl$Provider var5 = param2.provider;
    int var7 = var5.getUserId();
    SparseArray var8 = this.mWidgetPackages;
    Object var10 = var8.get(var7);
    ArraySet var11 = (ArraySet) var10;
    SparseArray var12 = this.mWidgetPackages;
    ArraySet var13 = new ArraySet();
    var12.put(var7,var13);
    AppWidgetServiceImpl$Provider var18 = param2.provider;
    AppWidgetProviderInfo var19 = var18.info;
    ComponentName var20 = var19.provider;
    String var22 = var20.getPackageName();
    boolean var24 = var16.add(var22);
    AppWidgetServiceImpl$Provider var25 = param2.provider;
    boolean var27 = var25.isMaskedLocked();
    AppWidgetServiceImpl$Provider var30 = param2.provider;
    maskWidgetsViewsLocked(var30,param2);
    ArrayList var4 = param2.widgets;
    int var6 = var4.size();
    AppWidgetProviderInfo var8 = param2.info;
    ComponentName var9 = var8.provider;
    String var11 = var9.getPackageName();
    int var13 = getUserId();
    Bitmap var15 = createMaskedWidgetBitmap(var11,var13);
    long var17 = Binder.clearCallingIdentity();
    boolean var18 = param2.maskedBySuspendedPackage;
    UserManager var29 = this.mUserManager;
    UserInfo var31 = var29.getUserInfo(var13);
    boolean var33 = var31.isManagedProfile();
    PackageManagerInternal var34 = this.mPackageManagerInternal;
    String var36 = var34.getSuspendingPackage(var11,var13);
    boolean var39 = equals(var36);
    PackageManagerInternal var40 = this.mPackageManagerInternal;
    Intent var44 = SuspendedAppActivity.createSuspendedAppInterceptIntent(var11,var36,var42,var13);
    ArrayList var58 = param2.widgets;
    Object var60 = var58.get(var85);
    AppWidgetServiceImpl$Widget var61 = (AppWidgetServiceImpl$Widget) var60;
    Context var62 = this.mContext;
    int var63 = var61.appWidgetId;
    PendingIntent var66 = PendingIntent.getActivity(var62,var63,var55,134217728);
    RemoteViews var72 = createMaskedWidgetRemoteViews(var15,var53,var68);
    boolean var74 = AppWidgetServiceImpl$Widget.access$900(var61,var72);{boolean var74 = AppWidgetServiceImpl$Widget.access$900(var61,var72);};
    RemoteViews var76 = var61.getEffectiveViewsLocked();
    scheduleNotifyUpdateAppWidgetLocked(var61,var76);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var26 = this.mSecurityPolicy;
    boolean var28 = var26.isInstantAppLocked(param2,var5);
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    SparseIntArray var30 = this.mNextAppWidgetIds;
    int var32 = var30.indexOfKey(var5);
    SparseIntArray var33 = this.mNextAppWidgetIds;
    var33.put(var5,1);
    int var39 = incrementAndGetAppWidgetIdLocked(var5);
    AppWidgetServiceImpl$HostId var40 = new AppWidgetServiceImpl$HostId();
    int var42 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var45 = lookupOrAddHostLocked(var40);
    AppWidgetServiceImpl$Host var4 = lookupHostLocked(param2);
    ArrayList var3 = this.mHosts;
    int var5 = var3.size();
    ArrayList var7 = this.mHosts;
    Object var9 = var7.get(var16);
    AppWidgetServiceImpl$Host var10 = (AppWidgetServiceImpl$Host) var9;
    AppWidgetServiceImpl$HostId var11 = var10.id;
    boolean var13 = var11.equals(param2);
    Class var6 = getClass();
    Class var8 = getClass();
    AppWidgetServiceImpl$HostId var9 = (AppWidgetServiceImpl$HostId) param2;
    int var10 = this.uid;
    int var11 = var9.uid;
    int var12 = this.hostId;
    int var13 = var9.hostId;
    String var14 = this.packageName;
    String var15 = var9.packageName;
    boolean var17 = var14.equals(var15);
    boolean 1<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    AppWidgetServiceImpl$SecurityPolicy var26 = this.mSecurityPolicy;
    boolean var28 = var26.isInstantAppLocked(param2,var5);
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    SparseIntArray var30 = this.mNextAppWidgetIds;
    int var32 = var30.indexOfKey(var5);
    SparseIntArray var33 = this.mNextAppWidgetIds;
    var33.put(var5,1);
    int var39 = incrementAndGetAppWidgetIdLocked(var5);
    AppWidgetServiceImpl$HostId var40 = new AppWidgetServiceImpl$HostId();
    int var42 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var45 = lookupOrAddHostLocked(var40);
    AppWidgetServiceImpl$Widget var46 = new AppWidgetServiceImpl$Widget();
    var46.appWidgetId = var39;
    var46.host = var45;
    ArrayList var48 = var45.widgets;
    boolean var50 = var48.add(var46);
    addWidgetLocked(var46);
    ArrayList var3 = this.mWidgets;
    boolean var5 = var3.add(param2);
    onWidgetProviderAddedOrChangedLocked(param2);
    AppWidgetServiceImpl$Provider var3 = param2.provider;
    AppWidgetServiceImpl$Provider var5 = param2.provider;
    int var7 = var5.getUserId();
    SparseArray var8 = this.mWidgetPackages;
    Object var10 = var8.get(var7);
    ArraySet var11 = (ArraySet) var10;
    SparseArray var12 = this.mWidgetPackages;
    ArraySet var13 = new ArraySet();
    var12.put(var7,var13);
    AppWidgetServiceImpl$Provider var18 = param2.provider;
    AppWidgetProviderInfo var19 = var18.info;
    ComponentName var20 = var19.provider;
    String var22 = var20.getPackageName();
    boolean var24 = var16.add(var22);
    AppWidgetServiceImpl$Provider var25 = param2.provider;
    boolean var27 = var25.isMaskedLocked();
    AppWidgetServiceImpl$Provider var30 = param2.provider;
    maskWidgetsViewsLocked(var30,param2);
    ArrayList var4 = param2.widgets;
    int var6 = var4.size();
    AppWidgetProviderInfo var8 = param2.info;
    ComponentName var9 = var8.provider;
    String var11 = var9.getPackageName();
    int var13 = getUserId();
    Bitmap var15 = createMaskedWidgetBitmap(var11,var13);
    long var17 = Binder.clearCallingIdentity();
    boolean var18 = param2.maskedBySuspendedPackage;
    UserManager var29 = this.mUserManager;
    UserInfo var31 = var29.getUserInfo(var13);
    boolean var33 = var31.isManagedProfile();
    PackageManagerInternal var34 = this.mPackageManagerInternal;
    String var36 = var34.getSuspendingPackage(var11,var13);
    boolean var39 = equals(var36);
    DevicePolicyManagerInternal var45 = this.mDevicePolicyManagerInternal;
    Intent var47 = var45.createShowAdminSupportIntent(var13,1);
    ArrayList var58 = param2.widgets;
    Object var60 = var58.get(var85);
    AppWidgetServiceImpl$Widget var61 = (AppWidgetServiceImpl$Widget) var60;
    Context var62 = this.mContext;
    int var63 = var61.appWidgetId;
    PendingIntent var66 = PendingIntent.getActivity(var62,var63,var55,134217728);
    RemoteViews var72 = createMaskedWidgetRemoteViews(var15,var53,var68);
    boolean var74 = AppWidgetServiceImpl$Widget.access$900(var61,var72);{boolean var74 = AppWidgetServiceImpl$Widget.access$900(var61,var72);};
    RemoteViews var76 = var61.getEffectiveViewsLocked();
    scheduleNotifyUpdateAppWidgetLocked(var61,var76);
}