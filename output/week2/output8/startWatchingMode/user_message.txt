// API: startWatchingMode
// Service: AppOpsService_4

public void startWatchingMode() {
    startWatchingModeWithFlags(param2,param3,0,param4);
    int var8 = Binder.getCallingUid();
    int var10 = Binder.getCallingPid();
    int var22 = Preconditions.checkArgumentInRange(param2,-1,90,var19);{int var22 = Preconditions.checkArgumentInRange(param2,-1,90,var19);};
    int var25 = AppOpsManager.opToSwitch(param2);
    ArrayMap var30 = this.mModeWatchers;
    IBinder var32 = asBinder();
    Object var34 = var30.get(var32);
    AppOpsService$ModeCallback var35 = (AppOpsService$ModeCallback) var34;
    AppOpsService$ModeCallback var36 = new AppOpsService$ModeCallback();
    ArrayMap var38 = this.mModeWatchers;
    IBinder var40 = asBinder();
    Object var42 = var38.put(var40,var36);
    SparseArray var48 = this.mOpModeWatchers;
    Object var50 = var48.get(var27);
    ArraySet var51 = (ArraySet) var50;
    ArraySet var52 = new ArraySet();
    SparseArray var54 = this.mOpModeWatchers;
    var54.put(var27,var52);
    boolean var60 = var56.add(var43);
    ArrayMap var65 = this.mPackageModeWatchers;
    Object var67 = var65.get(param3);
    ArraySet var68 = (ArraySet) var67;
    ArraySet var69 = new ArraySet();
    ArrayMap var71 = this.mPackageModeWatchers;
    Object var73 = var71.put(param3,var69);
    boolean var79 = var74.add(var43);
    evalAllForegroundOpsLocked();
    SparseArray var2 = this.mUidStates;
    int var4 = var2.size();
    var6 = var4 add -1;
    SparseArray var8 = this.mUidStates;
    Object var10 = var8.valueAt(var18);
    AppOpsService$UidState var11 = (AppOpsService$UidState) var10;
    SparseBooleanArray var12 = var11.foregroundOps;
    SparseArray var13 = this.mOpModeWatchers;
    var11.evalForegroundOps(var13);
    this.hasForegroundWatchers = 0;
    SparseIntArray var4 = this.opModes;
    int var7 = var4.size();
    var9 = var7 add -1;
    ArrayMap var33 = this.pkgOps;
    int var35 = var33.size();
    var36 = var35 add -1;
    this.foregroundOps = var73;
}