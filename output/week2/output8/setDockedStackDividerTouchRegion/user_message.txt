// API: setDockedStackDividerTouchRegion
// Service: WindowManagerService_2

public void setDockedStackDividerTouchRegion() {
    WindowManagerGlobalLock var3 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    DisplayContent var6 = getDefaultDisplayContentLocked();
    DockedStackDividerController var8 = var6.getDockedDividerController();
    var8.setTouchRegion(param2);
    var6.updateTouchExcludeRegion();
    AppWindowToken var2 = this.mFocusedApp;
    Task var5 = var2.getTask();
    Region var45 = this.mTouchExcludeRegion;
    var45.setEmpty();
    WindowState var52 = this.mInputMethodWindow;
    boolean var54 = var52.isVisibleLw();
    WindowState var55 = this.mInputMethodWindow;
    Region var56 = this.mTmpRegion;
    var55.getTouchableRegion(var56);
    Region var58 = this.mTouchExcludeRegion;
    Region var59 = this.mTmpRegion;
    Region$Op var60 = UNION;
    boolean var62 = var58.op(var59,var60);
    ArrayList var68 = this.mTapExcludedWindows;
    int var70 = var68.size();
    var71 = var70 add -1;
    Region var91 = this.mTouchExcludeRegion;
    amendWindowTapExcludeRegion(var91);
    int var93 = this.mDisplayId;
    TaskStack var95 = getSplitScreenPrimaryStack();
    DisplayContent$TaskStackContainers var2 = this.mTaskStackContainers;
    TaskStack var4 = var2.getSplitScreenPrimaryStack();
    boolean var7 = var4.isVisible();
    WindowList var2 = this.mChildren;
    int var4 = var2.size();
    var6 = var4 sub 1;
    WindowList var8 = this.mChildren;
    Object var10 = var8.get(var16);
    WindowContainer var11 = (WindowContainer) var10;
    boolean var13 = var11.isVisible();
    boolean 1;
}