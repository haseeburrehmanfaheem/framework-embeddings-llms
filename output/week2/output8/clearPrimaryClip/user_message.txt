// API: clearPrimaryClip
// Service: ClipboardService$ClipboardImpl_3

public void clearPrimaryClip() {
    ClipboardService var4 = this.this$0;
    int var6 = ClipboardService.access$300(var4,param2,param3);{int var6 = ClipboardService.access$300(var4,param2,param3);};
    int var8 = UserHandle.getUserId(var6);
    ClipboardService var9 = this.this$0;
    boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);{boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);};
    ClipboardService var14 = this.this$0;
    var14.setPrimaryClipInternal(0,var6);
    HostClipboardMonitor var4 = this.mHostClipboardMonitor;
    var4.setHostClipboard();
    int var23 = UserHandle.getUserId(param3);
    ClipboardService$PerUserClipboard var25 = getClipboard(var23);
    setPrimaryClipInternal(var25,param2,param3);
    revokeUris(param2);
    HashSet var6 = param2.activePermissionOwners;
    var6.clear();
    ClipData var9 = param2.primaryClip;
    param2.primaryClip = param3;
    param2.primaryClipUid = param4;
    ClipDescription var14 = getDescription();
    long var16 = System.currentTimeMillis();
    var14.setTimestamp(var16);
    long var22 = Binder.clearCallingIdentity();
    RemoteCallbackList var23 = param2.primaryClipListeners;
    int var25 = var23.beginBroadcast();
    RemoteCallbackList var26 = param2.primaryClipListeners;
    Object var28 = var26.getBroadcastCookie(var53);
    ClipboardService$ListenerInfo var29 = (ClipboardService$ListenerInfo) var28;
    String var31 = var29.mPackageName;
    int var32 = var29.mUid;
    int var33 = var29.mUid;
    int var35 = UserHandle.getUserId(var33);
    boolean var37 = clipboardAccessAllowed(29,var31,var32,var35);
    AppOpsManager var6 = this.mAppOps;
    int var8 = var6.noteOp(param2,param4,param3);{int var8 = var6.noteOp(param2,param4,param3);};
    PackageManager var10 = this.mPm;
    Context var16 = getContext();
    ContentResolver var18 = var16.getContentResolver();
    String var21 = Settings$Secure.getStringForUser(var18,default_input_method,param5);
    boolean var23 = TextUtils.isEmpty(var21);
    ComponentName var25 = ComponentName.unflattenFromString(var21);
    String var27 = var25.getPackageName();
    WindowManagerInternal var34 = this.mWm;
    boolean var38 = isInternalSysWindowAppWithWindowFocus(param3);
    ContentCaptureManagerInternal var46 = this.mContentCaptureInternal;
    AutofillManagerInternal var53 = this.mAutofillInternal;
    boolean var56<PATH_SEP>ClipboardService var4 = this.this$0;
    int var6 = ClipboardService.access$300(var4,param2,param3);{int var6 = ClipboardService.access$300(var4,param2,param3);};
    int var8 = UserHandle.getUserId(var6);
    ClipboardService var9 = this.this$0;
    boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);{boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);};
    ClipboardService var14 = this.this$0;
    var14.setPrimaryClipInternal(0,var6);
    HostClipboardMonitor var4 = this.mHostClipboardMonitor;
    var4.setHostClipboard();
    int var23 = UserHandle.getUserId(param3);
    ClipboardService$PerUserClipboard var25 = getClipboard(var23);
    setPrimaryClipInternal(var25,param2,param3);
    revokeUris(param2);
    HashSet var6 = param2.activePermissionOwners;
    var6.clear();
    ClipData var9 = param2.primaryClip;
    param2.primaryClip = param3;
    param2.primaryClipUid = param4;
    ClipDescription var14 = getDescription();
    long var16 = System.currentTimeMillis();
    var14.setTimestamp(var16);
    long var22 = Binder.clearCallingIdentity();
    RemoteCallbackList var23 = param2.primaryClipListeners;
    int var25 = var23.beginBroadcast();
    RemoteCallbackList var26 = param2.primaryClipListeners;
    Object var28 = var26.getBroadcastCookie(var53);
    ClipboardService$ListenerInfo var29 = (ClipboardService$ListenerInfo) var28;
    String var31 = var29.mPackageName;
    int var32 = var29.mUid;
    int var33 = var29.mUid;
    int var35 = UserHandle.getUserId(var33);
    boolean var37 = clipboardAccessAllowed(29,var31,var32,var35);
    AppOpsManager var6 = this.mAppOps;
    int var8 = var6.noteOp(param2,param4,param3);{int var8 = var6.noteOp(param2,param4,param3);};
    PackageManager var10 = this.mPm;
    Context var16 = getContext();
    ContentResolver var18 = var16.getContentResolver();
    String var21 = Settings$Secure.getStringForUser(var18,default_input_method,param5);
    boolean var23 = TextUtils.isEmpty(var21);
    WindowManagerInternal var34 = this.mWm;
    boolean var38 = isInternalSysWindowAppWithWindowFocus(param3);
    AutofillManagerInternal var53 = this.mAutofillInternal;
    boolean var56<PATH_SEP>ClipboardService var4 = this.this$0;
    int var6 = ClipboardService.access$300(var4,param2,param3);{int var6 = ClipboardService.access$300(var4,param2,param3);};
    int var8 = UserHandle.getUserId(var6);
    ClipboardService var9 = this.this$0;
    boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);{boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);};
    ClipboardService var14 = this.this$0;
    var14.setPrimaryClipInternal(0,var6);
    HostClipboardMonitor var4 = this.mHostClipboardMonitor;
    var4.setHostClipboard();
    int var23 = UserHandle.getUserId(param3);
    ClipboardService$PerUserClipboard var25 = getClipboard(var23);
    setPrimaryClipInternal(var25,param2,param3);
    revokeUris(param2);
    HashSet var6 = param2.activePermissionOwners;
    var6.clear();
    ClipData var9 = param2.primaryClip;
    param2.primaryClip = param3;
    param2.primaryClipUid = param4;
    ClipDescription var14 = getDescription();
    long var16 = System.currentTimeMillis();
    var14.setTimestamp(var16);
    long var22 = Binder.clearCallingIdentity();
    RemoteCallbackList var23 = param2.primaryClipListeners;
    int var25 = var23.beginBroadcast();
    RemoteCallbackList var26 = param2.primaryClipListeners;
    Object var28 = var26.getBroadcastCookie(var53);
    ClipboardService$ListenerInfo var29 = (ClipboardService$ListenerInfo) var28;
    String var31 = var29.mPackageName;
    int var32 = var29.mUid;
    int var33 = var29.mUid;
    int var35 = UserHandle.getUserId(var33);
    boolean var37 = clipboardAccessAllowed(29,var31,var32,var35);
    AppOpsManager var6 = this.mAppOps;
    int var8 = var6.noteOp(param2,param4,param3);{int var8 = var6.noteOp(param2,param4,param3);};
    PackageManager var10 = this.mPm;
    Context var16 = getContext();
    ContentResolver var18 = var16.getContentResolver();
    String var21 = Settings$Secure.getStringForUser(var18,default_input_method,param5);
    boolean var23 = TextUtils.isEmpty(var21);
    ComponentName var25 = ComponentName.unflattenFromString(var21);
    String var27 = var25.getPackageName();
    WindowManagerInternal var34 = this.mWm;
    ContentCaptureManagerInternal var46 = this.mContentCaptureInternal;
    AutofillManagerInternal var53 = this.mAutofillInternal;
    boolean var56<PATH_SEP>ClipboardService var4 = this.this$0;
    int var6 = ClipboardService.access$300(var4,param2,param3);{int var6 = ClipboardService.access$300(var4,param2,param3);};
    int var8 = UserHandle.getUserId(var6);
    ClipboardService var9 = this.this$0;
    boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);{boolean var12 = ClipboardService.access$400(var9,30,param2,var6,var8);};
    ClipboardService var14 = this.this$0;
    var14.setPrimaryClipInternal(0,var6);
    HostClipboardMonitor var4 = this.mHostClipboardMonitor;
    var4.setHostClipboard();
    int var23 = UserHandle.getUserId(param3);
    ClipboardService$PerUserClipboard var25 = getClipboard(var23);
    setPrimaryClipInternal(var25,param2,param3);
    revokeUris(param2);
    HashSet var6 = param2.activePermissionOwners;
    var6.clear();
    ClipData var9 = param2.primaryClip;
    param2.primaryClip = param3;
    param2.primaryClipUid = param4;
    ClipDescription var14 = getDescription();
    long var16 = System.currentTimeMillis();
    var14.setTimestamp(var16);
    long var22 = Binder.clearCallingIdentity();
    RemoteCallbackList var23 = param2.primaryClipListeners;
    int var25 = var23.beginBroadcast();
    RemoteCallbackList var26 = param2.primaryClipListeners;
    Object var28 = var26.getBroadcastCookie(var53);
    ClipboardService$ListenerInfo var29 = (ClipboardService$ListenerInfo) var28;
    String var31 = var29.mPackageName;
    int var32 = var29.mUid;
    int var33 = var29.mUid;
    int var35 = UserHandle.getUserId(var33);
    boolean var37 = clipboardAccessAllowed(29,var31,var32,var35);
    AppOpsManager var6 = this.mAppOps;
    int var8 = var6.noteOp(param2,param4,param3);{int var8 = var6.noteOp(param2,param4,param3);};
    PackageManager var10 = this.mPm;
    Context var16 = getContext();
    ContentResolver var18 = var16.getContentResolver();
    String var21 = Settings$Secure.getStringForUser(var18,default_input_method,param5);
    boolean var23 = TextUtils.isEmpty(var21);
    WindowManagerInternal var34 = this.mWm;
    boolean var38 = isInternalSysWindowAppWithWindowFocus(param3);
    AutofillManagerInternal var53 = this.mAutofillInternal;
    boolean var56;
}