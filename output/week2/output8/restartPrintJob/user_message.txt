// API: restartPrintJob
// Service: PrintManagerService$PrintManagerImpl_4

public void restartPrintJob() {
    boolean var7 = isPrintingEnabled();
    int var9 = resolveCallingUserEnforcingPermissions(param4);
    Object var10 = this.mLock;
    int var12 = resolveCallingProfileParentLocked(var9);
    int var14 = getCurrentUserId();
    int var16 = resolveCallingAppEnforcingPermissions(param3);
    UserState var18 = getOrCreateUserStateLocked(var9,0);
    long var20 = Binder.clearCallingIdentity();
    var18.restartPrintJob(param2,var16);
    PrintJobInfo var5 = getPrintJobInfo(param2,param3);
    UserState$PrintJobForAppCache var4 = this.mPrintJobForAppCache;
    PrintJobInfo var6 = var4.getPrintJob(param2,param3);
    RemotePrintSpooler var8 = this.mSpooler;
    PrintJobInfo var10 = var8.getPrintJobInfo(param2,param3);<PATH_SEP>boolean var7 = isPrintingEnabled();
    int var9 = resolveCallingUserEnforcingPermissions(param4);
    Object var10 = this.mLock;
    int var12 = resolveCallingProfileParentLocked(var9);
    int var14 = getCurrentUserId();
    int var16 = resolveCallingAppEnforcingPermissions(param3);
    UserState var18 = getOrCreateUserStateLocked(var9,0);
    long var20 = Binder.clearCallingIdentity();
    var18.restartPrintJob(param2,var16);
    PrintJobInfo var5 = getPrintJobInfo(param2,param3);
    int var8 = var5.getState();
    RemotePrintSpooler var10 = this.mSpooler;
    boolean var13 = var10.setPrintJobState(param2,2,0);
    throwIfCalledOnMainThread();
    Object var6 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$SetPrintJobStateCaller var12 = this.mSetPrintJobStatusCaller;
    IPrintSpooler var14 = getRemoteInstanceLazy();
    boolean var16 = var12.setPrintJobState(var14,param2,param3,param4);
    Object var41 = this.mLock;
    this.mCanUnbind = 1;<PATH_SEP>boolean var7 = isPrintingEnabled();
    int var9 = resolveCallingUserEnforcingPermissions(param4);
    Object var10 = this.mLock;
    int var12 = resolveCallingProfileParentLocked(var9);
    int var14 = getCurrentUserId();
    int var16 = resolveCallingAppEnforcingPermissions(param3);
    UserState var18 = getOrCreateUserStateLocked(var9,0);
    long var20 = Binder.clearCallingIdentity();
    var18.restartPrintJob(param2,var16);
    PrintJobInfo var5 = getPrintJobInfo(param2,param3);
    UserState$PrintJobForAppCache var4 = this.mPrintJobForAppCache;
    PrintJobInfo var6 = var4.getPrintJob(param2,param3);
    RemotePrintSpooler var8 = this.mSpooler;
    PrintJobInfo var10 = var8.getPrintJobInfo(param2,param3);
    throwIfCalledOnMainThread();
    Object var5 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetPrintJobInfoCaller var11 = this.mGetPrintJobInfoCaller;
    IPrintSpooler var13 = getRemoteInstanceLazy();
    PrintJobInfo var15 = var11.getPrintJobInfo(var13,param2,param3);
    Object var40 = this.mLock;
    this.mCanUnbind = 1;
    Object var41 = this.mLock;
    var41.notifyAll();<PATH_SEP>boolean var7 = isPrintingEnabled();
    int var9 = resolveCallingUserEnforcingPermissions(param4);
    Object var10 = this.mLock;
    int var12 = resolveCallingProfileParentLocked(var9);
    int var14 = getCurrentUserId();
    int var16 = resolveCallingAppEnforcingPermissions(param3);
    UserState var18 = getOrCreateUserStateLocked(var9,0);
    long var20 = Binder.clearCallingIdentity();
    var18.restartPrintJob(param2,var16);
    PrintJobInfo var5 = getPrintJobInfo(param2,param3);
    UserState$PrintJobForAppCache var4 = this.mPrintJobForAppCache;
    PrintJobInfo var6 = var4.getPrintJob(param2,param3);
    RemotePrintSpooler var8 = this.mSpooler;
    PrintJobInfo var10 = var8.getPrintJobInfo(param2,param3);
    var11.setTag(0);
    var11.setAdvancedOptions(0);
    Landroid/print/PrintJobInfo var11;
}