// API: setNetworkPolicies
// Service: NetworkPolicyManagerService_2

public void setNetworkPolicies() {
    Context var3 = this.mContext;
    long var8 = Binder.clearCallingIdentity();
    Object var9 = this.mUidRulesFirstLock;
    Object var10 = this.mNetworkPoliciesSecondLock;
    normalizePoliciesNL(param2);
    handleNetworkPoliciesUpdateAL(0);
    normalizePoliciesNL();
    updateNetworkEnabledNL();
    updateNetworkRulesNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNetworkRulesNL);
    IConnectivityManager var12 = this.mConnManager;
    NetworkState var14 = var12.getAllNetworkState();
    NetworkState var17 = NetworkPolicyManagerService.defeatNullable(var14);
    SparseIntArray var18 = this.mNetIdToSubId;
    var18.clear();
    ArrayMap var20 = new ArrayMap();
    22 = arraylength 17;
    24 = arrayload 17[49];
    Network var25 = var24.network;
    SparseIntArray var26 = this.mNetIdToSubId;
    Network var27 = var24.network;
    int var28 = var27.netId;
    int var30 = parseSubId(var24);
    var26.put(var28,var30);
    NetworkInfo var35 = var24.networkInfo;
    NetworkInfo var36 = var24.networkInfo;
    boolean var38 = var36.isConnected();
    Context var39 = this.mContext;
    NetworkIdentity var41 = NetworkIdentity.buildNetworkIdentity(var39,var24,1);
    NetworkInfo var4 = param2.networkInfo;
    int var6 = var4.getType();
    NetworkInfo var7 = param2.networkInfo;
    int var9 = var7.getSubtype();
    NetworkCapabilities var11 = param2.networkCapabilities;
    boolean var14 = var11.hasCapability(18);
    var17 = var14 xor 1;
    NetworkCapabilities var18 = param2.networkCapabilities;
    boolean var21 = var18.hasCapability(11);
    var22 = var21 xor 1;
    boolean var24 = ConnectivityManager.isNetworkTypeMobile(var6);
    String var25 = param2.networkId;
    Object var28 = getSystemService(wifi);
    WifiManager var29 = (WifiManager) var28;
    WifiInfo var31 = var29.getConnectionInfo();
    String var33 = var31.getSSID();
    NetworkIdentity var74 = new NetworkIdentity();
    Landroid/net/NetworkIdentity var74<PATH_SEP>Context var3 = this.mContext;
    long var8 = Binder.clearCallingIdentity();
    Object var9 = this.mUidRulesFirstLock;
    Object var10 = this.mNetworkPoliciesSecondLock;
    normalizePoliciesNL(param2);
    handleNetworkPoliciesUpdateAL(0);
    normalizePoliciesNL();
    updateNetworkEnabledNL();
    updateNetworkRulesNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNetworkRulesNL);
    IConnectivityManager var12 = this.mConnManager;
    NetworkState var14 = var12.getAllNetworkState();
    NetworkState var17 = NetworkPolicyManagerService.defeatNullable(var14);
    SparseIntArray var18 = this.mNetIdToSubId;
    var18.clear();
    ArrayMap var20 = new ArrayMap();
    22 = arraylength 17;
    ArraySet var52 = new ArraySet();
    ArraySet var55 = new ArraySet();
    ArrayMap var57 = this.mNetworkPolicy;
    int var59 = var57.size();
    var60 = var59 sub 1;
    ArrayMap var62 = this.mNetworkPolicy;
    Object var64 = var62.valueAt(var210);
    NetworkPolicy var65 = (NetworkPolicy) var64;
    var55.clear();
    int var68 = var20.size();
    var69 = var68 sub 1;
    NetworkTemplate var70 = var65.template;
    Object var72 = var20.valueAt(var84);
    NetworkIdentity var73 = (NetworkIdentity) var72;
    boolean var75 = var70.matches(var73);
    boolean var4 = matchesMetered(param2);
    boolean var7 = matchesRoaming(param2);
    boolean var9 = matchesDefaultNetwork(param2);
    int var10 = this.mMatchRule;
    16: switch 10 [4->56,5->51,6->46,7->41,8->36,9->31] default: 30;
    boolean var17 = matchesEthernet(param2);<PATH_SEP>Context var3 = this.mContext;
    long var8 = Binder.clearCallingIdentity();
    Object var9 = this.mUidRulesFirstLock;
    Object var10 = this.mNetworkPoliciesSecondLock;
    normalizePoliciesNL(param2);
    handleNetworkPoliciesUpdateAL(0);
    normalizePoliciesNL();
    updateNetworkEnabledNL();
    updateNetworkRulesNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNetworkRulesNL);
    IConnectivityManager var12 = this.mConnManager;
    NetworkState var14 = var12.getAllNetworkState();
    NetworkState var17 = NetworkPolicyManagerService.defeatNullable(var14);
    SparseIntArray var18 = this.mNetIdToSubId;
    var18.clear();
    ArrayMap var20 = new ArrayMap();
    22 = arraylength 17;
    24 = arrayload 17[49];
    Network var25 = var24.network;
    SparseIntArray var26 = this.mNetIdToSubId;
    Network var27 = var24.network;
    int var28 = var27.netId;
    int var30 = parseSubId(var24);
    int var18<PATH_SEP>Context var3 = this.mContext;
    long var8 = Binder.clearCallingIdentity();
    Object var9 = this.mUidRulesFirstLock;
    Object var10 = this.mNetworkPoliciesSecondLock;
    normalizePoliciesNL(param2);
    handleNetworkPoliciesUpdateAL(0);
    normalizePoliciesNL();
    updateNetworkEnabledNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNetworkEnabledNL);
    ArrayMap var15 = this.mNetworkPolicy;
    int var17 = var15.size();
    var19 = var17 sub 1;
    ArrayMap var20 = this.mNetworkPolicy;
    Object var22 = var20.valueAt(var72);
    NetworkPolicy var23 = (NetworkPolicy) var22;
    long var24 = var23.limitBytes;
    var26 = var24 lt -1;
    boolean var28 = var23.hasCycle();
    Iterator var30 = NetworkPolicyManager.cycleIterator(var23);
    Object var32 = var30.next();
    Pair var33 = (Pair) var32;
    Object var34 = var33.first;
    ZonedDateTime var35 = (ZonedDateTime) var34;
    Instant var37 = var35.toInstant();
    long var39 = var37.toEpochMilli();
    Object var40 = var33.second;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    NetworkTemplate var46 = var23.template;
    long var48 = getTotalBytes(var46,var39,var45);
    long var6 = getNetworkTotalBytes(param2,param3,param4);
    long var6;
}