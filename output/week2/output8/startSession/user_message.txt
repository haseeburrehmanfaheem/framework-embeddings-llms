// API: startSession
// Service: ContentCaptureManagerService$ContentCaptureManagerServiceStub_6

public void startSession() {
    Object var8 = Preconditions.checkNotNull(param2);{Object var8 = Preconditions.checkNotNull(param2);};
    Integer var10 = Integer.valueOf(param4);
    Object var12 = Preconditions.checkNotNull(var10);{Object var12 = Preconditions.checkNotNull(var10);};
    int var14 = UserHandle.getCallingUserId();
    ContentCaptureManagerService var15 = this.this$0;
    ActivityManagerInternal var17 = ContentCaptureManagerService.access$200(var15);{ActivityManagerInternal var17 = ContentCaptureManagerService.access$200(var15);};
    ActivityPresentationInfo var19 = var17.getActivityPresentationInfo(param2);
    ContentCaptureManagerService var20 = this.this$0;
    Object var22 = ContentCaptureManagerService.access$300(var20);{Object var22 = ContentCaptureManagerService.access$300(var20);};
    ContentCaptureManagerService var23 = this.this$0;
    AbstractPerUserSystemService var25 = ContentCaptureManagerService.access$400(var23,var14);{AbstractPerUserSystemService var25 = ContentCaptureManagerService.access$400(var23,var14);};
    ContentCapturePerUserService var26 = (ContentCapturePerUserService) var25;
    int var28 = Binder.getCallingUid();
    var26.startSessionLocked(param2,var19,param4,var28,param5,param6);
    int var9 = param3.taskId;
    int var10 = param3.displayId;
    ComponentName var11 = param3.componentName;
    AbstractMasterSystemService var12 = this.mMaster;
    ContentCaptureManagerService var13 = (ContentCaptureManagerService) var12;
    ContentCaptureManagerService$GlobalContentCaptureOptions var14 = var13.mGlobalContentCaptureOptions;
    int var15 = this.mUserId;
    boolean var17 = var14.isWhitelisted(var15,var11);
    AbstractMasterSystemService var18 = this.mMaster;
    ContentCaptureManagerService var19 = (ContentCaptureManagerService) var18;
    ContentCaptureManagerService$GlobalContentCaptureOptions var20 = var19.mGlobalContentCaptureOptions;
    int var21 = this.mUserId;
    String var23 = var11.getPackageName();
    boolean var25 = var20.isWhitelisted(var21,var23);
    ComponentName var34 = getServiceComponentName();
    boolean var36 = isEnabledLocked();
    AbstractMasterSystemService var37 = this.mMaster;
    ContentCaptureManagerService var38 = (ContentCaptureManagerService) var37;
    String var56 = ComponentName.flattenToShortString(var11);
    String var73 = ComponentName.flattenToShortString(var34);
    int var79 = this.mUserId;
    AbstractMasterSystemService var99 = this.mMaster;
    ContentCaptureManagerService var100 = (ContentCaptureManagerService) var99;
    SparseArray var109 = this.mSessions;
    Object var111 = var109.get(param4);
    ContentCaptureServerSession var112 = (ContentCaptureServerSession) var111;
    RemoteContentCaptureService var115 = this.mRemoteService;
    updateRemoteServiceLocked(0);
    AbstractMasterSystemService var3 = this.mMaster;
    ContentCaptureManagerService var4 = (ContentCaptureManagerService) var3;
    boolean var5 = var4.verbose;
    String var7 = TAG;
    RemoteContentCaptureService var23 = this.mRemoteService;
    AbstractMasterSystemService var24 = this.mMaster;
    ContentCaptureManagerService var25 = (ContentCaptureManagerService) var24;
    boolean var26 = var25.debug;
    String var27 = TAG;
    RemoteContentCaptureService var35 = this.mRemoteService;
    var35.destroy();
    this.mRemoteService = 0;
    resetContentCaptureWhitelistLocked();
    ComponentName var43 = updateServiceInfoLocked();
    AbstractMasterSystemService var44 = this.mMaster;
    ContentCaptureManagerService var45 = (ContentCaptureManagerService) var44;
    boolean var46 = var45.debug;
    String var47 = TAG;
    RemoteContentCaptureService var63 = new RemoteContentCaptureService();
    AbstractMasterSystemService var64 = this.mMaster;
    ContentCaptureManagerService var65 = (ContentCaptureManagerService) var64;
    Context var67 = var65.getContext();
    ContentCapturePerUserService$ContentCaptureServiceRemoteCallback var68 = this.mRemoteServiceCallback;
    int var69 = this.mUserId;
    AbstractMasterSystemService var70 = this.mMaster;
    ContentCaptureManagerService var71 = (ContentCaptureManagerService) var70;
    boolean var73 = var71.isBindInstantServiceAllowed();
    AbstractMasterSystemService var74 = this.mMaster;
    ContentCaptureManagerService var75 = (ContentCaptureManagerService) var74;
    boolean var76 = var75.verbose;
    AbstractMasterSystemService var77 = this.mMaster;
    ContentCaptureManagerService var78 = (ContentCaptureManagerService) var77;
    int var79 = var78.mDevCfgIdleUnbindTimeoutMs;
    this.mRemoteService = var63;
}