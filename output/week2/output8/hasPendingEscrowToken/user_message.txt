// API: hasPendingEscrowToken
// Service: LockSettingsService_2

public void hasPendingEscrowToken() {
    SyntheticPasswordManager var4 = this.mSpManager;
    SyntheticPasswordManager var5 = this.mSpManager;
    Set var7 = var5.getPendingTokensForUser(param2);
    boolean var9 = var7.isEmpty();
    boolean var12<PATH_SEP>SyntheticPasswordManager var4 = this.mSpManager;
    SyntheticPasswordManager var5 = this.mSpManager;
    Set var7 = var5.getPendingTokensForUser(param2);
    ArrayMap var3 = this.tokenMap;
    Integer var5 = Integer.valueOf(param2);
    boolean var7 = var3.containsKey(var5);
    Set var18 = Collections.emptySet();
    Ljava/util/Set var18<PATH_SEP>SyntheticPasswordManager var4 = this.mSpManager;
    SyntheticPasswordManager var5 = this.mSpManager;
    Set var7 = var5.getPendingTokensForUser(param2);
    ArrayMap var3 = this.tokenMap;
    Integer var5 = Integer.valueOf(param2);
    boolean var7 = var3.containsKey(var5);
    ArrayMap var9 = this.tokenMap;
    Integer var11 = Integer.valueOf(param2);
    Object var13 = var9.get(var11);
    ArrayMap var14 = (ArrayMap) var13;
    Set var16 = var14.keySet();<PATH_SEP>SyntheticPasswordManager var4 = this.mSpManager;
    SyntheticPasswordManager var5 = this.mSpManager;
    Set var7 = var5.getPendingTokensForUser(param2);
    ArrayMap var3 = this.tokenMap;
    Integer var5 = Integer.valueOf(param2);
    boolean var7 = var3.containsKey(var5);
    ArrayMap var9 = this.tokenMap;
    Integer var11 = Integer.valueOf(param2);
    Object var13 = var9.get(var11);
    ArrayMap var14 = (ArrayMap) var13;
    Set var16 = var14.keySet();
    Ljava/util/Set var16;
}