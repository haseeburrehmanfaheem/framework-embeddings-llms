// API: startAddAccountSession
// Service: AccountManagerService_7

public void startAddAccountSession() {
    Bundle var10 = Bundle.setDefusable(param7,1);
    String var37 = Arrays.toString(param5);
    int var49 = Binder.getCallingUid();
    int var56 = Binder.getCallingPid();
    Preconditions.checkArgument(var66,response cannot be null);{Preconditions.checkArgument(var66,response cannot be null);};
    Preconditions.checkArgument(var69,accountType cannot be null);{Preconditions.checkArgument(var69,accountType cannot be null);};
    int var73 = Binder.getCallingUid();
    int var75 = UserHandle.getUserId(var73);
    onError(100,User is not allowed to add an account!);
    showCantAddAccount(100,var75);
    4 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = LocalServices.getService(var4);
    DevicePolicyManagerInternal var7 = (DevicePolicyManagerInternal) var6;
    Intent var15 = var7.createUserRestrictionSupportIntent(param3,no_modify_accounts);
    Intent var23 = getDefaultCantAddAccountIntent(param2);<PATH_SEP>Bundle var10 = Bundle.setDefusable(param7,1);
    String var37 = Arrays.toString(param5);
    int var49 = Binder.getCallingUid();
    int var56 = Binder.getCallingPid();
    Preconditions.checkArgument(var66,response cannot be null);{Preconditions.checkArgument(var66,response cannot be null);};
    Preconditions.checkArgument(var69,accountType cannot be null);{Preconditions.checkArgument(var69,accountType cannot be null);};
    int var73 = Binder.getCallingUid();
    int var75 = UserHandle.getUserId(var73);
    onError(100,User is not allowed to add an account!);
    AccountManager$AmsTask var13 = this.this$1;
    boolean var16 = var13.cancel(1);
    int var4 = this.state;
    Unsafe var6 = UNSAFE;
    long var7 = stateOffset;
    boolean var12 = var6.compareAndSwapInt(this,var7,0,var10);
    Thread var13 = this.runner;
    var13.interrupt();<PATH_SEP>Bundle var10 = Bundle.setDefusable(param7,1);
    String var37 = Arrays.toString(param5);
    int var49 = Binder.getCallingUid();
    int var56 = Binder.getCallingPid();
    Preconditions.checkArgument(var66,response cannot be null);{Preconditions.checkArgument(var66,response cannot be null);};
    Preconditions.checkArgument(var69,accountType cannot be null);{Preconditions.checkArgument(var69,accountType cannot be null);};
    int var73 = Binder.getCallingUid();
    int var75 = UserHandle.getUserId(var73);
    onError(100,User is not allowed to add an account!);
    showCantAddAccount(100,var75);
    4 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = LocalServices.getService(var4);
    DevicePolicyManagerInternal var7 = (DevicePolicyManagerInternal) var6;
    Intent var17 = getDefaultCantAddAccountIntent(param2);
    Intent var3 = new Intent();
    Context var4 = this.mContext;
    5 = load_metadata: <Application,Landroid/accounts/CantAddAccountActivity>;
    <Primordial,Ljava/lang/Class>;
    Intent var9 = var3.putExtra(android.accounts.extra.ERROR_CODE,param2);
    Intent var12 = var3.addFlags(268435456);<PATH_SEP>Bundle var10 = Bundle.setDefusable(param7,1);
    String var37 = Arrays.toString(param5);
    int var49 = Binder.getCallingUid();
    int var56 = Binder.getCallingPid();
    Preconditions.checkArgument(var66,response cannot be null);{Preconditions.checkArgument(var66,response cannot be null);};
    Preconditions.checkArgument(var69,accountType cannot be null);{Preconditions.checkArgument(var69,accountType cannot be null);};
    int var73 = Binder.getCallingUid();
    int var75 = UserHandle.getUserId(var73);
    onError(100,User is not allowed to add an account!);
    showCantAddAccount(100,var75);
    4 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = LocalServices.getService(var4);
    DevicePolicyManagerInternal var7 = (DevicePolicyManagerInternal) var6;
    Intent var23 = getDefaultCantAddAccountIntent(param2);
    long var28 = AccountManagerService.clearCallingIdentity();
    Context var29 = this.mContext;
    UserHandle var30 = new UserHandle();
    var29.startActivityAsUser(var24,var30);
}