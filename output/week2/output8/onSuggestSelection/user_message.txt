// API: onSuggestSelection
// Service: TextClassificationManagerService_4

public void onSuggestSelection() {
    Object var6 = Preconditions.checkNotNull(param3);{Object var6 = Preconditions.checkNotNull(param3);};
    Object var8 = Preconditions.checkNotNull(param4);{Object var8 = Preconditions.checkNotNull(param4);};
    int var10 = getUserId();
    Context var11 = this.mContext;
    String var13 = getCallingPackageName();
    Object var15 = this.mLock;
    TextClassificationManagerService$UserState var17 = getUserStateLocked(var10);
    SparseArray var3 = this.mUserStates;
    Object var5 = var3.get(param2);
    TextClassificationManagerService$UserState var6 = (TextClassificationManagerService$UserState) var5;
    Lcom/android/server/textclassifier/TextClassificationManagerService$UserState var14<PATH_SEP>Object var6 = Preconditions.checkNotNull(param3);{Object var6 = Preconditions.checkNotNull(param3);};
    Object var8 = Preconditions.checkNotNull(param4);{Object var8 = Preconditions.checkNotNull(param4);};
    int var10 = getUserId();
    Context var11 = this.mContext;
    String var13 = getCallingPackageName();
    Object var15 = this.mLock;
    TextClassificationManagerService$UserState var17 = getUserStateLocked(var10);
    boolean var19 = TextClassificationManagerService$UserState.access$400(var17);{boolean var19 = TextClassificationManagerService$UserState.access$400(var17);};
    boolean var22 = var17.isBoundLocked();
    ITextClassifierService var2 = this.mService;
    boolean var5<PATH_SEP>Object var6 = Preconditions.checkNotNull(param3);{Object var6 = Preconditions.checkNotNull(param3);};
    Object var8 = Preconditions.checkNotNull(param4);{Object var8 = Preconditions.checkNotNull(param4);};
    int var10 = getUserId();
    Context var11 = this.mContext;
    String var13 = getCallingPackageName();
    Object var15 = this.mLock;
    TextClassificationManagerService$UserState var17 = getUserStateLocked(var10);
    boolean var19 = TextClassificationManagerService$UserState.access$400(var17);{boolean var19 = TextClassificationManagerService$UserState.access$400(var17);};
    boolean var22 = var17.isBoundLocked();
    Queue var23 = var17.mPendingRequests;
    TextClassificationManagerService$PendingRequest var24 = new TextClassificationManagerService$PendingRequest();
    -$$Lambda$TextClassificationManagerService$Fy5j26FLkbnEPhoh1kWzQnYhcm8 var25 = new -$$Lambda$TextClassificationManagerService$Fy5j26FLkbnEPhoh1kWzQnYhcm8();
    Object var28 = Objects.requireNonNull(param4);
    -$$Lambda$k-7KcqZH2A0AukChaKa6Xru13_Q var29 = new -$$Lambda$k-7KcqZH2A0AukChaKa6Xru13_Q();
    IBinder var32 = asBinder();<PATH_SEP>Object var6 = Preconditions.checkNotNull(param3);{Object var6 = Preconditions.checkNotNull(param3);};
    Object var8 = Preconditions.checkNotNull(param4);{Object var8 = Preconditions.checkNotNull(param4);};
    int var10 = getUserId();
    Context var11 = this.mContext;
    String var13 = getCallingPackageName();
    Object var15 = this.mLock;
    TextClassificationManagerService$UserState var17 = getUserStateLocked(var10);
    SparseArray var3 = this.mUserStates;
    Object var5 = var3.get(param2);
    TextClassificationManagerService$UserState var6 = (TextClassificationManagerService$UserState) var5;
    TextClassificationManagerService$UserState var8 = new TextClassificationManagerService$UserState();
    Context var9 = this.mContext;
    Object var10 = this.mLock;
    SparseArray var12 = this.mUserStates;
    var12.put(param2,var8);
}