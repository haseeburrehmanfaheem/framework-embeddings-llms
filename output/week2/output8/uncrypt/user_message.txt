// API: uncrypt
// Service: RecoverySystemService$BinderService_3

public void uncrypt() {
    Object var5 = RecoverySystemService.access$100();{Object var5 = RecoverySystemService.access$100();};
    RecoverySystemService var6 = this.this$0;
    Context var8 = RecoverySystemService.access$200(var6);{Context var8 = RecoverySystemService.access$200(var6);};
    boolean var13 = checkAndWaitForUncryptService();{boolean var13 = checkAndWaitForUncryptService();};
    File var14 = UNCRYPT_PACKAGE_FILE;
    boolean var16 = var14.delete();
    FileWriter var17 = new FileWriter();
    File var18 = UNCRYPT_PACKAGE_FILE;
    var17.write(var28);
    var17.close();
    SystemProperties.set(ctl.start,uncrypt);
    LocalSocket var65 = connectService();
    DataInputStream var66 = new DataInputStream();
    InputStream var68 = var65.getInputStream();
    DataOutputStream var70 = new DataOutputStream();
    OutputStream var72 = var65.getOutputStream();
    int var76 = var66.readInt();
    InputStream var3 = this.in;
    int var5 = var3.read();
    InputStream var6 = this.in;
    int var8 = var6.read();
    InputStream var9 = this.in;
    int var11 = var9.read();
    InputStream var12 = this.in;
    int var14 = var12.read();
    var15 = var5 or var8;
    var16 = var15 or var11;
    var17 = var16 or var14;
    var20 = var5 SHL 24;
    var22 = var8 SHL 16;
    var23 = var20 add var22;
    var25 = var11 SHL 8;
    var26 = var23 add var25;
    var27 = var14 SHL 0;
    var28 = var26 add var27;
    int var28<PATH_SEP>Object var5 = RecoverySystemService.access$100();{Object var5 = RecoverySystemService.access$100();};
    RecoverySystemService var6 = this.this$0;
    Context var8 = RecoverySystemService.access$200(var6);{Context var8 = RecoverySystemService.access$200(var6);};
    boolean var13 = checkAndWaitForUncryptService();{boolean var13 = checkAndWaitForUncryptService();};
    File var14 = UNCRYPT_PACKAGE_FILE;
    boolean var16 = var14.delete();
    FileWriter var17 = new FileWriter();
    File var18 = UNCRYPT_PACKAGE_FILE;
    var17.write(var28);
    var17.close();
    SystemProperties.set(ctl.start,uncrypt);
    LocalSocket var65 = connectService();
    DataInputStream var66 = new DataInputStream();
    InputStream var68 = var65.getInputStream();
    DataOutputStream var70 = new DataOutputStream();
    OutputStream var72 = var65.getOutputStream();
    int var76 = var66.readInt();
    onProgress(var76);
    var70.writeInt(0);
    OutputStream var4 = this.out;
    var6 = param2 USHR 24;
    var8 = var6 and 255;
    var4.write(var8);
    OutputStream var10 = this.out;
    var12 = param2 USHR 16;
    var13 = var12 and 255;
    var10.write(var13);
    OutputStream var15 = this.out;
    var17 = param2 USHR 8;
    var18 = var17 and 255;
    var15.write(var18);<PATH_SEP>Object var5 = RecoverySystemService.access$100();{Object var5 = RecoverySystemService.access$100();};
    RecoverySystemService var6 = this.this$0;
    Context var8 = RecoverySystemService.access$200(var6);{Context var8 = RecoverySystemService.access$200(var6);};
    boolean var13 = checkAndWaitForUncryptService();{boolean var13 = checkAndWaitForUncryptService();};
    File var14 = UNCRYPT_PACKAGE_FILE;
    boolean var16 = var14.delete();
    FileWriter var17 = new FileWriter();
    File var18 = UNCRYPT_PACKAGE_FILE;
    var17.write(var28);
    var17.close();
    SystemProperties.set(ctl.start,uncrypt);
    LocalSocket var65 = connectService();
    DataInputStream var66 = new DataInputStream();
    InputStream var68 = var65.getInputStream();
    DataOutputStream var70 = new DataOutputStream();
    OutputStream var72 = var65.getOutputStream();
    int var76 = var66.readInt();
    var70.writeInt(0);
    IoUtils.closeQuietly(var66);
    IoUtils.closeQuietly(var70);
    IoUtils.closeQuietly(var65);
    boolean 0<PATH_SEP>Object var5 = RecoverySystemService.access$100();{Object var5 = RecoverySystemService.access$100();};
    RecoverySystemService var6 = this.this$0;
    Context var8 = RecoverySystemService.access$200(var6);{Context var8 = RecoverySystemService.access$200(var6);};
    boolean var13 = checkAndWaitForUncryptService();{boolean var13 = checkAndWaitForUncryptService();};
    File var14 = UNCRYPT_PACKAGE_FILE;
    boolean var16 = var14.delete();
    FileWriter var17 = new FileWriter();
    File var18 = UNCRYPT_PACKAGE_FILE;
    var17.write(var28);
    var17.close();
    SystemProperties.set(ctl.start,uncrypt);
    LocalSocket var65 = connectService();
    LocalSocket var2 = new LocalSocket();
    LocalSocketAddress var7 = new LocalSocketAddress();
    LocalSocketAddress$Namespace var9 = RESERVED;
    var2.connect(var7);
    Landroid/net/LocalSocket 0;
}