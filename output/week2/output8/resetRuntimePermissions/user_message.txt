// API: resetRuntimePermissions
// Service: PackageManagerService_1

public void resetRuntimePermissions() {
    Context var2 = this.mContext;
    int var7 = Binder.getCallingUid();
    Context var10 = this.mContext;
    ArrayMap var17 = this.mPackages;
    PermissionManagerServiceInternal var18 = this.mPermissionManager;
    String var19 = UUID_PRIVATE_INTERNAL;
    ArrayMap var20 = this.mPackages;
    Collection var22 = var20.values();
    PermissionManagerServiceInternal$PermissionCallback var23 = this.mPermissionCallback;
    var18.updateAllPermissions(var19,0,var22,var23);
    UserManagerService var26 = UserManagerService.getInstance();
    [I var28 = var26.getUserIds();
    29 = arraylength 28;
    30 = arrayload 28[53];
    ArrayMap var31 = this.mPackages;
    int var33 = var31.size();
    ArrayMap var34 = this.mPackages;
    Object var36 = var34.valueAt(var47);
    PackageParser$Package var37 = (PackageParser$Package) var36;
    Object var38 = var37.mExtras;
    39 = instanceof 38 <Application,Lcom/android/server/pm/PackageSetting>;
    Object var40 = var37.mExtras;
    PackageSetting var41 = (PackageSetting) var40;
    resetUserChangesToRuntimePermissionsAndFlagsLPw(var41,var30);
    PackageParser$Package var4 = param2.pkg;
    PackageParser$Package var6 = param2.pkg;
    String var7 = var6.packageName;
    [Z var11 = new [Z(1);
    ArraySet var12 = new ArraySet();
    SparseBooleanArray var14 = new SparseBooleanArray();
    PackageManagerService$5 var16 = new PackageManagerService$5();
    Context var18 = this.mContext;
    19 = load_metadata: <Application,Landroid/app/AppOpsManager>;
    <Primordial,Ljava/lang/Class>;
    Object var21 = var18.getSystemService(var19);
    AppOpsManager var22 = (AppOpsManager) var21;
    PackageParser$Package var23 = param2.pkg;
    ApplicationInfo var24 = var23.applicationInfo;
    int var25 = var24.uid;
    int var27 = UserHandle.getUid(param3,var25);
    PackageParser$Package var28 = param2.pkg;
    ArrayList var29 = var28.requestedPermissions;
    int var31 = var29.size();
    PackageParser$Package var32 = param2.pkg;
    ArrayList var33 = var32.requestedPermissions;
    Object var35 = var33.get(var147);
    String var36 = (String) var35;
    PermissionManagerServiceInternal var37 = this.mPermissionManager;
    BasePermission var39 = var37.getPermissionTEMP(var36);
    boolean var41 = var39.isRemoved();
    SharedUserSetting var42 = param2.sharedUser;
    SharedUserSetting var43 = param2.sharedUser;
    ArraySet var44 = var43.packages;
    int var46 = var44.size();
    SharedUserSetting var47 = param2.sharedUser;
    ArraySet var48 = var47.packages;
    Object var50 = var48.valueAt(var55);
    PackageSetting var51 = (PackageSetting) var50;
    PackageParser$Package var52 = var51.pkg;
    PackageParser$Package var59 = var51.pkg;
    String var60 = var59.packageName;
    PackageParser$Package var61 = param2.pkg;
    String var62 = var61.packageName;
    boolean var64 = var60.equals(var62);
    PackageParser$Package var69 = var51.pkg;
    ArrayList var70 = var69.requestedPermissions;
    boolean var72 = var70.contains(var36);
    PermissionManagerServiceInternal var85 = this.mPermissionManager;
    int var88 = var85.getPermissionFlags(var36,var7,1000,param3);
    PackageParser$Package var89 = param2.pkg;
    ApplicationInfo var90 = var89.applicationInfo;
    int var91 = var90.targetSdkVersion;
    PermissionManagerServiceInternal var105 = this.mPermissionManager;
    var105.updatePermissionFlags(var36,var7,75,var102,1000,param3,0,var16);<PATH_SEP>Context var2 = this.mContext;
    int var7 = Binder.getCallingUid();
    Context var10 = this.mContext;
    ArrayMap var17 = this.mPackages;
    PermissionManagerServiceInternal var18 = this.mPermissionManager;
    String var19 = UUID_PRIVATE_INTERNAL;
    ArrayMap var20 = this.mPackages;
    Collection var22 = var20.values();
    PermissionManagerServiceInternal$PermissionCallback var23 = this.mPermissionCallback;
    var18.updateAllPermissions(var19,0,var22,var23);
    UserManagerService var26 = UserManagerService.getInstance();
    [I var28 = var26.getUserIds();
    29 = arraylength 28;
    30 = arrayload 28[53];
    ArrayMap var31 = this.mPackages;
    int var33 = var31.size();
    ArrayMap var34 = this.mPackages;
    Object var36 = var34.valueAt(var47);
    PackageParser$Package var37 = (PackageParser$Package) var36;
    Object var38 = var37.mExtras;
    39 = instanceof 38 <Application,Lcom/android/server/pm/PackageSetting>;
    Object var40 = var37.mExtras;
    PackageSetting var41 = (PackageSetting) var40;
    resetUserChangesToRuntimePermissionsAndFlagsLPw(var41,var30);
    PackageParser$Package var4 = param2.pkg;
    PackageParser$Package var6 = param2.pkg;
    String var7 = var6.packageName;
    [Z var11 = new [Z(1);
    ArraySet var12 = new ArraySet();
    SparseBooleanArray var14 = new SparseBooleanArray();
    PackageManagerService$5 var16 = new PackageManagerService$5();
    Context var18 = this.mContext;
    19 = load_metadata: <Application,Landroid/app/AppOpsManager>;
    <Primordial,Ljava/lang/Class>;
    Object var21 = var18.getSystemService(var19);
    AppOpsManager var22 = (AppOpsManager) var21;
    PackageParser$Package var23 = param2.pkg;
    ApplicationInfo var24 = var23.applicationInfo;
    int var25 = var24.uid;
    int var27 = UserHandle.getUid(param3,var25);
    PackageParser$Package var28 = param2.pkg;
    ArrayList var29 = var28.requestedPermissions;
    int var31 = var29.size();
    PackageParser$Package var32 = param2.pkg;
    ArrayList var33 = var32.requestedPermissions;
    Object var35 = var33.get(var147);
    String var36 = (String) var35;
    PermissionManagerServiceInternal var37 = this.mPermissionManager;
    BasePermission var39 = var37.getPermissionTEMP(var36);
    boolean var41 = var39.isRemoved();
    SharedUserSetting var42 = param2.sharedUser;
    SharedUserSetting var43 = param2.sharedUser;
    ArraySet var44 = var43.packages;
    int var46 = var44.size();
    SharedUserSetting var47 = param2.sharedUser;
    ArraySet var48 = var47.packages;
    Object var50 = var48.valueAt(var55);
    PackageSetting var51 = (PackageSetting) var50;
    PackageParser$Package var52 = var51.pkg;
    PackageParser$Package var59 = var51.pkg;
    String var60 = var59.packageName;
    PackageParser$Package var61 = param2.pkg;
    String var62 = var61.packageName;
    boolean var64 = var60.equals(var62);
    PackageParser$Package var69 = var51.pkg;
    ArrayList var70 = var69.requestedPermissions;
    boolean var72 = var70.contains(var36);
    PermissionManagerServiceInternal var85 = this.mPermissionManager;
    int var88 = var85.getPermissionFlags(var36,var7,1000,param3);
    PackageParser$Package var89 = param2.pkg;
    ApplicationInfo var90 = var89.applicationInfo;
    int var91 = var90.targetSdkVersion;
    PermissionManagerServiceInternal var105 = this.mPermissionManager;
    var105.updatePermissionFlags(var36,var7,75,var102,1000,param3,0,var16);
    boolean var108 = var39.isRuntime();
    var110 = var88 and 20;
    var112 = var88 and 32;
    var114 = var102 and 64;
    PermissionManagerServiceInternal var115 = this.mPermissionManager;
    var115.revokeRuntimePermission(var36,var7,0,param3,var16);<PATH_SEP>Context var2 = this.mContext;
    int var7 = Binder.getCallingUid();
    Context var10 = this.mContext;
    ArrayMap var17 = this.mPackages;
    PermissionManagerServiceInternal var18 = this.mPermissionManager;
    String var19 = UUID_PRIVATE_INTERNAL;
    ArrayMap var20 = this.mPackages;
    Collection var22 = var20.values();
    PermissionManagerServiceInternal$PermissionCallback var23 = this.mPermissionCallback;
    var18.updateAllPermissions(var19,0,var22,var23);
    UserManagerService var26 = UserManagerService.getInstance();
    [I var28 = var26.getUserIds();
    29 = arraylength 28;
    30 = arrayload 28[53];
    ArrayMap var31 = this.mPackages;
    int var33 = var31.size();
    ArrayMap var34 = this.mPackages;
    Object var36 = var34.valueAt(var47);
    PackageParser$Package var37 = (PackageParser$Package) var36;
    Object var38 = var37.mExtras;
    39 = instanceof 38 <Application,Lcom/android/server/pm/PackageSetting>;
    Object var40 = var37.mExtras;
    PackageSetting var41 = (PackageSetting) var40;
    resetUserChangesToRuntimePermissionsAndFlagsLPw(var41,var30);
    PackageParser$Package var4 = param2.pkg;
    PackageParser$Package var6 = param2.pkg;
    String var7 = var6.packageName;
    [Z var11 = new [Z(1);
    ArraySet var12 = new ArraySet();
    SparseBooleanArray var14 = new SparseBooleanArray();
    PackageManagerService$5 var16 = new PackageManagerService$5();
    Context var18 = this.mContext;
    19 = load_metadata: <Application,Landroid/app/AppOpsManager>;
    <Primordial,Ljava/lang/Class>;
    Object var21 = var18.getSystemService(var19);
    AppOpsManager var22 = (AppOpsManager) var21;
    PackageParser$Package var23 = param2.pkg;
    ApplicationInfo var24 = var23.applicationInfo;
    int var25 = var24.uid;
    int var27 = UserHandle.getUid(param3,var25);
    PackageParser$Package var28 = param2.pkg;
    ArrayList var29 = var28.requestedPermissions;
    int var31 = var29.size();
    PackageParser$Package var32 = param2.pkg;
    ArrayList var33 = var32.requestedPermissions;
    Object var35 = var33.get(var147);
    String var36 = (String) var35;
    PermissionManagerServiceInternal var37 = this.mPermissionManager;
    BasePermission var39 = var37.getPermissionTEMP(var36);
    boolean var41 = var39.isRemoved();
    SharedUserSetting var42 = param2.sharedUser;
    SharedUserSetting var43 = param2.sharedUser;
    ArraySet var44 = var43.packages;
    int var46 = var44.size();
    SharedUserSetting var47 = param2.sharedUser;
    ArraySet var48 = var47.packages;
    Object var50 = var48.valueAt(var55);
    PackageSetting var51 = (PackageSetting) var50;
    PackageParser$Package var52 = var51.pkg;
    PackageParser$Package var59 = var51.pkg;
    String var60 = var59.packageName;
    PackageParser$Package var61 = param2.pkg;
    String var62 = var61.packageName;
    boolean var64 = var60.equals(var62);
    PackageParser$Package var69 = var51.pkg;
    ArrayList var70 = var69.requestedPermissions;
    boolean var72 = var70.contains(var36);
    PermissionManagerServiceInternal var85 = this.mPermissionManager;
    int var88 = var85.getPermissionFlags(var36,var7,1000,param3);
    PackageParser$Package var89 = param2.pkg;
    ApplicationInfo var90 = var89.applicationInfo;
    int var91 = var90.targetSdkVersion;
    boolean var94 = var39.isRuntime();
    var96 = 0 or 72;
    PermissionManagerServiceInternal var105 = this.mPermissionManager;
    var105.updatePermissionFlags(var36,var7,75,var102,1000,param3,0,var16);
    boolean var108 = var39.isRuntime();
    var110 = var88 and 20;
    var112 = var88 and 32;
    PermissionManagerServiceInternal var117 = this.mPermissionManager;
    var117.grantRuntimePermission(var36,var7,0,1000,param3,var16);
    String var120 = AppOpsManager.permissionToOp(var36);
    PackageManagerService$PackageHandler var121 = this.mHandler;
    -$$Lambda$PackageManagerService$8lLKUxZNhnq1cR4oo-5Pu_xXk4E var122 = new -$$Lambda$PackageManagerService$8lLKUxZNhnq1cR4oo-5Pu_xXk4E();
    boolean var125 = var121.post(var122);<PATH_SEP>Context var2 = this.mContext;
    int var7 = Binder.getCallingUid();
    Context var10 = this.mContext;
    ArrayMap var17 = this.mPackages;
    PermissionManagerServiceInternal var18 = this.mPermissionManager;
    String var19 = UUID_PRIVATE_INTERNAL;
    ArrayMap var20 = this.mPackages;
    Collection var22 = var20.values();
    PermissionManagerServiceInternal$PermissionCallback var23 = this.mPermissionCallback;
    var18.updateAllPermissions(var19,0,var22,var23);
    UserManagerService var26 = UserManagerService.getInstance();
    [I var28 = var26.getUserIds();
    29 = arraylength 28;
    30 = arrayload 28[53];
    ArrayMap var31 = this.mPackages;
    int var33 = var31.size();
    ArrayMap var34 = this.mPackages;
    Object var36 = var34.valueAt(var47);
    PackageParser$Package var37 = (PackageParser$Package) var36;
    Object var38 = var37.mExtras;
    39 = instanceof 38 <Application,Lcom/android/server/pm/PackageSetting>;
    Object var40 = var37.mExtras;
    PackageSetting var41 = (PackageSetting) var40;
    resetUserChangesToRuntimePermissionsAndFlagsLPw(var41,var30);
    PackageParser$Package var4 = param2.pkg;
    PackageParser$Package var6 = param2.pkg;
    String var7 = var6.packageName;
    [Z var11 = new [Z(1);
    ArraySet var12 = new ArraySet();
    SparseBooleanArray var14 = new SparseBooleanArray();
    PackageManagerService$5 var16 = new PackageManagerService$5();
    Context var18 = this.mContext;
    19 = load_metadata: <Application,Landroid/app/AppOpsManager>;
    <Primordial,Ljava/lang/Class>;
    Object var21 = var18.getSystemService(var19);
    AppOpsManager var22 = (AppOpsManager) var21;
    PackageParser$Package var23 = param2.pkg;
    ApplicationInfo var24 = var23.applicationInfo;
    int var25 = var24.uid;
    int var27 = UserHandle.getUid(param3,var25);
    PackageParser$Package var28 = param2.pkg;
    ArrayList var29 = var28.requestedPermissions;
    int var31 = var29.size();
    PackageParser$Package var32 = param2.pkg;
    ArrayList var33 = var32.requestedPermissions;
    Object var35 = var33.get(var147);
    String var36 = (String) var35;
    PermissionManagerServiceInternal var37 = this.mPermissionManager;
    BasePermission var39 = var37.getPermissionTEMP(var36);
    boolean var41 = var39.isRemoved();
    SharedUserSetting var42 = param2.sharedUser;
    SharedUserSetting var43 = param2.sharedUser;
    ArraySet var44 = var43.packages;
    int var46 = var44.size();
    SharedUserSetting var47 = param2.sharedUser;
    ArraySet var48 = var47.packages;
    Object var50 = var48.valueAt(var55);
    PackageSetting var51 = (PackageSetting) var50;
    PackageParser$Package var52 = var51.pkg;
    PackageParser$Package var59 = var51.pkg;
    String var60 = var59.packageName;
    PackageParser$Package var61 = param2.pkg;
    String var62 = var61.packageName;
    boolean var64 = var60.equals(var62);
    PackageParser$Package var69 = var51.pkg;
    ArrayList var70 = var69.requestedPermissions;
    boolean var72 = var70.contains(var36);
    PermissionManagerServiceInternal var85 = this.mPermissionManager;
    int var88 = var85.getPermissionFlags(var36,var7,1000,param3);
    PackageParser$Package var89 = param2.pkg;
    ApplicationInfo var90 = var89.applicationInfo;
    int var91 = var90.targetSdkVersion;
    boolean var94 = var39.isRuntime();
    var96 = 0 or 72;
    PermissionManagerServiceInternal var105 = this.mPermissionManager;
    var105.updatePermissionFlags(var36,var7,75,var102,1000,param3,0,var16);
    boolean var108 = var39.isRuntime();
    var110 = var88 and 20;
    var112 = var88 and 32;
    PermissionManagerServiceInternal var117 = this.mPermissionManager;
    var117.grantRuntimePermission(var36,var7,0,1000,param3,var16);
    String var120 = AppOpsManager.permissionToOp(var36);
    HashMap var2 = sPermToOp;
    Object var4 = var2.get(this);
    Integer var5 = (Integer) var4;
    String var7 = sOpToString;
    int var9 = var5.intValue();
    10 = arrayload 7[9];
    Ljava/lang/String var10;
}