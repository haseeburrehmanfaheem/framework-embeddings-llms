// API: queryUsageStats
// Service: UsageStatsService$BinderService_5

public void queryUsageStats() {
    UsageStatsService var9 = this.this$0;
    int var11 = Binder.getCallingUid();
    int var13 = UserHandle.getCallingUserId();
    boolean var15 = UsageStatsService.access$900(var9,var11,var13);{boolean var15 = UsageStatsService.access$900(var9,var11,var13);};
    int var17 = UserHandle.getCallingUserId();
    long var19 = Binder.clearCallingIdentity();
    UsageStatsService var20 = this.this$0;
    List var22 = var20.queryUsageStats(var17,param2,param3,param4,var15);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param4,param5);{boolean var11 = UsageStatsService.validRange(var9,param4,param5);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    SparseArray var4 = this.mUserState;
    Object var6 = var4.get(param2);
    UserUsageStatsService var7 = (UserUsageStatsService) var6;
    UserUsageStatsService var9 = new UserUsageStatsService();
    Context var11 = getContext();
    File var12 = new File();
    File var13 = this.mUsageStatsDir;
    String var15 = Integer.toString(param2);
    var9.init(param3);
    UsageStatsDatabase var3 = this.mDatabase;
    var3.init(param2);
    IntervalStats var6 = this.mCurrentStats;
    7 = arraylength 6;
    updateRolloverDeadline();
    IntervalStats var44 = this.mCurrentStats;
    45 = arrayload 44[5];
    UsageStatsDatabase var65 = this.mDatabase;
    boolean var67 = var65.isNewUpdate();{boolean var67 = var65.isNewUpdate();};
    notifyNewUpdate();<PATH_SEP>UsageStatsService var9 = this.this$0;
    int var11 = Binder.getCallingUid();
    int var13 = UserHandle.getCallingUserId();
    boolean var15 = UsageStatsService.access$900(var9,var11,var13);{boolean var15 = UsageStatsService.access$900(var9,var11,var13);};
    int var17 = UserHandle.getCallingUserId();
    long var19 = Binder.clearCallingIdentity();
    UsageStatsService var20 = this.this$0;
    List var22 = var20.queryUsageStats(var17,param2,param3,param4,var15);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param4,param5);{boolean var11 = UsageStatsService.validRange(var9,param4,param5);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    SparseArray var4 = this.mUserState;
    Object var6 = var4.get(param2);
    UserUsageStatsService var7 = (UserUsageStatsService) var6;
    UserUsageStatsService var9 = new UserUsageStatsService();
    Context var11 = getContext();
    File var12 = new File();
    File var13 = this.mUsageStatsDir;
    String var15 = Integer.toString(param2);
    var9.init(param3);
    UsageStatsDatabase var3 = this.mDatabase;
    var3.init(param2);
    IntervalStats var6 = this.mCurrentStats;
    7 = arraylength 6;
    21 = arraylength 6;
    loadActiveStats(param2);
    IntervalStats var44 = this.mCurrentStats;
    45 = arrayload 44[5];
    UsageEvents$Event var46 = new UsageEvents$Event();
    long var48 = var45.lastTimeSaved;
    long var49 = var45.endTime;
    long var51 = Math.max(var48,var49);
    var46.mPackage = android;
    var45.addEvent(var46);
    UsageEvents$Event var55 = new UsageEvents$Event();
    long var58 = System.currentTimeMillis();
    var55.mPackage = android;
    var45.addEvent(var55);
    UsageStatsDatabase var65 = this.mDatabase;
    boolean var67 = var65.isNewUpdate();{boolean var67 = var65.isNewUpdate();};
    notifyNewUpdate();<PATH_SEP>UsageStatsService var9 = this.this$0;
    int var11 = Binder.getCallingUid();
    int var13 = UserHandle.getCallingUserId();
    boolean var15 = UsageStatsService.access$900(var9,var11,var13);{boolean var15 = UsageStatsService.access$900(var9,var11,var13);};
    int var17 = UserHandle.getCallingUserId();
    long var19 = Binder.clearCallingIdentity();
    UsageStatsService var20 = this.this$0;
    List var22 = var20.queryUsageStats(var17,param2,param3,param4,var15);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param4,param5);{boolean var11 = UsageStatsService.validRange(var9,param4,param5);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    SparseArray var4 = this.mUserState;
    Object var6 = var4.get(param2);
    UserUsageStatsService var7 = (UserUsageStatsService) var6;
    UserUsageStatsService var9 = new UserUsageStatsService();
    Context var11 = getContext();
    File var12 = new File();
    File var13 = this.mUsageStatsDir;
    String var15 = Integer.toString(param2);
    var9.init(param3);
    UsageStatsDatabase var3 = this.mDatabase;
    var3.init(param2);
    IntervalStats var6 = this.mCurrentStats;
    7 = arraylength 6;
    updateRolloverDeadline();
    IntervalStats var44 = this.mCurrentStats;
    45 = arrayload 44[5];
    UsageEvents$Event var46 = new UsageEvents$Event();
    long var48 = var45.lastTimeSaved;
    long var49 = var45.endTime;
    long var51 = Math.max(var48,var49);
    var46.mPackage = android;
    var45.addEvent(var46);
    UsageEvents$Event var55 = new UsageEvents$Event();
    long var58 = System.currentTimeMillis();
    var55.mPackage = android;<PATH_SEP>UsageStatsService var9 = this.this$0;
    int var11 = Binder.getCallingUid();
    int var13 = UserHandle.getCallingUserId();
    boolean var15 = UsageStatsService.access$900(var9,var11,var13);{boolean var15 = UsageStatsService.access$900(var9,var11,var13);};
    int var17 = UserHandle.getCallingUserId();
    long var19 = Binder.clearCallingIdentity();
    UsageStatsService var20 = this.this$0;
    List var22 = var20.queryUsageStats(var17,param2,param3,param4,var15);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param4,param5);{boolean var11 = UsageStatsService.validRange(var9,param4,param5);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    List var16 = var14.queryUsageStats(param3,param4,param5);
    UsageStatsDatabase$StatCombiner var5 = sUsageStatsCombiner;
    List var7 = queryStats(param2,param3,param4,var5);
    Ljava/util/List var7;
}