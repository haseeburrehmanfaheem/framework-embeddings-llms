// API: showSoftInput
// Service: MultiClientInputMethodManagerService$ApiCallbacks_4

public void showSoftInput() {
    int var6 = Binder.getCallingUid();
    int var8 = Binder.getCallingPid();
    int var10 = UserHandle.getUserId(var6);
    MultiClientInputMethodManagerService$UserDataMap var11 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var13 = var11.get(var10);
    Object var15 = var13.mLock;
    MultiClientInputMethodManagerService$InputMethodClientInfo var17 = var13.getClientLocked(param2);
    int var18 = var17.mUid;
    int var19 = var17.mState;
    IMultiClientInputMethodSession var23 = var17.mMSInputMethodSession;
    var23.showSoftInput(param3,param4);
    Object var4 = this.mSessionLock;
    MultiClientInputMethodClientCallbackAdaptor$CallbackImpl var5 = this.mCallbackImpl;
    Handler var7 = this.mHandler;<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = Binder.getCallingPid();
    int var10 = UserHandle.getUserId(var6);
    MultiClientInputMethodManagerService$UserDataMap var11 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var13 = var11.get(var10);
    Object var15 = var13.mLock;
    MultiClientInputMethodManagerService$InputMethodClientInfo var17 = var13.getClientLocked(param2);
    int var18 = var17.mUid;
    int var19 = var17.mState;
    IMultiClientInputMethodSession var23 = var17.mMSInputMethodSession;
    var23.showSoftInput(param3,param4);
    boolean 1<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = Binder.getCallingPid();
    int var10 = UserHandle.getUserId(var6);
    MultiClientInputMethodManagerService$UserDataMap var11 = this.mUserDataMap;
    MultiClientInputMethodManagerService$PerUserData var13 = var11.get(var10);
    Object var15 = var13.mLock;
    MultiClientInputMethodManagerService$InputMethodClientInfo var17 = var13.getClientLocked(param2);
    int var18 = var17.mUid;
    int var19 = var17.mState;
    IMultiClientInputMethodSession var23 = var17.mMSInputMethodSession;
    var23.showSoftInput(param3,param4);
    Object var4 = this.mSessionLock;
    MultiClientInputMethodClientCallbackAdaptor$CallbackImpl var5 = this.mCallbackImpl;
    Handler var7 = this.mHandler;
    Handler var8 = this.mHandler;
    -$$Lambda$m1uOlwS-mRsg9KSUY6vV9l9ksWc var9 = INSTANCE;
    MultiClientInputMethodClientCallbackAdaptor$CallbackImpl var10 = this.mCallbackImpl;
    Integer var12 = Integer.valueOf(param2);
    Message var14 = PooledLambda.obtainMessage(var9,var10,var12,param3);
    boolean var16 = var8.sendMessage(var14);
}