// API: sendFingerprintGesture
// Service: AccessibilityManagerService_2

public void sendFingerprintGesture() {
    Object var3 = this.mLock;
    int var5 = Binder.getCallingUid();
    int var7 = UserHandle.getAppId(var5);
    FingerprintGestureDispatcher var17 = this.mFingerprintGestureDispatcher;
    boolean var20 = var17.onFingerprintGesture(param2);
    Object var3 = this.mLock;
    List var4 = this.mCapturingClients;
    boolean var6 = var4.isEmpty();
    9: switch 2 [280->26,281->23,282->21,283->19] default: 17;
    ArrayList var13 = new ArrayList();
    List var14 = this.mCapturingClients;
    int var17 = var13.size();
    Object var19 = var13.get(var24);
    FingerprintGestureDispatcher$FingerprintGestureClient var20 = (FingerprintGestureDispatcher$FingerprintGestureClient) var19;
    var20.onFingerprintGesture(var12);
    boolean var4 = isCapturingFingerprintGestures();<PATH_SEP>Object var3 = this.mLock;
    int var5 = Binder.getCallingUid();
    int var7 = UserHandle.getAppId(var5);
    FingerprintGestureDispatcher var17 = this.mFingerprintGestureDispatcher;
    boolean var20 = var17.onFingerprintGesture(param2);
    Object var3 = this.mLock;
    List var4 = this.mCapturingClients;
    boolean var6 = var4.isEmpty();
    9: switch 2 [280->26,281->23,282->21,283->19] default: 17;
    ArrayList var13 = new ArrayList();
    List var14 = this.mCapturingClients;
    int var17 = var13.size();
    Object var19 = var13.get(var24);
    FingerprintGestureDispatcher$FingerprintGestureClient var20 = (FingerprintGestureDispatcher$FingerprintGestureClient) var19;
    var20.onFingerprintGesture(var12);
    boolean var4 = isCapturingFingerprintGestures();
    IAccessibilityServiceClient var2 = this.mServiceInterface;
    AccessibilityManagerService$SecurityPolicy var4 = this.mSecurityPolicy;
    boolean var6 = var4.canCaptureFingerprintGestures(this);<PATH_SEP>Object var3 = this.mLock;
    int var5 = Binder.getCallingUid();
    int var7 = UserHandle.getAppId(var5);
    FingerprintGestureDispatcher var17 = this.mFingerprintGestureDispatcher;
    boolean var20 = var17.onFingerprintGesture(param2);
    Object var3 = this.mLock;
    List var4 = this.mCapturingClients;
    boolean var6 = var4.isEmpty();
    9: switch 2 [280->26,281->23,282->21,283->19] default: 17;
    ArrayList var13 = new ArrayList();
    List var14 = this.mCapturingClients;
    int var17 = var13.size();
    Object var19 = var13.get(var24);
    FingerprintGestureDispatcher$FingerprintGestureClient var20 = (FingerprintGestureDispatcher$FingerprintGestureClient) var19;
    var20.onFingerprintGesture(var12);
    boolean var4 = isCapturingFingerprintGestures();
    IAccessibilityServiceClient var2 = this.mServiceInterface;
    AccessibilityManagerService$SecurityPolicy var4 = this.mSecurityPolicy;
    boolean var6 = var4.canCaptureFingerprintGestures(this);
    boolean var7 = this.mCaptureFingerprintGestures;
    boolean var10<PATH_SEP>Object var3 = this.mLock;
    int var5 = Binder.getCallingUid();
    int var7 = UserHandle.getAppId(var5);
    FingerprintGestureDispatcher var17 = this.mFingerprintGestureDispatcher;
    boolean var20 = var17.onFingerprintGesture(param2);
    Object var3 = this.mLock;
    List var4 = this.mCapturingClients;
    boolean var6 = var4.isEmpty();
    9: switch 2 [280->26,281->23,282->21,283->19] default: 17;
    ArrayList var13 = new ArrayList();
    List var14 = this.mCapturingClients;
    int var17 = var13.size();
    Object var19 = var13.get(var24);
    FingerprintGestureDispatcher$FingerprintGestureClient var20 = (FingerprintGestureDispatcher$FingerprintGestureClient) var19;
    var20.onFingerprintGesture(var12);
    boolean var4 = isCapturingFingerprintGestures();
    IAccessibilityServiceClient var2 = this.mServiceInterface;
    boolean var10;
}