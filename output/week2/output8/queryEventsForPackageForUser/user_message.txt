// API: queryEventsForPackageForUser
// Service: UsageStatsService$BinderService_6

public void queryEventsForPackageForUser() {
    int var11 = UserHandle.getCallingUserId();
    UsageStatsService var12 = this.this$0;
    Context var14 = var12.getContext();
    long var23 = Binder.clearCallingIdentity();
    UsageStatsService var24 = this.this$0;
    UsageEvents var27 = var24.queryEventsForPackage(param4,param2,param3,param5,1);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param3,param4);{boolean var11 = UsageStatsService.validRange(var9,param3,param4);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    SparseArray var4 = this.mUserState;
    Object var6 = var4.get(param2);
    UserUsageStatsService var7 = (UserUsageStatsService) var6;
    UserUsageStatsService var9 = new UserUsageStatsService();
    Context var11 = getContext();
    File var12 = new File();
    File var13 = this.mUsageStatsDir;
    String var15 = Integer.toString(param2);
    var9.init(param3);
    UsageStatsDatabase var3 = this.mDatabase;
    var3.init(param2);
    IntervalStats var6 = this.mCurrentStats;
    7 = arraylength 6;
    21 = arraylength 6;
    String var24 = this.mLogPrefix;
    loadActiveStats(param2);
    IntervalStats var44 = this.mCurrentStats;
    45 = arrayload 44[5];
    UsageEvents$Event var46 = new UsageEvents$Event();
    long var48 = var45.lastTimeSaved;
    long var49 = var45.endTime;
    long var51 = Math.max(var48,var49);
    var46.mPackage = android;<PATH_SEP>int var11 = UserHandle.getCallingUserId();
    UsageStatsService var12 = this.this$0;
    Context var14 = var12.getContext();
    long var23 = Binder.clearCallingIdentity();
    UsageStatsService var24 = this.this$0;
    UsageEvents var27 = var24.queryEventsForPackage(param4,param2,param3,param5,1);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param3,param4);{boolean var11 = UsageStatsService.validRange(var9,param3,param4);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    SparseArray var4 = this.mUserState;
    Object var6 = var4.get(param2);
    UserUsageStatsService var7 = (UserUsageStatsService) var6;
    UserUsageStatsService var9 = new UserUsageStatsService();
    Context var11 = getContext();
    File var12 = new File();
    File var13 = this.mUsageStatsDir;
    String var15 = Integer.toString(param2);
    var9.init(param3);
    UsageStatsDatabase var3 = this.mDatabase;
    var3.init(param2);
    IntervalStats var6 = this.mCurrentStats;
    7 = arraylength 6;
    21 = arraylength 6;
    loadActiveStats(param2);
    IntervalStats var44 = this.mCurrentStats;
    45 = arrayload 44[5];
    UsageEvents$Event var46 = new UsageEvents$Event();
    long var48 = var45.lastTimeSaved;
    long var49 = var45.endTime;
    long var51 = Math.max(var48,var49);
    var46.mPackage = android;
    var45.addEvent(var46);
    UsageEvents$Event var55 = new UsageEvents$Event();
    long var58 = System.currentTimeMillis();
    var55.mPackage = android;
    var45.addEvent(var55);<PATH_SEP>int var11 = UserHandle.getCallingUserId();
    UsageStatsService var12 = this.this$0;
    Context var14 = var12.getContext();
    long var23 = Binder.clearCallingIdentity();
    UsageStatsService var24 = this.this$0;
    UsageEvents var27 = var24.queryEventsForPackage(param4,param2,param3,param5,1);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param3,param4);{boolean var11 = UsageStatsService.validRange(var9,param3,param4);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    SparseArray var4 = this.mUserState;
    Object var6 = var4.get(param2);
    UserUsageStatsService var7 = (UserUsageStatsService) var6;
    UserUsageStatsService var9 = new UserUsageStatsService();
    Context var11 = getContext();
    File var12 = new File();
    File var13 = this.mUsageStatsDir;
    String var15 = Integer.toString(param2);
    var9.init(param3);<PATH_SEP>int var11 = UserHandle.getCallingUserId();
    UsageStatsService var12 = this.this$0;
    Context var14 = var12.getContext();
    long var23 = Binder.clearCallingIdentity();
    UsageStatsService var24 = this.this$0;
    UsageEvents var27 = var24.queryEventsForPackage(param4,param2,param3,param5,1);
    Object var7 = this.mLock;
    long var9 = checkAndGetTimeLocked();{long var9 = checkAndGetTimeLocked();};
    boolean var11 = UsageStatsService.validRange(var9,param3,param4);{boolean var11 = UsageStatsService.validRange(var9,param3,param4);};
    UserUsageStatsService var14 = getUserDataAndInitializeIfNeededLocked(param2,var9);
    SparseArray var4 = this.mUserState;
    Object var6 = var4.get(param2);
    UserUsageStatsService var7 = (UserUsageStatsService) var6;
    UserUsageStatsService var9 = new UserUsageStatsService();
    Context var11 = getContext();
    File var12 = new File();
    File var13 = this.mUsageStatsDir;
    String var15 = Integer.toString(param2);
    var9.init(param3);
    UsageStatsDatabase var3 = this.mDatabase;
    var3.init(param2);
    IntervalStats var6 = this.mCurrentStats;
    7 = arraylength 6;
    21 = arraylength 6;
    String var24 = this.mLogPrefix;
    loadActiveStats(param2);
    IntervalStats var44 = this.mCurrentStats;
    45 = arrayload 44[5];
    UsageEvents$Event var46 = new UsageEvents$Event();
    long var48 = var45.lastTimeSaved;
    long var49 = var45.endTime;
    long var51 = Math.max(var48,var49);
    var46.mPackage = android;
    var45.addEvent(var46);
    UsageEvents$Event var55 = new UsageEvents$Event();
    long var58 = System.currentTimeMillis();
    var55.mPackage = android;
    var45.addEvent(var55);
    UsageStatsDatabase var65 = this.mDatabase;
    boolean var67 = var65.isNewUpdate();{boolean var67 = var65.isNewUpdate();};
    notifyNewUpdate();
}