// API: removePrintServicesChangeListener
// Service: PrintManagerService$PrintManagerImpl_3

public void removePrintServicesChangeListener() {
    Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrintServicesChangeListener var6 = (IPrintServicesChangeListener) var5;
    Context var7 = this.mContext;
    int var12 = resolveCallingUserEnforcingPermissions(param3);
    Object var13 = this.mLock;
    int var15 = resolveCallingProfileParentLocked(var12);
    int var4 = getCurrentUserId();
    long var6 = Binder.clearCallingIdentity();
    UserManager var7 = this.mUserManager;
    UserInfo var9 = var7.getProfileParent(param2);
    Binder.restoreCallingIdentity(var6);
    int -10<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrintServicesChangeListener var6 = (IPrintServicesChangeListener) var5;
    Context var7 = this.mContext;
    int var12 = resolveCallingUserEnforcingPermissions(param3);
    Object var13 = this.mLock;
    int var15 = resolveCallingProfileParentLocked(var12);
    int var17 = getCurrentUserId();
    UserState var19 = getOrCreateUserStateLocked(var12,0);
    long var21 = Binder.clearCallingIdentity();
    var19.removePrintServicesChangeListener(var6);
    Object var3 = this.mLock;
    throwIfDestroyedLocked();
    List var5 = this.mPrintServicesChangeListenerRecords;
    List var7 = this.mPrintServicesChangeListenerRecords;
    int var9 = var7.size();
    List var10 = this.mPrintServicesChangeListenerRecords;
    Object var12 = var10.get(var24);
    UserState$ListenerRecord var13 = (UserState$ListenerRecord) var12;
    IInterface var14 = var13.listener;
    IPrintServicesChangeListener var15 = (IPrintServicesChangeListener) var14;
    IBinder var17 = var15.asBinder();
    IBinder var19 = asBinder();<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrintServicesChangeListener var6 = (IPrintServicesChangeListener) var5;
    Context var7 = this.mContext;
    int var12 = resolveCallingUserEnforcingPermissions(param3);
    Object var13 = this.mLock;
    int var15 = resolveCallingProfileParentLocked(var12);
    int var17 = getCurrentUserId();
    UserState var19 = getOrCreateUserStateLocked(var12,0);
    long var21 = Binder.clearCallingIdentity();
    var19.removePrintServicesChangeListener(var6);
    Object var3 = this.mLock;
    throwIfDestroyedLocked();
    List var5 = this.mPrintServicesChangeListenerRecords;
    List var7 = this.mPrintServicesChangeListenerRecords;
    int var9 = var7.size();
    List var10 = this.mPrintServicesChangeListenerRecords;
    Object var12 = var10.get(var24);
    UserState$ListenerRecord var13 = (UserState$ListenerRecord) var12;
    IInterface var14 = var13.listener;
    IPrintServicesChangeListener var15 = (IPrintServicesChangeListener) var14;
    IBinder var17 = var15.asBinder();
    IBinder var19 = asBinder();
    boolean var21 = var17.equals(var19);
    var13.destroy();
    List var28 = this.mPrintServicesChangeListenerRecords;
    Object var30 = var28.remove(var24);
    List var34 = this.mPrintServicesChangeListenerRecords;
    boolean var36 = var34.isEmpty();
    this.mPrintServicesChangeListenerRecords = 0;<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    IPrintServicesChangeListener var6 = (IPrintServicesChangeListener) var5;
    Context var7 = this.mContext;
    int var12 = resolveCallingUserEnforcingPermissions(param3);
    Object var13 = this.mLock;
    int var15 = resolveCallingProfileParentLocked(var12);
    int var17 = getCurrentUserId();
    UserState var19 = getOrCreateUserStateLocked(var12,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    UserState var27 = new UserState();
    Context var28 = this.mContext;
    Object var29 = this.mLock;
    SparseArray var31 = this.mUserStates;
    var31.put(param2,var27);
    Lcom/android/server/print/UserState var33;
}