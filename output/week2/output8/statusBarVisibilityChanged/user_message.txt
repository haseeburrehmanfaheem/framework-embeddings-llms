// API: statusBarVisibilityChanged
// Service: WindowManagerService_3

public void statusBarVisibilityChanged() {
    Context var4 = this.mContext;
    WindowManagerGlobalLock var12 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var14 = this.mRoot;
    DisplayContent var16 = var14.getDisplayContent(param2);
    var16.statusBarVisibilityChanged(param3);
    this.mLastStatusBarVisibility = param2;
    DisplayPolicy var4 = getDisplayPolicy();
    int var6 = var4.adjustSystemUiVisibilityLw(param2);
    boolean var8 = updateStatusBarVisibilityLocked(var6);
    int var3 = this.mLastDispatchedSystemUiVisibility;
    var4 = var3 xor param2;
    var6 = var4 and 7;
    7 = bitnot 2;
    var8 = var6 and var7;
    this.mLastDispatchedSystemUiVisibility = param2;
    boolean var9 = this.isDefaultDisplay;
    WindowManagerService var11 = this.mWmService;
    InputManagerService var12 = var11.mInputManager;
    var12.setSystemUiVisibility(param2);
    updateSystemUiVisibility(param2,var8);
    boolean 1<PATH_SEP>Context var4 = this.mContext;
    WindowManagerGlobalLock var12 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var12 = var5.tid;
    int var13 = this.mBoostToPriority;
    Process.setThreadPriority(var12,var13);
    var5.prevPriority = var10;<PATH_SEP>Context var4 = this.mContext;
    WindowManagerGlobalLock var12 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var14 = this.mRoot;
    DisplayContent var16 = var14.getDisplayContent(param2);
    var16.statusBarVisibilityChanged(param3);
    this.mLastStatusBarVisibility = param2;
    DisplayPolicy var4 = getDisplayPolicy();
    int var6 = var4.adjustSystemUiVisibilityLw(param2);
    StatusBarController var3 = this.mStatusBarController;
    int var4 = this.mLastSystemUiFlags;
    var3.adjustSystemUiVisibilityLw(var4,param2);
    WindowState var4 = this.mWin;
    WindowState var11 = this.mWin;
    int var12 = this.mUnhideFlag;
    var13 = param2 and var12;
    var14 = var12 and param3;
    boolean var17 = setBarShowingLw(1);<PATH_SEP>Context var4 = this.mContext;
    WindowManagerGlobalLock var12 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var14 = this.mRoot;
    DisplayContent var16 = var14.getDisplayContent(param2);
    var16.statusBarVisibilityChanged(param3);
    this.mLastStatusBarVisibility = param2;
    DisplayPolicy var4 = getDisplayPolicy();
    int var6 = var4.adjustSystemUiVisibilityLw(param2);
    boolean var8 = updateStatusBarVisibilityLocked(var6);
    int var3 = this.mLastDispatchedSystemUiVisibility;
    var4 = var3 xor param2;
    var6 = var4 and 7;
    7 = bitnot 2;
    var8 = var6 and var7;
    this.mLastDispatchedSystemUiVisibility = param2;
    boolean var9 = this.isDefaultDisplay;
    WindowManagerService var11 = this.mWmService;
    InputManagerService var12 = var11.mInputManager;
    var12.setSystemUiVisibility(param2);
    updateSystemUiVisibility(param2,var8);
    -$$Lambda$DisplayContent$1C_-u_mpQFfKL_O8K1VFzBgPg50 var4 = new -$$Lambda$DisplayContent$1C_-u_mpQFfKL_O8K1VFzBgPg50();
    forAllWindows(var4,1);
}