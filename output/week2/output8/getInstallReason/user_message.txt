// API: getInstallReason
// Service: PackageManagerService_3

public void getInstallReason() {
    int var5 = Binder.getCallingUid();
    PermissionManagerServiceInternal var6 = this.mPermissionManager;
    ArrayMap var11 = this.mPackages;
    Settings var12 = this.mSettings;
    ArrayMap var13 = var12.mPackages;
    Object var15 = var13.get(param2);
    PackageSetting var16 = (PackageSetting) var15;
    boolean var18 = filterAppAccessLPr(var16,var5,param3);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var13 = this.mComponentResolver;
    PackageParser$Provider var15 = var13.getProvider(param2);
    ProviderInfo var16 = var15.info;
    int var17 = var16.flags;
    var18 = 1048576 and var17;
    boolean var20<PATH_SEP>int var5 = Binder.getCallingUid();
    PermissionManagerServiceInternal var6 = this.mPermissionManager;
    ArrayMap var11 = this.mPackages;
    Settings var12 = this.mSettings;
    ArrayMap var13 = var12.mPackages;
    Object var15 = var13.get(param2);
    PackageSetting var16 = (PackageSetting) var15;
    boolean var18 = filterAppAccessLPr(var16,var5,param3);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var25 = getInstantApp(param6);
    boolean var27 = canViewInstantApps(var14,param6);
    InstantAppRegistry var28 = this.mInstantAppRegistry;
    int var30 = UserHandle.getAppId(var14);
    int var31 = param2.appId;
    boolean var33 = var28.isInstantAccessGranted(param6,var30,var31);{boolean var33 = var28.isInstantAccessGranted(param6,var30,var31);};
    var34 = var33 xor 1;
    boolean var34<PATH_SEP>int var5 = Binder.getCallingUid();
    PermissionManagerServiceInternal var6 = this.mPermissionManager;
    ArrayMap var11 = this.mPackages;
    Settings var12 = this.mSettings;
    ArrayMap var13 = var12.mPackages;
    Object var15 = var13.get(param2);
    PackageSetting var16 = (PackageSetting) var15;
    boolean var18 = filterAppAccessLPr(var16,var5,param3);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var13 = this.mComponentResolver;
    PackageParser$Provider var15 = var13.getProvider(param2);
    boolean var20<PATH_SEP>int var5 = Binder.getCallingUid();
    PermissionManagerServiceInternal var6 = this.mPermissionManager;
    ArrayMap var11 = this.mPackages;
    Settings var12 = this.mSettings;
    ArrayMap var13 = var12.mPackages;
    Object var15 = var13.get(param2);
    PackageSetting var16 = (PackageSetting) var15;
    boolean var18 = filterAppAccessLPr(var16,var5,param3);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var25 = getInstantApp(param6);
    boolean var27 = canViewInstantApps(var14,param6);
    Context var6 = this.mContext;
    Context var11 = this.mContext;
    ComponentName var16 = getDefaultHomeActivity(param3);
    String var24 = this.mAppPredictionServicePackage;
    boolean 0;
}