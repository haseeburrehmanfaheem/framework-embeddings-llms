// API: setPrimaryStorageUuid
// Service: StorageManagerService_3

public void setPrimaryStorageUuid() {
    Object var6 = this.mLock;
    String var7 = this.mPrimaryStorageUuid;
    boolean var9 = Objects.equals(var7,param2);
    IPackageMoveObserver var22 = this.mMoveCallback;
    this.mMoveCallback = param3;
    this.mMoveTargetUuid = param2;
    Context var26 = this.mContext;
    27 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var29 = var26.getSystemService(var27);
    UserManager var30 = (UserManager) var29;
    List var32 = var30.getUsers();
    Iterator var34 = var32.iterator();
    Object var38 = var34.next();
    UserInfo var39 = (UserInfo) var38;
    boolean var41 = StorageManager.isFileEncryptedNativeOrEmulated();
    int var42 = var39.id;
    int var125 = var39.id;
    onMoveStatusLocked(-10);
    IPackageMoveObserver var3 = this.mMoveCallback;
    var3.onStatusChanged(-1,param2,-1);
    String var17 = this.mMoveTargetUuid;
    String var27 = this.mMoveTargetUuid;
    this.mPrimaryStorageUuid = var27;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Object var6 = this.mLock;
    String var7 = this.mPrimaryStorageUuid;
    boolean var9 = Objects.equals(var7,param2);
    IPackageMoveObserver var22 = this.mMoveCallback;
    this.mMoveCallback = param3;
    this.mMoveTargetUuid = param2;
    Context var26 = this.mContext;
    27 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var29 = var26.getSystemService(var27);
    UserManager var30 = (UserManager) var29;
    List var32 = var30.getUsers();
    Iterator var34 = var32.iterator();
    Object var38 = var34.next();
    UserInfo var39 = (UserInfo) var38;
    boolean var41 = StorageManager.isFileEncryptedNativeOrEmulated();
    int var42 = var39.id;
    int var125 = var39.id;
    onMoveStatusLocked(-10);
    IPackageMoveObserver var3 = this.mMoveCallback;
    var3.onStatusChanged(-1,param2,-1);
    String var17 = this.mMoveTargetUuid;
    String var27 = this.mMoveTargetUuid;
    this.mPrimaryStorageUuid = var27;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
    append(58);<PATH_SEP>Object var6 = this.mLock;
    String var7 = this.mPrimaryStorageUuid;
    boolean var9 = Objects.equals(var7,param2);
    IPackageMoveObserver var22 = this.mMoveCallback;
    this.mMoveCallback = param3;
    this.mMoveTargetUuid = param2;
    Context var26 = this.mContext;
    27 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var29 = var26.getSystemService(var27);
    UserManager var30 = (UserManager) var29;
    List var32 = var30.getUsers();
    Iterator var34 = var32.iterator();
    Object var38 = var34.next();
    UserInfo var39 = (UserInfo) var38;
    boolean var41 = StorageManager.isFileEncryptedNativeOrEmulated();
    int var42 = var39.id;
    int var125 = var39.id;
    onMoveStatusLocked(-10);
    IPackageMoveObserver var3 = this.mMoveCallback;
    var3.onStatusChanged(-1,param2,-1);
    String var17 = this.mMoveTargetUuid;
    String var27 = this.mMoveTargetUuid;
    this.mPrimaryStorageUuid = var27;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);<PATH_SEP>Object var6 = this.mLock;
    String var7 = this.mPrimaryStorageUuid;
    boolean var9 = Objects.equals(var7,param2);
    IPackageMoveObserver var22 = this.mMoveCallback;
    this.mMoveCallback = param3;
    this.mMoveTargetUuid = param2;
    Context var26 = this.mContext;
    27 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var29 = var26.getSystemService(var27);
    UserManager var30 = (UserManager) var29;
    List var32 = var30.getUsers();
    Iterator var34 = var32.iterator();
    Object var38 = var34.next();
    UserInfo var39 = (UserInfo) var38;
    boolean var41 = StorageManager.isFileEncryptedNativeOrEmulated();
    int var42 = var39.id;
    int var125 = var39.id;
    onMoveStatusLocked(-10);
    IPackageMoveObserver var3 = this.mMoveCallback;
    var3.onStatusChanged(-1,param2,-1);
    String var17 = this.mMoveTargetUuid;
    String var27 = this.mMoveTargetUuid;
    this.mPrimaryStorageUuid = var27;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Charset var8 = Charset.forName(param3);
    CharsetEncoder var10 = var8.newEncoder();
    CodingErrorAction var11 = REPLACE;
    CharsetEncoder var13 = var10.onMalformedInput(var11);
    CodingErrorAction var14 = REPLACE;
    CharsetEncoder var16 = var13.onUnmappableCharacter(var14);
    this.mCharset = var16;
    this.mOutputStream = param2;
}