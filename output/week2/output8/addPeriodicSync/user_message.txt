// API: addPeriodicSync
// Service: ContentService_5

public void addPeriodicSync() {
    Bundle var8 = Bundle.setDefusable(param4,1);
    boolean var14 = TextUtils.isEmpty(param3);
    Context var18 = this.mContext;
    int var23 = Binder.getCallingUid();
    validateExtras(var23,param4);{validateExtras(var23,param4);};
    int var26 = UserHandle.getCallingUserId();
    long var28 = clampPeriod(param5);
    long var30 = SyncStorageEngine.calculateDefaultFlexTime(var28);
    long var32 = ContentService.clearCallingIdentity();
    SyncStorageEngine$EndPoint var33 = new SyncStorageEngine$EndPoint();
    SyncManager var36 = getSyncManager();
    var36.updateOrAddPeriodicSync(var33,var28,var30,param4);<PATH_SEP>Bundle var8 = Bundle.setDefusable(param4,1);
    boolean var14 = TextUtils.isEmpty(param3);
    Context var18 = this.mContext;
    int var23 = Binder.getCallingUid();
    validateExtras(var23,param4);{validateExtras(var23,param4);};
    int var26 = UserHandle.getCallingUserId();
    long var28 = clampPeriod(param5);
    long var30 = SyncStorageEngine.calculateDefaultFlexTime(var28);
    long var32 = ContentService.clearCallingIdentity();
    SyncStorageEngine$EndPoint var33 = new SyncStorageEngine$EndPoint();
    SyncManager var36 = getSyncManager();
    Object var2 = this.mSyncManagerLock;
    SyncManager var3 = this.mSyncManager;
    SyncManager var5 = new SyncManager();
    Context var6 = this.mContext;
    boolean var7 = this.mFactoryTest;
    this.mSyncManager = var5;<PATH_SEP>Bundle var8 = Bundle.setDefusable(param4,1);
    boolean var14 = TextUtils.isEmpty(param3);
    Context var18 = this.mContext;
    int var23 = Binder.getCallingUid();
    validateExtras(var23,param4);{validateExtras(var23,param4);};
    int var26 = UserHandle.getCallingUserId();
    long var28 = clampPeriod(param5);
    long var30 = SyncStorageEngine.calculateDefaultFlexTime(var28);
    long var32 = ContentService.clearCallingIdentity();
    SyncStorageEngine$EndPoint var33 = new SyncStorageEngine$EndPoint();
    SyncManager var36 = getSyncManager();
    var36.updateOrAddPeriodicSync(var33,var28,var30,param4);
    ContentService.restoreCallingIdentity(var32);<PATH_SEP>Bundle var8 = Bundle.setDefusable(param4,1);
    boolean var14 = TextUtils.isEmpty(param3);
    Context var18 = this.mContext;
    int var23 = Binder.getCallingUid();
    validateExtras(var23,param4);{validateExtras(var23,param4);};
    int var26 = UserHandle.getCallingUserId();
    long var28 = clampPeriod(param5);
    long var30 = SyncStorageEngine.calculateDefaultFlexTime(var28);
    long var32 = ContentService.clearCallingIdentity();
    SyncStorageEngine$EndPoint var33 = new SyncStorageEngine$EndPoint();
    SyncManager var36 = getSyncManager();
    var36.updateOrAddPeriodicSync(var33,var28,var30,param4);
    SyncManager$UpdatePeriodicSyncMessagePayload var6 = new SyncManager$UpdatePeriodicSyncMessagePayload();
    SyncManager$SyncHandler var8 = this.mSyncHandler;
    Message var11 = var8.obtainMessage(13,var6);
    var11.sendToTarget();
}