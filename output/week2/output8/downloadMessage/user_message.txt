// API: downloadMessage
// Service: MmsServiceBroker$BinderService_7

public void downloadMessage() {
    MmsServiceBroker var20 = this.this$0;
    Context var22 = MmsServiceBroker.access$300(var20);{Context var22 = MmsServiceBroker.access$300(var20);};
    MmsServiceBroker var26 = this.this$0;
    AppOpsManager var28 = MmsServiceBroker.access$500(var26);{AppOpsManager var28 = MmsServiceBroker.access$500(var26);};
    int var30 = Binder.getCallingUid();
    int var33 = var28.noteOp(18,var30,param3);{int var33 = var28.noteOp(18,var30,param3);};
    Uri var38 = adjustUriForUserAndGrantPermission(param5,android.service.carrier.CarrierMessagingService,3,param2);
    Intent var6 = new Intent();
    Intent var9 = var6.setData(param2);
    Intent var11 = var6.setFlags(param4);
    int var13 = Binder.getCallingUid();
    int var15 = UserHandle.getCallingUserId();
    Uri var18 = ContentProvider.maybeAddUserId(param2,var15);
    long var23 = Binder.clearCallingIdentity();
    24 = load_metadata: <Application,Lcom/android/server/uri/UriGrantsManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var26 = LocalServices.getService(var24);
    UriGrantsManagerInternal var27 = (UriGrantsManagerInternal) var26;
    var27.grantUriPermissionFromIntent(var13,com.android.phone,var6,0);
    Intent var30 = new Intent();
    MmsServiceBroker var32 = this.this$0;
    Context var34 = MmsServiceBroker.access$300(var32);{Context var34 = MmsServiceBroker.access$300(var32);};
    Object var37 = var34.getSystemService(phone);
    TelephonyManager var38 = (TelephonyManager) var37;
    int var40 = SubscriptionManager.getPhoneId(param5);
    boolean var3 = SubscriptionManager.isValidSubscriptionId(this);{boolean var3 = SubscriptionManager.isValidSubscriptionId(this);};
    IBinder var8 = ServiceManager.getService(isub);
    ISub var10 = ISub$Stub.asInterface(var8);
    Lcom/android/internal/telephony/ISub 0<PATH_SEP>MmsServiceBroker var20 = this.this$0;
    Context var22 = MmsServiceBroker.access$300(var20);{Context var22 = MmsServiceBroker.access$300(var20);};
    MmsServiceBroker var26 = this.this$0;
    AppOpsManager var28 = MmsServiceBroker.access$500(var26);{AppOpsManager var28 = MmsServiceBroker.access$500(var26);};
    int var30 = Binder.getCallingUid();
    int var33 = var28.noteOp(18,var30,param3);{int var33 = var28.noteOp(18,var30,param3);};
    Uri var38 = adjustUriForUserAndGrantPermission(param5,android.service.carrier.CarrierMessagingService,3,param2);
    Intent var6 = new Intent();
    Intent var9 = var6.setData(param2);
    Intent var11 = var6.setFlags(param4);
    int var13 = Binder.getCallingUid();
    int var15 = UserHandle.getCallingUserId();
    Uri var18 = ContentProvider.maybeAddUserId(param2,var15);
    long var23 = Binder.clearCallingIdentity();
    24 = load_metadata: <Application,Lcom/android/server/uri/UriGrantsManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var26 = LocalServices.getService(var24);
    UriGrantsManagerInternal var27 = (UriGrantsManagerInternal) var26;
    var27.grantUriPermissionFromIntent(var13,com.android.phone,var6,0);
    Intent var30 = new Intent();
    MmsServiceBroker var32 = this.this$0;
    Context var34 = MmsServiceBroker.access$300(var32);{Context var34 = MmsServiceBroker.access$300(var32);};
    Object var37 = var34.getSystemService(phone);
    TelephonyManager var38 = (TelephonyManager) var37;
    int var40 = SubscriptionManager.getPhoneId(param5);
    List var42 = var38.getCarrierPackageNamesForIntentAndPhone(var30,var40);
    int var44 = var42.size();
    Binder.restoreCallingIdentity(var23);
    Landroid/net/Uri var19<PATH_SEP>MmsServiceBroker var20 = this.this$0;
    Context var22 = MmsServiceBroker.access$300(var20);{Context var22 = MmsServiceBroker.access$300(var20);};
    MmsServiceBroker var26 = this.this$0;
    AppOpsManager var28 = MmsServiceBroker.access$500(var26);{AppOpsManager var28 = MmsServiceBroker.access$500(var26);};
    int var30 = Binder.getCallingUid();
    int var33 = var28.noteOp(18,var30,param3);{int var33 = var28.noteOp(18,var30,param3);};
    Uri var38 = adjustUriForUserAndGrantPermission(param5,android.service.carrier.CarrierMessagingService,3,param2);
    MmsServiceBroker var39 = this.this$0;
    IMms var41 = MmsServiceBroker.access$600(var39);{IMms var41 = MmsServiceBroker.access$600(var39);};
    var41.downloadMessage(param2,param3,param4,var38,param6,param7);
    returnPendingIntentWithError(param7);<PATH_SEP>MmsServiceBroker var20 = this.this$0;
    Context var22 = MmsServiceBroker.access$300(var20);{Context var22 = MmsServiceBroker.access$300(var20);};
    MmsServiceBroker var26 = this.this$0;
    AppOpsManager var28 = MmsServiceBroker.access$500(var26);{AppOpsManager var28 = MmsServiceBroker.access$500(var26);};
    int var30 = Binder.getCallingUid();
    int var33 = var28.noteOp(18,var30,param3);{int var33 = var28.noteOp(18,var30,param3);};
    Uri var38 = adjustUriForUserAndGrantPermission(param5,android.service.carrier.CarrierMessagingService,3,param2);
    Intent var6 = new Intent();
    Intent var9 = var6.setData(param2);
    Intent var11 = var6.setFlags(param4);
    int var13 = Binder.getCallingUid();
    int var15 = UserHandle.getCallingUserId();
    Uri var18 = ContentProvider.maybeAddUserId(param2,var15);
    long var23 = Binder.clearCallingIdentity();
    24 = load_metadata: <Application,Lcom/android/server/uri/UriGrantsManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var26 = LocalServices.getService(var24);
    UriGrantsManagerInternal var27 = (UriGrantsManagerInternal) var26;
    var27.grantUriPermissionFromIntent(var13,com.android.phone,var6,0);
    Intent var30 = new Intent();
    MmsServiceBroker var32 = this.this$0;
    Context var34 = MmsServiceBroker.access$300(var32);{Context var34 = MmsServiceBroker.access$300(var32);};
    Object var37 = var34.getSystemService(phone);
    TelephonyManager var38 = (TelephonyManager) var37;
    int var40 = SubscriptionManager.getPhoneId(param5);
    boolean var3 = SubscriptionManager.isValidSubscriptionId(this);{boolean var3 = SubscriptionManager.isValidSubscriptionId(this);};
    IBinder var8 = ServiceManager.getService(isub);
    ISub var10 = ISub$Stub.asInterface(var8);
    int var17;
}