// API: createRequestAccountAccessIntentSenderAsUser
// Service: AccountManagerService_4

public void createRequestAccountAccessIntentSenderAsUser() {
    int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    Object var15 = Preconditions.checkNotNull(param2,account cannot be null);{Object var15 = Preconditions.checkNotNull(param2,account cannot be null);};
    Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);{Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);};
    Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);{Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);};
    int var23 = getIdentifier();
    int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);{int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);};
    PackageManager var29 = this.mPackageManager;
    int var31 = var29.getPackageUidAsUser(param3,var23);
    Intent var46 = newRequestAccountAccessIntent(param2,param3,var31,0);
    AccountAuthenticatorResponse var6 = new AccountAuthenticatorResponse();
    AccountManagerService$18 var7 = new AccountManagerService$18();
    Intent var13 = newGrantCredentialsPermissionIntent(param2,param3,param4,var6,com.android.AccountManager.ACCOUNT_ACCESS_TOKEN_TYPE,0);
    Intent var8 = new Intent();
    Context var9 = this.mContext;
    10 = load_metadata: <Application,Landroid/accounts/GrantCredentialsPermissionActivity>;
    <Primordial,Ljava/lang/Class>;
    AccountManagerService$NotificationId var21 = getCredentialPermissionNotificationId(param2,param6,param4);
    String var22 = var21.mTag;
    Intent var32 = var8.addCategory(var30);
    Intent var35 = var8.putExtra(account,param2);
    Intent var38 = var8.putExtra(authTokenType,param6);
    Intent var41 = var8.putExtra(response,param5);
    Intent var44 = var8.putExtra(uid,param4);
    Landroid/content/Intent var8<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    Object var15 = Preconditions.checkNotNull(param2,account cannot be null);{Object var15 = Preconditions.checkNotNull(param2,account cannot be null);};
    Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);{Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);};
    Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);{Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);};
    int var23 = getIdentifier();
    int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);{int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);};
    PackageManager var29 = this.mPackageManager;
    int var31 = var29.getPackageUidAsUser(param3,var23);
    Intent var46 = newRequestAccountAccessIntent(param2,param3,var31,0);
    AccountAuthenticatorResponse var6 = new AccountAuthenticatorResponse();
    AccountManagerService$18 var7 = new AccountManagerService$18();
    Intent var13 = newGrantCredentialsPermissionIntent(param2,param3,param4,var6,com.android.AccountManager.ACCOUNT_ACCESS_TOKEN_TYPE,0);
    Intent var8 = new Intent();
    Context var9 = this.mContext;
    10 = load_metadata: <Application,Landroid/accounts/GrantCredentialsPermissionActivity>;
    <Primordial,Ljava/lang/Class>;
    Intent var15 = var8.setFlags(268435456);
    AccountManagerService$NotificationId var21 = getCredentialPermissionNotificationId(param2,param6,param4);
    int var6 = UserHandle.getUserId(param4);
    AccountManagerService$UserAccounts var8 = getUserAccounts(var6);
    HashMap var10 = AccountManagerService$UserAccounts.access$1600(var8);{HashMap var10 = AccountManagerService$UserAccounts.access$1600(var8);};
    Pair var11 = new Pair();
    Pair var12 = new Pair();
    Integer var15 = Integer.valueOf(param4);
    HashMap var18 = AccountManagerService$UserAccounts.access$1600(var8);{HashMap var18 = AccountManagerService$UserAccounts.access$1600(var8);};
    Object var20 = var18.get(var11);
    AccountManagerService$NotificationId var21 = (AccountManagerService$NotificationId) var20;
    Lcom/android/server/accounts/AccountManagerService$NotificationId var48<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    Object var15 = Preconditions.checkNotNull(param2,account cannot be null);{Object var15 = Preconditions.checkNotNull(param2,account cannot be null);};
    Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);{Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);};
    Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);{Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);};
    int var23 = getIdentifier();
    int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);{int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);};
    PackageManager var29 = this.mPackageManager;
    int var31 = var29.getPackageUidAsUser(param3,var23);
    Intent var46 = newRequestAccountAccessIntent(param2,param3,var31,0);
    AccountAuthenticatorResponse var6 = new AccountAuthenticatorResponse();
    AccountManagerService$18 var7 = new AccountManagerService$18();
    Intent var13 = newGrantCredentialsPermissionIntent(param2,param3,param4,var6,com.android.AccountManager.ACCOUNT_ACCESS_TOKEN_TYPE,0);
    Intent var8 = new Intent();
    Context var9 = this.mContext;
    10 = load_metadata: <Application,Landroid/accounts/GrantCredentialsPermissionActivity>;
    <Primordial,Ljava/lang/Class>;
    Intent var15 = var8.setFlags(268435456);
    AccountManagerService$NotificationId var21 = getCredentialPermissionNotificationId(param2,param6,param4);
    String var22 = var21.mTag;
    Intent var32 = var8.addCategory(var30);
    Intent var35 = var8.putExtra(account,param2);
    Intent var38 = var8.putExtra(authTokenType,param6);<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    Object var15 = Preconditions.checkNotNull(param2,account cannot be null);{Object var15 = Preconditions.checkNotNull(param2,account cannot be null);};
    Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);{Object var18 = Preconditions.checkNotNull(param3,packageName cannot be null);};
    Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);{Object var21 = Preconditions.checkNotNull(param4,userHandle cannot be null);};
    int var23 = getIdentifier();
    int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);{int var28 = Preconditions.checkArgumentInRange(var23,0,2147483647,user must be concrete);};
    PackageManager var29 = this.mPackageManager;
    int var31 = var29.getPackageUidAsUser(param3,var23);
    Intent var46 = newRequestAccountAccessIntent(param2,param3,var31,0);
    AccountAuthenticatorResponse var6 = new AccountAuthenticatorResponse();
    AccountManagerService$18 var7 = new AccountManagerService$18();
    Intent var13 = newGrantCredentialsPermissionIntent(param2,param3,param4,var6,com.android.AccountManager.ACCOUNT_ACCESS_TOKEN_TYPE,0);
    Intent var8 = new Intent();
    Context var9 = this.mContext;
    10 = load_metadata: <Application,Landroid/accounts/GrantCredentialsPermissionActivity>;
    <Primordial,Ljava/lang/Class>;
    Intent var15 = var8.setFlags(268435456);
    AccountManagerService$NotificationId var21 = getCredentialPermissionNotificationId(param2,param6,param4);
    int var6 = UserHandle.getUserId(param4);
    AccountManagerService$UserAccounts var8 = getUserAccounts(var6);
    HashMap var10 = AccountManagerService$UserAccounts.access$1600(var8);{HashMap var10 = AccountManagerService$UserAccounts.access$1600(var8);};
    Pair var11 = new Pair();
    Pair var12 = new Pair();
    Integer var15 = Integer.valueOf(param4);
    HashMap var18 = AccountManagerService$UserAccounts.access$1600(var8);{HashMap var18 = AccountManagerService$UserAccounts.access$1600(var8);};
    Object var20 = var18.get(var11);
    AccountManagerService$NotificationId var21 = (AccountManagerService$NotificationId) var20;
    int var29 = hashCode();
    int var36 = hashCode();
    AccountManagerService$NotificationId var42 = new AccountManagerService$NotificationId();
    HashMap var45 = AccountManagerService$UserAccounts.access$1600(var8);{HashMap var45 = AccountManagerService$UserAccounts.access$1600(var8);};
    Object var47 = var45.put(var11,var42);
    Lcom/android/server/accounts/AccountManagerService$NotificationId var48;
}