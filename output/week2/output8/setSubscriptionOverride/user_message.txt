// API: setSubscriptionOverride
// Service: NetworkPolicyManagerService_6

public void setSubscriptionOverride() {
    int var8 = Binder.getCallingUid();
    Object var10 = this.mNetworkPoliciesSecondLock;
    SubscriptionPlan var12 = getPrimarySubscriptionPlanLocked(param2);
    int var15 = var12.getDataLimitBehavior();
    Context var28 = this.mContext;
    ContentResolver var30 = var28.getContentResolver();
    int var34 = Settings$Global.getInt(var30,netpolicy_override_enabled,1);
    Handler var36 = this.mHandler;
    Integer var38 = Integer.valueOf(param2);
    Message var41 = var36.obtainMessage(16,param3,param4,var38);
    boolean var43 = var36.sendMessage(var41);<PATH_SEP>int var8 = Binder.getCallingUid();
    Object var10 = this.mNetworkPoliciesSecondLock;
    SubscriptionPlan var12 = getPrimarySubscriptionPlanLocked(param2);
    SparseArray var3 = this.mSubscriptionPlans;
    Object var5 = var3.get(param2);
    SubscriptionPlan var6 = (SubscriptionPlan) var5;
    boolean var8 = ArrayUtils.isEmpty(var6);
    10 = arraylength 6;
    11 = arrayload 6[28];
    RecurrenceRule var13 = var11.getCycleRule();
    boolean var15 = var13.isRecurring();
    Landroid/telephony/SubscriptionPlan var11<PATH_SEP>int var8 = Binder.getCallingUid();
    Object var10 = this.mNetworkPoliciesSecondLock;
    SubscriptionPlan var12 = getPrimarySubscriptionPlanLocked(param2);
    SparseArray var3 = this.mSubscriptionPlans;
    Object var5 = var3.get(param2);
    SubscriptionPlan var6 = (SubscriptionPlan) var5;
    boolean var8 = ArrayUtils.isEmpty(var6);
    10 = arraylength 6;
    11 = arrayload 6[28];
    RecurrenceRule var13 = var11.getCycleRule();
    boolean var15 = var13.isRecurring();
    Iterator var17 = var11.cycleIterator();
    Object var19 = var17.next();
    Range var20 = (Range) var19;
    Clock var21 = this.mClock;
    ZonedDateTime var23 = ZonedDateTime.now(var21);
    Object var5 = Objects.requireNonNull(this,clock);
    Instant var7 = instant();
    ZoneId var9 = getZone();
    ZonedDateTime var11 = ZonedDateTime.ofInstant(var7,var9);
    Ljava/time/ZonedDateTime var11<PATH_SEP>int var8 = Binder.getCallingUid();
    Object var10 = this.mNetworkPoliciesSecondLock;
    SubscriptionPlan var12 = getPrimarySubscriptionPlanLocked(param2);
    SparseArray var3 = this.mSubscriptionPlans;
    Object var5 = var3.get(param2);
    SubscriptionPlan var6 = (SubscriptionPlan) var5;
    boolean var8 = ArrayUtils.isEmpty(var6);
    10 = arraylength 6;
    11 = arrayload 6[28];
    RecurrenceRule var13 = var11.getCycleRule();
    boolean var15 = var13.isRecurring();
    Iterator var17 = var11.cycleIterator();
    RecurrenceRule var2 = this.cycleRule;
    Iterator var4 = var2.cycleIterator();
    Ljava/util/Iterator var4;
}