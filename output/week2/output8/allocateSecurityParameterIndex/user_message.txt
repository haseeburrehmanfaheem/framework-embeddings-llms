// API: allocateSecurityParameterIndex
// Service: IpSecService_4

public void allocateSecurityParameterIndex() {
    IpSecService.checkInetAddress(param2);{IpSecService.checkInetAddress(param2);};
    Object var13 = Preconditions.checkNotNull(param4,Null Binder passed to allocateSecurityParameterIndex);{Object var13 = Preconditions.checkNotNull(param4,Null Binder passed to allocateSecurityParameterIndex);};
    int var15 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var16 = this.mUserResourceTracker;
    IpSecService$UserRecord var18 = var16.getUserRecord(var15);
    int var19 = this.mNextResourceId;
    var21 = var19 add 1;
    this.mNextResourceId = var21;
    IpSecService$ResourceTracker var23 = var18.mSpiQuotaTracker;
    boolean var25 = var23.isAvailable();
    IpSecService$IpSecServiceConfiguration var26 = this.mSrvConfig;
    INetd var28 = var26.getNetdInstance();
    int var32 = var28.ipSecAllocateSpi(var15,,param2,param3);
    IpSecService$RefcountedResourceArray var52 = var18.mSpiRecords;
    IpSecService$RefcountedResource var53 = new IpSecService$RefcountedResource();
    IpSecService$SpiRecord var54 = new IpSecService$SpiRecord();
    IpSecService$RefcountedResource var56 = new IpSecService$RefcountedResource(0);
    var52.put(var19,var53);
    Object var6 = Preconditions.checkNotNull(param3,Null resources cannot be added);{Object var6 = Preconditions.checkNotNull(param3,Null resources cannot be added);};
    SparseArray var7 = this.mArray;
    var7.put(param2,param3);
}