// API: sendExtraCommand
// Service: LocationManagerService_4

public void sendExtraCommand() {
    Object var8 = this.mLock;
    int var10 = getCallerAllowedResolutionLevel();
    int var3 = Binder.getCallingPid();
    int var5 = Binder.getCallingUid();
    int var7 = getAllowedResolutionLevel(var3,var5);
    Context var4 = this.mContext;
    int 2<PATH_SEP>Object var8 = this.mLock;
    int var10 = getCallerAllowedResolutionLevel();
    checkResolutionLevelIsSufficientForProviderUseLocked(var10,param2);{checkResolutionLevelIsSufficientForProviderUseLocked(var10,param2);};
    Context var15 = this.mContext;
    LocationManagerService$LocationProvider var23 = getLocationProviderLocked(param2);
    var23.sendExtraCommandLocked(param3,param4);<PATH_SEP>Object var8 = this.mLock;
    int var10 = getCallerAllowedResolutionLevel();
    checkResolutionLevelIsSufficientForProviderUseLocked(var10,param2);{checkResolutionLevelIsSufficientForProviderUseLocked(var10,param2);};
    Context var15 = this.mContext;
    LocationManagerService$LocationProvider var23 = getLocationProviderLocked(param2);
    ArrayList var3 = this.mProviders;
    Iterator var5 = var3.iterator();
    Object var10 = var5.next();
    LocationManagerService$LocationProvider var11 = (LocationManagerService$LocationProvider) var10;
    String var13 = var11.getName();
    String var2 = this.mName;
    Ljava/lang/String var2<PATH_SEP>Object var8 = this.mLock;
    int var10 = getCallerAllowedResolutionLevel();
    checkResolutionLevelIsSufficientForProviderUseLocked(var10,param2);{checkResolutionLevelIsSufficientForProviderUseLocked(var10,param2);};
    Context var15 = this.mContext;
    LocationManagerService$LocationProvider var23 = getLocationProviderLocked(param2);
    ArrayList var3 = this.mProviders;
    Iterator var5 = var3.iterator();
    Lcom/android/server/LocationManagerService$LocationProvider 0;
}