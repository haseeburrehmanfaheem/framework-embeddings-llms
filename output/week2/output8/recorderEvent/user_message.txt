// API: recorderEvent
// Service: AudioService_3

public void recorderEvent() {
    RecordingActivityMonitor var4 = this.mRecordMonitor;
    var4.recorderEvent(param2,param3);
    List var9 = updateSnapshot(var7,param2,0);
    List var6 = this.mRecordStates;
    int var13 = findStateByRiid(param3);
    List var36 = this.mRecordStates;
    RecordingActivityMonitor$RecordingState var37 = new RecordingActivityMonitor$RecordingState();
    boolean var40 = var36.add(var37);
    List var41 = this.mRecordStates;
    int var43 = var41.size();
    var45 = var43 add -1;
    List var50 = this.mRecordStates;
    Object var52 = var50.get(var46);
    RecordingActivityMonitor$RecordingState var53 = (RecordingActivityMonitor$RecordingState) var52;
    Object var75 = new Object(3);
    Integer var77 = Integer.valueOf(param2);
    arraystore 75[5] = 77;
    Integer var79 = Integer.valueOf(param3);
    arraystore 75[19] = 79;
    int var81 = var53.getPortId();
    Integer var83 = Integer.valueOf(var81);
    arraystore 75[18] = 83;
    String var85 = String.format(Unknown event %d for riid %d / portid %d,var75);
    RecordingActivityMonitor$RecordingEvent var94 = new RecordingActivityMonitor$RecordingEvent();
    AudioRecordingConfiguration var96 = var53.getConfig();
    List var100 = getActiveRecordingConfigurations(1);
    ArrayList var3 = new ArrayList();
    List var5 = this.mRecordStates;
    List var6 = this.mRecordStates;
    Iterator var8 = var6.iterator();
    Object var13 = var8.next();
    RecordingActivityMonitor$RecordingState var14 = (RecordingActivityMonitor$RecordingState) var13;
    boolean var16 = var14.isActiveConfiguration();
    AudioRecordingConfiguration var18 = var14.getConfig();
    boolean var20 = var3.add(var18);
}