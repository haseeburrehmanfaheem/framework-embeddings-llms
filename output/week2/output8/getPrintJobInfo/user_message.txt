// API: getPrintJobInfo
// Service: PrintManagerService$PrintManagerImpl_4

public void getPrintJobInfo() {
    int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    long var18 = Binder.clearCallingIdentity();
    PrintJobInfo var20 = var16.getPrintJobInfo(param2,var14);
    UserState$PrintJobForAppCache var4 = this.mPrintJobForAppCache;
    PrintJobInfo var6 = var4.getPrintJob(param2,param3);
    UserState var4 = this.this$0;
    Object var6 = UserState.access$200(var4);{Object var6 = UserState.access$200(var4);};
    SparseArray var7 = this.mPrintJobsForRunningApp;
    Object var9 = var7.get(param3);
    List var10 = (List) var9;
    int var13 = var10.size();
    Object var15 = var10.get(var23);
    PrintJobInfo var16 = (PrintJobInfo) var15;
    PrintJobId var18 = var16.getId();
    PrintJobId var2 = this.mId;
    Landroid/print/PrintJobId var2<PATH_SEP>int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    long var18 = Binder.clearCallingIdentity();
    PrintJobInfo var20 = var16.getPrintJobInfo(param2,var14);
    UserState$PrintJobForAppCache var4 = this.mPrintJobForAppCache;
    PrintJobInfo var6 = var4.getPrintJob(param2,param3);
    RemotePrintSpooler var8 = this.mSpooler;
    PrintJobInfo var10 = var8.getPrintJobInfo(param2,param3);
    throwIfCalledOnMainThread();
    Object var5 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetPrintJobInfoCaller var11 = this.mGetPrintJobInfoCaller;
    IPrintSpooler var13 = getRemoteInstanceLazy();
    PrintJobInfo var15 = var11.getPrintJobInfo(var13,param2,param3);
    int var6 = onBeforeRemoteCall();
    IPrintSpoolerCallbacks var7 = this.mCallback;
    getPrintJobInfo(param3,var7,param4,var6);<PATH_SEP>int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    long var18 = Binder.clearCallingIdentity();
    PrintJobInfo var20 = var16.getPrintJobInfo(param2,var14);
    UserState$PrintJobForAppCache var4 = this.mPrintJobForAppCache;
    PrintJobInfo var6 = var4.getPrintJob(param2,param3);
    RemotePrintSpooler var8 = this.mSpooler;
    PrintJobInfo var10 = var8.getPrintJobInfo(param2,param3);
    throwIfCalledOnMainThread();
    Object var5 = this.mLock;
    throwIfDestroyedLocked();
    this.mCanUnbind = 0;
    RemotePrintSpooler$GetPrintJobInfoCaller var11 = this.mGetPrintJobInfoCaller;
    IPrintSpooler var13 = getRemoteInstanceLazy();
    Object var2 = this.mLock;
    IPrintSpooler var3 = this.mRemoteInstance;
    bindLocked();
    IPrintSpooler var6 = this.mRemoteInstance;
    Landroid/print/IPrintSpooler var6<PATH_SEP>int var7 = resolveCallingUserEnforcingPermissions(param4);
    Object var8 = this.mLock;
    int var10 = resolveCallingProfileParentLocked(var7);
    int var12 = getCurrentUserId();
    int var14 = resolveCallingAppEnforcingPermissions(param3);
    UserState var16 = getOrCreateUserStateLocked(var7,0);
    long var18 = Binder.clearCallingIdentity();
    PrintJobInfo var20 = var16.getPrintJobInfo(param2,var14);
}