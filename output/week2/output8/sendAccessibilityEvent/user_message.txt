// API: sendAccessibilityEvent
// Service: AccessibilityManagerService_3

public void sendAccessibilityEvent() {
    Object var5 = this.mLock;
    int var7 = getWindowId();
    AccessibilityManagerService$SecurityPolicy var9 = this.mSecurityPolicy;
    AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);{AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);};
    int var13 = var11.getId();
    setWindowId(var13);
    AccessibilityManagerService$SecurityPolicy var19 = this.mSecurityPolicy;
    int var21 = var19.resolveCallingUserIdEnforcingPermissionsLocked(param3);
    AccessibilityManagerService$SecurityPolicy var22 = this.mSecurityPolicy;
    CharSequence var24 = getPackageName();
    int var26 = UserHandle.getCallingAppId();
    setPackageName(var28);
    int var30 = this.mCurrentUserId;
    AccessibilityManagerService$SecurityPolicy var31 = this.mSecurityPolicy;
    boolean var33 = AccessibilityManagerService$SecurityPolicy.access$1300(var31,param2);{boolean var33 = AccessibilityManagerService$SecurityPolicy.access$1300(var31,param2);};
    AccessibilityManagerService$SecurityPolicy var34 = this.mSecurityPolicy;
    int var36 = getWindowId();
    long var38 = getSourceNodeId();
    int var40 = getEventType();
    int var42 = getAction();
    var34.updateActiveAndAccessibilityFocusedWindowLocked(var36,var38,var40,var42);
    AccessibilityManagerService var37 = this.this$0;
    Object var39 = AccessibilityManagerService.access$100(var37);{Object var39 = AccessibilityManagerService.access$100(var37);};
    int var40 = this.mAccessibilityFocusedWindowId;
    AccessibilityManagerService var41 = this.this$0;
    AccessibilityManagerService$MainHandler var43 = AccessibilityManagerService.access$2600(var41);{AccessibilityManagerService$MainHandler var43 = AccessibilityManagerService.access$2600(var41);};
    -$$Lambda$X-d4PICw0vnPU2BuBjOCbMMfcgU var44 = INSTANCE;
    AccessibilityManagerService var45 = this.this$0;
    int var46 = this.mAccessibilityFocusedWindowId;
    IntSupplier var48 = box(var46);
    Message var50 = PooledLambda.obtainMessage(var44,var45,var48);
    boolean var52 = var43.sendMessage(var50);
    AccessibilityManagerService var53 = this.this$0;
    AccessibilityManagerService$SecurityPolicy var55 = AccessibilityManagerService.access$2300(var53);{AccessibilityManagerService$SecurityPolicy var55 = AccessibilityManagerService.access$2300(var53);};
    var55.setAccessibilityFocusedWindowLocked(param2);
    int var3 = this.mAccessibilityFocusedWindowId;
    AccessibilityManagerService var4 = this.this$0;
    AccessibilityEvent var7 = AccessibilityEvent.obtainWindowsChangedEvent(var3,128);
    AccessibilityManagerService var8 = this.this$0;
    int var10 = AccessibilityManagerService.access$200(var8);{int var10 = AccessibilityManagerService.access$200(var8);};
    AccessibilityManagerService.access$3700(var4,var7,var10);{AccessibilityManagerService.access$3700(var4,var7,var10);};
    this.mAccessibilityFocusedWindowId = param2;
    List var12 = this.mWindows;
    int var15 = var12.size();
    List var16 = this.mWindows;
    Object var18 = var16.get(var37);
    AccessibilityWindowInfo var19 = (AccessibilityWindowInfo) var18;
    int var21 = var19.getId();
    var19.setAccessibilityFocused(1);
    setBooleanProperty(4,param2);<PATH_SEP>Object var5 = this.mLock;
    int var7 = getWindowId();
    AccessibilityManagerService$SecurityPolicy var9 = this.mSecurityPolicy;
    AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);{AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);};
    int var13 = var11.getId();
    setWindowId(var13);
    AccessibilityManagerService$SecurityPolicy var19 = this.mSecurityPolicy;
    int var21 = var19.resolveCallingUserIdEnforcingPermissionsLocked(param3);
    AccessibilityManagerService$SecurityPolicy var22 = this.mSecurityPolicy;
    CharSequence var24 = getPackageName();
    int var26 = UserHandle.getCallingAppId();
    setPackageName(var28);
    int var30 = this.mCurrentUserId;
    AccessibilityManagerService$SecurityPolicy var31 = this.mSecurityPolicy;
    boolean var33 = AccessibilityManagerService$SecurityPolicy.access$1300(var31,param2);{boolean var33 = AccessibilityManagerService$SecurityPolicy.access$1300(var31,param2);};
    AccessibilityManagerService$SecurityPolicy var34 = this.mSecurityPolicy;
    int var36 = getWindowId();
    long var38 = getSourceNodeId();
    int var40 = getEventType();
    int var42 = getAction();
    var34.updateActiveAndAccessibilityFocusedWindowLocked(var36,var38,var40,var42);
    AccessibilityManagerService var37 = this.this$0;
    Object var39 = AccessibilityManagerService.access$100(var37);{Object var39 = AccessibilityManagerService.access$100(var37);};
    int var40 = this.mAccessibilityFocusedWindowId;
    AccessibilityManagerService var41 = this.this$0;
    AccessibilityManagerService$MainHandler var43 = AccessibilityManagerService.access$2600(var41);{AccessibilityManagerService$MainHandler var43 = AccessibilityManagerService.access$2600(var41);};
    -$$Lambda$X-d4PICw0vnPU2BuBjOCbMMfcgU var44 = INSTANCE;
    AccessibilityManagerService var45 = this.this$0;
    int var46 = this.mAccessibilityFocusedWindowId;
    IntSupplier var48 = box(var46);
    Message var50 = PooledLambda.obtainMessage(var44,var45,var48);
    boolean var52 = var43.sendMessage(var50);
    AccessibilityManagerService var53 = this.this$0;
    AccessibilityManagerService$SecurityPolicy var55 = AccessibilityManagerService.access$2300(var53);{AccessibilityManagerService$SecurityPolicy var55 = AccessibilityManagerService.access$2300(var53);};
    var55.setAccessibilityFocusedWindowLocked(param2);
    this.mAccessibilityFocusNodeId = param3;<PATH_SEP>Object var5 = this.mLock;
    int var7 = getWindowId();
    AccessibilityManagerService$SecurityPolicy var9 = this.mSecurityPolicy;
    AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);{AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);};
    int var13 = var11.getId();
    setWindowId(var13);
    AccessibilityManagerService$SecurityPolicy var19 = this.mSecurityPolicy;
    int var21 = var19.resolveCallingUserIdEnforcingPermissionsLocked(param3);
    AccessibilityManagerService$SecurityPolicy var22 = this.mSecurityPolicy;
    CharSequence var24 = getPackageName();
    int var26 = UserHandle.getCallingAppId();
    setPackageName(var28);
    int var30 = this.mCurrentUserId;
    AccessibilityManagerService$SecurityPolicy var31 = this.mSecurityPolicy;
    boolean var33 = AccessibilityManagerService$SecurityPolicy.access$1300(var31,param2);{boolean var33 = AccessibilityManagerService$SecurityPolicy.access$1300(var31,param2);};
    AccessibilityManagerService$SecurityPolicy var34 = this.mSecurityPolicy;
    int var36 = getWindowId();
    long var38 = getSourceNodeId();
    int var40 = getEventType();
    int var42 = getAction();
    var34.updateActiveAndAccessibilityFocusedWindowLocked(var36,var38,var40,var42);
    AccessibilityManagerService var67 = this.this$0;
    Object var69 = AccessibilityManagerService.access$100(var67);{Object var69 = AccessibilityManagerService.access$100(var67);};
    long var70 = this.mAccessibilityFocusNodeId;
    var71 = var70 lt param3;
    this.mAccessibilityFocusNodeId = 2147483647;
    long var73 = this.mAccessibilityFocusNodeId;
    var74 = var73 lt 2147483647;
    int var75 = this.mAccessibilityFocusedWindowId;
    this.mAccessibilityFocusedWindowId = -1;<PATH_SEP>Object var5 = this.mLock;
    int var7 = getWindowId();
    AccessibilityManagerService$SecurityPolicy var9 = this.mSecurityPolicy;
    AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);{AccessibilityWindowInfo var11 = AccessibilityManagerService$SecurityPolicy.access$1200(var9);};
    int var13 = var11.getId();
    setWindowId(var13);
    AccessibilityManagerService$SecurityPolicy var19 = this.mSecurityPolicy;
    int var21 = var19.resolveCallingUserIdEnforcingPermissionsLocked(param3);
    int var4 = Binder.getCallingUid();
    int var58 = resolveProfileParentLocked(param2);
    int var58;
}