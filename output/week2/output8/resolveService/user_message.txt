// API: resolveService
// Service: PackageManagerService_5

public void resolveService() {
    int var7 = Binder.getCallingUid();
    ResolveInfo var9 = resolveServiceInternal(param2,param3,param4,param5,var7);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = updateFlagsForResolve(param4,param5,param2,param6,0);
    List var14 = queryIntentServicesInternal(param2,param3,var12,param5,param6,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    ComponentName var20 = getComponent();
    Intent var22 = getSelector();
    Intent var27 = getSelector();
    ComponentName var29 = var27.getComponent();
    ArrayMap var36 = this.mPackages;
    String var38 = var33.getPackage();
    ComponentResolver var51 = this.mComponentResolver;
    List var56 = var51.queryServices(var33,param3,var18,param5);
    List var58 = applyPostServiceResolutionFilter(var56,var16);
    int var6 = size();
    var8 = var6 add -1;
    Object var10 = get(var71);
    ResolveInfo var11 = (ResolveInfo) var10;
    ServiceInfo var12 = var11.serviceInfo;
    ApplicationInfo var13 = var12.applicationInfo;
    boolean var15 = var13.isInstantApp();
    ServiceInfo var16 = var11.serviceInfo;
    String var17 = var16.packageName;
    boolean var19 = equals(var17);
    ServiceInfo var20 = var11.serviceInfo;
    String var21 = var20.splitName;
    ServiceInfo var22 = var11.serviceInfo;
    ApplicationInfo var23 = var22.applicationInfo;
    String var24 = var23.splitNames;
    ServiceInfo var25 = var11.serviceInfo;
    String var26 = var25.splitName;
    boolean var28 = ArrayUtils.contains(var24,var26);
    boolean var29 = DEBUG_INSTANT;
    ResolveInfo var38 = new ResolveInfo();
    ResolveInfo var39 = this.mInstantAppInstallerInfo;
    AuxiliaryResolveInfo var41 = new AuxiliaryResolveInfo();
    ServiceInfo var42 = var11.serviceInfo;
    String var43 = var42.packageName;
    ServiceInfo var44 = var11.serviceInfo;
    ApplicationInfo var45 = var44.applicationInfo;
    long var46 = var45.longVersionCode;
    ServiceInfo var47 = var11.serviceInfo;
    String var48 = var47.splitName;
    var38.auxiliaryInfo = var41;
    IntentFilter var50 = new IntentFilter();
    var38.filter = var50;<PATH_SEP>int var7 = Binder.getCallingUid();
    ResolveInfo var9 = resolveServiceInternal(param2,param3,param4,param5,var7);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = updateFlagsForResolve(param4,param5,param2,param6,0);
    List var14 = queryIntentServicesInternal(param2,param3,var12,param5,param6,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    ComponentName var20 = getComponent();
    Intent var22 = getSelector();
    Intent var27 = getSelector();
    ComponentName var29 = var27.getComponent();
    ArrayList var78 = new ArrayList();
    ServiceInfo var82 = getServiceInfo(var32,var18,param5);
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    int var12 = updateFlagsForComponent(param3,param4,param2);
    PermissionManagerServiceInternal var13 = this.mPermissionManager;
    ArrayMap var16 = this.mPackages;
    ComponentResolver var17 = this.mComponentResolver;
    PackageParser$Service var19 = var17.getService(param2);
    Settings var20 = this.mSettings;
    ServiceInfo var21 = var19.info;
    boolean var23 = var20.isEnabledAndMatchLPr(var21,var12,param4);
    Landroid/content/pm/ServiceInfo 0<PATH_SEP>int var7 = Binder.getCallingUid();
    ResolveInfo var9 = resolveServiceInternal(param2,param3,param4,param5,var7);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = updateFlagsForResolve(param4,param5,param2,param6,0);
    List var14 = queryIntentServicesInternal(param2,param3,var12,param5,param6,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    ComponentName var20 = getComponent();
    Intent var22 = getSelector();
    Intent var27 = getSelector();
    ComponentName var29 = var27.getComponent();
    ArrayMap var36 = this.mPackages;
    String var38 = var33.getPackage();
    ComponentResolver var51 = this.mComponentResolver;
    List var56 = var51.queryServices(var33,param3,var18,param5);
    List var58 = applyPostServiceResolutionFilter(var56,var16);
    int var6 = size();
    var8 = var6 add -1;
    Object var10 = get(var71);
    ResolveInfo var11 = (ResolveInfo) var10;
    ServiceInfo var12 = var11.serviceInfo;
    ApplicationInfo var13 = var12.applicationInfo;
    boolean var15 = var13.isInstantApp();
    ServiceInfo var16 = var11.serviceInfo;
    String var17 = var16.packageName;
    boolean var19 = equals(var17);
    ServiceInfo var20 = var11.serviceInfo;
    String var21 = var20.splitName;
    ServiceInfo var22 = var11.serviceInfo;
    ApplicationInfo var23 = var22.applicationInfo;
    String var24 = var23.splitNames;
    ServiceInfo var25 = var11.serviceInfo;
    String var26 = var25.splitName;
    boolean var28 = ArrayUtils.contains(var24,var26);
    boolean var29 = DEBUG_INSTANT;
    ResolveInfo var38 = new ResolveInfo();
    ResolveInfo var39 = this.mInstantAppInstallerInfo;
    AuxiliaryResolveInfo var41 = new AuxiliaryResolveInfo();
    ServiceInfo var42 = var11.serviceInfo;
    String var43 = var42.packageName;
    ServiceInfo var44 = var11.serviceInfo;
    ApplicationInfo var45 = var44.applicationInfo;
    long var46 = var45.longVersionCode;
    ServiceInfo var47 = var11.serviceInfo;
    String var48 = var47.splitName;
    var38.auxiliaryInfo = var41;
    IntentFilter var50 = new IntentFilter();
    var38.filter = var50;
    ComponentInfo var53 = var11.getComponentInfo();
    String var54 = var53.packageName;
    var38.resolvePackageName = var54;
    Object var56 = set(var71,var38);<PATH_SEP>int var7 = Binder.getCallingUid();
    ResolveInfo var9 = resolveServiceInternal(param2,param3,param4,param5,var7);
    UserManagerService var7 = sUserManager;
    boolean var9 = var7.exists(param5);
    int var12 = updateFlagsForResolve(param4,param5,param2,param6,0);
    List var14 = queryIntentServicesInternal(param2,param3,var12,param5,param6,0);
    UserManagerService var8 = sUserManager;
    boolean var10 = var8.exists(param5);
    PermissionManagerServiceInternal var12 = this.mPermissionManager;
    String var16 = getInstantAppPackageName(param6);
    int var18 = updateFlagsForResolve(param4,param5,param2,param6,param7);
    ComponentName var20 = getComponent();
    Intent var22 = getSelector();
    Intent var27 = getSelector();
    ComponentName var29 = var27.getComponent();
    ArrayMap var36 = this.mPackages;
    String var38 = var33.getPackage();
    ComponentResolver var51 = this.mComponentResolver;
    List var56 = var51.queryServices(var33,param3,var18,param5);
    List var58 = applyPostServiceResolutionFilter(var56,var16);
    int var6 = size();
    var8 = var6 add -1;
    Object var10 = get(var71);
    ResolveInfo var11 = (ResolveInfo) var10;
    ServiceInfo var12 = var11.serviceInfo;
    ApplicationInfo var13 = var12.applicationInfo;
    boolean var15 = var13.isInstantApp();
    ServiceInfo var59 = var11.serviceInfo;
    int var60 = var59.flags;
    var62 = var60 and 1048576;
    Object var65 = remove(var71);
}