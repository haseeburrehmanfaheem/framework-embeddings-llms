// API: markGuestForDeletion
// Service: UserManagerService_2

public void markGuestForDeletion() {
    int var6 = UserHandle.getCallingUserId();
    Bundle var8 = getUserRestrictions(var6);
    boolean var12 = var8.getBoolean(no_remove_user,0);
    long var14 = Binder.clearCallingIdentity();
    Object var15 = this.mPackagesLock;
    Object var16 = this.mUsersLock;
    SparseArray var17 = this.mUsers;
    Object var19 = var17.get(param2);
    UserManagerService$UserData var20 = (UserManagerService$UserData) var19;
    SparseBooleanArray var21 = this.mRemovingUserIds;
    boolean var23 = var21.get(param2);
    UserInfo var24 = var20.info;
    boolean var26 = var24.isGuest();
    UserInfo var27 = var20.info;
    var27.guestToRemove = 1;
    UserInfo var29 = var20.info;
    int var30 = var29.flags;
    var32 = var30 or 64;
    var29.flags = var32;
    writeUserLP(var20);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Boolean var12 = Boolean.valueOf(1);
    var4.startDocument(0,var12);
    var4.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    UserInfo var17 = param2.info;
    XmlSerializer var20 = var4.startTag(0,user);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    Bundle var8 = getUserRestrictions(var6);
    boolean var12 = var8.getBoolean(no_remove_user,0);
    long var14 = Binder.clearCallingIdentity();
    Object var15 = this.mPackagesLock;
    Object var16 = this.mUsersLock;
    SparseArray var17 = this.mUsers;
    Object var19 = var17.get(param2);
    UserManagerService$UserData var20 = (UserManagerService$UserData) var19;
    SparseBooleanArray var21 = this.mRemovingUserIds;
    boolean var23 = var21.get(param2);
    UserInfo var24 = var20.info;
    boolean var26 = var24.isGuest();
    UserInfo var27 = var20.info;
    var27.guestToRemove = 1;
    UserInfo var29 = var20.info;
    int var30 = var29.flags;
    var32 = var30 or 64;
    var29.flags = var32;
    writeUserLP(var20);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Boolean var12 = Boolean.valueOf(1);
    var4.startDocument(0,var12);
    var4.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    UserInfo var17 = param2.info;
    XmlSerializer var20 = var4.startTag(0,user);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    Bundle var8 = getUserRestrictions(var6);
    boolean var12 = var8.getBoolean(no_remove_user,0);
    long var14 = Binder.clearCallingIdentity();
    Object var15 = this.mPackagesLock;
    Object var16 = this.mUsersLock;
    SparseArray var17 = this.mUsers;
    Object var19 = var17.get(param2);
    UserManagerService$UserData var20 = (UserManagerService$UserData) var19;
    SparseBooleanArray var21 = this.mRemovingUserIds;
    boolean var23 = var21.get(param2);
    UserInfo var24 = var20.info;
    boolean var26 = var24.isGuest();
    UserInfo var27 = var20.info;
    var27.guestToRemove = 1;
    UserInfo var29 = var20.info;
    int var30 = var29.flags;
    var32 = var30 or 64;
    var29.flags = var32;
    writeUserLP(var20);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Charset var8 = Charset.forName(param3);
    CharsetEncoder var10 = var8.newEncoder();
    CodingErrorAction var11 = REPLACE;
    CharsetEncoder var13 = var10.onMalformedInput(var11);
    CodingErrorAction var14 = REPLACE;
    CharsetEncoder var16 = var13.onUnmappableCharacter(var14);
    this.mCharset = var16;<PATH_SEP>int var6 = UserHandle.getCallingUserId();
    Bundle var8 = getUserRestrictions(var6);
    boolean var12 = var8.getBoolean(no_remove_user,0);
    long var14 = Binder.clearCallingIdentity();
    Object var15 = this.mPackagesLock;
    Object var16 = this.mUsersLock;
    SparseArray var17 = this.mUsers;
    Object var19 = var17.get(param2);
    UserManagerService$UserData var20 = (UserManagerService$UserData) var19;
    SparseBooleanArray var21 = this.mRemovingUserIds;
    boolean var23 = var21.get(param2);
    UserInfo var24 = var20.info;
    boolean var26 = var24.isGuest();
    UserInfo var27 = var20.info;
    var27.guestToRemove = 1;
    UserInfo var29 = var20.info;
    int var30 = var29.flags;
    var32 = var30 or 64;
    var29.flags = var32;
    writeUserLP(var20);
    AtomicFile var4 = new AtomicFile();
    File var5 = new File();
    File var6 = this.mUsersDir;
    UserInfo var9 = param2.info;
    int var10 = var9.id;
    FileOutputStream var21 = var4.startWrite();
    BufferedOutputStream var22 = new BufferedOutputStream();
    writeUserLP(param2,var22);
    FastXmlSerializer var4 = new FastXmlSerializer();
    Charset var6 = UTF_8;
    String var8 = var6.name();
    var4.setOutput(param3,var8);
    Boolean var12 = Boolean.valueOf(1);
    var4.startDocument(0,var12);
    var4.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    UserInfo var17 = param2.info;
    XmlSerializer var20 = var4.startTag(0,user);
    boolean var4 = this.mInTag;
    append(;
}