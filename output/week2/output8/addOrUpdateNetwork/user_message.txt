// API: addOrUpdateNetwork
// Service: WifiServiceImpl_3

public void addOrUpdateNetwork() {
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    int var19 = Binder.getCallingUid();
    20 = conversion(J) 19;
    WifiMetrics var25 = this.mWifiMetrics;
    var25.incrementNumAddOrUpdateNetworkCalls();
    boolean var28 = isPasspoint();
    PasspointConfiguration var75 = PasspointProvider.convertFromWifiConfig(param2);
    PasspointConfiguration var2 = new PasspointConfiguration();
    HomeSp var4 = new HomeSp();
    String var6 = this.FQDN;
    boolean var8 = TextUtils.isEmpty(var6);
    String var11 = this.FQDN;
    var4.setFqdn(var11);
    String var13 = this.providerFriendlyName;
    var4.setFriendlyName(var13);
    [J var15 = this.roamingConsortiumIds;
    [J var16 = this.roamingConsortiumIds;
    [J var17 = this.roamingConsortiumIds;
    18 = arraylength 17;
    [J var20 = Arrays.copyOf(var16,var18);
    var4.setRoamingConsortiumOis(var20);
    var2.setHomeSp(var4);
    Credential var26 = new Credential();
    WifiEnterpriseConfig var28 = this.enterpriseConfig;
    String var30 = var28.getRealm();
    var26.setRealm(var30);
    WifiEnterpriseConfig var32 = this.enterpriseConfig;
    int var34 = var32.getEapMethod();
    WifiEnterpriseConfig var60 = this.enterpriseConfig;
    Credential$SimCredential var62 = PasspointProvider.buildSimCredentialFromEnterpriseConfig(50,var60);
    Credential$SimCredential var3 = new Credential$SimCredential();
    String var6 = getPlmn();
    boolean var8 = TextUtils.isEmpty(var6);
    String var11 = getPlmn();
    var3.setImsi(var11);
    var3.setEapType(this);
    Landroid/net/wifi/hotspot2/pps/Credential$SimCredential var3<PATH_SEP>int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    int var19 = Binder.getCallingUid();
    20 = conversion(J) 19;
    WifiMetrics var25 = this.mWifiMetrics;
    var25.incrementNumAddOrUpdateNetworkCalls();
    boolean var28 = isPasspoint();
    PasspointConfiguration var75 = PasspointProvider.convertFromWifiConfig(param2);
    PasspointConfiguration var2 = new PasspointConfiguration();
    HomeSp var4 = new HomeSp();
    String var6 = this.FQDN;
    boolean var8 = TextUtils.isEmpty(var6);
    String var11 = this.FQDN;
    var4.setFqdn(var11);
    String var13 = this.providerFriendlyName;
    var4.setFriendlyName(var13);
    [J var15 = this.roamingConsortiumIds;
    [J var16 = this.roamingConsortiumIds;
    [J var17 = this.roamingConsortiumIds;
    18 = arraylength 17;
    [J var20 = Arrays.copyOf(var16,var18);
    var4.setRoamingConsortiumOis(var20);
    var2.setHomeSp(var4);
    Credential var26 = new Credential();
    WifiEnterpriseConfig var28 = this.enterpriseConfig;
    String var30 = var28.getRealm();
    var26.setRealm(var30);
    WifiEnterpriseConfig var32 = this.enterpriseConfig;
    int var34 = var32.getEapMethod();
    WifiEnterpriseConfig var60 = this.enterpriseConfig;
    Credential$SimCredential var62 = PasspointProvider.buildSimCredentialFromEnterpriseConfig(50,var60);
    Credential$SimCredential var3 = new Credential$SimCredential();
    String var6 = getPlmn();
    boolean var8 = TextUtils.isEmpty(var6);
    Landroid/net/wifi/hotspot2/pps/Credential$SimCredential 0<PATH_SEP>int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    int var19 = Binder.getCallingUid();
    20 = conversion(J) 19;
    WifiMetrics var25 = this.mWifiMetrics;
    var25.incrementNumAddOrUpdateNetworkCalls();
    boolean var28 = isPasspoint();
    PasspointConfiguration var75 = PasspointProvider.convertFromWifiConfig(param2);
    PasspointConfiguration var2 = new PasspointConfiguration();
    HomeSp var4 = new HomeSp();
    String var6 = this.FQDN;
    boolean var8 = TextUtils.isEmpty(var6);
    String var11 = this.FQDN;
    var4.setFqdn(var11);
    String var13 = this.providerFriendlyName;
    var4.setFriendlyName(var13);
    [J var15 = this.roamingConsortiumIds;
    [J var16 = this.roamingConsortiumIds;
    [J var17 = this.roamingConsortiumIds;
    18 = arraylength 17;
    [J var20 = Arrays.copyOf(var16,var18);
    var4.setRoamingConsortiumOis(var20);
    var2.setHomeSp(var4);
    Credential var26 = new Credential();
    WifiEnterpriseConfig var28 = this.enterpriseConfig;
    String var30 = var28.getRealm();
    String var4 = getFieldValue(realm);
    String var5 = getFieldValue(param2,);
    Ljava/lang/String var5<PATH_SEP>int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    int var19 = Binder.getCallingUid();
    20 = conversion(J) 19;
    WifiMetrics var25 = this.mWifiMetrics;
    var25.incrementNumAddOrUpdateNetworkCalls();
    boolean var28 = isPasspoint();
    PasspointConfiguration var75 = PasspointProvider.convertFromWifiConfig(param2);
    PasspointConfiguration var2 = new PasspointConfiguration();
    HomeSp var4 = new HomeSp();
    String var6 = this.FQDN;
    boolean var8 = TextUtils.isEmpty(var6);
    String var11 = this.FQDN;
    var4.setFqdn(var11);
    String var13 = this.providerFriendlyName;
    var4.setFriendlyName(var13);
    [J var15 = this.roamingConsortiumIds;
    [J var16 = this.roamingConsortiumIds;
    [J var17 = this.roamingConsortiumIds;
    18 = arraylength 17;
    [J var20 = Arrays.copyOf(var16,var18);
    var4.setRoamingConsortiumOis(var20);
    var2.setHomeSp(var4);
    Credential var26 = new Credential();
    WifiEnterpriseConfig var28 = this.enterpriseConfig;
    String var30 = var28.getRealm();
    var26.setRealm(var30);
    WifiEnterpriseConfig var32 = this.enterpriseConfig;
    int var34 = var32.getEapMethod();
    WifiEnterpriseConfig var60 = this.enterpriseConfig;
    Credential$SimCredential var62 = PasspointProvider.buildSimCredentialFromEnterpriseConfig(50,var60);
    var26.setSimCredential(var62);
    Credential$UserCredential var69 = var26.getUserCredential();
    Credential$UserCredential var2 = this.mUserCredential;
    Landroid/net/wifi/hotspot2/pps/Credential$UserCredential var2;
}