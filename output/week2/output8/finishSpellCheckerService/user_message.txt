// API: finishSpellCheckerService
// Service: TextServicesManagerService_3

public void finishSpellCheckerService() {
    Object var5 = this.mLock;
    TextServicesManagerService$TextServicesData var7 = getDataFromCallingUserIdLocked(param2);
    LazyIntToIntMap var3 = this.mSpellCheckerOwnerUserIdMap;
    int var5 = var3.get(param2);
    SparseArray var6 = this.mUserData;
    Object var8 = var6.get(var5);
    TextServicesManagerService$TextServicesData var9 = (TextServicesManagerService$TextServicesData) var8;
    boolean var10 = PER_PROFILE_IME_ENABLED;
    SpellCheckerInfo var13 = var9.getCurrentSpellChecker();
    Lcom/android/server/textservices/TextServicesManagerService$TextServicesData 0<PATH_SEP>Object var5 = this.mLock;
    TextServicesManagerService$TextServicesData var7 = getDataFromCallingUserIdLocked(param2);
    ArrayList var9 = new ArrayList();
    HashMap var12 = TextServicesManagerService$TextServicesData.access$1600(var7);{HashMap var12 = TextServicesManagerService$TextServicesData.access$1600(var7);};
    Collection var14 = var12.values();
    Iterator var16 = var14.iterator();
    int var27 = var9.size();
    Object var29 = var9.get(var34);
    TextServicesManagerService$SpellCheckerBindGroup var30 = (TextServicesManagerService$SpellCheckerBindGroup) var29;
    var30.removeListener(param3);
    TextServicesManagerService var3 = this.this$0;
    Object var5 = TextServicesManagerService.access$1200(var3);{Object var5 = TextServicesManagerService.access$1200(var3);};
    TextServicesManagerService$InternalDeathRecipients var6 = this.mListeners;
    boolean var8 = var6.unregister(param2);
    IBinder var10 = asBinder();
    -$$Lambda$TextServicesManagerService$SpellCheckerBindGroup$H2umvFNjpgILSC1ZJmUoLxzCdSk var11 = new -$$Lambda$TextServicesManagerService$SpellCheckerBindGroup$H2umvFNjpgILSC1ZJmUoLxzCdSk();
    ArrayList var13 = this.mPendingSessionRequests;
    boolean var15 = var13.removeIf(var11);
    ArrayList var16 = this.mOnGoingSessionRequests;
    boolean var18 = var16.removeIf(var11);
    cleanLocked();
    boolean var2 = this.mUnbindCalled;
    TextServicesManagerService$InternalDeathRecipients var4 = this.mListeners;
    int var6 = var4.getRegisteredCallbackCount();
    ArrayList var7 = this.mPendingSessionRequests;
    boolean var9 = var7.isEmpty();
    ArrayList var10 = this.mOnGoingSessionRequests;
    boolean var12 = var10.isEmpty();
    TextServicesManagerService$InternalServiceConnection var13 = this.mInternalConnection;
    String var15 = TextServicesManagerService$InternalServiceConnection.access$2200(var13);{String var15 = TextServicesManagerService$InternalServiceConnection.access$2200(var13);};
    HashMap var16 = this.mSpellCheckerBindGroups;
    Object var18 = var16.get(var15);
    TextServicesManagerService$SpellCheckerBindGroup var19 = (TextServicesManagerService$SpellCheckerBindGroup) var18;
    HashMap var20 = this.mSpellCheckerBindGroups;
    Object var22 = var20.remove(var15);
    TextServicesManagerService var25 = this.this$0;
    Context var27 = TextServicesManagerService.access$2300(var25);{Context var27 = TextServicesManagerService.access$2300(var25);};
    TextServicesManagerService$InternalServiceConnection var28 = this.mInternalConnection;
    var27.unbindService(var28);<PATH_SEP>Object var5 = this.mLock;
    TextServicesManagerService$TextServicesData var7 = getDataFromCallingUserIdLocked(param2);
    LazyIntToIntMap var3 = this.mSpellCheckerOwnerUserIdMap;
    int var5 = var3.get(param2);
    SparseIntArray var3 = this.mMap;
    int var5 = var3.indexOfKey(param2);
    IntUnaryOperator var7 = this.mMappingFunction;
    int var9 = var7.applyAsInt(param2);
    SparseIntArray var10 = this.mMap;
    var10.append(param2,var9);<PATH_SEP>Object var5 = this.mLock;
    TextServicesManagerService$TextServicesData var7 = getDataFromCallingUserIdLocked(param2);
    ArrayList var9 = new ArrayList();
    HashMap var12 = TextServicesManagerService$TextServicesData.access$1600(var7);{HashMap var12 = TextServicesManagerService$TextServicesData.access$1600(var7);};
    Collection var14 = var12.values();
    Iterator var16 = var14.iterator();
    int var27 = var9.size();
    Object var29 = var9.get(var34);
    TextServicesManagerService$SpellCheckerBindGroup var30 = (TextServicesManagerService$SpellCheckerBindGroup) var29;
    var30.removeListener(param3);
    TextServicesManagerService var3 = this.this$0;
    Object var5 = TextServicesManagerService.access$1200(var3);{Object var5 = TextServicesManagerService.access$1200(var3);};
    TextServicesManagerService$InternalDeathRecipients var6 = this.mListeners;
    boolean var8 = var6.unregister(param2);
    IBinder var10 = asBinder();
    -$$Lambda$TextServicesManagerService$SpellCheckerBindGroup$H2umvFNjpgILSC1ZJmUoLxzCdSk var11 = new -$$Lambda$TextServicesManagerService$SpellCheckerBindGroup$H2umvFNjpgILSC1ZJmUoLxzCdSk();
    ArrayList var13 = this.mPendingSessionRequests;
    boolean var15 = var13.removeIf(var11);
    ArrayList var16 = this.mOnGoingSessionRequests;
    boolean var18 = var16.removeIf(var11);
    cleanLocked();
    boolean var2 = this.mUnbindCalled;
    TextServicesManagerService$InternalDeathRecipients var4 = this.mListeners;
    int var6 = var4.getRegisteredCallbackCount();
    ArrayList var7 = this.mPendingSessionRequests;
    boolean var9 = var7.isEmpty();
    ArrayList var10 = this.mOnGoingSessionRequests;
    boolean var12 = var10.isEmpty();
    TextServicesManagerService$InternalServiceConnection var13 = this.mInternalConnection;
    String var15 = TextServicesManagerService$InternalServiceConnection.access$2200(var13);{String var15 = TextServicesManagerService$InternalServiceConnection.access$2200(var13);};
    HashMap var16 = this.mSpellCheckerBindGroups;
    Object var18 = var16.get(var15);
    TextServicesManagerService$SpellCheckerBindGroup var19 = (TextServicesManagerService$SpellCheckerBindGroup) var18;
    TextServicesManagerService var25 = this.this$0;
    Context var27 = TextServicesManagerService.access$2300(var25);{Context var27 = TextServicesManagerService.access$2300(var25);};
    TextServicesManagerService$InternalServiceConnection var28 = this.mInternalConnection;
    var27.unbindService(var28);
}