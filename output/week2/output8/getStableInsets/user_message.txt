// API: getStableInsets
// Service: WindowManagerService_3

public void getStableInsets() {
    WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    getStableInsetsLocked(param2,param3);
    setEmpty();
    RootWindowContainer var5 = this.mRoot;
    DisplayContent var7 = var5.getDisplayContent(param2);
    DisplayInfo var10 = var7.getDisplayInfo();
    DisplayPolicy var12 = var7.getDisplayPolicy();
    int var13 = var10.rotation;
    int var14 = var10.logicalWidth;
    int var15 = var10.logicalHeight;
    DisplayCutout var16 = var10.displayCutout;
    var12.getStableInsetsLw(var13,var14,var15,var16,param3);
    setEmpty();
    getNonDecorInsetsLw(param2,param3,param4,param5,param6);
    setEmpty();
    boolean var9 = hasNavigationBar();
    WindowManagerService var11 = this.mService;
    WindowManagerPolicy var12 = var11.mPolicy;
    int var14 = var12.getUiMode();
    int var16 = navigationBarPosition(param3,param4,param2);
    int var25 = getNavigationBarHeight(param2,var14);
    param6.bottom = var25;
    int var30 = param6.left;
    int var32 = getSafeInsetLeft();
    var33 = var30 add var32;
    param6.left = var33;
    int var34 = param6.top;
    int var36 = getSafeInsetTop();
    var37 = var34 add var36;
    param6.top = var37;
    int var38 = param6.right;
    int var40 = getSafeInsetRight();
    var41 = var38 add var40;
    param6.right = var41;
    int var42 = param6.bottom;
    int var44 = getSafeInsetBottom();
    var45 = var42 add var44;
    param6.bottom = var45;
}