// API: stopPrinterStateTracking
// Service: PrintManagerService$PrintManagerImpl_3

public void stopPrinterStateTracking() {
    Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    UserState var27 = new UserState();
    Context var28 = this.mContext;
    Object var29 = this.mLock;
    SparseArray var31 = this.mUserStates;
    var31.put(param2,var27);
    Lcom/android/server/print/UserState var33<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    UserState var6 = getOrCreateUserStateLocked(param2,param3,1);
    UserManager var6 = this.mUserManager;
    boolean var8 = var6.isUserUnlockingOrUnlocked(param2);
    SparseArray var23 = this.mUserStates;
    Object var25 = var23.get(param2);
    UserState var26 = (UserState) var25;
    UserState var27 = new UserState();
    Context var28 = this.mContext;
    Object var29 = this.mLock;
    SparseArray var31 = this.mUserStates;
    var31.put(param2,var27);
    Lcom/android/server/print/UserState var33<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var13 = getCurrentUserId();
    UserState var16 = getOrCreateUserStateLocked(var8,0);
    long var18 = Binder.clearCallingIdentity();
    var16.stopPrinterStateTracking(var6);
    Object var3 = this.mLock;
    throwIfDestroyedLocked();
    ArrayMap var5 = this.mActiveServices;
    boolean var7 = var5.isEmpty();
    UserState$PrinterDiscoverySessionMediator var9 = this.mPrinterDiscoverySession;
    UserState$PrinterDiscoverySessionMediator var10 = this.mPrinterDiscoverySession;
    var10.stopPrinterStateTrackingLocked(param2);
    boolean var3 = this.mIsDestroyed;
    List var5 = this.mStartedPrinterDiscoveryTokens;
    boolean var7 = var5.isEmpty();
    List var8 = this.mStateTrackedPrinters;
    boolean var10 = var8.remove(param2);
    UserState var11 = this.this$0;
    ArrayMap var13 = UserState.access$600(var11);{ArrayMap var13 = UserState.access$600(var11);};
    ComponentName var15 = getServiceName();
    Object var17 = var13.get(var15);
    RemotePrintService var18 = (RemotePrintService) var17;
    Handler var20 = Handler.getMain();
    -$$Lambda$UserState$PrinterDiscoverySessionMediator$_XymASnzhemmGwK4Nu5RUIT0ahk var21 = INSTANCE;
    Message var23 = PooledLambda.obtainMessage(var21,this,var18,param2);
    boolean var25 = var20.sendMessage(var23);<PATH_SEP>Object var5 = Preconditions.checkNotNull(param2);{Object var5 = Preconditions.checkNotNull(param2);};
    PrinterId var6 = (PrinterId) var5;
    int var8 = resolveCallingUserEnforcingPermissions(param3);
    Object var9 = this.mLock;
    int var11 = resolveCallingProfileParentLocked(var8);
    int var4 = getCurrentUserId();
    long var6 = Binder.clearCallingIdentity();
    UserManager var7 = this.mUserManager;
    UserInfo var9 = var7.getProfileParent(param2);
    Binder.restoreCallingIdentity(var6);
    int -10;
}