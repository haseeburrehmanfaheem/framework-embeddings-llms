// API: getApplicationRestrictionsForUser
// Service: UserManagerService_3

public void getApplicationRestrictionsForUser() {
    int var5 = UserHandle.getCallingUserId();
    int var7 = Binder.getCallingUid();
    int var9 = getUidForPackage(param2);
    boolean var11 = UserHandle.isSameApp(var7,var9);
    Object var30 = this.mAppRestrictionsLock;
    Bundle var32 = UserManagerService.readApplicationRestrictionsLAr(param2,param3);
    AtomicFile var3 = new AtomicFile();
    File var4 = new File();
    File var6 = Environment.getUserSystemDirectory(param2);
    String var8 = UserManagerService.packageToRestrictionsFileName(this);
    Bundle var12 = UserManagerService.readApplicationRestrictionsLAr(var3);
    Bundle var3 = new Bundle();
    ArrayList var5 = new ArrayList();
    File var8 = getBaseFile();
    boolean var10 = var8.exists();
    FileInputStream var13 = openRead();
    XmlPullParser var15 = Xml.newPullParser();
    Charset var16 = UTF_8;
    String var18 = var16.name();
    var15.setInput(var13,var18);
    XmlUtils.nextElement(var15);
    int var22 = var15.getEventType();
    int var25 = var15.next();
    IoUtils.closeQuietly(var51);
    Landroid/os/Bundle var3<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    int var7 = Binder.getCallingUid();
    int var9 = getUidForPackage(param2);
    boolean var11 = UserHandle.isSameApp(var7,var9);
    Object var30 = this.mAppRestrictionsLock;
    Bundle var32 = UserManagerService.readApplicationRestrictionsLAr(param2,param3);
    AtomicFile var3 = new AtomicFile();
    File var4 = new File();
    File var6 = Environment.getUserSystemDirectory(param2);
    String var8 = UserManagerService.packageToRestrictionsFileName(this);
    Bundle var12 = UserManagerService.readApplicationRestrictionsLAr(var3);
    Bundle var3 = new Bundle();
    ArrayList var5 = new ArrayList();
    File var8 = getBaseFile();
    boolean var10 = var8.exists();
    FileInputStream var13 = openRead();
    XmlPullParser var15 = Xml.newPullParser();
    Charset var16 = UTF_8;
    String var18 = var16.name();
    var15.setInput(var13,var18);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    int var7 = Binder.getCallingUid();
    int var9 = getUidForPackage(param2);
    boolean var11 = UserHandle.isSameApp(var7,var9);
    Object var30 = this.mAppRestrictionsLock;
    Bundle var32 = UserManagerService.readApplicationRestrictionsLAr(param2,param3);
    AtomicFile var3 = new AtomicFile();
    File var4 = new File();
    File var6 = Environment.getUserSystemDirectory(param2);
    String var8 = UserManagerService.packageToRestrictionsFileName(this);
    Bundle var12 = UserManagerService.readApplicationRestrictionsLAr(var3);
    Bundle var3 = new Bundle();
    ArrayList var5 = new ArrayList();
    File var8 = getBaseFile();
    boolean var10 = var8.exists();
    FileInputStream var13 = openRead();
    XmlPullParser var15 = Xml.newPullParser();
    Charset var16 = UTF_8;
    String var18 = var16.name();
    var15.setInput(var13,var18);
    XmlUtils.nextElement(var15);
    int var22 = var15.getEventType();
    int var25 = var15.next();
    UserManagerService.readEntry(var3,var5,var15);
    int var5 = getEventType();
    String var8 = getName();
    boolean var11 = var8.equals(entry);
    String var15 = getAttributeValue(0,key);
    String var18 = getAttributeValue(0,type);
    String var21 = getAttributeValue(0,m);
    boolean var24 = equals(var18);
    boolean var27 = equals(var18);
    String var29 = nextText();
    String var31 = var29.trim();
    boolean var34 = equals(var18);
    boolean var43 = Boolean.parseBoolean(var31);
    putBoolean(var15,var43);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    int var7 = Binder.getCallingUid();
    int var9 = getUidForPackage(param2);
    boolean var11 = UserHandle.isSameApp(var7,var9);
    Object var30 = this.mAppRestrictionsLock;
    Bundle var32 = UserManagerService.readApplicationRestrictionsLAr(param2,param3);
    AtomicFile var3 = new AtomicFile();
    File var4 = new File();
    File var6 = Environment.getUserSystemDirectory(param2);
    String var8 = UserManagerService.packageToRestrictionsFileName(this);
    Bundle var12 = UserManagerService.readApplicationRestrictionsLAr(var3);
    Bundle var3 = new Bundle();
    ArrayList var5 = new ArrayList();
    File var8 = getBaseFile();
    boolean var10 = var8.exists();
    FileInputStream var13 = openRead();
    XmlPullParser var15 = Xml.newPullParser();
    Charset var16 = UTF_8;
    String var18 = var16.name();
    var15.setInput(var13,var18);
    XmlUtils.nextElement(var15);
    int var22 = var15.getEventType();
    int var25 = var15.next();
    UserManagerService.readEntry(var3,var5,var15);
    int var5 = getEventType();
    String var8 = getName();
    boolean var11 = var8.equals(entry);
    String var15 = getAttributeValue(0,key);
    String var18 = getAttributeValue(0,type);
    String var21 = getAttributeValue(0,m);
    boolean var24 = equals(var18);
    Bundle var65 = UserManagerService.readBundleEntry(param3,param2);
    putBundle(var15,var65);
}