// API: systemReady
// Service: LockSettingsService_1

public void systemReady() {
    Context var3 = this.mContext;
    Object var10 = new Object(3);
    arraystore 10[7] = 11;
    int var14 = LockSettingsService.getCallingUid();
    Integer var16 = Integer.valueOf(var14);
    arraystore 10[12] = 16;
    arraystore 10[17] = 18;
    migrateOldData();
    String var6 = getString(migrated,0,0);
    Context var9 = this.mContext;
    ContentResolver var11 = var9.getContentResolver();
    String var12 = VALID_SETTINGS;
    13 = arraylength 12;
    setString(migrated,true,0);
    String var34 = getString(migrated_user_specific,0,0);
    Context var35 = this.mContext;
    ContentResolver var37 = var35.getContentResolver();
    UserManager var38 = this.mUserManager;
    List var40 = var38.getUsers();
    int var42 = var40.size();
    Object var44 = var40.get(var82);
    UserInfo var45 = (UserInfo) var44;
    int var46 = var45.id;
    String var49 = Settings$Secure.getStringForUser(var37,lock_screen_owner_info,var46);
    boolean var51 = TextUtils.isEmpty(var49);
    int var60 = Settings$Secure.getIntForUser(var37,lock_screen_owner_info_enabled,var46);
    setLong(lock_screen_owner_info_enabled,var67,var46);<PATH_SEP>Context var3 = this.mContext;
    Object var10 = new Object(3);
    arraystore 10[7] = 11;
    int var14 = LockSettingsService.getCallingUid();
    Integer var16 = Integer.valueOf(var14);
    arraystore 10[12] = 16;
    arraystore 10[17] = 18;
    migrateOldData();
    String var6 = getString(migrated,0,0);
    Context var9 = this.mContext;
    ContentResolver var11 = var9.getContentResolver();
    String var12 = VALID_SETTINGS;
    13 = arraylength 12;
    setString(migrated,true,0);
    String var34 = getString(migrated_user_specific,0,0);
    Context var35 = this.mContext;
    ContentResolver var37 = var35.getContentResolver();
    UserManager var38 = this.mUserManager;
    List var40 = var38.getUsers();
    int var42 = var40.size();
    setString(migrated_user_specific,true,0);
    String var99 = getString(migrated_biometric_weak,0,0);
    UserManager var101 = this.mUserManager;
    List var103 = var101.getUsers();
    int var105 = var103.size();
    setString(migrated_biometric_weak,true,0);
    String var152 = getString(migrated_lockscreen_disabled,0,0);
    UserManager var154 = this.mUserManager;
    List var156 = var154.getUsers();
    int var158 = var156.size();
    Object var173 = var156.get(var181);
    UserInfo var174 = (UserInfo) var173;
    int var175 = var174.id;
    boolean var177 = getBoolean(lockscreen.disabled,0,var175);
    String var8 = getStringUnchecked(param2,0,param4);
    boolean var10 = TextUtils.isEmpty(var8);
    boolean var13 = var8.equals(1);
    boolean var16 = var8.equals(true);
    boolean var21<PATH_SEP>Context var3 = this.mContext;
    Object var10 = new Object(3);
    arraystore 10[7] = 11;
    int var14 = LockSettingsService.getCallingUid();
    Integer var16 = Integer.valueOf(var14);
    arraystore 10[12] = 16;
    arraystore 10[17] = 18;
    migrateOldData();
    String var6 = getString(migrated,0,0);
    Context var9 = this.mContext;
    ContentResolver var11 = var9.getContentResolver();
    String var12 = VALID_SETTINGS;
    13 = arraylength 12;
    setString(migrated,true,0);
    String var34 = getString(migrated_user_specific,0,0);
    Context var35 = this.mContext;
    ContentResolver var37 = var35.getContentResolver();
    UserManager var38 = this.mUserManager;
    List var40 = var38.getUsers();
    int var42 = var40.size();
    setString(migrated_user_specific,true,0);
    String var99 = getString(migrated_biometric_weak,0,0);
    UserManager var101 = this.mUserManager;
    List var103 = var101.getUsers();
    int var105 = var103.size();
    setString(migrated_biometric_weak,true,0);
    String var152 = getString(migrated_lockscreen_disabled,0,0);
    UserManager var154 = this.mUserManager;
    List var156 = var154.getUsers();
    int var158 = var156.size();
    Object var173 = var156.get(var181);
    UserInfo var174 = (UserInfo) var173;
    int var175 = var174.id;
    boolean var177 = getBoolean(lockscreen.disabled,0,var175);
    String var8 = getStringUnchecked(param2,0,param4);
    boolean var10 = TextUtils.isEmpty(var8);
    boolean var13 = var8.equals(1);
    boolean var21<PATH_SEP>Context var3 = this.mContext;
    Object var10 = new Object(3);
    arraystore 10[7] = 11;
    int var14 = LockSettingsService.getCallingUid();
    Integer var16 = Integer.valueOf(var14);
    arraystore 10[12] = 16;
    arraystore 10[17] = 18;
    migrateOldData();
    String var6 = getString(migrated,0,0);
    Context var9 = this.mContext;
    ContentResolver var11 = var9.getContentResolver();
    String var12 = VALID_SETTINGS;
    13 = arraylength 12;
    setString(migrated,true,0);
    String var34 = getString(migrated_user_specific,0,0);
    Context var35 = this.mContext;
    ContentResolver var37 = var35.getContentResolver();
    UserManager var38 = this.mUserManager;
    List var40 = var38.getUsers();
    int var42 = var40.size();
    Object var44 = var40.get(var82);
    UserInfo var45 = (UserInfo) var44;
    int var46 = var45.id;
    String var49 = Settings$Secure.getStringForUser(var37,lock_screen_owner_info,var46);
    boolean var51 = TextUtils.isEmpty(var49);
    setString(lock_screen_owner_info,var49,var46);
    boolean var55 = Settings$Secure.putStringForUser(var37,lock_screen_owner_info,,var46);
    int var60 = Settings$Secure.getIntForUser(var37,lock_screen_owner_info_enabled,var46);
    setLong(lock_screen_owner_info_enabled,var67,var46);
    String var7 = Long.toString(param3);
    setStringUnchecked(param2,param4,var7);
}