// API: requestNothing
// Service: RulesManagerService_3

public void requestNothing() {
    PermissionHelper var4 = this.mPermissionHelper;
    CheckToken var9 = RulesManagerService.createCheckTokenOrThrow(param2);
    CheckToken var3 = CheckToken.fromByteArray(this);
    ByteArrayInputStream var2 = new ByteArrayInputStream();
    DataInputStream var4 = new DataInputStream();
    int var7 = var4.readInt();
    long var9 = var4.readLong();
    [B var3 = this.readBuffer;
    readFully(var3,0,8);
    [B var7 = this.readBuffer;
    8 = arrayload 7[4];
    9 = conversion(J) 8;
    var11 = var9 SHL 56;
    [B var12 = this.readBuffer;
    14 = arrayload 12[13];
    var16 = var14 and 255;
    17 = conversion(J) 16;
    var19 = var17 SHL 48;
    var20 = var11 add var19;
    [B var21 = this.readBuffer;
    23 = arrayload 21[22];
    var24 = var23 and 255;
    25 = conversion(J) 24;
    var27 = var25 SHL 40;
    var28 = var20 add var27;
    [B var29 = this.readBuffer;
    31 = arrayload 29[30];
    var32 = var31 and 255;
    33 = conversion(J) 32;
    var35 = var33 SHL 32;
    var36 = var28 add var35;
    [B var37 = this.readBuffer;
    39 = arrayload 37[38];
    var40 = var39 and 255;
    41 = conversion(J) 40;
    var43 = var41 SHL 24;
    var44 = var36 add var43;
    [B var45 = this.readBuffer;
    47 = arrayload 45[46];
    var48 = var47 and 255;
    var50 = var48 SHL 16;
    51 = conversion(J) 50;
    var52 = var44 add var51;
    [B var53 = this.readBuffer;
    55 = arrayload 53[54];
    var56 = var55 and 255;
    var57 = var56 SHL 8;
    58 = conversion(J) 57;
    var59 = var52 add var58;
    [B var60 = this.readBuffer;
    62 = arrayload 60[61];
    var63 = var62 and 255;
    var64 = var63 SHL 0;
    65 = conversion(J) 64;
    var66 = var59 add var65;
    long var66<PATH_SEP>PermissionHelper var4 = this.mPermissionHelper;
    CheckToken var9 = RulesManagerService.createCheckTokenOrThrow(param2);
    CheckToken var3 = CheckToken.fromByteArray(this);
    ByteArrayInputStream var2 = new ByteArrayInputStream();
    DataInputStream var4 = new DataInputStream();
    int var7 = var4.readInt();
    long var9 = var4.readLong();
    long var11 = var4.readLong();
    CheckToken var12 = new CheckToken();
    PackageVersions var13 = new PackageVersions();
    CheckToken.$closeResource(0,var4);
    close();<PATH_SEP>PermissionHelper var4 = this.mPermissionHelper;
    CheckToken var9 = RulesManagerService.createCheckTokenOrThrow(param2);
    String var13 = RulesManagerService.toStringOrNull(var10);
    PackageTracker var15 = this.mPackageTracker;
    var15.recordCheckResult(var10,param3);
    boolean var21 = this.mTrackingEnabled;
    PackageStatusStorage var64 = this.mPackageStatusStorage;
    var64.resetCheckState();
    PackageTrackerIntentHelper var66 = this.mIntentHelper;
    int var67 = this.mDelayBeforeReliabilityCheckMillis;
    68 = conversion(J) 67;
    var66.scheduleReliabilityTrigger(var68);
    Context var3 = this.mContext;
    TimeZoneUpdateIdler.schedule(var3,param2);
    Object var5 = getSystemService(jobscheduler);
    JobScheduler var6 = (JobScheduler) var5;
    ComponentName var7 = new ComponentName();
    8 = load_metadata: <Application,Lcom/android/server/timezone/TimeZoneUpdateIdler>;
    <Primordial,Ljava/lang/Class>;
    JobInfo$Builder var10 = new JobInfo$Builder();
    JobInfo$Builder var15 = var10.setRequiresDeviceIdle(1);
    JobInfo$Builder var17 = var15.setRequiresCharging(1);<PATH_SEP>PermissionHelper var4 = this.mPermissionHelper;
    CheckToken var9 = RulesManagerService.createCheckTokenOrThrow(param2);
    String var13 = RulesManagerService.toStringOrNull(var10);
    PackageTracker var15 = this.mPackageTracker;
    var15.recordCheckResult(var10,param3);
    boolean var21 = this.mTrackingEnabled;
    PackageStatusStorage var96 = this.mPackageStatusStorage;
    var96.resetCheckState();
    int var3 = getCurrentOptimisticLockId();
    var15 = var11 add 1;
    boolean var18 = writePackageStatusWithOptimisticLockCheck(var11,var15,0,0);
    int var8 = getCurrentOptimisticLockId();
    writePackageStatusLocked(param4,param3,param5);
    boolean 1;
}