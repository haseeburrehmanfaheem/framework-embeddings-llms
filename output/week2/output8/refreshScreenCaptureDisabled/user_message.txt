// API: refreshScreenCaptureDisabled
// Service: WindowManagerService_2

public void refreshScreenCaptureDisabled() {
    int var4 = Binder.getCallingUid();
    WindowManagerGlobalLock var9 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var11 = this.mRoot;
    DevicePolicyCache var13 = DevicePolicyCache.getInstance();
    boolean var15 = var13.getScreenCaptureDisabled(param2);
    var11.setSecureSurfaceState(param2,var15);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    reset();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    var8 = var6 add -1;
    var5.regionCounter = var8;
    int var9 = var5.regionCounter;
    int var11 = var5.prevPriority;
    int var13 = var5.tid;
    int var14 = var5.prevPriority;
    Process.setThreadPriority(var13,var14);
    var5.prevPriority = 2147483647;<PATH_SEP>int var4 = Binder.getCallingUid();
    WindowManagerGlobalLock var9 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var11 = this.mRoot;
    DevicePolicyCache var13 = DevicePolicyCache.getInstance();
    boolean var15 = var13.getScreenCaptureDisabled(param2);
    var11.setSecureSurfaceState(param2,var15);
    -$$Lambda$RootWindowContainer$vMW2dyMvZQ0PDhptvNKN5WXpK_w var4 = new -$$Lambda$RootWindowContainer$vMW2dyMvZQ0PDhptvNKN5WXpK_w();
    forAllWindows(var4,1);
    WindowContainer$ForAllWindowsConsumerWrapper var5 = obtainConsumerWrapper(param2);
    boolean var7 = forAllWindows(var5,param3);
    var5.release();<PATH_SEP>int var4 = Binder.getCallingUid();
    WindowManagerGlobalLock var9 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var11 = this.mRoot;
    DevicePolicyCache var13 = DevicePolicyCache.getInstance();
    1 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var3 = LocalServices.getService(this);
    DevicePolicyManagerInternal var4 = (DevicePolicyManagerInternal) var3;
    DevicePolicyCache$EmptyDevicePolicyCache var7 = DevicePolicyCache$EmptyDevicePolicyCache.access$000();{DevicePolicyCache$EmptyDevicePolicyCache var7 = DevicePolicyCache$EmptyDevicePolicyCache.access$000();};
    Landroid/app/admin/DevicePolicyCache var10<PATH_SEP>int var4 = Binder.getCallingUid();
    WindowManagerGlobalLock var9 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var11 = this.mRoot;
    DevicePolicyCache var13 = DevicePolicyCache.getInstance();
    boolean var15 = var13.getScreenCaptureDisabled(param2);
    var11.setSecureSurfaceState(param2,var15);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
}