// API: grantSlicePermission
// Service: SliceManagerService_4

public void grantSlicePermission() {
    UserHandle var7 = Binder.getCallingUserHandle();
    int var9 = var7.getIdentifier();
    enforceOwner(param2,param4,var9);{enforceOwner(param2,param4,var9);};
    SlicePermissionManager var11 = this.mPermissions;
    var11.grantSliceAccess(param3,var9,param2,var9,param4);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    var12.grantUri(param6,var9);
    SliceProviderPermissions var15 = getProvider(var9);
    ArrayMap var3 = this.mCachedProviders;
    ArrayMap var4 = this.mCachedProviders;
    Object var6 = var4.get(param2);
    SliceProviderPermissions var7 = (SliceProviderPermissions) var6;
    String var12 = SliceProviderPermissions.getFileName(param2);
    SlicePermissionManager$ParserHolder var14 = getParser(var12);
    XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);{XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);};
    SliceProviderPermissions var18 = SliceProviderPermissions.createFrom(var16,this);
    ArrayMap var19 = this.mCachedProviders;
    ArrayMap var20 = this.mCachedProviders;
    Object var22 = var20.put(param2,var18);
    Handler var27 = this.mHandler;
    Handler var28 = this.mHandler;
    Message var31 = var28.obtainMessage(5,param2);
    boolean var34 = var27.sendMessageDelayed(var31,300000);
    SlicePermissionManager.$closeResource(0,var14);
    Lcom/android/server/slice/SliceProviderPermissions var18<PATH_SEP>UserHandle var7 = Binder.getCallingUserHandle();
    int var9 = var7.getIdentifier();
    enforceOwner(param2,param4,var9);{enforceOwner(param2,param4,var9);};
    SlicePermissionManager var11 = this.mPermissions;
    var11.grantSliceAccess(param3,var9,param2,var9,param4);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    ArrayMap var3 = this.mCachedClients;
    ArrayMap var4 = this.mCachedClients;
    Object var6 = var4.get(param2);
    SliceClientPermissions var7 = (SliceClientPermissions) var6;
    String var12 = SliceClientPermissions.getFileName(param2);
    SlicePermissionManager$ParserHolder var14 = getParser(var12);
    AtomicFile var4 = getFile(param2);
    SlicePermissionManager$ParserHolder var5 = new SlicePermissionManager$ParserHolder();
    FileInputStream var9 = var4.openRead();
    InputStream var11 = SlicePermissionManager$ParserHolder.access$302(var5,var9);{InputStream var11 = SlicePermissionManager$ParserHolder.access$302(var5,var9);};
    XmlPullParserFactory var13 = XmlPullParserFactory.newInstance();
    XmlPullParser var15 = var13.newPullParser();
    XmlPullParser var17 = SlicePermissionManager$ParserHolder.access$102(var5,var15);{XmlPullParser var17 = SlicePermissionManager$ParserHolder.access$102(var5,var15);};
    XmlPullParser var19 = SlicePermissionManager$ParserHolder.access$100(var5);{XmlPullParser var19 = SlicePermissionManager$ParserHolder.access$100(var5);};
    InputStream var21 = SlicePermissionManager$ParserHolder.access$300(var5);{InputStream var21 = SlicePermissionManager$ParserHolder.access$300(var5);};
    Xml$Encoding var22 = UTF_8;
    String var24 = var22.name();
    var19.setInput(var21,var24);<PATH_SEP>UserHandle var7 = Binder.getCallingUserHandle();
    int var9 = var7.getIdentifier();
    enforceOwner(param2,param4,var9);{enforceOwner(param2,param4,var9);};
    SlicePermissionManager var11 = this.mPermissions;
    var11.grantSliceAccess(param3,var9,param2,var9,param4);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    ArrayMap var3 = this.mCachedClients;
    ArrayMap var4 = this.mCachedClients;
    Object var6 = var4.get(param2);
    SliceClientPermissions var7 = (SliceClientPermissions) var6;
    String var12 = SliceClientPermissions.getFileName(param2);
    SlicePermissionManager$ParserHolder var14 = getParser(var12);
    XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);{XmlPullParser var16 = SlicePermissionManager$ParserHolder.access$100(var14);};
    SliceClientPermissions var18 = SliceClientPermissions.createFrom(var16,this);<PATH_SEP>UserHandle var7 = Binder.getCallingUserHandle();
    int var9 = var7.getIdentifier();
    enforceOwner(param2,param4,var9);{enforceOwner(param2,param4,var9);};
    SlicePermissionManager var11 = this.mPermissions;
    var11.grantSliceAccess(param3,var9,param2,var9,param4);
    SlicePermissionManager$PkgUser var7 = new SlicePermissionManager$PkgUser();
    SlicePermissionManager$PkgUser var9 = new SlicePermissionManager$PkgUser();
    SliceClientPermissions var12 = getClient(var7);
    ArrayMap var3 = this.mCachedClients;
    ArrayMap var4 = this.mCachedClients;
    Object var6 = var4.get(param2);
    SliceClientPermissions var7 = (SliceClientPermissions) var6;
    String var12 = SliceClientPermissions.getFileName(param2);
    SlicePermissionManager$ParserHolder var14 = getParser(var12);
    AtomicFile var4 = getFile(param2);
    SlicePermissionManager$ParserHolder var5 = new SlicePermissionManager$ParserHolder();
    FileInputStream var9 = var4.openRead();
    InputStream var11 = SlicePermissionManager$ParserHolder.access$302(var5,var9);{InputStream var11 = SlicePermissionManager$ParserHolder.access$302(var5,var9);};
    XmlPullParserFactory var13 = XmlPullParserFactory.newInstance();
}