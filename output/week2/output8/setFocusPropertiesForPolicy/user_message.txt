// API: setFocusPropertiesForPolicy
// Service: AudioService_3

public void setFocusPropertiesForPolicy() {
    HashMap var4 = this.mAudioPolicies;
    HashMap var10 = this.mAudioPolicies;
    IBinder var12 = asBinder();
    boolean var14 = var10.containsKey(var12);
    HashMap var16 = this.mAudioPolicies;
    Collection var18 = var16.values();
    Iterator var20 = var18.iterator();
    var7.mFocusDuckBehavior = param2;<PATH_SEP>HashMap var4 = this.mAudioPolicies;
    HashMap var10 = this.mAudioPolicies;
    IBinder var12 = asBinder();
    boolean var14 = var10.containsKey(var12);
    HashMap var16 = this.mAudioPolicies;
    Collection var18 = var16.values();
    Iterator var20 = var18.iterator();
    var7.mFocusDuckBehavior = param2;
    MediaFocusControl var32 = this.mMediaFocusControl;
    var32.setDuckingInExtPolicyAvailable(var33);<PATH_SEP>HashMap var4 = this.mAudioPolicies;
    HashMap var10 = this.mAudioPolicies;
    IBinder var12 = asBinder();
    boolean var14 = var10.containsKey(var12);
    HashMap var16 = this.mAudioPolicies;
    Collection var18 = var16.values();
    Iterator var20 = var18.iterator();
    var7.mFocusDuckBehavior = param2;
    MediaFocusControl var32 = this.mMediaFocusControl;
    var32.setDuckingInExtPolicyAvailable(var33);
    int 0<PATH_SEP>HashMap var4 = this.mAudioPolicies;
    HashMap var10 = this.mAudioPolicies;
    IBinder var12 = asBinder();
    boolean var14 = var10.containsKey(var12);
    var7.mFocusDuckBehavior = param2;
    MediaFocusControl var32 = this.mMediaFocusControl;
    var32.setDuckingInExtPolicyAvailable(var33);
}