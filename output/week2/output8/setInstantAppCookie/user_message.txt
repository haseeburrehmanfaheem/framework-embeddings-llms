// API: setInstantAppCookie
// Service: PackageManagerService_4

public void setInstantAppCookie() {
    PermissionManagerServiceInternal var5 = this.mPermissionManager;
    int var7 = Binder.getCallingUid();
    int var12 = Binder.getCallingUid();
    ArrayMap var16 = this.mPackages;
    InstantAppRegistry var17 = this.mInstantAppRegistry;
    boolean var19 = var17.setInstantAppCookieLPw(param2,param3,param4);
    6 = arraylength 3;
    PackageManagerService var7 = this.mService;
    Context var8 = var7.mContext;
    PackageManager var10 = var8.getPackageManager();
    int var12 = var10.getInstantAppCookieMaxBytes();
    13 = arraylength 3;
    PackageManagerService var15 = this.mService;
    ArrayMap var16 = var15.mPackages;
    Object var18 = var16.get(param2);
    PackageParser$Package var19 = (PackageParser$Package) var18;
    InstantAppRegistry$CookiePersistence var20 = this.mCookiePersistence;
    var20.schedulePersistLPw(param4,var19,param3);
    String var5 = param3.packageName;
    PackageParser$SigningDetails var6 = param3.mSigningDetails;
    Signature var7 = var6.signatures;
    String var9 = PackageUtils.computeSignaturesSha256Digest(var7);
    File var11 = InstantAppRegistry.access$000(var5,var9,param2);{File var11 = InstantAppRegistry.access$000(var5,var9,param2);};
    PackageParser$SigningDetails var12 = param3.mSigningDetails;
    boolean var14 = var12.hasSignatures();
    String var23 = param3.packageName;
    File var25 = InstantAppRegistry.access$100(var23,param2);{File var25 = InstantAppRegistry.access$100(var23,param2);};
    boolean var27 = var11.equals(var25);
    boolean var29 = var25.delete();
    cancelPendingPersistLPw(param3,param2);
    addPendingPersistCookieLPw(param2,param3,param4,var11);
    Message var36 = obtainMessage(param2,param3);
    boolean var39 = sendMessageDelayed(var36,1000);<PATH_SEP>PermissionManagerServiceInternal var5 = this.mPermissionManager;
    int var7 = Binder.getCallingUid();
    int var12 = Binder.getCallingUid();
    ArrayMap var16 = this.mPackages;
    InstantAppRegistry var17 = this.mInstantAppRegistry;
    boolean var19 = var17.setInstantAppCookieLPw(param2,param3,param4);
    6 = arraylength 3;
    PackageManagerService var7 = this.mService;
    Context var8 = var7.mContext;
    PackageManager var10 = var8.getPackageManager();
    int var12 = var10.getInstantAppCookieMaxBytes();
    13 = arraylength 3;
    PackageManagerService var15 = this.mService;
    ArrayMap var16 = var15.mPackages;
    Object var18 = var16.get(param2);
    PackageParser$Package var19 = (PackageParser$Package) var18;
    InstantAppRegistry$CookiePersistence var20 = this.mCookiePersistence;
    var20.schedulePersistLPw(param4,var19,param3);
    String var5 = param3.packageName;
    PackageParser$SigningDetails var6 = param3.mSigningDetails;
    Signature var7 = var6.signatures;
    String var9 = PackageUtils.computeSignaturesSha256Digest(var7);
    File var11 = InstantAppRegistry.access$000(var5,var9,param2);{File var11 = InstantAppRegistry.access$000(var5,var9,param2);};
    PackageParser$SigningDetails var12 = param3.mSigningDetails;
    boolean var14 = var12.hasSignatures();
    String var23 = param3.packageName;
    File var25 = InstantAppRegistry.access$100(var23,param2);{File var25 = InstantAppRegistry.access$100(var23,param2);};
    boolean var27 = var11.equals(var25);
    boolean var29 = var25.delete();
    cancelPendingPersistLPw(param3,param2);
    addPendingPersistCookieLPw(param2,param3,param4,var11);
    SparseArray var6 = this.mPendingPersistCookies;
    Object var8 = var6.get(param2);
    ArrayMap var9 = (ArrayMap) var8;
    ArrayMap var11 = new ArrayMap();
    SparseArray var13 = this.mPendingPersistCookies;
    var13.put(param2,var11);
    SomeArgs var18 = SomeArgs.obtain();
    var18.arg1 = param4;
    var18.arg2 = param5;
    String var19 = param3.packageName;
    Object var21 = var15.put(var19,var18);<PATH_SEP>PermissionManagerServiceInternal var5 = this.mPermissionManager;
    int var7 = Binder.getCallingUid();
    int var12 = Binder.getCallingUid();
    ArrayMap var16 = this.mPackages;
    InstantAppRegistry var17 = this.mInstantAppRegistry;
    boolean var19 = var17.setInstantAppCookieLPw(param2,param3,param4);
    6 = arraylength 3;
    PackageManagerService var7 = this.mService;
    Context var8 = var7.mContext;
    PackageManager var10 = var8.getPackageManager();
    int var12 = var10.getInstantAppCookieMaxBytes();
    13 = arraylength 3;
    PackageManagerService var15 = this.mService;
    ArrayMap var16 = var15.mPackages;
    Object var18 = var16.get(param2);
    PackageParser$Package var19 = (PackageParser$Package) var18;
    InstantAppRegistry$CookiePersistence var20 = this.mCookiePersistence;
    var20.schedulePersistLPw(param4,var19,param3);
    String var5 = param3.packageName;
    PackageParser$SigningDetails var6 = param3.mSigningDetails;
    Signature var7 = var6.signatures;
    String var9 = PackageUtils.computeSignaturesSha256Digest(var7);
    File var11 = InstantAppRegistry.access$000(var5,var9,param2);{File var11 = InstantAppRegistry.access$000(var5,var9,param2);};
    PackageParser$SigningDetails var12 = param3.mSigningDetails;
    boolean var14 = var12.hasSignatures();
    String var23 = param3.packageName;
    File var25 = InstantAppRegistry.access$100(var23,param2);{File var25 = InstantAppRegistry.access$100(var23,param2);};
    boolean var27 = var11.equals(var25);
    boolean var29 = var25.delete();
    cancelPendingPersistLPw(param3,param2);
    addPendingPersistCookieLPw(param2,param3,param4,var11);<PATH_SEP>PermissionManagerServiceInternal var5 = this.mPermissionManager;
    int var7 = Binder.getCallingUid();
    int var12 = Binder.getCallingUid();
    ArrayMap var16 = this.mPackages;
    InstantAppRegistry var17 = this.mInstantAppRegistry;
    boolean var19 = var17.setInstantAppCookieLPw(param2,param3,param4);
    6 = arraylength 3;
    PackageManagerService var7 = this.mService;
    Context var8 = var7.mContext;
    PackageManager var10 = var8.getPackageManager();
    int var12 = var10.getInstantAppCookieMaxBytes();
    13 = arraylength 3;
    PackageManagerService var15 = this.mService;
    ArrayMap var16 = var15.mPackages;
    Object var18 = var16.get(param2);
    PackageParser$Package var19 = (PackageParser$Package) var18;
    InstantAppRegistry$CookiePersistence var20 = this.mCookiePersistence;
    var20.schedulePersistLPw(param4,var19,param3);
    boolean 1;
}