// API: stopFreezingScreen
// Service: WindowManagerService_1

public void stopFreezingScreen() {
    WindowManagerGlobalLock var10 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var12 = this.mClientFreezingScreen;
    this.mClientFreezingScreen = 0;
    this.mLastFinishedFreezeSource = client;
    long var15 = Binder.clearCallingIdentity();
    stopFreezingDisplayLocked();
    boolean var2 = this.mDisplayFrozen;
    RootWindowContainer var4 = this.mRoot;
    int var5 = this.mFrozenDisplayId;
    DisplayContent var7 = var4.getDisplayContent(var5);
    boolean var9 = var7.mWaitingForConfig;
    ArraySet var11 = var7.mOpeningApps;
    int var13 = var11.size();
    int var17 = this.mAppsFreezingScreen;
    int var18 = this.mWindowsFreezingScreen;
    boolean var19 = this.mClientFreezingScreen;
    int var20 = this.mFrozenDisplayId;
    this.mFrozenDisplayId = -1;
    this.mDisplayFrozen = 0;
    InputManagerCallback var22 = this.mInputManagerCallback;
    var22.thawInputDispatchingLw();
    long var25 = SystemClock.elapsedRealtime();
    long var26 = this.mDisplayFreezeTime;
    var27 = var25 sub var26;
    28 = conversion(I) 27;
    this.mLastDisplayFreezeDuration = var28;
    int var35 = this.mLastDisplayFreezeDuration;
    36 = conversion(J) 35;
    TimeUtils.formatDuration(var36,var29);
    Object var38 = this.mLastFinishedFreezeSource;
    Object var42 = this.mLastFinishedFreezeSource;
    WindowManagerService$H var53 = this.mH;
    var53.removeMessages(17);
    WindowManagerService$H var56 = this.mH;
    var56.removeMessages(30);
    WindowAnimator var59 = this.mAnimator;
    ScreenRotationAnimation var61 = var59.getScreenRotationAnimationLocked(var20);
    boolean var63 = var61.hasScreenshot();
    DisplayInfo var72 = var7.getDisplayInfo();
    DisplayPolicy var74 = var7.getDisplayPolicy();
    int var75 = this.mExitAnimId;
    int var76 = this.mEnterAnimId;
    boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);{boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);};
    this.mEnterAnimId = 0;
    this.mExitAnimId = 0;
    SurfaceControl$Transaction var79 = this.mTransaction;
    float var81 = getTransitionAnimationScaleLocked();
    int var82 = var72.logicalWidth;
    int var83 = var72.logicalHeight;
    int var84 = this.mExitAnimId;
    int var85 = this.mEnterAnimId;
    boolean var88 = var61.dismiss(var79,10000,var81,var82,var83,var84,var85);
    SurfaceControl var9 = this.mSurfaceControl;
    boolean var11 = this.mStarted;
    boolean var14 = startAnimation(param2,param3,param4,param5,param6,1,param7,param8);
    SurfaceControl var10 = this.mSurfaceControl;
    boolean var12 = this.mStarted;
    this.mStarted = 1;
    int var14 = this.mCurRotation;
    int var15 = this.mOriginalRotation;
    int var17 = DisplayContent.deltaRotation(var14,var15);
    Context var52 = this.mContext;
    Animation var54 = AnimationUtils.loadAnimation(var52,param8);
    this.mRotateExitAnimation = var54;
    Context var55 = this.mContext;
    Animation var57 = AnimationUtils.loadAnimation(var55,param9);
    this.mRotateEnterAnimation = var57;
    Animation var63 = this.mRotateEnterAnimation;
    int var64 = this.mOriginalWidth;
    int var65 = this.mOriginalHeight;
    var63.initialize(param5,param6,var64,var65);
    Animation var67 = this.mRotateExitAnimation;
    int var68 = this.mOriginalWidth;
    int var69 = this.mOriginalHeight;
    var67.initialize(param5,param6,var68,var69);
    this.mAnimRunning = 0;
    this.mFinishAnimReady = 0;
    this.mFinishAnimStartTime = -1;
    Animation var72 = this.mRotateExitAnimation;
    var72.restrictDuration(param3);{var72.restrictDuration(param3);};
    Animation var74 = this.mRotateExitAnimation;
    var74.scaleCurrentDuration(param4);
    Animation var76 = this.mRotateEnterAnimation;
    var76.restrictDuration(param3);{var76.restrictDuration(param3);};
    Animation var78 = this.mRotateEnterAnimation;
    var78.scaleCurrentDuration(param4);
    DisplayContent var80 = this.mDisplayContent;
    Display var82 = var80.getDisplay();
    int var84 = var82.getLayerStack();
    boolean 1<PATH_SEP>WindowManagerGlobalLock var10 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var12 = this.mClientFreezingScreen;
    this.mClientFreezingScreen = 0;
    this.mLastFinishedFreezeSource = client;
    long var15 = Binder.clearCallingIdentity();
    stopFreezingDisplayLocked();
    boolean var2 = this.mDisplayFrozen;
    RootWindowContainer var4 = this.mRoot;
    int var5 = this.mFrozenDisplayId;
    DisplayContent var7 = var4.getDisplayContent(var5);
    boolean var9 = var7.mWaitingForConfig;
    ArraySet var11 = var7.mOpeningApps;
    int var13 = var11.size();
    int var17 = this.mAppsFreezingScreen;
    int var18 = this.mWindowsFreezingScreen;
    boolean var19 = this.mClientFreezingScreen;
    int var20 = this.mFrozenDisplayId;
    this.mFrozenDisplayId = -1;
    this.mDisplayFrozen = 0;
    InputManagerCallback var22 = this.mInputManagerCallback;
    var22.thawInputDispatchingLw();
    long var25 = SystemClock.elapsedRealtime();
    long var26 = this.mDisplayFreezeTime;
    var27 = var25 sub var26;
    28 = conversion(I) 27;
    this.mLastDisplayFreezeDuration = var28;
    int var35 = this.mLastDisplayFreezeDuration;
    36 = conversion(J) 35;
    TimeUtils.formatDuration(var36,var29);
    Object var38 = this.mLastFinishedFreezeSource;
    Object var42 = this.mLastFinishedFreezeSource;
    WindowManagerService$H var53 = this.mH;
    var53.removeMessages(17);
    WindowManagerService$H var56 = this.mH;
    var56.removeMessages(30);
    WindowAnimator var59 = this.mAnimator;
    ScreenRotationAnimation var61 = var59.getScreenRotationAnimationLocked(var20);
    boolean var63 = var61.hasScreenshot();
    DisplayInfo var72 = var7.getDisplayInfo();
    DisplayPolicy var74 = var7.getDisplayPolicy();
    int var75 = this.mExitAnimId;
    int var76 = this.mEnterAnimId;
    boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);{boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);};
    this.mEnterAnimId = 0;
    this.mExitAnimId = 0;
    SurfaceControl$Transaction var79 = this.mTransaction;
    float var81 = getTransitionAnimationScaleLocked();
    int var82 = var72.logicalWidth;
    int var83 = var72.logicalHeight;
    int var84 = this.mExitAnimId;
    int var85 = this.mEnterAnimId;
    boolean var88 = var61.dismiss(var79,10000,var81,var82,var83,var84,var85);
    SurfaceControl var9 = this.mSurfaceControl;
    boolean var11 = this.mStarted;
    boolean var14 = startAnimation(param2,param3,param4,param5,param6,1,param7,param8);
    SurfaceControl var10 = this.mSurfaceControl;
    boolean var12 = this.mStarted;
    this.mStarted = 1;
    int var14 = this.mCurRotation;
    int var15 = this.mOriginalRotation;
    int var17 = DisplayContent.deltaRotation(var14,var15);
    Context var52 = this.mContext;
    Animation var54 = AnimationUtils.loadAnimation(var52,param8);
    this.mRotateExitAnimation = var54;
    Context var55 = this.mContext;
    Animation var57 = AnimationUtils.loadAnimation(var55,param9);
    this.mRotateEnterAnimation = var57;
    Animation var63 = this.mRotateEnterAnimation;
    int var64 = this.mOriginalWidth;
    int var65 = this.mOriginalHeight;
    var63.initialize(param5,param6,var64,var65);
    Animation var67 = this.mRotateExitAnimation;
    int var68 = this.mOriginalWidth;
    int var69 = this.mOriginalHeight;
    var67.initialize(param5,param6,var68,var69);
    this.mAnimRunning = 0;
    this.mFinishAnimReady = 0;
    this.mFinishAnimStartTime = -1;
    Animation var72 = this.mRotateExitAnimation;
    var72.restrictDuration(param3);{var72.restrictDuration(param3);};
    Animation var74 = this.mRotateExitAnimation;
    var74.scaleCurrentDuration(param4);
    Animation var76 = this.mRotateEnterAnimation;
    var76.restrictDuration(param3);{var76.restrictDuration(param3);};
    Animation var78 = this.mRotateEnterAnimation;
    var78.scaleCurrentDuration(param4);
    DisplayContent var80 = this.mDisplayContent;
    Display var82 = var80.getDisplay();
    int var84 = var82.getLayerStack();
    BlackFrame var87 = this.mExitingBlackFrame;
    int var89 = this.mOriginalWidth;
    int var90 = this.mOriginalHeight;
    Matrix var91 = this.mFrameInitialMatrix;
    ScreenRotationAnimation.createRotationMatrix(var17,var89,var90,var91);
    boolean var93 = this.mForceDefaultOrientation;
    Rect var94 = new Rect();
    int var95 = this.mOriginalWidth;
    96 = neg 95;
    var97 = var96 mul 1;
    int var98 = this.mOriginalHeight;
    99 = neg 98;
    var100 = var99 mul 1;
    int var101 = this.mOriginalWidth;
    var103 = var101 mul 2;
    int var104 = this.mOriginalHeight;
    var105 = var104 mul 2;
    Rect var107 = new Rect();
    int var108 = this.mOriginalWidth;
    int var109 = this.mOriginalHeight;
    BlackFrame var119 = new BlackFrame();
    WindowManagerService var120 = this.mService;
    TransactionFactory var121 = var120.mTransactionFactory;
    DisplayContent var123 = this.mDisplayContent;
    boolean var124 = this.mForceDefaultOrientation;
    this.mExitingBlackFrame = var119;
    BlackFrame var129 = this.mExitingBlackFrame;
    Matrix var130 = this.mFrameInitialMatrix;
    var129.setMatrix(param2,var130);<PATH_SEP>WindowManagerGlobalLock var10 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var12 = this.mClientFreezingScreen;
    this.mClientFreezingScreen = 0;
    this.mLastFinishedFreezeSource = client;
    long var15 = Binder.clearCallingIdentity();
    stopFreezingDisplayLocked();
    boolean var2 = this.mDisplayFrozen;
    RootWindowContainer var4 = this.mRoot;
    int var5 = this.mFrozenDisplayId;
    DisplayContent var7 = var4.getDisplayContent(var5);
    boolean var9 = var7.mWaitingForConfig;
    ArraySet var11 = var7.mOpeningApps;
    int var13 = var11.size();
    int var17 = this.mAppsFreezingScreen;
    int var18 = this.mWindowsFreezingScreen;
    boolean var19 = this.mClientFreezingScreen;
    int var20 = this.mFrozenDisplayId;
    this.mFrozenDisplayId = -1;
    this.mDisplayFrozen = 0;
    InputManagerCallback var22 = this.mInputManagerCallback;
    var22.thawInputDispatchingLw();
    long var25 = SystemClock.elapsedRealtime();
    long var26 = this.mDisplayFreezeTime;
    var27 = var25 sub var26;
    28 = conversion(I) 27;
    this.mLastDisplayFreezeDuration = var28;
    int var35 = this.mLastDisplayFreezeDuration;
    36 = conversion(J) 35;
    TimeUtils.formatDuration(var36,var29);
    Object var38 = this.mLastFinishedFreezeSource;
    Object var42 = this.mLastFinishedFreezeSource;
    WindowManagerService$H var53 = this.mH;
    var53.removeMessages(17);
    WindowManagerService$H var56 = this.mH;
    var56.removeMessages(30);
    WindowAnimator var59 = this.mAnimator;
    ScreenRotationAnimation var61 = var59.getScreenRotationAnimationLocked(var20);
    boolean var63 = var61.hasScreenshot();
    DisplayInfo var72 = var7.getDisplayInfo();
    DisplayPolicy var74 = var7.getDisplayPolicy();
    int var75 = this.mExitAnimId;
    int var76 = this.mEnterAnimId;
    boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);{boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);};
    this.mEnterAnimId = 0;
    this.mExitAnimId = 0;
    SurfaceControl$Transaction var79 = this.mTransaction;
    float var81 = getTransitionAnimationScaleLocked();
    int var82 = var72.logicalWidth;
    int var83 = var72.logicalHeight;
    int var84 = this.mExitAnimId;
    int var85 = this.mEnterAnimId;
    boolean var88 = var61.dismiss(var79,10000,var81,var82,var83,var84,var85);
    SurfaceControl var9 = this.mSurfaceControl;
    boolean var11 = this.mStarted;
    boolean var14 = startAnimation(param2,param3,param4,param5,param6,1,param7,param8);
    SurfaceControl var10 = this.mSurfaceControl;
    boolean var12 = this.mStarted;
    this.mStarted = 1;
    int var14 = this.mCurRotation;
    int var15 = this.mOriginalRotation;
    int var17 = DisplayContent.deltaRotation(var14,var15);
    Context var52 = this.mContext;
    Animation var54 = AnimationUtils.loadAnimation(var52,param8);
    this.mRotateExitAnimation = var54;
    Context var55 = this.mContext;
    Animation var57 = AnimationUtils.loadAnimation(var55,param9);
    this.mRotateEnterAnimation = var57;
    Animation var63 = this.mRotateEnterAnimation;
    int var64 = this.mOriginalWidth;
    int var65 = this.mOriginalHeight;
    var63.initialize(param5,param6,var64,var65);
    Animation var67 = this.mRotateExitAnimation;
    int var68 = this.mOriginalWidth;
    int var69 = this.mOriginalHeight;
    var67.initialize(param5,param6,var68,var69);
    this.mAnimRunning = 0;
    this.mFinishAnimReady = 0;
    this.mFinishAnimStartTime = -1;
    Animation var72 = this.mRotateExitAnimation;
    var72.restrictDuration(param3);{var72.restrictDuration(param3);};
    Animation var74 = this.mRotateExitAnimation;
    var74.scaleCurrentDuration(param4);
    Animation var76 = this.mRotateEnterAnimation;
    var76.restrictDuration(param3);{var76.restrictDuration(param3);};
    Animation var78 = this.mRotateEnterAnimation;
    var78.scaleCurrentDuration(param4);
    DisplayContent var80 = this.mDisplayContent;
    Display var82 = var80.getDisplay();
    int var84 = var82.getLayerStack();
    BlackFrame var87 = this.mExitingBlackFrame;
    BlackFrame var139 = this.mEnteringBlackFrame;
    Rect var140 = new Rect();
    141 = neg 5;
    var142 = var141 mul 1;
    143 = neg 6;
    var144 = var143 mul 1;
    var145 = param5 mul 2;
    var146 = param6 mul 2;
    Rect var148 = new Rect();
    BlackFrame var150 = new BlackFrame();
    WindowManagerService var151 = this.mService;
    TransactionFactory var152 = var151.mTransactionFactory;
    DisplayContent var154 = this.mDisplayContent;
    this.mEnteringBlackFrame = var150;<PATH_SEP>WindowManagerGlobalLock var10 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var12 = this.mClientFreezingScreen;
    this.mClientFreezingScreen = 0;
    this.mLastFinishedFreezeSource = client;
    long var15 = Binder.clearCallingIdentity();
    stopFreezingDisplayLocked();
    boolean var2 = this.mDisplayFrozen;
    RootWindowContainer var4 = this.mRoot;
    int var5 = this.mFrozenDisplayId;
    DisplayContent var7 = var4.getDisplayContent(var5);
    boolean var9 = var7.mWaitingForConfig;
    ArraySet var11 = var7.mOpeningApps;
    int var13 = var11.size();
    int var17 = this.mAppsFreezingScreen;
    int var18 = this.mWindowsFreezingScreen;
    boolean var19 = this.mClientFreezingScreen;
    int var20 = this.mFrozenDisplayId;
    this.mFrozenDisplayId = -1;
    this.mDisplayFrozen = 0;
    InputManagerCallback var22 = this.mInputManagerCallback;
    var22.thawInputDispatchingLw();
    long var25 = SystemClock.elapsedRealtime();
    long var26 = this.mDisplayFreezeTime;
    var27 = var25 sub var26;
    28 = conversion(I) 27;
    this.mLastDisplayFreezeDuration = var28;
    int var35 = this.mLastDisplayFreezeDuration;
    36 = conversion(J) 35;
    TimeUtils.formatDuration(var36,var29);
    Object var38 = this.mLastFinishedFreezeSource;
    Object var42 = this.mLastFinishedFreezeSource;
    WindowManagerService$H var53 = this.mH;
    var53.removeMessages(17);
    WindowManagerService$H var56 = this.mH;
    var56.removeMessages(30);
    WindowAnimator var59 = this.mAnimator;
    ScreenRotationAnimation var61 = var59.getScreenRotationAnimationLocked(var20);
    boolean var63 = var61.hasScreenshot();
    DisplayInfo var72 = var7.getDisplayInfo();
    DisplayPolicy var74 = var7.getDisplayPolicy();
    int var75 = this.mExitAnimId;
    int var76 = this.mEnterAnimId;
    boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);{boolean var78 = var74.validateRotationAnimationLw(var75,var76,0);};
    this.mEnterAnimId = 0;
    this.mExitAnimId = 0;
    SurfaceControl$Transaction var79 = this.mTransaction;
    float var81 = getTransitionAnimationScaleLocked();
    int var82 = var72.logicalWidth;
    int var83 = var72.logicalHeight;
    int var84 = this.mExitAnimId;
    int var85 = this.mEnterAnimId;
    boolean var88 = var61.dismiss(var79,10000,var81,var82,var83,var84,var85);
    SurfaceControl var9 = this.mSurfaceControl;
    boolean var11 = this.mStarted;
    boolean var14 = startAnimation(param2,param3,param4,param5,param6,1,param7,param8);
    SurfaceControl var10 = this.mSurfaceControl;
    boolean var12 = this.mStarted;
    this.mStarted = 1;
    int var14 = this.mCurRotation;
    int var15 = this.mOriginalRotation;
    int var17 = DisplayContent.deltaRotation(var14,var15);
    Context var52 = this.mContext;
    Animation var54 = AnimationUtils.loadAnimation(var52,param8);
    this.mRotateExitAnimation = var54;
    Context var55 = this.mContext;
    Animation var57 = AnimationUtils.loadAnimation(var55,param9);
    this.mRotateEnterAnimation = var57;
    Animation var63 = this.mRotateEnterAnimation;
    int var64 = this.mOriginalWidth;
    int var65 = this.mOriginalHeight;
    var63.initialize(param5,param6,var64,var65);
    Animation var67 = this.mRotateExitAnimation;
    int var68 = this.mOriginalWidth;
    int var69 = this.mOriginalHeight;
    var67.initialize(param5,param6,var68,var69);
    this.mAnimRunning = 0;
    this.mFinishAnimReady = 0;
    this.mFinishAnimStartTime = -1;
    Animation var72 = this.mRotateExitAnimation;
    var72.restrictDuration(param3);{var72.restrictDuration(param3);};
    Animation var74 = this.mRotateExitAnimation;
    var74.scaleCurrentDuration(param4);
    Animation var76 = this.mRotateEnterAnimation;
    var76.restrictDuration(param3);{var76.restrictDuration(param3);};
    Animation var78 = this.mRotateEnterAnimation;
    var78.scaleCurrentDuration(param4);
    DisplayContent var80 = this.mDisplayContent;
    Display var82 = var80.getDisplay();
    int var84 = var82.getLayerStack();
    BlackFrame var87 = this.mExitingBlackFrame;
    int var89 = this.mOriginalWidth;
    int var90 = this.mOriginalHeight;
    Matrix var91 = this.mFrameInitialMatrix;
    ScreenRotationAnimation.createRotationMatrix(var17,var89,var90,var91);
    boolean var93 = this.mForceDefaultOrientation;
    Rect var111 = this.mCurrentDisplayRect;
    Rect var112 = this.mOriginalDisplayRect;
    BlackFrame var119 = new BlackFrame();
    WindowManagerService var120 = this.mService;
    TransactionFactory var121 = var120.mTransactionFactory;
    DisplayContent var123 = this.mDisplayContent;
    boolean var124 = this.mForceDefaultOrientation;
    this.mExitingBlackFrame = var119;
    BlackFrame var129 = this.mExitingBlackFrame;
    Matrix var130 = this.mFrameInitialMatrix;
    var129.setMatrix(param2,var130);
    BlackFrame var139 = this.mEnteringBlackFrame;
    boolean 1;
}