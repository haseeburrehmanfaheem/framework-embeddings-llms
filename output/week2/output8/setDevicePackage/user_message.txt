// API: setDevicePackage
// Service: UsbService_4

public void setDevicePackage() {
    Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    UsbDevice var7 = (UsbDevice) var6;
    Context var8 = this.mContext;
    UserHandle var13 = UserHandle.of(param4);
    long var15 = Binder.clearCallingIdentity();
    UsbSettingsManager var16 = this.mSettingsManager;
    UsbProfileGroupSettingsManager var18 = var16.getSettingsForProfileGroup(var13);
    var18.setDevicePackage(var7,param3,var13);
    Binder.restoreCallingIdentity(var15);<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    UsbDevice var7 = (UsbDevice) var6;
    Context var8 = this.mContext;
    UserHandle var13 = UserHandle.of(param4);
    long var15 = Binder.clearCallingIdentity();
    UsbSettingsManager var16 = this.mSettingsManager;
    UsbProfileGroupSettingsManager var18 = var16.getSettingsForProfileGroup(var13);
    var18.setDevicePackage(var7,param3,var13);
    DeviceFilter var5 = new DeviceFilter();
    Object var7 = this.mLock;
    UsbProfileGroupSettingsManager$UserPackage var10 = new UsbProfileGroupSettingsManager$UserPackage();
    HashMap var12 = this.mDevicePreferenceMap;
    Object var14 = var12.get(var5);
    boolean var16 = var10.equals(var14);
    3 = instanceof 2 <Application,Lcom/android/server/usb/UsbProfileGroupSettingsManager$UserPackage>;
    UsbProfileGroupSettingsManager$UserPackage var5 = (UsbProfileGroupSettingsManager$UserPackage) param2;
    UserHandle var6 = this.user;
    UserHandle var7 = var5.user;
    boolean var9 = var6.equals(var7);
    boolean var15<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    UsbDevice var7 = (UsbDevice) var6;
    Context var8 = this.mContext;
    UserHandle var13 = UserHandle.of(param4);
    long var15 = Binder.clearCallingIdentity();
    UsbSettingsManager var16 = this.mSettingsManager;
    UsbProfileGroupSettingsManager var18 = var16.getSettingsForProfileGroup(var13);
    UserManager var3 = this.mUserManager;
    int var5 = getIdentifier();
    UserInfo var7 = var3.getProfileParent(var5);
    UserHandle var10 = var7.getUserHandle();
    SparseArray var14 = this.mSettingsByProfileGroup;
    SparseArray var15 = this.mSettingsByProfileGroup;
    int var17 = var11.getIdentifier();
    Object var19 = var15.get(var17);
    UsbProfileGroupSettingsManager var20 = (UsbProfileGroupSettingsManager) var19;
    UsbProfileGroupSettingsManager var21 = new UsbProfileGroupSettingsManager();
    Context var22 = this.mContext;
    UsbHandlerManager var23 = this.mUsbHandlerManager;
    SparseArray var25 = this.mSettingsByProfileGroup;
    int var27 = var11.getIdentifier();
    var25.put(var27,var21);<PATH_SEP>Object var6 = Preconditions.checkNotNull(param2);{Object var6 = Preconditions.checkNotNull(param2);};
    UsbDevice var7 = (UsbDevice) var6;
    Context var8 = this.mContext;
    UserHandle var13 = UserHandle.of(param4);
    long var15 = Binder.clearCallingIdentity();
    UsbSettingsManager var16 = this.mSettingsManager;
    UsbProfileGroupSettingsManager var18 = var16.getSettingsForProfileGroup(var13);
    var18.setDevicePackage(var7,param3,var13);
    DeviceFilter var5 = new DeviceFilter();
    Object var7 = this.mLock;
    HashMap var21 = this.mDevicePreferenceMap;
    Object var23 = var21.remove(var5);
    scheduleWriteSettingsLocked();
    boolean var2 = this.mIsWriteSettingsScheduled;
    this.mIsWriteSettingsScheduled = 1;
    -$$Lambda$UsbProfileGroupSettingsManager$_G1PjxMa22pAIRMzYCwyomX8uhk var5 = new -$$Lambda$UsbProfileGroupSettingsManager$_G1PjxMa22pAIRMzYCwyomX8uhk();
    AsyncTask.execute(var5);
}