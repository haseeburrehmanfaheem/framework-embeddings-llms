// API: registerGnssStatusCallback
// Service: LocationManagerService_3

public void registerGnssStatusCallback() {
    GnssStatusListenerHelper var4 = this.mGnssStatusProvider;
    ArrayMap var5 = this.mGnssStatusListeners;
    -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0 var6 = new -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0();
    boolean var10 = addGnssDataListener(param2,param3,GnssStatusListener,var4,var5,var6);
    CallerIdentity var11 = new CallerIdentity();
    int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    LocationManagerService$LinkedListener var17 = new LocationManagerService$LinkedListener();
    IBinder var20 = asBinder();
    Object var21 = this.mLock;
    boolean var23 = linkToListenerDeathNotificationLocked(var20,var17);
    Object var25 = put(var20,var17);
    long var27 = Binder.clearCallingIdentity();
    GnssMeasurementsProvider var28 = this.mGnssMeasurementsProvider;
    GnssMeasurementsProvider var32 = this.mGnssMeasurementsProvider;
    ActivityManager var38 = this.mActivityManager;
    int var40 = var38.getPackageImportance(param3);
    boolean var66 = isThrottlingExemptLocked(var11);
    ActivityManager var67 = this.mActivityManager;
    int var69 = var67.getPackageImportance(param3);
    boolean var71 = LocationManagerService.isImportanceForeground(var69);{boolean var71 = LocationManagerService.isImportanceForeground(var69);};
    addListener(param2,var11);
    Binder.restoreCallingIdentity(var27);
    boolean 1<PATH_SEP>GnssStatusListenerHelper var4 = this.mGnssStatusProvider;
    ArrayMap var5 = this.mGnssStatusListeners;
    -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0 var6 = new -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0();
    boolean var10 = addGnssDataListener(param2,param3,GnssStatusListener,var4,var5,var6);
    CallerIdentity var11 = new CallerIdentity();
    int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    LocationManagerService$LinkedListener var17 = new LocationManagerService$LinkedListener();
    IBinder var20 = asBinder();
    Object var21 = this.mLock;
    boolean var23 = linkToListenerDeathNotificationLocked(var20,var17);
    Object var25 = put(var20,var17);
    long var27 = Binder.clearCallingIdentity();
    GnssMeasurementsProvider var28 = this.mGnssMeasurementsProvider;
    GnssStatusListenerHelper var29 = this.mGnssStatusProvider;
    GnssMeasurementsProvider var32 = this.mGnssMeasurementsProvider;
    ActivityManager var38 = this.mActivityManager;
    int var40 = var38.getPackageImportance(param3);
    boolean var66 = isThrottlingExemptLocked(var11);
    addListener(param2,var11);
    Binder.restoreCallingIdentity(var27);
    boolean 1<PATH_SEP>GnssStatusListenerHelper var4 = this.mGnssStatusProvider;
    ArrayMap var5 = this.mGnssStatusListeners;
    -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0 var6 = new -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0();
    boolean var10 = addGnssDataListener(param2,param3,GnssStatusListener,var4,var5,var6);
    CallerIdentity var11 = new CallerIdentity();
    int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    LocationManagerService$LinkedListener var17 = new LocationManagerService$LinkedListener();
    IBinder var20 = asBinder();
    Object var21 = this.mLock;
    boolean var23 = linkToListenerDeathNotificationLocked(var20,var17);
    Object var25 = put(var20,var17);
    long var27 = Binder.clearCallingIdentity();
    GnssMeasurementsProvider var28 = this.mGnssMeasurementsProvider;
    GnssStatusListenerHelper var29 = this.mGnssStatusProvider;
    GnssMeasurementsProvider var32 = this.mGnssMeasurementsProvider;
    ActivityManager var38 = this.mActivityManager;
    int var40 = var38.getPackageImportance(param3);
    boolean var66 = isThrottlingExemptLocked(var11);
    ActivityManager var67 = this.mActivityManager;
    int var69 = var67.getPackageImportance(param3);
    boolean var71 = LocationManagerService.isImportanceForeground(var69);{boolean var71 = LocationManagerService.isImportanceForeground(var69);};
    Binder.restoreCallingIdentity(var27);
    boolean 1<PATH_SEP>GnssStatusListenerHelper var4 = this.mGnssStatusProvider;
    ArrayMap var5 = this.mGnssStatusListeners;
    -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0 var6 = new -$$Lambda$1kw1pGRY14l4iRI8vioJeswbbZ0();
    boolean var10 = addGnssDataListener(param2,param3,GnssStatusListener,var4,var5,var6);
    CallerIdentity var11 = new CallerIdentity();
    int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    LocationManagerService$LinkedListener var17 = new LocationManagerService$LinkedListener();
    IBinder var20 = asBinder();
    Object var21 = this.mLock;
    boolean var23 = linkToListenerDeathNotificationLocked(var20,var17);
    Object var25 = put(var20,var17);
    long var27 = Binder.clearCallingIdentity();
    GnssMeasurementsProvider var28 = this.mGnssMeasurementsProvider;
    GnssStatusListenerHelper var29 = this.mGnssStatusProvider;
    GnssMeasurementsProvider var32 = this.mGnssMeasurementsProvider;
    ActivityManager var38 = this.mActivityManager;
    int var40 = var38.getPackageImportance(param3);
    boolean var66 = isThrottlingExemptLocked(var11);
    ActivityManager var67 = this.mActivityManager;
    int var69 = var67.getPackageImportance(param3);
    boolean var71 = LocationManagerService.isImportanceForeground(var69);{boolean var71 = LocationManagerService.isImportanceForeground(var69);};
    addListener(param2,var11);
}