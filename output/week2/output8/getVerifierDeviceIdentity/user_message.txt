// API: getVerifierDeviceIdentity
// Service: PackageManagerService_1

public void getVerifierDeviceIdentity() {
    Context var2 = this.mContext;
    ArrayMap var6 = this.mPackages;
    Settings var7 = this.mSettings;
    VerifierDeviceIdentity var9 = var7.getVerifierDeviceIdentityLPw();
    VerifierDeviceIdentity var2 = this.mVerifierDeviceIdentity;
    VerifierDeviceIdentity var5 = VerifierDeviceIdentity.generate();
    this.mVerifierDeviceIdentity = var5;
    writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Boolean var51 = Boolean.valueOf(1);
    var42.startDocument(0,var51);
    var42.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var56 = var42.startTag(0,packages);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Context var2 = this.mContext;
    ArrayMap var6 = this.mPackages;
    Settings var7 = this.mSettings;
    VerifierDeviceIdentity var9 = var7.getVerifierDeviceIdentityLPw();
    VerifierDeviceIdentity var2 = this.mVerifierDeviceIdentity;
    VerifierDeviceIdentity var5 = VerifierDeviceIdentity.generate();
    this.mVerifierDeviceIdentity = var5;
    writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Boolean var51 = Boolean.valueOf(1);
    var42.startDocument(0,var51);
    var42.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var56 = var42.startTag(0,packages);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Context var2 = this.mContext;
    ArrayMap var6 = this.mPackages;
    Settings var7 = this.mSettings;
    VerifierDeviceIdentity var9 = var7.getVerifierDeviceIdentityLPw();
    VerifierDeviceIdentity var2 = this.mVerifierDeviceIdentity;
    VerifierDeviceIdentity var5 = VerifierDeviceIdentity.generate();
    this.mVerifierDeviceIdentity = var5;
    writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Boolean var51 = Boolean.valueOf(1);
    var42.startDocument(0,var51);
    var42.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var56 = var42.startTag(0,packages);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;<PATH_SEP>Context var2 = this.mContext;
    ArrayMap var6 = this.mPackages;
    Settings var7 = this.mSettings;
    VerifierDeviceIdentity var9 = var7.getVerifierDeviceIdentityLPw();
    VerifierDeviceIdentity var2 = this.mVerifierDeviceIdentity;
    VerifierDeviceIdentity var5 = VerifierDeviceIdentity.generate();
    this.mVerifierDeviceIdentity = var5;
    writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Charset var8 = Charset.forName(param3);
    CharsetEncoder var10 = var8.newEncoder();
    CodingErrorAction var11 = REPLACE;
    CharsetEncoder var13 = var10.onMalformedInput(var11);
    CodingErrorAction var14 = REPLACE;
    CharsetEncoder var16 = var13.onUnmappableCharacter(var14);
    this.mCharset = var16;
    this.mOutputStream = param2;
}