// API: removeTestProvider
// Service: LocationManagerService_3

public void removeTestProvider() {
    boolean var5 = canCallerAccessMockLocation(param3);{boolean var5 = canCallerAccessMockLocation(param3);};
    Object var7 = this.mLock;
    long var9 = Binder.clearCallingIdentity();
    LocationManagerService$LocationProvider var11 = getLocationProviderLocked(param2);
    boolean var13 = var11.isMock();
    removeProviderLocked(var11);
    ArrayList var3 = this.mProviders;
    boolean var5 = var3.remove(param2);
    onUseableChangedLocked(0);
    boolean var4 = isUseableIgnoringAllowedLocked();
    boolean var6 = this.mAllowed;
    boolean var9 = this.mIsManagedBySettings;
    LocationManagerService var11 = this.this$0;
    Context var13 = LocationManagerService.access$1700(var11);{Context var13 = LocationManagerService.access$1700(var11);};
    ContentResolver var15 = var13.getContentResolver();
    String var21 = this.mName;
    LocationManagerService var26 = this.this$0;
    int var28 = LocationManagerService.access$1800(var26);{int var28 = LocationManagerService.access$1800(var26);};
    boolean var30 = Settings$Secure.putStringForUser(var15,location_providers_allowed,var25,var28);
    Intent var56 = new Intent();
    String var59 = this.mName;
    Intent var62 = var56.putExtra(android.location.extra.PROVIDER_NAME,var59);
    LocationManagerService var63 = this.this$0;
    Context var65 = LocationManagerService.access$1700(var63);{Context var65 = LocationManagerService.access$1700(var63);};
    UserHandle var66 = ALL;
    var65.sendBroadcastAsUser(var56,var66);
    boolean var71 = this.mUseable;
    this.mUseable = var8;
}