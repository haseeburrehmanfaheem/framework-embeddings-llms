// API: setHarmfulAppWarning
// Service: PackageManagerService_4

public void setHarmfulAppWarning() {
    int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    PermissionManagerServiceInternal var9 = this.mPermissionManager;
    ArrayMap var24 = this.mPackages;
    Settings var25 = this.mSettings;
    var25.setHarmfulAppWarningLPw(param2,param3,param4);
    scheduleWritePackageRestrictionsLocked(param4);
    [I var6 = new [I(1);
    arraystore 6[3] = 2;
    11 = arraylength 10;
    12 = arrayload 10[34];
    UserManagerService var13 = sUserManager;
    boolean var15 = var13.exists(var12);
    ArraySet var16 = this.mDirtyUsers;
    Integer var18 = Integer.valueOf(var12);
    boolean var20 = var16.add(var18);<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    PermissionManagerServiceInternal var9 = this.mPermissionManager;
    ArrayMap var24 = this.mPackages;
    Settings var25 = this.mSettings;
    var25.setHarmfulAppWarningLPw(param2,param3,param4);
    scheduleWritePackageRestrictionsLocked(param4);
    [I var6 = new [I(1);
    arraystore 6[3] = 2;
    11 = arraylength 10;
    12 = arrayload 10[34];
    UserManagerService var13 = sUserManager;
    boolean var15 = var13.exists(var12);
    ArraySet var16 = this.mDirtyUsers;
    Integer var18 = Integer.valueOf(var12);
    boolean var20 = var16.add(var18);
    PackageManagerService$PackageHandler var21 = this.mHandler;
    boolean var24 = var21.hasMessages(14);
    PackageManagerService$PackageHandler var25 = this.mHandler;
    boolean var28 = var25.sendEmptyMessageDelayed(14,10000);<PATH_SEP>int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    PermissionManagerServiceInternal var9 = this.mPermissionManager;
    ArrayMap var24 = this.mPackages;
    Settings var25 = this.mSettings;
    var25.setHarmfulAppWarningLPw(param2,param3,param4);
    scheduleWritePackageRestrictionsLocked(param4);
    UserManagerService var7 = sUserManager;
    [I var9 = var7.getUserIds();
    Object var2 = this.mUsersLock;
    [I var3 = this.mUserIds;
    int var6 = Binder.getCallingUid();
    int var8 = UserHandle.getAppId(var6);
    PermissionManagerServiceInternal var9 = this.mPermissionManager;
    ArrayMap var24 = this.mPackages;
    Settings var25 = this.mSettings;
    var25.setHarmfulAppWarningLPw(param2,param3,param4);
    scheduleWritePackageRestrictionsLocked(param4);
}