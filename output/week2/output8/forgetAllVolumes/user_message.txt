// API: forgetAllVolumes
// Service: StorageManagerService_1

public void forgetAllVolumes() {
    Object var4 = this.mLock;
    ArrayMap var6 = this.mRecords;
    int var8 = var6.size();
    ArrayMap var34 = this.mRecords;
    var34.clear();
    String var36 = UUID_PRIVATE_INTERNAL;
    String var37 = this.mPrimaryStorageUuid;
    boolean var39 = Objects.equals(var36,var37);
    String var41 = getDefaultPrimaryStorageUuid();
    this.mPrimaryStorageUuid = var41;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    boolean var10 = booleanValue();
    append(var21);
    this.mLineStart = 1;<PATH_SEP>Object var4 = this.mLock;
    ArrayMap var6 = this.mRecords;
    int var8 = var6.size();
    ArrayMap var34 = this.mRecords;
    var34.clear();
    String var36 = UUID_PRIVATE_INTERNAL;
    String var37 = this.mPrimaryStorageUuid;
    boolean var39 = Objects.equals(var36,var37);
    String var41 = getDefaultPrimaryStorageUuid();
    this.mPrimaryStorageUuid = var41;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;<PATH_SEP>Object var4 = this.mLock;
    ArrayMap var6 = this.mRecords;
    int var8 = var6.size();
    ArrayMap var34 = this.mRecords;
    var34.clear();
    String var36 = UUID_PRIVATE_INTERNAL;
    String var37 = this.mPrimaryStorageUuid;
    boolean var39 = Objects.equals(var36,var37);
    String var41 = getDefaultPrimaryStorageUuid();
    this.mPrimaryStorageUuid = var41;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    boolean var10 = booleanValue();
    append(var21);<PATH_SEP>Object var4 = this.mLock;
    ArrayMap var6 = this.mRecords;
    int var8 = var6.size();
    ArrayMap var34 = this.mRecords;
    var34.clear();
    String var36 = UUID_PRIVATE_INTERNAL;
    String var37 = this.mPrimaryStorageUuid;
    boolean var39 = Objects.equals(var36,var37);
    String var41 = getDefaultPrimaryStorageUuid();
    this.mPrimaryStorageUuid = var41;
    writeSettingsLocked();
    AtomicFile var4 = this.mSettingsFile;
    FileOutputStream var6 = var4.startWrite();
    FastXmlSerializer var7 = new FastXmlSerializer();
    Charset var9 = UTF_8;
    String var11 = var9.name();
    var7.setOutput(var6,var11);
    Boolean var15 = Boolean.valueOf(1);
    var7.startDocument(0,var15);
    XmlSerializer var18 = var7.startTag(0,volumes);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
    append(58);
    append(param3);
    this.mInTag = 1;
}