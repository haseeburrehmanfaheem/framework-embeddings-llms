// API: getAvailableRollbacks
// Service: RollbackManagerServiceImpl_1

public void getAvailableRollbacks() {
    Thread var5 = Thread.currentThread();
    HandlerThread var6 = this.mHandlerThread;
    boolean var8 = var5.equals(var6);
    LinkedBlockingQueue var17 = new LinkedBlockingQueue();
    Handler var20 = getHandler();
    -$$Lambda$RollbackManagerServiceImpl$oLwS8G_DUyKmAeNKhLfFpV3VJTA var21 = new -$$Lambda$RollbackManagerServiceImpl$oLwS8G_DUyKmAeNKhLfFpV3VJTA();
    boolean var24 = var20.post(var21);
    Object var26 = var17.take();
    Object var35 = this.mLock;
    ensureRollbackDataLoadedLocked();{ensureRollbackDataLoadedLocked();};
    ArrayList var37 = new ArrayList();
    List var39 = this.mRollbacks;
    int var41 = var39.size();
    ParceledListSlice var59 = new ParceledListSlice();
    Landroid/content/pm/ParceledListSlice var59<PATH_SEP>Thread var5 = Thread.currentThread();
    HandlerThread var6 = this.mHandlerThread;
    boolean var8 = var5.equals(var6);
    LinkedBlockingQueue var17 = new LinkedBlockingQueue();
    Handler var20 = getHandler();
    -$$Lambda$RollbackManagerServiceImpl$oLwS8G_DUyKmAeNKhLfFpV3VJTA var21 = new -$$Lambda$RollbackManagerServiceImpl$oLwS8G_DUyKmAeNKhLfFpV3VJTA();
    boolean var24 = var20.post(var21);<PATH_SEP>Thread var5 = Thread.currentThread();
    HandlerThread var6 = this.mHandlerThread;
    boolean var8 = var5.equals(var6);
    LinkedBlockingQueue var17 = new LinkedBlockingQueue();
    Handler var20 = getHandler();
    HandlerThread var2 = this.mHandlerThread;
    Handler var4 = var2.getThreadHandler();
    Landroid/os/Handler var4<PATH_SEP>Thread var5 = Thread.currentThread();
    HandlerThread var6 = this.mHandlerThread;
    boolean var8 = var5.equals(var6);
    LinkedBlockingQueue var17 = new LinkedBlockingQueue();
    Handler var20 = getHandler();
    -$$Lambda$RollbackManagerServiceImpl$oLwS8G_DUyKmAeNKhLfFpV3VJTA var21 = new -$$Lambda$RollbackManagerServiceImpl$oLwS8G_DUyKmAeNKhLfFpV3VJTA();
    boolean var24 = var20.post(var21);
    Object var26 = var17.take();
    Object var35 = this.mLock;
    ensureRollbackDataLoadedLocked();{ensureRollbackDataLoadedLocked();};
    ArrayList var37 = new ArrayList();
    List var39 = this.mRollbacks;
    int var41 = var39.size();
    List var42 = this.mRollbacks;
    Object var44 = var42.get(var56);
    RollbackData var45 = (RollbackData) var44;
    int var46 = var45.state;
    RollbackInfo var48 = var45.info;
    boolean var50 = var37.add(var48);
}