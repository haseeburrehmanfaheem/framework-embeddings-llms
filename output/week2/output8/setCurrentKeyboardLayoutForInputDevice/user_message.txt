// API: setCurrentKeyboardLayoutForInputDevice
// Service: InputManagerService_3

public void setCurrentKeyboardLayoutForInputDevice() {
    String var16 = getLayoutDescriptor(param2);
    PersistentDataStore var17 = this.mDataStore;
    PersistentDataStore var18 = this.mDataStore;
    boolean var20 = var18.setCurrentKeyboardLayout(var16,param3);
    PersistentDataStore$InputDeviceState var6 = getInputDeviceState(param2,1);
    loadIfNeeded();
    HashMap var5 = this.mInputDevices;
    Object var7 = var5.get(param2);
    PersistentDataStore$InputDeviceState var8 = (PersistentDataStore$InputDeviceState) var7;
    PersistentDataStore$InputDeviceState var10 = new PersistentDataStore$InputDeviceState();
    HashMap var12 = this.mInputDevices;
    Object var14 = var12.put(param2,var10);
    setDirty();<PATH_SEP>String var16 = getLayoutDescriptor(param2);
    PersistentDataStore var17 = this.mDataStore;
    PersistentDataStore var18 = this.mDataStore;
    boolean var20 = var18.setCurrentKeyboardLayout(var16,param3);
    InputManagerService$InputManagerHandler var21 = this.mHandler;
    boolean var24 = var21.sendEmptyMessage(3);
    PersistentDataStore var34 = this.mDataStore;
    var34.saveIfNeeded();
    boolean var2 = this.mDirty;
    save();
    AtomicFile var2 = this.mAtomicFile;
    FileOutputStream var4 = var2.startWrite();
    FastXmlSerializer var6 = new FastXmlSerializer();
    BufferedOutputStream var8 = new BufferedOutputStream();
    Charset var10 = UTF_8;
    String var12 = var10.name();
    var6.setOutput(var8,var12);
    saveToXml(var6);
    Boolean var5 = Boolean.valueOf(1);
    startDocument(0,var5);
    setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);<PATH_SEP>String var16 = getLayoutDescriptor(param2);
    PersistentDataStore var17 = this.mDataStore;
    PersistentDataStore var18 = this.mDataStore;
    boolean var20 = var18.setCurrentKeyboardLayout(var16,param3);
    InputManagerService$InputManagerHandler var21 = this.mHandler;
    boolean var24 = var21.sendEmptyMessage(3);
    PersistentDataStore var34 = this.mDataStore;
    var34.saveIfNeeded();
    boolean var2 = this.mDirty;
    save();
    AtomicFile var2 = this.mAtomicFile;
    FileOutputStream var4 = var2.startWrite();
    FastXmlSerializer var6 = new FastXmlSerializer();
    BufferedOutputStream var8 = new BufferedOutputStream();
    Charset var10 = UTF_8;
    String var12 = var10.name();
    var6.setOutput(var8,var12);
    saveToXml(var6);
    Boolean var5 = Boolean.valueOf(1);
    startDocument(0,var5);
    setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var12 = startTag(0,input-manager-state);
    XmlSerializer var15 = startTag(0,input-devices);
    HashMap var16 = this.mInputDevices;
    Set var18 = var16.entrySet();
    Iterator var20 = var18.iterator();
    Object var24 = var20.next();
    Map$Entry var25 = (Map$Entry) var24;
    Object var27 = var25.getKey();
    String var28 = (String) var27;
    Object var30 = var25.getValue();
    PersistentDataStore$InputDeviceState var31 = (PersistentDataStore$InputDeviceState) var30;
    XmlSerializer var34 = startTag(0,input-device);
    XmlSerializer var37 = attribute(0,descriptor,var28);
    var31.saveToXml(param2);<PATH_SEP>String var16 = getLayoutDescriptor(param2);
    PersistentDataStore var17 = this.mDataStore;
    PersistentDataStore var18 = this.mDataStore;
    boolean var20 = var18.setCurrentKeyboardLayout(var16,param3);
    InputManagerService$InputManagerHandler var21 = this.mHandler;
    boolean var24 = var21.sendEmptyMessage(3);
    PersistentDataStore var34 = this.mDataStore;
    var34.saveIfNeeded();
    boolean var2 = this.mDirty;
    save();
    AtomicFile var2 = this.mAtomicFile;
    FileOutputStream var4 = var2.startWrite();
    FastXmlSerializer var6 = new FastXmlSerializer();
    BufferedOutputStream var8 = new BufferedOutputStream();
    Charset var10 = UTF_8;
    String var12 = var10.name();
    var6.setOutput(var8,var12);
    saveToXml(var6);
    Boolean var5 = Boolean.valueOf(1);
    startDocument(0,var5);
    setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var12 = startTag(0,input-manager-state);
    XmlSerializer var15 = startTag(0,input-devices);
    HashMap var16 = this.mInputDevices;
    Set var18 = var16.entrySet();
    Iterator var20 = var18.iterator();
    Object var24 = var20.next();
    Map$Entry var25 = (Map$Entry) var24;
    Object var27 = var25.getKey();
    String var28 = (String) var27;
    Object var30 = var25.getValue();
    PersistentDataStore$InputDeviceState var31 = (PersistentDataStore$InputDeviceState) var30;
    XmlSerializer var34 = startTag(0,input-device);
}