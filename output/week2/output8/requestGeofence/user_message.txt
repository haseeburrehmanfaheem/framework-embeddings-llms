// API: requestGeofence
// Service: LocationManagerService_5

public void requestGeofence() {
    LocationRequest var7 = DEFAULT_LOCATION_REQUEST;
    int var10 = getCallerAllowedResolutionLevel();
    checkResolutionLevelIsSufficientForGeofenceUse(var10);{checkResolutionLevelIsSufficientForGeofenceUse(var10);};
    Object var24 = this.mLock;
    String var26 = var8.getProvider();
    checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);{checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);};
    Context var33 = this.mContext;
    LocationRequest var40 = createSanitizedRequest(var8,var10,var38);
    LocationRequest var5 = new LocationRequest();
    LocationRequest var9 = var5.setLowPowerMode(0);
    int var13 = var5.getQuality();
    long var27 = var5.getInterval();
    var29 = var27 lt 600000;
    LocationRequest var31 = var5.setInterval(600000);
    long var35 = var5.getFastestInterval();
    var36 = var35 lt 600000;
    LocationRequest var38 = var5.setFastestInterval(600000);
    LocationRequest.checkInterval(param2);{LocationRequest.checkInterval(param2);};
    this.mExplicitFastestInterval = 1;<PATH_SEP>LocationRequest var7 = DEFAULT_LOCATION_REQUEST;
    int var10 = getCallerAllowedResolutionLevel();
    checkResolutionLevelIsSufficientForGeofenceUse(var10);{checkResolutionLevelIsSufficientForGeofenceUse(var10);};
    Object var24 = this.mLock;
    String var26 = var8.getProvider();
    checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);{checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);};
    Context var33 = this.mContext;
    LocationRequest var40 = createSanitizedRequest(var8,var10,var38);
    LocationRequest var5 = new LocationRequest();
    LocationRequest var9 = var5.setLowPowerMode(0);
    int var13 = var5.getQuality();
    long var27 = var5.getInterval();
    var29 = var27 lt 600000;
    LocationRequest var31 = var5.setInterval(600000);
    long var35 = var5.getFastestInterval();
    long var2 = this.mFastestInterval;
    long var2<PATH_SEP>LocationRequest var7 = DEFAULT_LOCATION_REQUEST;
    int var10 = getCallerAllowedResolutionLevel();
    checkResolutionLevelIsSufficientForGeofenceUse(var10);{checkResolutionLevelIsSufficientForGeofenceUse(var10);};
    Object var24 = this.mLock;
    String var26 = var8.getProvider();
    checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);{checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);};
    Context var33 = this.mContext;
    LocationRequest var40 = createSanitizedRequest(var8,var10,var38);
    LocationRequest var5 = new LocationRequest();
    LocationRequest var9 = var5.setLowPowerMode(0);
    int var13 = var5.getQuality();
    long var27 = var5.getInterval();
    var29 = var27 lt 600000;
    long var35 = var5.getFastestInterval();
    var36 = var35 lt 600000;
    LocationRequest var38 = var5.setFastestInterval(600000);
    long var43 = var5.getFastestInterval();
    long var45 = var5.getInterval();
    var46 = var43 lt var45;
    long var48 = getInterval();
    LocationRequest var50 = var5.setFastestInterval(var48);<PATH_SEP>LocationRequest var7 = DEFAULT_LOCATION_REQUEST;
    int var10 = getCallerAllowedResolutionLevel();
    checkResolutionLevelIsSufficientForGeofenceUse(var10);{checkResolutionLevelIsSufficientForGeofenceUse(var10);};
    Object var24 = this.mLock;
    String var26 = var8.getProvider();
    checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);{checkResolutionLevelIsSufficientForProviderUseLocked(var10,var26);};
    Context var33 = this.mContext;
    LocationRequest var40 = createSanitizedRequest(var8,var10,var38);
    LocationRequest var5 = new LocationRequest();
    LocationRequest var9 = var5.setLowPowerMode(0);
    int var13 = var5.getQuality();
    long var27 = var5.getInterval();
    var29 = var27 lt 600000;
    LocationRequest var31 = var5.setInterval(600000);
    long var35 = var5.getFastestInterval();
    var36 = var35 lt 600000;
    LocationRequest var38 = var5.setFastestInterval(600000);
    LocationRequest.checkInterval(param2);{LocationRequest.checkInterval(param2);};
    this.mExplicitFastestInterval = 1;
    this.mFastestInterval = param2;
}