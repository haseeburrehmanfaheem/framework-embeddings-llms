// API: setRestrictBackground
// Service: NetworkPolicyManagerService_2

public void setRestrictBackground() {
    Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    boolean var34 = var28.hasCycle();
    Iterator var36 = NetworkPolicyManager.cycleIterator(var28);
    Object var38 = var36.next();
    Pair var39 = (Pair) var38;
    Object var40 = var39.first;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    Object var46 = var39.second;
    ZonedDateTime var47 = (ZonedDateTime) var46;
    Instant var49 = var47.toInstant();
    long var51 = var49.toEpochMilli();
    NetworkTemplate var52 = var28.template;
    long var54 = getTotalBytes(var52,var45,var51);
    CarrierConfigManager var55 = this.mCarrierConfigManager;
    PersistableBundle var57 = var55.getConfigForSubId(var31);
    boolean var59 = CarrierConfigManager.isConfigForIdentifiedCarrier(var57);
    boolean var62 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_warning_notification_bool,1);
    boolean var65 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_limit_notification_bool,1);
    boolean var68 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_rapid_notification_bool,1);
    boolean var70 = var28.isOverWarning(var54);
    boolean var72 = var28.isOverLimit(var54);
    long var73 = var28.lastWarningSnooze;
    var74 = var73 lt var45;
    enqueueNotification(var28,34,var54,0);
    NetworkPolicyManagerService$NotificationId var6 = new NetworkPolicyManagerService$NotificationId();
    Notification$Builder var8 = new Notification$Builder();
    Context var9 = this.mContext;
    String var10 = NETWORK_ALERTS;
    Notification$Builder var14 = var8.setOnlyAlertOnce(1);
    Notification$Builder var17 = var8.setWhen(0);
    Context var18 = this.mContext;
    int var21 = var18.getColor(17170460);
    Notification$Builder var23 = var8.setColor(var21);
    Context var24 = this.mContext;
    Resources var26 = var24.getResources();
    28: switch 3 [34->268,35->174,36->63] default: 62;
    CharSequence var80 = var26.getText(17039814);
    Object var82 = new Object(1);
    Context var83 = this.mContext;
    String var85 = Formatter.formatFileSize(var83,param4,8);
    arraystore 82[28] = 85;
    String var87 = var26.getString(17039813,var82);
    Notification$Builder var89 = var8.setSmallIcon(17301624);
    NetworkTemplate var90 = param2.template;
    Intent var92 = NetworkPolicyManagerService.buildSnoozeWarningIntent(var90);
    Context var93 = this.mContext;
    PendingIntent var95 = PendingIntent.getBroadcast(var93,0,var92,134217728);
    Notification$Builder var97 = var8.setDeleteIntent(var95);
    NetworkTemplate var98 = param2.template;
    Intent var100 = NetworkPolicyManagerService.buildViewDataUsageIntent(var26,var98);
    Context var108 = this.mContext;
    UserHandle var109 = CURRENT;
    PendingIntent var111 = PendingIntent.getActivityAsUser(var108,0,var100,134217728,0,var109);
    Notification$Builder var113 = var8.setContentIntent(var111);
    Notification$Builder var209 = var8.setTicker(var197);
    Notification$Builder var211 = var8.setContentTitle(var197);
    Notification$Builder var213 = var8.setContentText(var196);
    Notification$BigTextStyle var214 = new Notification$BigTextStyle();
    Notification$BigTextStyle var217 = var214.bigText(var196);
    Notification$Builder var219 = var8.setStyle(var217);
    Context var220 = this.mContext;
    221 = load_metadata: <Application,Landroid/app/NotificationManager>;
    <Primordial,Ljava/lang/Class>;
    Object var223 = var220.getSystemService(var221);
    NotificationManager var224 = (NotificationManager) var223;
    String var226 = var6.getTag();
    int var228 = var6.getId();
    Notification var230 = var8.build();
    UserHandle var231 = ALL;
    var224.notifyAsUser(var226,var228,var230,var231);
    ArraySet var233 = this.mActiveNotifs;
    boolean var235 = var233.add(var6);<PATH_SEP>Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    boolean var34 = var28.hasCycle();
    Iterator var36 = NetworkPolicyManager.cycleIterator(var28);
    Object var38 = var36.next();
    Pair var39 = (Pair) var38;
    Object var40 = var39.first;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    Object var46 = var39.second;
    ZonedDateTime var47 = (ZonedDateTime) var46;
    Instant var49 = var47.toInstant();
    long var51 = var49.toEpochMilli();
    NetworkTemplate var52 = var28.template;
    long var54 = getTotalBytes(var52,var45,var51);
    CarrierConfigManager var55 = this.mCarrierConfigManager;
    PersistableBundle var57 = var55.getConfigForSubId(var31);
    boolean var59 = CarrierConfigManager.isConfigForIdentifiedCarrier(var57);
    boolean var62 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_warning_notification_bool,1);
    boolean var65 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_limit_notification_bool,1);
    boolean var68 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_rapid_notification_bool,1);
    boolean var70 = var28.isOverWarning(var54);
    boolean var72 = var28.isOverLimit(var54);
    long var73 = var28.lastWarningSnooze;
    var74 = var73 lt var45;
    enqueueNotification(var28,34,var54,0);
    NetworkPolicyManagerService$NotificationId var6 = new NetworkPolicyManagerService$NotificationId();
    Notification$Builder var8 = new Notification$Builder();
    Context var9 = this.mContext;
    String var10 = NETWORK_ALERTS;
    Notification$Builder var14 = var8.setOnlyAlertOnce(1);
    Notification$Builder var17 = var8.setWhen(0);
    Context var18 = this.mContext;
    int var21 = var18.getColor(17170460);
    Notification$Builder var23 = var8.setColor(var21);
    Context var24 = this.mContext;
    Resources var26 = var24.getResources();
    28: switch 3 [34->268,35->174,36->63] default: 62;
    CharSequence var80 = var26.getText(17039814);
    Object var82 = new Object(1);
    Context var83 = this.mContext;
    String var85 = Formatter.formatFileSize(var83,param4,8);
    arraystore 82[28] = 85;
    String var87 = var26.getString(17039813,var82);
    Notification$Builder var89 = var8.setSmallIcon(17301624);
    NetworkTemplate var90 = param2.template;
    Intent var92 = NetworkPolicyManagerService.buildSnoozeWarningIntent(var90);
    Context var93 = this.mContext;
    PendingIntent var95 = PendingIntent.getBroadcast(var93,0,var92,134217728);
    Notification$Builder var97 = var8.setDeleteIntent(var95);
    NetworkTemplate var98 = param2.template;
    Intent var100 = NetworkPolicyManagerService.buildViewDataUsageIntent(var26,var98);
    Context var108 = this.mContext;
    UserHandle var109 = CURRENT;
    PendingIntent var111 = PendingIntent.getActivityAsUser(var108,0,var100,134217728,0,var109);
    Notification$Builder var113 = var8.setContentIntent(var111);
    Notification$Builder var209 = var8.setTicker(var197);
    Notification$Builder var211 = var8.setContentTitle(var197);
    Notification$Builder var213 = var8.setContentText(var196);
    Notification$BigTextStyle var214 = new Notification$BigTextStyle();
    Notification$BigTextStyle var217 = var214.bigText(var196);
    Notification$Builder var219 = var8.setStyle(var217);<PATH_SEP>Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    boolean var34 = var28.hasCycle();
    Iterator var36 = NetworkPolicyManager.cycleIterator(var28);
    Object var38 = var36.next();
    Pair var39 = (Pair) var38;
    Object var40 = var39.first;
    ZonedDateTime var41 = (ZonedDateTime) var40;
    Instant var43 = var41.toInstant();
    long var45 = var43.toEpochMilli();
    Object var46 = var39.second;
    ZonedDateTime var47 = (ZonedDateTime) var46;
    Instant var49 = var47.toInstant();
    long var51 = var49.toEpochMilli();
    NetworkTemplate var52 = var28.template;
    long var54 = getTotalBytes(var52,var45,var51);
    CarrierConfigManager var55 = this.mCarrierConfigManager;
    PersistableBundle var57 = var55.getConfigForSubId(var31);
    boolean var59 = CarrierConfigManager.isConfigForIdentifiedCarrier(var57);
    boolean var62 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_warning_notification_bool,1);
    boolean var65 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_limit_notification_bool,1);
    boolean var68 = NetworkPolicyManagerService.getBooleanDefeatingNullable(var57,data_rapid_notification_bool,1);
    boolean var70 = var28.isOverWarning(var54);
    boolean var72 = var28.isOverLimit(var54);
    long var73 = var28.lastWarningSnooze;
    var74 = var73 lt var45;
    enqueueNotification(var28,34,var54,0);
    NetworkPolicyManagerService$NotificationId var6 = new NetworkPolicyManagerService$NotificationId();
    Notification$Builder var8 = new Notification$Builder();
    Context var9 = this.mContext;
    String var10 = NETWORK_ALERTS;
    Notification$Builder var14 = var8.setOnlyAlertOnce(1);
    Notification$Builder var17 = var8.setWhen(0);
    Context var18 = this.mContext;
    int var21 = var18.getColor(17170460);
    Notification$Builder var23 = var8.setColor(var21);
    Context var24 = this.mContext;
    Resources var26 = var24.getResources();
    28: switch 3 [34->268,35->174,36->63] default: 62;
    NetworkTemplate var114 = param2.template;
    int var116 = var114.getMatchRule();
    CharSequence var122 = var26.getText(17039816);
    CharSequence var129 = var26.getText(17039804);
    Notification$Builder var131 = var8.setOngoing(1);
    Notification$Builder var134 = var8.setSmallIcon(17303511);
    NetworkTemplate var135 = param2.template;
    Intent var137 = NetworkPolicyManagerService.buildNetworkOverLimitIntent(var26,var135);
    Context var145 = this.mContext;
    UserHandle var146 = CURRENT;
    PendingIntent var148 = PendingIntent.getActivityAsUser(var145,0,var137,134217728,0,var146);
    Notification$Builder var150 = var8.setContentIntent(var148);
    Notification$Builder var209 = var8.setTicker(var197);
    Notification$Builder var211 = var8.setContentTitle(var197);
    Notification$Builder var213 = var8.setContentText(var196);
    Notification$BigTextStyle var214 = new Notification$BigTextStyle();
    Notification$BigTextStyle var217 = var214.bigText(var196);
    Notification$Builder var219 = var8.setStyle(var217);
    Context var220 = this.mContext;
    221 = load_metadata: <Application,Landroid/app/NotificationManager>;
    <Primordial,Ljava/lang/Class>;
    Object var223 = var220.getSystemService(var221);
    NotificationManager var224 = (NotificationManager) var223;
    String var226 = var6.getTag();
    int var228 = var6.getId();
    Notification var230 = var8.build();
    UserHandle var231 = ALL;
    var224.notifyAsUser(var226,var228,var230,var231);<PATH_SEP>Trace.traceBegin(2097152,setRestrictBackground);
    Context var6 = this.mContext;
    long var11 = Binder.clearCallingIdentity();
    Object var12 = this.mUidRulesFirstLock;
    setRestrictBackgroundUL(param2);
    Trace.traceBegin(2097152,setRestrictBackgroundUL);
    boolean var6 = this.mRestrictBackground;
    boolean var19 = this.mRestrictBackground;
    this.mRestrictBackground = param2;
    updateRulesForRestrictBackgroundUL();
    INetworkManagementService var21 = this.mNetworkManager;
    boolean var22 = this.mRestrictBackground;
    boolean var24 = var21.setDataSaverModeEnabled(var22);
    sendRestrictBackgroundChangedMsg();
    boolean var30 = this.mRestrictBackground;
    PowerSaveState var32 = this.mRestrictBackgroundPowerState;
    boolean var33 = var32.globalBatterySaverEnabled;
    this.mRestrictBackgroundChangedInBsm = 1;
    Object var36 = this.mNetworkPoliciesSecondLock;
    updateNotificationsNL();
    boolean var2 = LOGV;
    Trace.traceBegin(2097152,updateNotificationsNL);
    ArraySet var12 = new ArraySet();
    ArraySet var13 = this.mActiveNotifs;
    ArraySet var15 = this.mActiveNotifs;
    var15.clear();
    Clock var17 = this.mClock;
    long var19 = var17.millis();
    ArrayMap var20 = this.mNetworkPolicy;
    int var22 = var20.size();
    var24 = var22 sub 1;
    ArrayMap var25 = this.mNetworkPolicy;
    Object var27 = var25.valueAt(var186);
    NetworkPolicy var28 = (NetworkPolicy) var27;
    NetworkTemplate var29 = var28.template;
    int var31 = findRelevantSubIdNL(var29);
    SparseArray var4 = this.mSubIdToSubscriberId;
    int var6 = var4.size();
    SparseArray var7 = this.mSubIdToSubscriberId;
    int var9 = var7.keyAt(var21);
    SparseArray var10 = this.mSubIdToSubscriberId;
    Object var12 = var10.valueAt(var21);
    String var13 = (String) var12;
    NetworkIdentity var14 = new NetworkIdentity();
    boolean var18 = matches(var14);
    int var9;
}