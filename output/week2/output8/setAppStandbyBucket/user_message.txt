// API: setAppStandbyBucket
// Service: UsageStatsService$BinderService_4

public void setAppStandbyBucket() {
    UsageStatsService var5 = this.this$0;
    Context var7 = var5.getContext();
    int var26 = Binder.getCallingUid();
    IActivityManager var28 = ActivityManager.getService();
    int var30 = Binder.getCallingPid();
    int var35 = var28.handleIncomingUser(var30,var26,param4,0,1,setAppStandbyBucket,0);
    boolean var47 = UserHandle.isCore(var26);
    long var53 = Binder.clearCallingIdentity();
    UsageStatsService var54 = this.this$0;
    PackageManagerInternal var55 = var54.mPackageManagerInternal;
    int var58 = var55.getPackageUid(param2,4980736,var35);
    UsageStatsService var76 = this.this$0;
    AppStandbyController var77 = var76.mAppStandby;
    long var79 = SystemClock.elapsedRealtime();
    var77.setAppStandbyBucket(param2,var35,param3,var51,var79,var45);
    Object var8 = this.mAppIdleLock;
    AppStandbyController$Injector var9 = this.mInjector;
    AppIdleHistory var13 = this.mAppIdleHistory;
    AppIdleHistory$AppUsageHistory var15 = var13.getAppUsageHistory(param2,param3,param6);
    var17 = param5 and 65280;
    int var21 = var15.currentBucket;
    int var23 = var15.currentBucket;
    int var25 = var15.bucketingReason;
    var26 = var25 and 65280;
    AppIdleHistory var28 = this.mAppIdleHistory;
    long var30 = var28.getElapsedTime(param6);
    AppIdleHistory var31 = this.mAppIdleHistory;
    var31.updateLastPrediction(var15,var30,param4);
    long var33 = var15.bucketActiveTimeoutTime;
    var34 = var33 lt var30;
    int var48 = var15.bucketingReason;
    AppIdleHistory var61 = this.mAppIdleHistory;
    var61.setAppStandbyBucket(param2,param3,param6,var57,var58,param7);
    maybeInformListeners(param2,param3,param6,var57,var58,0);
    Object var8 = this.mAppIdleLock;
    AppIdleHistory var9 = this.mAppIdleHistory;
    boolean var11 = var9.shouldInformListeners(param2,param3,param4,param5);
    AppStandbyController$StandbyUpdateRecord var14 = AppStandbyController$StandbyUpdateRecord.obtain(param2,param3,param5,param6,param7);
    ArrayList var6 = sStandbyUpdatePool;
    ArrayList var7 = sStandbyUpdatePool;
    int var9 = var7.size();
    ArrayList var11 = sStandbyUpdatePool;
    var13 = var9 add -1;
    Object var15 = var11.remove(var13);
    AppStandbyController$StandbyUpdateRecord var16 = (AppStandbyController$StandbyUpdateRecord) var15;
    var16.packageName = this;
    var16.userId = param2;
    var16.bucket = param3;
    var16.reason = param4;
    var16.isUserInteraction = param5;
    Lcom/android/server/usage/AppStandbyController$StandbyUpdateRecord var16<PATH_SEP>UsageStatsService var5 = this.this$0;
    Context var7 = var5.getContext();
    int var26 = Binder.getCallingUid();
    IActivityManager var28 = ActivityManager.getService();
    int var30 = Binder.getCallingPid();
    int var35 = var28.handleIncomingUser(var30,var26,param4,0,1,setAppStandbyBucket,0);
    boolean var47 = UserHandle.isCore(var26);
    long var53 = Binder.clearCallingIdentity();
    UsageStatsService var54 = this.this$0;
    PackageManagerInternal var55 = var54.mPackageManagerInternal;
    int var58 = var55.getPackageUid(param2,4980736,var35);
    UsageStatsService var76 = this.this$0;
    AppStandbyController var77 = var76.mAppStandby;
    long var79 = SystemClock.elapsedRealtime();
    var77.setAppStandbyBucket(param2,var35,param3,var51,var79,var45);
    Object var8 = this.mAppIdleLock;
    AppStandbyController$Injector var9 = this.mInjector;
    AppIdleHistory var13 = this.mAppIdleHistory;
    AppIdleHistory$AppUsageHistory var15 = var13.getAppUsageHistory(param2,param3,param6);
    ArrayMap var6 = getUserHistory(param3);
    SparseArray var3 = this.mIdleHistory;
    Object var5 = var3.get(param2);
    ArrayMap var6 = (ArrayMap) var5;
    ArrayMap var8 = new ArrayMap();
    SparseArray var10 = this.mIdleHistory;
    var10.put(param2,var8);<PATH_SEP>UsageStatsService var5 = this.this$0;
    Context var7 = var5.getContext();
    int var26 = Binder.getCallingUid();
    IActivityManager var28 = ActivityManager.getService();
    int var30 = Binder.getCallingPid();
    int var35 = var28.handleIncomingUser(var30,var26,param4,0,1,setAppStandbyBucket,0);
    boolean var47 = UserHandle.isCore(var26);
    long var53 = Binder.clearCallingIdentity();
    UsageStatsService var54 = this.this$0;
    PackageManagerInternal var55 = var54.mPackageManagerInternal;
    int var58 = var55.getPackageUid(param2,4980736,var35);
    UsageStatsService var76 = this.this$0;
    AppStandbyController var77 = var76.mAppStandby;
    long var79 = SystemClock.elapsedRealtime();
    var77.setAppStandbyBucket(param2,var35,param3,var51,var79,var45);
    Object var8 = this.mAppIdleLock;
    AppStandbyController$Injector var9 = this.mInjector;
    AppIdleHistory var13 = this.mAppIdleHistory;
    AppIdleHistory$AppUsageHistory var15 = var13.getAppUsageHistory(param2,param3,param6);
    var17 = param5 and 65280;
    int var21 = var15.currentBucket;
    int var23 = var15.currentBucket;
    int var25 = var15.bucketingReason;
    var26 = var25 and 65280;
    AppIdleHistory var28 = this.mAppIdleHistory;
    long var30 = var28.getElapsedTime(param6);
    AppIdleHistory var31 = this.mAppIdleHistory;
    var31.updateLastPrediction(var15,var30,param4);
    long var33 = var15.bucketActiveTimeoutTime;
    var34 = var33 lt var30;
    int var48 = var15.bucketingReason;
    AppIdleHistory var61 = this.mAppIdleHistory;
    var61.setAppStandbyBucket(param2,param3,param6,var57,var58,param7);
    ArrayMap var9 = getUserHistory(param3);
    AppIdleHistory$AppUsageHistory var12 = getPackageHistory(var9,param2,param4,1);
    var12.currentBucket = param5;
    var12.bucketingReason = param6;
    long var14 = getElapsedTime(param4);
    var16 = 65280 and param6;
    var12.lastPredictedTime = var14;
    var12.lastPredictedBucket = param5;
    var12.bucketActiveTimeoutTime = var14;<PATH_SEP>UsageStatsService var5 = this.this$0;
    Context var7 = var5.getContext();
    int var26 = Binder.getCallingUid();
    IActivityManager var28 = ActivityManager.getService();
    int var30 = Binder.getCallingPid();
    int var35 = var28.handleIncomingUser(var30,var26,param4,0,1,setAppStandbyBucket,0);
    boolean var47 = UserHandle.isCore(var26);
    long var53 = Binder.clearCallingIdentity();
    UsageStatsService var54 = this.this$0;
    PackageManagerInternal var55 = var54.mPackageManagerInternal;
    int var58 = var55.getPackageUid(param2,4980736,var35);
    UsageStatsService var76 = this.this$0;
    AppStandbyController var77 = var76.mAppStandby;
    long var79 = SystemClock.elapsedRealtime();
    var77.setAppStandbyBucket(param2,var35,param3,var51,var79,var45);
    Object var8 = this.mAppIdleLock;
    AppStandbyController$Injector var9 = this.mInjector;
    AppIdleHistory var13 = this.mAppIdleHistory;
    AppIdleHistory$AppUsageHistory var15 = var13.getAppUsageHistory(param2,param3,param6);
    var17 = param5 and 65280;
    int var21 = var15.currentBucket;
    int var23 = var15.currentBucket;
    int var25 = var15.bucketingReason;
    var26 = var25 and 65280;
    AppIdleHistory var28 = this.mAppIdleHistory;
    long var30 = var28.getElapsedTime(param6);
    AppIdleHistory var31 = this.mAppIdleHistory;
    var31.updateLastPrediction(var15,var30,param4);
    long var33 = var15.bucketActiveTimeoutTime;
    var34 = var33 lt var30;
    int var48 = var15.bucketingReason;
    AppIdleHistory var61 = this.mAppIdleHistory;
    var61.setAppStandbyBucket(param2,param3,param6,var57,var58,param7);
    maybeInformListeners(param2,param3,param6,var57,var58,0);
    Object var8 = this.mAppIdleLock;
    AppIdleHistory var9 = this.mAppIdleHistory;
    boolean var11 = var9.shouldInformListeners(param2,param3,param4,param5);
    AppStandbyController$StandbyUpdateRecord var14 = AppStandbyController$StandbyUpdateRecord.obtain(param2,param3,param5,param6,param7);
    ArrayList var6 = sStandbyUpdatePool;
    ArrayList var7 = sStandbyUpdatePool;
    int var9 = var7.size();
    ArrayList var11 = sStandbyUpdatePool;
    var13 = var9 add -1;
    Object var15 = var11.remove(var13);
    AppStandbyController$StandbyUpdateRecord var16 = (AppStandbyController$StandbyUpdateRecord) var15;
    var16.packageName = this;
    var16.userId = param2;
    var16.bucket = param3;
    var16.reason = param4;
    var16.isUserInteraction = param5;
}