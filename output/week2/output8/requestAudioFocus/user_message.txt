// API: requestAudioFocus
// Service: AudioService_10

public void requestAudioFocus() {
    var12 = param8 and 4;
    boolean var17 = equals(param6);
    Context var33 = this.mContext;
    MediaFocusControl var41 = this.mMediaFocusControl;
    int var43 = Binder.getCallingUid();
    boolean var45 = forceFocusDuckingForAccessibility(param2,param3,var43);
    int var47 = var41.requestAudioFocus(param2,param3,param4,param5,param6,param7,param8,param10,var45);
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    String var48 = Integer.toHexString(param8);
    boolean var64 = pingBinder();
    AppOpsManager var66 = this.mAppOps;
    int var69 = Binder.getCallingUid();
    int var71 = var66.noteOp(32,var69,param7);{int var71 = var66.noteOp(32,var69,param7);};
    Object var72 = mAudioFocusLock;
    Stack var73 = this.mFocusStack;
    int var75 = var73.size();
    boolean var77 = this.mRingOrCallActive;
    int var82 = compareTo(param6);
    var84 = var79 and var83;
    this.mRingOrCallActive = 1;
    IAudioPolicyCallback var85 = this.mFocusPolicy;
    AudioFocusInfo var86 = new AudioFocusInfo();
    int var88 = Binder.getCallingUid();
    boolean var101 = canReassignAudioFocus();
    var103 = param8 and 1;
    IAudioPolicyCallback var107 = this.mFocusPolicy;
    boolean var249 = notifyExtFocusPolicyFocusRequest_syncAf(var97,param5,param4);
    Object var5 = this.mExtFocusChangeLock;
    long var6 = this.mExtFocusChangeCounter;
    var8 = 1 add var6;
    this.mExtFocusChangeCounter = var8;
    setGen(var6);
    HashMap var13 = this.mFocusOwnersForFocusPolicy;
    String var15 = getClientId();
    Object var17 = var13.get(var15);
    FocusRequester var18 = (FocusRequester) var17;
    boolean var22 = var18.hasSameDispatcher(param3);
    var18.release();
    IBinder var2 = this.mSourceRef;
    MediaFocusControl$AudioFocusDeathHandler var3 = this.mDeathHandler;
    this.mDeathHandler = 0;
    this.mFocusDispatcher = 0;<PATH_SEP>var12 = param8 and 4;
    boolean var17 = equals(param6);
    Context var33 = this.mContext;
    MediaFocusControl var41 = this.mMediaFocusControl;
    int var43 = Binder.getCallingUid();
    boolean var45 = forceFocusDuckingForAccessibility(param2,param3,var43);
    int var47 = var41.requestAudioFocus(param2,param3,param4,param5,param6,param7,param8,param10,var45);
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    String var48 = Integer.toHexString(param8);
    boolean var64 = pingBinder();
    AppOpsManager var66 = this.mAppOps;
    int var69 = Binder.getCallingUid();
    int var71 = var66.noteOp(32,var69,param7);{int var71 = var66.noteOp(32,var69,param7);};
    Object var72 = mAudioFocusLock;
    Stack var73 = this.mFocusStack;
    int var75 = var73.size();
    boolean var77 = this.mRingOrCallActive;
    int var82 = compareTo(param6);
    var84 = var79 and var83;
    this.mRingOrCallActive = 1;
    IAudioPolicyCallback var85 = this.mFocusPolicy;
    AudioFocusInfo var86 = new AudioFocusInfo();
    int var88 = Binder.getCallingUid();
    boolean var101 = canReassignAudioFocus();
    var103 = param8 and 1;
    IAudioPolicyCallback var107 = this.mFocusPolicy;
    boolean var249 = notifyExtFocusPolicyFocusRequest_syncAf(var97,param5,param4);
    Object var5 = this.mExtFocusChangeLock;
    long var6 = this.mExtFocusChangeCounter;
    var8 = 1 add var6;
    this.mExtFocusChangeCounter = var8;
    setGen(var6);
    HashMap var13 = this.mFocusOwnersForFocusPolicy;
    String var15 = getClientId();
    Object var17 = var13.get(var15);
    FocusRequester var18 = (FocusRequester) var17;
    boolean var22 = var18.hasSameDispatcher(param3);
    var18.release();
    MediaFocusControl$AudioFocusDeathHandler var29 = new MediaFocusControl$AudioFocusDeathHandler();
    linkToDeath(var29,0);
    HashMap var33 = this.mFocusOwnersForFocusPolicy;
    String var35 = getClientId();
    FocusRequester var36 = new FocusRequester();
    Object var39 = var33.put(var35,var36);
    IAudioPolicyCallback var47 = this.mFocusPolicy;
    var47.notifyAudioFocusRequest(param2,1);
    boolean 1<PATH_SEP>var12 = param8 and 4;
    boolean var17 = equals(param6);
    Context var33 = this.mContext;
    MediaFocusControl var41 = this.mMediaFocusControl;
    int var43 = Binder.getCallingUid();
    boolean var45 = forceFocusDuckingForAccessibility(param2,param3,var43);
    int var47 = var41.requestAudioFocus(param2,param3,param4,param5,param6,param7,param8,param10,var45);
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    String var48 = Integer.toHexString(param8);
    boolean var64 = pingBinder();
    AppOpsManager var66 = this.mAppOps;
    int var69 = Binder.getCallingUid();
    int var71 = var66.noteOp(32,var69,param7);{int var71 = var66.noteOp(32,var69,param7);};
    Object var72 = mAudioFocusLock;
    Stack var73 = this.mFocusStack;
    int var75 = var73.size();
    boolean var77 = this.mRingOrCallActive;
    int var82 = compareTo(param6);
    var84 = var79 and var83;
    this.mRingOrCallActive = 1;
    IAudioPolicyCallback var85 = this.mFocusPolicy;
    AudioFocusInfo var86 = new AudioFocusInfo();
    int var88 = Binder.getCallingUid();
    boolean var101 = canReassignAudioFocus();
    var103 = param8 and 1;
    IAudioPolicyCallback var107 = this.mFocusPolicy;
    boolean var249 = notifyExtFocusPolicyFocusRequest_syncAf(var97,param5,param4);
    Object var5 = this.mExtFocusChangeLock;
    long var6 = this.mExtFocusChangeCounter;
    var8 = 1 add var6;
    this.mExtFocusChangeCounter = var8;
    setGen(var6);
    HashMap var13 = this.mFocusOwnersForFocusPolicy;
    String var15 = getClientId();
    Object var17 = var13.get(var15);
    FocusRequester var18 = (FocusRequester) var17;
    boolean var22 = var18.hasSameDispatcher(param3);
    MediaFocusControl$AudioFocusDeathHandler var29 = new MediaFocusControl$AudioFocusDeathHandler();
    linkToDeath(var29,0);
    HashMap var33 = this.mFocusOwnersForFocusPolicy;
    String var35 = getClientId();
    FocusRequester var36 = new FocusRequester();
    Object var39 = var33.put(var35,var36);
    IAudioPolicyCallback var47 = this.mFocusPolicy;
    var47.notifyAudioFocusRequest(param2,1);<PATH_SEP>var12 = param8 and 4;
    boolean var17 = equals(param6);
    Context var33 = this.mContext;
    MediaFocusControl var41 = this.mMediaFocusControl;
    int var43 = Binder.getCallingUid();
    boolean var45 = forceFocusDuckingForAccessibility(param2,param3,var43);
    int var47 = var41.requestAudioFocus(param2,param3,param4,param5,param6,param7,param8,param10,var45);
    int var19 = Binder.getCallingUid();
    int var26 = Binder.getCallingPid();
    String var48 = Integer.toHexString(param8);
    boolean var64 = pingBinder();
    AppOpsManager var66 = this.mAppOps;
    int var69 = Binder.getCallingUid();
    int var71 = var66.noteOp(32,var69,param7);{int var71 = var66.noteOp(32,var69,param7);};
    Object var72 = mAudioFocusLock;
    Stack var73 = this.mFocusStack;
    int var75 = var73.size();
    boolean var77 = this.mRingOrCallActive;
    int var82 = compareTo(param6);
    var84 = var79 and var83;
    this.mRingOrCallActive = 1;
    IAudioPolicyCallback var85 = this.mFocusPolicy;
    AudioFocusInfo var86 = new AudioFocusInfo();
    int var88 = Binder.getCallingUid();
    boolean var101 = canReassignAudioFocus();
    Stack var2 = this.mFocusStack;
    boolean var4 = var2.isEmpty();
    Stack var6 = this.mFocusStack;
    Object var8 = var6.peek();
    FocusRequester var9 = (FocusRequester) var8;
    boolean var11 = isLockedFocusOwner(var9);
    boolean 0;
}