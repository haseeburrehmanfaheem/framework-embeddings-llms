// API: applyTunnelModeTransform
// Service: IpSecService_5

public void applyTunnelModeTransform() {
    IpSecService.checkDirection(param3);{IpSecService.checkDirection(param3);};
    int var9 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var10 = this.mUserResourceTracker;
    IpSecService$UserRecord var12 = var10.getUserRecord(var9);
    IpSecService$RefcountedResourceArray var13 = var12.mTransformRecords;
    IpSecService$IResource var15 = var13.getResourceOrThrow(param4);
    IpSecService$TransformRecord var16 = (IpSecService$TransformRecord) var15;
    IpSecService$RefcountedResourceArray var17 = var12.mTunnelInterfaceRecords;
    IpSecService$IResource var19 = var17.getResourceOrThrow(param2);
    IpSecService$TunnelInterfaceRecord var20 = (IpSecService$TunnelInterfaceRecord) var19;
    IpSecConfig var22 = var16.getConfig();
    int var24 = var22.getMode();
    Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);{Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);};
    int var31 = var22.getEncapType();
    IpSecService$RefcountedResourceArray var32 = var12.mEncapSocketRecords;
    int var34 = var22.getEncapSocketResourceId();
    IpSecService$IResource var36 = var32.getResourceOrThrow(var34);
    IpSecService$EncapSocketRecord var37 = (IpSecService$EncapSocketRecord) var36;
    IpSecService$RefcountedResourceArray var43 = var12.mSpiRecords;
    int var45 = var22.getSpiResourceId();
    IpSecService$IResource var47 = var43.getResourceOrThrow(var45);
    IpSecService$SpiRecord var48 = (IpSecService$SpiRecord) var47;
    int var52 = var20.getOkey();
    int var58 = var20.getIfId();
    var22.setXfrmInterfaceId(var58);
    Network var64 = var20.getUnderlyingNetwork();
    var22.setNetwork(var64);
    IpSecService$SpiRecord var67 = var16.getSpiRecord();
    int var69 = var67.getSpi();
    [I var78 = ADDRESS_FAMILIES;
    79 = arraylength 78;
    80 = arrayload 78[98];
    IpSecService$IpSecServiceConfiguration var81 = this.mSrvConfig;
    INetd var83 = var81.getNetdInstance();
    INetd var3 = NetdService.getInstance();
    IBinder var3 = ServiceManager.getService(this);
    INetd var5 = INetd$Stub.asInterface(var3);
    IInterface var5 = queryLocalInterface(android.net.INetd);
    INetd$Stub$Proxy var7 = new INetd$Stub$Proxy();
    Landroid/net/INetd var7<PATH_SEP>IpSecService.checkDirection(param3);{IpSecService.checkDirection(param3);};
    int var9 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var10 = this.mUserResourceTracker;
    IpSecService$UserRecord var12 = var10.getUserRecord(var9);
    IpSecService$RefcountedResourceArray var13 = var12.mTransformRecords;
    IpSecService$IResource var15 = var13.getResourceOrThrow(param4);
    IpSecService$TransformRecord var16 = (IpSecService$TransformRecord) var15;
    IpSecService$RefcountedResourceArray var17 = var12.mTunnelInterfaceRecords;
    IpSecService$IResource var19 = var17.getResourceOrThrow(param2);
    IpSecService$TunnelInterfaceRecord var20 = (IpSecService$TunnelInterfaceRecord) var19;
    IpSecConfig var22 = var16.getConfig();
    int var24 = var22.getMode();
    Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);{Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);};
    int var31 = var22.getEncapType();
    IpSecService$RefcountedResourceArray var32 = var12.mEncapSocketRecords;
    int var34 = var22.getEncapSocketResourceId();
    IpSecService$IResource var36 = var32.getResourceOrThrow(var34);
    IpSecService$EncapSocketRecord var37 = (IpSecService$EncapSocketRecord) var36;
    IpSecService$RefcountedResourceArray var43 = var12.mSpiRecords;
    int var45 = var22.getSpiResourceId();
    IpSecService$IResource var47 = var43.getResourceOrThrow(var45);
    IpSecService$SpiRecord var48 = (IpSecService$SpiRecord) var47;
    int var52 = var20.getOkey();
    int var58 = var20.getIfId();
    var22.setXfrmInterfaceId(var58);
    this.mXfrmInterfaceId = param2;<PATH_SEP>IpSecService.checkDirection(param3);{IpSecService.checkDirection(param3);};
    int var9 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var10 = this.mUserResourceTracker;
    IpSecService$UserRecord var12 = var10.getUserRecord(var9);
    IpSecService$RefcountedResourceArray var13 = var12.mTransformRecords;
    IpSecService$IResource var15 = var13.getResourceOrThrow(param4);
    IpSecService$TransformRecord var16 = (IpSecService$TransformRecord) var15;
    IpSecService$RefcountedResourceArray var17 = var12.mTunnelInterfaceRecords;
    IpSecService$IResource var19 = var17.getResourceOrThrow(param2);
    IpSecService$TunnelInterfaceRecord var20 = (IpSecService$TunnelInterfaceRecord) var19;
    IpSecConfig var22 = var16.getConfig();
    int var24 = var22.getMode();
    Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);{Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);};
    int var31 = var22.getEncapType();
    IpSecService$RefcountedResourceArray var32 = var12.mEncapSocketRecords;
    int var34 = var22.getEncapSocketResourceId();
    IpSecService$IResource var36 = var32.getResourceOrThrow(var34);
    IpSecService$EncapSocketRecord var37 = (IpSecService$EncapSocketRecord) var36;
    IpSecService$RefcountedResourceArray var43 = var12.mSpiRecords;
    int var45 = var22.getSpiResourceId();
    IpSecService$IResource var47 = var43.getResourceOrThrow(var45);
    IpSecService$SpiRecord var48 = (IpSecService$SpiRecord) var47;
    int var52 = var20.getOkey();
    int var58 = var20.getIfId();
    var22.setXfrmInterfaceId(var58);
    Network var64 = var20.getUnderlyingNetwork();
    Network var2 = this.mUnderlyingNetwork;
    Landroid/net/Network var2<PATH_SEP>IpSecService.checkDirection(param3);{IpSecService.checkDirection(param3);};
    int var9 = Binder.getCallingUid();
    IpSecService$UserResourceTracker var10 = this.mUserResourceTracker;
    IpSecService$UserRecord var12 = var10.getUserRecord(var9);
    IpSecService$RefcountedResourceArray var13 = var12.mTransformRecords;
    IpSecService$IResource var15 = var13.getResourceOrThrow(param4);
    IpSecService$TransformRecord var16 = (IpSecService$TransformRecord) var15;
    IpSecService$RefcountedResourceArray var17 = var12.mTunnelInterfaceRecords;
    IpSecService$IResource var19 = var17.getResourceOrThrow(param2);
    IpSecService$TunnelInterfaceRecord var20 = (IpSecService$TunnelInterfaceRecord) var19;
    IpSecConfig var22 = var16.getConfig();
    int var24 = var22.getMode();
    Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);{Preconditions.checkArgument(var27,Transform mode was not Tunnel mode; cannot be applied to a tunnel interface);};
    int var31 = var22.getEncapType();
    IpSecService$RefcountedResourceArray var32 = var12.mEncapSocketRecords;
    int var34 = var22.getEncapSocketResourceId();
    IpSecService$IResource var36 = var32.getResourceOrThrow(var34);
    IpSecService$EncapSocketRecord var37 = (IpSecService$EncapSocketRecord) var36;
    IpSecService$RefcountedResourceArray var43 = var12.mSpiRecords;
    int var45 = var22.getSpiResourceId();
    IpSecService$IResource var47 = var43.getResourceOrThrow(var45);
    IpSecService$SpiRecord var48 = (IpSecService$SpiRecord) var47;
    int var52 = var20.getOkey();
    int var58 = var20.getIfId();
    var22.setXfrmInterfaceId(var58);
    Network var64 = var20.getUnderlyingNetwork();
    var22.setNetwork(var64);
    IpSecService$SpiRecord var67 = var16.getSpiRecord();
    int var69 = var67.getSpi();
    [I var78 = ADDRESS_FAMILIES;
    79 = arraylength 78;
    80 = arrayload 78[98];
    IpSecService$IpSecServiceConfiguration var81 = this.mSrvConfig;
    INetd var83 = var81.getNetdInstance();
    IpSecConfig var85 = var16.getConfig();
    String var87 = var85.getSourceAddress();
}