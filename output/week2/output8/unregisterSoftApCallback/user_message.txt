// API: unregisterSoftApCallback
// Service: WifiServiceImpl_2

public void unregisterSoftApCallback() {
    boolean var4 = this.mVerboseLoggingEnabled;
    int var11 = Binder.getCallingUid();
    12 = conversion(J) 11;
    WifiInjector var18 = this.mWifiInjector;
    Handler var20 = var18.getClientModeImplHandler();
    ClientModeImpl var2 = this.mClientModeImpl;
    Handler var4 = var2.getHandler();
    StateMachine$SmHandler var2 = this.mSmHandler;
    Landroid/os/Handler var2<PATH_SEP>boolean var4 = this.mVerboseLoggingEnabled;
    int var11 = Binder.getCallingUid();
    12 = conversion(J) 11;
    WifiInjector var18 = this.mWifiInjector;
    Handler var20 = var18.getClientModeImplHandler();
    ClientModeImpl var2 = this.mClientModeImpl;
    Handler var4 = var2.getHandler();
    Landroid/os/Handler var4<PATH_SEP>boolean var4 = this.mVerboseLoggingEnabled;
    int var11 = Binder.getCallingUid();
    12 = conversion(J) 11;
    WifiInjector var18 = this.mWifiInjector;
    Handler var20 = var18.getClientModeImplHandler();
    -$$Lambda$WifiServiceImpl$RmshU723eQairQK6HNmdtEWCoRA var21 = new -$$Lambda$WifiServiceImpl$RmshU723eQairQK6HNmdtEWCoRA();
    boolean var24 = var20.post(var21);<PATH_SEP>boolean var4 = this.mVerboseLoggingEnabled;
    WifiInjector var18 = this.mWifiInjector;
    Handler var20 = var18.getClientModeImplHandler();
    -$$Lambda$WifiServiceImpl$RmshU723eQairQK6HNmdtEWCoRA var21 = new -$$Lambda$WifiServiceImpl$RmshU723eQairQK6HNmdtEWCoRA();
    boolean var24 = var20.post(var21);
}