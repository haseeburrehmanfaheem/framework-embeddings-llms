// API: setMasterSyncAutomaticallyAsUser
// Service: ContentService_3

public void setMasterSyncAutomaticallyAsUser() {
    Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);
    writeAccountInfoLocked();
    AtomicFile var15 = this.mAccountInfoFile;
    File var17 = var15.getBaseFile();
    AtomicFile var27 = this.mAccountInfoFile;
    FileOutputStream var29 = var27.startWrite();
    FastXmlSerializer var30 = new FastXmlSerializer();
    Charset var32 = UTF_8;
    String var34 = var32.name();
    var30.setOutput(var29,var34);
    Boolean var38 = Boolean.valueOf(1);
    var30.startDocument(0,var38);
    var30.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var43 = var30.startTag(0,accounts);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
    append(58);
    append(param3);<PATH_SEP>Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);
    writeAccountInfoLocked();
    AtomicFile var15 = this.mAccountInfoFile;
    File var17 = var15.getBaseFile();
    AtomicFile var27 = this.mAccountInfoFile;
    FileOutputStream var29 = var27.startWrite();
    FastXmlSerializer var30 = new FastXmlSerializer();
    Charset var32 = UTF_8;
    String var34 = var32.name();
    var30.setOutput(var29,var34);
    Boolean var38 = Boolean.valueOf(1);
    var30.startDocument(0,var38);
    var30.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var43 = var30.startTag(0,accounts);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);
    writeAccountInfoLocked();
    AtomicFile var15 = this.mAccountInfoFile;
    File var17 = var15.getBaseFile();
    AtomicFile var27 = this.mAccountInfoFile;
    FileOutputStream var29 = var27.startWrite();
    FastXmlSerializer var30 = new FastXmlSerializer();
    Charset var32 = UTF_8;
    String var34 = var32.name();
    var30.setOutput(var29,var34);
    Boolean var38 = Boolean.valueOf(1);
    var30.startDocument(0,var38);
    boolean var10 = booleanValue();
    append(var21);
    this.mLineStart = 1;<PATH_SEP>Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);
    writeAccountInfoLocked();
    AtomicFile var15 = this.mAccountInfoFile;
    File var17 = var15.getBaseFile();
    AtomicFile var27 = this.mAccountInfoFile;
    FileOutputStream var29 = var27.startWrite();
    FastXmlSerializer var30 = new FastXmlSerializer();
    Charset var32 = UTF_8;
    String var34 = var32.name();
    var30.setOutput(var29,var34);
    Boolean var38 = Boolean.valueOf(1);
    var30.startDocument(0,var38);
    var30.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var43 = var30.startTag(0,accounts);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
}