// API: getInitialDisplaySize
// Service: WindowManagerService_3

public void getInitialDisplaySize() {
    WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var6 = this.mRoot;
    DisplayContent var8 = var6.getDisplayContent(param2);
    int var11 = Binder.getCallingUid();
    boolean var13 = var8.hasAccess(var11);{boolean var13 = var8.hasAccess(var11);};
    int var14 = var8.mInitialDisplayWidth;
    param3.x = var14;
    int var15 = var8.mInitialDisplayHeight;
    param3.y = var15;
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    reset();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    var8 = var6 add -1;
    var5.regionCounter = var8;<PATH_SEP>WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    RootWindowContainer var6 = this.mRoot;
    DisplayContent var8 = var6.getDisplayContent(param2);
    int var11 = Binder.getCallingUid();
    boolean var13 = var8.hasAccess(var11);{boolean var13 = var8.hasAccess(var11);};
    int var14 = var8.mInitialDisplayWidth;
    param3.x = var14;
    int var15 = var8.mInitialDisplayHeight;
    param3.y = var15;
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    reset();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    var8 = var6 add -1;
    var5.regionCounter = var8;
    int var9 = var5.regionCounter;
    int var11 = var5.prevPriority;
    int var13 = var5.tid;
    int var14 = var5.prevPriority;
    Process.setThreadPriority(var13,var14);
    var5.prevPriority = 2147483647;<PATH_SEP>WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var19 = var5.regionCounter;
    var21 = var19 add 1;
    var5.regionCounter = var21;
}