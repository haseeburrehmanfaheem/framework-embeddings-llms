// API: deleteTunnelInterface
// Service: IpSecService_3

public void deleteTunnelInterface() {
    IpSecService$UserResourceTracker var5 = this.mUserResourceTracker;
    int var7 = Binder.getCallingUid();
    IpSecService$UserRecord var9 = var5.getUserRecord(var7);
    SparseArray var4 = this.mUserRecords;
    Object var6 = var4.get(param2);
    IpSecService$UserRecord var7 = (IpSecService$UserRecord) var6;
    IpSecService$UserRecord var9 = new IpSecService$UserRecord();
    SparseArray var11 = this.mUserRecords;
    var11.put(param2,var9);
    Lcom/android/server/IpSecService$UserRecord var13<PATH_SEP>IpSecService$UserResourceTracker var5 = this.mUserResourceTracker;
    int var7 = Binder.getCallingUid();
    IpSecService$UserRecord var9 = var5.getUserRecord(var7);
    IpSecService$RefcountedResourceArray var10 = var9.mTunnelInterfaceRecords;
    releaseResource(var10,param2);
    IpSecService$RefcountedResource var5 = getRefcountedResourceOrThrow(param3);
    SparseArray var3 = this.mArray;
    Object var5 = var3.get(param2);
    IpSecService$RefcountedResource var6 = (IpSecService$RefcountedResource) var5;
    IllegalArgumentException var8 = new IllegalArgumentException();
    Object var10 = new Object(2);
    String var11 = this.mTypeName;
    arraystore 10[7] = 11;
    Integer var14 = Integer.valueOf(param2);
    arraystore 10[12] = 14;
    String var17 = String.format(No such %s found for given id: %d,var10);<PATH_SEP>IpSecService$UserResourceTracker var5 = this.mUserResourceTracker;
    int var7 = Binder.getCallingUid();
    IpSecService$UserRecord var9 = var5.getUserRecord(var7);
    IpSecService$RefcountedResourceArray var10 = var9.mTunnelInterfaceRecords;
    releaseResource(var10,param2);
    IpSecService$RefcountedResource var5 = getRefcountedResourceOrThrow(param3);
    var5.userRelease();
    IBinder var2 = this.mBinder;
    boolean var5 = var2.unlinkToDeath(this,0);
    this.mBinder = 0;
    IpSecService$IResource var6 = this.mResource;
    var6.invalidate();{var6.invalidate();};
    releaseReference();
    int var2 = this.mRefCount;
    var4 = var2 add -1;
    this.mRefCount = var4;<PATH_SEP>IpSecService$UserResourceTracker var5 = this.mUserResourceTracker;
    int var7 = Binder.getCallingUid();
    IpSecService$UserRecord var9 = var5.getUserRecord(var7);
    IpSecService$RefcountedResourceArray var10 = var9.mTunnelInterfaceRecords;
    releaseResource(var10,param2);
    IpSecService$RefcountedResource var5 = getRefcountedResourceOrThrow(param3);
    var5.userRelease();
    IBinder var2 = this.mBinder;
    boolean var5 = var2.unlinkToDeath(this,0);
    this.mBinder = 0;
    IpSecService$IResource var6 = this.mResource;
    var6.invalidate();{var6.invalidate();};
    releaseReference();
    int var2 = this.mRefCount;
    var4 = var2 add -1;
    this.mRefCount = var4;
    int var5 = this.mRefCount;
}