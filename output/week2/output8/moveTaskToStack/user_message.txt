// API: moveTaskToStack
// Service: ActivityTaskManagerService_4

public void moveTaskToStack() {
    WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    long var11 = Binder.clearCallingIdentity();
    RootActivityContainer var12 = this.mRootActivityContainer;
    TaskRecord var14 = var12.anyTaskForId(param2);
    RootActivityContainer var16 = this.mRootActivityContainer;
    ActivityStack var18 = var16.getStack(param3);
    boolean var31 = var18.isActivityTypeStandardOrUndefined();
    boolean var49 = var18.inSplitScreenPrimaryWindowingMode();
    WindowManagerService var50 = this.mWindowManager;
    var50.setDockedStackCreateState(0,0);
    WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    setDockedStackCreateStateLocked(param2,param3);
    this.mDockedStackCreateMode = param2;<PATH_SEP>WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var12 = var5.tid;
    int var13 = this.mBoostToPriority;
    Process.setThreadPriority(var12,var13);
    var5.prevPriority = var10;
    int var19 = var5.regionCounter;
    var21 = var19 add 1;
    var5.regionCounter = var21;<PATH_SEP>WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    long var11 = Binder.clearCallingIdentity();
    RootActivityContainer var12 = this.mRootActivityContainer;
    TaskRecord var14 = var12.anyTaskForId(param2);
    Binder.restoreCallingIdentity(var11);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    reset();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    var8 = var6 add -1;
    var5.regionCounter = var8;<PATH_SEP>WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    long var11 = Binder.clearCallingIdentity();
    RootActivityContainer var12 = this.mRootActivityContainer;
    TaskRecord var14 = var12.anyTaskForId(param2);
    TaskRecord var5 = anyTaskForId(param2,2);
    TaskRecord var6 = anyTaskForId(param2,param3,0,0);
    ArrayList var11 = this.mActivityDisplays;
    int var13 = var11.size();
    ArrayList var15 = this.mActivityDisplays;
    Object var17 = var15.get(var34);
    ActivityDisplay var18 = (ActivityDisplay) var17;
    int var20 = var18.getChildCount();
    var21 = var20 sub 1;
    ActivityStack var23 = var18.getChildAt(var28);
    TaskRecord var25 = var23.taskForIdLocked(param2);
    ActivityStack var46 = getLaunchStack(0,param4,var25,param5);
    Lcom/android/server/wm/TaskRecord var25;
}