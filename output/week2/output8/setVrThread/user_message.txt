// API: setVrThread
// Service: ActivityTaskManagerService_2

public void setVrThread() {
    WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    int var7 = Binder.getCallingPid();
    WindowProcessControllerMap var8 = this.mProcessMap;
    WindowProcessController var10 = var8.getProcess(var7);
    VrController var11 = this.mVrController;
    var11.setVrThreadLocked(param2,var7,var10);
    boolean var6 = hasPersistentVrFlagSet();
    boolean var12 = inVrMode();
    int var14 = getCurrentSchedulingGroup();
    int var16 = setVrRenderThreadLocked(param2,var14,0);
    boolean var6 = inVrMode();
    boolean var8 = hasPersistentVrFlagSet();
    int var12 = updateVrRenderThreadLocked(param2,param4);
    int var4 = this.mVrRenderThreadTid;
    int var4<PATH_SEP>WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    int var7 = Binder.getCallingPid();
    WindowProcessControllerMap var8 = this.mProcessMap;
    WindowProcessController var10 = var8.getProcess(var7);
    VrController var11 = this.mVrController;
    var11.setVrThreadLocked(param2,var7,var10);
    boolean var6 = hasPersistentVrFlagSet();
    boolean var12 = inVrMode();
    int var14 = getCurrentSchedulingGroup();
    int var16 = setVrRenderThreadLocked(param2,var14,0);
    boolean var6 = inVrMode();
    boolean var8 = hasPersistentVrFlagSet();
    int var12 = updateVrRenderThreadLocked(param2,param4);
    int var4 = this.mVrRenderThreadTid;
    boolean var7 = ActivityManagerService.scheduleAsRegularPriority(var4,param3);
    this.mVrRenderThreadTid = 0;
    int var15 = this.mVrRenderThreadTid;
    int var15<PATH_SEP>WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    int var7 = Binder.getCallingPid();
    WindowProcessControllerMap var8 = this.mProcessMap;
    WindowProcessController var10 = var8.getProcess(var7);
    VrController var11 = this.mVrController;
    var11.setVrThreadLocked(param2,var7,var10);
    boolean var6 = hasPersistentVrFlagSet();
    boolean var12 = inVrMode();
    int var14 = getCurrentSchedulingGroup();
    int var16 = setVrRenderThreadLocked(param2,var14,0);
    boolean var6 = inVrMode();
    boolean var8 = hasPersistentVrFlagSet();
    int var12 = updateVrRenderThreadLocked(param2,param4);
    int var4 = this.mVrRenderThreadTid;
    this.mVrRenderThreadTid = param2;
    int var9 = this.mVrRenderThreadTid;
    boolean var11 = ActivityManagerService.scheduleAsFifoPriority(var9,param3);
    int var15 = this.mVrRenderThreadTid;
    int var15<PATH_SEP>WindowManagerGlobalLock var4 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var12 = var5.tid;
    int var13 = this.mBoostToPriority;
    Process.setThreadPriority(var12,var13);
    var5.prevPriority = var10;
}