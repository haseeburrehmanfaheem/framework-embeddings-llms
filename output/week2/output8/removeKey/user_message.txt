// API: removeKey
// Service: LockSettingsService_2

public void removeKey() {
    RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.removeKey(param2);
    Object var6 = Preconditions.checkNotNull(param2,alias is null);{Object var6 = Preconditions.checkNotNull(param2,alias is null);};
    int var8 = Binder.getCallingUid();
    int var10 = UserHandle.getCallingUserId();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    boolean var13 = var11.removeKey(var8,param2);
    RecoverableKeyStoreDb var15 = this.mDatabase;
    long var18 = var15.setShouldCreateSnapshot(var10,var8,1);
    long var11 = setLong(param2,param3,should_create_snapshot,var8);
    RecoverableKeyStoreDbHelper var6 = this.mKeyStoreDbHelper;
    SQLiteDatabase var8 = var6.getWritableDatabase();
    ContentValues var9 = new ContentValues();
    Long var12 = Long.valueOf(param5);
    var9.put(param4,var12);
    String var16 = new String(2);
    String var18 = Integer.toString(param2);
    arraystore 16[19] = 18;
    String var21 = Integer.toString(param3);<PATH_SEP>RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.removeKey(param2);
    Object var6 = Preconditions.checkNotNull(param2,alias is null);{Object var6 = Preconditions.checkNotNull(param2,alias is null);};
    int var8 = Binder.getCallingUid();
    int var10 = UserHandle.getCallingUserId();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    boolean var13 = var11.removeKey(var8,param2);
    RecoverableKeyStoreDb var15 = this.mDatabase;
    long var18 = var15.setShouldCreateSnapshot(var10,var8,1);
    long var11 = setLong(param2,param3,should_create_snapshot,var8);
    RecoverableKeyStoreDbHelper var6 = this.mKeyStoreDbHelper;
    SQLiteDatabase var8 = var6.getWritableDatabase();
    ContentValues var9 = new ContentValues();
    Long var12 = Long.valueOf(param5);
    var9.put(param4,var12);
    String var16 = new String(2);
    String var18 = Integer.toString(param2);
    arraystore 16[19] = 18;
    String var21 = Integer.toString(param3);
    arraystore 16[22] = 21;
    ensureRecoveryServiceMetadataEntryExists(param2,param3);{ensureRecoveryServiceMetadataEntryExists(param2,param3);};
    int var26 = var8.update(recovery_service_metadata,var9,user_id = ? AND uid = ?,var16);<PATH_SEP>RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.removeKey(param2);
    Object var6 = Preconditions.checkNotNull(param2,alias is null);{Object var6 = Preconditions.checkNotNull(param2,alias is null);};
    int var8 = Binder.getCallingUid();
    int var10 = UserHandle.getCallingUserId();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    boolean var13 = var11.removeKey(var8,param2);
    RecoverableKeyStoreDb var15 = this.mDatabase;
    long var18 = var15.setShouldCreateSnapshot(var10,var8,1);
    long var11 = setLong(param2,param3,should_create_snapshot,var8);
    long var11<PATH_SEP>RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.removeKey(param2);
    Object var6 = Preconditions.checkNotNull(param2,alias is null);{Object var6 = Preconditions.checkNotNull(param2,alias is null);};
    int var8 = Binder.getCallingUid();
    int var10 = UserHandle.getCallingUserId();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    boolean var13 = var11.removeKey(var8,param2);
    RecoverableKeyStoreDb var15 = this.mDatabase;
    long var18 = var15.setShouldCreateSnapshot(var10,var8,1);
    long var11 = setLong(param2,param3,should_create_snapshot,var8);
    RecoverableKeyStoreDbHelper var6 = this.mKeyStoreDbHelper;
    SQLiteDatabase var8 = var6.getWritableDatabase();
    ContentValues var9 = new ContentValues();
    Long var12 = Long.valueOf(param5);
    var9.put(param4,var12);
}