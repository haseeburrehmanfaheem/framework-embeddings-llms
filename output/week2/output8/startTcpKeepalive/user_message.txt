// API: startTcpKeepalive
// Service: ConnectivityService_5

public void startTcpKeepalive() {
    KeepaliveTracker var7 = this.mKeepaliveTracker;
    NetworkAgentInfo var9 = getNetworkAgentInfoForNetwork(param2);
    var7.startTcpKeepalive(var9,param3,param4,param5);
    TcpKeepalivePacketData var9 = TcpKeepaliveController.getTcpKeepalivePacket(param3);
    KeepaliveTracker$KeepaliveInfo var13 = new KeepaliveTracker$KeepaliveInfo();
    String var36 = var13.toString();
    int var7 = this.mType;
    NetworkAgentInfo var13 = this.mNai;
    Network var14 = var13.network;
    int var20 = this.mStartedState;
    String var22 = startedStateString(var20);
    KeepalivePacketData var28 = this.mPacket;
    InetAddress var29 = var28.srcAddress;
    KeepalivePacketData var30 = this.mPacket;
    int var31 = var30.srcPort;
    String var33 = IpUtils.addressAndPortToString(var29,var31);
    KeepalivePacketData var39 = this.mPacket;
    InetAddress var40 = var39.dstAddress;
    KeepalivePacketData var41 = this.mPacket;
    int var42 = var41.dstPort;
    String var44 = IpUtils.addressAndPortToString(var40,var42);
    int var50 = this.mInterval;
    int var56 = this.mUid;
    int var62 = this.mPid;
    boolean var68 = this.mPrivileged;
    KeepalivePacketData var74 = this.mPacket;
    [B var76 = var74.getPacket();
    String var78 = HexDump.toHexString(var76);
    Ljava/lang/String var85<PATH_SEP>KeepaliveTracker var7 = this.mKeepaliveTracker;
    NetworkAgentInfo var9 = getNetworkAgentInfoForNetwork(param2);
    var7.startTcpKeepalive(var9,param3,param4,param5);
    TcpKeepalivePacketData var9 = TcpKeepaliveController.getTcpKeepalivePacket(param3);
    TcpKeepalivePacketDataParcelable var3 = TcpKeepaliveController.switchToRepairMode(this);
    TcpKeepalivePacketDataParcelable var3 = new TcpKeepalivePacketDataParcelable();
    SocketAddress var7 = Os.getsockname(this);
    14 = instanceof 7 <Application,Ljava/net/InetSocketAddress>;
    InetSocketAddress var21 = (InetSocketAddress) var7;
    [B var23 = TcpKeepaliveController.getAddress(var21);
    var3.srcAddress = var23;
    InetSocketAddress var24 = (InetSocketAddress) var7;
    int var26 = TcpKeepaliveController.getPort(var24);
    var3.srcPort = var26;
    SocketAddress var28 = Os.getpeername(this);
    35 = instanceof 28 <Application,Ljava/net/InetSocketAddress>;
    InetSocketAddress var41 = (InetSocketAddress) var28;
    [B var43 = TcpKeepaliveController.getAddress(var41);
    var3.dstAddress = var43;
    InetSocketAddress var44 = (InetSocketAddress) var28;
    int var46 = TcpKeepaliveController.getPort(var44);
    var3.dstPort = var46;
    TcpKeepaliveController.dropAllIncomingPackets(this,1);
    int var49 = IPPROTO_TCP;
    Os.setsockoptInt(this,var49,19,1);
    boolean var53 = TcpKeepaliveController.isSocketIdle(this);
    int var60 = IPPROTO_TCP;
    Os.setsockoptInt(this,var60,20,2);
    int var64 = IPPROTO_TCP;
    int var67 = Os.getsockoptInt(this,var64,21);
    var3.seq = var67;
    int var68 = IPPROTO_TCP;
    Os.setsockoptInt(this,var68,20,1);
    int var70 = IPPROTO_TCP;
    int var72 = Os.getsockoptInt(this,var70,21);
    var3.ack = var72;
    int var73 = IPPROTO_TCP;
    Os.setsockoptInt(this,var73,20,0);
    boolean var76 = TcpKeepaliveController.isReceiveQueueEmpty(this);
    boolean var83 = TcpKeepaliveController.isSendQueueEmpty(this);
    TcpRepairWindow var89 = NetworkUtils.getTcpRepairWindow(this);
    int var90 = var89.rcvWnd;
    var3.rcvWnd = var90;
    int var91 = var89.rcvWndScale;
    var3.rcvWndScale = var91;
    [B var92 = var3.srcAddress;
    93 = arraylength 92;
    int var95 = IPPROTO_IP;
    int var96 = IP_TOS;
    int var98 = Os.getsockoptInt(this,var95,var96);
    var3.tos = var98;
    int var99 = IPPROTO_IP;
    int var100 = IP_TTL;
    int var102 = Os.getsockoptInt(this,var99,var100);
    var3.ttl = var102;<PATH_SEP>KeepaliveTracker var7 = this.mKeepaliveTracker;
    NetworkAgentInfo var9 = getNetworkAgentInfoForNetwork(param2);
    var7.startTcpKeepalive(var9,param3,param4,param5);
    TcpKeepalivePacketData var9 = TcpKeepaliveController.getTcpKeepalivePacket(param3);
    TcpKeepalivePacketDataParcelable var3 = TcpKeepaliveController.switchToRepairMode(this);
    TcpKeepalivePacketDataParcelable var3 = new TcpKeepalivePacketDataParcelable();
    SocketAddress var7 = Os.getsockname(this);
    14 = instanceof 7 <Application,Ljava/net/InetSocketAddress>;
    InetSocketAddress var21 = (InetSocketAddress) var7;
    [B var23 = TcpKeepaliveController.getAddress(var21);
    var3.srcAddress = var23;
    InetSocketAddress var24 = (InetSocketAddress) var7;
    int var26 = TcpKeepaliveController.getPort(var24);
    var3.srcPort = var26;
    SocketAddress var28 = Os.getpeername(this);
    35 = instanceof 28 <Application,Ljava/net/InetSocketAddress>;
    InetSocketAddress var41 = (InetSocketAddress) var28;
    [B var43 = TcpKeepaliveController.getAddress(var41);
    var3.dstAddress = var43;
    InetSocketAddress var44 = (InetSocketAddress) var28;
    int var46 = TcpKeepaliveController.getPort(var44);
    var3.dstPort = var46;
    TcpKeepaliveController.dropAllIncomingPackets(this,1);
    int var49 = IPPROTO_TCP;
    Os.setsockoptInt(this,var49,19,1);
    boolean var53 = TcpKeepaliveController.isSocketIdle(this);
    int var60 = IPPROTO_TCP;
    Os.setsockoptInt(this,var60,20,2);
    int var64 = IPPROTO_TCP;
    int var67 = Os.getsockoptInt(this,var64,21);
    var3.seq = var67;
    int var68 = IPPROTO_TCP;
    Os.setsockoptInt(this,var68,20,1);
    int var70 = IPPROTO_TCP;
    int var72 = Os.getsockoptInt(this,var70,21);
    var3.ack = var72;
    int var73 = IPPROTO_TCP;
    Os.setsockoptInt(this,var73,20,0);
    boolean var76 = TcpKeepaliveController.isReceiveQueueEmpty(this);
    boolean var83 = TcpKeepaliveController.isSendQueueEmpty(this);<PATH_SEP>KeepaliveTracker var7 = this.mKeepaliveTracker;
    NetworkAgentInfo var9 = getNetworkAgentInfoForNetwork(param2);
    var7.startTcpKeepalive(var9,param3,param4,param5);
    TcpKeepalivePacketData var9 = TcpKeepaliveController.getTcpKeepalivePacket(param3);
    TcpKeepalivePacketDataParcelable var3 = TcpKeepaliveController.switchToRepairMode(this);
    TcpKeepalivePacketDataParcelable var3 = new TcpKeepalivePacketDataParcelable();
    SocketAddress var7 = Os.getsockname(this);
    14 = instanceof 7 <Application,Ljava/net/InetSocketAddress>;
    InetSocketAddress var21 = (InetSocketAddress) var7;
    [B var23 = TcpKeepaliveController.getAddress(var21);
    var3.srcAddress = var23;
    InetSocketAddress var24 = (InetSocketAddress) var7;
    int var26 = TcpKeepaliveController.getPort(var24);
    var3.srcPort = var26;
    SocketAddress var28 = Os.getpeername(this);
    35 = instanceof 28 <Application,Ljava/net/InetSocketAddress>;
    InetSocketAddress var41 = (InetSocketAddress) var28;
    [B var43 = TcpKeepaliveController.getAddress(var41);
    var3.dstAddress = var43;
    InetSocketAddress var44 = (InetSocketAddress) var28;
    int var46 = TcpKeepaliveController.getPort(var44);
    var3.dstPort = var46;
    TcpKeepaliveController.dropAllIncomingPackets(this,1);
    int var49 = IPPROTO_TCP;
    Os.setsockoptInt(this,var49,19,1);
    boolean var53 = TcpKeepaliveController.isSocketIdle(this);
    int var60 = IPPROTO_TCP;
    Os.setsockoptInt(this,var60,20,2);
}