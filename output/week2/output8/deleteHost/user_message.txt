// API: deleteHost
// Service: AppWidgetServiceImpl_3

public void deleteHost() {
    int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    AppWidgetServiceImpl$HostId var27 = new AppWidgetServiceImpl$HostId();
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var32 = lookupHostLocked(var27);
    deleteHostLocked(var32);
    ArrayList var3 = param2.widgets;
    int var5 = var3.size();
    var7 = var5 add -1;
    ArrayList var9 = param2.widgets;
    Object var11 = var9.remove(var15);
    AppWidgetServiceImpl$Widget var12 = (AppWidgetServiceImpl$Widget) var11;
    deleteAppWidgetLocked(var12);
    decrementAppWidgetServiceRefCount(param2);
    AppWidgetServiceImpl$Host var4 = param2.host;
    ArrayList var5 = var4.widgets;
    boolean var7 = var5.remove(param2);
    pruneHostLocked(var4);
    removeWidgetLocked(param2);
    AppWidgetServiceImpl$Provider var10 = param2.provider;
    ArrayList var12 = var10.widgets;
    boolean var14 = var12.remove(param2);
    boolean var15 = var10.zombie;
    sendDeletedIntentLocked(param2);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    AppWidgetServiceImpl$HostId var27 = new AppWidgetServiceImpl$HostId();
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var32 = lookupHostLocked(var27);
    ArrayList var3 = this.mHosts;
    int var5 = var3.size();
    ArrayList var7 = this.mHosts;
    Object var9 = var7.get(var16);
    AppWidgetServiceImpl$Host var10 = (AppWidgetServiceImpl$Host) var9;
    AppWidgetServiceImpl$HostId var11 = var10.id;
    boolean var13 = var11.equals(param2);
    Class var6 = getClass();
    Class var8 = getClass();
    AppWidgetServiceImpl$HostId var9 = (AppWidgetServiceImpl$HostId) param2;
    int var10 = this.uid;
    int var11 = var9.uid;
    int var12 = this.hostId;
    int var13 = var9.hostId;
    String var14 = this.packageName;
    String var18 = var9.packageName;
    boolean 1<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    AppWidgetServiceImpl$HostId var27 = new AppWidgetServiceImpl$HostId();
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var32 = lookupHostLocked(var27);
    deleteHostLocked(var32);
    ArrayList var3 = param2.widgets;
    int var5 = var3.size();
    var7 = var5 add -1;
    ArrayList var9 = param2.widgets;
    Object var11 = var9.remove(var15);
    AppWidgetServiceImpl$Widget var12 = (AppWidgetServiceImpl$Widget) var11;
    deleteAppWidgetLocked(var12);
    decrementAppWidgetServiceRefCount(param2);
    AppWidgetServiceImpl$Host var4 = param2.host;
    ArrayList var5 = var4.widgets;
    boolean var7 = var5.remove(param2);
    pruneHostLocked(var4);
    removeWidgetLocked(param2);
    AppWidgetServiceImpl$Provider var10 = param2.provider;
    ArrayList var12 = var10.widgets;
    boolean var14 = var12.remove(param2);
    boolean var15 = var10.zombie;
    sendDeletedIntentLocked(param2);
    ArrayList var17 = var10.widgets;
    boolean var19 = var17.isEmpty();
    cancelBroadcastsLocked(var10);
    boolean var3 = DEBUG;
    PendingIntent var18 = param2.broadcast;
    PendingIntent var19 = param2.broadcast;
    Handler var20 = this.mSaveStateHandler;
    -$$Lambda$AppWidgetServiceImpl$TEG8Dmf_tnBoLQ8rTg9_1sFaVu8 var21 = new -$$Lambda$AppWidgetServiceImpl$TEG8Dmf_tnBoLQ8rTg9_1sFaVu8();
    boolean var24 = var20.post(var21);<PATH_SEP>int var5 = UserHandle.getCallingUserId();
    boolean var6 = DEBUG;
    AppWidgetServiceImpl$SecurityPolicy var23 = this.mSecurityPolicy;
    Object var25 = this.mLock;
    ensureGroupStateLoadedLocked(var5);{ensureGroupStateLoadedLocked(var5);};
    AppWidgetServiceImpl$HostId var27 = new AppWidgetServiceImpl$HostId();
    int var29 = Binder.getCallingUid();
    AppWidgetServiceImpl$Host var32 = lookupHostLocked(var27);
    deleteHostLocked(var32);
    ArrayList var3 = param2.widgets;
    int var5 = var3.size();
    var7 = var5 add -1;
    ArrayList var9 = param2.widgets;
    Object var11 = var9.remove(var15);
    AppWidgetServiceImpl$Widget var12 = (AppWidgetServiceImpl$Widget) var11;
    deleteAppWidgetLocked(var12);
    decrementAppWidgetServiceRefCount(param2);
    AppWidgetServiceImpl$Host var4 = param2.host;
    ArrayList var5 = var4.widgets;
    boolean var7 = var5.remove(param2);
    pruneHostLocked(var4);
    removeWidgetLocked(param2);
    AppWidgetServiceImpl$Provider var10 = param2.provider;
    ArrayList var12 = var10.widgets;
    boolean var14 = var12.remove(param2);
    boolean var15 = var10.zombie;
    sendDeletedIntentLocked(param2);
    Intent var3 = new Intent();
    AppWidgetServiceImpl$Provider var6 = param2.provider;
    AppWidgetProviderInfo var7 = var6.info;
    ComponentName var8 = var7.provider;
    Intent var10 = var3.setComponent(var8);
    int var11 = param2.appWidgetId;
    Intent var14 = var3.putExtra(appWidgetId,var11);
    AppWidgetServiceImpl$Provider var15 = param2.provider;
    AppWidgetProviderInfo var16 = var15.info;
    UserHandle var18 = var16.getProfile();
    sendBroadcastAsUser(var3,var18);
}