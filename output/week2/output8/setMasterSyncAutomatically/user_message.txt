// API: setMasterSyncAutomatically
// Service: ContentService_2

public void setMasterSyncAutomatically() {
    int var4 = UserHandle.getCallingUserId();
    setMasterSyncAutomaticallyAsUser(param2,var4);
    Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);<PATH_SEP>int var4 = UserHandle.getCallingUserId();
    setMasterSyncAutomaticallyAsUser(param2,var4);
    Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);
    writeAccountInfoLocked();
    AtomicFile var27 = this.mAccountInfoFile;
    FileOutputStream var29 = var27.startWrite();
    FastXmlSerializer var30 = new FastXmlSerializer();
    Charset var32 = UTF_8;
    String var34 = var32.name();
    var30.setOutput(var29,var34);
    Boolean var38 = Boolean.valueOf(1);
    var30.startDocument(0,var38);
    var30.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var43 = var30.startTag(0,accounts);
    String var47 = Integer.toString(3);<PATH_SEP>int var4 = UserHandle.getCallingUserId();
    setMasterSyncAutomaticallyAsUser(param2,var4);
    Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);
    writeAccountInfoLocked();
    AtomicFile var15 = this.mAccountInfoFile;
    File var17 = var15.getBaseFile();
    AtomicFile var27 = this.mAccountInfoFile;
    FileOutputStream var29 = var27.startWrite();
    FastXmlSerializer var30 = new FastXmlSerializer();
    Charset var32 = UTF_8;
    String var34 = var32.name();
    var30.setOutput(var29,var34);
    Boolean var38 = Boolean.valueOf(1);
    var30.startDocument(0,var38);
    var30.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var43 = var30.startTag(0,accounts);
    String var47 = Integer.toString(3);
    XmlSerializer var49 = var30.attribute(0,version,var47);
    int var51 = this.mNextAuthorityId;
    String var53 = Integer.toString(var51);
    XmlSerializer var55 = var30.attribute(0,nextAuthorityId,var53);
    int var57 = this.mSyncRandomOffset;
    String var59 = Integer.toString(var57);
    XmlSerializer var61 = var30.attribute(0,offsetInSeconds,var59);
    SparseArray var62 = this.mMasterSyncAutomatically;
    int var64 = var62.size();
    SparseArray var67 = this.mMasterSyncAutomatically;
    int var69 = var67.keyAt(var90);
    SparseArray var70 = this.mMasterSyncAutomatically;
    Object var72 = var70.valueAt(var90);
    Boolean var73 = (Boolean) var72;
    XmlSerializer var75 = var30.startTag(0,listenForTickles);
    String var77 = Integer.toString(var69);<PATH_SEP>int var4 = UserHandle.getCallingUserId();
    setMasterSyncAutomaticallyAsUser(param2,var4);
    Context var14 = this.mContext;
    int var19 = Binder.getCallingUid();
    int var21 = Binder.getCallingPid();
    long var23 = ContentService.clearCallingIdentity();
    SyncManager var25 = getSyncManager();
    SyncStorageEngine var28 = var25.getSyncStorageEngine();
    int var30 = getSyncExemptionForCaller(var19);
    var28.setMasterSyncAutomatically(param2,param3,var30,var19,var21);
    Object var9 = new Object(8);
    arraystore 9[10] = 11;
    Boolean var13 = Boolean.valueOf(param2);
    arraystore 9[14] = 13;
    arraystore 9[15] = 16;
    Integer var18 = Integer.valueOf(param3);
    arraystore 9[19] = 18;
    arraystore 9[20] = 21;
    Integer var23 = Integer.valueOf(param5);
    arraystore 9[24] = 23;
    arraystore 9[25] = 26;
    Integer var28 = Integer.valueOf(param6);
    arraystore 9[29] = 28;
    SparseArray var31 = this.mAuthorities;
    SparseArray var32 = this.mMasterSyncAutomatically;
    Object var34 = var32.get(param3);
    Boolean var35 = (Boolean) var34;
    Boolean var37 = Boolean.valueOf(param2);
    boolean var39 = var35.equals(var37);
    SparseArray var43 = this.mMasterSyncAutomatically;
    Boolean var45 = Boolean.valueOf(param2);
    var43.put(param3,var45);
    writeAccountInfoLocked();
    AtomicFile var15 = this.mAccountInfoFile;
    File var17 = var15.getBaseFile();
    AtomicFile var27 = this.mAccountInfoFile;
    FileOutputStream var29 = var27.startWrite();
    FastXmlSerializer var30 = new FastXmlSerializer();
    Charset var32 = UTF_8;
    String var34 = var32.name();
    var30.setOutput(var29,var34);
    Boolean var38 = Boolean.valueOf(1);
    var30.startDocument(0,var38);
    var30.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var43 = var30.startTag(0,accounts);
    String var47 = Integer.toString(3);
    XmlSerializer var49 = var30.attribute(0,version,var47);
    int var51 = this.mNextAuthorityId;
    String var53 = Integer.toString(var51);
    XmlSerializer var55 = var30.attribute(0,nextAuthorityId,var53);
    int var57 = this.mSyncRandomOffset;
    String var59 = Integer.toString(var57);
    XmlSerializer var61 = var30.attribute(0,offsetInSeconds,var59);
    SparseArray var62 = this.mMasterSyncAutomatically;
    int var64 = var62.size();
    SparseArray var93 = this.mAuthorities;
    int var95 = var93.size();
    XmlSerializer var148 = var30.endTag(0,accounts);
    var30.endDocument();
    AtomicFile var150 = this.mAccountInfoFile;
    var150.finishWrite(var29);
}