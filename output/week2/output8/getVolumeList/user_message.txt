// API: getVolumeList
// Service: StorageManagerService_4

public void getVolumeList() {
    int var6 = UserHandle.getUserId(param2);
    var8 = param4 and 256;
    var13 = param4 and 512;
    var16 = param4 and 1024;
    long var21 = Binder.clearCallingIdentity();
    StorageManagerService$StorageManagerInternalImpl var24 = this.mStorageManagerInternal;
    boolean var28 = var24.hasExternalStorage(param2,param3);
    Binder.restoreCallingIdentity(var21);
    ArrayList var35 = new ArrayList();
    Object var37 = this.mLock;
    ArrayMap var38 = this.mVolumes;
    int var40 = var38.size();
    ArrayMap var41 = this.mVolumes;
    Object var43 = var41.valueAt(var93);
    VolumeInfo var44 = (VolumeInfo) var43;
    int var46 = var44.getType();
    boolean var53 = var44.isVisibleForRead(var6);
    int var70 = var44.getType();
    Context var76 = this.mContext;
    StorageVolume var78 = var44.buildStorageVolume(var76,var6,var73);
    boolean var80 = var44.isPrimary();
    var35.add(0,var78);<PATH_SEP>int var6 = UserHandle.getUserId(param2);
    var8 = param4 and 256;
    var13 = param4 and 512;
    var16 = param4 and 1024;
    long var21 = Binder.clearCallingIdentity();
    StorageManagerService$StorageManagerInternalImpl var24 = this.mStorageManagerInternal;
    boolean var28 = var24.hasExternalStorage(param2,param3);
    Binder.restoreCallingIdentity(var21);
    ArrayList var35 = new ArrayList();
    Object var37 = this.mLock;
    ArrayMap var38 = this.mVolumes;
    int var40 = var38.size();
    boolean var103 = SystemProperties.getBoolean(ro.vold.primary_physical,0);
    File var106 = Environment.getLegacyExternalStorageDirectory();
    Context var107 = this.mContext;
    String var110 = var107.getString(17039374);
    var111 = var103 xor 1;
    UserHandle var113 = new UserHandle();
    StorageVolume var116 = new StorageVolume();
    var35.add(0,var116);
    int var130 = var35.size();
    StorageVolume var131 = new StorageVolume(var130);
    Object var133 = var35.toArray(var131);
    StorageVolume var134 = (StorageVolume) var133;
    int var6 = UserHandle.getUserId(param2);
    var8 = param4 and 256;
    var13 = param4 and 512;
    var16 = param4 and 1024;
    long var21 = Binder.clearCallingIdentity();
    StorageManagerService$StorageManagerInternalImpl var24 = this.mStorageManagerInternal;
    boolean var28 = var24.hasExternalStorage(param2,param3);
    Binder.restoreCallingIdentity(var21);
    ArrayList var35 = new ArrayList();
    Object var37 = this.mLock;
    ArrayMap var38 = this.mVolumes;
    int var40 = var38.size();
    ArrayMap var41 = this.mVolumes;
    Object var43 = var41.valueAt(var93);
    VolumeInfo var44 = (VolumeInfo) var43;
    int var46 = var44.getType();
    boolean var51 = var44.isVisibleForWrite(var6);
    Context var76 = this.mContext;
    StorageVolume var78 = var44.buildStorageVolume(var76,var6,var73);
    boolean var80 = var44.isPrimary();
    boolean var83 = var35.add(var78);<PATH_SEP>int var6 = UserHandle.getUserId(param2);
    var8 = param4 and 256;
    var13 = param4 and 512;
    var16 = param4 and 1024;
    long var21 = Binder.clearCallingIdentity();
    StorageManagerService$StorageManagerInternalImpl var24 = this.mStorageManagerInternal;
    boolean var28 = var24.hasExternalStorage(param2,param3);
    Binder.restoreCallingIdentity(var21);
    ArrayList var35 = new ArrayList();
    Object var37 = this.mLock;
    ArrayMap var38 = this.mVolumes;
    int var40 = var38.size();
    ArrayMap var41 = this.mVolumes;
    Object var43 = var41.valueAt(var93);
    VolumeInfo var44 = (VolumeInfo) var43;
    int var46 = var44.getType();
    boolean var51 = var44.isVisibleForWrite(var6);
    int var70 = var44.getType();
    Context var76 = this.mContext;
    StorageVolume var78 = var44.buildStorageVolume(var76,var6,var73);
    boolean var80 = var44.isPrimary();
    boolean var83 = var35.add(var78);
}