// API: setPackageStoppedState
// Service: PackageManagerService_4

public void setPackageStoppedState() {
    UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    String var12 = getInstantAppPackageName(var10);
    Context var13 = this.mContext;
    PermissionManagerServiceInternal var19 = this.mPermissionManager;
    ArrayMap var22 = this.mPackages;
    Settings var23 = this.mSettings;
    ArrayMap var24 = var23.mPackages;
    Object var28 = var24.get(param2);
    PackageSetting var29 = (PackageSetting) var28;
    boolean var31 = filterAppAccessLPr(var29,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var43 = this.mComponentResolver;
    PackageParser$Activity var45 = var43.getActivity(param2);
    ActivityInfo var46 = var45.info;
    int var47 = var46.flags;
    var48 = 1048576 and var47;
    ActivityInfo var50 = var45.info;
    int var51 = var50.flags;
    var52 = 2097152 and var51;
    boolean var54<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    String var12 = getInstantAppPackageName(var10);
    Context var13 = this.mContext;
    PermissionManagerServiceInternal var19 = this.mPermissionManager;
    ArrayMap var22 = this.mPackages;
    Settings var23 = this.mSettings;
    ArrayMap var24 = var23.mPackages;
    Object var28 = var24.get(param2);
    PackageSetting var29 = (PackageSetting) var28;
    boolean var31 = filterAppAccessLPr(var29,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    var52 = var51 xor 1;
    boolean var52<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    String var12 = getInstantAppPackageName(var10);
    Context var13 = this.mContext;
    PermissionManagerServiceInternal var19 = this.mPermissionManager;
    ArrayMap var22 = this.mPackages;
    Settings var23 = this.mSettings;
    ArrayMap var24 = var23.mPackages;
    Object var28 = var24.get(param2);
    PackageSetting var29 = (PackageSetting) var28;
    boolean var31 = filterAppAccessLPr(var29,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    ComponentResolver var13 = this.mComponentResolver;
    PackageParser$Provider var15 = var13.getProvider(param2);
    boolean var20<PATH_SEP>UserManagerService var5 = sUserManager;
    boolean var7 = var5.exists(param4);
    int var10 = Binder.getCallingUid();
    String var12 = getInstantAppPackageName(var10);
    Context var13 = this.mContext;
    PermissionManagerServiceInternal var19 = this.mPermissionManager;
    ArrayMap var22 = this.mPackages;
    Settings var23 = this.mSettings;
    ArrayMap var24 = var23.mPackages;
    Object var28 = var24.get(param2);
    PackageSetting var29 = (PackageSetting) var28;
    boolean var31 = filterAppAccessLPr(var29,var10,param4);
    boolean var7 = filterAppAccessLPr(param2,param3,0,0,param4);
    boolean var8 = Process.isIsolated(param3);
    SparseIntArray var10 = this.mIsolatedOwners;
    int var12 = var10.get(param3);
    String var18 = getInstantAppPackageName(var14);
    String var21 = param2.name;
    boolean var36 = getInstantApp(param6);
    ArrayMap var40 = this.mInstrumentation;
    Object var42 = var40.get(param4);
    PackageParser$Instrumentation var43 = (PackageParser$Instrumentation) var42;
    InstrumentationInfo var44 = var43.info;
    String var45 = var44.targetPackage;
    boolean var51 = isComponentVisibleToInstantApp(param4,param5);
    var52 = var51 xor 1;
    boolean var52;
}