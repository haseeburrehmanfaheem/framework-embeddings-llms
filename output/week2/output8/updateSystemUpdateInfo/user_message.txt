// API: updateSystemUpdateInfo
// Service: SystemUpdateManagerService_2

public void updateSystemUpdateInfo() {
    Context var3 = this.mContext;
    int var10 = getInt(status,0);
    int var12 = Binder.getCallingUid();
    int var13 = this.mLastUid;
    Object var20 = this.mLock;
    saveSystemUpdateInfoLocked(param2,var12);
    PersistableBundle var4 = new PersistableBundle();
    var4.putPersistableBundle(info-bundle,param2);
    var4.putInt(version,0);
    var4.putInt(uid,param3);
    int var14 = getBootCount();
    var4.putInt(boot-count,var14);
    boolean var18 = writeInfoFileLocked(var4);
    AtomicFile var5 = this.mFile;
    FileOutputStream var7 = var5.startWrite();
    FastXmlSerializer var8 = new FastXmlSerializer();
    Charset var10 = UTF_8;
    String var12 = var10.name();
    var8.setOutput(var7,var12);
    Boolean var16 = Boolean.valueOf(1);
    var8.startDocument(0,var16);
    XmlSerializer var19 = var8.startTag(0,info);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
    append(58);
    append(param3);<PATH_SEP>Context var3 = this.mContext;
    int var10 = getInt(status,0);
    int var12 = Binder.getCallingUid();
    int var13 = this.mLastUid;
    Object var20 = this.mLock;
    saveSystemUpdateInfoLocked(param2,var12);
    PersistableBundle var4 = new PersistableBundle();
    var4.putPersistableBundle(info-bundle,param2);
    var4.putInt(version,0);
    var4.putInt(uid,param3);
    int var14 = getBootCount();
    var4.putInt(boot-count,var14);
    boolean var18 = writeInfoFileLocked(var4);
    AtomicFile var5 = this.mFile;
    FileOutputStream var7 = var5.startWrite();
    FastXmlSerializer var8 = new FastXmlSerializer();
    Charset var10 = UTF_8;
    String var12 = var10.name();
    var8.setOutput(var7,var12);
    Boolean var16 = Boolean.valueOf(1);
    var8.startDocument(0,var16);
    XmlSerializer var19 = var8.startTag(0,info);<PATH_SEP>Context var3 = this.mContext;
    int var10 = getInt(status,0);
    int var12 = Binder.getCallingUid();
    int var13 = this.mLastUid;
    Object var20 = this.mLock;
    saveSystemUpdateInfoLocked(param2,var12);
    PersistableBundle var4 = new PersistableBundle();
    var4.putPersistableBundle(info-bundle,param2);
    var4.putInt(version,0);
    var4.putInt(uid,param3);
    int var14 = getBootCount();
    var4.putInt(boot-count,var14);
    boolean var18 = writeInfoFileLocked(var4);
    AtomicFile var5 = this.mFile;
    FileOutputStream var7 = var5.startWrite();
    FastXmlSerializer var8 = new FastXmlSerializer();
    Charset var10 = UTF_8;
    String var12 = var10.name();
    var8.setOutput(var7,var12);
    Boolean var16 = Boolean.valueOf(1);
    var8.startDocument(0,var16);
    XmlSerializer var19 = var8.startTag(0,info);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Context var3 = this.mContext;
    int var10 = getInt(status,0);
    int var12 = Binder.getCallingUid();
    int var13 = this.mLastUid;
    Object var20 = this.mLock;
    saveSystemUpdateInfoLocked(param2,var12);
    PersistableBundle var4 = new PersistableBundle();
    var4.putPersistableBundle(info-bundle,param2);
    var4.putInt(version,0);
    var4.putInt(uid,param3);
    int var14 = getBootCount();
    var4.putInt(boot-count,var14);
    boolean var18 = writeInfoFileLocked(var4);
    AtomicFile var5 = this.mFile;
    FileOutputStream var7 = var5.startWrite();
    FastXmlSerializer var8 = new FastXmlSerializer();
    Charset var10 = UTF_8;
    String var12 = var10.name();
    var8.setOutput(var7,var12);
    Boolean var16 = Boolean.valueOf(1);
    var8.startDocument(0,var16);
    XmlSerializer var19 = var8.startTag(0,info);
    boolean var4 = this.mInTag;
    append(;
}