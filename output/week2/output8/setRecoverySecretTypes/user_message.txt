// API: setRecoverySecretTypes
// Service: LockSettingsService_2

public void setRecoverySecretTypes() {
    RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.setRecoverySecretTypes(param2);
    Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);{Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);};
    int var8 = UserHandle.getCallingUserId();
    int var10 = Binder.getCallingUid();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    [I var13 = var11.getRecoverySecretTypes(var8,var10);
    boolean var15 = Arrays.equals(param2,var13);
    RecoverableKeyStoreDb var18 = this.mDatabase;
    long var20 = var18.setRecoverySecretTypes(var8,var10,param2);
    var22 = var20 lt 0;
    27 = arraylength 13;
    RecoverableKeyStoreDb var31 = this.mDatabase;
    Long var33 = var31.getSnapshotVersion(var8,var10);
    Long var6 = getLong(param2,param3,snapshot_version);
    RecoverableKeyStoreDbHelper var5 = this.mKeyStoreDbHelper;
    SQLiteDatabase var7 = var5.getReadableDatabase();
    String var9 = new String(4);
    arraystore 9[10] = 11;
    arraystore 9[12] = 13;
    arraystore 9[14] = 15;
    arraystore 9[16] = 4;
    String var18 = new String(2);
    String var20 = Integer.toString(param2);
    arraystore 18[10] = 20;
    String var22 = Integer.toString(param3);
    arraystore 18[12] = 22;
    Cursor var25 = var7.query(recovery_service_metadata,var9,user_id = ? AND uid = ?,var18,0,0,0);
    int var27 = var25.getCount();
    Locale var41 = US;
    Object var43 = new Object(3);
    Integer var45 = Integer.valueOf(var27);
    arraystore 43[10] = 45;
    Integer var47 = Integer.valueOf(param2);
    arraystore 43[12] = 47;
    Integer var49 = Integer.valueOf(param3);
    arraystore 43[14] = 49;
    String var51 = String.format(var41,%d entries found for userId=%d uid=%d. Should only ever be 0 or 1.,var43);<PATH_SEP>RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.setRecoverySecretTypes(param2);
    Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);{Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);};
    int var8 = UserHandle.getCallingUserId();
    int var10 = Binder.getCallingUid();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    [I var13 = var11.getRecoverySecretTypes(var8,var10);
    boolean var15 = Arrays.equals(param2,var13);
    RecoverableKeyStoreDb var18 = this.mDatabase;
    long var20 = var18.setRecoverySecretTypes(var8,var10,param2);
    var22 = var20 lt 0;
    27 = arraylength 13;
    RecoverableKeyStoreDb var31 = this.mDatabase;
    Long var33 = var31.getSnapshotVersion(var8,var10);
    Long var6 = getLong(param2,param3,snapshot_version);
    RecoverableKeyStoreDbHelper var5 = this.mKeyStoreDbHelper;
    SQLiteDatabase var7 = var5.getReadableDatabase();
    String var9 = new String(4);
    arraystore 9[10] = 11;
    arraystore 9[12] = 13;
    arraystore 9[14] = 15;
    arraystore 9[16] = 4;
    String var18 = new String(2);
    String var20 = Integer.toString(param2);
    arraystore 18[10] = 20;
    String var22 = Integer.toString(param3);
    arraystore 18[12] = 22;
    Cursor var25 = var7.query(recovery_service_metadata,var9,user_id = ? AND uid = ?,var18,0,0,0);
    int var27 = var25.getCount();
    boolean var29 = var25.moveToFirst();
    int var31 = var25.getColumnIndexOrThrow(param4);
    boolean var33 = var25.isNull(var31);
    long var35 = var25.getLong(var31);
    Long var37 = Long.valueOf(var35);
    RecoverableKeyStoreDb.$closeResource(0,var25);
    Ljava/lang/Long var37<PATH_SEP>RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.setRecoverySecretTypes(param2);
    Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);{Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);};
    int var8 = UserHandle.getCallingUserId();
    int var10 = Binder.getCallingUid();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    [I var13 = var11.getRecoverySecretTypes(var8,var10);
    RecoverableKeyStoreDbHelper var4 = this.mKeyStoreDbHelper;
    SQLiteDatabase var6 = var4.getReadableDatabase();
    String var11 = new String(4);
    String var15 = new String(2);
    String var17 = Integer.toString(param2);
    arraystore 15[18] = 17;
    String var20 = Integer.toString(param3);
    arraystore 15[21] = 20;
    Cursor var24 = var6.query(recovery_service_metadata,var11,user_id = ? AND uid = ?,var15,0,0,0);
    int var26 = var24.getCount();
    boolean var29 = var24.moveToFirst();
    int var31 = var24.getColumnIndexOrThrow(secret_types);
    boolean var33 = var24.isNull(var31);
    String var35 = var24.getString(var31);
    boolean var37 = TextUtils.isEmpty(var35);
    [I var70 = new [I(0);
    RecoverableKeyStoreDb.$closeResource(0,var24);
    RecoverableKeyStoreManager var3 = this.mRecoverableKeyStoreManager;
    var3.setRecoverySecretTypes(param2);
    Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);{Object var6 = Preconditions.checkNotNull(param2,secretTypes is null);};
    int var8 = UserHandle.getCallingUserId();
    int var10 = Binder.getCallingUid();
    RecoverableKeyStoreDb var11 = this.mDatabase;
    [I var13 = var11.getRecoverySecretTypes(var8,var10);
    RecoverableKeyStoreDbHelper var4 = this.mKeyStoreDbHelper;
    SQLiteDatabase var6 = var4.getReadableDatabase();
    String var11 = new String(4);
    String var15 = new String(2);
    String var17 = Integer.toString(param2);
    arraystore 15[18] = 17;
    String var20 = Integer.toString(param3);
    arraystore 15[21] = 20;
    Cursor var24 = var6.query(recovery_service_metadata,var11,user_id = ? AND uid = ?,var15,0,0,0);
    int var26 = var24.getCount();
    boolean var29 = var24.moveToFirst();
    int var31 = var24.getColumnIndexOrThrow(secret_types);
    boolean var33 = var24.isNull(var31);
    String var35 = var24.getString(var31);
    boolean var37 = TextUtils.isEmpty(var35);
    String var40 = var35.split(,);
    41 = arraylength 40;
    [I var42 = new [I(var41);
    43 = arraylength 40;
    RecoverableKeyStoreDb.$closeResource(0,var24);
    [I var42;
}