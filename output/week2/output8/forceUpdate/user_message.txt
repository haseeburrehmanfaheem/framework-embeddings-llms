// API: forceUpdate
// Service: NetworkStatsService_1

public void forceUpdate() {
    Context var2 = this.mContext;
    assertBandwidthControlEnabled();
    long var8 = Binder.clearCallingIdentity();
    performPoll(3);
    Object var3 = this.mStatsLock;
    performPollLocked(param2);
    boolean var3 = this.mSystemReady;
    boolean var5 = LOGV;
    String var13 = Integer.toHexString(param2);
    Trace.traceBegin(2097152,performPollLocked);
    var28 = param2 and 1;
    var32 = param2 and 2;
    var35 = param2 and 256;
    Clock var37 = this.mClock;
    long var39 = var37.millis();
    recordSnapshotLocked(var39);
    Trace.traceBegin(2097152,[persisting]);
    Trace.traceEnd(2097152);
    NetworkStatsService$NetworkStatsSettings var69 = this.mSettings;
    boolean var71 = var69.getSampleEnabled();
    performSampleLocked();
    Intent var74 = new Intent();
    Intent var79 = var74.setFlags(1073741824);<PATH_SEP>Context var2 = this.mContext;
    assertBandwidthControlEnabled();
    long var8 = Binder.clearCallingIdentity();
    performPoll(3);
    Object var3 = this.mStatsLock;
    performPollLocked(param2);
    boolean var3 = this.mSystemReady;
    boolean var5 = LOGV;
    String var13 = Integer.toHexString(param2);
    Trace.traceBegin(2097152,performPollLocked);
    var28 = param2 and 1;
    var32 = param2 and 2;
    var35 = param2 and 256;
    Clock var37 = this.mClock;
    long var39 = var37.millis();
    recordSnapshotLocked(var39);
    Trace.traceBegin(2097152,[persisting]);
    NetworkStatsRecorder var58 = this.mDevRecorder;
    var58.forcePersistLocked(var39);
    NetworkStatsRecorder var60 = this.mXtRecorder;
    var60.forcePersistLocked(var39);
    NetworkStatsRecorder var62 = this.mUidRecorder;
    var62.forcePersistLocked(var39);
    NetworkStatsRecorder var64 = this.mUidTagRecorder;
    var64.forcePersistLocked(var39);
    Trace.traceEnd(2097152);
    NetworkStatsService$NetworkStatsSettings var69 = this.mSettings;
    boolean var71 = var69.getSampleEnabled();
    performSampleLocked();
    Clock var2 = this.mClock;
    long var4 = var2.millis();
    NetworkTemplate var6 = NetworkTemplate.buildTemplateMobileWildcard();
    NetworkStatsRecorder var7 = this.mDevRecorder;
    NetworkStats$Entry var9 = var7.getTotalSinceBootLocked(var6);
    NetworkStatsRecorder var10 = this.mXtRecorder;
    NetworkStats$Entry var12 = var10.getTotalSinceBootLocked(var6);
    NetworkStatsRecorder var13 = this.mUidRecorder;
    NetworkStats$Entry var15 = var13.getTotalSinceBootLocked(var6);
    long var16 = var9.rxBytes;
    long var17 = var9.rxPackets;
    long var18 = var9.txBytes;
    long var19 = var9.txPackets;
    long var20 = var12.rxBytes;
    long var21 = var12.rxPackets;
    long var22 = var12.txBytes;
    long var23 = var12.txPackets;
    long var24 = var15.rxBytes;
    long var25 = var15.rxPackets;
    long var26 = var15.txBytes;
    long var27 = var15.txPackets;
    NetworkTemplate var30 = NetworkTemplate.buildTemplateWifiWildcard();
    NetworkStatsRecorder var31 = this.mDevRecorder;
    NetworkStats$Entry var33 = var31.getTotalSinceBootLocked(var30);
    NetworkStatsRecorder var34 = this.mXtRecorder;
    NetworkStats$Entry var36 = var34.getTotalSinceBootLocked(var30);
    NetworkStatsRecorder var37 = this.mUidRecorder;
    NetworkStats$Entry var39 = var37.getTotalSinceBootLocked(var30);
    long var40 = var33.rxBytes;
    long var41 = var33.rxPackets;
    long var42 = var33.txBytes;
    long var43 = var33.txPackets;
    long var44 = var36.rxBytes;
    long var45 = var36.rxPackets;
    long var46 = var36.txBytes;
    long var47 = var36.txPackets;
    long var48 = var39.rxBytes;
    long var49 = var39.rxPackets;
    long var50 = var39.txBytes;
    long var51 = var39.txPackets;<PATH_SEP>Context var2 = this.mContext;
    assertBandwidthControlEnabled();
    long var8 = Binder.clearCallingIdentity();
    performPoll(3);
    Object var3 = this.mStatsLock;
    performPollLocked(param2);
    boolean var3 = this.mSystemReady;
    boolean var5 = LOGV;
    String var13 = Integer.toHexString(param2);
    Trace.traceBegin(2097152,performPollLocked);
    var28 = param2 and 1;
    var32 = param2 and 2;
    var35 = param2 and 256;
    Clock var37 = this.mClock;
    long var39 = var37.millis();
    recordSnapshotLocked(var39);
    Trace.traceBegin(2097152,[persisting]);
    NetworkStatsRecorder var48 = this.mDevRecorder;
    var48.maybePersistLocked(var39);
    NetworkStatsRecorder var50 = this.mXtRecorder;
    var50.maybePersistLocked(var39);
    NetworkStatsRecorder var54 = this.mUidRecorder;
    var54.maybePersistLocked(var39);
    NetworkStatsRecorder var56 = this.mUidTagRecorder;
    var56.maybePersistLocked(var39);
    Trace.traceEnd(2097152);
    NetworkStatsService$NetworkStatsSettings var69 = this.mSettings;
    boolean var71 = var69.getSampleEnabled();
    performSampleLocked();<PATH_SEP>Context var2 = this.mContext;
    assertBandwidthControlEnabled();
    long var8 = Binder.clearCallingIdentity();
    performPoll(3);
    Object var3 = this.mStatsLock;
    performPollLocked(param2);
    boolean var3 = this.mSystemReady;
    boolean var5 = LOGV;
    String var13 = Integer.toHexString(param2);
    Trace.traceBegin(2097152,performPollLocked);
    var28 = param2 and 1;
    var32 = param2 and 2;
    var35 = param2 and 256;
    Clock var37 = this.mClock;
    long var39 = var37.millis();
    recordSnapshotLocked(var39);
    Trace.traceBegin(2097152,[persisting]);
    NetworkStatsRecorder var54 = this.mUidRecorder;
    var54.maybePersistLocked(var39);
    NetworkStatsRecorder var56 = this.mUidTagRecorder;
    var56.maybePersistLocked(var39);
    Trace.traceEnd(2097152);
    NetworkStatsService$NetworkStatsSettings var69 = this.mSettings;
    boolean var71 = var69.getSampleEnabled();
    performSampleLocked();
    Intent var74 = new Intent();
    Intent var79 = var74.setFlags(1073741824);
    Context var80 = this.mContext;
    UserHandle var81 = ALL;
    var80.sendBroadcastAsUser(var74,var81,android.permission.READ_NETWORK_USAGE_HISTORY);
}