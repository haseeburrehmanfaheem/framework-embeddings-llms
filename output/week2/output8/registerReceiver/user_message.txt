// API: registerReceiver
// Service: ActivityManagerService_8

public void registerReceiver() {
    var13 = param8 and 1;
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var27 = getRecordForAppLocked(param2);
    ApplicationInfo var51 = var27.info;
    int var52 = var51.uid;
    ProcessRecord$PackageList var53 = var27.pkgList;
    boolean var55 = var53.containsKey(param3);
    boolean var58 = equals(param3);
    ApplicationInfo var78 = var27.info;
    int var79 = var78.uid;
    int var80 = var27.pid;
    boolean var99 = isInstantApp(var95,var94,var93);
    int var6 = UserHandle.getAppId(param4);
    IPackageManager var10 = AppGlobals.getPackageManager();
    String var12 = var10.getPackagesForUid(param4);
    13 = arraylength 12;
    17 = arrayload 12[7];
    AppOpsService var23 = this.mAppOpsService;
    int var27 = UserHandle.getUserId(param4);
    boolean var29 = var10.isInstantApp(var20,var27);
    boolean var29<PATH_SEP>var13 = param8 and 1;
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var27 = getRecordForAppLocked(param2);
    ApplicationInfo var51 = var27.info;
    int var52 = var51.uid;
    ProcessRecord$PackageList var53 = var27.pkgList;
    boolean var55 = var53.containsKey(param3);
    boolean var58 = equals(param3);
    ApplicationInfo var78 = var27.info;
    int var79 = var78.uid;
    int var80 = var27.pid;
    boolean var99 = isInstantApp(var95,var94,var93);
    UserController var100 = this.mUserController;
    int var103 = var100.handleIncomingUser(var92,var93,param7,1,2,registerReceiver,var94);
    Iterator var109 = actionsIterator();
    ArrayList var110 = new ArrayList();
    boolean var113 = var110.add(0);
    Iterator var115 = var110.iterator();
    [I var120 = new [I(2);
    arraystore 120[11] = 121;
    int var123 = UserHandle.getUserId(var93);
    arraystore 120[14] = 123;
    Object var134 = var116.next();
    String var135 = (String) var134;
    136 = arraylength 120;
    137 = arrayload 120[160];
    SparseArray var138 = this.mStickyBroadcasts;
    Object var140 = var138.get(var137);
    ArrayMap var141 = (ArrayMap) var140;
    Object var143 = var141.get(var135);
    ArrayList var144 = (ArrayList) var143;
    ArrayList var145 = new ArrayList();
    boolean var152 = var147.addAll(var144);<PATH_SEP>var13 = param8 and 1;
    ActivityManagerService.boostPriorityForLockedSection();
    ThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var12 = var5.tid;
    int var13 = this.mBoostToPriority;
    Process.setThreadPriority(var12,var13);
    var5.prevPriority = var10;
    int var19 = var5.regionCounter;
    var21 = var19 add 1;
    var5.regionCounter = var21;<PATH_SEP>var13 = param8 and 1;
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var27 = getRecordForAppLocked(param2);
    ApplicationInfo var51 = var27.info;
    int var52 = var51.uid;
    ProcessRecord$PackageList var53 = var27.pkgList;
    boolean var55 = var53.containsKey(param3);
    boolean var58 = equals(param3);
    ApplicationInfo var78 = var27.info;
    int var79 = var78.uid;
    int var80 = var27.pid;
    boolean var99 = isInstantApp(var95,var94,var93);
    UserController var100 = this.mUserController;
    int var103 = var100.handleIncomingUser(var92,var93,param7,1,2,registerReceiver,var94);
    Iterator var109 = actionsIterator();
    ArrayList var110 = new ArrayList();
    boolean var113 = var110.add(0);
    Iterator var115 = var110.iterator();
    [I var120 = new [I(2);
    arraystore 120[11] = 121;
    int var123 = UserHandle.getUserId(var93);
    arraystore 120[14] = 123;
    ActivityManagerService.resetPriorityAfterLockedSection();
    ThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
}