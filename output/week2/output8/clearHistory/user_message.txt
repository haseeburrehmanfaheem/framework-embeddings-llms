// API: clearHistory
// Service: AppOpsService_1

public void clearHistory() {
    Context var2 = this.mContext;
    HistoricalRegistry var6 = this.mHistoricalRegistry;
    var6.clearHistory();
    Object var2 = this.mOnDiskLock;
    Object var3 = this.mInMemoryLock;
    boolean var5 = isPersistenceInitializedMLocked();
    clearHistoryOnDiskDLocked();
    Handler var3 = BackgroundThread.getHandler();
    var3.removeMessages(1);
    Object var6 = this.mInMemoryLock;
    this.mCurrentHistoricalOps = 0;
    long var9 = System.currentTimeMillis();
    this.mNextPersistDueTimeMillis = var9;<PATH_SEP>Context var2 = this.mContext;
    HistoricalRegistry var6 = this.mHistoricalRegistry;
    var6.clearHistory();
    Object var2 = this.mOnDiskLock;
    Object var3 = this.mInMemoryLock;
    boolean var5 = isPersistenceInitializedMLocked();
    clearHistoryOnDiskDLocked();
    Handler var3 = BackgroundThread.getHandler();
    1 = load_metadata: <Application,Lcom/android/internal/os/BackgroundThread>;
    <Primordial,Ljava/lang/Class>;
    BackgroundThread.ensureThreadLocked();{BackgroundThread.ensureThreadLocked();};
    Handler var3 = sHandler;
    Landroid/os/Handler var3<PATH_SEP>Context var2 = this.mContext;
    HistoricalRegistry var6 = this.mHistoricalRegistry;
    var6.clearHistory();
    Object var2 = this.mOnDiskLock;
    Object var3 = this.mInMemoryLock;
    boolean var5 = isPersistenceInitializedMLocked();
    clearHistoryOnDiskDLocked();
    Handler var3 = BackgroundThread.getHandler();
    var3.removeMessages(1);
    Object var6 = this.mInMemoryLock;
    this.mCurrentHistoricalOps = 0;
    long var9 = System.currentTimeMillis();
    this.mNextPersistDueTimeMillis = var9;
    LinkedList var10 = this.mPendingWrites;
    var10.clear();
    HistoricalRegistry$Persistence.clearHistoryDLocked();
    AtomicDirectory var1 = sHistoricalAppOpsDir;
    this.delete();<PATH_SEP>Context var2 = this.mContext;
    HistoricalRegistry var6 = this.mHistoricalRegistry;
    var6.clearHistory();
    Object var2 = this.mOnDiskLock;
    Object var3 = this.mInMemoryLock;
    boolean var5 = isPersistenceInitializedMLocked();
    clearHistoryOnDiskDLocked();
    Handler var3 = BackgroundThread.getHandler();
    var3.removeMessages(1);
    Object var6 = this.mInMemoryLock;
    this.mCurrentHistoricalOps = 0;
}