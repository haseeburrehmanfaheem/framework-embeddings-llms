// API: mount
// Service: StorageManagerService_2

public void mount() {
    VolumeInfo var6 = findVolumeByIdOrThrow(param2);
    boolean var8 = isMountDisallowed(var6);
    Context var3 = this.mContext;
    4 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = var3.getSystemService(var4);
    UserManager var7 = (UserManager) var6;
    DiskInfo var9 = param2.disk;
    int var22 = param2.type;
    int var24 = param2.type;
    int var25 = param2.type;
    boolean var38<PATH_SEP>VolumeInfo var6 = findVolumeByIdOrThrow(param2);
    boolean var8 = isMountDisallowed(var6);
    Context var3 = this.mContext;
    4 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = var3.getSystemService(var4);
    UserManager var7 = (UserManager) var6;
    DiskInfo var9 = param2.disk;
    int var22 = param2.type;
    int var24 = param2.type;
    UserHandle var29 = Binder.getCallingUserHandle();
    boolean var32 = var7.hasUserRestriction(no_physical_media,var29);
    boolean var38<PATH_SEP>VolumeInfo var6 = findVolumeByIdOrThrow(param2);
    boolean var8 = isMountDisallowed(var6);
    Context var3 = this.mContext;
    4 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = var3.getSystemService(var4);
    UserManager var7 = (UserManager) var6;
    DiskInfo var9 = param2.disk;
    DiskInfo var10 = param2.disk;
    boolean var12 = var10.isUsb();
    int var22 = param2.type;
    int var24 = param2.type;
    int var25 = param2.type;
    UserHandle var29 = Binder.getCallingUserHandle();
    boolean var32 = var7.hasUserRestriction(no_physical_media,var29);
    boolean var38<PATH_SEP>VolumeInfo var6 = findVolumeByIdOrThrow(param2);
    boolean var8 = isMountDisallowed(var6);
    Context var3 = this.mContext;
    4 = load_metadata: <Application,Landroid/os/UserManager>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = var3.getSystemService(var4);
    UserManager var7 = (UserManager) var6;
    DiskInfo var9 = param2.disk;
    DiskInfo var10 = param2.disk;
    boolean var12 = var10.isUsb();
    UserHandle var14 = Binder.getCallingUserHandle();
    boolean var17 = var7.hasUserRestriction(no_usb_file_transfer,var14);
    int var22 = param2.type;
    UserHandle var29 = Binder.getCallingUserHandle();
    boolean var32 = var7.hasUserRestriction(no_physical_media,var29);
    boolean var38;
}