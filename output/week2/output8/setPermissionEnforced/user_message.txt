// API: setPermissionEnforced
// Service: PackageManagerService_3

public void setPermissionEnforced() {
    Context var4 = this.mContext;
    boolean var10 = equals(param2);
    ArrayMap var23 = this.mPackages;
    Settings var24 = this.mSettings;
    Boolean var25 = var24.mReadExternalStorageEnforced;
    Settings var26 = this.mSettings;
    Boolean var27 = var26.mReadExternalStorageEnforced;
    boolean var29 = var27.booleanValue();
    Settings var33 = this.mSettings;
    Boolean var35 = TRUE;
    var33.mReadExternalStorageEnforced = var36;
    Settings var37 = this.mSettings;
    var37.writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Boolean var51 = Boolean.valueOf(1);
    var42.startDocument(0,var51);
    var42.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var56 = var42.startTag(0,packages);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Context var4 = this.mContext;
    boolean var10 = equals(param2);
    ArrayMap var23 = this.mPackages;
    Settings var24 = this.mSettings;
    Boolean var25 = var24.mReadExternalStorageEnforced;
    Settings var26 = this.mSettings;
    Boolean var27 = var26.mReadExternalStorageEnforced;
    boolean var29 = var27.booleanValue();
    Settings var33 = this.mSettings;
    Boolean var35 = TRUE;
    var33.mReadExternalStorageEnforced = var36;
    Settings var37 = this.mSettings;
    var37.writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Boolean var51 = Boolean.valueOf(1);
    var42.startDocument(0,var51);
    var42.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var56 = var42.startTag(0,packages);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Context var4 = this.mContext;
    boolean var10 = equals(param2);
    ArrayMap var23 = this.mPackages;
    Settings var24 = this.mSettings;
    Boolean var25 = var24.mReadExternalStorageEnforced;
    Settings var26 = this.mSettings;
    Boolean var27 = var26.mReadExternalStorageEnforced;
    boolean var29 = var27.booleanValue();
    Settings var33 = this.mSettings;
    Boolean var35 = TRUE;
    var33.mReadExternalStorageEnforced = var36;
    Settings var37 = this.mSettings;
    var37.writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Boolean var51 = Boolean.valueOf(1);
    var42.startDocument(0,var51);
    var42.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var56 = var42.startTag(0,packages);
    boolean var4 = this.mInTag;
    append(<PATH_SEP>Context var4 = this.mContext;
    boolean var10 = equals(param2);
    ArrayMap var23 = this.mPackages;
    Settings var24 = this.mSettings;
    Boolean var25 = var24.mReadExternalStorageEnforced;
    Settings var26 = this.mSettings;
    Boolean var27 = var26.mReadExternalStorageEnforced;
    boolean var29 = var27.booleanValue();
    Settings var33 = this.mSettings;
    Boolean var35 = TRUE;
    var33.mReadExternalStorageEnforced = var36;
    Settings var37 = this.mSettings;
    var37.writeLPr();
    long var12 = SystemClock.uptimeMillis();
    File var13 = this.mSettingsFilename;
    boolean var15 = var13.exists();
    File var18 = this.mBackupSettingsFilename;
    boolean var20 = var18.exists();
    File var27 = this.mSettingsFilename;
    File var28 = this.mBackupSettingsFilename;
    boolean var30 = var27.renameTo(var28);
    ArrayList var34 = this.mPastSignatures;
    var34.clear();
    FileOutputStream var36 = new FileOutputStream();
    File var37 = this.mSettingsFilename;
    BufferedOutputStream var40 = new BufferedOutputStream();
    FastXmlSerializer var42 = new FastXmlSerializer();
    Charset var44 = UTF_8;
    String var46 = var44.name();
    var42.setOutput(var40,var46);
    Boolean var51 = Boolean.valueOf(1);
    var42.startDocument(0,var51);
    var42.setFeature(http://xmlpull.org/v1/doc/features.html#indent-output,1);
    XmlSerializer var56 = var42.startTag(0,packages);
    boolean var4 = this.mInTag;
    boolean var9 = this.mIndent;
    int var10 = this.mNesting;
    appendIndent(var10);
    int var14 = this.mNesting;
    var16 = var14 add 1;
    this.mNesting = var16;
    append(60);
    append(param2);
}