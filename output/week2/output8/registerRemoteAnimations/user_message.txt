// API: registerRemoteAnimations
// Service: ActivityTaskManagerService_3

public void registerRemoteAnimations() {
    ActivityManagerInternal var4 = this.mAmInternal;
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    setCallingPidUid(var9,var11);
    WindowManagerGlobalLock var13 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.boost();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    boost();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    int var8 = var5.tid;
    int var10 = Process.getThreadPriority(var8);
    int var11 = this.mBoostToPriority;
    int var12 = var5.tid;
    int var13 = this.mBoostToPriority;
    Process.setThreadPriority(var12,var13);<PATH_SEP>ActivityManagerInternal var4 = this.mAmInternal;
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    setCallingPidUid(var9,var11);
    WindowManagerGlobalLock var13 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityRecord var16 = ActivityRecord.isInStackLocked(param2);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();
    int var3 = Process.myTid();
    int var4 = this.mAnimationThreadId;
    int var5 = this.mSurfaceAnimationThreadId;
    reset();
    ThreadLocal var2 = this.mThreadState;
    Object var4 = var2.get();
    ThreadPriorityBooster$PriorityState var5 = (ThreadPriorityBooster$PriorityState) var4;
    int var6 = var5.regionCounter;
    var8 = var6 add -1;
    var5.regionCounter = var8;
    int var9 = var5.regionCounter;
    int var11 = var5.prevPriority;
    int var13 = var5.tid;
    int var14 = var5.prevPriority;
    Process.setThreadPriority(var13,var14);
    var5.prevPriority = 2147483647;<PATH_SEP>ActivityManagerInternal var4 = this.mAmInternal;
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    setCallingPidUid(var9,var11);
    SparseArray var4 = this.mTransitionAnimationMap;
    int var6 = var4.size();
    var8 = var6 add -1;
    SparseArray var10 = this.mTransitionAnimationMap;
    Object var12 = var10.valueAt(var17);
    RemoteAnimationDefinition$RemoteAnimationAdapterEntry var13 = (RemoteAnimationDefinition$RemoteAnimationAdapterEntry) var12;
    RemoteAnimationAdapter var14 = var13.adapter;
    var14.setCallingPidUid(param2,param3);<PATH_SEP>ActivityManagerInternal var4 = this.mAmInternal;
    int var9 = Binder.getCallingPid();
    int var11 = Binder.getCallingUid();
    setCallingPidUid(var9,var11);
    WindowManagerGlobalLock var13 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    ActivityRecord var16 = ActivityRecord.isInStackLocked(param2);
    ActivityRecord var3 = ActivityRecord.forTokenLocked(this);
    ActivityStack var6 = var3.getActivityStack();
    TaskRecord var2 = this.task;
    ActivityStack var5 = var2.getStack();
    ActivityStack var2 = this.mStack;
    Lcom/android/server/wm/ActivityStack var2;
}