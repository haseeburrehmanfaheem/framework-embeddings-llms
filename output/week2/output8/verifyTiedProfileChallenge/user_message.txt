// API: verifyTiedProfileChallenge
// Service: LockSettingsService_5

public void verifyTiedProfileChallenge() {
    UserManager var13 = this.mUserManager;
    UserInfo var15 = var13.getProfileParent(param5);
    int var16 = var15.id;
    VerifyCredentialResponse var19 = doVerifyCredential(param2,param3,1,param4,var16,0);
    VerifyCredentialResponse var10 = doVerifyCredential(param2,param3,param4,param5,param6,param7,0);
    10 = arraylength 2;
    Context var16 = this.mContext;
    ContentResolver var18 = var16.getContentResolver();
    int var21 = Settings$Global.getInt(var18,device_provisioned,0);
    VerifyCredentialResponse var23 = spBasedDoVerifyCredential(param2,param3,param4,param5,param6,param7,param8);
    LockSettingsService$Injector var9 = this.mInjector;
    boolean var11 = var9.hasEnrolledBiometrics(param6);
    Context var38 = this.mContext;
    PackageManager var40 = var38.getPackageManager();
    boolean var43 = var40.hasSystemFeature(android.hardware.biometrics.face);
    Context var48 = this.mContext;
    49 = load_metadata: <Application,Landroid/hardware/face/FaceManager>;
    <Primordial,Ljava/lang/Class>;
    Object var51 = var48.getSystemService(var49);
    FaceManager var52 = (FaceManager) var51;
    long var54 = var52.generateChallenge();
    SyntheticPasswordManager var63 = this.mSpManager;
    boolean var65 = isSyntheticPasswordBasedCredentialLocked(param6);
    long var68 = getSyntheticPasswordHandleLocked(param6);
    SyntheticPasswordManager var69 = this.mSpManager;
    IGateKeeperService var71 = getGateKeeperService();
    SyntheticPasswordManager$AuthenticationResult var73 = var69.unwrapPasswordBasedSyntheticPassword(var71,var68,var37,param6,param7);
    int var74 = var73.credentialType;
    VerifyCredentialResponse var75 = var73.gkResponse;
    int var77 = var75.getResponseCode();
    SyntheticPasswordManager var84 = this.mSpManager;
    IGateKeeperService var86 = getGateKeeperService();
    SyntheticPasswordManager$AuthenticationToken var87 = var73.authToken;
    VerifyCredentialResponse var94 = var84.verifyChallenge(var86,var87,var59,param6);{VerifyCredentialResponse var94 = var84.verifyChallenge(var86,var87,var59,param6);};
    int var96 = var94.getResponseCode();
    int var108 = var99.getResponseCode();
    int var110 = var99.getResponseCode();
    Lcom/android/internal/widget/VerifyCredentialResponse var99<PATH_SEP>UserManager var13 = this.mUserManager;
    UserInfo var15 = var13.getProfileParent(param5);
    int var16 = var15.id;
    VerifyCredentialResponse var19 = doVerifyCredential(param2,param3,1,param4,var16,0);
    VerifyCredentialResponse var10 = doVerifyCredential(param2,param3,param4,param5,param6,param7,0);
    10 = arraylength 2;
    Context var16 = this.mContext;
    ContentResolver var18 = var16.getContentResolver();
    int var21 = Settings$Global.getInt(var18,device_provisioned,0);
    VerifyCredentialResponse var23 = spBasedDoVerifyCredential(param2,param3,param4,param5,param6,param7,param8);
    LockSettingsService$Injector var9 = this.mInjector;
    boolean var11 = var9.hasEnrolledBiometrics(param6);
    Context var38 = this.mContext;
    PackageManager var40 = var38.getPackageManager();
    boolean var43 = var40.hasSystemFeature(android.hardware.biometrics.face);
    Context var48 = this.mContext;
    49 = load_metadata: <Application,Landroid/hardware/face/FaceManager>;
    <Primordial,Ljava/lang/Class>;
    Object var51 = var48.getSystemService(var49);
    FaceManager var52 = (FaceManager) var51;
    long var54 = var52.generateChallenge();
    SyntheticPasswordManager var63 = this.mSpManager;
    boolean var65 = isSyntheticPasswordBasedCredentialLocked(param6);
    long var68 = getSyntheticPasswordHandleLocked(param6);
    SyntheticPasswordManager var69 = this.mSpManager;
    IGateKeeperService var71 = getGateKeeperService();
    SyntheticPasswordManager$AuthenticationResult var73 = var69.unwrapPasswordBasedSyntheticPassword(var71,var68,var37,param6,param7);
    int var74 = var73.credentialType;
    VerifyCredentialResponse var75 = var73.gkResponse;
    int var77 = var75.getResponseCode();
    SyntheticPasswordManager var84 = this.mSpManager;
    IGateKeeperService var86 = getGateKeeperService();
    SyntheticPasswordManager$AuthenticationToken var87 = var73.authToken;
    VerifyCredentialResponse var94 = var84.verifyChallenge(var86,var87,var59,param6);{VerifyCredentialResponse var94 = var84.verifyChallenge(var86,var87,var59,param6);};
    int var96 = var94.getResponseCode();
    int var108 = var99.getResponseCode();
    notifyActivePasswordMetricsAvailable(param3,var37,param6);
    SyntheticPasswordManager$AuthenticationToken var120 = var73.authToken;
    [B var122 = var120.deriveKeyStorePassword();
    unlockKeystore(var122,param6);
    ArrayList var124 = new ArrayList();
    LockSettingsService$PendingResetLockout var128 = new LockSettingsService$PendingResetLockout();
    [B var130 = var99.getPayload();
    boolean var133 = var126.add(var128);
    SyntheticPasswordManager$AuthenticationToken var140 = var73.authToken;
    [B var142 = var140.deriveDiskEncryptionKey();
    153 = arraylength 142;
    unlockUser(param6,0,var142,var58,var59,var137);
    SyntheticPasswordManager$AuthenticationToken var161 = var73.authToken;
    activateEscrowTokens(var161,param6);
    LockSettingsStrongAuth var167 = this.mStrongAuth;
    var167.reportSuccessfulStrongAuthUnlock(param6);
    SyntheticPasswordManager$AuthenticationToken var169 = var73.authToken;
    onAuthTokenKnownForUser(param6,var169);
    Lcom/android/internal/widget/VerifyCredentialResponse var99<PATH_SEP>UserManager var13 = this.mUserManager;
    UserInfo var15 = var13.getProfileParent(param5);
    int var16 = var15.id;
    VerifyCredentialResponse var19 = doVerifyCredential(param2,param3,1,param4,var16,0);
    VerifyCredentialResponse var10 = doVerifyCredential(param2,param3,param4,param5,param6,param7,0);
    10 = arraylength 2;
    Context var16 = this.mContext;
    ContentResolver var18 = var16.getContentResolver();
    int var21 = Settings$Global.getInt(var18,device_provisioned,0);
    VerifyCredentialResponse var23 = spBasedDoVerifyCredential(param2,param3,param4,param5,param6,param7,param8);
    LockSettingsService$Injector var9 = this.mInjector;
    boolean var11 = var9.hasEnrolledBiometrics(param6);
    Context var38 = this.mContext;
    PackageManager var40 = var38.getPackageManager();
    boolean var43 = var40.hasSystemFeature(android.hardware.biometrics.face);
    Context var48 = this.mContext;
    49 = load_metadata: <Application,Landroid/hardware/face/FaceManager>;
    <Primordial,Ljava/lang/Class>;
    Object var51 = var48.getSystemService(var49);
    FaceManager var52 = (FaceManager) var51;
    long var54 = var52.generateChallenge();
    SyntheticPasswordManager var63 = this.mSpManager;
    boolean var65 = isSyntheticPasswordBasedCredentialLocked(param6);
    long var68 = getSyntheticPasswordHandleLocked(param6);
    SyntheticPasswordManager var69 = this.mSpManager;
    IGateKeeperService var71 = getGateKeeperService();
    SyntheticPasswordManager$AuthenticationResult var73 = var69.unwrapPasswordBasedSyntheticPassword(var71,var68,var37,param6,param7);
    int var74 = var73.credentialType;
    VerifyCredentialResponse var75 = var73.gkResponse;
    int var77 = var75.getResponseCode();
    int var108 = var99.getResponseCode();
    notifyActivePasswordMetricsAvailable(param3,var37,param6);
    SyntheticPasswordManager$AuthenticationToken var120 = var73.authToken;
    [B var122 = var120.deriveKeyStorePassword();
    unlockKeystore(var122,param6);
    ArrayList var124 = new ArrayList();
    LockSettingsService$PendingResetLockout var128 = new LockSettingsService$PendingResetLockout();
    [B var130 = var99.getPayload();
    boolean var133 = var126.add(var128);
    SyntheticPasswordManager$AuthenticationToken var140 = var73.authToken;
    UserManager var13 = this.mUserManager;
    UserInfo var15 = var13.getProfileParent(param5);
    int var16 = var15.id;
    VerifyCredentialResponse var19 = doVerifyCredential(param2,param3,1,param4,var16,0);
    VerifyCredentialResponse var10 = doVerifyCredential(param2,param3,param4,param5,param6,param7,0);
    10 = arraylength 2;
    Context var16 = this.mContext;
    ContentResolver var18 = var16.getContentResolver();
    int var21 = Settings$Global.getInt(var18,device_provisioned,0);
    VerifyCredentialResponse var23 = spBasedDoVerifyCredential(param2,param3,param4,param5,param6,param7,param8);
    LockSettingsService$Injector var9 = this.mInjector;
    boolean var11 = var9.hasEnrolledBiometrics(param6);
    Context var38 = this.mContext;
    PackageManager var40 = var38.getPackageManager();
    boolean var43 = var40.hasSystemFeature(android.hardware.biometrics.face);
    Context var48 = this.mContext;
    49 = load_metadata: <Application,Landroid/hardware/face/FaceManager>;
    <Primordial,Ljava/lang/Class>;
    Object var51 = var48.getSystemService(var49);
    FaceManager var52 = (FaceManager) var51;
    long var54 = var52.generateChallenge();
    SyntheticPasswordManager var63 = this.mSpManager;
    boolean var65 = isSyntheticPasswordBasedCredentialLocked(param6);
    long var68 = getSyntheticPasswordHandleLocked(param6);
    SyntheticPasswordManager var69 = this.mSpManager;
    IGateKeeperService var71 = getGateKeeperService();
    SyntheticPasswordManager$AuthenticationResult var73 = var69.unwrapPasswordBasedSyntheticPassword(var71,var68,var37,param6,param7);
    int var74 = var73.credentialType;
    VerifyCredentialResponse var75 = var73.gkResponse;
    int var77 = var75.getResponseCode();
    SyntheticPasswordManager var84 = this.mSpManager;
    IGateKeeperService var86 = getGateKeeperService();
    SyntheticPasswordManager$AuthenticationToken var87 = var73.authToken;
    VerifyCredentialResponse var94 = var84.verifyChallenge(var86,var87,var59,param6);{VerifyCredentialResponse var94 = var84.verifyChallenge(var86,var87,var59,param6);};
    int var96 = var94.getResponseCode();
    int var108 = var99.getResponseCode();
    notifyActivePasswordMetricsAvailable(param3,var37,param6);
    SyntheticPasswordManager$AuthenticationToken var120 = var73.authToken;
    [B var122 = var120.deriveKeyStorePassword();
    unlockKeystore(var122,param6);
    ArrayList var124 = new ArrayList();
    LockSettingsService$PendingResetLockout var128 = new LockSettingsService$PendingResetLockout();
    [B var130 = var99.getPayload();
    boolean var133 = var126.add(var128);
    SyntheticPasswordManager$AuthenticationToken var140 = var73.authToken;
    [B var142 = var140.deriveDiskEncryptionKey();
    153 = arraylength 142;
    unlockUser(param6,0,var142,var58,var59,var137);
    SyntheticPasswordManager$AuthenticationToken var161 = var73.authToken;
    activateEscrowTokens(var161,param6);
    setDeviceUnlockedForUser(param6);
}