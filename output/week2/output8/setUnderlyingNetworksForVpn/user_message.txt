// API: setUnderlyingNetworksForVpn
// Service: ConnectivityService_2

public void setUnderlyingNetworksForVpn() {
    int var4 = Binder.getCallingUid();
    int var6 = UserHandle.getUserId(var4);
    SparseArray var7 = this.mVpns;
    throwIfLockdownEnabled();
    SparseArray var9 = this.mVpns;
    Object var11 = var9.get(var6);
    Vpn var12 = (Vpn) var11;
    boolean var14 = var12.setUnderlyingNetworks(param2);
    boolean 0<PATH_SEP>int var4 = Binder.getCallingUid();
    int var6 = UserHandle.getUserId(var4);
    SparseArray var7 = this.mVpns;
    throwIfLockdownEnabled();
    SparseArray var9 = this.mVpns;
    Object var11 = var9.get(var6);
    Vpn var12 = (Vpn) var11;
    boolean var14 = var12.setUnderlyingNetworks(param2);
    VpnConfig var6 = this.mConfig;
    7 = arraylength 2;
    Network var8 = new Network(var7);
    var6.underlyingNetworks = var8;<PATH_SEP>int var4 = Binder.getCallingUid();
    int var6 = UserHandle.getUserId(var4);
    SparseArray var7 = this.mVpns;
    throwIfLockdownEnabled();
    SparseArray var9 = this.mVpns;
    Object var11 = var9.get(var6);
    Vpn var12 = (Vpn) var11;
    boolean var14 = var12.setUnderlyingNetworks(param2);
    VpnConfig var6 = this.mConfig;
    7 = arraylength 2;
    Network var8 = new Network(var7);
    var6.underlyingNetworks = var8;
    9 = arraylength 2;
    boolean 1;
}