// API: updateConfiguration
// Service: ActivityManagerService_2

public void updateConfiguration() {
    ActivityTaskManagerService var3 = this.mActivityTaskManager;
    boolean var5 = var3.updateConfiguration(param2);
    ActivityManagerInternal var3 = this.mAmInternal;
    WindowManagerGlobalLock var7 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerService var10 = this.mWindowManager;
    WindowManagerService var11 = this.mWindowManager;
    Configuration var13 = var11.computeNewConfiguration(0);
    WindowManagerService var17 = this.mWindowManager;
    -$$Lambda$ADNhW0r9Skcs9ezrOGURijI-lyQ var18 = INSTANCE;
    ActivityManagerInternal var19 = this.mAmInternal;
    Integer var21 = Integer.valueOf(0);
    Message var23 = PooledLambda.obtainMessage(var18,var19,var21);
    ActivityTaskManagerService$H var24 = this.mH;
    boolean var26 = var24.sendMessage(var23);
    long var31 = Binder.clearCallingIdentity();
    Settings$System.clearConfiguration(var15);
    ActivityTaskManagerService$UpdateConfigurationResult var35 = this.mTmpUpdateConfigurationResult;
    boolean var37 = updateConfigurationLocked(var15,0,0,0,-10000,0,var35);
    WindowManagerService var11 = this.mWindowManager;
    var11.deferSurfaceLayout();
    int var14 = updateGlobalConfigurationLocked(param2,param4,param5,param6,param7);
    Configuration var7 = this.mTempConfig;
    Configuration var9 = getGlobalConfiguration();
    var7.setTo(var9);
    Configuration var11 = this.mTempConfig;
    int var13 = var11.updateFrom(param2);
    int var19 = param2.colorMode;
    int var20 = param2.densityDpi;
    float var21 = param2.fontScale;
    int var22 = param2.hardKeyboardHidden;
    int var23 = param2.keyboard;
    int var24 = param2.keyboardHidden;
    int var25 = param2.mcc;
    int var26 = param2.mnc;
    int var27 = param2.navigation;
    int var28 = param2.navigationHidden;
    int var29 = param2.orientation;
    int var30 = param2.screenHeightDp;
    int var31 = param2.screenLayout;
    int var32 = param2.screenWidthDp;
    int var33 = param2.smallestScreenWidthDp;
    int var34 = param2.touchscreen;
    int var35 = param2.uiMode;
    LocaleList var40 = getLocales();
    boolean var42 = var40.isEmpty();
    boolean var43 = param2.userSetLocale;
    LocaleList var45 = getLocales();
    int var47 = var45.size();
    String var48 = this.mSupportedSystemLocales;
    Resources var50 = Resources.getSystem();
    AssetManager var52 = var50.getAssets();
    String var54 = var52.getLocales();
    this.mSupportedSystemLocales = var54;
    String var58 = this.mSupportedSystemLocales;
    int var60 = var45.getFirstMatchIndex(var58);
    int var62 = Math.max(0,var60);
    Locale var68 = var45.get(var63);
    String var70 = var68.toLanguageTag();
    SystemProperties.set(persist.sys.locale,var70);
    LocaleList.setDefault(var45,var63);
    -$$Lambda$ActivityTaskManagerService$U6g1UdnOPnEF9wX1OTm9nKVXY5k var74 = INSTANCE;
    Locale var76 = var45.get(var63);
    Message var78 = PooledLambda.obtainMessage(var74,this,var76);
    ActivityTaskManagerService$H var79 = this.mH;
    boolean var81 = var79.sendMessage(var78);
    Configuration var88 = this.mTempConfig;
    int var90 = increaseConfigurationSeqLocked();
    var88.seq = var90;
    RootActivityContainer var91 = this.mRootActivityContainer;
    Configuration var92 = this.mTempConfig;
    var91.onConfigurationChanged(var92);
    String var100 = Integer.toHexString(var13);
    Configuration var106 = this.mTempConfig;
    UsageStatsManagerInternal var114 = this.mUsageStatsInternal;
    Configuration var115 = this.mTempConfig;
    ActivityManagerInternal var116 = this.mAmInternal;
    int var118 = var116.getCurrentUserId();
    var114.reportConfigurationChange(var115,var118);
    Configuration var120 = this.mTempConfig;
    AttributeCache var123 = AttributeCache.instance();
    ActivityThread var128 = this.mSystemThread;
    Configuration var129 = this.mTempConfig;
    var128.applyConfigurationToResources(var129);
    Configuration var131 = new Configuration();
    Configuration var132 = this.mTempConfig;
    WindowProcessControllerMap var148 = this.mProcessMap;
    SparseArray var150 = var148.getPidMap();
    int var152 = var150.size();
    var153 = var152 sub 1;
    -$$Lambda$swA_sUfSJdP8eC8AA9Iby3-SuOY var167 = INSTANCE;
    ActivityManagerInternal var168 = this.mAmInternal;
    Integer var170 = Integer.valueOf(var13);
    Boolean var172 = Boolean.valueOf(param3);
    Message var174 = PooledLambda.obtainMessage(var167,var168,var170,var172);
    ActivityTaskManagerService$H var175 = this.mH;
    boolean var177 = var175.sendMessage(var174);
    RootActivityContainer var178 = this.mRootActivityContainer;
    Configuration var180 = var178.getConfiguration();
    int var182 = performDisplayOverrideConfigUpdate(var180,param6,0);
    int var13<PATH_SEP>ActivityTaskManagerService var3 = this.mActivityTaskManager;
    boolean var5 = var3.updateConfiguration(param2);
    ActivityManagerInternal var3 = this.mAmInternal;
    WindowManagerGlobalLock var7 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerService var10 = this.mWindowManager;
    WindowManagerService var11 = this.mWindowManager;
    Configuration var13 = var11.computeNewConfiguration(0);
    WindowManagerService var17 = this.mWindowManager;
    -$$Lambda$ADNhW0r9Skcs9ezrOGURijI-lyQ var18 = INSTANCE;
    ActivityManagerInternal var19 = this.mAmInternal;
    Integer var21 = Integer.valueOf(0);
    Message var23 = PooledLambda.obtainMessage(var18,var19,var21);
    ActivityTaskManagerService$H var24 = this.mH;
    boolean var26 = var24.sendMessage(var23);
    long var31 = Binder.clearCallingIdentity();
    Settings$System.clearConfiguration(var15);
    ActivityTaskManagerService$UpdateConfigurationResult var35 = this.mTmpUpdateConfigurationResult;
    boolean var37 = updateConfigurationLocked(var15,0,0,0,-10000,0,var35);
    WindowManagerService var11 = this.mWindowManager;
    var11.deferSurfaceLayout();
    int var14 = updateGlobalConfigurationLocked(param2,param4,param5,param6,param7);
    Configuration var7 = this.mTempConfig;
    Configuration var9 = getGlobalConfiguration();
    var7.setTo(var9);
    Configuration var11 = this.mTempConfig;
    int var13 = var11.updateFrom(param2);
    int var19 = param2.colorMode;
    int var20 = param2.densityDpi;
    float var21 = param2.fontScale;
    int var22 = param2.hardKeyboardHidden;
    int var23 = param2.keyboard;
    int var24 = param2.keyboardHidden;
    int var25 = param2.mcc;
    int var26 = param2.mnc;
    int var27 = param2.navigation;
    int var28 = param2.navigationHidden;
    int var29 = param2.orientation;
    int var30 = param2.screenHeightDp;
    int var31 = param2.screenLayout;
    int var32 = param2.screenWidthDp;
    int var33 = param2.smallestScreenWidthDp;
    int var34 = param2.touchscreen;
    int var35 = param2.uiMode;
    LocaleList var40 = getLocales();
    boolean var42 = var40.isEmpty();
    boolean var43 = param2.userSetLocale;
    LocaleList var45 = getLocales();
    int var47 = var45.size();
    String var48 = this.mSupportedSystemLocales;
    Resources var50 = Resources.getSystem();
    AssetManager var52 = var50.getAssets();
    String var54 = var52.getLocales();
    this.mSupportedSystemLocales = var54;
    String var58 = this.mSupportedSystemLocales;
    int var60 = var45.getFirstMatchIndex(var58);
    int var62 = Math.max(0,var60);
    Locale var68 = var45.get(var63);
    String var70 = var68.toLanguageTag();
    SystemProperties.set(persist.sys.locale,var70);
    LocaleList.setDefault(var45,var63);
    -$$Lambda$ActivityTaskManagerService$U6g1UdnOPnEF9wX1OTm9nKVXY5k var74 = INSTANCE;
    Locale var76 = var45.get(var63);
    Message var78 = PooledLambda.obtainMessage(var74,this,var76);
    ActivityTaskManagerService$H var79 = this.mH;
    boolean var81 = var79.sendMessage(var78);<PATH_SEP>ActivityTaskManagerService var3 = this.mActivityTaskManager;
    boolean var5 = var3.updateConfiguration(param2);
    ActivityManagerInternal var3 = this.mAmInternal;
    WindowManagerGlobalLock var7 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerService var10 = this.mWindowManager;
    WindowManagerService var11 = this.mWindowManager;
    Configuration var13 = var11.computeNewConfiguration(0);
    WindowManagerService var17 = this.mWindowManager;
    -$$Lambda$ADNhW0r9Skcs9ezrOGURijI-lyQ var18 = INSTANCE;
    ActivityManagerInternal var19 = this.mAmInternal;
    Integer var21 = Integer.valueOf(0);
    Message var23 = PooledLambda.obtainMessage(var18,var19,var21);
    ActivityTaskManagerService$H var24 = this.mH;
    boolean var26 = var24.sendMessage(var23);
    long var31 = Binder.clearCallingIdentity();
    Settings$System.clearConfiguration(var15);
    ActivityTaskManagerService$UpdateConfigurationResult var35 = this.mTmpUpdateConfigurationResult;
    boolean var37 = updateConfigurationLocked(var15,0,0,0,-10000,0,var35);
    WindowManagerService var11 = this.mWindowManager;
    var11.deferSurfaceLayout();
    int var14 = updateGlobalConfigurationLocked(param2,param4,param5,param6,param7);
    Configuration var7 = this.mTempConfig;
    Configuration var9 = getGlobalConfiguration();
    var7.setTo(var9);
    Configuration var11 = this.mTempConfig;
    int var13 = var11.updateFrom(param2);
    int var19 = param2.colorMode;
    int var20 = param2.densityDpi;
    float var21 = param2.fontScale;
    int var22 = param2.hardKeyboardHidden;
    int var23 = param2.keyboard;
    int var24 = param2.keyboardHidden;
    int var25 = param2.mcc;
    int var26 = param2.mnc;
    int var27 = param2.navigation;
    int var28 = param2.navigationHidden;
    int var29 = param2.orientation;
    int var30 = param2.screenHeightDp;
    int var31 = param2.screenLayout;
    int var32 = param2.screenWidthDp;
    int var33 = param2.smallestScreenWidthDp;
    int var34 = param2.touchscreen;
    int var35 = param2.uiMode;
    LocaleList var40 = getLocales();
    boolean var42 = var40.isEmpty();
    boolean var43 = param2.userSetLocale;
    LocaleList var45 = getLocales();
    int var47 = var45.size();
    String var48 = this.mSupportedSystemLocales;
    Resources var50 = Resources.getSystem();
    AssetManager var52 = var50.getAssets();
    String var54 = var52.getLocales();
    this.mSupportedSystemLocales = var54;
    String var58 = this.mSupportedSystemLocales;
    int var60 = var45.getFirstMatchIndex(var58);
    int var62 = Math.max(0,var60);
    Locale var68 = var45.get(var63);
    String var70 = var68.toLanguageTag();
    SystemProperties.set(persist.sys.locale,var70);
    LocaleList.setDefault(var45,var63);
    -$$Lambda$ActivityTaskManagerService$U6g1UdnOPnEF9wX1OTm9nKVXY5k var74 = INSTANCE;
    Locale var76 = var45.get(var63);
    Message var78 = PooledLambda.obtainMessage(var74,this,var76);
    ActivityTaskManagerService$H var79 = this.mH;
    boolean var81 = var79.sendMessage(var78);
    Configuration var88 = this.mTempConfig;
    int var90 = increaseConfigurationSeqLocked();
    var88.seq = var90;
    RootActivityContainer var91 = this.mRootActivityContainer;
    Configuration var92 = this.mTempConfig;
    var91.onConfigurationChanged(var92);
    String var100 = Integer.toHexString(var13);
    Configuration var106 = this.mTempConfig;
    UsageStatsManagerInternal var114 = this.mUsageStatsInternal;
    Configuration var115 = this.mTempConfig;
    ActivityManagerInternal var116 = this.mAmInternal;
    int var118 = var116.getCurrentUserId();
    var114.reportConfigurationChange(var115,var118);
    Configuration var120 = this.mTempConfig;
    AttributeCache var123 = AttributeCache.instance();
    Configuration var124 = this.mTempConfig;
    var123.updateConfiguration(var124);
    ActivityThread var128 = this.mSystemThread;
    Configuration var129 = this.mTempConfig;
    var128.applyConfigurationToResources(var129);
    Configuration var131 = new Configuration();
    Configuration var132 = this.mTempConfig;
    WindowProcessControllerMap var148 = this.mProcessMap;
    SparseArray var150 = var148.getPidMap();
    int var152 = var150.size();
    var153 = var152 sub 1;
    -$$Lambda$swA_sUfSJdP8eC8AA9Iby3-SuOY var167 = INSTANCE;
    ActivityManagerInternal var168 = this.mAmInternal;
    Integer var170 = Integer.valueOf(var13);
    Boolean var172 = Boolean.valueOf(param3);
    Message var174 = PooledLambda.obtainMessage(var167,var168,var170,var172);
    ActivityTaskManagerService$H var175 = this.mH;
    boolean var177 = var175.sendMessage(var174);
    RootActivityContainer var178 = this.mRootActivityContainer;
    Configuration var180 = var178.getConfiguration();
    int var182 = performDisplayOverrideConfigUpdate(var180,param6,0);<PATH_SEP>ActivityTaskManagerService var3 = this.mActivityTaskManager;
    boolean var5 = var3.updateConfiguration(param2);
    ActivityManagerInternal var3 = this.mAmInternal;
    WindowManagerGlobalLock var7 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    WindowManagerService var10 = this.mWindowManager;
    WindowManagerService var11 = this.mWindowManager;
    Configuration var13 = var11.computeNewConfiguration(0);
    WindowManagerService var17 = this.mWindowManager;
    -$$Lambda$ADNhW0r9Skcs9ezrOGURijI-lyQ var18 = INSTANCE;
    ActivityManagerInternal var19 = this.mAmInternal;
    Integer var21 = Integer.valueOf(0);
    Message var23 = PooledLambda.obtainMessage(var18,var19,var21);
    ActivityTaskManagerService$H var24 = this.mH;
    boolean var26 = var24.sendMessage(var23);
    long var31 = Binder.clearCallingIdentity();
    Settings$System.clearConfiguration(var15);
    ActivityTaskManagerService$UpdateConfigurationResult var35 = this.mTmpUpdateConfigurationResult;
    boolean var37 = updateConfigurationLocked(var15,0,0,0,-10000,0,var35);
    WindowManagerService var11 = this.mWindowManager;
    var11.deferSurfaceLayout();
    int var14 = updateGlobalConfigurationLocked(param2,param4,param5,param6,param7);
    Configuration var7 = this.mTempConfig;
    Configuration var9 = getGlobalConfiguration();
    var7.setTo(var9);
    Configuration var11 = this.mTempConfig;
    int var13 = var11.updateFrom(param2);
    int var19 = param2.colorMode;
    int var20 = param2.densityDpi;
    float var21 = param2.fontScale;
    int var22 = param2.hardKeyboardHidden;
    int var23 = param2.keyboard;
    int var24 = param2.keyboardHidden;
    int var25 = param2.mcc;
    int var26 = param2.mnc;
    int var27 = param2.navigation;
    int var28 = param2.navigationHidden;
    int var29 = param2.orientation;
    int var30 = param2.screenHeightDp;
    int var31 = param2.screenLayout;
    int var32 = param2.screenWidthDp;
    int var33 = param2.smallestScreenWidthDp;
    int var34 = param2.touchscreen;
    int var35 = param2.uiMode;
    LocaleList var40 = getLocales();
    boolean var42 = var40.isEmpty();
    boolean var43 = param2.userSetLocale;
    LocaleList var45 = getLocales();
    int var47 = var45.size();
    String var48 = this.mSupportedSystemLocales;
    Resources var50 = Resources.getSystem();
    AssetManager var52 = var50.getAssets();
    String var54 = var52.getLocales();
    this.mSupportedSystemLocales = var54;
    String var58 = this.mSupportedSystemLocales;
    int var60 = var45.getFirstMatchIndex(var58);
    int var62 = Math.max(0,var60);
    Locale var68 = var45.get(var63);
    String var70 = var68.toLanguageTag();
    SystemProperties.set(persist.sys.locale,var70);
    LocaleList.setDefault(var45,var63);
    -$$Lambda$ActivityTaskManagerService$U6g1UdnOPnEF9wX1OTm9nKVXY5k var74 = INSTANCE;
    Locale var76 = var45.get(var63);
    Message var78 = PooledLambda.obtainMessage(var74,this,var76);
    ActivityTaskManagerService$H var79 = this.mH;
    boolean var81 = var79.sendMessage(var78);
    Configuration var88 = this.mTempConfig;
    int var90 = increaseConfigurationSeqLocked();
    var88.seq = var90;
    RootActivityContainer var91 = this.mRootActivityContainer;
    Configuration var92 = this.mTempConfig;
    var91.onConfigurationChanged(var92);
    String var100 = Integer.toHexString(var13);
    Configuration var106 = this.mTempConfig;
    UsageStatsManagerInternal var114 = this.mUsageStatsInternal;
    Configuration var115 = this.mTempConfig;
    ActivityManagerInternal var116 = this.mAmInternal;
    int var118 = var116.getCurrentUserId();
    var114.reportConfigurationChange(var115,var118);
    Configuration var120 = this.mTempConfig;
    AttributeCache var123 = AttributeCache.instance();
    Configuration var124 = this.mTempConfig;
    var123.updateConfiguration(var124);
    ActivityThread var128 = this.mSystemThread;
    Configuration var129 = this.mTempConfig;
    var128.applyConfigurationToResources(var129);
    Configuration var131 = new Configuration();
    Configuration var132 = this.mTempConfig;
    boolean var135 = Settings$System.hasInterestingConfigurationChanges(var13);{boolean var135 = Settings$System.hasInterestingConfigurationChanges(var13);};
    WindowProcessControllerMap var148 = this.mProcessMap;
    SparseArray var150 = var148.getPidMap();
    int var152 = var150.size();
    var153 = var152 sub 1;
    -$$Lambda$swA_sUfSJdP8eC8AA9Iby3-SuOY var167 = INSTANCE;
    ActivityManagerInternal var168 = this.mAmInternal;
    Integer var170 = Integer.valueOf(var13);
    Boolean var172 = Boolean.valueOf(param3);
    Message var174 = PooledLambda.obtainMessage(var167,var168,var170,var172);
    ActivityTaskManagerService$H var175 = this.mH;
    boolean var177 = var175.sendMessage(var174);
    RootActivityContainer var178 = this.mRootActivityContainer;
    Configuration var180 = var178.getConfiguration();
    int var182 = performDisplayOverrideConfigUpdate(var180,param6,0);
}