// API: startUserInBackground
// Service: ActivityManagerService_2

public void startUserInBackground() {
    boolean var5 = startUserInBackgroundWithListener(param2,0);
    UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,0,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    Object var104 = this.mLock;
    SparseArray var105 = this.mStartedUsers;
    Object var107 = var105.get(param2);
    UserState var108 = (UserState) var107;
    UserState var140 = new UserState();
    UserHandle var142 = UserHandle.of(param2);
    ProgressReporter var144 = var140.mUnlockProgress;
    UserController$UserProgressListener var145 = new UserController$UserProgressListener();
    var144.addListener(var145);
    SparseArray var148 = this.mStartedUsers;
    var148.put(param2,var140);
    updateStartedUserArrayLU();<PATH_SEP>boolean var5 = startUserInBackgroundWithListener(param2,0);
    UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,0,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    Object var104 = this.mLock;
    SparseArray var105 = this.mStartedUsers;
    Object var107 = var105.get(param2);
    UserState var108 = (UserState) var107;
    UserState var140 = new UserState();
    UserHandle var142 = UserHandle.of(param2);
    ProgressReporter var144 = var140.mUnlockProgress;
    UserController$UserProgressListener var145 = new UserController$UserProgressListener();
    var144.addListener(var145);
    SparseArray var148 = this.mStartedUsers;
    var148.put(param2,var140);
    updateStartedUserArrayLU();
    Integer var168 = Integer.valueOf(param2);
    ArrayList var169 = this.mUserLru;
    boolean var171 = var169.remove(var168);
    ArrayList var172 = this.mUserLru;
    boolean var174 = var172.add(var168);
    ProgressReporter var191 = var163.mUnlockProgress;
    var191.addListener(param4);
    UserController$Injector var195 = this.mInjector;
    UserManagerInternal var197 = var195.getUserManagerInternal();
    UserManagerInternal var2 = this.mUserManagerInternal;
    4 = load_metadata: <Application,Landroid/os/UserManagerInternal>;
    <Primordial,Ljava/lang/Class>;
    Object var6 = LocalServices.getService(var4);
    UserManagerInternal var7 = (UserManagerInternal) var6;
    this.mUserManagerInternal = var7;
    UserManagerInternal var9 = this.mUserManagerInternal;
    Landroid/os/UserManagerInternal var9<PATH_SEP>boolean var5 = startUserInBackgroundWithListener(param2,0);
    UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,0,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    Object var104 = this.mLock;
    SparseArray var105 = this.mStartedUsers;
    Object var107 = var105.get(param2);
    UserState var108 = (UserState) var107;
    UserState var140 = new UserState();
    UserHandle var142 = UserHandle.of(param2);
    ProgressReporter var144 = var140.mUnlockProgress;
    UserController$UserProgressListener var145 = new UserController$UserProgressListener();
    var144.addListener(var145);
    SparseArray var148 = this.mStartedUsers;
    var148.put(param2,var140);
    updateStartedUserArrayLU();
    Integer var168 = Integer.valueOf(param2);
    ArrayList var169 = this.mUserLru;
    boolean var171 = var169.remove(var168);
    ArrayList var172 = this.mUserLru;
    boolean var174 = var172.add(var168);
    ProgressReporter var191 = var163.mUnlockProgress;
    var191.addListener(param4);
    UserController$Injector var195 = this.mInjector;
    UserManagerInternal var197 = var195.getUserManagerInternal();
    UserManagerInternal var2 = this.mUserManagerInternal;
    UserManagerInternal var9 = this.mUserManagerInternal;
    Landroid/os/UserManagerInternal var9<PATH_SEP>boolean var5 = startUserInBackgroundWithListener(param2,0);
    UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,0,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    Object var104 = this.mLock;
    SparseArray var105 = this.mStartedUsers;
    Object var107 = var105.get(param2);
    UserState var108 = (UserState) var107;
    UserState var140 = new UserState();
    UserHandle var142 = UserHandle.of(param2);
    ProgressReporter var144 = var140.mUnlockProgress;
    UserController$UserProgressListener var145 = new UserController$UserProgressListener();
    var144.addListener(var145);
    SparseArray var148 = this.mStartedUsers;
    var148.put(param2,var140);
    updateStartedUserArrayLU();
    Integer var168 = Integer.valueOf(param2);
    ArrayList var169 = this.mUserLru;
    boolean var171 = var169.remove(var168);
    ArrayList var172 = this.mUserLru;
    boolean var174 = var172.add(var168);
    ProgressReporter var191 = var163.mUnlockProgress;
    var191.addListener(param4);
    UserController$Injector var195 = this.mInjector;
    UserManagerInternal var197 = var195.getUserManagerInternal();
    int var198 = var163.state;
    var197.setUserState(param2,var198);
    UserController$Injector var227 = this.mInjector;
    var227.reportGlobalUsageEventLocked(16);
    ActivityManagerService var3 = this.mService;
    ActivityManagerService.boostPriorityForLockedSection();
    ActivityManagerService var5 = this.mService;
    var5.reportGlobalUsageEventLocked(param2);
    ActivityManagerService.resetPriorityAfterLockedSection();
}