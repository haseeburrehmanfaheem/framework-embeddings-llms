// Method: getContentProviderExternal
// Service: ActivityManagerService_5

public void getContentProviderExternal() {
    UserController var9 = this.mUserController;
    int var11 = Binder.getCallingPid();
    int var13 = Binder.getCallingUid();
    int var18 = var9.handleIncomingUser(var11,var13,param3,0,2,getContentProvider,0);
    int var20 = Binder.getCallingUid();
    ContentProviderHolder var25 = getContentProviderExternalUnchecked(param2,param4,var20,var23,var18);
    ContentProviderHolder var10 = getContentProviderImpl(0,param2,param3,param4,0,param5,1,param6);
    ActivityManagerService.boostPriorityForLockedSection();
    long var13 = SystemClock.uptimeMillis();
    ProcessRecord var15 = getRecordForAppLocked(param2);
    checkTime(var13,getContentProviderImpl: getProviderByName);{checkTime(var13,getContentProviderImpl: getProviderByName);};
    ProviderMap var54 = this.mProviderMap;
    ContentProviderRecord var56 = var54.getProviderByName(param3,param9);
    ProviderMap var61 = this.mProviderMap;
    ContentProviderRecord var63 = var61.getProviderByName(param3,0);
    ProviderInfo var64 = var63.info;
    String var65 = var64.processName;
    ApplicationInfo var66 = var64.applicationInfo;
    String var67 = var64.name;
    int var76 = var64.flags;
    boolean var78 = isSingleton(var65,var66,var67,var76);
    int var7 = param3.uid;
    int var9 = UserHandle.getAppId(var7);
    var26 = param5 and 1073741824;
    int var27 = param3.uid;
    boolean var55<PATH_SEP>UserController var9 = this.mUserController;
    int var11 = Binder.getCallingPid();
    int var13 = Binder.getCallingUid();
    int var18 = var9.handleIncomingUser(var11,var13,param3,0,2,getContentProvider,0);
    int var20 = Binder.getCallingUid();
    ContentProviderHolder var25 = getContentProviderExternalUnchecked(param2,param4,var20,var23,var18);
    ContentProviderHolder var10 = getContentProviderImpl(0,param2,param3,param4,0,param5,1,param6);
    ActivityManagerService.boostPriorityForLockedSection();
    long var13 = SystemClock.uptimeMillis();
    ProcessRecord var15 = getRecordForAppLocked(param2);
    checkTime(var13,getContentProviderImpl: getProviderByName);{checkTime(var13,getContentProviderImpl: getProviderByName);};
    ProviderMap var54 = this.mProviderMap;
    ContentProviderRecord var56 = var54.getProviderByName(param3,param9);
    ProviderMap var61 = this.mProviderMap;
    ContentProviderRecord var63 = var61.getProviderByName(param3,0);
    ProviderInfo var64 = var63.info;
    String var65 = var64.processName;
    ApplicationInfo var66 = var64.applicationInfo;
    String var67 = var64.name;
    int var76 = var64.flags;
    boolean var78 = isSingleton(var65,var66,var67,var76);
    int var79 = var48.uid;
    ApplicationInfo var80 = var64.applicationInfo;
    int var81 = var80.uid;
    ProcessRecord var102 = var99.proc;
    ProcessRecord var103 = var99.proc;
    boolean var104 = var103.killed;
    ProcessRecord var106 = var99.proc;
    boolean var107 = var106.killed;
    ProcessRecord var108 = var99.proc;
    boolean var109 = var108.killedByAm;
    checkTime(var13,getContentProviderImpl: before appDied (killedByAm));{checkTime(var13,getContentProviderImpl: before appDied (killedByAm));};
    long var113 = Binder.clearCallingIdentity();
    ProcessRecord var114 = var99.proc;
    appDiedLocked(var114);
    Binder.restoreCallingIdentity(var113);
    checkTime(var13,getContentProviderImpl: after appDied (killedByAm));{checkTime(var13,getContentProviderImpl: after appDied (killedByAm));};
    ProviderInfo var131 = var99.info;
    boolean var134 = var99.canRunHere(var48);
    IPackageManager var139 = AppGlobals.getPackageManager();
    ProviderInfo var141 = var139.resolveContentProvider(param3,0,var97);
    ActivityManagerService.resetPriorityAfterLockedSection();<PATH_SEP>UserController var9 = this.mUserController;
    int var11 = Binder.getCallingPid();
    int var13 = Binder.getCallingUid();
    int var18 = var9.handleIncomingUser(var11,var13,param3,0,2,getContentProvider,0);
    int var20 = Binder.getCallingUid();
    ContentProviderHolder var25 = getContentProviderExternalUnchecked(param2,param4,var20,var23,var18);
    ContentProviderHolder var10 = getContentProviderImpl(0,param2,param3,param4,0,param5,1,param6);
    ActivityManagerService.boostPriorityForLockedSection();
    long var13 = SystemClock.uptimeMillis();
    ProcessRecord var15 = getRecordForAppLocked(param2);
    checkTime(var13,getContentProviderImpl: getProviderByName);{checkTime(var13,getContentProviderImpl: getProviderByName);};
    ProviderMap var54 = this.mProviderMap;
    ContentProviderRecord var56 = var54.getProviderByName(param3,param9);
    ProviderMap var61 = this.mProviderMap;
    ContentProviderRecord var63 = var61.getProviderByName(param3,0);
    ProviderInfo var64 = var63.info;
    String var65 = var64.processName;
    ApplicationInfo var66 = var64.applicationInfo;
    String var67 = var64.name;
    int var76 = var64.flags;
    boolean var78 = isSingleton(var65,var66,var67,var76);
    int var79 = var48.uid;
    ApplicationInfo var80 = var64.applicationInfo;
    int var81 = var80.uid;
    ProcessRecord var102 = var99.proc;
    ProcessRecord var103 = var99.proc;
    boolean var104 = var103.killed;
    ProcessRecord var106 = var99.proc;
    boolean var107 = var106.killed;
    ProcessRecord var108 = var99.proc;
    boolean var109 = var108.killedByAm;
    checkTime(var13,getContentProviderImpl: before appDied (killedByAm));{checkTime(var13,getContentProviderImpl: before appDied (killedByAm));};
    long var113 = Binder.clearCallingIdentity();
    ProcessRecord var114 = var99.proc;
    appDiedLocked(var114);
    Binder.restoreCallingIdentity(var113);
    checkTime(var13,getContentProviderImpl: after appDied (killedByAm));{checkTime(var13,getContentProviderImpl: after appDied (killedByAm));};
    ProviderInfo var131 = var99.info;
    boolean var134 = var99.canRunHere(var48);
    ContentProviderHolder var1131 = var99.newHolder(0);
    ContentProviderHolder var3 = new ContentProviderHolder();
    ProviderInfo var4 = this.info;
    IContentProvider var6 = this.provider;
    var3.provider = var6;
    boolean var7 = this.noReleaseNeeded;
    var3.noReleaseNeeded = var7;
    var3.connection = param2;<PATH_SEP>UserController var9 = this.mUserController;
    int var11 = Binder.getCallingPid();
    int var13 = Binder.getCallingUid();
    int var18 = var9.handleIncomingUser(var11,var13,param3,0,2,getContentProvider,0);
    int var20 = Binder.getCallingUid();
    ContentProviderHolder var25 = getContentProviderExternalUnchecked(param2,param4,var20,var23,var18);
    ContentProviderHolder var10 = getContentProviderImpl(0,param2,param3,param4,0,param5,1,param6);
    ActivityManagerService.boostPriorityForLockedSection();
    long var13 = SystemClock.uptimeMillis();
    ProcessRecord var15 = getRecordForAppLocked(param2);
    checkTime(var13,getContentProviderImpl: getProviderByName);{checkTime(var13,getContentProviderImpl: getProviderByName);};
    ProviderMap var54 = this.mProviderMap;
    ContentProviderRecord var56 = var54.getProviderByName(param3,param9);
    ProviderMap var61 = this.mProviderMap;
    ContentProviderRecord var63 = var61.getProviderByName(param3,0);
    ProviderInfo var64 = var63.info;
    String var65 = var64.processName;
    ApplicationInfo var66 = var64.applicationInfo;
    String var67 = var64.name;
    int var76 = var64.flags;
    boolean var78 = isSingleton(var65,var66,var67,var76);
    int var79 = var48.uid;
    ApplicationInfo var80 = var64.applicationInfo;
    int var81 = var80.uid;
    ProcessRecord var102 = var99.proc;
    ProcessRecord var103 = var99.proc;
    boolean var104 = var103.killed;
    ProcessRecord var106 = var99.proc;
    boolean var107 = var106.killed;
    ProcessRecord var108 = var99.proc;
    boolean var109 = var108.killedByAm;
    checkTime(var13,getContentProviderImpl: before appDied (killedByAm));{checkTime(var13,getContentProviderImpl: before appDied (killedByAm));};
    long var113 = Binder.clearCallingIdentity();
    ProcessRecord var114 = var99.proc;
    appDiedLocked(var114);
    Binder.restoreCallingIdentity(var113);
    checkTime(var13,getContentProviderImpl: after appDied (killedByAm));{checkTime(var13,getContentProviderImpl: after appDied (killedByAm));};
    ProviderInfo var131 = var99.info;
    boolean var134 = var99.canRunHere(var48);
    IPackageManager var139 = AppGlobals.getPackageManager();
    IPackageManager var2 = ActivityThread.getPackageManager();
    Landroid/content/pm/IPackageManager var2;
}