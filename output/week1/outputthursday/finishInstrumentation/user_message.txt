// API: finishInstrumentation
// Service: ActivityManagerService_4

public void finishInstrumentation() {
    int var6 = UserHandle.getCallingUserId();
    boolean var9 = hasFileDescriptors();
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var17 = getRecordForAppLocked(param2);
    long var19 = Binder.clearCallingIdentity();
    finishInstrumentationLocked(var17,param3,param4);
    ActiveInstrumentation var6 = getActiveInstrumentation();
    boolean var8 = var6.mFinished;
    IInstrumentationWatcher var9 = var6.mWatcher;
    Bundle var10 = var6.mCurResults;
    Bundle var11 = var6.mCurResults;
    var10.putAll(param4);
    InstrumentationReporter var15 = this.mInstrumentationReporter;
    IInstrumentationWatcher var16 = var6.mWatcher;
    ComponentName var17 = var6.mClass;
    var15.reportFinished(var16,var17,param3,var13);
    IUiAutomationConnection var21 = var6.mUiAutomationConnection;
    AppOpsService var22 = this.mAppOpsService;
    var22.setAppOpsServiceDelegate(0);
    PackageManagerInternal var25 = getPackageManagerInternalLocked();
    var25.setCheckPermissionDelegate(0);
    ActivityManagerService$MainHandler var27 = this.mHandler;
    IUiAutomationConnection var29 = var6.mUiAutomationConnection;
    Message var31 = var27.obtainMessage(56,var29);
    var31.sendToTarget();
    var6.mFinished = 1;
    var6.removeProcess(param2);
    setActiveInstrumentation(0);
    this.mInstr = param2;
    WindowProcessController var6 = this.mWindowProcessController;
    boolean var7 = param2.mHasBackgroundActivityStartsPermission;
    var6.setInstrumenting(var5,var8);
    this.mInstrumenting = param2;
    this.mInstrumentingWithBackgroundActivityStartPrivileges = param3;
}