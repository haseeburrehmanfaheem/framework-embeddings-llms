// API: attachApplication
// Service: ActivityManagerService_3

public void attachApplication() {
    ActivityManagerService.boostPriorityForLockedSection();
    int var10 = Binder.getCallingPid();
    int var12 = Binder.getCallingUid();
    long var14 = Binder.clearCallingIdentity();
    boolean var16 = attachApplicationLocked(param2,var10,var12,param3);
    long var7 = SystemClock.uptimeMillis();
    int var8 = MY_PID;
    ActivityManagerService$PidMap var11 = this.mPidsSelfLocked;
    ActivityManagerService$PidMap var12 = this.mPidsSelfLocked;
    ProcessRecord var14 = var12.get(param3);
    int var19 = var14.startUid;
    long var20 = var14.startSeq;
    var21 = var20 lt param5;
    ProcessList var23 = this.mProcessList;
    LongSparseArray var24 = var23.mPendingStarts;
    Object var26 = var24.get(param5);
    ProcessRecord var27 = (ProcessRecord) var26;
    String var28 = var27.processName;
    String var51 = var14.processName;
    long var56 = var14.startSeq;
    Object var65 = new Object(3);
    arraystore 65[10] = 66;
    int var67 = var14.startUid;
    Integer var69 = Integer.valueOf(var67);
    arraystore 65[70] = 69;
    arraystore 65[71] = 60;
    boolean var76 = cleanUpApplicationRecordLocked(var14,0,0,-1,1);
    removeLruProcessLocked(param2);
    int var9 = param2.pid;
    ProcessList.remove(var9);
    ArrayList var11 = this.mProcessesToGc;
    boolean var13 = var11.remove(param2);
    ArrayList var14 = this.mPendingPssProcesses;
    boolean var16 = var14.remove(param2);
    ProcessList$ProcStateMemTracker var17 = param2.procStateMemTracker;
    ProcessList.abortNextPssTime(var17);
    boolean var20 = param2.forceCrashReport;
    setCrashing(0);
    setNotResponding(0);
    ProcessStatsService var37 = this.mProcessStats;
    resetPackageList(var37);
    ProcessRecord$PackageList var3 = this.pkgList;
    int var5 = var3.size();
    ProcessState var6 = this.baseProcessTracker;
    long var21 = SystemClock.uptimeMillis();
    ProcessState var22 = this.baseProcessTracker;
    int var25 = getMemFactorLocked();
    ProcessRecord$PackageList var26 = this.pkgList;
    ArrayMap var27 = var26.mPkgList;
    var22.setState(-1,var25,var21,var27);
    ProcessRecord$PackageList var29 = this.pkgList;
    int var31 = var29.size();
    var32 = var31 sub 1;
    ProcessRecord$PackageList var72 = this.pkgList;
    var72.clear();
    ProcessStats$ProcessStateHolder var74 = new ProcessStats$ProcessStateHolder();
    ApplicationInfo var75 = this.info;
    long var76 = var75.longVersionCode;
    ApplicationInfo var78 = this.info;
    String var79 = var78.packageName;
    ApplicationInfo var80 = this.info;
    int var81 = var80.uid;
    ApplicationInfo var82 = this.info;
    long var83 = var82.longVersionCode;
    String var84 = this.processName;
    updateProcessStateHolderLocked(var74,var79,var81,var83,var84);
    ProcessRecord$PackageList var86 = this.pkgList;
    ApplicationInfo var87 = this.info;
    String var88 = var87.packageName;
    ProcessStats$ProcessStateHolder var90 = var86.put(var88,var74);
    ProcessState var91 = var74.state;
    ProcessState var92 = this.baseProcessTracker;
    ProcessState var93 = var74.state;
    var93.makeActive();
}