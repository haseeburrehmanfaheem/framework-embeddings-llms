// Method: unlockUser
// Service: ActivityManagerService_5

public void unlockUser() {
    UserController var6 = this.mUserController;
    boolean var8 = var6.unlockUser(param2,param3,param4,param5);
    UserController$Injector var6 = this.mInjector;
    long var40 = Binder.clearCallingIdentity();
    boolean var42 = unlockUserCleared(param2,param3,param4,param5);
    boolean var7 = StorageManager.isUserKeyUnlocked(param2);
    UserInfo var10 = getUserInfo(param2);
    UserController$Injector var11 = this.mInjector;
    IStorageManager var13 = var11.getStorageManager();
    int var14 = var10.serialNumber;
    var13.unlockUserKey(param2,var14,param3,param4);
    Object var36 = this.mLock;
    SparseArray var37 = this.mStartedUsers;
    Object var39 = var37.get(param2);
    UserState var40 = (UserState) var39;
    ProgressReporter var42 = var40.mUnlockProgress;
    var42.addListener(param5);
    var40.tokenProvided = var44;
    boolean var55 = finishUserUnlocking(var40);
    UserHandle var3 = param2.mHandle;
    int var5 = var3.getIdentifier();
    boolean var7 = StorageManager.isUserKeyUnlocked(var5);
    Object var9 = this.mLock;
    SparseArray var10 = this.mStartedUsers;
    Object var12 = var10.get(var5);
    int var13 = param2.state;
    ProgressReporter var15 = param2.mUnlockProgress;
    var15.start();
    ProgressReporter var17 = param2.mUnlockProgress;
    UserController$Injector var19 = this.mInjector;
    Context var21 = var19.getContext();
    String var24 = var21.getString(17039489);
    var17.setProgress(5,var24);
    Handler var27 = FgThread.getHandler();
    -$$Lambda$UserController$stQk1028ON105v_u-VMykVjcxLk var28 = new -$$Lambda$UserController$stQk1028ON105v_u-VMykVjcxLk();
    boolean var31 = var27.post(var28);<PATH_SEP>UserController var6 = this.mUserController;
    boolean var8 = var6.unlockUser(param2,param3,param4,param5);
    UserController$Injector var6 = this.mInjector;
    long var40 = Binder.clearCallingIdentity();
    boolean var42 = unlockUserCleared(param2,param3,param4,param5);
    boolean var7 = StorageManager.isUserKeyUnlocked(param2);
    UserInfo var10 = getUserInfo(param2);
    UserController$Injector var11 = this.mInjector;
    IStorageManager var13 = var11.getStorageManager();
    int var14 = var10.serialNumber;
    var13.unlockUserKey(param2,var14,param3,param4);
    Object var36 = this.mLock;
    SparseArray var37 = this.mStartedUsers;
    Object var39 = var37.get(param2);
    UserState var40 = (UserState) var39;
    ProgressReporter var42 = var40.mUnlockProgress;
    var42.addListener(param5);
    var40.tokenProvided = var44;
    boolean var55 = finishUserUnlocking(var40);
    UserController.notifyFinished(param2,param5);<PATH_SEP>UserController var6 = this.mUserController;
    boolean var8 = var6.unlockUser(param2,param3,param4,param5);
    UserController$Injector var6 = this.mInjector;
    long var40 = Binder.clearCallingIdentity();
    boolean var42 = unlockUserCleared(param2,param3,param4,param5);
    boolean var7 = StorageManager.isUserKeyUnlocked(param2);
    UserInfo var10 = getUserInfo(param2);
    UserController$Injector var11 = this.mInjector;
    IStorageManager var13 = var11.getStorageManager();
    int var14 = var10.serialNumber;
    var13.unlockUserKey(param2,var14,param3,param4);
    Object var36 = this.mLock;
    SparseArray var37 = this.mStartedUsers;
    Object var39 = var37.get(param2);
    UserState var40 = (UserState) var39;
    ProgressReporter var42 = var40.mUnlockProgress;
    var42.addListener(param5);
    var40.tokenProvided = var44;
    boolean var55 = finishUserUnlocking(var40);
    Object var56 = this.mLock;
    SparseArray var57 = this.mStartedUsers;
    int var59 = var57.size();
    [I var60 = new [I(var59);
    61 = arraylength 60;
    70 = arraylength 60;
    71 = arrayload 60[104];
    UserController$Injector var72 = this.mInjector;
    UserManagerService var74 = var72.getUserManager();
    UserInfo var76 = var74.getProfileParent(var71);<PATH_SEP>UserController var6 = this.mUserController;
    boolean var8 = var6.unlockUser(param2,param3,param4,param5);
    UserController$Injector var6 = this.mInjector;
    long var40 = Binder.clearCallingIdentity();
    boolean var42 = unlockUserCleared(param2,param3,param4,param5);
    boolean var7 = StorageManager.isUserKeyUnlocked(param2);
    UserInfo var10 = getUserInfo(param2);
    UserController$Injector var11 = this.mInjector;
    IStorageManager var13 = var11.getStorageManager();
    IBinder var4 = ServiceManager.getService(mount);
    IStorageManager var6 = IStorageManager$Stub.asInterface(var4);
    Landroid/os/storage/IStorageManager var6;
}